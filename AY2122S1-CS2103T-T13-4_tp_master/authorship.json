[{"path":"README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Kangxun"},"content":"[![CI Status](https://github.com/AY2122S1-CS2103T-T13-4/tp/workflows/Java%20CI/badge.svg)](https://github.com/AY2122S1-CS2103T-T13-4/tp/actions)","lastModifiedDate":"2021-10-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"![Ui](docs/images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"Kangxun"},"content":"# CallMeMaybe","lastModifiedDate":"2021-10-02"},{"lineNumber":6,"author":{"gitId":"Kangxun"},"content":"___","lastModifiedDate":"2021-10-02"},{"lineNumber":7,"author":{"gitId":"Kangxun"},"content":"* This is **a project by Software Engineering (SE) students**.\u003cbr\u003e","lastModifiedDate":"2021-10-02"},{"lineNumber":8,"author":{"gitId":"Kangxun"},"content":"* The project simulates an ongoing software project for a desktop application _designed for freelance telemarketers_ who need an easy to way to catalog their contacts.","lastModifiedDate":"2021-10-02"},{"lineNumber":9,"author":{"gitId":"-"},"content":"  * It is **written in OOP fashion**. It provides a **reasonably well-written** code base **bigger** (around 6 KLoC) than what students usually write in beginner-level SE modules, without being overwhelmingly big.","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"Kangxun"},"content":"  * It comes with a **decent level of user and developer documentation**.","lastModifiedDate":"2021-10-02"},{"lineNumber":11,"author":{"gitId":"Kangxun"},"content":"* It is named `CallMeMaybe` because it tracks who have been called in the huge list of people to call.","lastModifiedDate":"2021-10-02"},{"lineNumber":12,"author":{"gitId":"Kangxun"},"content":"* Check out the documentation at our [website](https://ay2122s1-cs2103t-t13-4.github.io/tp/)!","lastModifiedDate":"2021-10-01"},{"lineNumber":13,"author":{"gitId":"Kangxun"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":14,"author":{"gitId":"Kangxun"},"content":"### Project Adapted from AddressBook Level3","lastModifiedDate":"2021-10-02"},{"lineNumber":15,"author":{"gitId":"-"},"content":"* For the detailed documentation of this project, see the **[Address Book Product Website](https://se-education.org/addressbook-level3)**.","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"Kangxun"},"content":"* This project is a **part of the [se-education.org](https://se-education.org)** initiative.","lastModifiedDate":"2021-10-02"}],"authorContributionMap":{"Kangxun":11,"-":5}},{"path":"build.gradle","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2016-08-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00274.0.4\u0027","lastModifiedDate":"2019-02-28"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2016-12-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    id \u0027jacoco\u0027","lastModifiedDate":"2020-08-07"},{"lineNumber":7,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":9,"author":{"gitId":"-"},"content":"mainClassName \u003d \u0027seedu.address.Main\u0027","lastModifiedDate":"2019-02-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"sourceCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":12,"author":{"gitId":"-"},"content":"targetCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    maven { url \u0027https://oss.sonatype.org/content/repositories/snapshots/\u0027 }","lastModifiedDate":"2018-04-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2016-10-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.29\u0027","lastModifiedDate":"2020-05-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-10-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2018-03-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2018-03-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    finalizedBy jacocoTestReport","lastModifiedDate":"2020-08-07"},{"lineNumber":26,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-08-07"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-08-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"task coverage(type: JacocoReport) {","lastModifiedDate":"2020-08-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    sourceDirectories.from files(sourceSets.main.allSource.srcDirs)","lastModifiedDate":"2020-08-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    classDirectories.from files(sourceSets.main.output)","lastModifiedDate":"2020-08-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    executionData.from files(jacocoTestReport.executionData)","lastModifiedDate":"2020-08-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    afterEvaluate {","lastModifiedDate":"2020-08-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        classDirectories.from files(classDirectories.files.collect {","lastModifiedDate":"2020-08-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            fileTree(dir: it, exclude: [\u0027**/*.jar\u0027])","lastModifiedDate":"2020-08-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        })","lastModifiedDate":"2020-08-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    reports {","lastModifiedDate":"2020-08-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        html.enabled \u003d true","lastModifiedDate":"2020-08-07"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        xml.enabled \u003d true","lastModifiedDate":"2020-08-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-03-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    String jUnitVersion \u003d \u00275.4.0\u0027","lastModifiedDate":"2019-02-10"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2019-02-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.core\u0027, name: \u0027jackson-databind\u0027, version: \u00272.7.0\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.datatype\u0027, name: \u0027jackson-datatype-jsr310\u0027, version: \u00272.7.4\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":68,"author":{"gitId":"loose-bus-change"},"content":"run {","lastModifiedDate":"2021-10-21"},{"lineNumber":69,"author":{"gitId":"loose-bus-change"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2021-10-21"},{"lineNumber":70,"author":{"gitId":"loose-bus-change"},"content":"}","lastModifiedDate":"2021-10-21"},{"lineNumber":71,"author":{"gitId":"loose-bus-change"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2016-08-29"},{"lineNumber":73,"author":{"gitId":"houtenteo"},"content":"    archiveName \u003d \u0027CallMeMaybe.jar\u0027","lastModifiedDate":"2021-10-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"defaultTasks \u0027clean\u0027, \u0027test\u0027","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"houtenteo":1,"loose-bus-change":4,"-":71}},{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: About Us","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"We are a team based in the [School of Computing, National University of Singapore](http://www.comp.nus.edu.sg).","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"You can reach us at the email `seer[at]comp.nus.edu.sg`","lastModifiedDate":"2020-06-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"## Project team","lastModifiedDate":"2020-06-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"Kangxun"},"content":"### David Liu","lastModifiedDate":"2021-09-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"Kangxun"},"content":"\u003cimg src\u003d\"images/kangxun.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2021-09-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"Kangxun"},"content":"[[github](https://github.com/kangxun)]","lastModifiedDate":"2021-09-18"},{"lineNumber":17,"author":{"gitId":"Kangxun"},"content":"[[portfolio](team/kangxun.md)]","lastModifiedDate":"2021-09-18"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"* Role: Project Advisor","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"pranav-ganesh"},"content":"### Pranav Ganesh","lastModifiedDate":"2021-09-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"houtenteo"},"content":"\u003cimg src\u003d\"images/pranav-ganesh.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2021-09-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"pranav-ganesh"},"content":"[[github](https://github.com/pranav-ganesh)]","lastModifiedDate":"2021-09-18"},{"lineNumber":26,"author":{"gitId":"houtenteo"},"content":"[[portfolio](team/pranav-ganesh.md)]","lastModifiedDate":"2021-11-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"* Role: Team Lead","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"* Responsibilities: UI","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"houtenteo"},"content":"### Houten Teo","lastModifiedDate":"2021-09-18"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"houtenteo"},"content":"\u003cimg src\u003d\"images/houtenteo.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2021-09-30"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"houtenteo"},"content":"[[github](https://github.com/houtenteo)] ","lastModifiedDate":"2021-11-08"},{"lineNumber":36,"author":{"gitId":"houtenteo"},"content":"[[portfolio](team/houtenteo.md)]","lastModifiedDate":"2021-11-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"* Responsibilities: Data","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"idgrr"},"content":"### Irfan Danial","lastModifiedDate":"2021-09-18"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"houtenteo"},"content":"\u003cimg src\u003d\"images/idgrr.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2021-09-30"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"idgrr"},"content":"[[github](http://github.com/idgrr)]","lastModifiedDate":"2021-09-18"},{"lineNumber":46,"author":{"gitId":"idgrr"},"content":"[[portfolio](team/idgrr.md)]","lastModifiedDate":"2021-11-07"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"* Responsibilities: Dev Ops + Threading","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"loose-bus-change"},"content":"### Mulanur Subramanian Saketh","lastModifiedDate":"2021-09-18"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"loose-bus-change"},"content":"\u003cimg src\u003d\"images/loose-bus-change.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2021-09-18"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"loose-bus-change"},"content":"[[github](http://github.com/loose-bus-change)]","lastModifiedDate":"2021-09-18"},{"lineNumber":56,"author":{"gitId":"houtenteo"},"content":"[[portfolio](team/loose-bus-change.md)]","lastModifiedDate":"2021-11-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"loose-bus-change"},"content":"* Responsibilities: UI/Add function","lastModifiedDate":"2021-09-18"}],"authorContributionMap":{"houtenteo":8,"idgrr":3,"loose-bus-change":4,"pranav-ganesh":2,"-":38,"Kangxun":4}},{"path":"docs/DeveloperGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: Developer Guide","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":10,"author":{"gitId":"houtenteo"},"content":"## **Introduction**","lastModifiedDate":"2021-11-05"},{"lineNumber":11,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":12,"author":{"gitId":"loose-bus-change"},"content":"CallMeMaybe (CMM) is a **desktop app** that helps Telemarketers in customer contact management.","lastModifiedDate":"2021-11-08"},{"lineNumber":13,"author":{"gitId":"loose-bus-change"},"content":"CMM provides a solution to quickly catalog contacts based on whether they have already been called or not.","lastModifiedDate":"2021-11-08"},{"lineNumber":14,"author":{"gitId":"houtenteo"},"content":"The in-built tracking functionality serves as a reminder to reach back on previously unreachable customers.","lastModifiedDate":"2021-11-06"},{"lineNumber":15,"author":{"gitId":"houtenteo"},"content":"Importing and exporting of existing customer database is also supported by CMM to facilitate team-based environments.","lastModifiedDate":"2021-11-05"},{"lineNumber":16,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":17,"author":{"gitId":"houtenteo"},"content":"This Developer Guide (DG) aims to help developers better understand the architecture and design choices of CMM.","lastModifiedDate":"2021-11-05"},{"lineNumber":18,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":19,"author":{"gitId":"houtenteo"},"content":"The screenshot below shows the different components of the Ui. It would be helpful to take note of the different components","lastModifiedDate":"2021-11-08"},{"lineNumber":20,"author":{"gitId":"houtenteo"},"content":"as there will be references to these Ui components throughout this Developer Guide","lastModifiedDate":"2021-11-08"},{"lineNumber":21,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":22,"author":{"gitId":"houtenteo"},"content":"![Ui](images/Ui.png)","lastModifiedDate":"2021-11-08"},{"lineNumber":23,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":24,"author":{"gitId":"houtenteo"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-11-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"## **Acknowledgements**","lastModifiedDate":"2021-07-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":27,"author":{"gitId":"houtenteo"},"content":"* CMM is adapted from AddressBook-Level3 (AB3)","lastModifiedDate":"2021-11-05"},{"lineNumber":28,"author":{"gitId":"loose-bus-change"},"content":"* For the detailed documentation of AddressBook-Level3 project, see the [Address Book Product Website](https://se-education.org/addressbook-level3/)","lastModifiedDate":"2021-11-08"},{"lineNumber":29,"author":{"gitId":"houtenteo"},"content":"* Libraries used: JavaFX, Jackson, JUnit5","lastModifiedDate":"2021-11-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":31,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-07-30"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"## **Setting up, getting started**","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"Refer to the guide [_Setting up and getting started_](SettingUp.md).","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"## **Design**","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"loose-bus-change"},"content":":bulb: **Tip:** The `.puml` files used to create diagrams in this document can be found in the [diagrams](https://github.com/AY2122S1-CS2103T-T13-4/tp/tree/master/docs/diagrams) folder. Refer to the [_PlantUML Tutorial_ at se-edu/guides](https://se-education.org/guides/tutorials/plantUml.html) to learn how to create and edit diagrams.","lastModifiedDate":"2021-11-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"houtenteo"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2021-11-08"},{"lineNumber":47,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"### Architecture","lastModifiedDate":"2021-07-31"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureDiagram.png\" width\u003d\"280\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"The ***Architecture Diagram*** given above explains the high-level design of the App.","lastModifiedDate":"2021-07-31"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"loose-bus-change"},"content":"Given below is a quick overview of the main components and how they interact with each other.","lastModifiedDate":"2021-11-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":56,"author":{"gitId":"-"},"content":"**Main components of the architecture**","lastModifiedDate":"2021-07-31"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"loose-bus-change"},"content":"**`Main`** has two classes called [`Main`](https://github.com/AY2122S1-CS2103T-T13-4/tp/blob/master/src/main/java/seedu/address/Main.java) and [`MainApp`](https://github.com/AY2122S1-CS2103T-T13-4/tp/blob/master/src/main/java/seedu/address/MainApp.java). They are responsible for:","lastModifiedDate":"2021-11-08"},{"lineNumber":59,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"* At app launch: Initializes the components in the correct sequence, and connects them up with each other.","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"* At shut down: Shuts down the components and invokes cleanup methods where necessary.","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"[**`Commons`**](#common-classes) represents a collection of classes used by multiple other components.","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"The rest of the App consists of four components.","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"* [**`UI`**](#ui-component): The UI of the App.","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"* [**`Logic`**](#logic-component): The command executor.","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"* [**`Model`**](#model-component): Holds the data of the App in memory.","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"* [**`Storage`**](#storage-component): Reads data from, and writes data to, the hard disk.","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"**How the architecture components interact with each other**","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"The *Sequence Diagram* below shows how the components interact with each other for the scenario where the user issues the command `delete 1`.","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureSequenceDiagram.png\" width\u003d\"574\" /\u003e","lastModifiedDate":"2020-06-07"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"Each of the four main components (also shown in the diagram above),","lastModifiedDate":"2021-07-31"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":85,"author":{"gitId":"-"},"content":"* defines its *API* in an `interface` with the same name as the Component.","lastModifiedDate":"2021-07-31"},{"lineNumber":86,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":87,"author":{"gitId":"-"},"content":"* implements its functionality using a concrete `{Component Name}Manager` class (which follows the corresponding API `interface` mentioned in the previous point.","lastModifiedDate":"2021-07-31"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":89,"author":{"gitId":"houtenteo"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2021-11-08"},{"lineNumber":90,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"For example, the `Logic` component defines its API in the `Logic.java` interface and implements its functionality using the `LogicManager.java` class which follows the `Logic` interface. Other components interact with a given component through its interface rather than the concrete class (reason: to prevent outside component\u0027s being coupled to the implementation of a component), as illustrated in the (partial) class diagram below.","lastModifiedDate":"2021-07-31"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":93,"author":{"gitId":"idgrr"},"content":"\u003cimg src\u003d\"images/ComponentManagers.png\" width\u003d\"300\" align\u003d\"center\"/\u003e","lastModifiedDate":"2021-11-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":95,"author":{"gitId":"-"},"content":"The sections below give more details of each component.","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"houtenteo"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2021-11-08"},{"lineNumber":98,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"### UI component","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"loose-bus-change"},"content":"The **API** of this component is specified in [`Ui.java`](https://github.com/AY2122S1-CS2103T-T13-4/tp/blob/master/src/main/java/seedu/address/ui/Ui.java)","lastModifiedDate":"2021-11-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"![Structure of the UI Component](images/UiClassDiagram.png)","lastModifiedDate":"2021-07-31"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"The UI consists of a `MainWindow` that is made up of parts e.g.`CommandBox`, `ResultDisplay`, `PersonListPanel`, `StatusBarFooter` etc. All these, including the `MainWindow`, inherit from the abstract `UiPart` class which captures the commonalities between classes that represent parts of the visible GUI.","lastModifiedDate":"2021-07-31"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"houtenteo"},"content":"The `UI` component uses the JavaFx UI framework. The layout of these UI parts are defined in matching `.fxml` files that are in the `src/main/resources/view` folder. ","lastModifiedDate":"2021-11-08"},{"lineNumber":108,"author":{"gitId":"houtenteo"},"content":"For example, the layout of the [`MainWindow`](https://github.com/AY2122S1-CS2103T-T13-4/tp/blob/master/src/main/java/seedu/address/ui/MainWindow.java) ","lastModifiedDate":"2021-11-08"},{"lineNumber":109,"author":{"gitId":"houtenteo"},"content":"is specified in [`MainWindow.fxml`](https://github.com/AY2122S1-CS2103T-T13-4/tp/blob/master/src/main/resources/view/MainWindow.fxml)","lastModifiedDate":"2021-11-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"The `UI` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":"* executes user commands using the `Logic` component.","lastModifiedDate":"2021-07-31"},{"lineNumber":114,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"* listens for changes to `Model` data so that the UI can be updated with the modified data.","lastModifiedDate":"2021-07-31"},{"lineNumber":116,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"* keeps a reference to the `Logic` component, because the `UI` relies on the `Logic` to execute commands.","lastModifiedDate":"2021-07-31"},{"lineNumber":118,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component, as it displays `Person` object residing in the `Model`.","lastModifiedDate":"2021-07-31"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"houtenteo"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2021-11-08"},{"lineNumber":122,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"### Logic component","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"loose-bus-change"},"content":"**API** : [`Logic.java`](https://github.com/AY2122S1-CS2103T-T13-4/tp/blob/master/src/main/java/seedu/address/logic/Logic.java)","lastModifiedDate":"2021-11-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"Here\u0027s a (partial) class diagram of the `Logic` component:","lastModifiedDate":"2021-07-31"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":129,"author":{"gitId":"idgrr"},"content":"\u003cimg src\u003d\"images/LogicClassDiagram.png\" width\u003d\"550\" align\u003d\"center\"/\u003e","lastModifiedDate":"2021-11-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"How the `Logic` component works:","lastModifiedDate":"2021-07-31"},{"lineNumber":132,"author":{"gitId":"-"},"content":"1. When `Logic` is called upon to execute a command, it uses the `AddressBookParser` class to parse the user command.","lastModifiedDate":"2021-07-31"},{"lineNumber":133,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":134,"author":{"gitId":"houtenteo"},"content":"2. This results in a `Command` object (more precisely, an object of one of its subclasses e.g., `AddCommand`) which is executed by the `LogicManager`.","lastModifiedDate":"2021-11-08"},{"lineNumber":135,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":136,"author":{"gitId":"houtenteo"},"content":"3. The command can communicate with the `Model` when it is executed (e.g. to add a contact).","lastModifiedDate":"2021-11-08"},{"lineNumber":137,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":138,"author":{"gitId":"houtenteo"},"content":"4. The result of the command execution is encapsulated as a `CommandResult` object which is returned back from `Logic`.","lastModifiedDate":"2021-11-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":140,"author":{"gitId":"-"},"content":"The Sequence Diagram below illustrates the interactions within the `Logic` component for the `execute(\"delete 1\")` API call.","lastModifiedDate":"2021-07-31"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":142,"author":{"gitId":"-"},"content":"![Interactions Inside the Logic Component for the `delete 1` Command](images/DeleteSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"idgrr"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source:","lastModifiedDate":"2021-11-08"},{"lineNumber":145,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":146,"author":{"gitId":"idgrr"},"content":"**Note:**\u003cbr\u003e","lastModifiedDate":"2021-11-08"},{"lineNumber":147,"author":{"gitId":"idgrr"},"content":"The lifeline for `DeleteCommandParser` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2021-11-08"},{"lineNumber":148,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"houtenteo"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2021-11-08"},{"lineNumber":151,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":152,"author":{"gitId":"Kangxun"},"content":"Here are the other classes in `Logic` (omitted from the class diagram of the `Logic` component above) that are used for parsing a user command:","lastModifiedDate":"2021-10-26"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":154,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ParserClasses.png\" width\u003d\"600\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"How the parsing works:","lastModifiedDate":"2021-07-31"},{"lineNumber":157,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":158,"author":{"gitId":"houtenteo"},"content":"* When called upon to parse a user command, the `AddressBookParser` class creates an `XYZCommandParser` ","lastModifiedDate":"2021-11-08"},{"lineNumber":159,"author":{"gitId":"houtenteo"},"content":"(`XYZ` is a placeholder for the specific command name e.g., `AddCommandParser`) which uses the other classes shown above to parse the user command ","lastModifiedDate":"2021-11-08"},{"lineNumber":160,"author":{"gitId":"houtenteo"},"content":"and create a `XYZCommand` object (e.g., `AddCommand`) which the `AddressBookParser` returns back as a `Command` object.","lastModifiedDate":"2021-11-08"},{"lineNumber":161,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":162,"author":{"gitId":"-"},"content":"* All `XYZCommandParser` classes (e.g., `AddCommandParser`, `DeleteCommandParser`, ...) inherit from the `Parser` interface so that they can be treated similarly where possible e.g, during testing.","lastModifiedDate":"2021-07-31"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"houtenteo"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2021-11-08"},{"lineNumber":165,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":166,"author":{"gitId":"Kangxun"},"content":"Additionally, here are other classes in `Logic` (omitted from the class diagram of the `Logic` component above) that are used for comparing `Person` objects which are part of the `Model` component:","lastModifiedDate":"2021-10-26"},{"lineNumber":167,"author":{"gitId":"Kangxun"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":168,"author":{"gitId":"Kangxun"},"content":"\u003cimg src\u003d\"images/ComparatorClasses.png\" width\u003d\"600\"/\u003e","lastModifiedDate":"2021-10-26"},{"lineNumber":169,"author":{"gitId":"Kangxun"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":170,"author":{"gitId":"Kangxun"},"content":"How the comparing works:","lastModifiedDate":"2021-10-26"},{"lineNumber":171,"author":{"gitId":"houtenteo"},"content":"* When called upon to compare contacts, the `PersonComparator` class creates an `XYZComparator` ","lastModifiedDate":"2021-11-08"},{"lineNumber":172,"author":{"gitId":"houtenteo"},"content":"(`XYZ` is a placeholder for the specific comparator name e.g., `GenderComparator`). The `PersonComparator` returns the `XYZComparator` object as a `Comparator` object.","lastModifiedDate":"2021-11-08"},{"lineNumber":173,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":174,"author":{"gitId":"Kangxun"},"content":"* All `XYZComparator` classes (e.g., `GenderComparator`, `CalledComparator`, ...) inherit from the `Comparator` interface so that they can be treated similarly where possible e.g, during testing.","lastModifiedDate":"2021-10-26"},{"lineNumber":175,"author":{"gitId":"Kangxun"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":176,"author":{"gitId":"houtenteo"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2021-11-08"},{"lineNumber":177,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":178,"author":{"gitId":"-"},"content":"### Model component","lastModifiedDate":"2021-07-31"},{"lineNumber":179,"author":{"gitId":"loose-bus-change"},"content":"**API** : [`Model.java`](https://github.com/AY2122S1-CS2103T-T13-4/tp/blob/master/src/main/java/seedu/address/model/Model.java)","lastModifiedDate":"2021-11-08"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ModelClassDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"The `Model` component,","lastModifiedDate":"2021-07-31"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":186,"author":{"gitId":"-"},"content":"* stores the address book data i.e., all `Person` objects (which are contained in a `UniquePersonList` object).","lastModifiedDate":"2021-07-31"},{"lineNumber":187,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":188,"author":{"gitId":"houtenteo"},"content":"* stores the currently \u0027selected\u0027 `Person` objects (e.g., results of a search query) as a separate _filtered_ list which is exposed to outsiders ","lastModifiedDate":"2021-11-08"},{"lineNumber":189,"author":{"gitId":"houtenteo"},"content":"as an unmodifiable `ObservableList\u003cPerson\u003e` that can be \u0027observed\u0027 e.g. the UI can be bound to this list so that the UI automatically updates when ","lastModifiedDate":"2021-11-08"},{"lineNumber":190,"author":{"gitId":"houtenteo"},"content":"the data in the list change.","lastModifiedDate":"2021-11-08"},{"lineNumber":191,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":192,"author":{"gitId":"-"},"content":"* stores a `UserPref` object that represents the user’s preferences. This is exposed to the outside as a `ReadOnlyUserPref` objects.","lastModifiedDate":"2021-07-31"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":194,"author":{"gitId":"houtenteo"},"content":"* does not depend on any of the other three components (as the `Model` represents data entities of the domain, ","lastModifiedDate":"2021-11-08"},{"lineNumber":195,"author":{"gitId":"houtenteo"},"content":"they should make sense on their own without depending on other components)","lastModifiedDate":"2021-11-08"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":197,"author":{"gitId":"houtenteo"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2021-11-08"},{"lineNumber":198,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":199,"author":{"gitId":"idgrr"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source:","lastModifiedDate":"2021-11-08"},{"lineNumber":200,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":201,"author":{"gitId":"idgrr"},"content":"**Note:**\u003cbr\u003e","lastModifiedDate":"2021-11-08"},{"lineNumber":202,"author":{"gitId":"houtenteo"},"content":"An alternative (arguably, a more OOP) model is given below. It has an `Interest` list in the `AddressBook`, which `InterestsList` references. ","lastModifiedDate":"2021-11-08"},{"lineNumber":203,"author":{"gitId":"houtenteo"},"content":"This allows `AddressBook` to only require one `Interest` object per unique interest, instead of each `InterestsList` needing their own `Interest` objects.\u003cbr\u003e","lastModifiedDate":"2021-11-08"},{"lineNumber":204,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":205,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/BetterModelClassDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":206,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":207,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":208,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":209,"author":{"gitId":"houtenteo"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2021-11-08"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":"### Storage component","lastModifiedDate":"2020-05-23"},{"lineNumber":212,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":213,"author":{"gitId":"loose-bus-change"},"content":"**API** : [`Storage.java`](https://github.com/AY2122S1-CS2103T-T13-4/tp/blob/master/src/main/java/seedu/address/storage/Storage.java)","lastModifiedDate":"2021-11-08"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":215,"author":{"gitId":"idgrr"},"content":"![Storage Class Diagram](images/StorageClassDiagram.png)","lastModifiedDate":"2021-11-08"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":217,"author":{"gitId":"-"},"content":"The `Storage` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":219,"author":{"gitId":"-"},"content":"* can save both address book data and user preference data in json format, and read them back into corresponding objects.","lastModifiedDate":"2021-07-31"},{"lineNumber":220,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":221,"author":{"gitId":"idgrr"},"content":"* can export and import into address book data in CSV format, and read them back into corresponding objects.","lastModifiedDate":"2021-11-07"},{"lineNumber":222,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":223,"author":{"gitId":"houtenteo"},"content":"* inherits from both `AddressBookStorage`, `UserPrefStorage` and `ImportExportStorage`, which means it can be treated as either one ","lastModifiedDate":"2021-11-08"},{"lineNumber":224,"author":{"gitId":"houtenteo"},"content":"(if only the functionality of only one is needed).","lastModifiedDate":"2021-11-08"},{"lineNumber":225,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":226,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component (because the `Storage` component\u0027s job is to save/retrieve objects that belong to the `Model`)","lastModifiedDate":"2021-07-21"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":"### Common classes","lastModifiedDate":"2020-05-23"},{"lineNumber":229,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"houtenteo"},"content":"Classes used by multiple components are in the `seedu.address.commons` package.","lastModifiedDate":"2021-11-08"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"-"},"content":"## **Implementation**","lastModifiedDate":"2020-05-23"},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":"This section describes some noteworthy details on how certain features are implemented.","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":238,"author":{"gitId":"houtenteo"},"content":"### Add feature","lastModifiedDate":"2021-10-18"},{"lineNumber":239,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":240,"author":{"gitId":"houtenteo"},"content":"The add feature is facilitated by the LogicManager. The `AddCommandParser#parse()` is used to parse the","lastModifiedDate":"2021-11-08"},{"lineNumber":241,"author":{"gitId":"houtenteo"},"content":"command arguments and returns a FindCommand object.The `LogicManager#execute()` then executes the AddCommand.","lastModifiedDate":"2021-11-08"},{"lineNumber":242,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":243,"author":{"gitId":"houtenteo"},"content":"This feature allows the user to add a contact into the CMM database.","lastModifiedDate":"2021-11-08"},{"lineNumber":244,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":245,"author":{"gitId":"houtenteo"},"content":"**Given below is an example usage scenario and how the add mechanism behaves at each step.**","lastModifiedDate":"2021-11-08"},{"lineNumber":246,"author":{"gitId":"loose-bus-change"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":247,"author":{"gitId":"houtenteo"},"content":"1. The user opens the application and views the list of contacts. He wants to add more another contact into the list.","lastModifiedDate":"2021-11-08"},{"lineNumber":248,"author":{"gitId":"houtenteo"},"content":"They enters the command `add n/bob e/email@email.com p/999`","lastModifiedDate":"2021-11-08"},{"lineNumber":249,"author":{"gitId":"loose-bus-change"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":250,"author":{"gitId":"houtenteo"},"content":"2. Command entered by user is passed into the LogicManager","lastModifiedDate":"2021-11-08"},{"lineNumber":251,"author":{"gitId":"loose-bus-change"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":252,"author":{"gitId":"houtenteo"},"content":"3. AddressBookParser parses the command","lastModifiedDate":"2021-11-08"},{"lineNumber":253,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":254,"author":{"gitId":"houtenteo"},"content":"4. AddressBookParser creates an AddCommand and a new Person with the fields specified by the user","lastModifiedDate":"2021-11-08"},{"lineNumber":255,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":256,"author":{"gitId":"houtenteo"},"content":"5. LogicManager executes the AddCommand and the new Person is added into the address book","lastModifiedDate":"2021-11-08"},{"lineNumber":257,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":258,"author":{"gitId":"houtenteo"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2021-11-08"},{"lineNumber":259,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":260,"author":{"gitId":"houtenteo"},"content":"The Sequence Diagram below illustrates the interactions within the Logic component for the `execute(\"add n/bob e/email@email.com p/999\")` API call.","lastModifiedDate":"2021-11-03"},{"lineNumber":261,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":262,"author":{"gitId":"idgrr"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source:","lastModifiedDate":"2021-11-08"},{"lineNumber":263,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":264,"author":{"gitId":"idgrr"},"content":"**Note:**\u003cbr\u003e","lastModifiedDate":"2021-11-08"},{"lineNumber":265,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":266,"author":{"gitId":"houtenteo"},"content":"Due to the length of the arguments, we have decided to replace the line \"n/bob e/email@email.com p/999\"","lastModifiedDate":"2021-11-03"},{"lineNumber":267,"author":{"gitId":"houtenteo"},"content":"with `...` within the diagram for easier viewing.","lastModifiedDate":"2021-11-08"},{"lineNumber":268,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":269,"author":{"gitId":"houtenteo"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-11-03"},{"lineNumber":270,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":271,"author":{"gitId":"houtenteo"},"content":"![Interactions Inside the Logic Component for the `add\u0027 Command](images/AddSequenceDiagram.png)","lastModifiedDate":"2021-10-18"},{"lineNumber":272,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":273,"author":{"gitId":"houtenteo"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source:","lastModifiedDate":"2021-11-08"},{"lineNumber":274,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":275,"author":{"gitId":"houtenteo"},"content":"**Note:**\u003cbr\u003e","lastModifiedDate":"2021-11-08"},{"lineNumber":276,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":277,"author":{"gitId":"houtenteo"},"content":"The lifeline for `AddCommandParser` should end at the destroy marker (X). But due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2021-11-08"},{"lineNumber":278,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":279,"author":{"gitId":"houtenteo"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-11-08"},{"lineNumber":280,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":281,"author":{"gitId":"houtenteo"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2021-11-08"},{"lineNumber":282,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":283,"author":{"gitId":"houtenteo"},"content":"The activity diagram below summarises what happens when a user executes an Add Command.","lastModifiedDate":"2021-11-03"},{"lineNumber":284,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":285,"author":{"gitId":"houtenteo"},"content":"![Add command activity diagram](images/AddActivityDiagram.png)","lastModifiedDate":"2021-11-03"},{"lineNumber":286,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":287,"author":{"gitId":"houtenteo"},"content":"#### Design considerations:","lastModifiedDate":"2021-10-18"},{"lineNumber":288,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":289,"author":{"gitId":"houtenteo"},"content":"**Aspect: Compulsory fields:**","lastModifiedDate":"2021-10-18"},{"lineNumber":290,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":291,"author":{"gitId":"houtenteo"},"content":"* **Alternative 1 (current choice):** 3 compulsory fields","lastModifiedDate":"2021-10-18"},{"lineNumber":292,"author":{"gitId":"loose-bus-change"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":293,"author":{"gitId":"Kangxun"},"content":"    * Compulsory fields: `Name`, `Email`, `Phone`.","lastModifiedDate":"2021-10-26"},{"lineNumber":294,"author":{"gitId":"loose-bus-change"},"content":"  ","lastModifiedDate":"2021-11-08"},{"lineNumber":295,"author":{"gitId":"houtenteo"},"content":"    * Non-Compulsory fields: `Address`, `Gender`, `Age`, `Interest`.","lastModifiedDate":"2021-10-18"},{"lineNumber":296,"author":{"gitId":"loose-bus-change"},"content":"  ","lastModifiedDate":"2021-11-08"},{"lineNumber":297,"author":{"gitId":"houtenteo"},"content":"    * Pros: Improves User Experience by minimising the number of fields the user is required to fill.","lastModifiedDate":"2021-10-18"},{"lineNumber":298,"author":{"gitId":"loose-bus-change"},"content":"  ","lastModifiedDate":"2021-11-08"},{"lineNumber":299,"author":{"gitId":"houtenteo"},"content":"    * Cons: Slightly more complicated implementation.","lastModifiedDate":"2021-10-18"},{"lineNumber":300,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":301,"author":{"gitId":"loose-bus-change"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":302,"author":{"gitId":"houtenteo"},"content":"* **Alternative 2:** All 7 fields are compulsory","lastModifiedDate":"2021-10-18"},{"lineNumber":303,"author":{"gitId":"loose-bus-change"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":304,"author":{"gitId":"houtenteo"},"content":"    * Pros: Easier to implement.","lastModifiedDate":"2021-10-18"},{"lineNumber":305,"author":{"gitId":"loose-bus-change"},"content":"  ","lastModifiedDate":"2021-11-08"},{"lineNumber":306,"author":{"gitId":"houtenteo"},"content":"    * Cons: Having to enter every field can be time-consuming for the user.","lastModifiedDate":"2021-10-18"},{"lineNumber":307,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":308,"author":{"gitId":"idgrr"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source:","lastModifiedDate":"2021-11-08"},{"lineNumber":309,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":310,"author":{"gitId":"idgrr"},"content":"**Note:**\u003cbr\u003e","lastModifiedDate":"2021-11-08"},{"lineNumber":311,"author":{"gitId":"idgrr"},"content":"Since there is little reason for telemarketers to add a contact","lastModifiedDate":"2021-11-08"},{"lineNumber":312,"author":{"gitId":"idgrr"},"content":"who has already been called into the address book, all new contacts added will have their `Called` field set to false by default. Hence there","lastModifiedDate":"2021-11-08"},{"lineNumber":313,"author":{"gitId":"idgrr"},"content":"is no need for the user to specify the Called field.","lastModifiedDate":"2021-11-05"},{"lineNumber":314,"author":{"gitId":"houtenteo"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-10-18"},{"lineNumber":315,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":316,"author":{"gitId":"Kangxun"},"content":"As the app is catered towards telemarketers, the `Name`, `Email` and `Phone` fields were kept as compulsory as they are important contact information for telemarketers.","lastModifiedDate":"2021-10-26"},{"lineNumber":317,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":318,"author":{"gitId":"houtenteo"},"content":"On the other hand, `Address`, `Gender`, `Age` and `Interest` are seen as complementary fields. Hence, they are non-compulsory.","lastModifiedDate":"2021-10-18"},{"lineNumber":319,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":320,"author":{"gitId":"houtenteo"},"content":"The current split of compulsory and non-compulsory fields allows us to maintain the minimal amount of information required by telemarketers while","lastModifiedDate":"2021-10-18"},{"lineNumber":321,"author":{"gitId":"loose-bus-change"},"content":"also improving user experience by reducing time required for users to type the command.","lastModifiedDate":"2021-11-08"},{"lineNumber":322,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":323,"author":{"gitId":"houtenteo"},"content":"### FindAll/FindAny feature","lastModifiedDate":"2021-11-03"},{"lineNumber":324,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":325,"author":{"gitId":"houtenteo"},"content":"The find feature is facilitated by the LogicManager. The `Find(Any/All)CommandParser#parse()` is used to parse the","lastModifiedDate":"2021-11-08"},{"lineNumber":326,"author":{"gitId":"houtenteo"},"content":"command arguments and returns a DisplayCommand object.The `LogicManager#execute()` then executes the Find(All/Any)Command.","lastModifiedDate":"2021-11-08"},{"lineNumber":327,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":328,"author":{"gitId":"houtenteo"},"content":"This feature finds any contact that matches the fields specified by the user.","lastModifiedDate":"2021-11-08"},{"lineNumber":329,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":330,"author":{"gitId":"houtenteo"},"content":"**Given below is an example usage scenario and how the find mechanism behaves at each step.**","lastModifiedDate":"2021-11-08"},{"lineNumber":331,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":332,"author":{"gitId":"houtenteo"},"content":"1. The user opens the application and views the list of contacts. He wants to find a specific contact in the list and ","lastModifiedDate":"2021-11-08"},{"lineNumber":333,"author":{"gitId":"houtenteo"},"content":"enters the command `findAny n/alex`","lastModifiedDate":"2021-11-08"},{"lineNumber":334,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":335,"author":{"gitId":"houtenteo"},"content":"2. Command entered by user is passed into the LogicManager (i.e. `findAny n/alex g/m` or `findAll n/alice g/f`)","lastModifiedDate":"2021-11-08"},{"lineNumber":336,"author":{"gitId":"loose-bus-change"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":337,"author":{"gitId":"houtenteo"},"content":"3. AddressBookParser parses the command","lastModifiedDate":"2021-11-08"},{"lineNumber":338,"author":{"gitId":"loose-bus-change"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":339,"author":{"gitId":"houtenteo"},"content":"4. AddressBookParser creates a FindAny/FindAll command with the respective predicates depending on the fields specified by the user","lastModifiedDate":"2021-11-08"},{"lineNumber":340,"author":{"gitId":"loose-bus-change"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":341,"author":{"gitId":"houtenteo"},"content":"5. LogicManager executes the Find command and the model updates the filtered list of contacts with the new predicates","lastModifiedDate":"2021-11-08"},{"lineNumber":342,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":343,"author":{"gitId":"houtenteo"},"content":"The Sequence Diagram below illustrates the interactions within the Logic component for the `execute(\"findAny n/alex\")` API call.","lastModifiedDate":"2021-11-08"},{"lineNumber":344,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":345,"author":{"gitId":"idgrr"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source:","lastModifiedDate":"2021-11-08"},{"lineNumber":346,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":347,"author":{"gitId":"idgrr"},"content":"**Note:**\u003cbr\u003e","lastModifiedDate":"2021-11-08"},{"lineNumber":348,"author":{"gitId":"idgrr"},"content":"While only the `findAny` command was used for the examples below, the `findAll` command works exactly the same way","lastModifiedDate":"2021-11-08"},{"lineNumber":349,"author":{"gitId":"houtenteo"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-11-03"},{"lineNumber":350,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":351,"author":{"gitId":"houtenteo"},"content":"![Interactions Inside the Logic Component for the `findAny\u0027 Command](images/FindSequenceDiagram.png)","lastModifiedDate":"2021-11-03"},{"lineNumber":352,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":353,"author":{"gitId":"houtenteo"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source:","lastModifiedDate":"2021-11-08"},{"lineNumber":354,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":355,"author":{"gitId":"houtenteo"},"content":"**Note:**\u003cbr\u003e","lastModifiedDate":"2021-11-08"},{"lineNumber":356,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":357,"author":{"gitId":"houtenteo"},"content":"The lifeline for `FindAnyCommandParser` should end at the destroy marker (X). But due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2021-11-08"},{"lineNumber":358,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":359,"author":{"gitId":"houtenteo"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-11-08"},{"lineNumber":360,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":361,"author":{"gitId":"houtenteo"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2021-11-08"},{"lineNumber":362,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":363,"author":{"gitId":"houtenteo"},"content":"The activity diagram below summarises what happens when a user executes a `findAny` Command.","lastModifiedDate":"2021-11-03"},{"lineNumber":364,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":365,"author":{"gitId":"houtenteo"},"content":"![Find command activity diagram](images/FindActivityDiagram.png)","lastModifiedDate":"2021-11-03"},{"lineNumber":366,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":367,"author":{"gitId":"houtenteo"},"content":"#### Design considerations:","lastModifiedDate":"2021-11-03"},{"lineNumber":368,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":369,"author":{"gitId":"houtenteo"},"content":"**Aspect: Different types of find commands:**","lastModifiedDate":"2021-11-03"},{"lineNumber":370,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":371,"author":{"gitId":"houtenteo"},"content":"`findAny`: A contact would be displayed as long as it matches any of the keywords specified by the user in its respective fields \u003cbr\u003e","lastModifiedDate":"2021-11-03"},{"lineNumber":372,"author":{"gitId":"houtenteo"},"content":"`findAll`: A contact would be displayed only if it matches **ALL** of the keywords specified by the user in its respective fields","lastModifiedDate":"2021-11-03"},{"lineNumber":373,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":374,"author":{"gitId":"houtenteo"},"content":"* **Alternative 1 :** only findAny","lastModifiedDate":"2021-11-03"},{"lineNumber":375,"author":{"gitId":"loose-bus-change"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":376,"author":{"gitId":"houtenteo"},"content":"    * Pros: Easier implementation","lastModifiedDate":"2021-11-03"},{"lineNumber":377,"author":{"gitId":"loose-bus-change"},"content":"  ","lastModifiedDate":"2021-11-08"},{"lineNumber":378,"author":{"gitId":"houtenteo"},"content":"    * Cons: Users will not have a way to find contacts that fit a precise demographic","lastModifiedDate":"2021-11-03"},{"lineNumber":379,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":380,"author":{"gitId":"houtenteo"},"content":"* **Alternative 2 (current choice):** Both findAny and findAll","lastModifiedDate":"2021-11-03"},{"lineNumber":381,"author":{"gitId":"loose-bus-change"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":382,"author":{"gitId":"houtenteo"},"content":"    * Pros: Improves User Experience by giving users the freedom to decide whether they want find to be lenient or strict","lastModifiedDate":"2021-11-03"},{"lineNumber":383,"author":{"gitId":"loose-bus-change"},"content":"  ","lastModifiedDate":"2021-11-08"},{"lineNumber":384,"author":{"gitId":"houtenteo"},"content":"    * Cons: More difficult to implement","lastModifiedDate":"2021-11-06"},{"lineNumber":385,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":386,"author":{"gitId":"houtenteo"},"content":"As telemarketers, having the option to find specific demographics when selling products with very niche target audiences would","lastModifiedDate":"2021-11-03"},{"lineNumber":387,"author":{"gitId":"houtenteo"},"content":"be invaluable. Therefore, although the usage rate of `findAll` may not be high while selling generic products. We cannot overlook","lastModifiedDate":"2021-11-03"},{"lineNumber":388,"author":{"gitId":"houtenteo"},"content":"the event where the need arises.","lastModifiedDate":"2021-11-03"},{"lineNumber":389,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":390,"author":{"gitId":"loose-bus-change"},"content":"### Display feature","lastModifiedDate":"2021-10-28"},{"lineNumber":391,"author":{"gitId":"loose-bus-change"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":392,"author":{"gitId":"houtenteo"},"content":"The display command is facilitated by the LogicManager. The `DisplayCommandParser#parse()` is used to parse the","lastModifiedDate":"2021-11-08"},{"lineNumber":393,"author":{"gitId":"houtenteo"},"content":"command arguments and returns a DisplayCommand object.The `LogicManager#execute()` then executes the DisplayCommand","lastModifiedDate":"2021-11-08"},{"lineNumber":394,"author":{"gitId":"houtenteo"},"content":"that is created by the `DisplayCommandParser#parse()`. ","lastModifiedDate":"2021-11-08"},{"lineNumber":395,"author":{"gitId":"loose-bus-change"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":396,"author":{"gitId":"loose-bus-change"},"content":"This feature allows telemarketers to display additional details about a contact at any point in time","lastModifiedDate":"2021-10-28"},{"lineNumber":397,"author":{"gitId":"loose-bus-change"},"content":"if they need to.","lastModifiedDate":"2021-10-28"},{"lineNumber":398,"author":{"gitId":"loose-bus-change"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":399,"author":{"gitId":"loose-bus-change"},"content":"**Given below is an example usage scenario and how the display mechanism behaves at each step.**","lastModifiedDate":"2021-10-28"},{"lineNumber":400,"author":{"gitId":"loose-bus-change"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":401,"author":{"gitId":"houtenteo"},"content":"1. The user opens the application and views the list of contacts. He wants to view more details","lastModifiedDate":"2021-11-08"},{"lineNumber":402,"author":{"gitId":"houtenteo"},"content":"about a particular contact and enters the command `display 2`","lastModifiedDate":"2021-11-08"},{"lineNumber":403,"author":{"gitId":"loose-bus-change"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":404,"author":{"gitId":"loose-bus-change"},"content":"2. Command entered by user is passed into the LogicManager which directs it to AddressBookParser","lastModifiedDate":"2021-10-28"},{"lineNumber":405,"author":{"gitId":"loose-bus-change"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":406,"author":{"gitId":"loose-bus-change"},"content":"3. AddressBookParser parses the command","lastModifiedDate":"2021-10-28"},{"lineNumber":407,"author":{"gitId":"loose-bus-change"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":408,"author":{"gitId":"loose-bus-change"},"content":"4. AddressBookParser creates a DisplayCommand with the index (i.e., 2) specified by the user","lastModifiedDate":"2021-10-28"},{"lineNumber":409,"author":{"gitId":"loose-bus-change"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":410,"author":{"gitId":"loose-bus-change"},"content":"5. LogicManager executes the DisplayCommand and the contact to be displayed is obtained from the list of contacts","lastModifiedDate":"2021-10-28"},{"lineNumber":411,"author":{"gitId":"loose-bus-change"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":412,"author":{"gitId":"loose-bus-change"},"content":"6. The UiManager then executes the displaying process by communicating with the MainWindow","lastModifiedDate":"2021-10-28"},{"lineNumber":413,"author":{"gitId":"loose-bus-change"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":414,"author":{"gitId":"loose-bus-change"},"content":"7. The MainWindow, where the relevant JavaFX elements are placed, shows the details of the selected contact","lastModifiedDate":"2021-11-08"},{"lineNumber":415,"author":{"gitId":"loose-bus-change"},"content":"  ","lastModifiedDate":"2021-10-28"},{"lineNumber":416,"author":{"gitId":"houtenteo"},"content":"The Sequence Diagram below illustrates the interactions within the Logic component for the `execute(\"display 2\")` API call.","lastModifiedDate":"2021-11-08"},{"lineNumber":417,"author":{"gitId":"loose-bus-change"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":418,"author":{"gitId":"loose-bus-change"},"content":"![Interactions Inside the Logic Component for the `display\u0027 Command](images/DisplaySequenceDiagram.png)","lastModifiedDate":"2021-10-28"},{"lineNumber":419,"author":{"gitId":"loose-bus-change"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":420,"author":{"gitId":"houtenteo"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source:","lastModifiedDate":"2021-11-08"},{"lineNumber":421,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":422,"author":{"gitId":"houtenteo"},"content":"**Note:**\u003cbr\u003e","lastModifiedDate":"2021-11-08"},{"lineNumber":423,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":424,"author":{"gitId":"houtenteo"},"content":"The lifeline for `DisplayCommandParser` should end at the destroy marker (X). But due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2021-11-08"},{"lineNumber":425,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":426,"author":{"gitId":"houtenteo"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-11-08"},{"lineNumber":427,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":428,"author":{"gitId":"loose-bus-change"},"content":"The following activity diagram summarizes what happens when a user executes a display command:","lastModifiedDate":"2021-10-28"},{"lineNumber":429,"author":{"gitId":"loose-bus-change"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":430,"author":{"gitId":"loose-bus-change"},"content":"![DisplayActivityDiagram](images/DisplayActivityDiagram.png)","lastModifiedDate":"2021-10-28"},{"lineNumber":431,"author":{"gitId":"loose-bus-change"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":432,"author":{"gitId":"Kangxun"},"content":"### Filter feature","lastModifiedDate":"2021-10-26"},{"lineNumber":433,"author":{"gitId":"Kangxun"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":434,"author":{"gitId":"houtenteo"},"content":"The Filter feature is facilitated by the LogicManager. The `FilterCommandParser#parse()` is used to parse the","lastModifiedDate":"2021-11-08"},{"lineNumber":435,"author":{"gitId":"houtenteo"},"content":"command arguments and returns a FilterCommand object. The `LogicManager#execute()` then executes the FilterCommand.","lastModifiedDate":"2021-11-08"},{"lineNumber":436,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":437,"author":{"gitId":"houtenteo"},"content":"This feature allows the user to filter the contacts based on `Called` and `Gender`","lastModifiedDate":"2021-11-08"},{"lineNumber":438,"author":{"gitId":"Kangxun"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":439,"author":{"gitId":"houtenteo"},"content":"**Given below is an example usage scenario and how the filter mechanism behaves at each step.**","lastModifiedDate":"2021-11-08"},{"lineNumber":440,"author":{"gitId":"Kangxun"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":441,"author":{"gitId":"houtenteo"},"content":"1. The user opens the application and views the list of contacts. He wants to filter the contacts according to `Gender`","lastModifiedDate":"2021-11-08"},{"lineNumber":442,"author":{"gitId":"houtenteo"},"content":"and enters the command `filter gender 3`","lastModifiedDate":"2021-11-08"},{"lineNumber":443,"author":{"gitId":"loose-bus-change"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":444,"author":{"gitId":"houtenteo"},"content":"3. Command entered by user is passed into the LogicManager","lastModifiedDate":"2021-11-08"},{"lineNumber":445,"author":{"gitId":"loose-bus-change"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":446,"author":{"gitId":"houtenteo"},"content":"4. AddressBookParser parses the command","lastModifiedDate":"2021-11-08"},{"lineNumber":447,"author":{"gitId":"loose-bus-change"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":448,"author":{"gitId":"houtenteo"},"content":"5. AddressBookParser creates a FilterCommand","lastModifiedDate":"2021-11-08"},{"lineNumber":449,"author":{"gitId":"loose-bus-change"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":450,"author":{"gitId":"houtenteo"},"content":"6. LogicManager executes the FilterCommand and creates a Comparator with the category field specified by the user","lastModifiedDate":"2021-11-08"},{"lineNumber":451,"author":{"gitId":"loose-bus-change"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":452,"author":{"gitId":"houtenteo"},"content":"7. The Comparator is used to sort the FilteredList of contacts in Model","lastModifiedDate":"2021-11-08"},{"lineNumber":453,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":454,"author":{"gitId":"houtenteo"},"content":"8. The count field specified by the user is used to limit the number of contacts displayed in the GUI","lastModifiedDate":"2021-11-08"},{"lineNumber":455,"author":{"gitId":"Kangxun"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":456,"author":{"gitId":"loose-bus-change"},"content":"The Sequence Diagram below illustrates the interactions within the Logic component for the `execute(\"filter gender 3\")` API call.","lastModifiedDate":"2021-11-08"},{"lineNumber":457,"author":{"gitId":"Kangxun"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":458,"author":{"gitId":"Kangxun"},"content":"![Interactions Inside the Logic Component for the `filter\u0027 Command](images/FilterSequenceDiagram.png)","lastModifiedDate":"2021-10-26"},{"lineNumber":459,"author":{"gitId":"Kangxun"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":460,"author":{"gitId":"houtenteo"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source:","lastModifiedDate":"2021-11-08"},{"lineNumber":461,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":462,"author":{"gitId":"houtenteo"},"content":"**Note:**\u003cbr\u003e","lastModifiedDate":"2021-11-08"},{"lineNumber":463,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":464,"author":{"gitId":"houtenteo"},"content":"The lifeline for `FilterCommandParser` should end at the destroy marker (X). But due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2021-11-08"},{"lineNumber":465,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":466,"author":{"gitId":"houtenteo"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-11-08"},{"lineNumber":467,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":468,"author":{"gitId":"houtenteo"},"content":"The activity diagram below summarises what happens when a user executes a Filter Command.","lastModifiedDate":"2021-11-08"},{"lineNumber":469,"author":{"gitId":"Kangxun"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":470,"author":{"gitId":"Kangxun"},"content":"![Filter command activity diagram](images/FilterActivityDiagram.png)","lastModifiedDate":"2021-11-07"},{"lineNumber":471,"author":{"gitId":"Kangxun"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":472,"author":{"gitId":"Kangxun"},"content":"#### Design considerations:","lastModifiedDate":"2021-10-26"},{"lineNumber":473,"author":{"gitId":"Kangxun"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":474,"author":{"gitId":"Kangxun"},"content":"**Aspect: Compulsory fields:**","lastModifiedDate":"2021-10-26"},{"lineNumber":475,"author":{"gitId":"Kangxun"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":476,"author":{"gitId":"Kangxun"},"content":"* **Alternative 1 (current choice):** 1 compulsory field","lastModifiedDate":"2021-10-26"},{"lineNumber":477,"author":{"gitId":"loose-bus-change"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":478,"author":{"gitId":"loose-bus-change"},"content":"    * Compulsory fields: `Category`","lastModifiedDate":"2021-11-08"},{"lineNumber":479,"author":{"gitId":"loose-bus-change"},"content":"  ","lastModifiedDate":"2021-11-08"},{"lineNumber":480,"author":{"gitId":"loose-bus-change"},"content":"    * Non-Compulsory fields: `Count`","lastModifiedDate":"2021-11-08"},{"lineNumber":481,"author":{"gitId":"loose-bus-change"},"content":"  ","lastModifiedDate":"2021-11-08"},{"lineNumber":482,"author":{"gitId":"loose-bus-change"},"content":"    * Pros: Allows quicker filtering by reducing the number of fields required","lastModifiedDate":"2021-11-08"},{"lineNumber":483,"author":{"gitId":"loose-bus-change"},"content":"  ","lastModifiedDate":"2021-11-08"},{"lineNumber":484,"author":{"gitId":"loose-bus-change"},"content":"    * Cons: More difficult to implement","lastModifiedDate":"2021-11-08"},{"lineNumber":485,"author":{"gitId":"Kangxun"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":486,"author":{"gitId":"Kangxun"},"content":"* **Alternative 2:** Both fields are compulsory","lastModifiedDate":"2021-10-26"},{"lineNumber":487,"author":{"gitId":"Kangxun"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":488,"author":{"gitId":"loose-bus-change"},"content":"    * Pros: Easier to implement","lastModifiedDate":"2021-11-08"},{"lineNumber":489,"author":{"gitId":"loose-bus-change"},"content":"  ","lastModifiedDate":"2021-11-08"},{"lineNumber":490,"author":{"gitId":"loose-bus-change"},"content":"    * Cons: User has to choose how many contacts to be displayed every time","lastModifiedDate":"2021-11-08"},{"lineNumber":491,"author":{"gitId":"Kangxun"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":492,"author":{"gitId":"idgrr"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source:","lastModifiedDate":"2021-11-08"},{"lineNumber":493,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":494,"author":{"gitId":"idgrr"},"content":"**Note:**\u003cbr\u003e","lastModifiedDate":"2021-11-08"},{"lineNumber":495,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":496,"author":{"gitId":"houtenteo"},"content":"Since sorting by \"Gender\" and \"Called\" is the most used by telemarketers, these are the only 2 categories supported by the filter command as of now. \u003cbr\u003e","lastModifiedDate":"2021-11-08"},{"lineNumber":497,"author":{"gitId":"houtenteo"},"content":"However, we have plans to implement sorting by other categories in the future.","lastModifiedDate":"2021-11-08"},{"lineNumber":498,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":499,"author":{"gitId":"Kangxun"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-10-26"},{"lineNumber":500,"author":{"gitId":"Kangxun"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":501,"author":{"gitId":"Kangxun"},"content":"As the key intention is for users to filter by `Category`, it is kept as a compulsory field.","lastModifiedDate":"2021-10-26"},{"lineNumber":502,"author":{"gitId":"Kangxun"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":503,"author":{"gitId":"houtenteo"},"content":"On the other hand, filtering by `Count` is a complementary feature to improve Quality of Life (QOL) for users. Hence, it is non-compulsory.","lastModifiedDate":"2021-11-06"},{"lineNumber":504,"author":{"gitId":"Kangxun"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":505,"author":{"gitId":"houtenteo"},"content":"The current design implementation allows users to filter contacts quickly and gives them the flexibility of limiting the size of the filtered","lastModifiedDate":"2021-11-08"},{"lineNumber":506,"author":{"gitId":"houtenteo"},"content":"list. This can come in handy when there too many contacts in the list.","lastModifiedDate":"2021-11-08"},{"lineNumber":507,"author":{"gitId":"Kangxun"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":508,"author":{"gitId":"pranav-ganesh"},"content":"### Edit feature","lastModifiedDate":"2021-10-20"},{"lineNumber":509,"author":{"gitId":"pranav-ganesh"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":510,"author":{"gitId":"houtenteo"},"content":"The Edit feature is facilitated by the LogicManager. The `EditCommandParser#parse()` is used to parse the","lastModifiedDate":"2021-11-08"},{"lineNumber":511,"author":{"gitId":"houtenteo"},"content":"command arguments and returns an EditCommand object.The `LogicManager#execute()` then executes the EditCommand.","lastModifiedDate":"2021-11-08"},{"lineNumber":512,"author":{"gitId":"pranav-ganesh"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":513,"author":{"gitId":"houtenteo"},"content":"This feature allows the user to easily edit any specific component of a contact.","lastModifiedDate":"2021-11-08"},{"lineNumber":514,"author":{"gitId":"pranav-ganesh"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":515,"author":{"gitId":"houtenteo"},"content":"**Given below is an example usage scenario and how the edit mechanism behaves at each step.**","lastModifiedDate":"2021-11-08"},{"lineNumber":516,"author":{"gitId":"pranav-ganesh"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":517,"author":{"gitId":"houtenteo"},"content":"1. The user opens the application and views the list of contacts. He wants to edit the first contact and ","lastModifiedDate":"2021-11-08"},{"lineNumber":518,"author":{"gitId":"houtenteo"},"content":"enters the command `edit 1 name/Will age/20`","lastModifiedDate":"2021-11-08"},{"lineNumber":519,"author":{"gitId":"pranav-ganesh"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":520,"author":{"gitId":"houtenteo"},"content":"2. This command is passed on to the `LogicManager` which directs the command to the `AddressBookParser`","lastModifiedDate":"2021-11-08"},{"lineNumber":521,"author":{"gitId":"pranav-ganesh"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":522,"author":{"gitId":"houtenteo"},"content":"3. The `AddressBookParser` parses the command and returns an EditCommand with a new person object containing all the specified edited fields except the interests (refer to note after step 8)","lastModifiedDate":"2021-11-08"},{"lineNumber":523,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":524,"author":{"gitId":"houtenteo"},"content":"5. The `LogicManager` then executes the `EditCommand`","lastModifiedDate":"2021-11-08"},{"lineNumber":525,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":526,"author":{"gitId":"houtenteo"},"content":"6. The `EditCommand#createEditedPerson()` returns a new Person object containing all the updated data fields including","lastModifiedDate":"2021-11-08"},{"lineNumber":527,"author":{"gitId":"houtenteo"},"content":"the updated `InterestsList`.","lastModifiedDate":"2021-11-08"},{"lineNumber":528,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":529,"author":{"gitId":"houtenteo"},"content":"7. The contact that was requested to be edited is updated to this new Person Object","lastModifiedDate":"2021-11-08"},{"lineNumber":530,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":531,"author":{"gitId":"houtenteo"},"content":"8. The [`DisplayCommand`](#display-feature) is then used to display the modifications through the person card","lastModifiedDate":"2021-11-08"},{"lineNumber":532,"author":{"gitId":"pranav-ganesh"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":533,"author":{"gitId":"houtenteo"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source:","lastModifiedDate":"2021-11-08"},{"lineNumber":534,"author":{"gitId":"pranav-ganesh"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":535,"author":{"gitId":"houtenteo"},"content":"**Note:**\u003cbr\u003e","lastModifiedDate":"2021-11-08"},{"lineNumber":536,"author":{"gitId":"pranav-ganesh"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":537,"author":{"gitId":"houtenteo"},"content":"Editing of the `InterestsList` field works differently from the other fields. In the case for other fields,","lastModifiedDate":"2021-11-08"},{"lineNumber":538,"author":{"gitId":"houtenteo"},"content":"the new values specified by the user will completely replace the original values of their respective fields. However, editing of","lastModifiedDate":"2021-11-08"},{"lineNumber":539,"author":{"gitId":"houtenteo"},"content":"the `InterestsList1` allows for adding and removing of `Interest` as well as editing specific `Interests` withing the `InterestsList`.","lastModifiedDate":"2021-11-08"},{"lineNumber":540,"author":{"gitId":"houtenteo"},"content":"Therefore, a reference to the original `InterestsList` of the contact to be edited is required. Hence, the creation of the","lastModifiedDate":"2021-11-08"},{"lineNumber":541,"author":{"gitId":"houtenteo"},"content":"updated `InterestsList` is done in the EditCommand where there is access to the `Model` instead of the EditCommandParser.","lastModifiedDate":"2021-11-08"},{"lineNumber":542,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":543,"author":{"gitId":"houtenteo"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-11-08"},{"lineNumber":544,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":545,"author":{"gitId":"houtenteo"},"content":"The Sequence Diagram below illustrates the interactions within the Logic component for the `execute(\"edit 1 n/Peter e/peter@email.com g/M age/M\")` API call.","lastModifiedDate":"2021-11-08"},{"lineNumber":546,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":547,"author":{"gitId":"houtenteo"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source:","lastModifiedDate":"2021-11-08"},{"lineNumber":548,"author":{"gitId":"pranav-ganesh"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":549,"author":{"gitId":"houtenteo"},"content":"**Note:**\u003cbr\u003e","lastModifiedDate":"2021-11-08"},{"lineNumber":550,"author":{"gitId":"pranav-ganesh"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":551,"author":{"gitId":"houtenteo"},"content":"Due to the length of the arguments, we have decided to replace the line \"1 n/Peter e/peter@email.com g/M age/M\"","lastModifiedDate":"2021-11-08"},{"lineNumber":552,"author":{"gitId":"houtenteo"},"content":"with `...` within the diagram for easier viewing.","lastModifiedDate":"2021-11-08"},{"lineNumber":553,"author":{"gitId":"pranav-ganesh"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":554,"author":{"gitId":"houtenteo"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-11-08"},{"lineNumber":555,"author":{"gitId":"pranav-ganesh"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":556,"author":{"gitId":"pranav-ganesh"},"content":"![Interactions Inside the Logic Component for the `edit\u0027 Command](images/EditSequenceDiagram.png)","lastModifiedDate":"2021-10-20"},{"lineNumber":557,"author":{"gitId":"pranav-ganesh"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":558,"author":{"gitId":"houtenteo"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2021-11-08"},{"lineNumber":559,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":560,"author":{"gitId":"houtenteo"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source:","lastModifiedDate":"2021-11-08"},{"lineNumber":561,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":562,"author":{"gitId":"houtenteo"},"content":"**Note:**\u003cbr\u003e","lastModifiedDate":"2021-11-08"},{"lineNumber":563,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":564,"author":{"gitId":"houtenteo"},"content":"The lifeline for `EditCommandParser` should end at the destroy marker (X). But due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2021-11-08"},{"lineNumber":565,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":566,"author":{"gitId":"houtenteo"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-11-08"},{"lineNumber":567,"author":{"gitId":"pranav-ganesh"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":568,"author":{"gitId":"pranav-ganesh"},"content":"The following activity diagram summarizes what happens when a user executes an edit command:","lastModifiedDate":"2021-10-20"},{"lineNumber":569,"author":{"gitId":"pranav-ganesh"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":570,"author":{"gitId":"pranav-ganesh"},"content":"![EditActivityDiagram](images/EditActivityDiagram.png)","lastModifiedDate":"2021-10-20"},{"lineNumber":571,"author":{"gitId":"pranav-ganesh"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":572,"author":{"gitId":"houtenteo"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2021-11-08"},{"lineNumber":573,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":574,"author":{"gitId":"pranav-ganesh"},"content":"### Design considerations:","lastModifiedDate":"2021-10-20"},{"lineNumber":575,"author":{"gitId":"pranav-ganesh"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":576,"author":{"gitId":"pranav-ganesh"},"content":"**Aspect: Duplicate detection:**","lastModifiedDate":"2021-11-08"},{"lineNumber":577,"author":{"gitId":"pranav-ganesh"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":578,"author":{"gitId":"pranav-ganesh"},"content":"* **Alternative 1 (current choice):** 3 fields (`Name`, `Email` and `Phone`) need to exactly match for duplicate to be detected","lastModifiedDate":"2021-11-08"},{"lineNumber":579,"author":{"gitId":"pranav-ganesh"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":580,"author":{"gitId":"houtenteo"},"content":"    * Pros: More logical and emulates real world scenario where it is unlikely for non-duplicate contacts to have the same name, email and phone","lastModifiedDate":"2021-11-08"},{"lineNumber":581,"author":{"gitId":"pranav-ganesh"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":582,"author":{"gitId":"pranav-ganesh"},"content":"    * Cons: More likely that an edited contact might be already present in the address book","lastModifiedDate":"2021-11-08"},{"lineNumber":583,"author":{"gitId":"pranav-ganesh"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":584,"author":{"gitId":"pranav-ganesh"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":585,"author":{"gitId":"pranav-ganesh"},"content":"* **Alternative 2:** All 7 fields (`Name`, `Email`, `Phone`, `Address`, `Age`, `Gender` and `Interestslist`) need to match for duplicate to be detected","lastModifiedDate":"2021-11-08"},{"lineNumber":586,"author":{"gitId":"pranav-ganesh"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":587,"author":{"gitId":"houtenteo"},"content":"    * Pros: Less likely for edited contact to be already present in the address book","lastModifiedDate":"2021-11-08"},{"lineNumber":588,"author":{"gitId":"pranav-ganesh"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":589,"author":{"gitId":"pranav-ganesh"},"content":"    * Cons: This can lead to more than one contact having the same name, phone and email but different other attributes, which is nearly impossible in the real world","lastModifiedDate":"2021-11-08"},{"lineNumber":590,"author":{"gitId":"pranav-ganesh"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":591,"author":{"gitId":"pranav-ganesh"},"content":"**Aspect: Edit command implementation:**","lastModifiedDate":"2021-11-08"},{"lineNumber":592,"author":{"gitId":"pranav-ganesh"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":593,"author":{"gitId":"pranav-ganesh"},"content":"* **Alternative 1 (current choice):** Person to be edited is replaced by a new person object containing updated data field values","lastModifiedDate":"2021-10-20"},{"lineNumber":594,"author":{"gitId":"pranav-ganesh"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":595,"author":{"gitId":"pranav-ganesh"},"content":"    * Pros: Easier to implement, more readable code and less prone to errors.","lastModifiedDate":"2021-10-20"},{"lineNumber":596,"author":{"gitId":"pranav-ganesh"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":597,"author":{"gitId":"pranav-ganesh"},"content":"    * Cons: Every single time even if there is a minor edit, a new person object needs to be created which could potentially lead to overhead.","lastModifiedDate":"2021-11-08"},{"lineNumber":598,"author":{"gitId":"pranav-ganesh"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":599,"author":{"gitId":"pranav-ganesh"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":600,"author":{"gitId":"pranav-ganesh"},"content":"* **Alternative 2:** Person attributes are edited rather than the entire person object being replaced by a new object","lastModifiedDate":"2021-10-20"},{"lineNumber":601,"author":{"gitId":"pranav-ganesh"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":602,"author":{"gitId":"pranav-ganesh"},"content":"    * Pros: Logically more apt and intuitive.","lastModifiedDate":"2021-10-20"},{"lineNumber":603,"author":{"gitId":"pranav-ganesh"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":604,"author":{"gitId":"pranav-ganesh"},"content":"    * Cons: Implementation gets messy, and more prone to errors.","lastModifiedDate":"2021-11-08"},{"lineNumber":605,"author":{"gitId":"pranav-ganesh"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":606,"author":{"gitId":"loose-bus-change"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":607,"author":{"gitId":"idgrr"},"content":"### Import feature","lastModifiedDate":"2021-10-22"},{"lineNumber":608,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":609,"author":{"gitId":"houtenteo"},"content":"The import feature is primarily facilitated by the Storage Manager. ","lastModifiedDate":"2021-11-08"},{"lineNumber":610,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":611,"author":{"gitId":"houtenteo"},"content":"This feature allows the user to easily import external data into the CMM database.","lastModifiedDate":"2021-11-08"},{"lineNumber":612,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":613,"author":{"gitId":"houtenteo"},"content":"**Given below is an example usage scenario and how the import mechanism behaves at each step.**","lastModifiedDate":"2021-11-08"},{"lineNumber":614,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":615,"author":{"gitId":"houtenteo"},"content":"1. User wants to import additional data from a separate CSV file and clicks on the `Add on Imports button`","lastModifiedDate":"2021-11-08"},{"lineNumber":616,"author":{"gitId":"loose-bus-change"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":617,"author":{"gitId":"houtenteo"},"content":"2. MainWindow calls logic to import data","lastModifiedDate":"2021-11-08"},{"lineNumber":618,"author":{"gitId":"loose-bus-change"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":619,"author":{"gitId":"houtenteo"},"content":"3. Logic calls StorageManager to import the data into a model","lastModifiedDate":"2021-11-08"},{"lineNumber":620,"author":{"gitId":"loose-bus-change"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":621,"author":{"gitId":"houtenteo"},"content":"4. StorageManager calls CsvAddressBookImportExport to read and convert all details found in CSV file to list of valid people","lastModifiedDate":"2021-11-08"},{"lineNumber":622,"author":{"gitId":"loose-bus-change"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":623,"author":{"gitId":"houtenteo"},"content":"5. CsvAddressBookImportExport either adds or updates valid people into the model.","lastModifiedDate":"2021-11-08"},{"lineNumber":624,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":625,"author":{"gitId":"houtenteo"},"content":"6. Logic saves the database after all imports have been completed","lastModifiedDate":"2021-11-08"},{"lineNumber":626,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":627,"author":{"gitId":"idgrr"},"content":"![Interactions Inside the Storage Component when importing](images/ImportCsvSequenceDiagram.png)","lastModifiedDate":"2021-10-25"},{"lineNumber":628,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":629,"author":{"gitId":"idgrr"},"content":"**Different Import settings based on User**","lastModifiedDate":"2021-10-25"},{"lineNumber":630,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":631,"author":{"gitId":"houtenteo"},"content":"Application will ask whether the User has any new imports upon **every** application startup. \u003cbr\u003e","lastModifiedDate":"2021-11-06"},{"lineNumber":632,"author":{"gitId":"houtenteo"},"content":"User will be prompted with 3 options : ","lastModifiedDate":"2021-11-06"},{"lineNumber":633,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":634,"author":{"gitId":"houtenteo"},"content":"* Add on Imports ","lastModifiedDate":"2021-11-06"},{"lineNumber":635,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":636,"author":{"gitId":"houtenteo"},"content":"* Start new with imports","lastModifiedDate":"2021-11-06"},{"lineNumber":637,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":638,"author":{"gitId":"loose-bus-change"},"content":"* No Imports","lastModifiedDate":"2021-11-08"},{"lineNumber":639,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":640,"author":{"gitId":"houtenteo"},"content":"The following activity diagram summarizes what happens when a user selects either of the 3 options:","lastModifiedDate":"2021-11-06"},{"lineNumber":641,"author":{"gitId":"idgrr"},"content":"  ![CMM behaviour based on user input](images/ImportDecision.png)","lastModifiedDate":"2021-10-25"},{"lineNumber":642,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":643,"author":{"gitId":"houtenteo"},"content":"The next few sections will go deeper into what CMM does in each case","lastModifiedDate":"2021-11-08"},{"lineNumber":644,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":645,"author":{"gitId":"idgrr"},"content":"#### Add On Imports","lastModifiedDate":"2021-10-22"},{"lineNumber":646,"author":{"gitId":"idgrr"},"content":"- Adds on new valid imports into existing database","lastModifiedDate":"2021-10-25"},{"lineNumber":647,"author":{"gitId":"loose-bus-change"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":648,"author":{"gitId":"idgrr"},"content":"    - Valid people need to have the following attributes : Name, Phone, Email filled","lastModifiedDate":"2021-11-03"},{"lineNumber":649,"author":{"gitId":"loose-bus-change"},"content":"  ","lastModifiedDate":"2021-11-08"},{"lineNumber":650,"author":{"gitId":"idgrr"},"content":"    - Every attribute of import person has to follow the type requirements. This is handled in CsvUtil and CsvAdaptedPerson","lastModifiedDate":"2021-11-03"},{"lineNumber":651,"author":{"gitId":"idgrr"},"content":"- Duplicates found in database","lastModifiedDate":"2021-10-25"},{"lineNumber":652,"author":{"gitId":"loose-bus-change"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":653,"author":{"gitId":"loose-bus-change"},"content":"    - As duplicates are often found when adding on to an existing database, it is important to have a clearly defined plan for CMM to handle such cases  ","lastModifiedDate":"2021-11-08"},{"lineNumber":654,"author":{"gitId":"houtenteo"},"content":"The following activity diagram summarizes what happens when a duplicate import is encountered:  ","lastModifiedDate":"2021-11-06"},{"lineNumber":655,"author":{"gitId":"idgrr"},"content":"      ![CMM behaviour when duplicate encountered](images/DuplicateImportDecision.png)","lastModifiedDate":"2021-10-25"},{"lineNumber":656,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":657,"author":{"gitId":"idgrr"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source:","lastModifiedDate":"2021-11-08"},{"lineNumber":658,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":659,"author":{"gitId":"idgrr"},"content":"**Note:**\u003cbr\u003e","lastModifiedDate":"2021-11-08"},{"lineNumber":660,"author":{"gitId":"houtenteo"},"content":"Duplicates are defined to be two contacts with the exact same name, phone number and email address.","lastModifiedDate":"2021-11-06"},{"lineNumber":661,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":662,"author":{"gitId":"houtenteo"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-11-06"},{"lineNumber":663,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":664,"author":{"gitId":"idgrr"},"content":"#### Start New Using Imports","lastModifiedDate":"2021-11-05"},{"lineNumber":665,"author":{"gitId":"loose-bus-change"},"content":"- Exports the current state of the database into a CSV file. Export implementation is covered in detail [here](#export-feature)","lastModifiedDate":"2021-11-08"},{"lineNumber":666,"author":{"gitId":"loose-bus-change"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":667,"author":{"gitId":"houtenteo"},"content":"- Replaces the current database with valid imports from the existing import.csv file","lastModifiedDate":"2021-11-06"},{"lineNumber":668,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":669,"author":{"gitId":"idgrr"},"content":"#### No imports","lastModifiedDate":"2021-10-25"},{"lineNumber":670,"author":{"gitId":"houtenteo"},"content":"- CMM will not import anything and application will start normally","lastModifiedDate":"2021-11-06"},{"lineNumber":671,"author":{"gitId":"loose-bus-change"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":672,"author":{"gitId":"idgrr"},"content":"- Closing the prompt will also choose this option","lastModifiedDate":"2021-10-25"},{"lineNumber":673,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":674,"author":{"gitId":"idgrr"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e:exclamation:","lastModifiedDate":"2021-11-08"},{"lineNumber":675,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":676,"author":{"gitId":"idgrr"},"content":"**Caution:** \u003cbr\u003e","lastModifiedDate":"2021-11-08"},{"lineNumber":677,"author":{"gitId":"houtenteo"},"content":"This import will not work if the first row does not have valid headers. \u003cbr\u003e","lastModifiedDate":"2021-11-06"},{"lineNumber":678,"author":{"gitId":"houtenteo"},"content":"Headers must include `Name`, `Phone`, `Email`, `Address`, `Gender`, `Age`, `Interest` and `Called` from the left to right, ","lastModifiedDate":"2021-11-06"},{"lineNumber":679,"author":{"gitId":"houtenteo"},"content":"starting from the cell \u0027A1\u0027. \u003cbr\u003e ","lastModifiedDate":"2021-11-06"},{"lineNumber":680,"author":{"gitId":"houtenteo"},"content":"Headers are case-insensitive","lastModifiedDate":"2021-11-08"},{"lineNumber":681,"author":{"gitId":"idgrr"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-11-03"},{"lineNumber":682,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":683,"author":{"gitId":"idgrr"},"content":"#### Design considerations:","lastModifiedDate":"2021-11-03"},{"lineNumber":684,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":685,"author":{"gitId":"houtenteo"},"content":"**Aspect: When import should be executed:**","lastModifiedDate":"2021-11-08"},{"lineNumber":686,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":687,"author":{"gitId":"houtenteo"},"content":"* **Alternative 1 (current choice):** Always ask for import upon startup","lastModifiedDate":"2021-11-08"},{"lineNumber":688,"author":{"gitId":"loose-bus-change"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":689,"author":{"gitId":"idgrr"},"content":"  * Pros: Ensures that user will always be using the most updated list. This reduces the likelihood of time wasted working on outdated data.","lastModifiedDate":"2021-11-03"},{"lineNumber":690,"author":{"gitId":"loose-bus-change"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":691,"author":{"gitId":"houtenteo"},"content":"  * Cons: Popups may become annoying if user constantly opens and closes application","lastModifiedDate":"2021-11-06"},{"lineNumber":692,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":693,"author":{"gitId":"loose-bus-change"},"content":"* **Alternative 2:** Separate command to import.","lastModifiedDate":"2021-11-08"},{"lineNumber":694,"author":{"gitId":"loose-bus-change"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":695,"author":{"gitId":"loose-bus-change"},"content":"  * Pros: Fewer prompts upon startup. User can import while CMM is running","lastModifiedDate":"2021-11-08"},{"lineNumber":696,"author":{"gitId":"loose-bus-change"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":697,"author":{"gitId":"houtenteo"},"content":"  * Cons: User may forget to import the latest Excel file and work on an outdated file","lastModifiedDate":"2021-11-08"},{"lineNumber":698,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":699,"author":{"gitId":"houtenteo"},"content":"**Aspect: Types of imports that should be available to users:**","lastModifiedDate":"2021-11-06"},{"lineNumber":700,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":701,"author":{"gitId":"houtenteo"},"content":"* **Alternative 1 (current choice):** 3 options : `Add on import` , `Start new with import`, `Don\u0027t import`","lastModifiedDate":"2021-11-06"},{"lineNumber":702,"author":{"gitId":"loose-bus-change"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":703,"author":{"gitId":"houtenteo"},"content":"  * Pros: Increased flexibility to cater to different needs of the user","lastModifiedDate":"2021-11-08"},{"lineNumber":704,"author":{"gitId":"loose-bus-change"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":705,"author":{"gitId":"houtenteo"},"content":"  * Cons: More difficult to implement","lastModifiedDate":"2021-11-06"},{"lineNumber":706,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":707,"author":{"gitId":"loose-bus-change"},"content":"* **Alternative 2:** Only allow 2 options : `Add on import` and `dont import`.","lastModifiedDate":"2021-11-08"},{"lineNumber":708,"author":{"gitId":"loose-bus-change"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":709,"author":{"gitId":"houtenteo"},"content":"  * Pros: Easier to implement","lastModifiedDate":"2021-11-06"},{"lineNumber":710,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":711,"author":{"gitId":"idgrr"},"content":"  * Cons: Less flexibility for users","lastModifiedDate":"2021-11-05"},{"lineNumber":712,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":713,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":714,"author":{"gitId":"houtenteo"},"content":"### Export feature","lastModifiedDate":"2021-11-08"},{"lineNumber":715,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":716,"author":{"gitId":"houtenteo"},"content":"The export feature is primarily facilitated by the StorageManager.","lastModifiedDate":"2021-11-08"},{"lineNumber":717,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":718,"author":{"gitId":"houtenteo"},"content":"This feature allows the user to easily transfer data from one device over to another.","lastModifiedDate":"2021-11-08"},{"lineNumber":719,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":720,"author":{"gitId":"houtenteo"},"content":"**Given below is an example usage scenario and how the export mechanism behaves at each step.**","lastModifiedDate":"2021-11-08"},{"lineNumber":721,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":722,"author":{"gitId":"houtenteo"},"content":"1. User wants to transfer the data over to another device and exports the data from the CMM database.","lastModifiedDate":"2021-11-08"},{"lineNumber":723,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":724,"author":{"gitId":"houtenteo"},"content":"2. MainWindow calls Logic to Export data","lastModifiedDate":"2021-11-08"},{"lineNumber":725,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":726,"author":{"gitId":"houtenteo"},"content":"3. Logic calls StorageManager to export the data found in model","lastModifiedDate":"2021-11-08"},{"lineNumber":727,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":728,"author":{"gitId":"houtenteo"},"content":"4. StorageManager calls CsvImportExportStorage to read and convert to Csv file","lastModifiedDate":"2021-11-08"},{"lineNumber":729,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":730,"author":{"gitId":"houtenteo"},"content":"5. Logic then saves the database after all contacts have been exported","lastModifiedDate":"2021-11-08"},{"lineNumber":731,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":732,"author":{"gitId":"houtenteo"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb:","lastModifiedDate":"2021-11-08"},{"lineNumber":733,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":734,"author":{"gitId":"houtenteo"},"content":"**Tip:** \u003cbr\u003e","lastModifiedDate":"2021-11-08"},{"lineNumber":735,"author":{"gitId":"houtenteo"},"content":"Export file will have the following file name : `export[Date HH:MM:SS].csv` where date and time will follow your system settings","lastModifiedDate":"2021-11-08"},{"lineNumber":736,"author":{"gitId":"houtenteo"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-11-08"},{"lineNumber":737,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":738,"author":{"gitId":"houtenteo"},"content":"#### Design considerations:","lastModifiedDate":"2021-11-08"},{"lineNumber":739,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":740,"author":{"gitId":"houtenteo"},"content":"**Aspect: When export should be executed:**","lastModifiedDate":"2021-11-08"},{"lineNumber":741,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":742,"author":{"gitId":"houtenteo"},"content":"* **Alternative 1 (current choice):** Always ask for export upon exit","lastModifiedDate":"2021-11-08"},{"lineNumber":743,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":744,"author":{"gitId":"houtenteo"},"content":"    * Pros: User will always be reminded to export the most updated list. This reduces the likelihood transferring outdated data across devices","lastModifiedDate":"2021-11-08"},{"lineNumber":745,"author":{"gitId":"houtenteo"},"content":"  ","lastModifiedDate":"2021-11-08"},{"lineNumber":746,"author":{"gitId":"houtenteo"},"content":"    * Cons: Popups may become annoying if user constantly opens and closes application","lastModifiedDate":"2021-11-08"},{"lineNumber":747,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":748,"author":{"gitId":"houtenteo"},"content":"* **Alternative 2:** Separate command to export.","lastModifiedDate":"2021-11-08"},{"lineNumber":749,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":750,"author":{"gitId":"houtenteo"},"content":"    * Pros: Fewer prompts upon exit. User can export while CMM is running","lastModifiedDate":"2021-11-08"},{"lineNumber":751,"author":{"gitId":"houtenteo"},"content":"  ","lastModifiedDate":"2021-11-08"},{"lineNumber":752,"author":{"gitId":"houtenteo"},"content":"    * Cons: User may forget to export the latest Excel file and transfer an outdated file to another device.","lastModifiedDate":"2021-11-08"},{"lineNumber":753,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":754,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Undo/redo feature","lastModifiedDate":"2020-06-07"},{"lineNumber":755,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":756,"author":{"gitId":"-"},"content":"#### Proposed Implementation","lastModifiedDate":"2020-05-23"},{"lineNumber":757,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":758,"author":{"gitId":"-"},"content":"The proposed undo/redo mechanism is facilitated by `VersionedAddressBook`. It extends `AddressBook` with an undo/redo history, stored internally as an `addressBookStateList` and `currentStatePointer`. Additionally, it implements the following operations:","lastModifiedDate":"2020-05-23"},{"lineNumber":759,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":760,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#commit()` — Saves the current address book state in its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":761,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#undo()` — Restores the previous address book state from its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":762,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#redo()` — Restores a previously undone address book state from its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":763,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":764,"author":{"gitId":"-"},"content":"These operations are exposed in the `Model` interface as `Model#commitAddressBook()`, `Model#undoAddressBook()` and `Model#redoAddressBook()` respectively.","lastModifiedDate":"2020-05-23"},{"lineNumber":765,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":766,"author":{"gitId":"-"},"content":"Given below is an example usage scenario and how the undo/redo mechanism behaves at each step.","lastModifiedDate":"2020-05-23"},{"lineNumber":767,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":768,"author":{"gitId":"houtenteo"},"content":"The user launches the application for the first time. The `VersionedAddressBook` will be initialized with the initial address book state, and the `currentStatePointer` pointing to that single address book state.","lastModifiedDate":"2021-11-08"},{"lineNumber":769,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":770,"author":{"gitId":"-"},"content":"![UndoRedoState0](images/UndoRedoState0.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":771,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":772,"author":{"gitId":"houtenteo"},"content":"The user executes `delete 5` command to delete the 5th contact in the address book. The `delete` command calls `Model#commitAddressBook()`, causing the modified state of the address book after the `delete 5` command executes to be saved in the `addressBookStateList`, and the `currentStatePointer` is shifted to the newly inserted address book state.","lastModifiedDate":"2021-11-08"},{"lineNumber":773,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":774,"author":{"gitId":"-"},"content":"![UndoRedoState1](images/UndoRedoState1.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":775,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":776,"author":{"gitId":"houtenteo"},"content":"The user executes `add n/David …​` to add a new contact. The `add` command also calls `Model#commitAddressBook()`, causing another modified address book state to be saved into the `addressBookStateList`.","lastModifiedDate":"2021-11-08"},{"lineNumber":777,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":778,"author":{"gitId":"-"},"content":"![UndoRedoState2](images/UndoRedoState2.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":779,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":780,"author":{"gitId":"idgrr"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source:","lastModifiedDate":"2021-11-08"},{"lineNumber":781,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":782,"author":{"gitId":"idgrr"},"content":"**Note:**\u003cbr\u003e","lastModifiedDate":"2021-11-08"},{"lineNumber":783,"author":{"gitId":"idgrr"},"content":"If a command fails its execution, it will not call `Model#commitAddressBook()`, so the address book state will not be saved into the `addressBookStateList`.","lastModifiedDate":"2021-11-08"},{"lineNumber":784,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":785,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":786,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":787,"author":{"gitId":"houtenteo"},"content":"The user now decides that adding the contact was a mistake, and decides to undo that action by executing the `undo` command. The `undo` command will call `Model#undoAddressBook()`, which will shift the `currentStatePointer` once to the left, pointing it to the previous address book state, and restores the address book to that state.","lastModifiedDate":"2021-11-08"},{"lineNumber":788,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":789,"author":{"gitId":"-"},"content":"![UndoRedoState3](images/UndoRedoState3.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":790,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":791,"author":{"gitId":"idgrr"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source:","lastModifiedDate":"2021-11-08"},{"lineNumber":792,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":793,"author":{"gitId":"idgrr"},"content":"**Note:**\u003cbr\u003e","lastModifiedDate":"2021-11-08"},{"lineNumber":794,"author":{"gitId":"idgrr"},"content":"If the `currentStatePointer` is at index 0, pointing to the initial AddressBook state, then there are no previous AddressBook states to restore. The `undo` command uses `Model#canUndoAddressBook()` to check if this is the case. If so, it will return an error to the user rather","lastModifiedDate":"2021-11-08"},{"lineNumber":795,"author":{"gitId":"-"},"content":"than attempting to perform the undo.","lastModifiedDate":"2020-05-23"},{"lineNumber":796,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":797,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":798,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":799,"author":{"gitId":"-"},"content":"The following sequence diagram shows how the undo operation works:","lastModifiedDate":"2020-05-23"},{"lineNumber":800,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":801,"author":{"gitId":"-"},"content":"![UndoSequenceDiagram](images/UndoSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":802,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":803,"author":{"gitId":"idgrr"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: ","lastModifiedDate":"2021-11-08"},{"lineNumber":804,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":805,"author":{"gitId":"idgrr"},"content":"**Note:**\u003cbr\u003e","lastModifiedDate":"2021-11-08"},{"lineNumber":806,"author":{"gitId":"idgrr"},"content":"The lifeline for `UndoCommand` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2021-11-08"},{"lineNumber":807,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":808,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":809,"author":{"gitId":"-"},"content":"The `redo` command does the opposite — it calls `Model#redoAddressBook()`, which shifts the `currentStatePointer` once to the right, pointing to the previously undone state, and restores the address book to that state.","lastModifiedDate":"2020-05-23"},{"lineNumber":810,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":811,"author":{"gitId":"idgrr"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: ","lastModifiedDate":"2021-11-08"},{"lineNumber":812,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":813,"author":{"gitId":"idgrr"},"content":"**Note:**\u003cbr\u003e","lastModifiedDate":"2021-11-08"},{"lineNumber":814,"author":{"gitId":"idgrr"},"content":"If the `currentStatePointer` is at index `addressBookStateList.size() - 1`, pointing to the latest address book state, then there are no undone AddressBook states to restore. The `redo` command uses `Model#canRedoAddressBook()` to check if this is the case. If so, it will return an error to the user rather than attempting to perform the redo.","lastModifiedDate":"2021-11-08"},{"lineNumber":815,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":816,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":817,"author":{"gitId":"houtenteo"},"content":"The user then decides to execute the command `list`. Commands that do not modify the address book, such as `list`, will usually not call `Model#commitAddressBook()`, `Model#undoAddressBook()` or `Model#redoAddressBook()`. Thus, the `addressBookStateList` remains unchanged.","lastModifiedDate":"2021-11-08"},{"lineNumber":818,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":819,"author":{"gitId":"-"},"content":"![UndoRedoState4](images/UndoRedoState4.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":820,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":821,"author":{"gitId":"houtenteo"},"content":"The user executes `clear`, which calls `Model#commitAddressBook()`. Since the `currentStatePointer` is not pointing at the end of the `addressBookStateList`, all address book states after the `currentStatePointer` will be purged. Reason: It no longer makes sense to redo the `add n/David …​` command. This is the behavior that most modern desktop applications follow.","lastModifiedDate":"2021-11-08"},{"lineNumber":822,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":823,"author":{"gitId":"-"},"content":"![UndoRedoState5](images/UndoRedoState5.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":824,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":825,"author":{"gitId":"-"},"content":"The following activity diagram summarizes what happens when a user executes a new command:","lastModifiedDate":"2020-05-23"},{"lineNumber":826,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":827,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/CommitActivityDiagram.png\" width\u003d\"250\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":828,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":829,"author":{"gitId":"-"},"content":"#### Design considerations:","lastModifiedDate":"2021-07-31"},{"lineNumber":830,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":831,"author":{"gitId":"-"},"content":"**Aspect: How undo \u0026 redo executes:**","lastModifiedDate":"2021-07-31"},{"lineNumber":832,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":833,"author":{"gitId":"-"},"content":"* **Alternative 1 (current choice):** Saves the entire address book.","lastModifiedDate":"2020-05-23"},{"lineNumber":834,"author":{"gitId":"loose-bus-change"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":835,"author":{"gitId":"-"},"content":"  * Pros: Easy to implement.","lastModifiedDate":"2020-05-23"},{"lineNumber":836,"author":{"gitId":"loose-bus-change"},"content":"  ","lastModifiedDate":"2021-11-08"},{"lineNumber":837,"author":{"gitId":"-"},"content":"  * Cons: May have performance issues in terms of memory usage.","lastModifiedDate":"2020-05-23"},{"lineNumber":838,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":839,"author":{"gitId":"loose-bus-change"},"content":"* **Alternative 2:** Individual command knows how to undo/redo by itself.","lastModifiedDate":"2021-11-08"},{"lineNumber":840,"author":{"gitId":"loose-bus-change"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":841,"author":{"gitId":"Kangxun"},"content":"  * Pros: Will use less memory (e.g. for `delete`, just save the contact being deleted).","lastModifiedDate":"2021-10-27"},{"lineNumber":842,"author":{"gitId":"loose-bus-change"},"content":"  ","lastModifiedDate":"2021-11-08"},{"lineNumber":843,"author":{"gitId":"-"},"content":"  * Cons: We must ensure that the implementation of each individual command are correct.","lastModifiedDate":"2020-05-23"},{"lineNumber":844,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":845,"author":{"gitId":"-"},"content":"_{more aspects and alternatives to be added}_","lastModifiedDate":"2020-05-23"},{"lineNumber":846,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":847,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":848,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":849,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":850,"author":{"gitId":"-"},"content":"## **Documentation, logging, testing, configuration, dev-ops** ","lastModifiedDate":"2020-06-07"},{"lineNumber":851,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":852,"author":{"gitId":"houtenteo"},"content":"Here are some guides that you may find useful.","lastModifiedDate":"2021-11-05"},{"lineNumber":853,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":854,"author":{"gitId":"-"},"content":"* [Documentation guide](Documentation.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":855,"author":{"gitId":"-"},"content":"* [Testing guide](Testing.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":856,"author":{"gitId":"-"},"content":"* [Logging guide](Logging.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":857,"author":{"gitId":"-"},"content":"* [Configuration guide](Configuration.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":858,"author":{"gitId":"-"},"content":"* [DevOps guide](DevOps.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":859,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":860,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":861,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":862,"author":{"gitId":"-"},"content":"## **Appendix: Requirements**","lastModifiedDate":"2020-05-23"},{"lineNumber":863,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":864,"author":{"gitId":"-"},"content":"### Product scope","lastModifiedDate":"2020-05-23"},{"lineNumber":865,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":866,"author":{"gitId":"-"},"content":"**Target user profile**:","lastModifiedDate":"2020-05-23"},{"lineNumber":867,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":868,"author":{"gitId":"houtenteo"},"content":"* Telemarketers","lastModifiedDate":"2021-10-01"},{"lineNumber":869,"author":{"gitId":"loose-bus-change"},"content":"* has the potential to receive a list of contacts through an Excel file","lastModifiedDate":"2021-11-08"},{"lineNumber":870,"author":{"gitId":"loose-bus-change"},"content":"* prefer desktop apps over other alternatives","lastModifiedDate":"2021-11-08"},{"lineNumber":871,"author":{"gitId":"-"},"content":"* can type fast","lastModifiedDate":"2020-05-23"},{"lineNumber":872,"author":{"gitId":"-"},"content":"* prefers typing to mouse interactions","lastModifiedDate":"2020-05-26"},{"lineNumber":873,"author":{"gitId":"-"},"content":"* is reasonably comfortable using CLI apps","lastModifiedDate":"2020-05-23"},{"lineNumber":874,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":875,"author":{"gitId":"loose-bus-change"},"content":"**Value proposition**: manage potentially interested contacts faster than a typical mouse/ GUI driven app","lastModifiedDate":"2021-11-08"},{"lineNumber":876,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":877,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":878,"author":{"gitId":"-"},"content":"### User stories","lastModifiedDate":"2020-06-07"},{"lineNumber":879,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":880,"author":{"gitId":"-"},"content":"Priorities: High (must have) - `* * *`, Medium (nice to have) - `* *`, Low (unlikely to have) - `*`","lastModifiedDate":"2020-05-23"},{"lineNumber":881,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":882,"author":{"gitId":"-"},"content":"| Priority | As a …​                                  | I want to …​                  | So that I can…​                                                         |","lastModifiedDate":"2020-05-23"},{"lineNumber":883,"author":{"gitId":"idgrr"},"content":"| -------- | ------------------------------------------- | ------------------------------   | -------------------------------------------------------------------------- |","lastModifiedDate":"2021-11-05"},{"lineNumber":884,"author":{"gitId":"-"},"content":"| `* * *`  | new user                                    | see usage instructions           | refer to instructions when I forget how to use the App                     |","lastModifiedDate":"2020-05-23"},{"lineNumber":885,"author":{"gitId":"idgrr"},"content":"| `* * *`  | Telemarketer                                | import data from an excel file   | work on the list of contacts that was  set for me by my manager            |","lastModifiedDate":"2021-09-20"},{"lineNumber":886,"author":{"gitId":"idgrr"},"content":"| `* * *`  | Telemarketer                                | export data to an excel file     | return updated list of called contacts to my manager at the end of the day |","lastModifiedDate":"2021-11-05"},{"lineNumber":887,"author":{"gitId":"Kangxun"},"content":"| `* * *`  | user                                        | add a new contact                |                                                                            |","lastModifiedDate":"2021-11-08"},{"lineNumber":888,"author":{"gitId":"Kangxun"},"content":"| `* * *`  | user                                        | delete a contact                 | remove entries that I no longer need                                       |","lastModifiedDate":"2021-11-08"},{"lineNumber":889,"author":{"gitId":"loose-bus-change"},"content":"| `* * *`  | user                                        | edit an existing contact         | make corrections when the contacts\u0027 details change                         |","lastModifiedDate":"2021-11-08"},{"lineNumber":890,"author":{"gitId":"Kangxun"},"content":"| `* * *`  | user                                        | display a contact                | display additional details about a particular contact                      |","lastModifiedDate":"2021-11-08"},{"lineNumber":891,"author":{"gitId":"loose-bus-change"},"content":"| `* * *`  | user with many contacts in the address book | find a contact by name           | locate details of contact without having to go through the entire list     |","lastModifiedDate":"2021-11-08"},{"lineNumber":892,"author":{"gitId":"loose-bus-change"},"content":"| `* * *`  | user with many contacts in the address book | find a contact by other details  | locate those contacts who are of interest to me based on their details     |","lastModifiedDate":"2021-11-08"},{"lineNumber":893,"author":{"gitId":"-"},"content":"| `* *`    | user                                        | hide private contact details     | minimize chance of someone else seeing them by accident                    |","lastModifiedDate":"2020-05-23"},{"lineNumber":894,"author":{"gitId":"loose-bus-change"},"content":"| `* *`    | user with many contacts in the address book | filter contacts by called status | locate contacts who have not been called quickly                           |","lastModifiedDate":"2021-11-08"},{"lineNumber":895,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":896,"author":{"gitId":"-"},"content":"### Use cases","lastModifiedDate":"2020-06-07"},{"lineNumber":897,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":898,"author":{"gitId":"Kangxun"},"content":"(For all use cases below, the **System** is `CallMeMaybe` and the **Actor** is the `user`, unless specified otherwise)","lastModifiedDate":"2021-10-02"},{"lineNumber":899,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":900,"author":{"gitId":"Kangxun"},"content":"**Use Case 1: Add a contact**","lastModifiedDate":"2021-10-27"},{"lineNumber":901,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":902,"author":{"gitId":"idgrr"},"content":"System : CallMeMaybe (CMM) \u003cbr\u003e","lastModifiedDate":"2021-11-05"},{"lineNumber":903,"author":{"gitId":"idgrr"},"content":"Use Case : UC1 - Add a contact \u003cbr\u003e","lastModifiedDate":"2021-11-05"},{"lineNumber":904,"author":{"gitId":"idgrr"},"content":"Actor : User \u003cbr\u003e","lastModifiedDate":"2021-11-05"},{"lineNumber":905,"author":{"gitId":"Kangxun"},"content":"Guarantees: New contact will be added to the address book","lastModifiedDate":"2021-10-27"},{"lineNumber":906,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":907,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2021-09-30"},{"lineNumber":908,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":909,"author":{"gitId":"Kangxun"},"content":"1. User requests to add a contact","lastModifiedDate":"2021-10-27"},{"lineNumber":910,"author":{"gitId":"loose-bus-change"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":911,"author":{"gitId":"Kangxun"},"content":"2. Contact gets added into the address book","lastModifiedDate":"2021-10-27"},{"lineNumber":912,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":913,"author":{"gitId":"-"},"content":"    Use case ends.","lastModifiedDate":"2021-09-30"},{"lineNumber":914,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":915,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2021-09-30"},{"lineNumber":916,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":917,"author":{"gitId":"houtenteo"},"content":"* 1a. User enters the command wrongly","lastModifiedDate":"2021-09-30"},{"lineNumber":918,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":919,"author":{"gitId":"houtenteo"},"content":"  * 1a1. Command box displays error message","lastModifiedDate":"2021-09-30"},{"lineNumber":920,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":921,"author":{"gitId":"houtenteo"},"content":"    Use case resumes at step 1","lastModifiedDate":"2021-09-30"},{"lineNumber":922,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":923,"author":{"gitId":"Kangxun"},"content":"**Use Case 2: List contacts**","lastModifiedDate":"2021-10-27"},{"lineNumber":924,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":925,"author":{"gitId":"idgrr"},"content":"System : CallMeMaybe (CMM) \u003cbr\u003e","lastModifiedDate":"2021-11-05"},{"lineNumber":926,"author":{"gitId":"idgrr"},"content":"Use Case : UC2 - List contacts \u003cbr\u003e","lastModifiedDate":"2021-11-05"},{"lineNumber":927,"author":{"gitId":"idgrr"},"content":"Actor : User \u003cbr\u003e","lastModifiedDate":"2021-11-05"},{"lineNumber":928,"author":{"gitId":"Kangxun"},"content":"Guarantees: Contacts in the address book will be listed","lastModifiedDate":"2021-10-27"},{"lineNumber":929,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":930,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2020-05-23"},{"lineNumber":931,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":932,"author":{"gitId":"Kangxun"},"content":"1. User requests to list contacts","lastModifiedDate":"2021-10-27"},{"lineNumber":933,"author":{"gitId":"loose-bus-change"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":934,"author":{"gitId":"Kangxun"},"content":"2. All contacts in the address book is listed","lastModifiedDate":"2021-10-27"},{"lineNumber":935,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":936,"author":{"gitId":"houtenteo"},"content":"    Use case ends","lastModifiedDate":"2021-09-30"},{"lineNumber":937,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":938,"author":{"gitId":"houtenteo"},"content":"**Extensions**","lastModifiedDate":"2021-09-30"},{"lineNumber":939,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":940,"author":{"gitId":"houtenteo"},"content":"* 1a. Address book is empty","lastModifiedDate":"2021-09-30"},{"lineNumber":941,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":942,"author":{"gitId":"houtenteo"},"content":"    Use case ends","lastModifiedDate":"2021-09-30"},{"lineNumber":943,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":944,"author":{"gitId":"Kangxun"},"content":"**Use Case 3: Delete a contact**","lastModifiedDate":"2021-10-27"},{"lineNumber":945,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":946,"author":{"gitId":"idgrr"},"content":"System : CallMeMaybe (CMM) \u003cbr\u003e","lastModifiedDate":"2021-11-05"},{"lineNumber":947,"author":{"gitId":"idgrr"},"content":"Use Case : UC3 - Delete a contact \u003cbr\u003e","lastModifiedDate":"2021-11-05"},{"lineNumber":948,"author":{"gitId":"idgrr"},"content":"Actor : User \u003cbr\u003e","lastModifiedDate":"2021-11-05"},{"lineNumber":949,"author":{"gitId":"Kangxun"},"content":"Guarantees: Selected contact will be deleted from the address book","lastModifiedDate":"2021-10-27"},{"lineNumber":950,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":951,"author":{"gitId":"houtenteo"},"content":"**MSS**","lastModifiedDate":"2021-09-30"},{"lineNumber":952,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":953,"author":{"gitId":"Kangxun"},"content":"1. User requests to list contacts (UC2)","lastModifiedDate":"2021-10-27"},{"lineNumber":954,"author":{"gitId":"loose-bus-change"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":955,"author":{"gitId":"Kangxun"},"content":"2. User requests to delete a specific contact in the list","lastModifiedDate":"2021-10-27"},{"lineNumber":956,"author":{"gitId":"loose-bus-change"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":957,"author":{"gitId":"houtenteo"},"content":"3. CMM deletes the contact","lastModifiedDate":"2021-11-08"},{"lineNumber":958,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":959,"author":{"gitId":"-"},"content":"    Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":960,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":961,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2020-05-23"},{"lineNumber":962,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":963,"author":{"gitId":"houtenteo"},"content":"* 1a. The list is empty.","lastModifiedDate":"2021-09-30"},{"lineNumber":964,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":965,"author":{"gitId":"-"},"content":"  Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":966,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":967,"author":{"gitId":"houtenteo"},"content":"* 2a. The given index is invalid.","lastModifiedDate":"2021-09-30"},{"lineNumber":968,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":969,"author":{"gitId":"houtenteo"},"content":"    * 2a1. CMM shows an error message.","lastModifiedDate":"2021-11-08"},{"lineNumber":970,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":971,"author":{"gitId":"-"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2020-05-23"},{"lineNumber":972,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":973,"author":{"gitId":"idgrr"},"content":"**Use Case 4: Mark a contact as called**","lastModifiedDate":"2021-11-05"},{"lineNumber":974,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":975,"author":{"gitId":"idgrr"},"content":"System : CallMeMaybe (CMM) \u003cbr\u003e","lastModifiedDate":"2021-11-05"},{"lineNumber":976,"author":{"gitId":"idgrr"},"content":"Use Case : UC4 - Mark contact as called \u003cbr\u003e","lastModifiedDate":"2021-11-05"},{"lineNumber":977,"author":{"gitId":"idgrr"},"content":"Actor : User \u003cbr\u003e","lastModifiedDate":"2021-11-05"},{"lineNumber":978,"author":{"gitId":"Kangxun"},"content":"Guarantees: Selected contact will be marked as called","lastModifiedDate":"2021-10-27"},{"lineNumber":979,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":980,"author":{"gitId":"houtenteo"},"content":"**MSS**","lastModifiedDate":"2021-09-30"},{"lineNumber":981,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":982,"author":{"gitId":"Kangxun"},"content":"1. User requests to list contacts (UC2)","lastModifiedDate":"2021-10-27"},{"lineNumber":983,"author":{"gitId":"loose-bus-change"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":984,"author":{"gitId":"Kangxun"},"content":"2. User requests to mark a contact as called","lastModifiedDate":"2021-10-27"},{"lineNumber":985,"author":{"gitId":"loose-bus-change"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":986,"author":{"gitId":"houtenteo"},"content":"3. CMM marks the selected contact as called","lastModifiedDate":"2021-11-08"},{"lineNumber":987,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":988,"author":{"gitId":"houtenteo"},"content":"**Extensions**","lastModifiedDate":"2021-09-30"},{"lineNumber":989,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":990,"author":{"gitId":"houtenteo"},"content":"* 1a. List is empty","lastModifiedDate":"2021-09-30"},{"lineNumber":991,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":992,"author":{"gitId":"houtenteo"},"content":"  Use case ends","lastModifiedDate":"2021-09-30"},{"lineNumber":993,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":994,"author":{"gitId":"houtenteo"},"content":"* 2a. The given index is invalid","lastModifiedDate":"2021-09-30"},{"lineNumber":995,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":996,"author":{"gitId":"houtenteo"},"content":"  * 2a1. CMM shows an error message","lastModifiedDate":"2021-11-08"},{"lineNumber":997,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":998,"author":{"gitId":"houtenteo"},"content":"    Use case resumes at step 2","lastModifiedDate":"2021-09-30"},{"lineNumber":999,"author":{"gitId":"houtenteo"},"content":"  ","lastModifiedDate":"2021-09-30"},{"lineNumber":1000,"author":{"gitId":"idgrr"},"content":"**Use Case 5: Using an Excel file to import data of users**","lastModifiedDate":"2021-09-20"},{"lineNumber":1001,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":1002,"author":{"gitId":"idgrr"},"content":"System : CallMeMaybe (CMM) \u003cbr\u003e","lastModifiedDate":"2021-11-05"},{"lineNumber":1003,"author":{"gitId":"idgrr"},"content":"Use Case : UC5 - Import Excel File \u003cbr\u003e","lastModifiedDate":"2021-11-05"},{"lineNumber":1004,"author":{"gitId":"idgrr"},"content":"Actor : User \u003cbr\u003e","lastModifiedDate":"2021-11-05"},{"lineNumber":1005,"author":{"gitId":"idgrr"},"content":"Guarantees: CMM Database will be set","lastModifiedDate":"2021-09-20"},{"lineNumber":1006,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":1007,"author":{"gitId":"houtenteo"},"content":"**MSS**","lastModifiedDate":"2021-09-30"},{"lineNumber":1008,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":1009,"author":{"gitId":"houtenteo"},"content":"1. Upon startup, CMM prompts user whether to start importing with a new Database, or to import into the existing database","lastModifiedDate":"2021-11-08"},{"lineNumber":1010,"author":{"gitId":"loose-bus-change"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":1011,"author":{"gitId":"loose-bus-change"},"content":"2. User determines import setting","lastModifiedDate":"2021-11-08"},{"lineNumber":1012,"author":{"gitId":"loose-bus-change"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":1013,"author":{"gitId":"houtenteo"},"content":"3. CMM imports the file accordingly","lastModifiedDate":"2021-11-08"},{"lineNumber":1014,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":1015,"author":{"gitId":"houtenteo"},"content":"   Use case ends","lastModifiedDate":"2021-11-08"},{"lineNumber":1016,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":1017,"author":{"gitId":"idgrr"},"content":"**Extensions**","lastModifiedDate":"2021-09-20"},{"lineNumber":1018,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":1019,"author":{"gitId":"idgrr"},"content":"* 1a. User does not want to import any new data","lastModifiedDate":"2021-09-20"},{"lineNumber":1020,"author":{"gitId":"loose-bus-change"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":1021,"author":{"gitId":"houtenteo"},"content":"    Use case ends","lastModifiedDate":"2021-11-08"},{"lineNumber":1022,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":1023,"author":{"gitId":"idgrr"},"content":"* 2a. User request to create a new Database when CMM has no existing database","lastModifiedDate":"2021-09-20"},{"lineNumber":1024,"author":{"gitId":"loose-bus-change"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":1025,"author":{"gitId":"houtenteo"},"content":"    * 2a1. CMM will convert the Excel file to the correct datatype to be stored inside CMM","lastModifiedDate":"2021-11-08"},{"lineNumber":1026,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":1027,"author":{"gitId":"houtenteo"},"content":"  Use case resumes from step 3","lastModifiedDate":"2021-11-08"},{"lineNumber":1028,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":1029,"author":{"gitId":"idgrr"},"content":"* 2b. User request to create a new Database when CMM has existing database","lastModifiedDate":"2021-10-21"},{"lineNumber":1030,"author":{"gitId":"loose-bus-change"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":1031,"author":{"gitId":"houtenteo"},"content":"    * 2b1. CMM exports the current database (UC6)","lastModifiedDate":"2021-11-08"},{"lineNumber":1032,"author":{"gitId":"loose-bus-change"},"content":"  ","lastModifiedDate":"2021-11-08"},{"lineNumber":1033,"author":{"gitId":"houtenteo"},"content":"    * 2b2. CMM clears the current database","lastModifiedDate":"2021-11-08"},{"lineNumber":1034,"author":{"gitId":"loose-bus-change"},"content":"  ","lastModifiedDate":"2021-11-08"},{"lineNumber":1035,"author":{"gitId":"houtenteo"},"content":"    * 2b3. CMM will convert the Excel file to the correct datatype to be stored inside CMM","lastModifiedDate":"2021-11-08"},{"lineNumber":1036,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":1037,"author":{"gitId":"houtenteo"},"content":"  Use case resumes from step 3","lastModifiedDate":"2021-11-08"},{"lineNumber":1038,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":1039,"author":{"gitId":"idgrr"},"content":"* 2c. User request to add on to current Database when CMM has existing database","lastModifiedDate":"2021-10-21"},{"lineNumber":1040,"author":{"gitId":"loose-bus-change"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":1041,"author":{"gitId":"houtenteo"},"content":"    * 2c1. CMM will convert the Excel file to the correct datatype to be stored inside CMM","lastModifiedDate":"2021-11-08"},{"lineNumber":1042,"author":{"gitId":"loose-bus-change"},"content":"  ","lastModifiedDate":"2021-11-08"},{"lineNumber":1043,"author":{"gitId":"houtenteo"},"content":"    * 2c2. CMM adds on to current database","lastModifiedDate":"2021-11-08"},{"lineNumber":1044,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":1045,"author":{"gitId":"houtenteo"},"content":"  Use case resumes from step 3","lastModifiedDate":"2021-11-08"},{"lineNumber":1046,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":1047,"author":{"gitId":"idgrr"},"content":"* 2d. User request to add on to current Database when CMM has no existing database","lastModifiedDate":"2021-10-21"},{"lineNumber":1048,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":1049,"author":{"gitId":"houtenteo"},"content":"    * 2d1. CMM will convert the Excel file to the correct datatype to be stored inside CMM","lastModifiedDate":"2021-11-08"},{"lineNumber":1050,"author":{"gitId":"loose-bus-change"},"content":"  ","lastModifiedDate":"2021-11-08"},{"lineNumber":1051,"author":{"gitId":"houtenteo"},"content":"    * 2d2. CMM creates new database","lastModifiedDate":"2021-11-08"},{"lineNumber":1052,"author":{"gitId":"loose-bus-change"},"content":"  ","lastModifiedDate":"2021-11-08"},{"lineNumber":1053,"author":{"gitId":"houtenteo"},"content":"    * 2d3. CMM adds on to current database","lastModifiedDate":"2021-11-08"},{"lineNumber":1054,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":1055,"author":{"gitId":"houtenteo"},"content":"  Use case resumes from step 3","lastModifiedDate":"2021-11-08"},{"lineNumber":1056,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":1057,"author":{"gitId":"idgrr"},"content":"* 3a. During import, User uses a file that does not exist","lastModifiedDate":"2021-11-08"},{"lineNumber":1058,"author":{"gitId":"loose-bus-change"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":1059,"author":{"gitId":"idgrr"},"content":"    * 3a1. CMM will cancel the transfer","lastModifiedDate":"2021-11-08"},{"lineNumber":1060,"author":{"gitId":"loose-bus-change"},"content":"  ","lastModifiedDate":"2021-11-08"},{"lineNumber":1061,"author":{"gitId":"idgrr"},"content":"    * 3a2. CMM informs the user of the cancellation","lastModifiedDate":"2021-11-08"},{"lineNumber":1062,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":1063,"author":{"gitId":"houtenteo"},"content":"  Use case ends","lastModifiedDate":"2021-11-08"},{"lineNumber":1064,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":1065,"author":{"gitId":"idgrr"},"content":"* 3a. During import, User uses a file that does not follow the set format","lastModifiedDate":"2021-11-08"},{"lineNumber":1066,"author":{"gitId":"loose-bus-change"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":1067,"author":{"gitId":"idgrr"},"content":"    * 3a1. CMM will cancel the transfer","lastModifiedDate":"2021-11-08"},{"lineNumber":1068,"author":{"gitId":"idgrr"},"content":"  ","lastModifiedDate":"2021-09-20"},{"lineNumber":1069,"author":{"gitId":"idgrr"},"content":"    * 3a2. CMM informs the user of the cancellation","lastModifiedDate":"2021-11-08"},{"lineNumber":1070,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":1071,"author":{"gitId":"houtenteo"},"content":"  Use case ends","lastModifiedDate":"2021-11-08"},{"lineNumber":1072,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":1073,"author":{"gitId":"idgrr"},"content":"**Use Case 6: Exporting current database into Excel file**","lastModifiedDate":"2021-11-08"},{"lineNumber":1074,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":1075,"author":{"gitId":"idgrr"},"content":"System : CallMeMaybe (CMM) \u003cbr\u003e","lastModifiedDate":"2021-11-05"},{"lineNumber":1076,"author":{"gitId":"idgrr"},"content":"Use Case : UC6 - Export database as Excel File \u003cbr\u003e","lastModifiedDate":"2021-11-05"},{"lineNumber":1077,"author":{"gitId":"idgrr"},"content":"Actor : User \u003cbr\u003e","lastModifiedDate":"2021-11-05"},{"lineNumber":1078,"author":{"gitId":"houtenteo"},"content":"Guarantees: Export of current database into an Excel file","lastModifiedDate":"2021-11-08"},{"lineNumber":1079,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":1080,"author":{"gitId":"loose-bus-change"},"content":"**MSS**","lastModifiedDate":"2021-11-08"},{"lineNumber":1081,"author":{"gitId":"loose-bus-change"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":1082,"author":{"gitId":"houtenteo"},"content":"1. User request CMM to export database into Excel file","lastModifiedDate":"2021-11-08"},{"lineNumber":1083,"author":{"gitId":"loose-bus-change"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":1084,"author":{"gitId":"houtenteo"},"content":"2. CMM exports database into a new Excel file","lastModifiedDate":"2021-11-08"},{"lineNumber":1085,"author":{"gitId":"loose-bus-change"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":1086,"author":{"gitId":"houtenteo"},"content":"   Use case ends","lastModifiedDate":"2021-11-08"},{"lineNumber":1087,"author":{"gitId":"loose-bus-change"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":1088,"author":{"gitId":"Kangxun"},"content":"**Use Case 7: Displaying additional details about a contact**","lastModifiedDate":"2021-11-08"},{"lineNumber":1089,"author":{"gitId":"loose-bus-change"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":1090,"author":{"gitId":"idgrr"},"content":"System : CallMeMaybe (CMM) \u003cbr\u003e","lastModifiedDate":"2021-11-05"},{"lineNumber":1091,"author":{"gitId":"Kangxun"},"content":"Use Case : UC7 - Display a contact \u003cbr\u003e","lastModifiedDate":"2021-11-08"},{"lineNumber":1092,"author":{"gitId":"idgrr"},"content":"Actor : User \u003cbr\u003e","lastModifiedDate":"2021-11-05"},{"lineNumber":1093,"author":{"gitId":"Kangxun"},"content":"Guarantees: Selected contact\u0027s additional details will be displayed","lastModifiedDate":"2021-11-08"},{"lineNumber":1094,"author":{"gitId":"loose-bus-change"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":1095,"author":{"gitId":"loose-bus-change"},"content":"**MSS**","lastModifiedDate":"2021-10-28"},{"lineNumber":1096,"author":{"gitId":"loose-bus-change"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":1097,"author":{"gitId":"houtenteo"},"content":"1. User requests to display a specific contact in the list","lastModifiedDate":"2021-11-08"},{"lineNumber":1098,"author":{"gitId":"loose-bus-change"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":1099,"author":{"gitId":"houtenteo"},"content":"2. Application displays the contact details in the person card","lastModifiedDate":"2021-11-08"},{"lineNumber":1100,"author":{"gitId":"loose-bus-change"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":1101,"author":{"gitId":"houtenteo"},"content":"   Use case ends","lastModifiedDate":"2021-11-08"},{"lineNumber":1102,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":1103,"author":{"gitId":"houtenteo"},"content":"**Extensions**","lastModifiedDate":"2021-11-08"},{"lineNumber":1104,"author":{"gitId":"loose-bus-change"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":1105,"author":{"gitId":"loose-bus-change"},"content":"* 1a. The list is empty.","lastModifiedDate":"2021-10-28"},{"lineNumber":1106,"author":{"gitId":"loose-bus-change"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":1107,"author":{"gitId":"houtenteo"},"content":"  Use case ends","lastModifiedDate":"2021-11-08"},{"lineNumber":1108,"author":{"gitId":"loose-bus-change"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":1109,"author":{"gitId":"houtenteo"},"content":"* 1b. The given index is invalid.","lastModifiedDate":"2021-11-08"},{"lineNumber":1110,"author":{"gitId":"loose-bus-change"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":1111,"author":{"gitId":"houtenteo"},"content":"    * 1b1. Command box displays an error message","lastModifiedDate":"2021-11-08"},{"lineNumber":1112,"author":{"gitId":"loose-bus-change"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":1113,"author":{"gitId":"houtenteo"},"content":"      Use case ends","lastModifiedDate":"2021-11-08"},{"lineNumber":1114,"author":{"gitId":"loose-bus-change"},"content":"    ","lastModifiedDate":"2021-10-28"},{"lineNumber":1115,"author":{"gitId":"loose-bus-change"},"content":"**Use Case 8: Filter contacts**","lastModifiedDate":"2021-10-28"},{"lineNumber":1116,"author":{"gitId":"loose-bus-change"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":1117,"author":{"gitId":"idgrr"},"content":"System : CallMeMaybe (CMM) \u003cbr\u003e","lastModifiedDate":"2021-11-05"},{"lineNumber":1118,"author":{"gitId":"idgrr"},"content":"Use Case : UC8 - Filter contacts \u003cbr\u003e","lastModifiedDate":"2021-11-05"},{"lineNumber":1119,"author":{"gitId":"idgrr"},"content":"Actor : User \u003cbr\u003e","lastModifiedDate":"2021-11-05"},{"lineNumber":1120,"author":{"gitId":"idgrr"},"content":"Guarantees: Contacts will be sorted by the category specified","lastModifiedDate":"2021-11-08"},{"lineNumber":1121,"author":{"gitId":"Kangxun"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":1122,"author":{"gitId":"Kangxun"},"content":"**MSS**","lastModifiedDate":"2021-10-26"},{"lineNumber":1123,"author":{"gitId":"Kangxun"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":1124,"author":{"gitId":"Kangxun"},"content":"1. User requests to filter contacts","lastModifiedDate":"2021-10-27"},{"lineNumber":1125,"author":{"gitId":"loose-bus-change"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":1126,"author":{"gitId":"Kangxun"},"content":"2. Contacts be filtered based on the fields specified by the user.","lastModifiedDate":"2021-10-27"},{"lineNumber":1127,"author":{"gitId":"Kangxun"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":1128,"author":{"gitId":"houtenteo"},"content":"   Use case ends","lastModifiedDate":"2021-11-08"},{"lineNumber":1129,"author":{"gitId":"Kangxun"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":1130,"author":{"gitId":"Kangxun"},"content":"**Extensions**","lastModifiedDate":"2021-10-26"},{"lineNumber":1131,"author":{"gitId":"Kangxun"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":1132,"author":{"gitId":"Kangxun"},"content":"* 1a. User enters the command wrongly","lastModifiedDate":"2021-10-26"},{"lineNumber":1133,"author":{"gitId":"Kangxun"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":1134,"author":{"gitId":"Kangxun"},"content":"    * 1a1. Command box displays error message","lastModifiedDate":"2021-10-26"},{"lineNumber":1135,"author":{"gitId":"Kangxun"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":1136,"author":{"gitId":"houtenteo"},"content":"      Use case ends","lastModifiedDate":"2021-11-08"},{"lineNumber":1137,"author":{"gitId":"Kangxun"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":1138,"author":{"gitId":"Kangxun"},"content":"* 1b. User enters an invalid field","lastModifiedDate":"2021-10-26"},{"lineNumber":1139,"author":{"gitId":"Kangxun"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":1140,"author":{"gitId":"Kangxun"},"content":"    * 1b1. Command box displays error message","lastModifiedDate":"2021-10-26"},{"lineNumber":1141,"author":{"gitId":"Kangxun"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":1142,"author":{"gitId":"houtenteo"},"content":"      Use case ends","lastModifiedDate":"2021-11-08"},{"lineNumber":1143,"author":{"gitId":"Kangxun"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":1144,"author":{"gitId":"houtenteo"},"content":"**Use Case 9: Finding specific contacts**","lastModifiedDate":"2021-11-06"},{"lineNumber":1145,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":1146,"author":{"gitId":"houtenteo"},"content":"System : CallMeMaybe (CMM) \u003cbr\u003e","lastModifiedDate":"2021-11-05"},{"lineNumber":1147,"author":{"gitId":"houtenteo"},"content":"Use Case : UC9 - Finding specific contacts \u003cbr\u003e","lastModifiedDate":"2021-11-05"},{"lineNumber":1148,"author":{"gitId":"houtenteo"},"content":"Actor : User \u003cbr\u003e","lastModifiedDate":"2021-11-05"},{"lineNumber":1149,"author":{"gitId":"houtenteo"},"content":"Guarantees: All contacts that match the specified fields would be displayed","lastModifiedDate":"2021-11-05"},{"lineNumber":1150,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":1151,"author":{"gitId":"houtenteo"},"content":"**MSS**","lastModifiedDate":"2021-11-05"},{"lineNumber":1152,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":1153,"author":{"gitId":"houtenteo"},"content":"1. User requests to find contacts","lastModifiedDate":"2021-11-05"},{"lineNumber":1154,"author":{"gitId":"loose-bus-change"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":1155,"author":{"gitId":"houtenteo"},"content":"2. Only the contacts the match the keywords specified are displayed","lastModifiedDate":"2021-11-05"},{"lineNumber":1156,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":1157,"author":{"gitId":"houtenteo"},"content":"   Use case ends","lastModifiedDate":"2021-11-08"},{"lineNumber":1158,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":1159,"author":{"gitId":"houtenteo"},"content":"**Extensions**","lastModifiedDate":"2021-11-05"},{"lineNumber":1160,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":1161,"author":{"gitId":"Kangxun"},"content":"* 1a. User enters the command wrongly","lastModifiedDate":"2021-10-26"},{"lineNumber":1162,"author":{"gitId":"Kangxun"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":1163,"author":{"gitId":"Kangxun"},"content":"    * 1a1. Command box displays error message","lastModifiedDate":"2021-10-26"},{"lineNumber":1164,"author":{"gitId":"Kangxun"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":1165,"author":{"gitId":"houtenteo"},"content":"      Use case ends","lastModifiedDate":"2021-11-08"},{"lineNumber":1166,"author":{"gitId":"Kangxun"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":1167,"author":{"gitId":"Kangxun"},"content":"* 1b. User enters an invalid field","lastModifiedDate":"2021-10-26"},{"lineNumber":1168,"author":{"gitId":"Kangxun"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":1169,"author":{"gitId":"Kangxun"},"content":"    * 1b1. Command box displays error message","lastModifiedDate":"2021-10-26"},{"lineNumber":1170,"author":{"gitId":"Kangxun"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":1171,"author":{"gitId":"houtenteo"},"content":"      Use case ends","lastModifiedDate":"2021-11-08"},{"lineNumber":1172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1173,"author":{"gitId":"pranav-ganesh"},"content":"**Use Case 10: Edit a contact**","lastModifiedDate":"2021-11-08"},{"lineNumber":1174,"author":{"gitId":"pranav-ganesh"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":1175,"author":{"gitId":"pranav-ganesh"},"content":"System : CallMeMaybe (CMM) \u003cbr\u003e","lastModifiedDate":"2021-11-08"},{"lineNumber":1176,"author":{"gitId":"pranav-ganesh"},"content":"Use Case : UC10 - Edit a contact \u003cbr\u003e","lastModifiedDate":"2021-11-08"},{"lineNumber":1177,"author":{"gitId":"pranav-ganesh"},"content":"Actor : User \u003cbr\u003e","lastModifiedDate":"2021-11-08"},{"lineNumber":1178,"author":{"gitId":"houtenteo"},"content":"Guarantees: Specified contact in the CMM database will be edited","lastModifiedDate":"2021-11-08"},{"lineNumber":1179,"author":{"gitId":"pranav-ganesh"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":1180,"author":{"gitId":"pranav-ganesh"},"content":"**MSS**","lastModifiedDate":"2021-11-08"},{"lineNumber":1181,"author":{"gitId":"pranav-ganesh"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":1182,"author":{"gitId":"pranav-ganesh"},"content":"1. User requests to edit a specific person in the list","lastModifiedDate":"2021-11-08"},{"lineNumber":1183,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":1184,"author":{"gitId":"houtenteo"},"content":"2. Contact gets edited in the CMM database and edited person card is displayed","lastModifiedDate":"2021-11-08"},{"lineNumber":1185,"author":{"gitId":"pranav-ganesh"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":1186,"author":{"gitId":"houtenteo"},"content":"  Use case ends","lastModifiedDate":"2021-11-08"},{"lineNumber":1187,"author":{"gitId":"pranav-ganesh"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":1188,"author":{"gitId":"pranav-ganesh"},"content":"**Extensions**","lastModifiedDate":"2021-11-08"},{"lineNumber":1189,"author":{"gitId":"pranav-ganesh"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":1190,"author":{"gitId":"pranav-ganesh"},"content":"* 1a. The given index is invalid","lastModifiedDate":"2021-11-08"},{"lineNumber":1191,"author":{"gitId":"pranav-ganesh"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":1192,"author":{"gitId":"houtenteo"},"content":"  * 1a1. Command box displays an error message","lastModifiedDate":"2021-11-08"},{"lineNumber":1193,"author":{"gitId":"pranav-ganesh"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":1194,"author":{"gitId":"houtenteo"},"content":"    Use case ends","lastModifiedDate":"2021-11-08"},{"lineNumber":1195,"author":{"gitId":"pranav-ganesh"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":1196,"author":{"gitId":"pranav-ganesh"},"content":"* 1b. There are duplicate interests list index values","lastModifiedDate":"2021-11-08"},{"lineNumber":1197,"author":{"gitId":"pranav-ganesh"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":1198,"author":{"gitId":"houtenteo"},"content":"  * 1b1. Command box displays an error message","lastModifiedDate":"2021-11-08"},{"lineNumber":1199,"author":{"gitId":"pranav-ganesh"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":1200,"author":{"gitId":"houtenteo"},"content":"    Use case ends","lastModifiedDate":"2021-11-08"},{"lineNumber":1201,"author":{"gitId":"pranav-ganesh"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":1202,"author":{"gitId":"pranav-ganesh"},"content":"* 1c. There are duplicate interest arguments","lastModifiedDate":"2021-11-08"},{"lineNumber":1203,"author":{"gitId":"pranav-ganesh"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":1204,"author":{"gitId":"houtenteo"},"content":"  * 1c1. Command box displays an error message","lastModifiedDate":"2021-11-08"},{"lineNumber":1205,"author":{"gitId":"pranav-ganesh"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":1206,"author":{"gitId":"houtenteo"},"content":"    Use case ends","lastModifiedDate":"2021-11-08"},{"lineNumber":1207,"author":{"gitId":"pranav-ganesh"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":1208,"author":{"gitId":"houtenteo"},"content":"* 1d. There is a duplicate of the edited person already present in the CMM database","lastModifiedDate":"2021-11-08"},{"lineNumber":1209,"author":{"gitId":"pranav-ganesh"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":1210,"author":{"gitId":"houtenteo"},"content":"  * 1d1. Command box displays an error message","lastModifiedDate":"2021-11-08"},{"lineNumber":1211,"author":{"gitId":"pranav-ganesh"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":1212,"author":{"gitId":"houtenteo"},"content":"    Use case ends","lastModifiedDate":"2021-11-08"},{"lineNumber":1213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":1214,"author":{"gitId":"-"},"content":"### Non-Functional Requirements","lastModifiedDate":"2020-05-23"},{"lineNumber":1215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1216,"author":{"gitId":"houtenteo"},"content":"1. Should work on any _mainstream OS_ as long as it has Java `11` or above installed","lastModifiedDate":"2021-11-08"},{"lineNumber":1217,"author":{"gitId":"loose-bus-change"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":1218,"author":{"gitId":"houtenteo"},"content":"2. Should be able to hold up to 1000 contacts without a noticeable sluggishness in performance for typical usage","lastModifiedDate":"2021-11-08"},{"lineNumber":1219,"author":{"gitId":"loose-bus-change"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":1220,"author":{"gitId":"houtenteo"},"content":"3. A user with above average typing speed for regular English text (i.e. not code, not system admin commands) ","lastModifiedDate":"2021-11-08"},{"lineNumber":1221,"author":{"gitId":"houtenteo"},"content":"should be able to accomplish most of the tasks faster using commands than using the mouse","lastModifiedDate":"2021-11-08"},{"lineNumber":1222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":1223,"author":{"gitId":"houtenteo"},"content":"4. Portability of database is expected as Telemarketers tend to work in a team setting","lastModifiedDate":"2021-11-08"},{"lineNumber":1224,"author":{"gitId":"loose-bus-change"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":1225,"author":{"gitId":"houtenteo"},"content":"5. A user should be able to retrieve the latest list of contacts in the event the program crashes unexpectedly","lastModifiedDate":"2021-11-08"},{"lineNumber":1226,"author":{"gitId":"loose-bus-change"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":1227,"author":{"gitId":"houtenteo"},"content":"6. Each command should not take more to 1 second to execute","lastModifiedDate":"2021-11-08"},{"lineNumber":1228,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1229,"author":{"gitId":"-"},"content":"### Glossary","lastModifiedDate":"2020-05-23"},{"lineNumber":1230,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1231,"author":{"gitId":"Kangxun"},"content":"* **CLI**: Command Line Interface","lastModifiedDate":"2021-10-26"},{"lineNumber":1232,"author":{"gitId":"loose-bus-change"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":1233,"author":{"gitId":"idgrr"},"content":"* **CMM**: CallMeMaybe, the name of the application","lastModifiedDate":"2021-09-20"},{"lineNumber":1234,"author":{"gitId":"loose-bus-change"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":1235,"author":{"gitId":"houtenteo"},"content":"* **Address Book**: Used interchangeably with \u0027CMM database\u0027","lastModifiedDate":"2021-11-08"},{"lineNumber":1236,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":1237,"author":{"gitId":"Kangxun"},"content":"* **GUI**: Graphical User Interface","lastModifiedDate":"2021-10-26"},{"lineNumber":1238,"author":{"gitId":"loose-bus-change"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":1239,"author":{"gitId":"-"},"content":"* **Mainstream OS**: Windows, Linux, Unix, OS-X","lastModifiedDate":"2020-05-23"},{"lineNumber":1240,"author":{"gitId":"loose-bus-change"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":1241,"author":{"gitId":"-"},"content":"* **Private contact detail**: A contact detail that is not meant to be shared with others","lastModifiedDate":"2020-05-23"},{"lineNumber":1242,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":1243,"author":{"gitId":"houtenteo"},"content":"* **CSV Comma Separated Values**: An excel format","lastModifiedDate":"2021-11-05"},{"lineNumber":1244,"author":{"gitId":"loose-bus-change"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":1245,"author":{"gitId":"houtenteo"},"content":"* **PlantUML**: An open-source tool allowing users to create diagrams from a plain text language","lastModifiedDate":"2021-11-05"},{"lineNumber":1246,"author":{"gitId":"loose-bus-change"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":1247,"author":{"gitId":"Kangxun"},"content":"* **JSON**: JSON is an open standard file format and data interchange format that uses human-readable text to store and transmit data objects consisting of attribute–value pairs and arrays","lastModifiedDate":"2021-11-08"},{"lineNumber":1248,"author":{"gitId":"loose-bus-change"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":1249,"author":{"gitId":"houtenteo"},"content":"* **Quality of Life**: The measure of how convenient it is to use an application","lastModifiedDate":"2021-11-06"},{"lineNumber":1250,"author":{"gitId":"loose-bus-change"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":1251,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":1252,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1253,"author":{"gitId":"-"},"content":"## **Appendix: Instructions for manual testing**","lastModifiedDate":"2020-05-23"},{"lineNumber":1254,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1255,"author":{"gitId":"-"},"content":"Given below are instructions to test the app manually.","lastModifiedDate":"2020-05-23"},{"lineNumber":1256,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1257,"author":{"gitId":"idgrr"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: ","lastModifiedDate":"2021-11-08"},{"lineNumber":1258,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":1259,"author":{"gitId":"idgrr"},"content":"**Note:**\u003cbr\u003e","lastModifiedDate":"2021-11-08"},{"lineNumber":1260,"author":{"gitId":"idgrr"},"content":"These instructions only provide a starting point for testers to work on;","lastModifiedDate":"2021-11-08"},{"lineNumber":1261,"author":{"gitId":"-"},"content":"testers are expected to do more *exploratory* testing.","lastModifiedDate":"2020-05-23"},{"lineNumber":1262,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":1263,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1264,"author":{"gitId":"-"},"content":"### Launch and shutdown","lastModifiedDate":"2020-05-23"},{"lineNumber":1265,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1266,"author":{"gitId":"-"},"content":"1. Initial launch","lastModifiedDate":"2020-05-23"},{"lineNumber":1267,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1268,"author":{"gitId":"-"},"content":"   1. Download the jar file and copy into an empty folder","lastModifiedDate":"2020-05-23"},{"lineNumber":1269,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1270,"author":{"gitId":"idgrr"},"content":"   2. Double-click the jar file. \u003cbr\u003e","lastModifiedDate":"2021-11-08"},{"lineNumber":1271,"author":{"gitId":"idgrr"},"content":"      Expected: An import prompt will appear. After clicking `Don\u0027t import`, it will show the GUI with a set of sample contacts. The window size will be fullscreen.","lastModifiedDate":"2021-11-08"},{"lineNumber":1272,"author":{"gitId":"-"},"content":"  ","lastModifiedDate":"2020-05-23"},{"lineNumber":1273,"author":{"gitId":"-"},"content":"  ","lastModifiedDate":"2020-05-23"},{"lineNumber":1274,"author":{"gitId":"idgrr"},"content":"2. Importing Data during launch","lastModifiedDate":"2021-11-08"},{"lineNumber":1275,"author":{"gitId":"loose-bus-change"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":1276,"author":{"gitId":"idgrr"},"content":"    2.1. Test Add on import","lastModifiedDate":"2021-11-08"},{"lineNumber":1277,"author":{"gitId":"-"},"content":"   ","lastModifiedDate":"2020-05-23"},{"lineNumber":1278,"author":{"gitId":"idgrr"},"content":"    * Prerequisites : Data in CMM is currently populated and import.csv in the correct format at the correct file location","lastModifiedDate":"2021-11-08"},{"lineNumber":1279,"author":{"gitId":"-"},"content":"       ","lastModifiedDate":"2020-05-23"},{"lineNumber":1280,"author":{"gitId":"idgrr"},"content":"    * Testcase : click `Add on Import` upon CMM startup \u003cbr\u003e","lastModifiedDate":"2021-11-08"},{"lineNumber":1281,"author":{"gitId":"idgrr"},"content":"      Expected : Valid people in import.csv are added on to existing data in CMM","lastModifiedDate":"2021-11-05"},{"lineNumber":1282,"author":{"gitId":"loose-bus-change"},"content":"       ","lastModifiedDate":"2021-11-08"},{"lineNumber":1283,"author":{"gitId":"idgrr"},"content":"    2.2. Test Start using New Import","lastModifiedDate":"2021-11-08"},{"lineNumber":1284,"author":{"gitId":"loose-bus-change"},"content":"   ","lastModifiedDate":"2021-11-08"},{"lineNumber":1285,"author":{"gitId":"idgrr"},"content":"    * Prerequisites : Data in CMM is currently populated and import.csv in the correct format at the correct file location","lastModifiedDate":"2021-11-08"},{"lineNumber":1286,"author":{"gitId":"loose-bus-change"},"content":"    ","lastModifiedDate":"2021-11-08"},{"lineNumber":1287,"author":{"gitId":"idgrr"},"content":"    * Testcase : click `Start using New Import` upon CMM startup \u003cbr\u003e","lastModifiedDate":"2021-11-08"},{"lineNumber":1288,"author":{"gitId":"idgrr"},"content":"      Expected : Current data is exported in a csv file. Only valid people in import.csv exists in CMM","lastModifiedDate":"2021-11-05"},{"lineNumber":1289,"author":{"gitId":"loose-bus-change"},"content":"       ","lastModifiedDate":"2021-11-08"},{"lineNumber":1290,"author":{"gitId":"idgrr"},"content":"    2.3 Test Don\u0027t Import","lastModifiedDate":"2021-11-08"},{"lineNumber":1291,"author":{"gitId":"loose-bus-change"},"content":"   ","lastModifiedDate":"2021-11-08"},{"lineNumber":1292,"author":{"gitId":"idgrr"},"content":"    * Prerequisites : Data in CMM is currently populated and import.csv in the correct format at the correct file location","lastModifiedDate":"2021-11-08"},{"lineNumber":1293,"author":{"gitId":"idgrr"},"content":"       ","lastModifiedDate":"2021-11-08"},{"lineNumber":1294,"author":{"gitId":"idgrr"},"content":"    * Testcase : click `Don\u0027t import` upon CMM startup or close the prompt \u003cbr\u003e","lastModifiedDate":"2021-11-08"},{"lineNumber":1295,"author":{"gitId":"idgrr"},"content":"      Expected : Current data will stay in CMM. No new data will be imported","lastModifiedDate":"2021-11-05"},{"lineNumber":1296,"author":{"gitId":"idgrr"},"content":"  ","lastModifiedDate":"2021-11-05"},{"lineNumber":1297,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":1298,"author":{"gitId":"idgrr"},"content":"3. Exporting Data during shutdown","lastModifiedDate":"2021-11-08"},{"lineNumber":1299,"author":{"gitId":"loose-bus-change"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":1300,"author":{"gitId":"idgrr"},"content":"    3.1. Test exporting","lastModifiedDate":"2021-11-08"},{"lineNumber":1301,"author":{"gitId":"loose-bus-change"},"content":"   ","lastModifiedDate":"2021-11-08"},{"lineNumber":1302,"author":{"gitId":"idgrr"},"content":"    * Testcase : click `Export` upon CMM shutdown\u003cbr\u003e","lastModifiedDate":"2021-11-08"},{"lineNumber":1303,"author":{"gitId":"idgrr"},"content":"      Expected : new csv file with the latest details can be found in the data folder at CMM jar location","lastModifiedDate":"2021-11-05"},{"lineNumber":1304,"author":{"gitId":"loose-bus-change"},"content":"       ","lastModifiedDate":"2021-11-08"},{"lineNumber":1305,"author":{"gitId":"idgrr"},"content":"    3.2. Test Don\u0027t export","lastModifiedDate":"2021-11-08"},{"lineNumber":1306,"author":{"gitId":"loose-bus-change"},"content":"   ","lastModifiedDate":"2021-11-08"},{"lineNumber":1307,"author":{"gitId":"idgrr"},"content":"    * Testcase : click `Don\u0027t export` or close the prompt\u003cbr\u003e","lastModifiedDate":"2021-11-08"},{"lineNumber":1308,"author":{"gitId":"houtenteo"},"content":"      Expected: No new csv files created","lastModifiedDate":"2021-11-08"},{"lineNumber":1309,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":1310,"author":{"gitId":"houtenteo"},"content":"### Deleting contacts","lastModifiedDate":"2021-11-08"},{"lineNumber":1311,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1312,"author":{"gitId":"houtenteo"},"content":"Prerequisites: Displayed list must not be empty","lastModifiedDate":"2021-11-08"},{"lineNumber":1313,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":1314,"author":{"gitId":"houtenteo"},"content":"1. Specifying a valid index to be deleted","lastModifiedDate":"2021-11-08"},{"lineNumber":1315,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1316,"author":{"gitId":"houtenteo"},"content":"   * Test case: `delete 1`\u003cbr\u003e","lastModifiedDate":"2021-11-08"},{"lineNumber":1317,"author":{"gitId":"houtenteo"},"content":"      Expected: First contact is deleted from the list. Details of the deleted contact shown in the status message.","lastModifiedDate":"2021-11-08"},{"lineNumber":1318,"author":{"gitId":"-"},"content":"  ","lastModifiedDate":"2020-05-23"},{"lineNumber":1319,"author":{"gitId":"houtenteo"},"content":"2. Specifying an invalid index to be deleted","lastModifiedDate":"2021-11-08"},{"lineNumber":1320,"author":{"gitId":"houtenteo"},"content":"   * Test case: `delete 0`\u003cbr\u003e","lastModifiedDate":"2021-11-08"},{"lineNumber":1321,"author":{"gitId":"houtenteo"},"content":"      Expected: No contact is deleted. Error details shown in the status message","lastModifiedDate":"2021-11-08"},{"lineNumber":1322,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1323,"author":{"gitId":"Kangxun"},"content":"   * Test case: `delete 100` (List contains only 50 contacts) \u003cbr\u003e","lastModifiedDate":"2021-11-08"},{"lineNumber":1324,"author":{"gitId":"houtenteo"},"content":"     Expected: No contact is deleted. Error details shown in the status message","lastModifiedDate":"2021-11-08"},{"lineNumber":1325,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1326,"author":{"gitId":"Kangxun"},"content":"   * Test case: `delete 9999999999999` (Index larger than 2147483647) \u003cbr\u003e","lastModifiedDate":"2021-11-08"},{"lineNumber":1327,"author":{"gitId":"houtenteo"},"content":"     Expected: No contact is deleted. Error details shown in the status message","lastModifiedDate":"2021-11-08"},{"lineNumber":1328,"author":{"gitId":"houtenteo"},"content":"   ","lastModifiedDate":"2021-11-08"},{"lineNumber":1329,"author":{"gitId":"Kangxun"},"content":"   * Test case: `delete x` \u003cbr\u003e","lastModifiedDate":"2021-11-08"},{"lineNumber":1330,"author":{"gitId":"houtenteo"},"content":"     Expected: No contact is deleted. Error details shown in the status message","lastModifiedDate":"2021-11-08"},{"lineNumber":1331,"author":{"gitId":"-"},"content":"   ","lastModifiedDate":"2020-05-23"},{"lineNumber":1332,"author":{"gitId":"houtenteo"},"content":"### Displaying contacts","lastModifiedDate":"2021-11-08"},{"lineNumber":1333,"author":{"gitId":"loose-bus-change"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":1334,"author":{"gitId":"houtenteo"},"content":"Prerequisites: Displayed list must not be empty","lastModifiedDate":"2021-11-08"},{"lineNumber":1335,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":1336,"author":{"gitId":"houtenteo"},"content":"1. Specifying a valid index to be displayed","lastModifiedDate":"2021-11-08"},{"lineNumber":1337,"author":{"gitId":"loose-bus-change"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":1338,"author":{"gitId":"houtenteo"},"content":"   * Test case: `display 2`\u003cbr\u003e","lastModifiedDate":"2021-11-08"},{"lineNumber":1339,"author":{"gitId":"houtenteo"},"content":"     Expected: Second contact is displayed from the list","lastModifiedDate":"2021-11-08"},{"lineNumber":1340,"author":{"gitId":"loose-bus-change"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":1341,"author":{"gitId":"houtenteo"},"content":"2. Specifying an invalid index to be deleted   ","lastModifiedDate":"2021-11-08"},{"lineNumber":1342,"author":{"gitId":"loose-bus-change"},"content":"   ","lastModifiedDate":"2021-10-28"},{"lineNumber":1343,"author":{"gitId":"houtenteo"},"content":"   * Test case: `display 0`\u003cbr\u003e","lastModifiedDate":"2021-11-08"},{"lineNumber":1344,"author":{"gitId":"houtenteo"},"content":"     Expected: The previously displayed contact continues to be displayed. Error details shown in the feedback box","lastModifiedDate":"2021-11-08"},{"lineNumber":1345,"author":{"gitId":"loose-bus-change"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":1346,"author":{"gitId":"Kangxun"},"content":"   * Test case: `display 100` (List contains only 50 contacts) \u003cbr\u003e","lastModifiedDate":"2021-11-08"},{"lineNumber":1347,"author":{"gitId":"houtenteo"},"content":"     Expected: The previously displayed contact continues to be displayed. Error details shown in the feedback box","lastModifiedDate":"2021-11-08"},{"lineNumber":1348,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":1349,"author":{"gitId":"Kangxun"},"content":"   * Test case: `display 9999999999999` (Index larger than 2147483647) \u003cbr\u003e","lastModifiedDate":"2021-11-08"},{"lineNumber":1350,"author":{"gitId":"houtenteo"},"content":"     Expected: The previously displayed contact continues to be displayed. Error details shown in the feedback box","lastModifiedDate":"2021-11-08"},{"lineNumber":1351,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":1352,"author":{"gitId":"Kangxun"},"content":"   * Test case: `display x` \u003cbr\u003e","lastModifiedDate":"2021-11-08"},{"lineNumber":1353,"author":{"gitId":"houtenteo"},"content":"     Expected: The previously displayed contact continues to be displayed. Error details shown in the feedback box","lastModifiedDate":"2021-11-08"},{"lineNumber":1354,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1355,"author":{"gitId":"houtenteo"},"content":"### Editing contacts","lastModifiedDate":"2021-11-08"},{"lineNumber":1356,"author":{"gitId":"pranav-ganesh"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":1357,"author":{"gitId":"houtenteo"},"content":"Prerequisites: Displayed list must not be empty","lastModifiedDate":"2021-11-08"},{"lineNumber":1358,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":1359,"author":{"gitId":"pranav-ganesh"},"content":"1. Editing the name of the contact","lastModifiedDate":"2021-11-08"},{"lineNumber":1360,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":1361,"author":{"gitId":"Kangxun"},"content":"   * Test case: `edit 1 n/bob` \u003cbr\u003e","lastModifiedDate":"2021-11-08"},{"lineNumber":1362,"author":{"gitId":"pranav-ganesh"},"content":"     Expected: The name of the first contact is edited to \u0027bob\u0027","lastModifiedDate":"2021-11-08"},{"lineNumber":1363,"author":{"gitId":"pranav-ganesh"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":1364,"author":{"gitId":"Kangxun"},"content":"2. Editing multiple fields at once (age, gender and address)","lastModifiedDate":"2021-11-08"},{"lineNumber":1365,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":1366,"author":{"gitId":"Kangxun"},"content":"   * Test case `edit 2 age/22 g/F a/new_address` \u003cbr\u003e","lastModifiedDate":"2021-11-08"},{"lineNumber":1367,"author":{"gitId":"pranav-ganesh"},"content":"     Expected: The age, gender and address of the second contact are edited","lastModifiedDate":"2021-11-08"},{"lineNumber":1368,"author":{"gitId":"pranav-ganesh"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":1369,"author":{"gitId":"Kangxun"},"content":"3. Adding an interest to the interests list of a specific contact","lastModifiedDate":"2021-11-08"},{"lineNumber":1370,"author":{"gitId":"houtenteo"},"content":"   ","lastModifiedDate":"2021-11-08"},{"lineNumber":1371,"author":{"gitId":"Kangxun"},"content":"   * Test case `edit 4 i/hockey` \u003cbr\u003e","lastModifiedDate":"2021-11-08"},{"lineNumber":1372,"author":{"gitId":"pranav-ganesh"},"content":"     Expected: The interest \u0027hockey\u0027 is added to the interests list of the fourth contact","lastModifiedDate":"2021-11-08"},{"lineNumber":1373,"author":{"gitId":"pranav-ganesh"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":1374,"author":{"gitId":"Kangxun"},"content":"4. Editing the interests list of a specific contact","lastModifiedDate":"2021-11-08"},{"lineNumber":1375,"author":{"gitId":"houtenteo"},"content":"   ","lastModifiedDate":"2021-11-08"},{"lineNumber":1376,"author":{"gitId":"Kangxun"},"content":"   * Test case `edit 4 i/(1) reading` \u003cbr\u003e","lastModifiedDate":"2021-11-08"},{"lineNumber":1377,"author":{"gitId":"houtenteo"},"content":"     Expected: The first interest in the interests list of the fourth contact is edited and updated to \u0027reading\u0027","lastModifiedDate":"2021-11-08"},{"lineNumber":1378,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":1379,"author":{"gitId":"Kangxun"},"content":"5. Removing an interest in the interests list of a specific contact","lastModifiedDate":"2021-11-08"},{"lineNumber":1380,"author":{"gitId":"pranav-ganesh"},"content":"   ","lastModifiedDate":"2021-11-08"},{"lineNumber":1381,"author":{"gitId":"Kangxun"},"content":"   * Test case `edit 2 i/(1) remove` \u003cbr\u003e","lastModifiedDate":"2021-11-08"},{"lineNumber":1382,"author":{"gitId":"pranav-ganesh"},"content":"     Expected: The first item in the interests list of the fourth contact is removed","lastModifiedDate":"2021-11-08"},{"lineNumber":1383,"author":{"gitId":"pranav-ganesh"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":1384,"author":{"gitId":"Kangxun"},"content":"6. Editing, adding and removing interests of a specific contact","lastModifiedDate":"2021-11-08"},{"lineNumber":1385,"author":{"gitId":"houtenteo"},"content":"   ","lastModifiedDate":"2021-11-08"},{"lineNumber":1386,"author":{"gitId":"Kangxun"},"content":"   * Test case `edit 3 i/(2) remove i/jogging i/(3) cooking` \u003cbr\u003e","lastModifiedDate":"2021-11-08"},{"lineNumber":1387,"author":{"gitId":"pranav-ganesh"},"content":"     Expected: The third item in the interests list of the third contact is edited and updated to \u0027cooking\u0027, the second item ","lastModifiedDate":"2021-11-08"},{"lineNumber":1388,"author":{"gitId":"pranav-ganesh"},"content":"     in the interests list is removed and the interest \u0027jogging\u0027 is added to the interests list","lastModifiedDate":"2021-11-08"},{"lineNumber":1389,"author":{"gitId":"pranav-ganesh"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":1390,"author":{"gitId":"Kangxun"},"content":"7. Editing contacts with invalid index","lastModifiedDate":"2021-11-08"},{"lineNumber":1391,"author":{"gitId":"houtenteo"},"content":"   ","lastModifiedDate":"2021-11-08"},{"lineNumber":1392,"author":{"gitId":"Kangxun"},"content":"   * Test case: `edit 2333 i/helicopter` \u003cbr\u003e","lastModifiedDate":"2021-11-08"},{"lineNumber":1393,"author":{"gitId":"houtenteo"},"content":"     Expected: Error details shown in the feedback box","lastModifiedDate":"2021-11-08"},{"lineNumber":1394,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":1395,"author":{"gitId":"Kangxun"},"content":"8. Editing contacts to persons who already exist in the list","lastModifiedDate":"2021-11-08"},{"lineNumber":1396,"author":{"gitId":"pranav-ganesh"},"content":"   ","lastModifiedDate":"2021-11-08"},{"lineNumber":1397,"author":{"gitId":"Kangxun"},"content":"   * Test case: `edit 1 n/Peter Smith p/98989898 e/peter@email.com` \u003cbr\u003e","lastModifiedDate":"2021-11-08"},{"lineNumber":1398,"author":{"gitId":"houtenteo"},"content":"     Expected: Error details shown in the feedback box","lastModifiedDate":"2021-11-08"},{"lineNumber":1399,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":1400,"author":{"gitId":"Kangxun"},"content":"### Filtering contacts","lastModifiedDate":"2021-10-27"},{"lineNumber":1401,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":1402,"author":{"gitId":"Kangxun"},"content":"1. Filtering by a valid category (i.e., `called`, `gender`)","lastModifiedDate":"2021-11-08"},{"lineNumber":1403,"author":{"gitId":"houtenteo"},"content":"   ","lastModifiedDate":"2021-11-08"},{"lineNumber":1404,"author":{"gitId":"Kangxun"},"content":"   * Test case: `filter gender`\u003cbr\u003e","lastModifiedDate":"2021-11-08"},{"lineNumber":1405,"author":{"gitId":"houtenteo"},"content":"   Expected: All contacts are displayed, sorted by gender","lastModifiedDate":"2021-11-08"},{"lineNumber":1406,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":1407,"author":{"gitId":"houtenteo"},"content":"2. Filtering by a valid category and limiting the number of contacts shown","lastModifiedDate":"2021-11-08"},{"lineNumber":1408,"author":{"gitId":"Kangxun"},"content":"   ","lastModifiedDate":"2021-10-26"},{"lineNumber":1409,"author":{"gitId":"houtenteo"},"content":"   * Test case: `filter called 3`\u003cbr\u003e","lastModifiedDate":"2021-11-08"},{"lineNumber":1410,"author":{"gitId":"houtenteo"},"content":"   Expected: Sort contacts based on whether they are called. Only the first 3 contacts are displayed","lastModifiedDate":"2021-11-08"},{"lineNumber":1411,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":1412,"author":{"gitId":"Kangxun"},"content":"3. Filtering by an invalid count","lastModifiedDate":"2021-11-08"},{"lineNumber":1413,"author":{"gitId":"houtenteo"},"content":"   ","lastModifiedDate":"2021-11-08"},{"lineNumber":1414,"author":{"gitId":"Kangxun"},"content":"   * Test case: `filter called 0`\u003cbr\u003e","lastModifiedDate":"2021-11-08"},{"lineNumber":1415,"author":{"gitId":"houtenteo"},"content":"   Expected: Contacts are not filtered. Error details shown in the feedback box","lastModifiedDate":"2021-11-08"},{"lineNumber":1416,"author":{"gitId":"Kangxun"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":1417,"author":{"gitId":"Kangxun"},"content":"4. Filtering by an invalid category","lastModifiedDate":"2021-11-08"},{"lineNumber":1418,"author":{"gitId":"Kangxun"},"content":"   ","lastModifiedDate":"2021-10-26"},{"lineNumber":1419,"author":{"gitId":"houtenteo"},"content":"   * Test case: `filter address 1`\u003cbr\u003e","lastModifiedDate":"2021-11-08"},{"lineNumber":1420,"author":{"gitId":"houtenteo"},"content":"   Expected: Contacts are not filtered. Error details shown in the feedback box","lastModifiedDate":"2021-11-08"},{"lineNumber":1421,"author":{"gitId":"Kangxun"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":1422,"author":{"gitId":"houtenteo"},"content":"### Adding contacts","lastModifiedDate":"2021-11-06"},{"lineNumber":1423,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":1424,"author":{"gitId":"houtenteo"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: ","lastModifiedDate":"2021-11-08"},{"lineNumber":1425,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":1426,"author":{"gitId":"houtenteo"},"content":"**Note:**\u003cbr\u003e","lastModifiedDate":"2021-11-08"},{"lineNumber":1427,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":1428,"author":{"gitId":"houtenteo"},"content":"A contact is considered valid when all 3 of the compulsory fields `Name`, `Phone` and `Email` are specified","lastModifiedDate":"2021-11-08"},{"lineNumber":1429,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":1430,"author":{"gitId":"houtenteo"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-11-08"},{"lineNumber":1431,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":1432,"author":{"gitId":"houtenteo"},"content":"1. Adding valid contacts with only the 3 compulsory fields, `Name`, `Phone`, `Email` specified","lastModifiedDate":"2021-11-08"},{"lineNumber":1433,"author":{"gitId":"loose-bus-change"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":1434,"author":{"gitId":"houtenteo"},"content":"   * Test case: `add n/bob p/98765432 e/test@test.com`\u003cbr\u003e","lastModifiedDate":"2021-11-06"},{"lineNumber":1435,"author":{"gitId":"houtenteo"},"content":"   Expected: A contact with the specified fields is added into the list with all other fields, `address`, `age`, `gender`, `interests` left as \u0027N.A\u0027 \u003cbr\u003e","lastModifiedDate":"2021-11-08"},{"lineNumber":1436,"author":{"gitId":"houtenteo"},"content":"   ","lastModifiedDate":"2021-11-06"},{"lineNumber":1437,"author":{"gitId":"houtenteo"},"content":"2. Adding valid contacts with multiple optional fields specified","lastModifiedDate":"2021-11-06"},{"lineNumber":1438,"author":{"gitId":"loose-bus-change"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":1439,"author":{"gitId":"houtenteo"},"content":"   * Test case: `add n/bob p/98765432 e/test@test.com g/m i/running` \u003cbr\u003e","lastModifiedDate":"2021-11-08"},{"lineNumber":1440,"author":{"gitId":"houtenteo"},"content":"   Expected: A contact with the specified fields is added into the list with only `address` and `age` left as \u0027N.A\u0027 \u003cbr\u003e","lastModifiedDate":"2021-11-08"},{"lineNumber":1441,"author":{"gitId":"loose-bus-change"},"content":"   ","lastModifiedDate":"2021-11-08"},{"lineNumber":1442,"author":{"gitId":"houtenteo"},"content":"   * Test case: `add n/bob p/98765432 e/test@test.com a/his house age/22` \u003cbr\u003e","lastModifiedDate":"2021-11-08"},{"lineNumber":1443,"author":{"gitId":"houtenteo"},"content":"   Expected: A contact with the specified fields is added into the list with only `gender` and `interests` left as \u0027N.A\u0027","lastModifiedDate":"2021-11-06"},{"lineNumber":1444,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":1445,"author":{"gitId":"houtenteo"},"content":"3. Adding contacts with invalid fields","lastModifiedDate":"2021-11-06"},{"lineNumber":1446,"author":{"gitId":"loose-bus-change"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":1447,"author":{"gitId":"houtenteo"},"content":"   * Test case: `add n/bob p/18765432 e/test@test.com g/m i/running` (phone is invalid) \u003cbr\u003e","lastModifiedDate":"2021-11-08"},{"lineNumber":1448,"author":{"gitId":"houtenteo"},"content":"   Expected: Error details shown in the feedback box","lastModifiedDate":"2021-11-08"},{"lineNumber":1449,"author":{"gitId":"loose-bus-change"},"content":"   ","lastModifiedDate":"2021-11-08"},{"lineNumber":1450,"author":{"gitId":"houtenteo"},"content":"   * Test case: `add n/bob p/98765432 e/test@test.com g/me i/running` (gender is invalid) \u003cbr\u003e","lastModifiedDate":"2021-11-08"},{"lineNumber":1451,"author":{"gitId":"houtenteo"},"content":"   Expected: Error details shown in the feedback box","lastModifiedDate":"2021-11-08"},{"lineNumber":1452,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":1453,"author":{"gitId":"houtenteo"},"content":"4. Adding contacts without anything specified after their respective prefix","lastModifiedDate":"2021-11-08"},{"lineNumber":1454,"author":{"gitId":"loose-bus-change"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":1455,"author":{"gitId":"houtenteo"},"content":"   * Test case: `add n/bob p/98765432 e/test@test.com g/m i/` (\u0027i/\u0027 is left empty) \u003cbr\u003e","lastModifiedDate":"2021-11-08"},{"lineNumber":1456,"author":{"gitId":"houtenteo"},"content":"     Expected: Error details shown in the feedback box","lastModifiedDate":"2021-11-08"},{"lineNumber":1457,"author":{"gitId":"loose-bus-change"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":1458,"author":{"gitId":"houtenteo"},"content":"   * Test case: `add n/bob p/98765432 e/test@test.com g/ i/running` (\u0027g/\u0027 is left empty) \u003cbr\u003e","lastModifiedDate":"2021-11-08"},{"lineNumber":1459,"author":{"gitId":"houtenteo"},"content":"     Expected: Error details shown in the feedback box","lastModifiedDate":"2021-11-08"},{"lineNumber":1460,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":1461,"author":{"gitId":"houtenteo"},"content":"### Finding contacts","lastModifiedDate":"2021-11-06"},{"lineNumber":1462,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":1463,"author":{"gitId":"idgrr"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: ","lastModifiedDate":"2021-11-08"},{"lineNumber":1464,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":1465,"author":{"gitId":"idgrr"},"content":"**Note:**\u003cbr\u003e","lastModifiedDate":"2021-11-08"},{"lineNumber":1466,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":1467,"author":{"gitId":"idgrr"},"content":"The test cases below only make use of the findAny command. ","lastModifiedDate":"2021-11-08"},{"lineNumber":1468,"author":{"gitId":"houtenteo"},"content":"However, the findAll command should be tested roughly the same way. Only difference is when multiple valid fields are supplied at once.","lastModifiedDate":"2021-11-06"},{"lineNumber":1469,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":1470,"author":{"gitId":"houtenteo"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-11-06"},{"lineNumber":1471,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":1472,"author":{"gitId":"houtenteo"},"content":"1. Finding contacts by specifying only 1 field","lastModifiedDate":"2021-11-08"},{"lineNumber":1473,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":1474,"author":{"gitId":"Kangxun"},"content":"   * Test case: `findAny n/bob` \u003cbr\u003e","lastModifiedDate":"2021-11-08"},{"lineNumber":1475,"author":{"gitId":"houtenteo"},"content":"   Expected: Only contacts that have the substring \u0027bob\u0027 in their name are displayed","lastModifiedDate":"2021-11-06"},{"lineNumber":1476,"author":{"gitId":"houtenteo"},"content":"   ","lastModifiedDate":"2021-11-06"},{"lineNumber":1477,"author":{"gitId":"Kangxun"},"content":"   * Test case `findAny i/run` \u003cbr\u003e","lastModifiedDate":"2021-11-08"},{"lineNumber":1478,"author":{"gitId":"houtenteo"},"content":"   Expected: Only contacts that have the substring \u0027run\u0027 in any of their interests are displayed","lastModifiedDate":"2021-11-06"},{"lineNumber":1479,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":1480,"author":{"gitId":"houtenteo"},"content":"3. Finding contacts with multiple specified fields","lastModifiedDate":"2021-11-06"},{"lineNumber":1481,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":1482,"author":{"gitId":"Kangxun"},"content":"   * Test case `findAny n/bob i/run` \u003cbr\u003e","lastModifiedDate":"2021-11-08"},{"lineNumber":1483,"author":{"gitId":"houtenteo"},"content":"     Expected: Only contacts that have either the substring \u0027bob\u0027 in their name or \u0027run\u0027 in any of their interests are displayed\u003cbr\u003e","lastModifiedDate":"2021-11-06"},{"lineNumber":1484,"author":{"gitId":"houtenteo"},"content":"     (For findAll: Only contacts that have both the substring \u0027bob\u0027 in their name and \u0027run\u0027 in any of their interests are displayed )","lastModifiedDate":"2021-11-06"},{"lineNumber":1485,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":1486,"author":{"gitId":"houtenteo"},"content":"4. Finding contacts with invalid fields","lastModifiedDate":"2021-11-06"},{"lineNumber":1487,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":1488,"author":{"gitId":"Kangxun"},"content":"   * Test case: `findAny g/helicopter` (\u0027helicopter\u0027 is not a valid gender) \u003cbr\u003e","lastModifiedDate":"2021-11-08"},{"lineNumber":1489,"author":{"gitId":"houtenteo"},"content":"     Expected: Error details shown in the feedback box","lastModifiedDate":"2021-11-08"},{"lineNumber":1490,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":1491,"author":{"gitId":"Kangxun"},"content":"   * Test case `findAny c/HAHA g/M` (\u0027HAHA\u0027 is not a valid called status) \u003cbr\u003e","lastModifiedDate":"2021-11-08"},{"lineNumber":1492,"author":{"gitId":"houtenteo"},"content":"     Expected: Error details shown in the feedback box","lastModifiedDate":"2021-11-08"},{"lineNumber":1493,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":1494,"author":{"gitId":"houtenteo"},"content":"5. Finding contacts that do not exist in the database","lastModifiedDate":"2021-11-06"},{"lineNumber":1495,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":1496,"author":{"gitId":"Kangxun"},"content":"   * Test case: `findAny n/[any substring that does not exist in the database]` \u003cbr\u003e","lastModifiedDate":"2021-11-08"},{"lineNumber":1497,"author":{"gitId":"houtenteo"},"content":"     Expected: No contacts are displayed","lastModifiedDate":"2021-11-06"},{"lineNumber":1498,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-06"}],"authorContributionMap":{"houtenteo":599,"idgrr":180,"loose-bus-change":185,"pranav-ganesh":93,"-":314,"Kangxun":127}},{"path":"docs/SettingImportFileType.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"idgrr"},"content":"---","lastModifiedDate":"2021-10-23"},{"lineNumber":2,"author":{"gitId":"idgrr"},"content":"layout: page","lastModifiedDate":"2021-10-23"},{"lineNumber":3,"author":{"gitId":"idgrr"},"content":"title: Testing guide","lastModifiedDate":"2021-10-23"},{"lineNumber":4,"author":{"gitId":"idgrr"},"content":"---","lastModifiedDate":"2021-10-23"},{"lineNumber":5,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":6,"author":{"gitId":"idgrr"},"content":"* Table of Contents","lastModifiedDate":"2021-10-23"},{"lineNumber":7,"author":{"gitId":"idgrr"},"content":"{:toc}","lastModifiedDate":"2021-10-23"},{"lineNumber":8,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":9,"author":{"gitId":"idgrr"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-10-23"},{"lineNumber":10,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":11,"author":{"gitId":"idgrr"},"content":"## Setting Excel sheets to be comma delimited","lastModifiedDate":"2021-10-23"},{"lineNumber":12,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":13,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":14,"author":{"gitId":"idgrr"},"content":"To achieve the desired result we need to temporary change the delimiter setting in the Excel Options. Move to :","lastModifiedDate":"2021-10-23"},{"lineNumber":15,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":16,"author":{"gitId":"idgrr"},"content":"     File -\u003e Options -\u003e Advanced -\u003e Editing Options","lastModifiedDate":"2021-11-05"},{"lineNumber":17,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":18,"author":{"gitId":"idgrr"},"content":"Uncheck the `Use system separators` setting and put a comma in the “Decimal Separator” field.","lastModifiedDate":"2021-10-23"},{"lineNumber":19,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":20,"author":{"gitId":"idgrr"},"content":"Now save the file in the .CSV format and it will be saved in the semicolon delimited format","lastModifiedDate":"2021-11-05"},{"lineNumber":21,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":22,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":23,"author":{"gitId":"idgrr"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Tip:** \u003cbr\u003e","lastModifiedDate":"2021-11-05"},{"lineNumber":24,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":25,"author":{"gitId":"houtenteo"},"content":"Alternatively, a sample Excel file in this data format can be found [here](https://github.com/AY2122S1-CS2103T-T13-4/tp/releases/tag/Test_Files)","lastModifiedDate":"2021-11-08"},{"lineNumber":26,"author":{"gitId":"idgrr"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-11-05"},{"lineNumber":27,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":28,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":29,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":30,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":31,"author":{"gitId":"idgrr"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-10-23"}],"authorContributionMap":{"houtenteo":2,"idgrr":29}},{"path":"docs/UserGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: User Guide","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"loose-bus-change"},"content":"## Introducing CallMeMaybe","lastModifiedDate":"2021-11-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":8,"author":{"gitId":"loose-bus-change"},"content":"CallMeMaybe (CMM) is a **desktop app** that helps Telemarketers in customer contact management.","lastModifiedDate":"2021-11-08"},{"lineNumber":9,"author":{"gitId":"loose-bus-change"},"content":"CMM provides a solution to quickly catalog contacts based on whether they have already been called or not.","lastModifiedDate":"2021-11-08"},{"lineNumber":10,"author":{"gitId":"loose-bus-change"},"content":"The in-built tracking functionality serves as a reminder for you to reach back on previously unreachable customers.","lastModifiedDate":"2021-11-08"},{"lineNumber":11,"author":{"gitId":"idgrr"},"content":"Importing and exporting of existing customer database is also supported by CMM to facilitate team-based environments.","lastModifiedDate":"2021-10-23"},{"lineNumber":12,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":13,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":14,"author":{"gitId":"Kangxun"},"content":"CMM is optimized for use via a **Command Line Interface** (CLI) while still having the benefits of a Graphical User Interface (GUI).","lastModifiedDate":"2021-10-07"},{"lineNumber":15,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":16,"author":{"gitId":"idgrr"},"content":"If you can type fast, CMM can get your contact management tasks done faster than traditional GUI apps.","lastModifiedDate":"2021-10-01"},{"lineNumber":17,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"loose-bus-change"},"content":"## Navigating the User Guide","lastModifiedDate":"2021-11-08"},{"lineNumber":20,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":21,"author":{"gitId":"houtenteo"},"content":"This user guide aims to help you easily find the information you desire for any command. \u003cbr\u003e","lastModifiedDate":"2021-11-05"},{"lineNumber":22,"author":{"gitId":"houtenteo"},"content":"Each Command section is separated into:\u003cbr\u003e","lastModifiedDate":"2021-11-05"},{"lineNumber":23,"author":{"gitId":"houtenteo"},"content":"* Brief description of the command","lastModifiedDate":"2021-11-05"},{"lineNumber":24,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":25,"author":{"gitId":"houtenteo"},"content":"* Command Format","lastModifiedDate":"2021-11-05"},{"lineNumber":26,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":27,"author":{"gitId":"houtenteo"},"content":"* Things to note","lastModifiedDate":"2021-11-05"},{"lineNumber":28,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":29,"author":{"gitId":"houtenteo"},"content":"* Example","lastModifiedDate":"2021-11-11"},{"lineNumber":30,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":31,"author":{"gitId":"houtenteo"},"content":"* Common issues","lastModifiedDate":"2021-11-05"},{"lineNumber":32,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":33,"author":{"gitId":"houtenteo"},"content":"Throughout this guide, you may encounter the following icons:","lastModifiedDate":"2021-11-11"},{"lineNumber":34,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-11-11"},{"lineNumber":35,"author":{"gitId":"houtenteo"},"content":"* **:exclamation: Caution:** Warns you about possible irreversible behaviours \u003cbr\u003e","lastModifiedDate":"2021-11-11"},{"lineNumber":36,"author":{"gitId":"houtenteo"},"content":"* **:information_source: Notes:** Provides general information that you might find useful \u003cbr\u003e","lastModifiedDate":"2021-11-11"},{"lineNumber":37,"author":{"gitId":"houtenteo"},"content":"* **:bulb: Tip:** Provides useful practical advice about their respective features \u003cbr\u003e","lastModifiedDate":"2021-11-11"},{"lineNumber":38,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-11-11"},{"lineNumber":39,"author":{"gitId":"houtenteo"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2021-11-05"},{"lineNumber":40,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":41,"author":{"gitId":"houtenteo"},"content":"**:information_source: Note:** Straightforward commands such as `clear` may not have the sections \"Things to note\", \"Example\" and \"Common issues\"","lastModifiedDate":"2021-11-11"},{"lineNumber":42,"author":{"gitId":"houtenteo"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-11-05"},{"lineNumber":43,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":44,"author":{"gitId":"loose-bus-change"},"content":"It is highly recommended that you familiarise yourself with the [Command Notations](#4-command-notations) we use. \u003cbr\u003e","lastModifiedDate":"2021-11-08"},{"lineNumber":45,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":46,"author":{"gitId":"houtenteo"},"content":"For new users, head over to [Quick Start](#2-quick-start) to get started. You can learn the command notations along the way as well. \u003cbr\u003e","lastModifiedDate":"2021-11-08"},{"lineNumber":47,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":48,"author":{"gitId":"houtenteo"},"content":"For more experienced users, feel free to skip over to the [Features](#5-overview-of-features) section to check out detailed descriptions of the features we offer. \u003cbr\u003e","lastModifiedDate":"2021-11-11"},{"lineNumber":49,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":50,"author":{"gitId":"loose-bus-change"},"content":"If you have any questions about CMM, please refer to the [FAQ](#6-faq). \u003cbr\u003e","lastModifiedDate":"2021-11-08"},{"lineNumber":51,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":52,"author":{"gitId":"loose-bus-change"},"content":"Hope you have a great time with CMM.","lastModifiedDate":"2021-11-08"},{"lineNumber":53,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":54,"author":{"gitId":"houtenteo"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-11-06"},{"lineNumber":55,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":56,"author":{"gitId":"loose-bus-change"},"content":"## 1. Table of Contents","lastModifiedDate":"2021-11-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2021-11-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2021-11-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":60,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-11-06"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":62,"author":{"gitId":"loose-bus-change"},"content":"## 2. Quick start","lastModifiedDate":"2021-11-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":64,"author":{"gitId":"Kangxun"},"content":"1. Ensure you have Java 11 or above installed in your computer","lastModifiedDate":"2021-11-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"Kangxun"},"content":"2. Download the latest CallMeMaybe.jar from [here](https://github.com/AY2122S1-CS2103T-T13-4/tp/releases)","lastModifiedDate":"2021-11-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"Kangxun"},"content":"3. Copy the file to the folder you want to use as the home folder for CMM","lastModifiedDate":"2021-11-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"houtenteo"},"content":"5. Double-click the file to start the app. A prompt will popup asking whether you want to import any new contacts. The prompt will look like the screenshot below :","lastModifiedDate":"2021-11-11"},{"lineNumber":71,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":72,"author":{"gitId":"Kangxun"},"content":"   ![importPopUpUi](images/importPopUpMessage.png) \u003cbr\u003e","lastModifiedDate":"2021-11-08"},{"lineNumber":73,"author":{"gitId":"loose-bus-change"},"content":"   To learn more about what each option does in detail, click [here](#514-importing-the-data-into-database).","lastModifiedDate":"2021-11-08"},{"lineNumber":74,"author":{"gitId":"idgrr"},"content":"   An example file import can be downloaded [here](https://github.com/AY2122S1-CS2103T-T13-4/tp/releases/tag/Test_Files)","lastModifiedDate":"2021-11-08"},{"lineNumber":75,"author":{"gitId":"houtenteo"},"content":"    \u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2021-11-11"},{"lineNumber":76,"author":{"gitId":"houtenteo"},"content":"6. After you click any button on the prompt, CMM will execute the selected option, and a GUI similar to the screenshot below should appear in a few seconds. Note how the app contains some sample data upon first startup","lastModifiedDate":"2021-11-11"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"   ![Ui](images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":80,"author":{"gitId":"houtenteo"},"content":"7. Type the command in the command box and press Enter to execute it. e.g., typing \"help\" and pressing `Enter` will open the help window","lastModifiedDate":"2021-11-11"},{"lineNumber":81,"author":{"gitId":"houtenteo"},"content":"   You can find the commands that CallMeMaybe supports below:","lastModifiedDate":"2021-11-05"},{"lineNumber":82,"author":{"gitId":"Kangxun"},"content":"   - `add n/John Doe p/98765432 e/johnd@example.com` : Adds a contact named John Doe to the CMM database","lastModifiedDate":"2021-11-08"},{"lineNumber":83,"author":{"gitId":"houtenteo"},"content":"   ","lastModifiedDate":"2021-11-08"},{"lineNumber":84,"author":{"gitId":"Kangxun"},"content":"   - `list` : Lists all contacts","lastModifiedDate":"2021-11-08"},{"lineNumber":85,"author":{"gitId":"houtenteo"},"content":"   ","lastModifiedDate":"2021-11-08"},{"lineNumber":86,"author":{"gitId":"Kangxun"},"content":"   - `called 2` : Marks the 2nd contact shown in the current list as called","lastModifiedDate":"2021-11-08"},{"lineNumber":87,"author":{"gitId":"houtenteo"},"content":"   ","lastModifiedDate":"2021-11-08"},{"lineNumber":88,"author":{"gitId":"Kangxun"},"content":"   - `edit 1 n/Bob p/62353535` : Edits the name and phone number of the first contact in the displayed list","lastModifiedDate":"2021-11-08"},{"lineNumber":89,"author":{"gitId":"houtenteo"},"content":"   ","lastModifiedDate":"2021-11-08"},{"lineNumber":90,"author":{"gitId":"Kangxun"},"content":"   - `findAny n/alex g/m` : Finds the contacts that have the substring `alex`in their name **AND/OR** are males","lastModifiedDate":"2021-11-08"},{"lineNumber":91,"author":{"gitId":"houtenteo"},"content":"   ","lastModifiedDate":"2021-11-08"},{"lineNumber":92,"author":{"gitId":"Kangxun"},"content":"   - `findAll n/alex g/m` : Finds the contacts that have both the substring `alex` in their name **AND** are males","lastModifiedDate":"2021-11-08"},{"lineNumber":93,"author":{"gitId":"houtenteo"},"content":"   ","lastModifiedDate":"2021-11-08"},{"lineNumber":94,"author":{"gitId":"Kangxun"},"content":"   - `delete 3` : Deletes the 3rd contact shown in the current list","lastModifiedDate":"2021-11-08"},{"lineNumber":95,"author":{"gitId":"houtenteo"},"content":"   ","lastModifiedDate":"2021-11-08"},{"lineNumber":96,"author":{"gitId":"Kangxun"},"content":"   - `display 4` : Displays the full contact details of the fourth contact in the displayed list","lastModifiedDate":"2021-11-08"},{"lineNumber":97,"author":{"gitId":"houtenteo"},"content":"   ","lastModifiedDate":"2021-11-08"},{"lineNumber":98,"author":{"gitId":"houtenteo"},"content":"   - `filter called` : Sorts the list to display uncalled contacts first","lastModifiedDate":"2021-11-05"},{"lineNumber":99,"author":{"gitId":"houtenteo"},"content":"   ","lastModifiedDate":"2021-11-08"},{"lineNumber":100,"author":{"gitId":"Kangxun"},"content":"   - `clear` : Deletes all contacts","lastModifiedDate":"2021-11-08"},{"lineNumber":101,"author":{"gitId":"houtenteo"},"content":"   ","lastModifiedDate":"2021-11-08"},{"lineNumber":102,"author":{"gitId":"Kangxun"},"content":"   - `exit` : Exits the app","lastModifiedDate":"2021-11-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"houtenteo"},"content":"8. Remember to clear the sample data using `clear` command before adding your own data","lastModifiedDate":"2021-11-11"},{"lineNumber":105,"author":{"gitId":"Kangxun"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":106,"author":{"gitId":"houtenteo"},"content":"9. Refer to the [Features](#5-overview-of-features) below for details of each command","lastModifiedDate":"2021-11-11"},{"lineNumber":107,"author":{"gitId":"Kangxun"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"pranav-ganesh"},"content":"## 3. Interface layout","lastModifiedDate":"2021-11-08"},{"lineNumber":112,"author":{"gitId":"pranav-ganesh"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":113,"author":{"gitId":"pranav-ganesh"},"content":"**Command Panel**","lastModifiedDate":"2021-11-08"},{"lineNumber":114,"author":{"gitId":"pranav-ganesh"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":115,"author":{"gitId":"houtenteo"},"content":"![Ui](images/Command Panel.png)\u003cbr\u003e","lastModifiedDate":"2021-11-08"},{"lineNumber":116,"author":{"gitId":"pranav-ganesh"},"content":"*Image of CMM\u0027s Command Panel*","lastModifiedDate":"2021-11-08"},{"lineNumber":117,"author":{"gitId":"pranav-ganesh"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":118,"author":{"gitId":"houtenteo"},"content":"* Commands are entered in the Command Line (section labeled `Enter command here...`)","lastModifiedDate":"2021-11-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":120,"author":{"gitId":"pranav-ganesh"},"content":"* The Feedback Box (the bottom section) displays the result of the command, which can be an error message if the command is invalid","lastModifiedDate":"2021-11-08"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":122,"author":{"gitId":"pranav-ganesh"},"content":"**Display List**","lastModifiedDate":"2021-11-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":124,"author":{"gitId":"houtenteo"},"content":"![Ui](images/Display List.png) \u003cbr\u003e","lastModifiedDate":"2021-11-08"},{"lineNumber":125,"author":{"gitId":"pranav-ganesh"},"content":"*Image of CMM\u0027s Display List*","lastModifiedDate":"2021-11-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":127,"author":{"gitId":"pranav-ganesh"},"content":"* Displays the list of contacts along with their contact details which includes the name, phone number, email address and isCalled attributes","lastModifiedDate":"2021-11-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":129,"author":{"gitId":"pranav-ganesh"},"content":"**Person Card**","lastModifiedDate":"2021-11-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":131,"author":{"gitId":"houtenteo"},"content":"![Ui](images/PersonCard.png) \u003cbr\u003e","lastModifiedDate":"2021-11-08"},{"lineNumber":132,"author":{"gitId":"pranav-ganesh"},"content":"*Image of CMM\u0027s Person Card*","lastModifiedDate":"2021-11-08"},{"lineNumber":133,"author":{"gitId":"pranav-ganesh"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":134,"author":{"gitId":"houtenteo"},"content":"* Displays additional information of each contact in the list of contacts. ","lastModifiedDate":"2021-11-08"},{"lineNumber":135,"author":{"gitId":"houtenteo"},"content":"This includes the attributes age, gender, address and interests","lastModifiedDate":"2021-11-08"},{"lineNumber":136,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":137,"author":{"gitId":"houtenteo"},"content":"* When application is started, the first contact in the list is displayed. If the contact list is empty,","lastModifiedDate":"2021-11-08"},{"lineNumber":138,"author":{"gitId":"houtenteo"},"content":"CMM displays an \u0027empty contact\u0027 with all the fields set to \u0027N.A\u0027","lastModifiedDate":"2021-11-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":140,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-11-08"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":142,"author":{"gitId":"pranav-ganesh"},"content":"## 4. Command Notations","lastModifiedDate":"2021-11-08"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":144,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2021-10-20"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":146,"author":{"gitId":"-"},"content":"**:information_source: Notes about the command format:**\u003cbr\u003e","lastModifiedDate":"2021-10-20"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":148,"author":{"gitId":"-"},"content":"* Words in `UPPER_CASE` are the parameters to be supplied by the user.\u003cbr\u003e","lastModifiedDate":"2021-10-20"},{"lineNumber":149,"author":{"gitId":"Kangxun"},"content":"  e.g., in `add n/NAME`, `NAME` is a parameter which can be used as `add n/John Doe`.","lastModifiedDate":"2021-11-08"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":151,"author":{"gitId":"-"},"content":"* Items in square brackets are optional.\u003cbr\u003e","lastModifiedDate":"2021-10-20"},{"lineNumber":152,"author":{"gitId":"Kangxun"},"content":"  e.g., `n/NAME [g/GENDER]` can be used as `n/John Doe g/M` or as `n/John Doe`.","lastModifiedDate":"2021-11-08"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":154,"author":{"gitId":"-"},"content":"* Items with `…`​ after them can be used multiple times including zero times.\u003cbr\u003e","lastModifiedDate":"2021-10-20"},{"lineNumber":155,"author":{"gitId":"Kangxun"},"content":"  e.g., `[i/INTEREST]…​` can be used as ` ` (i.e., 0 times), `i/running`, `i/running i/watching tv` etc.","lastModifiedDate":"2021-11-08"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":157,"author":{"gitId":"-"},"content":"* Parameters can be in any order.\u003cbr\u003e","lastModifiedDate":"2021-10-20"},{"lineNumber":158,"author":{"gitId":"Kangxun"},"content":"  e.g., if the command specifies `n/NAME p/PHONE_NUMBER`, `p/PHONE_NUMBER n/NAME` is also acceptable.","lastModifiedDate":"2021-11-08"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":160,"author":{"gitId":"houtenteo"},"content":"* If a parameter is expected only once in the command is specified multiple times, only the last occurrence of the parameter will be taken.\u003cbr\u003e","lastModifiedDate":"2021-10-20"},{"lineNumber":161,"author":{"gitId":"Kangxun"},"content":"  e.g., if you specify `p/99998888 p/66667777`, only `p/66667777` will be taken.","lastModifiedDate":"2021-11-08"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":163,"author":{"gitId":"-"},"content":"* Extraneous parameters for commands that do not take in parameters (such as `help`, `list`, `exit` and `clear`) will be ignored.\u003cbr\u003e","lastModifiedDate":"2021-10-20"},{"lineNumber":164,"author":{"gitId":"Kangxun"},"content":"  e.g., if the command specifies `help 123`, it will be interpreted as `help`.","lastModifiedDate":"2021-11-08"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":166,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-10-20"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":168,"author":{"gitId":"houtenteo"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2021-11-06"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":170,"author":{"gitId":"pranav-ganesh"},"content":"## 5. Overview of Features","lastModifiedDate":"2021-11-08"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":172,"author":{"gitId":"pranav-ganesh"},"content":"### 5.1 Adding a contact: `add`","lastModifiedDate":"2021-11-08"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":174,"author":{"gitId":"houtenteo"},"content":"Adds a contact to the CMM database.","lastModifiedDate":"2021-10-23"},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"houtenteo"},"content":"Format: `add n/NAME p/PHONE_NUMBER e/EMAIL [a/ADDRESS] [g/GENDER] [age/AGE] [i/INTEREST]…​`","lastModifiedDate":"2021-10-20"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":178,"author":{"gitId":"houtenteo"},"content":"**Things to note:**","lastModifiedDate":"2021-11-01"},{"lineNumber":179,"author":{"gitId":"houtenteo"},"content":"* `Name`, `Phone_number` and `Email` fields are mandatory","lastModifiedDate":"2021-11-01"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":181,"author":{"gitId":"houtenteo"},"content":"* `Name` must contain only alphanumeric characters","lastModifiedDate":"2021-11-06"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":183,"author":{"gitId":"houtenteo"},"content":"* `Phone_number` must contain exactly 8 digits","lastModifiedDate":"2021-11-05"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":185,"author":{"gitId":"houtenteo"},"content":"* numbers must start with \"6\", \"8\" or \"9\"","lastModifiedDate":"2021-11-06"},{"lineNumber":186,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":187,"author":{"gitId":"houtenteo"},"content":"* `Email` should be in the form of `local-part@domain-name` \u003cbr\u003e","lastModifiedDate":"2021-11-05"},{"lineNumber":188,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":189,"author":{"gitId":"houtenteo"},"content":"  * The local-part should only contain alphanumeric characters and these special characters, `+_.-` \u003cbr\u003e","lastModifiedDate":"2021-11-06"},{"lineNumber":190,"author":{"gitId":"houtenteo"},"content":"  ","lastModifiedDate":"2021-11-08"},{"lineNumber":191,"author":{"gitId":"houtenteo"},"content":"  * The local-part may not start or end with any special characters.\u003cbr\u003e","lastModifiedDate":"2021-11-06"},{"lineNumber":192,"author":{"gitId":"houtenteo"},"content":"  ","lastModifiedDate":"2021-11-08"},{"lineNumber":193,"author":{"gitId":"houtenteo"},"content":"  * The domain-name is made up of domain labels separated by periods. (eg. @nus.edu.sg)\u003cbr\u003e","lastModifiedDate":"2021-11-06"},{"lineNumber":194,"author":{"gitId":"houtenteo"},"content":"  ","lastModifiedDate":"2021-11-08"},{"lineNumber":195,"author":{"gitId":"houtenteo"},"content":"  * The domain-name must end with a domain label at least 2 characters long\u003cbr\u003e","lastModifiedDate":"2021-11-06"},{"lineNumber":196,"author":{"gitId":"houtenteo"},"content":"  ","lastModifiedDate":"2021-11-08"},{"lineNumber":197,"author":{"gitId":"houtenteo"},"content":"  * The domain-name must have each domain label start and end with alphanumeric characters\u003cbr\u003e","lastModifiedDate":"2021-11-06"},{"lineNumber":198,"author":{"gitId":"houtenteo"},"content":"  ","lastModifiedDate":"2021-11-08"},{"lineNumber":199,"author":{"gitId":"houtenteo"},"content":"  * The domain-name must have each domain label consist of alphanumeric characters, separated only by hyphens, if any\u003cbr\u003e","lastModifiedDate":"2021-11-06"},{"lineNumber":200,"author":{"gitId":"houtenteo"},"content":"  ","lastModifiedDate":"2021-11-08"},{"lineNumber":201,"author":{"gitId":"houtenteo"},"content":"* `Gender` can only be \"m\", \"f\", \"n.a\" (case-insensitive)","lastModifiedDate":"2021-11-01"},{"lineNumber":202,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":203,"author":{"gitId":"houtenteo"},"content":"* `Age` must only contain numbers","lastModifiedDate":"2021-11-01"},{"lineNumber":204,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":205,"author":{"gitId":"houtenteo"},"content":"* `Address` and `Interest` can be in any format","lastModifiedDate":"2021-11-06"},{"lineNumber":206,"author":{"gitId":"pranav-ganesh"},"content":"*  All the fields are case-insensitive  ","lastModifiedDate":"2021-11-08"},{"lineNumber":207,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":208,"author":{"gitId":"idgrr"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: ","lastModifiedDate":"2021-11-08"},{"lineNumber":209,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":210,"author":{"gitId":"idgrr"},"content":"**Tip:** \u003cbr\u003e","lastModifiedDate":"2021-11-08"},{"lineNumber":211,"author":{"gitId":"idgrr"},"content":"`Address`, `Gender`, `Age`, `Interest` fields are optional. A contact can have multiple interests.","lastModifiedDate":"2021-11-08"},{"lineNumber":212,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-10-23"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":214,"author":{"gitId":"houtenteo"},"content":"**Example:**","lastModifiedDate":"2021-11-11"},{"lineNumber":215,"author":{"gitId":"houtenteo"},"content":"  ","lastModifiedDate":"2021-11-08"},{"lineNumber":216,"author":{"gitId":"houtenteo"},"content":"* `add n/Betsy Crowe p/92345679 e/betsycrowe@example.com a/her house i/running i/swimming i/eating` Adds a contact with the following fields:","lastModifiedDate":"2021-11-08"},{"lineNumber":217,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":218,"author":{"gitId":"idgrr"},"content":"    * `Name`: Betsy Crowe","lastModifiedDate":"2021-11-08"},{"lineNumber":219,"author":{"gitId":"houtenteo"},"content":"  ","lastModifiedDate":"2021-11-08"},{"lineNumber":220,"author":{"gitId":"idgrr"},"content":"    * `Phone`: 92345679","lastModifiedDate":"2021-11-08"},{"lineNumber":221,"author":{"gitId":"houtenteo"},"content":"  ","lastModifiedDate":"2021-11-08"},{"lineNumber":222,"author":{"gitId":"idgrr"},"content":"    * `Email`: betsycrowe@example.com","lastModifiedDate":"2021-11-08"},{"lineNumber":223,"author":{"gitId":"houtenteo"},"content":"  ","lastModifiedDate":"2021-11-08"},{"lineNumber":224,"author":{"gitId":"idgrr"},"content":"    * `Address`: her house","lastModifiedDate":"2021-11-08"},{"lineNumber":225,"author":{"gitId":"houtenteo"},"content":"  ","lastModifiedDate":"2021-11-08"},{"lineNumber":226,"author":{"gitId":"idgrr"},"content":"    * `Intrests`: running, swimming, eating","lastModifiedDate":"2021-11-08"},{"lineNumber":227,"author":{"gitId":"houtenteo"},"content":"  ","lastModifiedDate":"2021-11-08"},{"lineNumber":228,"author":{"gitId":"idgrr"},"content":"    * All other unspecified fields will be set to N.A by default","lastModifiedDate":"2021-11-08"},{"lineNumber":229,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"houtenteo"},"content":"The screenshot below shows the expected result. To display the full contact details, you can use the [display command](#58-displaying-full-contact-details--display).","lastModifiedDate":"2021-11-11"},{"lineNumber":231,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-11-11"},{"lineNumber":232,"author":{"gitId":"houtenteo"},"content":"![addCommandExample](images/AddCommandExample.png)","lastModifiedDate":"2021-11-11"},{"lineNumber":233,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-11"},{"lineNumber":234,"author":{"gitId":"Kangxun"},"content":"**Common issues:**","lastModifiedDate":"2021-10-07"},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":236,"author":{"gitId":"Kangxun"},"content":"* _Invalid command format!_: \u003cbr\u003e","lastModifiedDate":"2021-11-06"},{"lineNumber":237,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":238,"author":{"gitId":"Kangxun"},"content":"  a. Omitted one or more of the mandatory fields \u003cbr\u003e","lastModifiedDate":"2021-11-06"},{"lineNumber":239,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":240,"author":{"gitId":"Kangxun"},"content":"  b. Used the wrong prefix (e.g., \u0027/n\u0027 instead of \u0027n/\u0027) \u003cbr\u003e","lastModifiedDate":"2021-11-08"},{"lineNumber":241,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":242,"author":{"gitId":"pranav-ganesh"},"content":"### 5.2 Listing all contacts : `list`","lastModifiedDate":"2021-11-08"},{"lineNumber":243,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":244,"author":{"gitId":"houtenteo"},"content":"Shows a list of all contacts in the CMM database.","lastModifiedDate":"2021-10-23"},{"lineNumber":245,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":246,"author":{"gitId":"-"},"content":"Format: `list`","lastModifiedDate":"2020-05-23"},{"lineNumber":247,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":248,"author":{"gitId":"Kangxun"},"content":"**Things to note:**","lastModifiedDate":"2021-10-26"},{"lineNumber":249,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":250,"author":{"gitId":"Kangxun"},"content":"* `list` shows all contacts in ascending order by name","lastModifiedDate":"2021-11-08"},{"lineNumber":251,"author":{"gitId":"Kangxun"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":252,"author":{"gitId":"houtenteo"},"content":"The screenshot below shows the expected result.","lastModifiedDate":"2021-11-11"},{"lineNumber":253,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-11-11"},{"lineNumber":254,"author":{"gitId":"houtenteo"},"content":"![listCommandExample](images/ListCommandExample.png)","lastModifiedDate":"2021-11-11"},{"lineNumber":255,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-11-11"},{"lineNumber":256,"author":{"gitId":"pranav-ganesh"},"content":"### 5.3 Marking a contact as called : `called`","lastModifiedDate":"2021-11-08"},{"lineNumber":257,"author":{"gitId":"loose-bus-change"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":258,"author":{"gitId":"Kangxun"},"content":"Marks the specified contact from the address book as called. (i.e., contact has already been called)","lastModifiedDate":"2021-11-08"},{"lineNumber":259,"author":{"gitId":"loose-bus-change"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":260,"author":{"gitId":"pranav-ganesh"},"content":"Format: `called INDEX`","lastModifiedDate":"2021-11-04"},{"lineNumber":261,"author":{"gitId":"loose-bus-change"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":262,"author":{"gitId":"Kangxun"},"content":"**Things to note:**","lastModifiedDate":"2021-10-07"},{"lineNumber":263,"author":{"gitId":"loose-bus-change"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":264,"author":{"gitId":"houtenteo"},"content":"* `INDEX` refers to the index number shown in the displayed list","lastModifiedDate":"2021-11-06"},{"lineNumber":265,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":266,"author":{"gitId":"houtenteo"},"content":"* `INDEX` **must be a positive integer** (e.g., 1, 2, 3, …​)","lastModifiedDate":"2021-11-06"},{"lineNumber":267,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":268,"author":{"gitId":"houtenteo"},"content":"* If `INDEX` is valid, the `Called` field will be updated to \u0027True\u0027","lastModifiedDate":"2021-11-11"},{"lineNumber":269,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-11-11"},{"lineNumber":270,"author":{"gitId":"houtenteo"},"content":"* No changes would be made if the `Called` field is already \u0027True\u0027","lastModifiedDate":"2021-11-11"},{"lineNumber":271,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-11-11"},{"lineNumber":272,"author":{"gitId":"loose-bus-change"},"content":"* If you want to un-call a contact, use the [edit command](#54-editing-a-contact--edit)","lastModifiedDate":"2021-11-08"},{"lineNumber":273,"author":{"gitId":"Kangxun"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":274,"author":{"gitId":"houtenteo"},"content":"**Example:**","lastModifiedDate":"2021-11-11"},{"lineNumber":275,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-11-11"},{"lineNumber":276,"author":{"gitId":"houtenteo"},"content":"* `called 3` marks the 3rd contact in the displayed list as Called","lastModifiedDate":"2021-11-11"},{"lineNumber":277,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-11-11"},{"lineNumber":278,"author":{"gitId":"houtenteo"},"content":"The screenshot below shows the expected result. Note how the \"❌\" changes to a \"✔️\".","lastModifiedDate":"2021-11-11"},{"lineNumber":279,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-11-11"},{"lineNumber":280,"author":{"gitId":"houtenteo"},"content":"![calledCommandExample](images/CalledCommandExample.png)","lastModifiedDate":"2021-11-11"},{"lineNumber":281,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-11-11"},{"lineNumber":282,"author":{"gitId":"Kangxun"},"content":"**Common issues:**","lastModifiedDate":"2021-10-07"},{"lineNumber":283,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":284,"author":{"gitId":"Kangxun"},"content":"* _The index provided is invalid_: \u003cbr\u003e","lastModifiedDate":"2021-11-06"},{"lineNumber":285,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":286,"author":{"gitId":"Kangxun"},"content":"  a. Displayed list does not contain contact at `INDEX` \u003cbr\u003e","lastModifiedDate":"2021-11-07"},{"lineNumber":287,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":288,"author":{"gitId":"Kangxun"},"content":"  b. Index specified is larger than 2147483647 \u003cbr\u003e","lastModifiedDate":"2021-11-07"},{"lineNumber":289,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":290,"author":{"gitId":"Kangxun"},"content":"  c. Index specified is not a positive integer \u003cbr\u003e","lastModifiedDate":"2021-11-07"},{"lineNumber":291,"author":{"gitId":"Kangxun"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":292,"author":{"gitId":"loose-bus-change"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":293,"author":{"gitId":"pranav-ganesh"},"content":"### 5.4 Editing a contact : `edit`","lastModifiedDate":"2021-11-08"},{"lineNumber":294,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":295,"author":{"gitId":"houtenteo"},"content":"Edits an existing contact in the CMM database.","lastModifiedDate":"2021-10-23"},{"lineNumber":296,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":297,"author":{"gitId":"pranav-ganesh"},"content":"Format: `edit INDEX [n/NAME] [p/PHONE] [e/EMAIL] [a/ADDRESS] [g/GENDER] [age/AGE] [c/CALLED] [i/(OPTIONAL INTERESTSLIST INDEX) INTEREST]...","lastModifiedDate":"2021-11-08"},{"lineNumber":298,"author":{"gitId":"pranav-ganesh"},"content":"[i/(INTERESTSLIST INDEX) remove]... [i/INTEREST]..`","lastModifiedDate":"2021-11-08"},{"lineNumber":299,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":300,"author":{"gitId":"houtenteo"},"content":"**Things to note:**","lastModifiedDate":"2021-11-08"},{"lineNumber":301,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":302,"author":{"gitId":"houtenteo"},"content":"* All the fields are case-insensitive","lastModifiedDate":"2021-11-11"},{"lineNumber":303,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-11"},{"lineNumber":304,"author":{"gitId":"houtenteo"},"content":"* `INDEX` refers to the index number shown in the displayed list","lastModifiedDate":"2021-11-08"},{"lineNumber":305,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":306,"author":{"gitId":"houtenteo"},"content":"* `INDEX` **must be a positive integer** (e.g., 1, 2, 3, …​)","lastModifiedDate":"2021-11-08"},{"lineNumber":307,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":308,"author":{"gitId":"houtenteo"},"content":"* `INTERESTSLIST INDEX` refers to the index number shown in the displayed interests list of the contact","lastModifiedDate":"2021-11-08"},{"lineNumber":309,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":310,"author":{"gitId":"houtenteo"},"content":"* `INTERESTSLIST INDEX` **must be a positive integer** (e.g., 1, 2, 3, …​)","lastModifiedDate":"2021-11-08"},{"lineNumber":311,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":312,"author":{"gitId":"houtenteo"},"content":"* The Interests list of a contact can be found here (refer to the screenshot below) and can be displayed by using the [display command](#58-displaying-full-contact-details--display)","lastModifiedDate":"2021-11-08"},{"lineNumber":313,"author":{"gitId":"houtenteo"},"content":"   ![interestsList](images/interestsList.png)","lastModifiedDate":"2021-11-08"},{"lineNumber":314,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":315,"author":{"gitId":"houtenteo"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-11-08"},{"lineNumber":316,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":317,"author":{"gitId":"houtenteo"},"content":"**:bulb: Tip:** \u003cbr\u003e","lastModifiedDate":"2021-11-08"},{"lineNumber":318,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":319,"author":{"gitId":"houtenteo"},"content":"* If all 3 operations are specified in the same command, editing the interest is always done first, followed by removing, then adding the interest.","lastModifiedDate":"2021-11-08"},{"lineNumber":320,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":321,"author":{"gitId":"houtenteo"},"content":"* Specifying (INTERESTLIST INDEX) is optional as well","lastModifiedDate":"2021-11-08"},{"lineNumber":322,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":323,"author":{"gitId":"houtenteo"},"content":"* If (INTERESTLIST INDEX) is specified, the interest at that index would be updated","lastModifiedDate":"2021-11-08"},{"lineNumber":324,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":325,"author":{"gitId":"houtenteo"},"content":"* If it is not, then an interest would be added to the list instead","lastModifiedDate":"2021-11-08"},{"lineNumber":326,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":327,"author":{"gitId":"houtenteo"},"content":"* You can refer to the example below for a better understanding of the edit command functionality","lastModifiedDate":"2021-11-11"},{"lineNumber":328,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":329,"author":{"gitId":"houtenteo"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-10-23"},{"lineNumber":330,"author":{"gitId":"pranav-ganesh"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":331,"author":{"gitId":"houtenteo"},"content":"**Example:**","lastModifiedDate":"2021-11-11"},{"lineNumber":332,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":333,"author":{"gitId":"houtenteo"},"content":"* `edit 1 n/Malan g/F i/Painting i/(2) Swimming` Edits the following fields of the **first contact in the displayed list** :\u003cbr\u003e","lastModifiedDate":"2021-11-11"},{"lineNumber":334,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":335,"author":{"gitId":"idgrr"},"content":"    * Edit `Name` to \u0027Malan\u0027","lastModifiedDate":"2021-11-08"},{"lineNumber":336,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":337,"author":{"gitId":"houtenteo"},"content":"    * Edit `Gender` to \u0027F\u0027 ","lastModifiedDate":"2021-11-11"},{"lineNumber":338,"author":{"gitId":"houtenteo"},"content":"  ","lastModifiedDate":"2021-11-11"},{"lineNumber":339,"author":{"gitId":"idgrr"},"content":"    * Adds \u0027painting\u0027 as a *new* `Interest`","lastModifiedDate":"2021-11-08"},{"lineNumber":340,"author":{"gitId":"houtenteo"},"content":"  ","lastModifiedDate":"2021-11-08"},{"lineNumber":341,"author":{"gitId":"idgrr"},"content":"    * Edits the **second** `Interest` to \u0027Swimming\u0027","lastModifiedDate":"2021-11-08"},{"lineNumber":342,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":343,"author":{"gitId":"houtenteo"},"content":"The screenshot below shows the expected result.","lastModifiedDate":"2021-11-11"},{"lineNumber":344,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":345,"author":{"gitId":"houtenteo"},"content":"![editCommandExample](images/EditCommandExample.png)","lastModifiedDate":"2021-11-11"},{"lineNumber":346,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":347,"author":{"gitId":"pranav-ganesh"},"content":"**Common issues:**","lastModifiedDate":"2021-10-23"},{"lineNumber":348,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":349,"author":{"gitId":"Kangxun"},"content":"* _The index provided is invalid_: \u003cbr\u003e","lastModifiedDate":"2021-11-06"},{"lineNumber":350,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":351,"author":{"gitId":"idgrr"},"content":"  a. Displayed list does not contain contact at `INDEX`","lastModifiedDate":"2021-11-08"},{"lineNumber":352,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":353,"author":{"gitId":"Kangxun"},"content":"* _The interests list index provided is invalid_: \u003cbr\u003e","lastModifiedDate":"2021-11-06"},{"lineNumber":354,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":355,"author":{"gitId":"idgrr"},"content":"  a. Displayed interests list does not contain an interest at `INTERESTSLIST INDEX`","lastModifiedDate":"2021-11-08"},{"lineNumber":356,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":357,"author":{"gitId":"Kangxun"},"content":"* _Invalid command format!_: \u003cbr\u003e","lastModifiedDate":"2021-11-06"},{"lineNumber":358,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":359,"author":{"gitId":"Kangxun"},"content":"  a. No fields provided \u003cbr\u003e","lastModifiedDate":"2021-11-06"},{"lineNumber":360,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":361,"author":{"gitId":"Kangxun"},"content":"  b. Used the wrong prefix. (e.g., \u0027i/[1]\u0027 instead of \u0027i/(1)\u0027) \u003cbr\u003e","lastModifiedDate":"2021-11-06"},{"lineNumber":362,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":363,"author":{"gitId":"Kangxun"},"content":"* _Invalid command arguments_: \u003cbr\u003e","lastModifiedDate":"2021-11-06"},{"lineNumber":364,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":365,"author":{"gitId":"idgrr"},"content":"  a. Duplicate of the edited contact already exists on the address book \u003cbr\u003e","lastModifiedDate":"2021-11-08"},{"lineNumber":366,"author":{"gitId":"houtenteo"},"content":"  (e.g., editing name from \u0027Bob\u0027 to \u0027bob\u0027 is not allowed. Since names are case-insensitive, both \u0027Bob\u0027 and \u0027bob\u0027 are recognised","lastModifiedDate":"2021-11-08"},{"lineNumber":367,"author":{"gitId":"houtenteo"},"content":"  as the same name)","lastModifiedDate":"2021-11-08"},{"lineNumber":368,"author":{"gitId":"pranav-ganesh"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":369,"author":{"gitId":"pranav-ganesh"},"content":"### 5.5 Deleting a contact : `delete`","lastModifiedDate":"2021-11-08"},{"lineNumber":370,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":371,"author":{"gitId":"houtenteo"},"content":"Deletes the specified contact from the CMM database.","lastModifiedDate":"2021-10-23"},{"lineNumber":372,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":373,"author":{"gitId":"-"},"content":"Format: `delete INDEX`","lastModifiedDate":"2020-05-23"},{"lineNumber":374,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":375,"author":{"gitId":"houtenteo"},"content":"**Example:**","lastModifiedDate":"2021-11-11"},{"lineNumber":376,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":377,"author":{"gitId":"idgrr"},"content":"* `delete 2` deletes the *second contact in the displayed list*","lastModifiedDate":"2021-11-08"},{"lineNumber":378,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":379,"author":{"gitId":"idgrr"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e:exclamation: ","lastModifiedDate":"2021-11-08"},{"lineNumber":380,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":381,"author":{"gitId":"houtenteo"},"content":"**Caution:** Deleting is irreversible, please use with caution.","lastModifiedDate":"2021-11-08"},{"lineNumber":382,"author":{"gitId":"houtenteo"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-10-23"},{"lineNumber":383,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":384,"author":{"gitId":"Kangxun"},"content":"**Things to note:**","lastModifiedDate":"2021-10-07"},{"lineNumber":385,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":386,"author":{"gitId":"Kangxun"},"content":"* `INDEX` refers to the index number shown in the displayed contacts list","lastModifiedDate":"2021-11-08"},{"lineNumber":387,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":388,"author":{"gitId":"Kangxun"},"content":"* `INDEX` **must be a positive integer** (e.g., 1, 2, 3, …​)","lastModifiedDate":"2021-11-07"},{"lineNumber":389,"author":{"gitId":"Kangxun"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":390,"author":{"gitId":"Kangxun"},"content":"**Common issues:**","lastModifiedDate":"2021-10-07"},{"lineNumber":391,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":392,"author":{"gitId":"Kangxun"},"content":"* _The index provided is invalid_: \u003cbr\u003e","lastModifiedDate":"2021-11-06"},{"lineNumber":393,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":394,"author":{"gitId":"Kangxun"},"content":"  a. Displayed list does not contain contact at `INDEX` \u003cbr\u003e","lastModifiedDate":"2021-11-08"},{"lineNumber":395,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":396,"author":{"gitId":"Kangxun"},"content":"  b. Index specified is larger than 2147483647 \u003cbr\u003e","lastModifiedDate":"2021-11-08"},{"lineNumber":397,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":398,"author":{"gitId":"Kangxun"},"content":"  c. Index specified is not a positive integer \u003cbr\u003e","lastModifiedDate":"2021-11-08"},{"lineNumber":399,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":400,"author":{"gitId":"houtenteo"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2021-11-11"},{"lineNumber":401,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-11-11"},{"lineNumber":402,"author":{"gitId":"pranav-ganesh"},"content":"### 5.6 Finding contacts that match **ANY** of the keywords specified: `findAny`","lastModifiedDate":"2021-11-08"},{"lineNumber":403,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":404,"author":{"gitId":"houtenteo"},"content":"Finds all contacts that match any of the fields specified by the user","lastModifiedDate":"2021-11-08"},{"lineNumber":405,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":406,"author":{"gitId":"idgrr"},"content":"Format: `findAny [n/NAME…​] [p/PHONE…​] [e/EMAIL…​] [a/ADDRESS…​] [g/GENDER…​] [age/AGE…​]","lastModifiedDate":"2021-10-28"},{"lineNumber":407,"author":{"gitId":"pranav-ganesh"},"content":"[c/CALLED…​] [i/INTEREST…​]`","lastModifiedDate":"2021-11-04"},{"lineNumber":408,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":409,"author":{"gitId":"houtenteo"},"content":"**Things to note:**","lastModifiedDate":"2021-11-01"},{"lineNumber":410,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":411,"author":{"gitId":"idgrr"},"content":"* FindAny requires at least one field. But it is optional to include all the fields \u003cbr\u003e","lastModifiedDate":"2021-11-08"},{"lineNumber":412,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":413,"author":{"gitId":"houtenteo"},"content":"* If there are duplicate fields, CMM will only take the right-most field \u003cbr\u003e","lastModifiedDate":"2021-11-01"},{"lineNumber":414,"author":{"gitId":"houtenteo"},"content":"  (e.g., `findAny n/alex n/david` returns the same results as `findAny n/david`)","lastModifiedDate":"2021-11-08"},{"lineNumber":415,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":416,"author":{"gitId":"houtenteo"},"content":"* The search is case-insensitive. \u003cbr\u003e","lastModifiedDate":"2021-11-08"},{"lineNumber":417,"author":{"gitId":"houtenteo"},"content":"  (e.g `n/hans` will return the same result `n/Hans`) \u003cbr\u003e","lastModifiedDate":"2021-11-08"},{"lineNumber":418,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":419,"author":{"gitId":"houtenteo"},"content":"* Any number of keywords can be specified within each field \u003cbr\u003e","lastModifiedDate":"2021-11-01"},{"lineNumber":420,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":421,"author":{"gitId":"houtenteo"},"content":"* The order of the keywords within each field does not matter. \u003cbr\u003e","lastModifiedDate":"2021-11-08"},{"lineNumber":422,"author":{"gitId":"houtenteo"},"content":"  (e.g., `n/Hans Bo` will return the same result as `n/Bo Hans`)\u003cbr\u003e","lastModifiedDate":"2021-11-08"},{"lineNumber":423,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":424,"author":{"gitId":"pranav-ganesh"},"content":"* Keywords for `Called` are limited to `true`, `false`, `t`, `f`","lastModifiedDate":"2021-11-04"},{"lineNumber":425,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":426,"author":{"gitId":"houtenteo"},"content":"* Keywords for `Gender` are limited to `male`, `female`, `m`, `f`","lastModifiedDate":"2021-11-01"},{"lineNumber":427,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":428,"author":{"gitId":"pranav-ganesh"},"content":"* All the fields are case-insensitive","lastModifiedDate":"2021-11-08"},{"lineNumber":429,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":430,"author":{"gitId":"houtenteo"},"content":"* You can refer to the example below for a better understanding","lastModifiedDate":"2021-11-11"},{"lineNumber":431,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":432,"author":{"gitId":"houtenteo"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-primary\"\u003e ","lastModifiedDate":"2021-11-08"},{"lineNumber":433,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":434,"author":{"gitId":"houtenteo"},"content":"**:bulb: Tip: FindAny vs FindAll**","lastModifiedDate":"2021-11-08"},{"lineNumber":435,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":436,"author":{"gitId":"houtenteo"},"content":"* `findAny` searches for contacts that satisfy **ANY** of the fields specified","lastModifiedDate":"2021-11-08"},{"lineNumber":437,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":438,"author":{"gitId":"houtenteo"},"content":"* `findAll` searches for contacts that satisfy **ALL** the fields specified","lastModifiedDate":"2021-11-08"},{"lineNumber":439,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":440,"author":{"gitId":"loose-bus-change"},"content":"Click [here](#57-finding-contacts-that-match-all-the-keywords-specified--findall) to learn more about findAll","lastModifiedDate":"2021-11-08"},{"lineNumber":441,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":442,"author":{"gitId":"idgrr"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-10-28"},{"lineNumber":443,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":444,"author":{"gitId":"houtenteo"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2021-11-11"},{"lineNumber":445,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-11-11"},{"lineNumber":446,"author":{"gitId":"houtenteo"},"content":"**Example:**","lastModifiedDate":"2021-11-11"},{"lineNumber":447,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":448,"author":{"gitId":"houtenteo"},"content":"* `findAny findAny n/o p/87` Finds all contacts that have the letter `o` in their name and the substring \u002787\u0027 in their phone number","lastModifiedDate":"2021-11-11"},{"lineNumber":449,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":450,"author":{"gitId":"houtenteo"},"content":"The screenshot below shows the expected result.","lastModifiedDate":"2021-11-11"},{"lineNumber":451,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":452,"author":{"gitId":"houtenteo"},"content":"![findAnyCommandExample](images/FindAnyCommandExample.png)","lastModifiedDate":"2021-11-11"},{"lineNumber":453,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":454,"author":{"gitId":"houtenteo"},"content":"**Common issues:**","lastModifiedDate":"2021-10-28"},{"lineNumber":455,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":456,"author":{"gitId":"Kangxun"},"content":"* _Unknown command_: \u003cbr\u003e","lastModifiedDate":"2021-11-07"},{"lineNumber":457,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":458,"author":{"gitId":"houtenteo"},"content":"  a. Using `findany` instead of `findAny` (not capitalising the \u0027A\u0027)","lastModifiedDate":"2021-10-28"},{"lineNumber":459,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":460,"author":{"gitId":"houtenteo"},"content":"* _Invalid command format!_: \u003cbr\u003e","lastModifiedDate":"2021-10-28"},{"lineNumber":461,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":462,"author":{"gitId":"houtenteo"},"content":"  a. No fields provided\u003cbr\u003e","lastModifiedDate":"2021-10-28"},{"lineNumber":463,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":464,"author":{"gitId":"Kangxun"},"content":"  b. Used the wrong prefix (eg. \u0027/n\u0027 instead of \u0027n/\u0027) \u003cbr\u003e","lastModifiedDate":"2021-11-08"},{"lineNumber":465,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":466,"author":{"gitId":"Kangxun"},"content":"  c. Did not specify either \u0027t\u0027, \u0027f\u0027, \u0027true\u0027, \u0027false\u0027 after `c/` \u003cbr\u003e","lastModifiedDate":"2021-11-08"},{"lineNumber":467,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":468,"author":{"gitId":"Kangxun"},"content":"  d. Did not specify either \u0027m\u0027, \u0027f\u0027, \u0027male\u0027, \u0027female\u0027, \u0027n.a\u0027 after `g/` \u003cbr\u003e","lastModifiedDate":"2021-11-08"},{"lineNumber":469,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":470,"author":{"gitId":"houtenteo"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2021-11-11"},{"lineNumber":471,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-11-11"},{"lineNumber":472,"author":{"gitId":"pranav-ganesh"},"content":"### 5.7 Finding contacts that match **ALL** the keywords specified : `findAll`","lastModifiedDate":"2021-11-08"},{"lineNumber":473,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":474,"author":{"gitId":"pranav-ganesh"},"content":"Format: `findAll [n/NAME…​] [p/PHONE…​] [e/EMAIL…​] [a/ADDRESS…​] [g/GENDER…​] [age/AGE…​] [c/CALLED…​] [i/INTEREST…​]`","lastModifiedDate":"2021-11-04"},{"lineNumber":475,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":476,"author":{"gitId":"houtenteo"},"content":"Finds only the contacts that match all the keywords specified in their respective fields","lastModifiedDate":"2021-11-08"},{"lineNumber":477,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":478,"author":{"gitId":"houtenteo"},"content":"**Things to note:**","lastModifiedDate":"2021-11-01"},{"lineNumber":479,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":480,"author":{"gitId":"houtenteo"},"content":"* `findAll` requires at least one field. But it is optional to include all the fields. \u003cbr\u003e","lastModifiedDate":"2021-11-01"},{"lineNumber":481,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":482,"author":{"gitId":"houtenteo"},"content":"* If there are duplicate fields, CMM will only take the right-most field \u003cbr\u003e","lastModifiedDate":"2021-11-01"},{"lineNumber":483,"author":{"gitId":"houtenteo"},"content":"  (e.g., `findAll n/alex n/david` returns the same results as `findAny n/david`)","lastModifiedDate":"2021-11-08"},{"lineNumber":484,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":485,"author":{"gitId":"houtenteo"},"content":"* The search is case-insensitive. e.g., \u003cbr\u003e","lastModifiedDate":"2021-11-08"},{"lineNumber":486,"author":{"gitId":"houtenteo"},"content":"`findAll n/hans` will return the same result `findAll n/Hans` \u003cbr\u003e","lastModifiedDate":"2021-11-08"},{"lineNumber":487,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":488,"author":{"gitId":"houtenteo"},"content":"* Any number of keywords can be specified within each field \u003cbr\u003e","lastModifiedDate":"2021-11-01"},{"lineNumber":489,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":490,"author":{"gitId":"houtenteo"},"content":"* The order of the keywords within each field does not matter. \u003cbr\u003e","lastModifiedDate":"2021-11-08"},{"lineNumber":491,"author":{"gitId":"houtenteo"},"content":"  (e.g., `n/Hans Bo` will return the same result as `n/Bo Hans`)\u003cbr\u003e","lastModifiedDate":"2021-11-08"},{"lineNumber":492,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":493,"author":{"gitId":"pranav-ganesh"},"content":"* Keywords for `Called` are limited to `true`, `false`, `t`, `f`","lastModifiedDate":"2021-11-04"},{"lineNumber":494,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":495,"author":{"gitId":"houtenteo"},"content":"* Keywords for `Gender` are limited to `male`, `female`, `m`, `f`","lastModifiedDate":"2021-11-01"},{"lineNumber":496,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":497,"author":{"gitId":"pranav-ganesh"},"content":"* All the fields are case-insensitive","lastModifiedDate":"2021-11-08"},{"lineNumber":498,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":499,"author":{"gitId":"houtenteo"},"content":"* You can refer to the example below for a better understanding","lastModifiedDate":"2021-11-11"},{"lineNumber":500,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":501,"author":{"gitId":"houtenteo"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-primary\"\u003e ","lastModifiedDate":"2021-11-08"},{"lineNumber":502,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":503,"author":{"gitId":"houtenteo"},"content":":bulb: **Tip: FindAll vs FindAny** \u003cbr\u003e","lastModifiedDate":"2021-11-08"},{"lineNumber":504,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":505,"author":{"gitId":"houtenteo"},"content":"* `findAll` searches for contacts that satisfy **ALL** the fields specified.","lastModifiedDate":"2021-11-08"},{"lineNumber":506,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":507,"author":{"gitId":"houtenteo"},"content":"* `findAny` searches for contacts that satisfy **ANY** of the fields specified.\u003cbr\u003e","lastModifiedDate":"2021-11-08"},{"lineNumber":508,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":509,"author":{"gitId":"loose-bus-change"},"content":"Click [here](#56-finding-contacts-that-match-any-of-the-keywords-specified-findany) to learn more about findAny","lastModifiedDate":"2021-11-08"},{"lineNumber":510,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":511,"author":{"gitId":"houtenteo"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-11-08"},{"lineNumber":512,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":513,"author":{"gitId":"houtenteo"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2021-11-11"},{"lineNumber":514,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-11-11"},{"lineNumber":515,"author":{"gitId":"houtenteo"},"content":"**Example:**","lastModifiedDate":"2021-11-11"},{"lineNumber":516,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-11-11"},{"lineNumber":517,"author":{"gitId":"houtenteo"},"content":"* `findAll n/o p/87` Finds all contacts that have **both** the letter \u0027o\u0027 in their name and the substring \u002787\u0027 in their phone number","lastModifiedDate":"2021-11-11"},{"lineNumber":518,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":519,"author":{"gitId":"houtenteo"},"content":"The screenshot below shows the expected result.","lastModifiedDate":"2021-11-11"},{"lineNumber":520,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":521,"author":{"gitId":"houtenteo"},"content":"![findAllCommandExample](images/FindAllCommandExample.png)","lastModifiedDate":"2021-11-11"},{"lineNumber":522,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":523,"author":{"gitId":"idgrr"},"content":"**Common issues:**","lastModifiedDate":"2021-10-28"},{"lineNumber":524,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":525,"author":{"gitId":"Kangxun"},"content":"* _Unknown command_: \u003cbr\u003e","lastModifiedDate":"2021-11-07"},{"lineNumber":526,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":527,"author":{"gitId":"houtenteo"},"content":"  a. Using `findall` instead of `findAll` (not capitalising the \u0027A\u0027)","lastModifiedDate":"2021-11-11"},{"lineNumber":528,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":529,"author":{"gitId":"houtenteo"},"content":"* _Invalid command format!_: \u003cbr\u003e","lastModifiedDate":"2021-10-28"},{"lineNumber":530,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":531,"author":{"gitId":"houtenteo"},"content":"  a. No fields provided\u003cbr\u003e","lastModifiedDate":"2021-10-28"},{"lineNumber":532,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":533,"author":{"gitId":"Kangxun"},"content":"  b. Used the wrong prefix (e.g., \u0027/n\u0027 instead of \u0027n/\u0027) \u003cbr\u003e","lastModifiedDate":"2021-11-08"},{"lineNumber":534,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":535,"author":{"gitId":"Kangxun"},"content":"  c. Did not specify either \u0027t\u0027, \u0027f\u0027, \u0027true\u0027, \u0027false\u0027 after `c/` \u003cbr\u003e","lastModifiedDate":"2021-11-08"},{"lineNumber":536,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":537,"author":{"gitId":"Kangxun"},"content":"  d. Did not specify either \u0027m\u0027, \u0027f\u0027, \u0027male\u0027, \u0027female\u0027, \u0027n.a\u0027 after `g/` \u003cbr\u003e","lastModifiedDate":"2021-11-08"},{"lineNumber":538,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":539,"author":{"gitId":"pranav-ganesh"},"content":"### 5.8 Displaying full contact details : `display`","lastModifiedDate":"2021-11-08"},{"lineNumber":540,"author":{"gitId":"Kangxun"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":541,"author":{"gitId":"houtenteo"},"content":"Displays additional information of a particular contact stored in the application. These include the","lastModifiedDate":"2021-10-23"},{"lineNumber":542,"author":{"gitId":"houtenteo"},"content":"address, gender, age and their interests.","lastModifiedDate":"2021-10-23"},{"lineNumber":543,"author":{"gitId":"loose-bus-change"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":544,"author":{"gitId":"houtenteo"},"content":"The full details of the contact are shown on the right side of the application (inside the white box).","lastModifiedDate":"2021-10-23"},{"lineNumber":545,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":546,"author":{"gitId":"houtenteo"},"content":"![displayUi](images/displayUi.png)","lastModifiedDate":"2021-10-23"},{"lineNumber":547,"author":{"gitId":"loose-bus-change"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":548,"author":{"gitId":"loose-bus-change"},"content":"Format: `display INDEX`","lastModifiedDate":"2021-10-21"},{"lineNumber":549,"author":{"gitId":"loose-bus-change"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":550,"author":{"gitId":"houtenteo"},"content":"**Things to note:**","lastModifiedDate":"2021-11-11"},{"lineNumber":551,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-11-11"},{"lineNumber":552,"author":{"gitId":"houtenteo"},"content":"* `INDEX` refers to the index number shown in the displayed list","lastModifiedDate":"2021-11-11"},{"lineNumber":553,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-11-11"},{"lineNumber":554,"author":{"gitId":"houtenteo"},"content":"* `INDEX` **must be a positive integer** (e.g., 1, 2, 3, …​)","lastModifiedDate":"2021-11-11"},{"lineNumber":555,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-11-11"},{"lineNumber":556,"author":{"gitId":"houtenteo"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2021-11-11"},{"lineNumber":557,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-11-11"},{"lineNumber":558,"author":{"gitId":"houtenteo"},"content":"**Example:**","lastModifiedDate":"2021-11-11"},{"lineNumber":559,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":560,"author":{"gitId":"houtenteo"},"content":"* `display 3` displays full contact details of the 3rd contact in the displayed list","lastModifiedDate":"2021-10-23"},{"lineNumber":561,"author":{"gitId":"Kangxun"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":562,"author":{"gitId":"houtenteo"},"content":"The screenshot below shows the expected result.","lastModifiedDate":"2021-11-11"},{"lineNumber":563,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-11-11"},{"lineNumber":564,"author":{"gitId":"houtenteo"},"content":"![displayCommandExample](images/DisplayCommandExample.png)","lastModifiedDate":"2021-11-11"},{"lineNumber":565,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-11-11"},{"lineNumber":566,"author":{"gitId":"loose-bus-change"},"content":"**Common issues:**","lastModifiedDate":"2021-10-22"},{"lineNumber":567,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":568,"author":{"gitId":"Kangxun"},"content":"* _The index provided is invalid_: \u003cbr\u003e","lastModifiedDate":"2021-11-06"},{"lineNumber":569,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":570,"author":{"gitId":"Kangxun"},"content":"  a. Displayed list does not contain contact at `INDEX` \u003cbr\u003e","lastModifiedDate":"2021-11-08"},{"lineNumber":571,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":572,"author":{"gitId":"Kangxun"},"content":"  b. Index specified is larger than 2147483647 \u003cbr\u003e","lastModifiedDate":"2021-11-08"},{"lineNumber":573,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":574,"author":{"gitId":"Kangxun"},"content":"  c. Index specified is not a positive integer \u003cbr\u003e","lastModifiedDate":"2021-11-08"},{"lineNumber":575,"author":{"gitId":"Kangxun"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":576,"author":{"gitId":"pranav-ganesh"},"content":"### 5.9 Filtering contacts : `filter`","lastModifiedDate":"2021-11-08"},{"lineNumber":577,"author":{"gitId":"Kangxun"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":578,"author":{"gitId":"Kangxun"},"content":"Filters the existing contacts in the CMM database. The displayed list will show contacts sorted by the chosen category.","lastModifiedDate":"2021-10-26"},{"lineNumber":579,"author":{"gitId":"Kangxun"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":580,"author":{"gitId":"Kangxun"},"content":"Format: `filter CATEGORY [COUNT]`","lastModifiedDate":"2021-10-26"},{"lineNumber":581,"author":{"gitId":"Kangxun"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":582,"author":{"gitId":"Kangxun"},"content":"**Things to note:**","lastModifiedDate":"2021-10-26"},{"lineNumber":583,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":584,"author":{"gitId":"Kangxun"},"content":"* `CATEGORY` field is mandatory","lastModifiedDate":"2021-10-26"},{"lineNumber":585,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":586,"author":{"gitId":"Kangxun"},"content":"* `CATEGORY` refers to the category used to filter the contacts","lastModifiedDate":"2021-11-03"},{"lineNumber":587,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":588,"author":{"gitId":"Kangxun"},"content":"* `CATEGORY` **must be one of the following:** called, gender","lastModifiedDate":"2021-10-26"},{"lineNumber":589,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":590,"author":{"gitId":"Kangxun"},"content":"* `COUNT` refers to the number of contacts to be shown in the displayed list. If `COUNT` is more than the total number","lastModifiedDate":"2021-11-02"},{"lineNumber":591,"author":{"gitId":"Kangxun"},"content":"  of contacts, all contacts will be shown","lastModifiedDate":"2021-11-03"},{"lineNumber":592,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":593,"author":{"gitId":"Kangxun"},"content":"* `COUNT` **must be a positive integer less than 2147483648** (e.g., 1, 2, 3, …, 2147483647 ​)","lastModifiedDate":"2021-11-07"},{"lineNumber":594,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":595,"author":{"gitId":"Kangxun"},"content":"* If more arguments are given than what is required, the last two arguments are taken into account","lastModifiedDate":"2021-11-03"},{"lineNumber":596,"author":{"gitId":"Kangxun"},"content":"  (e.g., `filter gender called 2` will be interpreted as `filter called 2`)","lastModifiedDate":"2021-10-26"},{"lineNumber":597,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":598,"author":{"gitId":"Kangxun"},"content":"* If the last argument is not an integer, it will be interpreted as a `CATEGORY`","lastModifiedDate":"2021-11-03"},{"lineNumber":599,"author":{"gitId":"Kangxun"},"content":"  (e.g., `filter gender called` will be interpreted as `filter called`)","lastModifiedDate":"2021-10-26"},{"lineNumber":600,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":601,"author":{"gitId":"Kangxun"},"content":"* If more than one category is entered, the last category will be interpreted as the `CATEGORY`","lastModifiedDate":"2021-11-03"},{"lineNumber":602,"author":{"gitId":"Kangxun"},"content":"  (e.g., `filter gender called 3` will be interpreted as `filter called 3`)","lastModifiedDate":"2021-10-27"},{"lineNumber":603,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":604,"author":{"gitId":"Kangxun"},"content":"* If only one argument is given, it will be interpreted as a `CATEGORY`","lastModifiedDate":"2021-11-03"},{"lineNumber":605,"author":{"gitId":"Kangxun"},"content":"  (e.g., `filter 1000` will cause `1000` to be interpreted as a `CATEGORY`)","lastModifiedDate":"2021-11-03"},{"lineNumber":606,"author":{"gitId":"Kangxun"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":607,"author":{"gitId":"houtenteo"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2021-11-11"},{"lineNumber":608,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-11-11"},{"lineNumber":609,"author":{"gitId":"houtenteo"},"content":"**Example:**","lastModifiedDate":"2021-11-11"},{"lineNumber":610,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":611,"author":{"gitId":"houtenteo"},"content":"* `filter called 2` Filters the displayed list to prioritise uncalled contacts and limits the size of the list to 2","lastModifiedDate":"2021-11-11"},{"lineNumber":612,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":613,"author":{"gitId":"houtenteo"},"content":"The screenshot below shows the expected result.","lastModifiedDate":"2021-11-11"},{"lineNumber":614,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-11-11"},{"lineNumber":615,"author":{"gitId":"houtenteo"},"content":"![filterCommandExample](images/FilterCommandExample.png)","lastModifiedDate":"2021-11-11"},{"lineNumber":616,"author":{"gitId":"Kangxun"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":617,"author":{"gitId":"Kangxun"},"content":"**Common issues:**","lastModifiedDate":"2021-10-26"},{"lineNumber":618,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":619,"author":{"gitId":"Kangxun"},"content":"* _Invalid command format!_: \u003cbr\u003e","lastModifiedDate":"2021-11-07"},{"lineNumber":620,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":621,"author":{"gitId":"Kangxun"},"content":"  a. No fields provided \u003cbr\u003e","lastModifiedDate":"2021-11-07"},{"lineNumber":622,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":623,"author":{"gitId":"Kangxun"},"content":"* _Category can only be either \"called\" or \"gender\"_: \u003cbr\u003e","lastModifiedDate":"2021-11-06"},{"lineNumber":624,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":625,"author":{"gitId":"Kangxun"},"content":"  a. The category specified is not `called` or `gender` \u003cbr\u003e","lastModifiedDate":"2021-11-06"},{"lineNumber":626,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":627,"author":{"gitId":"Kangxun"},"content":"  b. Category not specified","lastModifiedDate":"2021-10-26"},{"lineNumber":628,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":629,"author":{"gitId":"Kangxun"},"content":"* _Count is not a non-zero unsigned integer. It cannot be bigger than 2147483647 (i.e., MAX_VALUE)_: \u003cbr\u003e","lastModifiedDate":"2021-11-06"},{"lineNumber":630,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":631,"author":{"gitId":"Kangxun"},"content":"  a. The last argument is not a positive integer \u003cbr\u003e","lastModifiedDate":"2021-11-06"},{"lineNumber":632,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":633,"author":{"gitId":"Kangxun"},"content":"  b. The last argument is bigger than 2147483647 \u003cbr\u003e","lastModifiedDate":"2021-11-06"},{"lineNumber":634,"author":{"gitId":"Kangxun"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":635,"author":{"gitId":"pranav-ganesh"},"content":"### 5.10 Clearing all contacts : `clear`","lastModifiedDate":"2021-11-08"},{"lineNumber":636,"author":{"gitId":"Kangxun"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":637,"author":{"gitId":"houtenteo"},"content":"Clears all contacts from the CMM database.","lastModifiedDate":"2021-10-23"},{"lineNumber":638,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":639,"author":{"gitId":"-"},"content":"Format: `clear`","lastModifiedDate":"2021-10-07"},{"lineNumber":640,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":641,"author":{"gitId":"idgrr"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e:exclamation: ","lastModifiedDate":"2021-11-08"},{"lineNumber":642,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":643,"author":{"gitId":"houtenteo"},"content":"**Caution:**","lastModifiedDate":"2021-11-08"},{"lineNumber":644,"author":{"gitId":"idgrr"},"content":"Clearing is irreversible, please use with caution.","lastModifiedDate":"2021-11-08"},{"lineNumber":645,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":646,"author":{"gitId":"houtenteo"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-10-23"},{"lineNumber":647,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":648,"author":{"gitId":"pranav-ganesh"},"content":"### 5.11 Viewing help : `help`","lastModifiedDate":"2021-11-08"},{"lineNumber":649,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":650,"author":{"gitId":"houtenteo"},"content":"Shows a message explaining how to access the User Guide.","lastModifiedDate":"2021-11-06"},{"lineNumber":651,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":652,"author":{"gitId":"houtenteo"},"content":"![help message](images/helpMessage.png)","lastModifiedDate":"2021-11-06"},{"lineNumber":653,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":654,"author":{"gitId":"houtenteo"},"content":"Format: `help`","lastModifiedDate":"2021-11-06"},{"lineNumber":655,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":656,"author":{"gitId":"pranav-ganesh"},"content":"### 5.12 Exiting the program : `exit`","lastModifiedDate":"2021-11-08"},{"lineNumber":657,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":658,"author":{"gitId":"-"},"content":"Exits the program.","lastModifiedDate":"2020-05-23"},{"lineNumber":659,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":660,"author":{"gitId":"-"},"content":"Format: `exit`","lastModifiedDate":"2020-05-23"},{"lineNumber":661,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":662,"author":{"gitId":"pranav-ganesh"},"content":"### 5.13 Saving the data","lastModifiedDate":"2021-11-08"},{"lineNumber":663,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":664,"author":{"gitId":"idgrr"},"content":"CMM data are saved in the hard disk automatically after any command that changes the data. There is no need to save manually.","lastModifiedDate":"2021-10-01"},{"lineNumber":665,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":666,"author":{"gitId":"pranav-ganesh"},"content":"### 5.14 Importing the data into database","lastModifiedDate":"2021-11-08"},{"lineNumber":667,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":668,"author":{"gitId":"idgrr"},"content":"CMM is able to import Excel files into CMM. The import files have to be in an Excel Csv format (semicolon delimited).","lastModifiedDate":"2021-11-03"},{"lineNumber":669,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":670,"author":{"gitId":"houtenteo"},"content":"**Steps to Import from Excel file:**","lastModifiedDate":"2021-11-11"},{"lineNumber":671,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":672,"author":{"gitId":"idgrr"},"content":"1. Ensure that the Excel file is a CSV file type that is **semicolon delimited**","lastModifiedDate":"2021-11-08"},{"lineNumber":673,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":674,"author":{"gitId":"idgrr"},"content":"   Instructions on how to import to this file type can be found [here](SettingImportFileType.md)","lastModifiedDate":"2021-10-23"},{"lineNumber":675,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":676,"author":{"gitId":"idgrr"},"content":"2. Ensure that the import file is named import.csv under the \"data\" folder found in the same directory as the CMM jar file","lastModifiedDate":"2021-10-23"},{"lineNumber":677,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":678,"author":{"gitId":"idgrr"},"content":"3. Upon CMM application startup, a prompt will popup with 3 options : `Add On Imports`, `Start New Using Import`, `Don\u0027t Import`. The popup will look like the image below:","lastModifiedDate":"2021-11-08"},{"lineNumber":679,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":680,"author":{"gitId":"houtenteo"},"content":"![importPopUpUi](images/importPopUpMessage.png)","lastModifiedDate":"2021-10-23"},{"lineNumber":681,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":682,"author":{"gitId":"houtenteo"},"content":"**Import options:**","lastModifiedDate":"2021-11-11"},{"lineNumber":683,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":684,"author":{"gitId":"houtenteo"},"content":"`Add On Imports`","lastModifiedDate":"2021-10-23"},{"lineNumber":685,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":686,"author":{"gitId":"idgrr"},"content":"- Adds on new imports into existing database","lastModifiedDate":"2021-10-23"},{"lineNumber":687,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":688,"author":{"gitId":"idgrr"},"content":"`Start New Using Import`","lastModifiedDate":"2021-10-23"},{"lineNumber":689,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":690,"author":{"gitId":"idgrr"},"content":"- Exports and reset the current database. CMM will then populate the reset database with new imports","lastModifiedDate":"2021-10-23"},{"lineNumber":691,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":692,"author":{"gitId":"idgrr"},"content":"- Previous database **before import** can be found in a CSV file under the \"data\" folder found in the same directory as the CMM jar file. It will have the following file name : `export[Date HH:MM:SS].csv`","lastModifiedDate":"2021-11-07"},{"lineNumber":693,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":694,"author":{"gitId":"idgrr"},"content":"`Don\u0027t Import`","lastModifiedDate":"2021-10-23"},{"lineNumber":695,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":696,"author":{"gitId":"houtenteo"},"content":"- CMM will not import anything and application will start normally","lastModifiedDate":"2021-11-08"},{"lineNumber":697,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":698,"author":{"gitId":"idgrr"},"content":"- Closing the prompt will also choose this option","lastModifiedDate":"2021-10-23"},{"lineNumber":699,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":700,"author":{"gitId":"idgrr"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e:exclamation:","lastModifiedDate":"2021-11-08"},{"lineNumber":701,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":702,"author":{"gitId":"houtenteo"},"content":"**Caution:**","lastModifiedDate":"2021-11-08"},{"lineNumber":703,"author":{"gitId":"houtenteo"},"content":"Currently, import is **irreversible**. Please double-check before importing. This is especially important when choosing the add-on import option.","lastModifiedDate":"2021-11-08"},{"lineNumber":704,"author":{"gitId":"houtenteo"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-10-23"},{"lineNumber":705,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":706,"author":{"gitId":"houtenteo"},"content":"**Things to note:**","lastModifiedDate":"2021-11-11"},{"lineNumber":707,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":708,"author":{"gitId":"idgrr"},"content":"* CMM will prompt user for imports upon **every** application startup","lastModifiedDate":"2021-11-07"},{"lineNumber":709,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":710,"author":{"gitId":"idgrr"},"content":"* CMM will not import data rows with missing details (Compulsory for data to have `Name`, `Phone`, `Email` filled)","lastModifiedDate":"2021-11-08"},{"lineNumber":711,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":712,"author":{"gitId":"idgrr"},"content":"* CMM will treat two people with the exact `Name`, `Phone`, `Email`  as duplicates","lastModifiedDate":"2021-11-08"},{"lineNumber":713,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":714,"author":{"gitId":"idgrr"},"content":"* CMM will update duplicate imports **only when** `Called` status is true","lastModifiedDate":"2021-11-08"},{"lineNumber":715,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":716,"author":{"gitId":"idgrr"},"content":"* `Interest` column in the csv should be seperated using a comma **within the same cell**","lastModifiedDate":"2021-11-08"},{"lineNumber":717,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":718,"author":{"gitId":"houtenteo"},"content":"* Import is only allowed during application startup. To import after the startup, simply reopen application to get the import prompt","lastModifiedDate":"2021-10-23"},{"lineNumber":719,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":720,"author":{"gitId":"idgrr"},"content":"* Unsuccessful file import will result in an empty database. The previous database can be recovered in the latest export file","lastModifiedDate":"2021-11-07"},{"lineNumber":721,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":722,"author":{"gitId":"houtenteo"},"content":"**Common Issues:**","lastModifiedDate":"2021-11-11"},{"lineNumber":723,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":724,"author":{"gitId":"idgrr"},"content":"* _CSV file not found in data\\import.csv_\u003cbr\u003e","lastModifiedDate":"2021-11-08"},{"lineNumber":725,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":726,"author":{"gitId":"Kangxun"},"content":"    * This could either mean that the file **does not exist** at the specified location or \u003cbr\u003e","lastModifiedDate":"2021-11-07"},{"lineNumber":727,"author":{"gitId":"houtenteo"},"content":"  ","lastModifiedDate":"2021-11-08"},{"lineNumber":728,"author":{"gitId":"idgrr"},"content":"    * The file was **incorrectly named**. File has to be named `import.csv`","lastModifiedDate":"2021-11-03"},{"lineNumber":729,"author":{"gitId":"houtenteo"},"content":"  ","lastModifiedDate":"2021-11-08"},{"lineNumber":730,"author":{"gitId":"idgrr"},"content":"* _Missing/Extra Headers, Please check file_\u003cbr\u003e","lastModifiedDate":"2021-11-08"},{"lineNumber":731,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":732,"author":{"gitId":"Kangxun"},"content":"   * **Files has invalid headers** \u003cbr\u003e","lastModifiedDate":"2021-11-07"},{"lineNumber":733,"author":{"gitId":"houtenteo"},"content":"  ","lastModifiedDate":"2021-11-08"},{"lineNumber":734,"author":{"gitId":"Kangxun"},"content":"        * First row of Excel file is reserved for datatype headers. \u003cbr\u003e","lastModifiedDate":"2021-11-07"},{"lineNumber":735,"author":{"gitId":"houtenteo"},"content":"     ","lastModifiedDate":"2021-11-08"},{"lineNumber":736,"author":{"gitId":"Kangxun"},"content":"        * Headers must include `Name`, `Phone`, `Email`, `Address`, `Gender`, `Age`, `Interest` and `Called` from the left to right, starting from the cell \u0027A1\u0027 \u003cbr\u003e","lastModifiedDate":"2021-11-07"},{"lineNumber":737,"author":{"gitId":"houtenteo"},"content":"     ","lastModifiedDate":"2021-11-08"},{"lineNumber":738,"author":{"gitId":"Kangxun"},"content":"        * Headers are not case-sensitive\u003cbr\u003e","lastModifiedDate":"2021-11-07"},{"lineNumber":739,"author":{"gitId":"houtenteo"},"content":"     ","lastModifiedDate":"2021-11-08"},{"lineNumber":740,"author":{"gitId":"idgrr"},"content":"   * File may have **incorrect CSV type**. Please refer to this [guide](SettingImportFileType.md)","lastModifiedDate":"2021-11-03"},{"lineNumber":741,"author":{"gitId":"idgrr"},"content":"   to correctly format your file.","lastModifiedDate":"2021-11-03"},{"lineNumber":742,"author":{"gitId":"houtenteo"},"content":"  ","lastModifiedDate":"2021-11-08"},{"lineNumber":743,"author":{"gitId":"idgrr"},"content":"* _Wrong header detected,please double check file_\u003cbr\u003e","lastModifiedDate":"2021-11-08"},{"lineNumber":744,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":745,"author":{"gitId":"idgrr"},"content":"    * **Files has invalid headers**. Please refer to Common issue `Missing/Extra Headers, Please check file` to resolve","lastModifiedDate":"2021-11-03"},{"lineNumber":746,"author":{"gitId":"houtenteo"},"content":"  ","lastModifiedDate":"2021-11-08"},{"lineNumber":747,"author":{"gitId":"Kangxun"},"content":"* Data not imported despite **correct import file placement, naming AND headers** \u003cbr\u003e","lastModifiedDate":"2021-11-07"},{"lineNumber":748,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":749,"author":{"gitId":"idgrr"},"content":"    * File may not be in the correct CSV type. Please refer to this [guide](SettingImportFileType.md)","lastModifiedDate":"2021-11-03"},{"lineNumber":750,"author":{"gitId":"idgrr"},"content":"         to correctly format your file.","lastModifiedDate":"2021-10-06"},{"lineNumber":751,"author":{"gitId":"houtenteo"},"content":"  ","lastModifiedDate":"2021-11-08"},{"lineNumber":752,"author":{"gitId":"Kangxun"},"content":"* Unable to understand why a specific row was not able to be imported \u003cbr\u003e","lastModifiedDate":"2021-11-07"},{"lineNumber":753,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":754,"author":{"gitId":"idgrr"},"content":"    * Row could either be duplicate or there was an error reading the row","lastModifiedDate":"2021-11-03"},{"lineNumber":755,"author":{"gitId":"houtenteo"},"content":"  ","lastModifiedDate":"2021-11-08"},{"lineNumber":756,"author":{"gitId":"idgrr"},"content":"    * Detailed reasons for any import error can be found in the logs of the CMM","lastModifiedDate":"2021-11-03"},{"lineNumber":757,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":758,"author":{"gitId":"idgrr"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: ","lastModifiedDate":"2021-11-08"},{"lineNumber":759,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":760,"author":{"gitId":"houtenteo"},"content":"**Tip:**","lastModifiedDate":"2021-11-08"},{"lineNumber":761,"author":{"gitId":"idgrr"},"content":"An example file import can be downloaded [here](https://github.com/AY2122S1-CS2103T-T13-4/tp/releases/tag/Test_Files)","lastModifiedDate":"2021-11-08"},{"lineNumber":762,"author":{"gitId":"idgrr"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-11-08"},{"lineNumber":763,"author":{"gitId":"idgrr"},"content":"    ","lastModifiedDate":"2021-10-21"},{"lineNumber":764,"author":{"gitId":"pranav-ganesh"},"content":"### 5.15 Exporting state of database","lastModifiedDate":"2021-11-08"},{"lineNumber":765,"author":{"gitId":"loose-bus-change"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":766,"author":{"gitId":"houtenteo"},"content":"CMM is able to export the current database as semicolon delimited CSV files. As such, there is no need for you to ensure that the formatting is right for furture use.","lastModifiedDate":"2021-10-23"},{"lineNumber":767,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":768,"author":{"gitId":"houtenteo"},"content":"**Steps to Export data as CSV file:**","lastModifiedDate":"2021-11-11"},{"lineNumber":769,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":770,"author":{"gitId":"Kangxun"},"content":"1. Closing the application in any way would prompt user to export the current database \u003cbr\u003e","lastModifiedDate":"2021-11-07"},{"lineNumber":771,"author":{"gitId":"houtenteo"},"content":"![exportPopup](images/exportPopup.png)","lastModifiedDate":"2021-10-23"},{"lineNumber":772,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":773,"author":{"gitId":"idgrr"},"content":"2. The CMM will export the database to the data file location","lastModifiedDate":"2021-10-21"},{"lineNumber":774,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":775,"author":{"gitId":"houtenteo"},"content":"3. Export file will have the following file name : `export[Date HH:MM:SS].csv` where date and time will follow your system settings ","lastModifiedDate":"2021-10-23"},{"lineNumber":776,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":777,"author":{"gitId":"houtenteo"},"content":"**How to find the exported file:**","lastModifiedDate":"2021-11-11"},{"lineNumber":778,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-11-11"},{"lineNumber":779,"author":{"gitId":"houtenteo"},"content":"1. Go to the directory that the CMM jar file is stored in and click on the \u0027data\u0027 folder \u003cbr\u003e","lastModifiedDate":"2021-11-11"},{"lineNumber":780,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-11-11"},{"lineNumber":781,"author":{"gitId":"houtenteo"},"content":"    ![findingExport1](images/FindingExportFile1.png)","lastModifiedDate":"2021-11-11"},{"lineNumber":782,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-11-11"},{"lineNumber":783,"author":{"gitId":"houtenteo"},"content":"2. You can find the exported CSV file here \u003cbr\u003e","lastModifiedDate":"2021-11-11"},{"lineNumber":784,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":785,"author":{"gitId":"houtenteo"},"content":"    ![findingExport2](images/FindingExportFile2.png)","lastModifiedDate":"2021-11-11"},{"lineNumber":786,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":787,"author":{"gitId":"houtenteo"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2021-11-11"},{"lineNumber":788,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-11-11"},{"lineNumber":789,"author":{"gitId":"pranav-ganesh"},"content":"### 5.16 Editing the data file (JSON)","lastModifiedDate":"2021-11-08"},{"lineNumber":790,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":791,"author":{"gitId":"-"},"content":"AddressBook data are saved as a JSON file `[JAR file location]/data/addressbook.json`. Advanced users are welcome to update data directly by editing that data file.","lastModifiedDate":"2021-02-04"},{"lineNumber":792,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":793,"author":{"gitId":"idgrr"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e:exclamation: ","lastModifiedDate":"2021-11-08"},{"lineNumber":794,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":795,"author":{"gitId":"idgrr"},"content":"**Caution:**\u003cbr\u003e","lastModifiedDate":"2021-11-08"},{"lineNumber":796,"author":{"gitId":"-"},"content":"If your changes to the data file makes its format invalid, AddressBook will discard all data and start with an empty data file at the next run.","lastModifiedDate":"2021-02-04"},{"lineNumber":797,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-02-04"},{"lineNumber":798,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":799,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":800,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":801,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":802,"author":{"gitId":"pranav-ganesh"},"content":"## 6. FAQ","lastModifiedDate":"2021-11-08"},{"lineNumber":803,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":804,"author":{"gitId":"-"},"content":"**Q**: How do I transfer my data to another Computer?\u003cbr\u003e","lastModifiedDate":"2021-10-07"},{"lineNumber":805,"author":{"gitId":"Kangxun"},"content":"**A**: Install the app in the other computer and overwrite the empty data file it creates with the file that contains the data of your previous AddressBook home folder. Data found can be found at `[JAR file location]/data/addressbook.json`.","lastModifiedDate":"2021-10-07"},{"lineNumber":806,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":807,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":808,"author":{"gitId":"pranav-ganesh"},"content":"## 7. Command summary","lastModifiedDate":"2021-11-08"},{"lineNumber":809,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":810,"author":{"gitId":"-"},"content":"Action | Format, Examples","lastModifiedDate":"2020-05-23"},{"lineNumber":811,"author":{"gitId":"-"},"content":"--------|------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":812,"author":{"gitId":"Kangxun"},"content":"**Add** | `add n/NAME p/PHONE_NUMBER e/EMAIL [a/ADDRESS] [g/GENDER] [age/AGE] [i/INTEREST]…​` \u003cbr\u003e e.g., `add n/Labuschagne Ho p/22224444 e/labuschagne@example.com a/my house g/F age/95 i/Sleeping`","lastModifiedDate":"2021-11-08"},{"lineNumber":813,"author":{"gitId":"-"},"content":"**List** | `list`","lastModifiedDate":"2020-05-23"},{"lineNumber":814,"author":{"gitId":"houtenteo"},"content":"**Called** | `called INDEX` \u003cbr\u003e e.g., `called 2`","lastModifiedDate":"2021-11-06"},{"lineNumber":815,"author":{"gitId":"pranav-ganesh"},"content":"**Edit** | `edit INDEX [n/NAME] [p/PHONE] [e/EMAIL] [a/ADDRESS] [g/GENDER] [age/AGE] [c/CALLED] [i/(OPTIONAL INTERESTSLIST INDEX) INTEREST]... [i/(INTERESTSLIST INDEX) remove]... [i/INTEREST]...` \u003cbr/\u003e e.g., `edit 1 n/Bob p/68889444 e/email@email.com a/his house g/M age/33 i/Eating i/(2) Swimming`","lastModifiedDate":"2021-11-08"},{"lineNumber":816,"author":{"gitId":"houtenteo"},"content":"**Delete** | `delete INDEX`\u003cbr\u003e e.g., `delete 3`","lastModifiedDate":"2021-11-06"},{"lineNumber":817,"author":{"gitId":"houtenteo"},"content":"**FindAny** | `findAny [n/NAME…​] [p/PHONE…​] [e/EMAIL…​] [a/ADDRESS…​] [g/GENDER…​] [age/AGE…​] [d/DONE…​] [i/INTEREST…​]`\u003cbr\u003e e.g., `findAny n/alex g/m`","lastModifiedDate":"2021-11-06"},{"lineNumber":818,"author":{"gitId":"houtenteo"},"content":"**FindAll** | `findAll [n/NAME…​] [p/PHONE…​] [e/EMAIL…​] [a/ADDRESS…​] [g/GENDER…​] [age/AGE…​] [d/DONE…​] [i/INTEREST…​]`\u003cbr\u003e e.g., `findAll n/alex g/m`","lastModifiedDate":"2021-11-06"},{"lineNumber":819,"author":{"gitId":"houtenteo"},"content":"**Display** | `display INDEX` \u003cbr\u003e e.g., `display 4`","lastModifiedDate":"2021-11-06"},{"lineNumber":820,"author":{"gitId":"houtenteo"},"content":"**Filter** | `filter CATEGORY [COUNT]` \u003cbr\u003e e.g., `filter gender 5`","lastModifiedDate":"2021-11-06"},{"lineNumber":821,"author":{"gitId":"Kangxun"},"content":"**Clear** | `clear`","lastModifiedDate":"2021-10-07"},{"lineNumber":822,"author":{"gitId":"houtenteo"},"content":"**Exit** | `exit`","lastModifiedDate":"2021-09-18"},{"lineNumber":823,"author":{"gitId":"-"},"content":"**Help** | `help`","lastModifiedDate":"2021-10-07"},{"lineNumber":824,"author":{"gitId":"Kangxun"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":825,"author":{"gitId":"Kangxun"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":826,"author":{"gitId":"Kangxun"},"content":"Thank you for reading the User Guide. Hope you have a pleasant experience with CallMeMaybe.","lastModifiedDate":"2021-10-07"},{"lineNumber":827,"author":{"gitId":"loose-bus-change"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":828,"author":{"gitId":"loose-bus-change"},"content":"","lastModifiedDate":"2021-10-21"}],"authorContributionMap":{"houtenteo":411,"idgrr":113,"loose-bus-change":27,"pranav-ganesh":47,"-":114,"Kangxun":116}},{"path":"docs/_sass/minima/_base.scss","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"html {","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  font-size: $base-font-size;","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Reset some basic elements","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"body, h1, h2, h3, h4, h5, h6,","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"p, blockquote, pre, hr,","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"dl, dd, ol, ul, figure {","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"  margin: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"  padding: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * Basic styling","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"body {","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"  font: $base-font-weight #{$base-font-size}/#{$base-line-height} $base-font-family;","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"  color: $text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"  background-color: $background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"  -webkit-text-size-adjust: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"  -webkit-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     -moz-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"       -o-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"          font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"  font-kerning: normal;","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"  display: flex;","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"  min-height: 100vh;","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"  flex-direction: column;","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"  overflow-wrap: break-word;","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":" * Set `margin-bottom` to maintain vertical rhythm","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"h1, h2, h3, h4, h5, h6,","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"p, blockquote, pre,","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"ul, ol, dl, figure,","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"%vertical-rhythm {","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"hr {","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"  margin-top: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":" * `main` element","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"main {","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"  display: block; /* Default value of `display` of `main` element is \u0027inline\u0027 in IE 11. */","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":" * Images","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"img {","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"  max-width: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"  vertical-align: middle;","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":" * Figures","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"figure \u003e img {","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"  display: block;","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"figcaption {","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"  font-size: $small-font-size;","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":" * Lists","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"ul, ol {","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"  margin-left: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"li {","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"  \u003e ul,","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"  \u003e ol {","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    margin-bottom: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":" * Headings","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"h1, h2, h3, h4, h5, h6 {","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"  font-weight: $base-font-weight;","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":" * Links","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"a {","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"  color: $link-base-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"  text-decoration: none;","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"  \u0026:visited {","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    color: $link-visited-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"  \u0026:hover {","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    color: $text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    text-decoration: underline;","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"  .social-media-list \u0026:hover {","lastModifiedDate":"2020-05-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    text-decoration: none;","lastModifiedDate":"2020-05-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    .username {","lastModifiedDate":"2020-05-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"      text-decoration: underline;","lastModifiedDate":"2020-05-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":" * Blockquotes","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"blockquote {","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"  color: $brand-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":142,"author":{"gitId":"-"},"content":"  border-left: 4px solid $brand-color-light;","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"  padding-left: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"-"},"content":"  @include relative-font-size(1.125);","lastModifiedDate":"2020-05-23"},{"lineNumber":145,"author":{"gitId":"-"},"content":"  font-style: italic;","lastModifiedDate":"2020-05-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"  \u003e :last-child {","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    margin-bottom: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"  i, em {","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    font-style: normal;","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":" * Code formatting","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"pre,","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"code {","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"  font-family: $code-font-family;","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"  font-size: 0.9375em;","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"  border: 1px solid $brand-color-light;","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"  border-radius: 3px;","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"  background-color: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"code {","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"  padding: 1px 5px;","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":174,"author":{"gitId":"-"},"content":"pre {","lastModifiedDate":"2020-05-23"},{"lineNumber":175,"author":{"gitId":"-"},"content":"  padding: 8px 12px;","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"  overflow-x: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":178,"author":{"gitId":"-"},"content":"  \u003e code {","lastModifiedDate":"2020-05-23"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    border: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    padding-right: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    padding-left: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":".highlight {","lastModifiedDate":"2020-05-23"},{"lineNumber":186,"author":{"gitId":"-"},"content":"  border-radius: 3px;","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"  background: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":188,"author":{"gitId":"-"},"content":"  @extend %vertical-rhythm;","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"  .highlighter-rouge \u0026 {","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    background: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":" * Wrapper","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"-"},"content":".wrapper {","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"  max-width: calc(#{$content-width} - (#{$spacing-unit}));","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"  margin-right: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"  margin-left: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":204,"author":{"gitId":"-"},"content":"  padding-right: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":205,"author":{"gitId":"-"},"content":"  padding-left: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":206,"author":{"gitId":"-"},"content":"  @extend %clearfix;","lastModifiedDate":"2020-05-23"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":208,"author":{"gitId":"-"},"content":"  @media screen and (min-width: $on-large) {","lastModifiedDate":"2020-05-23"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    max-width: calc(#{$content-width} - (#{$spacing-unit} * 2));","lastModifiedDate":"2020-05-23"},{"lineNumber":210,"author":{"gitId":"-"},"content":"    padding-right: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    padding-left: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":212,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":213,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":217,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":" * Clearfix","lastModifiedDate":"2020-05-23"},{"lineNumber":219,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":220,"author":{"gitId":"-"},"content":"%clearfix:after {","lastModifiedDate":"2020-05-23"},{"lineNumber":221,"author":{"gitId":"-"},"content":"  content: \"\";","lastModifiedDate":"2020-05-23"},{"lineNumber":222,"author":{"gitId":"-"},"content":"  display: table;","lastModifiedDate":"2020-05-23"},{"lineNumber":223,"author":{"gitId":"-"},"content":"  clear: both;","lastModifiedDate":"2020-05-23"},{"lineNumber":224,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":229,"author":{"gitId":"-"},"content":" * Icons","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":".orange {","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"-"},"content":"  color: #f66a0a;","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":".grey {","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":"  color: #828282;","lastModifiedDate":"2020-05-23"},{"lineNumber":238,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":" * Tables","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"-"},"content":"table {","lastModifiedDate":"2020-05-23"},{"lineNumber":244,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":245,"author":{"gitId":"-"},"content":"  width: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":246,"author":{"gitId":"-"},"content":"  text-align: $table-text-align;","lastModifiedDate":"2020-05-23"},{"lineNumber":247,"author":{"gitId":"-"},"content":"  color: $table-text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":248,"author":{"gitId":"-"},"content":"  border-collapse: collapse;","lastModifiedDate":"2020-05-23"},{"lineNumber":249,"author":{"gitId":"-"},"content":"  border: 1px solid $table-border-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":250,"author":{"gitId":"-"},"content":"  tr {","lastModifiedDate":"2020-05-23"},{"lineNumber":251,"author":{"gitId":"-"},"content":"    \u0026:nth-child(even) {","lastModifiedDate":"2020-05-23"},{"lineNumber":252,"author":{"gitId":"-"},"content":"      background-color: $table-zebra-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":253,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":254,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":255,"author":{"gitId":"-"},"content":"  th, td {","lastModifiedDate":"2020-05-23"},{"lineNumber":256,"author":{"gitId":"-"},"content":"    padding: ($spacing-unit / 3) ($spacing-unit / 2);","lastModifiedDate":"2020-05-23"},{"lineNumber":257,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":258,"author":{"gitId":"-"},"content":"  th {","lastModifiedDate":"2020-05-23"},{"lineNumber":259,"author":{"gitId":"-"},"content":"    background-color: $table-header-bg-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":260,"author":{"gitId":"-"},"content":"    border: 1px solid $table-header-border;","lastModifiedDate":"2020-05-23"},{"lineNumber":261,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":262,"author":{"gitId":"-"},"content":"  td {","lastModifiedDate":"2020-05-23"},{"lineNumber":263,"author":{"gitId":"-"},"content":"    border: 1px solid $table-border-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":264,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":265,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":266,"author":{"gitId":"-"},"content":"  @include media-query($on-laptop) {","lastModifiedDate":"2020-05-23"},{"lineNumber":267,"author":{"gitId":"-"},"content":"    display: block;","lastModifiedDate":"2020-05-23"},{"lineNumber":268,"author":{"gitId":"-"},"content":"    overflow-x: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":269,"author":{"gitId":"-"},"content":"    -webkit-overflow-scrolling: touch;","lastModifiedDate":"2020-05-23"},{"lineNumber":270,"author":{"gitId":"-"},"content":"            -ms-overflow-style: -ms-autohiding-scrollbar;","lastModifiedDate":"2020-05-23"},{"lineNumber":271,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":272,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":273,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-01-11"},{"lineNumber":274,"author":{"gitId":"-"},"content":"@media print {","lastModifiedDate":"2021-01-12"},{"lineNumber":275,"author":{"gitId":"-"},"content":"  /**","lastModifiedDate":"2021-01-11"},{"lineNumber":276,"author":{"gitId":"-"},"content":"  * Prevents page break from cutting through content when printing","lastModifiedDate":"2021-01-12"},{"lineNumber":277,"author":{"gitId":"-"},"content":"  */","lastModifiedDate":"2021-01-11"},{"lineNumber":278,"author":{"gitId":"-"},"content":"  body {","lastModifiedDate":"2021-01-11"},{"lineNumber":279,"author":{"gitId":"-"},"content":"    display: block;","lastModifiedDate":"2021-01-11"},{"lineNumber":280,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-11"},{"lineNumber":281,"author":{"gitId":"-"},"content":"  /**","lastModifiedDate":"2021-01-12"},{"lineNumber":282,"author":{"gitId":"-"},"content":"  * Replaces the top navigation menu with the project name when printing","lastModifiedDate":"2021-01-12"},{"lineNumber":283,"author":{"gitId":"-"},"content":"  */","lastModifiedDate":"2021-01-12"},{"lineNumber":284,"author":{"gitId":"-"},"content":"  .site-header .wrapper {","lastModifiedDate":"2021-01-12"},{"lineNumber":285,"author":{"gitId":"-"},"content":"    display: none;","lastModifiedDate":"2021-01-12"},{"lineNumber":286,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-12"},{"lineNumber":287,"author":{"gitId":"-"},"content":"  .site-header {","lastModifiedDate":"2021-01-12"},{"lineNumber":288,"author":{"gitId":"-"},"content":"    text-align: center;","lastModifiedDate":"2021-01-12"},{"lineNumber":289,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-12"},{"lineNumber":290,"author":{"gitId":"-"},"content":"  .site-header:before {","lastModifiedDate":"2021-01-12"},{"lineNumber":291,"author":{"gitId":"houtenteo"},"content":"    content: \"CallMeMaybe\";","lastModifiedDate":"2021-11-06"},{"lineNumber":292,"author":{"gitId":"-"},"content":"    font-size: 32px;","lastModifiedDate":"2021-01-12"},{"lineNumber":293,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-11"},{"lineNumber":294,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-01-12"},{"lineNumber":295,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-01-12"}],"authorContributionMap":{"houtenteo":1,"-":294}},{"path":"docs/diagrams/AddActivityDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"houtenteo"},"content":"@startuml","lastModifiedDate":"2021-11-03"},{"lineNumber":2,"author":{"gitId":"houtenteo"},"content":"\u0027https://plantuml.com/activity-diagram-beta","lastModifiedDate":"2021-11-03"},{"lineNumber":3,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":4,"author":{"gitId":"houtenteo"},"content":"start","lastModifiedDate":"2021-11-03"},{"lineNumber":5,"author":{"gitId":"houtenteo"},"content":":User enters add command;","lastModifiedDate":"2021-11-03"},{"lineNumber":6,"author":{"gitId":"houtenteo"},"content":":AddressBookParser parses the command;","lastModifiedDate":"2021-11-03"},{"lineNumber":7,"author":{"gitId":"houtenteo"},"content":":AddCommandParser parses the arguments provided;","lastModifiedDate":"2021-11-03"},{"lineNumber":8,"author":{"gitId":"houtenteo"},"content":"if () then ([command is valid])","lastModifiedDate":"2021-11-04"},{"lineNumber":9,"author":{"gitId":"houtenteo"},"content":"  :new contact with the specified fields is created;","lastModifiedDate":"2021-11-03"},{"lineNumber":10,"author":{"gitId":"houtenteo"},"content":"  :new AddCommand object is created;","lastModifiedDate":"2021-11-03"},{"lineNumber":11,"author":{"gitId":"houtenteo"},"content":"  if() then ([contact already exists])","lastModifiedDate":"2021-11-04"},{"lineNumber":12,"author":{"gitId":"houtenteo"},"content":"  :outputs error message;","lastModifiedDate":"2021-11-06"},{"lineNumber":13,"author":{"gitId":"houtenteo"},"content":"  else ([contact does not exist])","lastModifiedDate":"2021-11-04"},{"lineNumber":14,"author":{"gitId":"houtenteo"},"content":"  :contact is added into the address book;","lastModifiedDate":"2021-11-03"},{"lineNumber":15,"author":{"gitId":"houtenteo"},"content":"  endif","lastModifiedDate":"2021-11-03"},{"lineNumber":16,"author":{"gitId":"houtenteo"},"content":"else ([command is invalid])","lastModifiedDate":"2021-11-04"},{"lineNumber":17,"author":{"gitId":"houtenteo"},"content":"  :outputs error message;","lastModifiedDate":"2021-11-06"},{"lineNumber":18,"author":{"gitId":"houtenteo"},"content":"endif","lastModifiedDate":"2021-11-03"},{"lineNumber":19,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":20,"author":{"gitId":"houtenteo"},"content":"stop","lastModifiedDate":"2021-11-03"},{"lineNumber":21,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":22,"author":{"gitId":"houtenteo"},"content":"@enduml","lastModifiedDate":"2021-11-03"}],"authorContributionMap":{"houtenteo":22}},{"path":"docs/diagrams/AddSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"houtenteo"},"content":"@startuml","lastModifiedDate":"2021-10-18"},{"lineNumber":2,"author":{"gitId":"houtenteo"},"content":"!include style.puml","lastModifiedDate":"2021-10-18"},{"lineNumber":3,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":4,"author":{"gitId":"houtenteo"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2021-10-18"},{"lineNumber":5,"author":{"gitId":"houtenteo"},"content":"participant \": LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2021-11-05"},{"lineNumber":6,"author":{"gitId":"houtenteo"},"content":"participant \": AddressBookParser\" as AddressBookParser LOGIC_COLOR","lastModifiedDate":"2021-11-05"},{"lineNumber":7,"author":{"gitId":"houtenteo"},"content":"participant \": AddCommandParser\" as AddCommandParser LOGIC_COLOR","lastModifiedDate":"2021-11-05"},{"lineNumber":8,"author":{"gitId":"houtenteo"},"content":"participant \"a:AddCommand\" as AddCommand LOGIC_COLOR","lastModifiedDate":"2021-10-18"},{"lineNumber":9,"author":{"gitId":"houtenteo"},"content":"participant \": CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2021-11-05"},{"lineNumber":10,"author":{"gitId":"houtenteo"},"content":"end box","lastModifiedDate":"2021-10-18"},{"lineNumber":11,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":12,"author":{"gitId":"houtenteo"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2021-10-18"},{"lineNumber":13,"author":{"gitId":"houtenteo"},"content":"participant \": Model\" as Model MODEL_COLOR","lastModifiedDate":"2021-11-05"},{"lineNumber":14,"author":{"gitId":"houtenteo"},"content":"participant \"p:Person\" as Person MODEL_COLOR","lastModifiedDate":"2021-11-03"},{"lineNumber":15,"author":{"gitId":"houtenteo"},"content":"end box","lastModifiedDate":"2021-10-18"},{"lineNumber":16,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":17,"author":{"gitId":"houtenteo"},"content":"-\u003e LogicManager : execute(add ...)","lastModifiedDate":"2021-11-03"},{"lineNumber":18,"author":{"gitId":"houtenteo"},"content":"activate LogicManager","lastModifiedDate":"2021-10-18"},{"lineNumber":19,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":20,"author":{"gitId":"houtenteo"},"content":"LogicManager -\u003e AddressBookParser : parseCommand(add ...)","lastModifiedDate":"2021-11-03"},{"lineNumber":21,"author":{"gitId":"houtenteo"},"content":"activate AddressBookParser","lastModifiedDate":"2021-10-18"},{"lineNumber":22,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":23,"author":{"gitId":"houtenteo"},"content":"create AddCommandParser","lastModifiedDate":"2021-10-18"},{"lineNumber":24,"author":{"gitId":"houtenteo"},"content":"AddressBookParser -\u003e AddCommandParser","lastModifiedDate":"2021-10-18"},{"lineNumber":25,"author":{"gitId":"houtenteo"},"content":"activate AddCommandParser","lastModifiedDate":"2021-10-18"},{"lineNumber":26,"author":{"gitId":"houtenteo"},"content":"return","lastModifiedDate":"2021-10-18"},{"lineNumber":27,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":28,"author":{"gitId":"houtenteo"},"content":"AddressBookParser -\u003e AddCommandParser : parse(...)","lastModifiedDate":"2021-11-03"},{"lineNumber":29,"author":{"gitId":"houtenteo"},"content":"activate AddCommandParser","lastModifiedDate":"2021-10-18"},{"lineNumber":30,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":31,"author":{"gitId":"houtenteo"},"content":"create Person","lastModifiedDate":"2021-11-03"},{"lineNumber":32,"author":{"gitId":"houtenteo"},"content":"AddCommandParser -\u003e Person : new Person(\"Bob\", \"email@email.com\", \"999\")","lastModifiedDate":"2021-11-03"},{"lineNumber":33,"author":{"gitId":"houtenteo"},"content":"activate Person","lastModifiedDate":"2021-11-03"},{"lineNumber":34,"author":{"gitId":"houtenteo"},"content":"return p","lastModifiedDate":"2021-11-03"},{"lineNumber":35,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":36,"author":{"gitId":"houtenteo"},"content":"create AddCommand","lastModifiedDate":"2021-10-18"},{"lineNumber":37,"author":{"gitId":"houtenteo"},"content":"AddCommandParser -\u003e AddCommand : new AddCommand(p)","lastModifiedDate":"2021-11-03"},{"lineNumber":38,"author":{"gitId":"houtenteo"},"content":"activate AddCommand","lastModifiedDate":"2021-10-18"},{"lineNumber":39,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":40,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":41,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":42,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":43,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":44,"author":{"gitId":"houtenteo"},"content":"return a","lastModifiedDate":"2021-10-18"},{"lineNumber":45,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":46,"author":{"gitId":"houtenteo"},"content":"AddCommandParser --\u003e AddressBookParser : d","lastModifiedDate":"2021-10-18"},{"lineNumber":47,"author":{"gitId":"houtenteo"},"content":"deactivate AddCommandParser","lastModifiedDate":"2021-10-18"},{"lineNumber":48,"author":{"gitId":"houtenteo"},"content":"\u0027Hidden arrow to position the destroy marker below the end of the activation bar.","lastModifiedDate":"2021-10-18"},{"lineNumber":49,"author":{"gitId":"houtenteo"},"content":"AddCommandParser -[hidden]-\u003e AddressBookParser","lastModifiedDate":"2021-10-18"},{"lineNumber":50,"author":{"gitId":"houtenteo"},"content":"destroy AddCommandParser","lastModifiedDate":"2021-10-18"},{"lineNumber":51,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":52,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":53,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":54,"author":{"gitId":"houtenteo"},"content":"LogicManager -\u003e AddCommand : execute()","lastModifiedDate":"2021-10-18"},{"lineNumber":55,"author":{"gitId":"houtenteo"},"content":"activate AddCommand","lastModifiedDate":"2021-10-18"},{"lineNumber":56,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":57,"author":{"gitId":"houtenteo"},"content":"AddCommand -\u003e Model : addPerson(p)","lastModifiedDate":"2021-10-18"},{"lineNumber":58,"author":{"gitId":"houtenteo"},"content":"activate Model","lastModifiedDate":"2021-10-18"},{"lineNumber":59,"author":{"gitId":"houtenteo"},"content":"return","lastModifiedDate":"2021-10-18"},{"lineNumber":60,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":61,"author":{"gitId":"houtenteo"},"content":"create CommandResult","lastModifiedDate":"2021-10-18"},{"lineNumber":62,"author":{"gitId":"houtenteo"},"content":"AddCommand -\u003e CommandResult","lastModifiedDate":"2021-10-18"},{"lineNumber":63,"author":{"gitId":"houtenteo"},"content":"activate CommandResult","lastModifiedDate":"2021-10-18"},{"lineNumber":64,"author":{"gitId":"houtenteo"},"content":"return","lastModifiedDate":"2021-10-18"},{"lineNumber":65,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":66,"author":{"gitId":"houtenteo"},"content":"return result","lastModifiedDate":"2021-10-18"},{"lineNumber":67,"author":{"gitId":"houtenteo"},"content":"@enduml","lastModifiedDate":"2021-10-18"}],"authorContributionMap":{"houtenteo":67}},{"path":"docs/diagrams/BetterModelClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"AddressBook *-right-\u003e \"1\" UniquePersonList","lastModifiedDate":"2019-07-30"},{"lineNumber":8,"author":{"gitId":"houtenteo"},"content":"AddressBook *-right-\u003e \"1\" UniqueInterestList","lastModifiedDate":"2021-10-20"},{"lineNumber":9,"author":{"gitId":"houtenteo"},"content":"UniqueInterestList -[hidden]down- UniquePersonList","lastModifiedDate":"2021-10-20"},{"lineNumber":10,"author":{"gitId":"houtenteo"},"content":"UniqueInterestList -[hidden]down- UniquePersonList","lastModifiedDate":"2021-10-20"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"houtenteo"},"content":"UniqueInterestList *-right-\u003e \"*\" Interest","lastModifiedDate":"2021-10-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"UniquePersonList -right-\u003e Person","lastModifiedDate":"2021-07-31"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"houtenteo"},"content":"Person -right-\u003e InterestsList","lastModifiedDate":"2021-10-20"},{"lineNumber":16,"author":{"gitId":"houtenteo"},"content":"InterestsList -up-\u003e \"*\" Interest","lastModifiedDate":"2021-10-20"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"Person *--\u003e Name","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Person *--\u003e Phone","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"Person *--\u003e Email","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"houtenteo"},"content":"Person *--\u003e isCalled","lastModifiedDate":"2021-11-06"},{"lineNumber":22,"author":{"gitId":"-"},"content":"Person *--\u003e Address","lastModifiedDate":"2019-07-03"},{"lineNumber":23,"author":{"gitId":"houtenteo"},"content":"Person *--\u003e Gender","lastModifiedDate":"2021-10-20"},{"lineNumber":24,"author":{"gitId":"houtenteo"},"content":"Person *--\u003e Age","lastModifiedDate":"2021-10-20"},{"lineNumber":25,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"houtenteo":10,"-":16}},{"path":"docs/diagrams/ComparatorClasses.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Kangxun"},"content":"@startuml","lastModifiedDate":"2021-10-26"},{"lineNumber":2,"author":{"gitId":"Kangxun"},"content":"!include style.puml","lastModifiedDate":"2021-10-26"},{"lineNumber":3,"author":{"gitId":"Kangxun"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2021-10-26"},{"lineNumber":4,"author":{"gitId":"Kangxun"},"content":"skinparam arrowColor LOGIC_COLOR_T4","lastModifiedDate":"2021-10-26"},{"lineNumber":5,"author":{"gitId":"Kangxun"},"content":"skinparam classBackgroundColor LOGIC_COLOR","lastModifiedDate":"2021-10-26"},{"lineNumber":6,"author":{"gitId":"Kangxun"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":7,"author":{"gitId":"Kangxun"},"content":"package Model{","lastModifiedDate":"2021-10-26"},{"lineNumber":8,"author":{"gitId":"Kangxun"},"content":"Class Person MODEL_COLOR","lastModifiedDate":"2021-10-26"},{"lineNumber":9,"author":{"gitId":"Kangxun"},"content":"}","lastModifiedDate":"2021-10-26"},{"lineNumber":10,"author":{"gitId":"Kangxun"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":11,"author":{"gitId":"Kangxun"},"content":"package \"Comparator classes\"{","lastModifiedDate":"2021-10-26"},{"lineNumber":12,"author":{"gitId":"Kangxun"},"content":"Interface Comparator \u003c\u003cInterface\u003e\u003e","lastModifiedDate":"2021-10-26"},{"lineNumber":13,"author":{"gitId":"Kangxun"},"content":"Class PersonComparator","lastModifiedDate":"2021-10-26"},{"lineNumber":14,"author":{"gitId":"Kangxun"},"content":"Class XYZComparator","lastModifiedDate":"2021-10-26"},{"lineNumber":15,"author":{"gitId":"Kangxun"},"content":"}","lastModifiedDate":"2021-10-26"},{"lineNumber":16,"author":{"gitId":"Kangxun"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":17,"author":{"gitId":"Kangxun"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2021-10-26"},{"lineNumber":18,"author":{"gitId":"Kangxun"},"content":"HiddenOutside ..\u003e PersonComparator","lastModifiedDate":"2021-10-26"},{"lineNumber":19,"author":{"gitId":"Kangxun"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":20,"author":{"gitId":"Kangxun"},"content":"PersonComparator .down.\u003e XYZComparator: creates \u003e","lastModifiedDate":"2021-10-26"},{"lineNumber":21,"author":{"gitId":"Kangxun"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":22,"author":{"gitId":"Kangxun"},"content":"XYZComparator .right.\u003e Person : compares \u003e","lastModifiedDate":"2021-10-26"},{"lineNumber":23,"author":{"gitId":"Kangxun"},"content":"XYZComparator .up.|\u003e Comparator","lastModifiedDate":"2021-10-26"},{"lineNumber":24,"author":{"gitId":"Kangxun"},"content":"@enduml","lastModifiedDate":"2021-10-26"}],"authorContributionMap":{"Kangxun":24}},{"path":"docs/diagrams/DisplayActivityDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"loose-bus-change"},"content":"@startuml","lastModifiedDate":"2021-10-28"},{"lineNumber":2,"author":{"gitId":"loose-bus-change"},"content":"start","lastModifiedDate":"2021-10-28"},{"lineNumber":3,"author":{"gitId":"loose-bus-change"},"content":":User executes display command;","lastModifiedDate":"2021-10-28"},{"lineNumber":4,"author":{"gitId":"loose-bus-change"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":5,"author":{"gitId":"loose-bus-change"},"content":"\u0027Since the beta syntax does not support placing the condition outside the","lastModifiedDate":"2021-10-28"},{"lineNumber":6,"author":{"gitId":"loose-bus-change"},"content":"\u0027diamond we place it as the true branch instead.","lastModifiedDate":"2021-10-28"},{"lineNumber":7,"author":{"gitId":"loose-bus-change"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":8,"author":{"gitId":"loose-bus-change"},"content":":AddressBookParser parses the command;","lastModifiedDate":"2021-10-28"},{"lineNumber":9,"author":{"gitId":"loose-bus-change"},"content":":DisplayCommandParser creates a new DisplayCommand;","lastModifiedDate":"2021-10-28"},{"lineNumber":10,"author":{"gitId":"loose-bus-change"},"content":"if () then ([command is valid])","lastModifiedDate":"2021-11-08"},{"lineNumber":11,"author":{"gitId":"loose-bus-change"},"content":"    : LogicManager executes the DisplayCommand and","lastModifiedDate":"2021-10-28"},{"lineNumber":12,"author":{"gitId":"loose-bus-change"},"content":"                  obtains index of contact to be displayed;","lastModifiedDate":"2021-11-08"},{"lineNumber":13,"author":{"gitId":"loose-bus-change"},"content":"    : UiManager communicates with MainWindow;","lastModifiedDate":"2021-10-28"},{"lineNumber":14,"author":{"gitId":"loose-bus-change"},"content":"        : MainWindow displays the details of the selected","lastModifiedDate":"2021-11-08"},{"lineNumber":15,"author":{"gitId":"loose-bus-change"},"content":"        contact in the PersonCard;","lastModifiedDate":"2021-11-08"},{"lineNumber":16,"author":{"gitId":"loose-bus-change"},"content":"else ([else])","lastModifiedDate":"2021-10-28"},{"lineNumber":17,"author":{"gitId":"loose-bus-change"},"content":"    : Outputs an error message;","lastModifiedDate":"2021-11-08"},{"lineNumber":18,"author":{"gitId":"loose-bus-change"},"content":"endif","lastModifiedDate":"2021-10-28"},{"lineNumber":19,"author":{"gitId":"loose-bus-change"},"content":"stop","lastModifiedDate":"2021-10-28"},{"lineNumber":20,"author":{"gitId":"loose-bus-change"},"content":"@enduml","lastModifiedDate":"2021-10-28"}],"authorContributionMap":{"loose-bus-change":20}},{"path":"docs/diagrams/DisplaySequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"loose-bus-change"},"content":"@startuml","lastModifiedDate":"2021-10-28"},{"lineNumber":2,"author":{"gitId":"loose-bus-change"},"content":"!include style.puml","lastModifiedDate":"2021-10-28"},{"lineNumber":3,"author":{"gitId":"loose-bus-change"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":4,"author":{"gitId":"loose-bus-change"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2021-10-28"},{"lineNumber":5,"author":{"gitId":"houtenteo"},"content":"participant \": LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2021-11-08"},{"lineNumber":6,"author":{"gitId":"houtenteo"},"content":"participant \": AddressBookParser\" as AddressBookParser LOGIC_COLOR","lastModifiedDate":"2021-11-08"},{"lineNumber":7,"author":{"gitId":"houtenteo"},"content":"participant \": DisplayCommandParser\" as DisplayCommandParser LOGIC_COLOR","lastModifiedDate":"2021-11-08"},{"lineNumber":8,"author":{"gitId":"loose-bus-change"},"content":"participant \"a:DisplayCommand\" as DisplayCommand LOGIC_COLOR","lastModifiedDate":"2021-10-28"},{"lineNumber":9,"author":{"gitId":"houtenteo"},"content":"participant \": CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2021-11-08"},{"lineNumber":10,"author":{"gitId":"houtenteo"},"content":"end box","lastModifiedDate":"2021-11-06"},{"lineNumber":11,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":12,"author":{"gitId":"houtenteo"},"content":"box Ui UI_COLOR_T1","lastModifiedDate":"2021-11-06"},{"lineNumber":13,"author":{"gitId":"houtenteo"},"content":"participant \": FullPersonCard\" as FullPersonCard LOGIC_COLOR","lastModifiedDate":"2021-11-08"},{"lineNumber":14,"author":{"gitId":"houtenteo"},"content":"participant \": UiManager\" as UiManager LOGIC_COLOR","lastModifiedDate":"2021-11-08"},{"lineNumber":15,"author":{"gitId":"houtenteo"},"content":"participant \": MainWindow\" as MainWindow LOGIC_COLOR","lastModifiedDate":"2021-11-08"},{"lineNumber":16,"author":{"gitId":"loose-bus-change"},"content":"end box","lastModifiedDate":"2021-10-28"},{"lineNumber":17,"author":{"gitId":"loose-bus-change"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":18,"author":{"gitId":"loose-bus-change"},"content":"-\u003e LogicManager : execute(\"display 2\")","lastModifiedDate":"2021-10-28"},{"lineNumber":19,"author":{"gitId":"loose-bus-change"},"content":"activate LogicManager","lastModifiedDate":"2021-10-28"},{"lineNumber":20,"author":{"gitId":"loose-bus-change"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":21,"author":{"gitId":"loose-bus-change"},"content":"LogicManager -\u003e AddressBookParser : parseCommand(\"display 2\")","lastModifiedDate":"2021-10-28"},{"lineNumber":22,"author":{"gitId":"loose-bus-change"},"content":"activate AddressBookParser","lastModifiedDate":"2021-10-28"},{"lineNumber":23,"author":{"gitId":"loose-bus-change"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":24,"author":{"gitId":"loose-bus-change"},"content":"create DisplayCommandParser","lastModifiedDate":"2021-10-28"},{"lineNumber":25,"author":{"gitId":"loose-bus-change"},"content":"AddressBookParser -\u003e DisplayCommandParser","lastModifiedDate":"2021-10-28"},{"lineNumber":26,"author":{"gitId":"loose-bus-change"},"content":"activate DisplayCommandParser","lastModifiedDate":"2021-10-28"},{"lineNumber":27,"author":{"gitId":"loose-bus-change"},"content":"return","lastModifiedDate":"2021-10-28"},{"lineNumber":28,"author":{"gitId":"loose-bus-change"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":29,"author":{"gitId":"loose-bus-change"},"content":"AddressBookParser -\u003e DisplayCommandParser : parse(\"2\")","lastModifiedDate":"2021-10-28"},{"lineNumber":30,"author":{"gitId":"loose-bus-change"},"content":"activate DisplayCommandParser","lastModifiedDate":"2021-10-28"},{"lineNumber":31,"author":{"gitId":"loose-bus-change"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":32,"author":{"gitId":"loose-bus-change"},"content":"create DisplayCommand","lastModifiedDate":"2021-10-28"},{"lineNumber":33,"author":{"gitId":"loose-bus-change"},"content":"DisplayCommandParser -\u003e DisplayCommand","lastModifiedDate":"2021-10-28"},{"lineNumber":34,"author":{"gitId":"loose-bus-change"},"content":"activate DisplayCommand","lastModifiedDate":"2021-10-28"},{"lineNumber":35,"author":{"gitId":"loose-bus-change"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":36,"author":{"gitId":"loose-bus-change"},"content":"return a","lastModifiedDate":"2021-10-28"},{"lineNumber":37,"author":{"gitId":"loose-bus-change"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":38,"author":{"gitId":"loose-bus-change"},"content":"DisplayCommandParser --\u003e AddressBookParser : d","lastModifiedDate":"2021-10-28"},{"lineNumber":39,"author":{"gitId":"loose-bus-change"},"content":"deactivate DisplayCommandParser","lastModifiedDate":"2021-10-28"},{"lineNumber":40,"author":{"gitId":"loose-bus-change"},"content":"\u0027Hidden arrow to position the destroy marker below the end of the activation bar.","lastModifiedDate":"2021-10-28"},{"lineNumber":41,"author":{"gitId":"loose-bus-change"},"content":"DisplayCommandParser -[hidden]-\u003e AddressBookParser","lastModifiedDate":"2021-10-28"},{"lineNumber":42,"author":{"gitId":"loose-bus-change"},"content":"destroy DisplayCommandParser","lastModifiedDate":"2021-10-28"},{"lineNumber":43,"author":{"gitId":"loose-bus-change"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":44,"author":{"gitId":"loose-bus-change"},"content":"LogicManager -\u003e DisplayCommand : execute()","lastModifiedDate":"2021-10-28"},{"lineNumber":45,"author":{"gitId":"loose-bus-change"},"content":"activate DisplayCommand","lastModifiedDate":"2021-10-28"},{"lineNumber":46,"author":{"gitId":"loose-bus-change"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":47,"author":{"gitId":"loose-bus-change"},"content":"DisplayCommand -\u003e FullPersonCard : setDisplayedIndex()","lastModifiedDate":"2021-10-28"},{"lineNumber":48,"author":{"gitId":"loose-bus-change"},"content":"activate FullPersonCard","lastModifiedDate":"2021-10-28"},{"lineNumber":49,"author":{"gitId":"loose-bus-change"},"content":"return","lastModifiedDate":"2021-10-28"},{"lineNumber":50,"author":{"gitId":"loose-bus-change"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":51,"author":{"gitId":"loose-bus-change"},"content":"DisplayCommand -\u003e UiManager : displayFunction()","lastModifiedDate":"2021-10-28"},{"lineNumber":52,"author":{"gitId":"loose-bus-change"},"content":"activate UiManager","lastModifiedDate":"2021-10-28"},{"lineNumber":53,"author":{"gitId":"loose-bus-change"},"content":"UiManager -\u003e MainWindow : fillFullPersonCard()","lastModifiedDate":"2021-10-28"},{"lineNumber":54,"author":{"gitId":"loose-bus-change"},"content":"activate MainWindow","lastModifiedDate":"2021-10-28"},{"lineNumber":55,"author":{"gitId":"loose-bus-change"},"content":"return","lastModifiedDate":"2021-10-28"},{"lineNumber":56,"author":{"gitId":"loose-bus-change"},"content":"return","lastModifiedDate":"2021-10-28"},{"lineNumber":57,"author":{"gitId":"loose-bus-change"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":58,"author":{"gitId":"loose-bus-change"},"content":"create CommandResult","lastModifiedDate":"2021-10-28"},{"lineNumber":59,"author":{"gitId":"loose-bus-change"},"content":"DisplayCommand -\u003e CommandResult","lastModifiedDate":"2021-10-28"},{"lineNumber":60,"author":{"gitId":"loose-bus-change"},"content":"activate CommandResult","lastModifiedDate":"2021-10-28"},{"lineNumber":61,"author":{"gitId":"loose-bus-change"},"content":"return","lastModifiedDate":"2021-10-28"},{"lineNumber":62,"author":{"gitId":"loose-bus-change"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":63,"author":{"gitId":"loose-bus-change"},"content":"return result","lastModifiedDate":"2021-10-28"},{"lineNumber":64,"author":{"gitId":"loose-bus-change"},"content":"@enduml","lastModifiedDate":"2021-10-28"}],"authorContributionMap":{"houtenteo":10,"loose-bus-change":54}},{"path":"docs/diagrams/DuplicateImportDecision.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"idgrr"},"content":"@startuml","lastModifiedDate":"2021-10-25"},{"lineNumber":2,"author":{"gitId":"idgrr"},"content":"\u0027https://plantuml.com/activity-diagram-beta","lastModifiedDate":"2021-10-25"},{"lineNumber":3,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":4,"author":{"gitId":"idgrr"},"content":"start","lastModifiedDate":"2021-10-25"},{"lineNumber":5,"author":{"gitId":"idgrr"},"content":"- Reading file from Csv file","lastModifiedDate":"2021-11-03"},{"lineNumber":6,"author":{"gitId":"idgrr"},"content":"-Import person created based \\non  Csv file row detail","lastModifiedDate":"2021-11-03"},{"lineNumber":7,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":8,"author":{"gitId":"idgrr"},"content":"-Import person to be\\nadded in  model","lastModifiedDate":"2021-10-25"},{"lineNumber":9,"author":{"gitId":"idgrr"},"content":"if () then ([ **No duplicates of import person** \\nin  database ])","lastModifiedDate":"2021-11-07"},{"lineNumber":10,"author":{"gitId":"idgrr"},"content":"    :Import Person is added into\\ndatabase;","lastModifiedDate":"2021-10-25"},{"lineNumber":11,"author":{"gitId":"idgrr"},"content":"else ([ **Found duplicates of import person** \\nin  database ])","lastModifiedDate":"2021-11-03"},{"lineNumber":12,"author":{"gitId":"idgrr"},"content":"      if () then  ( [ Import has been  called  ])","lastModifiedDate":"2021-11-03"},{"lineNumber":13,"author":{"gitId":"idgrr"},"content":"        :Update duplicate  in  database \\nto \"called\"  status;","lastModifiedDate":"2021-11-03"},{"lineNumber":14,"author":{"gitId":"idgrr"},"content":"      else ([ Import has not  been  called ])","lastModifiedDate":"2021-11-03"},{"lineNumber":15,"author":{"gitId":"idgrr"},"content":"        :CMM does nothing with the \\nimport person;","lastModifiedDate":"2021-11-03"},{"lineNumber":16,"author":{"gitId":"idgrr"},"content":"      endif","lastModifiedDate":"2021-10-25"},{"lineNumber":17,"author":{"gitId":"idgrr"},"content":"endif","lastModifiedDate":"2021-10-25"},{"lineNumber":18,"author":{"gitId":"idgrr"},"content":"- Continue import process","lastModifiedDate":"2021-11-03"},{"lineNumber":19,"author":{"gitId":"idgrr"},"content":"stop","lastModifiedDate":"2021-10-25"},{"lineNumber":20,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":21,"author":{"gitId":"idgrr"},"content":"@enduml","lastModifiedDate":"2021-10-25"}],"authorContributionMap":{"idgrr":21}},{"path":"docs/diagrams/EditActivityDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"pranav-ganesh"},"content":"@startuml","lastModifiedDate":"2021-10-20"},{"lineNumber":2,"author":{"gitId":"pranav-ganesh"},"content":"\u0027https://plantuml.com/activity-diagram-beta","lastModifiedDate":"2021-11-08"},{"lineNumber":3,"author":{"gitId":"pranav-ganesh"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":4,"author":{"gitId":"pranav-ganesh"},"content":"start","lastModifiedDate":"2021-11-08"},{"lineNumber":5,"author":{"gitId":"pranav-ganesh"},"content":":User enters edit command;","lastModifiedDate":"2021-11-08"},{"lineNumber":6,"author":{"gitId":"pranav-ganesh"},"content":":AddressBookParser parses the command;","lastModifiedDate":"2021-10-20"},{"lineNumber":7,"author":{"gitId":"pranav-ganesh"},"content":":EditCommandParser parses the arguments provided;","lastModifiedDate":"2021-11-08"},{"lineNumber":8,"author":{"gitId":"pranav-ganesh"},"content":"if () then ([command is valid])","lastModifiedDate":"2021-11-08"},{"lineNumber":9,"author":{"gitId":"pranav-ganesh"},"content":"  :All the arguments are initialized in an EditPersonDescriptor object;","lastModifiedDate":"2021-11-08"},{"lineNumber":10,"author":{"gitId":"pranav-ganesh"},"content":"  :New EditCommand object is created;","lastModifiedDate":"2021-11-08"},{"lineNumber":11,"author":{"gitId":"pranav-ganesh"},"content":"  if() then ([invalid index])","lastModifiedDate":"2021-11-08"},{"lineNumber":12,"author":{"gitId":"pranav-ganesh"},"content":"    :Outputs error message;","lastModifiedDate":"2021-11-08"},{"lineNumber":13,"author":{"gitId":"pranav-ganesh"},"content":"  else ([else])","lastModifiedDate":"2021-11-08"},{"lineNumber":14,"author":{"gitId":"pranav-ganesh"},"content":"    :EditCommand creates and returns a new person object\\ncontaining the updated data fields;","lastModifiedDate":"2021-11-08"},{"lineNumber":15,"author":{"gitId":"pranav-ganesh"},"content":"  endif","lastModifiedDate":"2021-11-08"},{"lineNumber":16,"author":{"gitId":"pranav-ganesh"},"content":"  if() then ([else])","lastModifiedDate":"2021-11-08"},{"lineNumber":17,"author":{"gitId":"pranav-ganesh"},"content":"    :Outputs error message;","lastModifiedDate":"2021-11-08"},{"lineNumber":18,"author":{"gitId":"pranav-ganesh"},"content":"  else ([contact is valid])","lastModifiedDate":"2021-11-08"},{"lineNumber":19,"author":{"gitId":"pranav-ganesh"},"content":"    :Model sets the person to edit to the edited person;","lastModifiedDate":"2021-11-08"},{"lineNumber":20,"author":{"gitId":"pranav-ganesh"},"content":"    :Edited person is displayed on the user interface;","lastModifiedDate":"2021-11-08"},{"lineNumber":21,"author":{"gitId":"pranav-ganesh"},"content":"  endif","lastModifiedDate":"2021-10-20"},{"lineNumber":22,"author":{"gitId":"pranav-ganesh"},"content":"else ([else])","lastModifiedDate":"2021-11-08"},{"lineNumber":23,"author":{"gitId":"pranav-ganesh"},"content":":Outputs error message;","lastModifiedDate":"2021-11-08"},{"lineNumber":24,"author":{"gitId":"pranav-ganesh"},"content":"endif","lastModifiedDate":"2021-11-08"},{"lineNumber":25,"author":{"gitId":"pranav-ganesh"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":26,"author":{"gitId":"pranav-ganesh"},"content":"stop","lastModifiedDate":"2021-10-20"},{"lineNumber":27,"author":{"gitId":"pranav-ganesh"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":28,"author":{"gitId":"pranav-ganesh"},"content":"@enduml","lastModifiedDate":"2021-10-20"}],"authorContributionMap":{"pranav-ganesh":28}},{"path":"docs/diagrams/EditSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"pranav-ganesh"},"content":"@startuml","lastModifiedDate":"2021-10-20"},{"lineNumber":2,"author":{"gitId":"pranav-ganesh"},"content":"!include style.puml","lastModifiedDate":"2021-10-20"},{"lineNumber":3,"author":{"gitId":"pranav-ganesh"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":4,"author":{"gitId":"pranav-ganesh"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2021-10-20"},{"lineNumber":5,"author":{"gitId":"houtenteo"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2021-11-08"},{"lineNumber":6,"author":{"gitId":"houtenteo"},"content":"participant \":AddressBookParser\" as AddressBookParser LOGIC_COLOR","lastModifiedDate":"2021-11-08"},{"lineNumber":7,"author":{"gitId":"houtenteo"},"content":"participant \":EditCommandParser\" as EditCommandParser LOGIC_COLOR","lastModifiedDate":"2021-11-08"},{"lineNumber":8,"author":{"gitId":"pranav-ganesh"},"content":"participant \"e:EditCommand\" as EditCommand LOGIC_COLOR","lastModifiedDate":"2021-10-20"},{"lineNumber":9,"author":{"gitId":"houtenteo"},"content":"participant \":CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2021-11-08"},{"lineNumber":10,"author":{"gitId":"pranav-ganesh"},"content":"end box","lastModifiedDate":"2021-10-20"},{"lineNumber":11,"author":{"gitId":"pranav-ganesh"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":12,"author":{"gitId":"pranav-ganesh"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2021-10-20"},{"lineNumber":13,"author":{"gitId":"houtenteo"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2021-11-08"},{"lineNumber":14,"author":{"gitId":"houtenteo"},"content":"participant \"p:Person\" as Person MODEL_COLOR","lastModifiedDate":"2021-11-08"},{"lineNumber":15,"author":{"gitId":"pranav-ganesh"},"content":"end box","lastModifiedDate":"2021-10-20"},{"lineNumber":16,"author":{"gitId":"pranav-ganesh"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":17,"author":{"gitId":"houtenteo"},"content":"-\u003e LogicManager : execute(\"edit ...\")","lastModifiedDate":"2021-11-08"},{"lineNumber":18,"author":{"gitId":"pranav-ganesh"},"content":"activate LogicManager","lastModifiedDate":"2021-10-20"},{"lineNumber":19,"author":{"gitId":"pranav-ganesh"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":20,"author":{"gitId":"houtenteo"},"content":"LogicManager -\u003e AddressBookParser : parseCommand(\"edit ...\")","lastModifiedDate":"2021-11-08"},{"lineNumber":21,"author":{"gitId":"pranav-ganesh"},"content":"activate AddressBookParser","lastModifiedDate":"2021-10-20"},{"lineNumber":22,"author":{"gitId":"pranav-ganesh"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":23,"author":{"gitId":"pranav-ganesh"},"content":"create EditCommandParser","lastModifiedDate":"2021-10-20"},{"lineNumber":24,"author":{"gitId":"pranav-ganesh"},"content":"AddressBookParser -\u003e EditCommandParser","lastModifiedDate":"2021-10-20"},{"lineNumber":25,"author":{"gitId":"pranav-ganesh"},"content":"activate EditCommandParser","lastModifiedDate":"2021-10-20"},{"lineNumber":26,"author":{"gitId":"pranav-ganesh"},"content":"return","lastModifiedDate":"2021-10-20"},{"lineNumber":27,"author":{"gitId":"pranav-ganesh"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":28,"author":{"gitId":"houtenteo"},"content":"AddressBookParser -\u003e EditCommandParser : parse(\"...\")","lastModifiedDate":"2021-11-08"},{"lineNumber":29,"author":{"gitId":"pranav-ganesh"},"content":"activate EditCommandParser","lastModifiedDate":"2021-10-20"},{"lineNumber":30,"author":{"gitId":"pranav-ganesh"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":31,"author":{"gitId":"pranav-ganesh"},"content":"create EditCommand","lastModifiedDate":"2021-10-20"},{"lineNumber":32,"author":{"gitId":"pranav-ganesh"},"content":"EditCommandParser -\u003e EditCommand","lastModifiedDate":"2021-10-20"},{"lineNumber":33,"author":{"gitId":"pranav-ganesh"},"content":"activate EditCommand","lastModifiedDate":"2021-10-20"},{"lineNumber":34,"author":{"gitId":"pranav-ganesh"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":35,"author":{"gitId":"pranav-ganesh"},"content":"create Person","lastModifiedDate":"2021-10-20"},{"lineNumber":36,"author":{"gitId":"houtenteo"},"content":"EditCommand -\u003e Person","lastModifiedDate":"2021-11-08"},{"lineNumber":37,"author":{"gitId":"pranav-ganesh"},"content":"activate Person","lastModifiedDate":"2021-10-20"},{"lineNumber":38,"author":{"gitId":"pranav-ganesh"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":39,"author":{"gitId":"pranav-ganesh"},"content":"return p","lastModifiedDate":"2021-10-20"},{"lineNumber":40,"author":{"gitId":"pranav-ganesh"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":41,"author":{"gitId":"pranav-ganesh"},"content":"return e","lastModifiedDate":"2021-10-20"},{"lineNumber":42,"author":{"gitId":"pranav-ganesh"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":43,"author":{"gitId":"pranav-ganesh"},"content":"EditCommandParser --\u003e AddressBookParser : e","lastModifiedDate":"2021-10-20"},{"lineNumber":44,"author":{"gitId":"pranav-ganesh"},"content":"deactivate EditCommandParser","lastModifiedDate":"2021-10-20"},{"lineNumber":45,"author":{"gitId":"pranav-ganesh"},"content":"\u0027Hidden arrow to position the destroy marker below the end of the activation bar.","lastModifiedDate":"2021-10-20"},{"lineNumber":46,"author":{"gitId":"pranav-ganesh"},"content":"EditCommandParser -[hidden]-\u003e AddressBookParser","lastModifiedDate":"2021-10-20"},{"lineNumber":47,"author":{"gitId":"pranav-ganesh"},"content":"destroy EditCommandParser","lastModifiedDate":"2021-10-20"},{"lineNumber":48,"author":{"gitId":"pranav-ganesh"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":49,"author":{"gitId":"pranav-ganesh"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":50,"author":{"gitId":"pranav-ganesh"},"content":"LogicManager -\u003e EditCommand : execute()","lastModifiedDate":"2021-10-20"},{"lineNumber":51,"author":{"gitId":"pranav-ganesh"},"content":"activate EditCommand","lastModifiedDate":"2021-10-20"},{"lineNumber":52,"author":{"gitId":"pranav-ganesh"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":53,"author":{"gitId":"pranav-ganesh"},"content":"EditCommand -\u003e Model : setPerson(1, p)","lastModifiedDate":"2021-10-20"},{"lineNumber":54,"author":{"gitId":"pranav-ganesh"},"content":"activate Model","lastModifiedDate":"2021-10-20"},{"lineNumber":55,"author":{"gitId":"pranav-ganesh"},"content":"return","lastModifiedDate":"2021-10-20"},{"lineNumber":56,"author":{"gitId":"pranav-ganesh"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":57,"author":{"gitId":"pranav-ganesh"},"content":"create CommandResult","lastModifiedDate":"2021-10-20"},{"lineNumber":58,"author":{"gitId":"pranav-ganesh"},"content":"EditCommand -\u003e CommandResult","lastModifiedDate":"2021-10-20"},{"lineNumber":59,"author":{"gitId":"pranav-ganesh"},"content":"activate CommandResult","lastModifiedDate":"2021-10-20"},{"lineNumber":60,"author":{"gitId":"pranav-ganesh"},"content":"return","lastModifiedDate":"2021-10-20"},{"lineNumber":61,"author":{"gitId":"pranav-ganesh"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":62,"author":{"gitId":"pranav-ganesh"},"content":"return result","lastModifiedDate":"2021-10-20"},{"lineNumber":63,"author":{"gitId":"pranav-ganesh"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":64,"author":{"gitId":"pranav-ganesh"},"content":"[\u003c--LogicManager","lastModifiedDate":"2021-10-20"},{"lineNumber":65,"author":{"gitId":"pranav-ganesh"},"content":"deactivate LogicManager","lastModifiedDate":"2021-10-20"},{"lineNumber":66,"author":{"gitId":"pranav-ganesh"},"content":"@enduml","lastModifiedDate":"2021-10-20"}],"authorContributionMap":{"houtenteo":10,"pranav-ganesh":56}},{"path":"docs/diagrams/FilterActivityDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Kangxun"},"content":"@startuml","lastModifiedDate":"2021-11-07"},{"lineNumber":2,"author":{"gitId":"Kangxun"},"content":"\u0027https://plantuml.com/activity-diagram-beta","lastModifiedDate":"2021-11-07"},{"lineNumber":3,"author":{"gitId":"Kangxun"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":4,"author":{"gitId":"Kangxun"},"content":"start","lastModifiedDate":"2021-11-07"},{"lineNumber":5,"author":{"gitId":"Kangxun"},"content":":User enters filter command;","lastModifiedDate":"2021-11-07"},{"lineNumber":6,"author":{"gitId":"Kangxun"},"content":":AddressBookParser parses the command;","lastModifiedDate":"2021-11-07"},{"lineNumber":7,"author":{"gitId":"Kangxun"},"content":":FilterCommandParser parses the arguments provided;","lastModifiedDate":"2021-11-07"},{"lineNumber":8,"author":{"gitId":"Kangxun"},"content":"if () then ([command is valid])","lastModifiedDate":"2021-11-07"},{"lineNumber":9,"author":{"gitId":"Kangxun"},"content":"  :new FilterCommand object is created;","lastModifiedDate":"2021-11-07"},{"lineNumber":10,"author":{"gitId":"Kangxun"},"content":"  :PersonComparator creates new \\ncomparator object based on category;","lastModifiedDate":"2021-11-07"},{"lineNumber":11,"author":{"gitId":"Kangxun"},"content":"  :contacts are sorted using comparator;","lastModifiedDate":"2021-11-07"},{"lineNumber":12,"author":{"gitId":"Kangxun"},"content":"  :limit number of contacts shown based on count;","lastModifiedDate":"2021-11-07"},{"lineNumber":13,"author":{"gitId":"Kangxun"},"content":"  :new DisplayCommand object is created;","lastModifiedDate":"2021-11-07"},{"lineNumber":14,"author":{"gitId":"Kangxun"},"content":"  :first contact in list is displayed on person card;","lastModifiedDate":"2021-11-07"},{"lineNumber":15,"author":{"gitId":"Kangxun"},"content":"else ([command is invalid])","lastModifiedDate":"2021-11-07"},{"lineNumber":16,"author":{"gitId":"Kangxun"},"content":"  :output error message;","lastModifiedDate":"2021-11-07"},{"lineNumber":17,"author":{"gitId":"Kangxun"},"content":"endif","lastModifiedDate":"2021-11-07"},{"lineNumber":18,"author":{"gitId":"Kangxun"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":19,"author":{"gitId":"Kangxun"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":20,"author":{"gitId":"Kangxun"},"content":"stop","lastModifiedDate":"2021-11-07"},{"lineNumber":21,"author":{"gitId":"Kangxun"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":22,"author":{"gitId":"Kangxun"},"content":"@enduml","lastModifiedDate":"2021-11-07"}],"authorContributionMap":{"Kangxun":22}},{"path":"docs/diagrams/FilterSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Kangxun"},"content":"@startuml","lastModifiedDate":"2021-10-26"},{"lineNumber":2,"author":{"gitId":"Kangxun"},"content":"!include style.puml","lastModifiedDate":"2021-10-26"},{"lineNumber":3,"author":{"gitId":"Kangxun"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":4,"author":{"gitId":"Kangxun"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2021-10-26"},{"lineNumber":5,"author":{"gitId":"Kangxun"},"content":"participant \": LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2021-10-26"},{"lineNumber":6,"author":{"gitId":"houtenteo"},"content":"participant \": AddressBook\\nParser\" as AddressBookParser LOGIC_COLOR","lastModifiedDate":"2021-11-08"},{"lineNumber":7,"author":{"gitId":"houtenteo"},"content":"participant \": FilterCommand\\nParser\" as FilterCommandParser LOGIC_COLOR","lastModifiedDate":"2021-11-08"},{"lineNumber":8,"author":{"gitId":"Kangxun"},"content":"participant \"a:FilterCommand\" as FilterCommand LOGIC_COLOR","lastModifiedDate":"2021-10-26"},{"lineNumber":9,"author":{"gitId":"houtenteo"},"content":"participant \": Person\\nComparator\" as PersonComparator LOGIC_COLOR","lastModifiedDate":"2021-11-08"},{"lineNumber":10,"author":{"gitId":"Kangxun"},"content":"participant \"c:Comparator\" as Comparator LOGIC_COLOR","lastModifiedDate":"2021-10-26"},{"lineNumber":11,"author":{"gitId":"houtenteo"},"content":"participant \": Command\\nResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2021-11-08"},{"lineNumber":12,"author":{"gitId":"Kangxun"},"content":"end box","lastModifiedDate":"2021-10-26"},{"lineNumber":13,"author":{"gitId":"Kangxun"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":14,"author":{"gitId":"Kangxun"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2021-10-26"},{"lineNumber":15,"author":{"gitId":"Kangxun"},"content":"participant \": Model\" as Model MODEL_COLOR","lastModifiedDate":"2021-10-26"},{"lineNumber":16,"author":{"gitId":"Kangxun"},"content":"end box","lastModifiedDate":"2021-10-26"},{"lineNumber":17,"author":{"gitId":"Kangxun"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":18,"author":{"gitId":"Kangxun"},"content":"-\u003e LogicManager : execute(\"filter gender 3\")","lastModifiedDate":"2021-10-26"},{"lineNumber":19,"author":{"gitId":"Kangxun"},"content":"activate LogicManager","lastModifiedDate":"2021-10-26"},{"lineNumber":20,"author":{"gitId":"Kangxun"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":21,"author":{"gitId":"Kangxun"},"content":"LogicManager -\u003e AddressBookParser : parseCommand(\"filter gender 3\")","lastModifiedDate":"2021-10-26"},{"lineNumber":22,"author":{"gitId":"Kangxun"},"content":"activate AddressBookParser","lastModifiedDate":"2021-10-26"},{"lineNumber":23,"author":{"gitId":"Kangxun"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":24,"author":{"gitId":"Kangxun"},"content":"create FilterCommandParser","lastModifiedDate":"2021-10-26"},{"lineNumber":25,"author":{"gitId":"Kangxun"},"content":"AddressBookParser -\u003e FilterCommandParser","lastModifiedDate":"2021-10-26"},{"lineNumber":26,"author":{"gitId":"Kangxun"},"content":"activate FilterCommandParser","lastModifiedDate":"2021-10-26"},{"lineNumber":27,"author":{"gitId":"Kangxun"},"content":"return","lastModifiedDate":"2021-10-26"},{"lineNumber":28,"author":{"gitId":"Kangxun"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":29,"author":{"gitId":"Kangxun"},"content":"AddressBookParser -\u003e FilterCommandParser : parse(\"filter gender 3\")","lastModifiedDate":"2021-10-26"},{"lineNumber":30,"author":{"gitId":"Kangxun"},"content":"activate FilterCommandParser","lastModifiedDate":"2021-10-26"},{"lineNumber":31,"author":{"gitId":"Kangxun"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":32,"author":{"gitId":"Kangxun"},"content":"create FilterCommand","lastModifiedDate":"2021-10-26"},{"lineNumber":33,"author":{"gitId":"Kangxun"},"content":"FilterCommandParser -\u003e FilterCommand","lastModifiedDate":"2021-10-26"},{"lineNumber":34,"author":{"gitId":"Kangxun"},"content":"activate FilterCommand","lastModifiedDate":"2021-10-26"},{"lineNumber":35,"author":{"gitId":"Kangxun"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":36,"author":{"gitId":"Kangxun"},"content":"return a","lastModifiedDate":"2021-10-26"},{"lineNumber":37,"author":{"gitId":"Kangxun"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":38,"author":{"gitId":"Kangxun"},"content":"FilterCommandParser --\u003e AddressBookParser : d","lastModifiedDate":"2021-10-26"},{"lineNumber":39,"author":{"gitId":"Kangxun"},"content":"deactivate FilterCommandParser","lastModifiedDate":"2021-10-26"},{"lineNumber":40,"author":{"gitId":"Kangxun"},"content":"\u0027Hidden arrow to position the destroy marker below the end of the activation bar.","lastModifiedDate":"2021-10-26"},{"lineNumber":41,"author":{"gitId":"Kangxun"},"content":"FilterCommandParser -[hidden]-\u003e AddressBookParser","lastModifiedDate":"2021-10-26"},{"lineNumber":42,"author":{"gitId":"Kangxun"},"content":"destroy FilterCommandParser","lastModifiedDate":"2021-10-26"},{"lineNumber":43,"author":{"gitId":"Kangxun"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":44,"author":{"gitId":"Kangxun"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":45,"author":{"gitId":"Kangxun"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":46,"author":{"gitId":"Kangxun"},"content":"LogicManager -\u003e FilterCommand : execute()","lastModifiedDate":"2021-10-26"},{"lineNumber":47,"author":{"gitId":"Kangxun"},"content":"activate FilterCommand","lastModifiedDate":"2021-10-26"},{"lineNumber":48,"author":{"gitId":"Kangxun"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":49,"author":{"gitId":"Kangxun"},"content":"FilterCommand -\u003e PersonComparator : getComparator(genderCategory)","lastModifiedDate":"2021-10-26"},{"lineNumber":50,"author":{"gitId":"Kangxun"},"content":"activate PersonComparator","lastModifiedDate":"2021-10-26"},{"lineNumber":51,"author":{"gitId":"Kangxun"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":52,"author":{"gitId":"Kangxun"},"content":"create Comparator","lastModifiedDate":"2021-10-26"},{"lineNumber":53,"author":{"gitId":"Kangxun"},"content":"PersonComparator -\u003e Comparator","lastModifiedDate":"2021-10-26"},{"lineNumber":54,"author":{"gitId":"Kangxun"},"content":"activate Comparator","lastModifiedDate":"2021-10-26"},{"lineNumber":55,"author":{"gitId":"Kangxun"},"content":"return c","lastModifiedDate":"2021-10-26"},{"lineNumber":56,"author":{"gitId":"Kangxun"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":57,"author":{"gitId":"Kangxun"},"content":"return c","lastModifiedDate":"2021-10-26"},{"lineNumber":58,"author":{"gitId":"Kangxun"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":59,"author":{"gitId":"Kangxun"},"content":"FilterCommand -\u003e Model : sortFilteredPersonList(c)","lastModifiedDate":"2021-10-26"},{"lineNumber":60,"author":{"gitId":"Kangxun"},"content":"activate Model","lastModifiedDate":"2021-10-26"},{"lineNumber":61,"author":{"gitId":"Kangxun"},"content":"return","lastModifiedDate":"2021-10-26"},{"lineNumber":62,"author":{"gitId":"Kangxun"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":63,"author":{"gitId":"Kangxun"},"content":"FilterCommand -\u003e Model : limitFilteredPersonList(3)","lastModifiedDate":"2021-10-26"},{"lineNumber":64,"author":{"gitId":"Kangxun"},"content":"activate Model","lastModifiedDate":"2021-10-26"},{"lineNumber":65,"author":{"gitId":"Kangxun"},"content":"return","lastModifiedDate":"2021-10-26"},{"lineNumber":66,"author":{"gitId":"Kangxun"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":67,"author":{"gitId":"Kangxun"},"content":"create CommandResult","lastModifiedDate":"2021-10-26"},{"lineNumber":68,"author":{"gitId":"Kangxun"},"content":"FilterCommand -\u003e CommandResult","lastModifiedDate":"2021-10-26"},{"lineNumber":69,"author":{"gitId":"Kangxun"},"content":"activate CommandResult","lastModifiedDate":"2021-10-26"},{"lineNumber":70,"author":{"gitId":"Kangxun"},"content":"return","lastModifiedDate":"2021-10-26"},{"lineNumber":71,"author":{"gitId":"Kangxun"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":72,"author":{"gitId":"Kangxun"},"content":"return result","lastModifiedDate":"2021-10-26"},{"lineNumber":73,"author":{"gitId":"Kangxun"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":74,"author":{"gitId":"Kangxun"},"content":"@enduml","lastModifiedDate":"2021-10-26"}],"authorContributionMap":{"houtenteo":4,"Kangxun":70}},{"path":"docs/diagrams/FindActivityDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"houtenteo"},"content":"@startuml","lastModifiedDate":"2021-11-03"},{"lineNumber":2,"author":{"gitId":"houtenteo"},"content":"\u0027https://plantuml.com/activity-diagram-beta","lastModifiedDate":"2021-11-03"},{"lineNumber":3,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":4,"author":{"gitId":"houtenteo"},"content":"start","lastModifiedDate":"2021-11-03"},{"lineNumber":5,"author":{"gitId":"houtenteo"},"content":":User enters findAny command;","lastModifiedDate":"2021-11-03"},{"lineNumber":6,"author":{"gitId":"houtenteo"},"content":":AddressBookParser parses the command;","lastModifiedDate":"2021-11-03"},{"lineNumber":7,"author":{"gitId":"houtenteo"},"content":":FindAnyCommandParser parses the arguments provided;","lastModifiedDate":"2021-11-03"},{"lineNumber":8,"author":{"gitId":"houtenteo"},"content":"if () then ([command is valid])","lastModifiedDate":"2021-11-04"},{"lineNumber":9,"author":{"gitId":"houtenteo"},"content":"  :new predicates for each specified field are created;","lastModifiedDate":"2021-11-03"},{"lineNumber":10,"author":{"gitId":"houtenteo"},"content":"  :predicates are saved in a CombinedPredicate object;","lastModifiedDate":"2021-11-03"},{"lineNumber":11,"author":{"gitId":"houtenteo"},"content":"  :new FindAnyCommand object is created;","lastModifiedDate":"2021-11-04"},{"lineNumber":12,"author":{"gitId":"houtenteo"},"content":"  :filtered list is updated with the new CombinedPredicate;","lastModifiedDate":"2021-11-03"},{"lineNumber":13,"author":{"gitId":"houtenteo"},"content":"else ([command is invalid])","lastModifiedDate":"2021-11-04"},{"lineNumber":14,"author":{"gitId":"houtenteo"},"content":"  :outputs error message;","lastModifiedDate":"2021-11-06"},{"lineNumber":15,"author":{"gitId":"houtenteo"},"content":"endif","lastModifiedDate":"2021-11-03"},{"lineNumber":16,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":17,"author":{"gitId":"houtenteo"},"content":"stop","lastModifiedDate":"2021-11-03"},{"lineNumber":18,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":19,"author":{"gitId":"houtenteo"},"content":"@enduml","lastModifiedDate":"2021-11-03"}],"authorContributionMap":{"houtenteo":19}},{"path":"docs/diagrams/FindSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"houtenteo"},"content":"@startuml","lastModifiedDate":"2021-11-03"},{"lineNumber":2,"author":{"gitId":"houtenteo"},"content":"!include style.puml","lastModifiedDate":"2021-11-03"},{"lineNumber":3,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":4,"author":{"gitId":"houtenteo"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2021-11-03"},{"lineNumber":5,"author":{"gitId":"houtenteo"},"content":"participant \": LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2021-11-05"},{"lineNumber":6,"author":{"gitId":"houtenteo"},"content":"participant \": AddressBook \\n Parser\" as AddressBookParser LOGIC_COLOR","lastModifiedDate":"2021-11-05"},{"lineNumber":7,"author":{"gitId":"houtenteo"},"content":"participant \": FindAny \\n CommandParser\" as FindAnyCommandParser LOGIC_COLOR","lastModifiedDate":"2021-11-05"},{"lineNumber":8,"author":{"gitId":"houtenteo"},"content":"participant \"f:FindAny \\n Command\" as FindAnyCommand LOGIC_COLOR","lastModifiedDate":"2021-11-05"},{"lineNumber":9,"author":{"gitId":"houtenteo"},"content":"participant \": CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2021-11-05"},{"lineNumber":10,"author":{"gitId":"houtenteo"},"content":"end box","lastModifiedDate":"2021-11-03"},{"lineNumber":11,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":12,"author":{"gitId":"houtenteo"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2021-11-03"},{"lineNumber":13,"author":{"gitId":"houtenteo"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2021-11-05"},{"lineNumber":14,"author":{"gitId":"houtenteo"},"content":"participant \"p:NameContains \\n KeywordPredicate\" as namePredicate MODEL_COLOR","lastModifiedDate":"2021-11-05"},{"lineNumber":15,"author":{"gitId":"houtenteo"},"content":"participant \"c:Combined \\n Predicate\" as combinedPredicate MODEL_COLOR","lastModifiedDate":"2021-11-05"},{"lineNumber":16,"author":{"gitId":"houtenteo"},"content":"end box","lastModifiedDate":"2021-11-03"},{"lineNumber":17,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":18,"author":{"gitId":"houtenteo"},"content":"-\u003e LogicManager : execute(\"findAny n/alex\")","lastModifiedDate":"2021-11-04"},{"lineNumber":19,"author":{"gitId":"houtenteo"},"content":"activate LogicManager","lastModifiedDate":"2021-11-03"},{"lineNumber":20,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":21,"author":{"gitId":"houtenteo"},"content":"LogicManager -\u003e AddressBookParser : parseCommand(\"findAny n/alex\")","lastModifiedDate":"2021-11-03"},{"lineNumber":22,"author":{"gitId":"houtenteo"},"content":"activate AddressBookParser","lastModifiedDate":"2021-11-03"},{"lineNumber":23,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":24,"author":{"gitId":"houtenteo"},"content":"create FindAnyCommandParser","lastModifiedDate":"2021-11-03"},{"lineNumber":25,"author":{"gitId":"houtenteo"},"content":"AddressBookParser -\u003e FindAnyCommandParser","lastModifiedDate":"2021-11-03"},{"lineNumber":26,"author":{"gitId":"houtenteo"},"content":"activate FindAnyCommandParser","lastModifiedDate":"2021-11-03"},{"lineNumber":27,"author":{"gitId":"houtenteo"},"content":"return","lastModifiedDate":"2021-11-03"},{"lineNumber":28,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":29,"author":{"gitId":"houtenteo"},"content":"AddressBookParser -\u003e FindAnyCommandParser : parse(\"n/alex\")","lastModifiedDate":"2021-11-03"},{"lineNumber":30,"author":{"gitId":"houtenteo"},"content":"activate FindAnyCommandParser","lastModifiedDate":"2021-11-03"},{"lineNumber":31,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":32,"author":{"gitId":"houtenteo"},"content":"create namePredicate","lastModifiedDate":"2021-11-03"},{"lineNumber":33,"author":{"gitId":"houtenteo"},"content":"FindAnyCommandParser -\u003e namePredicate","lastModifiedDate":"2021-11-03"},{"lineNumber":34,"author":{"gitId":"houtenteo"},"content":"activate namePredicate","lastModifiedDate":"2021-11-03"},{"lineNumber":35,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":36,"author":{"gitId":"houtenteo"},"content":"return p","lastModifiedDate":"2021-11-03"},{"lineNumber":37,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":38,"author":{"gitId":"houtenteo"},"content":"create combinedPredicate","lastModifiedDate":"2021-11-03"},{"lineNumber":39,"author":{"gitId":"houtenteo"},"content":"FindAnyCommandParser -\u003e combinedPredicate","lastModifiedDate":"2021-11-03"},{"lineNumber":40,"author":{"gitId":"houtenteo"},"content":"activate combinedPredicate","lastModifiedDate":"2021-11-03"},{"lineNumber":41,"author":{"gitId":"houtenteo"},"content":"return c","lastModifiedDate":"2021-11-03"},{"lineNumber":42,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":43,"author":{"gitId":"houtenteo"},"content":"create FindAnyCommand","lastModifiedDate":"2021-11-03"},{"lineNumber":44,"author":{"gitId":"houtenteo"},"content":"FindAnyCommandParser -\u003e FindAnyCommand","lastModifiedDate":"2021-11-03"},{"lineNumber":45,"author":{"gitId":"houtenteo"},"content":"activate FindAnyCommand","lastModifiedDate":"2021-11-03"},{"lineNumber":46,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":47,"author":{"gitId":"houtenteo"},"content":"return f","lastModifiedDate":"2021-11-03"},{"lineNumber":48,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":49,"author":{"gitId":"houtenteo"},"content":"FindAnyCommandParser --\u003e AddressBookParser : f","lastModifiedDate":"2021-11-03"},{"lineNumber":50,"author":{"gitId":"houtenteo"},"content":"deactivate FindAnyCommandParser","lastModifiedDate":"2021-11-03"},{"lineNumber":51,"author":{"gitId":"houtenteo"},"content":"\u0027Hidden arrow to position the destroy marker below the end of the activation bar.","lastModifiedDate":"2021-11-03"},{"lineNumber":52,"author":{"gitId":"houtenteo"},"content":"FindAnyCommandParser -[hidden]-\u003e AddressBookParser","lastModifiedDate":"2021-11-03"},{"lineNumber":53,"author":{"gitId":"houtenteo"},"content":"destroy FindAnyCommandParser","lastModifiedDate":"2021-11-03"},{"lineNumber":54,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":55,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":56,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":57,"author":{"gitId":"houtenteo"},"content":"LogicManager -\u003e FindAnyCommand : execute()","lastModifiedDate":"2021-11-03"},{"lineNumber":58,"author":{"gitId":"houtenteo"},"content":"activate FindAnyCommand","lastModifiedDate":"2021-11-03"},{"lineNumber":59,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":60,"author":{"gitId":"houtenteo"},"content":"FindAnyCommand -\u003e Model : updateFilteredPersonList(p)","lastModifiedDate":"2021-11-03"},{"lineNumber":61,"author":{"gitId":"houtenteo"},"content":"activate Model","lastModifiedDate":"2021-11-03"},{"lineNumber":62,"author":{"gitId":"houtenteo"},"content":"return","lastModifiedDate":"2021-11-03"},{"lineNumber":63,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":64,"author":{"gitId":"houtenteo"},"content":"create CommandResult","lastModifiedDate":"2021-11-03"},{"lineNumber":65,"author":{"gitId":"houtenteo"},"content":"FindAnyCommand -\u003e CommandResult","lastModifiedDate":"2021-11-03"},{"lineNumber":66,"author":{"gitId":"houtenteo"},"content":"activate CommandResult","lastModifiedDate":"2021-11-03"},{"lineNumber":67,"author":{"gitId":"houtenteo"},"content":"return","lastModifiedDate":"2021-11-03"},{"lineNumber":68,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":69,"author":{"gitId":"houtenteo"},"content":"return result","lastModifiedDate":"2021-11-03"},{"lineNumber":70,"author":{"gitId":"houtenteo"},"content":"@enduml","lastModifiedDate":"2021-11-03"}],"authorContributionMap":{"houtenteo":70}},{"path":"docs/diagrams/ImportCsvSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"idgrr"},"content":"@startuml","lastModifiedDate":"2021-10-20"},{"lineNumber":2,"author":{"gitId":"idgrr"},"content":"!include style.puml","lastModifiedDate":"2021-11-05"},{"lineNumber":3,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":4,"author":{"gitId":"idgrr"},"content":"\u0027Package \" \"\u003c\u003cRectangle\u003e\u003e{","lastModifiedDate":"2021-11-05"},{"lineNumber":5,"author":{"gitId":"idgrr"},"content":"\u0027    Class UI UI_COLOR","lastModifiedDate":"2021-11-05"},{"lineNumber":6,"author":{"gitId":"idgrr"},"content":"\u0027    Class Logic LOGIC_COLOR","lastModifiedDate":"2021-11-05"},{"lineNumber":7,"author":{"gitId":"idgrr"},"content":"\u0027    Class Storage STORAGE_COLOR","lastModifiedDate":"2021-11-05"},{"lineNumber":8,"author":{"gitId":"idgrr"},"content":"\u0027    Class Model MODEL_COLOR","lastModifiedDate":"2021-11-05"},{"lineNumber":9,"author":{"gitId":"idgrr"},"content":"\u0027    Class Main #grey","lastModifiedDate":"2021-11-05"},{"lineNumber":10,"author":{"gitId":"idgrr"},"content":"\u0027    Class Commons LOGIC_COLOR_T2","lastModifiedDate":"2021-11-05"},{"lineNumber":11,"author":{"gitId":"idgrr"},"content":"\u0027}","lastModifiedDate":"2021-11-05"},{"lineNumber":12,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":13,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":14,"author":{"gitId":"idgrr"},"content":"participant \" : MainWindow\" as MainWindow  UI_COLOR","lastModifiedDate":"2021-11-05"},{"lineNumber":15,"author":{"gitId":"idgrr"},"content":"participant \" : Logic\" as Logic LOGIC_COLOR","lastModifiedDate":"2021-11-05"},{"lineNumber":16,"author":{"gitId":"idgrr"},"content":"participant \" : CsvAddressBookImportExport\" as CsvAddressBookImportExport STORAGE_COLOR","lastModifiedDate":"2021-11-05"},{"lineNumber":17,"author":{"gitId":"idgrr"},"content":"participant \" : CsvUtil\" as CsvUtil LOGIC_COLOR_T3","lastModifiedDate":"2021-11-05"},{"lineNumber":18,"author":{"gitId":"idgrr"},"content":"participant \" : StorageManager\" as StorageManager STORAGE_COLOR","lastModifiedDate":"2021-11-05"},{"lineNumber":19,"author":{"gitId":"idgrr"},"content":"participant \" : Model\" as Model MODEL_COLOR","lastModifiedDate":"2021-11-05"},{"lineNumber":20,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":21,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":22,"author":{"gitId":"idgrr"},"content":"box UI UI_COLOR_T1","lastModifiedDate":"2021-11-05"},{"lineNumber":23,"author":{"gitId":"idgrr"},"content":"    participant MainWindow","lastModifiedDate":"2021-10-25"},{"lineNumber":24,"author":{"gitId":"idgrr"},"content":"end box","lastModifiedDate":"2021-10-25"},{"lineNumber":25,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":26,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":27,"author":{"gitId":"idgrr"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2021-11-05"},{"lineNumber":28,"author":{"gitId":"idgrr"},"content":"    participant Logic","lastModifiedDate":"2021-10-25"},{"lineNumber":29,"author":{"gitId":"idgrr"},"content":"end box","lastModifiedDate":"2021-10-25"},{"lineNumber":30,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":31,"author":{"gitId":"idgrr"},"content":"box Storage STORAGE_COLOR_T1","lastModifiedDate":"2021-11-05"},{"lineNumber":32,"author":{"gitId":"idgrr"},"content":"    participant StorageManager","lastModifiedDate":"2021-10-25"},{"lineNumber":33,"author":{"gitId":"idgrr"},"content":"    participant CsvAddressBookImportExport","lastModifiedDate":"2021-10-25"},{"lineNumber":34,"author":{"gitId":"idgrr"},"content":"end box","lastModifiedDate":"2021-10-25"},{"lineNumber":35,"author":{"gitId":"idgrr"},"content":"box Common LOGIC_COLOR_T2","lastModifiedDate":"2021-11-05"},{"lineNumber":36,"author":{"gitId":"idgrr"},"content":"    participant CsvUtil","lastModifiedDate":"2021-10-25"},{"lineNumber":37,"author":{"gitId":"idgrr"},"content":"end box","lastModifiedDate":"2021-10-25"},{"lineNumber":38,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":39,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":40,"author":{"gitId":"idgrr"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2021-11-05"},{"lineNumber":41,"author":{"gitId":"idgrr"},"content":"    participant Model","lastModifiedDate":"2021-10-25"},{"lineNumber":42,"author":{"gitId":"idgrr"},"content":"end box","lastModifiedDate":"2021-10-25"},{"lineNumber":43,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":44,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":45,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":46,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":47,"author":{"gitId":"idgrr"},"content":"MainWindow -\u003e Logic: importData()","lastModifiedDate":"2021-10-20"},{"lineNumber":48,"author":{"gitId":"idgrr"},"content":"Logic -\u003e StorageManager: importIntoAddressBook(model)","lastModifiedDate":"2021-10-25"},{"lineNumber":49,"author":{"gitId":"idgrr"},"content":"StorageManager -\u003e CsvAddressBookImportExport: importIntoAddressBook(model)","lastModifiedDate":"2021-10-25"},{"lineNumber":50,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":51,"author":{"gitId":"idgrr"},"content":"CsvAddressBookImportExport -\u003e CsvUtil: readCsvFile(filepath)","lastModifiedDate":"2021-10-20"},{"lineNumber":52,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":53,"author":{"gitId":"idgrr"},"content":"return  optional(list of valid people)","lastModifiedDate":"2021-11-05"},{"lineNumber":54,"author":{"gitId":"idgrr"},"content":"CsvAddressBookImportExport -\u003e CsvAddressBookImportExport: addImportIntoAddressBook(list, model)","lastModifiedDate":"2021-10-20"},{"lineNumber":55,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":56,"author":{"gitId":"idgrr"},"content":"loop Number of valid people","lastModifiedDate":"2021-10-25"},{"lineNumber":57,"author":{"gitId":"idgrr"},"content":"    CsvAddressBookImportExport  -\u003e Model : duplicateIndex()","lastModifiedDate":"2021-10-25"},{"lineNumber":58,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":59,"author":{"gitId":"idgrr"},"content":"    return int of duplicate in list","lastModifiedDate":"2021-11-05"},{"lineNumber":60,"author":{"gitId":"idgrr"},"content":"    alt Import does not has duplicate in current database","lastModifiedDate":"2021-10-25"},{"lineNumber":61,"author":{"gitId":"idgrr"},"content":"        CsvAddressBookImportExport -\u003e  Model: addPerson(person)","lastModifiedDate":"2021-10-20"},{"lineNumber":62,"author":{"gitId":"idgrr"},"content":"    else Import has duplicate in current database","lastModifiedDate":"2021-10-25"},{"lineNumber":63,"author":{"gitId":"idgrr"},"content":"        alt import duplicate has been called","lastModifiedDate":"2021-10-20"},{"lineNumber":64,"author":{"gitId":"idgrr"},"content":"                    CsvAddressBookImportExport -\u003e  Model: updatePerson(index, person)","lastModifiedDate":"2021-10-20"},{"lineNumber":65,"author":{"gitId":"idgrr"},"content":"        end","lastModifiedDate":"2021-10-25"},{"lineNumber":66,"author":{"gitId":"idgrr"},"content":"    end","lastModifiedDate":"2021-10-20"},{"lineNumber":67,"author":{"gitId":"idgrr"},"content":"    end","lastModifiedDate":"2021-10-20"},{"lineNumber":68,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":69,"author":{"gitId":"idgrr"},"content":"Logic -\u003e Model: getAddressbook()","lastModifiedDate":"2021-10-20"},{"lineNumber":70,"author":{"gitId":"idgrr"},"content":"Logic -\u003e StorageManager: saveAddressbook(model)","lastModifiedDate":"2021-10-25"},{"lineNumber":71,"author":{"gitId":"idgrr"},"content":"Logic -\u003e StorageManager: getImportStatus()","lastModifiedDate":"2021-10-25"},{"lineNumber":72,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":73,"author":{"gitId":"idgrr"},"content":"return status details","lastModifiedDate":"2021-11-05"},{"lineNumber":74,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":75,"author":{"gitId":"idgrr"},"content":"@enduml","lastModifiedDate":"2021-10-20"}],"authorContributionMap":{"idgrr":75}},{"path":"docs/diagrams/ImportDecision.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"idgrr"},"content":"@startuml","lastModifiedDate":"2021-10-25"},{"lineNumber":2,"author":{"gitId":"idgrr"},"content":"\u0027https://plantuml.com/activity-diagram-beta","lastModifiedDate":"2021-10-25"},{"lineNumber":3,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":4,"author":{"gitId":"idgrr"},"content":"start","lastModifiedDate":"2021-10-25"},{"lineNumber":5,"author":{"gitId":"idgrr"},"content":"if () then ([else])","lastModifiedDate":"2021-11-08"},{"lineNumber":6,"author":{"gitId":"idgrr"},"content":"  if () then ([Add on import])","lastModifiedDate":"2021-11-03"},{"lineNumber":7,"author":{"gitId":"idgrr"},"content":"    :Adds on new imports \\ninto existing database;","lastModifiedDate":"2021-10-25"},{"lineNumber":8,"author":{"gitId":"idgrr"},"content":"  else ( [Start new with import] )","lastModifiedDate":"2021-11-03"},{"lineNumber":9,"author":{"gitId":"idgrr"},"content":"      :Exports and reset the current database.\\nCMM will then populate the reset database with new imports;","lastModifiedDate":"2021-10-25"},{"lineNumber":10,"author":{"gitId":"idgrr"},"content":"  endif","lastModifiedDate":"2021-10-25"},{"lineNumber":11,"author":{"gitId":"idgrr"},"content":"else ([Don\u0027t import])","lastModifiedDate":"2021-11-03"},{"lineNumber":12,"author":{"gitId":"idgrr"},"content":"    :CMM will not import anything;","lastModifiedDate":"2021-10-25"},{"lineNumber":13,"author":{"gitId":"idgrr"},"content":"endif","lastModifiedDate":"2021-10-25"},{"lineNumber":14,"author":{"gitId":"idgrr"},"content":"- CMM starts up normally","lastModifiedDate":"2021-10-25"},{"lineNumber":15,"author":{"gitId":"idgrr"},"content":"stop","lastModifiedDate":"2021-10-25"},{"lineNumber":16,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":17,"author":{"gitId":"idgrr"},"content":"@enduml","lastModifiedDate":"2021-10-25"}],"authorContributionMap":{"idgrr":17}},{"path":"docs/diagrams/LogicClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor LOGIC_COLOR_T4","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"package Logic {","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"Class AddressBookParser","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"Class XYZCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"Class CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"Class \"{abstract}\\nCommand\" as Command","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"Interface Logic \u003c\u003cInterface\u003e\u003e","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"Class LogicManager","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"package Model{","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"Class HiddenModel #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"package Storage{","lastModifiedDate":"2021-03-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-03-30"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":26,"author":{"gitId":"idgrr"},"content":"package ImportExport{","lastModifiedDate":"2021-10-20"},{"lineNumber":27,"author":{"gitId":"idgrr"},"content":"}","lastModifiedDate":"2021-10-20"},{"lineNumber":28,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":29,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"HiddenOutside ..\u003e Logic","lastModifiedDate":"2019-07-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"LogicManager .right.|\u003e Logic","lastModifiedDate":"2021-07-31"},{"lineNumber":33,"author":{"gitId":"-"},"content":"LogicManager -right-\u003e\"1\" AddressBookParser","lastModifiedDate":"2021-07-31"},{"lineNumber":34,"author":{"gitId":"-"},"content":"AddressBookParser ..\u003e XYZCommand : creates \u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"XYZCommand -up-|\u003e Command","lastModifiedDate":"2019-07-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"LogicManager .left.\u003e Command : executes \u003e","lastModifiedDate":"2019-07-30"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":39,"author":{"gitId":"-"},"content":"LogicManager --\u003e Model","lastModifiedDate":"2019-07-03"},{"lineNumber":40,"author":{"gitId":"-"},"content":"LogicManager --\u003e Storage","lastModifiedDate":"2021-03-30"},{"lineNumber":41,"author":{"gitId":"idgrr"},"content":"LogicManager --\u003e ImportExport","lastModifiedDate":"2021-10-20"},{"lineNumber":42,"author":{"gitId":"-"},"content":"Storage --[hidden] Model","lastModifiedDate":"2021-03-30"},{"lineNumber":43,"author":{"gitId":"-"},"content":"Command .[hidden]up.\u003e Storage","lastModifiedDate":"2021-03-30"},{"lineNumber":44,"author":{"gitId":"-"},"content":"Command .right.\u003e Model","lastModifiedDate":"2019-07-03"},{"lineNumber":45,"author":{"gitId":"-"},"content":"note right of XYZCommand: XYZCommand \u003d AddCommand, \\nFindCommand, etc","lastModifiedDate":"2019-07-03"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":47,"author":{"gitId":"-"},"content":"Logic ..\u003e CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":48,"author":{"gitId":"-"},"content":"LogicManager .down.\u003e CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":49,"author":{"gitId":"-"},"content":"Command .up.\u003e CommandResult : produces \u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":50,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"idgrr":4,"-":46}},{"path":"docs/diagrams/ModelClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Package Model \u003c\u003cRectangle\u003e\u003e{","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"Interface ReadOnlyAddressBook \u003c\u003cInterface\u003e\u003e","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"Interface ReadOnlyUserPrefs \u003c\u003cInterface\u003e\u003e","lastModifiedDate":"2021-05-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"Interface Model \u003c\u003cInterface\u003e\u003e","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"Class AddressBook","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"Class ReadOnlyAddressBook","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"Class Model","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"Class ModelManager","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"Class UserPrefs","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"Class ReadOnlyUserPrefs","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Class UniquePersonList","lastModifiedDate":"2021-07-31"},{"lineNumber":20,"author":{"gitId":"-"},"content":"Class Person","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"Class Address","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"Class Email","lastModifiedDate":"2019-07-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"Class Name","lastModifiedDate":"2019-07-03"},{"lineNumber":24,"author":{"gitId":"houtenteo"},"content":"Class isCalled","lastModifiedDate":"2021-11-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"Class Phone","lastModifiedDate":"2019-07-03"},{"lineNumber":26,"author":{"gitId":"houtenteo"},"content":"Class Gender","lastModifiedDate":"2021-10-20"},{"lineNumber":27,"author":{"gitId":"houtenteo"},"content":"Class Age","lastModifiedDate":"2021-10-20"},{"lineNumber":28,"author":{"gitId":"houtenteo"},"content":"Class InterestsList","lastModifiedDate":"2021-10-20"},{"lineNumber":29,"author":{"gitId":"houtenteo"},"content":"Class Interest","lastModifiedDate":"2021-10-20"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"HiddenOutside ..\u003e Model","lastModifiedDate":"2019-07-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"AddressBook .up.|\u003e ReadOnlyAddressBook","lastModifiedDate":"2019-07-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"ModelManager .up.|\u003e Model","lastModifiedDate":"2019-07-03"},{"lineNumber":38,"author":{"gitId":"-"},"content":"Model .right.\u003e ReadOnlyUserPrefs","lastModifiedDate":"2021-07-31"},{"lineNumber":39,"author":{"gitId":"-"},"content":"Model .left.\u003e ReadOnlyAddressBook","lastModifiedDate":"2021-07-31"},{"lineNumber":40,"author":{"gitId":"-"},"content":"ModelManager -left-\u003e \"1\" AddressBook","lastModifiedDate":"2021-07-31"},{"lineNumber":41,"author":{"gitId":"-"},"content":"ModelManager -right-\u003e \"1\" UserPrefs","lastModifiedDate":"2021-07-31"},{"lineNumber":42,"author":{"gitId":"-"},"content":"UserPrefs .up.|\u003e ReadOnlyUserPrefs","lastModifiedDate":"2019-07-03"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":44,"author":{"gitId":"-"},"content":"AddressBook *--\u003e \"1\" UniquePersonList","lastModifiedDate":"2019-07-30"},{"lineNumber":45,"author":{"gitId":"-"},"content":"UniquePersonList --\u003e \"~* all\" Person","lastModifiedDate":"2021-07-31"},{"lineNumber":46,"author":{"gitId":"-"},"content":"Person *--\u003e Name","lastModifiedDate":"2019-07-03"},{"lineNumber":47,"author":{"gitId":"houtenteo"},"content":"Person *---\u003e Phone","lastModifiedDate":"2021-11-06"},{"lineNumber":48,"author":{"gitId":"-"},"content":"Person *--\u003e Email","lastModifiedDate":"2019-07-03"},{"lineNumber":49,"author":{"gitId":"houtenteo"},"content":"Person *---\u003e isCalled","lastModifiedDate":"2021-11-06"},{"lineNumber":50,"author":{"gitId":"-"},"content":"Person *--\u003e Address","lastModifiedDate":"2019-07-03"},{"lineNumber":51,"author":{"gitId":"houtenteo"},"content":"Person *---\u003e Gender","lastModifiedDate":"2021-11-06"},{"lineNumber":52,"author":{"gitId":"Kangxun"},"content":"Person *---\u003e Age","lastModifiedDate":"2021-11-08"},{"lineNumber":53,"author":{"gitId":"houtenteo"},"content":"Person *--\u003e InterestsList","lastModifiedDate":"2021-10-20"},{"lineNumber":54,"author":{"gitId":"houtenteo"},"content":"InterestsList *--\u003e \"*\" Interest","lastModifiedDate":"2021-10-20"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":56,"author":{"gitId":"-"},"content":"Name -[hidden]right-\u003e Phone","lastModifiedDate":"2019-07-03"},{"lineNumber":57,"author":{"gitId":"-"},"content":"Phone -[hidden]right-\u003e Address","lastModifiedDate":"2019-07-03"},{"lineNumber":58,"author":{"gitId":"-"},"content":"Address -[hidden]right-\u003e Email","lastModifiedDate":"2019-07-03"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":60,"author":{"gitId":"-"},"content":"ModelManager --\u003e\"~* filtered\" Person","lastModifiedDate":"2021-07-31"},{"lineNumber":61,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"houtenteo":10,"-":50,"Kangxun":1}},{"path":"docs/diagrams/StorageClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2021-10-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2021-10-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2021-10-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam arrowColor STORAGE_COLOR","lastModifiedDate":"2021-10-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor STORAGE_COLOR","lastModifiedDate":"2021-10-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"package Storage{","lastModifiedDate":"2021-10-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"package \"UserPrefs Storage\" #F4F6F6{","lastModifiedDate":"2021-10-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"Interface UserPrefsStorage \u003c\u003cInterface\u003e\u003e","lastModifiedDate":"2021-10-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"Class JsonUserPrefsStorage","lastModifiedDate":"2021-10-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-10-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"Interface Storage \u003c\u003cInterface\u003e\u003e","lastModifiedDate":"2021-10-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"Class StorageManager","lastModifiedDate":"2021-10-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"package \"AddressBook Storage\" #F4F6F6{","lastModifiedDate":"2021-10-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Interface AddressBookStorage \u003c\u003cInterface\u003e\u003e","lastModifiedDate":"2021-10-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"Class JsonAddressBookStorage","lastModifiedDate":"2021-10-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"Class JsonSerializableAddressBook","lastModifiedDate":"2021-10-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"Class JsonAdaptedPerson","lastModifiedDate":"2021-10-25"},{"lineNumber":23,"author":{"gitId":"idgrr"},"content":"Class JsonAdaptedInterest","lastModifiedDate":"2021-11-07"},{"lineNumber":24,"author":{"gitId":"idgrr"},"content":"}","lastModifiedDate":"2021-10-25"},{"lineNumber":25,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":26,"author":{"gitId":"idgrr"},"content":"package \"ImportExport Storage\" #F4F6F6{","lastModifiedDate":"2021-10-25"},{"lineNumber":27,"author":{"gitId":"idgrr"},"content":"Interface ImportExport \u003c\u003cInterface\u003e\u003e","lastModifiedDate":"2021-11-07"},{"lineNumber":28,"author":{"gitId":"idgrr"},"content":"Class CsvAddressBookImportExport","lastModifiedDate":"2021-11-07"},{"lineNumber":29,"author":{"gitId":"idgrr"},"content":"Class CsvAdaptedPerson","lastModifiedDate":"2021-10-25"},{"lineNumber":30,"author":{"gitId":"idgrr"},"content":"Class CsvAdaptedInterest","lastModifiedDate":"2021-10-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-10-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-10-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2021-10-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"HiddenOutside ..\u003e Storage","lastModifiedDate":"2021-10-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"StorageManager .up.|\u003e Storage","lastModifiedDate":"2021-10-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"StorageManager -up-\u003e \"1\" UserPrefsStorage","lastModifiedDate":"2021-10-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"StorageManager -up-\u003e \"1\" AddressBookStorage","lastModifiedDate":"2021-10-25"},{"lineNumber":41,"author":{"gitId":"idgrr"},"content":"StorageManager -down-\u003e \"1\" ImportExport","lastModifiedDate":"2021-11-07"},{"lineNumber":42,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":43,"author":{"gitId":"idgrr"},"content":"Storage -down-|\u003e UserPrefsStorage","lastModifiedDate":"2021-10-25"},{"lineNumber":44,"author":{"gitId":"idgrr"},"content":"Storage -down-|\u003e AddressBookStorage","lastModifiedDate":"2021-10-25"},{"lineNumber":45,"author":{"gitId":"idgrr"},"content":"Storage -down-|\u003e ImportExport","lastModifiedDate":"2021-11-07"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":47,"author":{"gitId":"idgrr"},"content":"CsvAddressBookImportExport .up.|\u003e ImportExport","lastModifiedDate":"2021-11-07"},{"lineNumber":48,"author":{"gitId":"idgrr"},"content":"CsvAddressBookImportExport  --\u003e \"*\" CsvAdaptedPerson","lastModifiedDate":"2021-11-07"},{"lineNumber":49,"author":{"gitId":"idgrr"},"content":"CsvAdaptedPerson  --\u003e \"*\" CsvAdaptedInterest","lastModifiedDate":"2021-10-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"JsonUserPrefsStorage .up.|\u003e UserPrefsStorage","lastModifiedDate":"2021-10-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"JsonAddressBookStorage .up.|\u003e AddressBookStorage","lastModifiedDate":"2021-10-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"JsonAddressBookStorage ..\u003e JsonSerializableAddressBook","lastModifiedDate":"2021-10-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"JsonSerializableAddressBook --\u003e \"*\" JsonAdaptedPerson","lastModifiedDate":"2021-10-25"},{"lineNumber":55,"author":{"gitId":"idgrr"},"content":"JsonAdaptedPerson --\u003e \"*\" JsonAdaptedInterest","lastModifiedDate":"2021-11-07"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2021-10-25"}],"authorContributionMap":{"idgrr":18,"-":39}},{"path":"docs/diagrams/UiClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor UI_COLOR_T4","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor UI_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"package UI \u003c\u003cRectangle\u003e\u003e{","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"Interface Ui \u003c\u003cInterface\u003e\u003e","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"Class \"{abstract}\\nUiPart\" as UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"Class UiManager","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"Class MainWindow","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"Class HelpWindow","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"Class ResultDisplay","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"Class PersonListPanel","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"Class PersonCard","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"Class StatusBarFooter","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Class CommandBox","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"houtenteo"},"content":"Class FullPersonCard","lastModifiedDate":"2021-10-20"},{"lineNumber":19,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"package Model \u003c\u003cRectangle\u003e\u003e {","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"Class HiddenModel #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"package Logic \u003c\u003cRectangle\u003e\u003e {","lastModifiedDate":"2019-07-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"Class HiddenLogic #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"HiddenOutside ..\u003e Ui","lastModifiedDate":"2019-07-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"UiManager .left.|\u003e Ui","lastModifiedDate":"2019-07-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"UiManager -down-\u003e \"1\" MainWindow","lastModifiedDate":"2021-07-31"},{"lineNumber":34,"author":{"gitId":"-"},"content":"MainWindow *-down-\u003e  \"1\" CommandBox","lastModifiedDate":"2021-07-31"},{"lineNumber":35,"author":{"gitId":"-"},"content":"MainWindow *-down-\u003e \"1\" ResultDisplay","lastModifiedDate":"2021-07-31"},{"lineNumber":36,"author":{"gitId":"-"},"content":"MainWindow *-down-\u003e \"1\" PersonListPanel","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"MainWindow *-down-\u003e \"1\" StatusBarFooter","lastModifiedDate":"2021-07-31"},{"lineNumber":38,"author":{"gitId":"houtenteo"},"content":"MainWindow *-down-\u003e \"1\" FullPersonCard","lastModifiedDate":"2021-10-20"},{"lineNumber":39,"author":{"gitId":"-"},"content":"MainWindow --\u003e \"0..1\" HelpWindow","lastModifiedDate":"2021-07-31"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":41,"author":{"gitId":"-"},"content":"PersonListPanel -down-\u003e \"*\" PersonCard","lastModifiedDate":"2021-07-31"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":43,"author":{"gitId":"-"},"content":"MainWindow -left-|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":45,"author":{"gitId":"-"},"content":"ResultDisplay --|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":46,"author":{"gitId":"-"},"content":"CommandBox --|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":47,"author":{"gitId":"-"},"content":"PersonListPanel --|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":48,"author":{"gitId":"-"},"content":"PersonCard --|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":49,"author":{"gitId":"-"},"content":"StatusBarFooter --|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":50,"author":{"gitId":"-"},"content":"HelpWindow --|\u003e UiPart","lastModifiedDate":"2021-07-31"},{"lineNumber":51,"author":{"gitId":"houtenteo"},"content":"FullPersonCard --|\u003e UiPart","lastModifiedDate":"2021-10-20"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":53,"author":{"gitId":"-"},"content":"PersonCard ..\u003e Model","lastModifiedDate":"2019-07-03"},{"lineNumber":54,"author":{"gitId":"-"},"content":"UiManager -right-\u003e Logic","lastModifiedDate":"2019-07-03"},{"lineNumber":55,"author":{"gitId":"-"},"content":"MainWindow -left-\u003e Logic","lastModifiedDate":"2019-07-03"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":57,"author":{"gitId":"houtenteo"},"content":"PersonListPanel -[hidden]left- FullPersonCard","lastModifiedDate":"2021-10-20"},{"lineNumber":58,"author":{"gitId":"houtenteo"},"content":"FullPersonCard -[hidden]left- HelpWindow","lastModifiedDate":"2021-10-20"},{"lineNumber":59,"author":{"gitId":"-"},"content":"HelpWindow -[hidden]left- CommandBox","lastModifiedDate":"2019-07-03"},{"lineNumber":60,"author":{"gitId":"-"},"content":"CommandBox -[hidden]left- ResultDisplay","lastModifiedDate":"2019-07-03"},{"lineNumber":61,"author":{"gitId":"-"},"content":"ResultDisplay -[hidden]left- StatusBarFooter","lastModifiedDate":"2019-07-30"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":63,"author":{"gitId":"-"},"content":"MainWindow -[hidden]-|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":64,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"houtenteo":5,"-":59}},{"path":"docs/index.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"Kangxun"},"content":"title: CallMeMaybe","lastModifiedDate":"2021-10-02"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"Kangxun"},"content":"[![CI Status](https://github.com/AY2122S1-CS2103T-T13-4/tp/workflows/Java%20CI/badge.svg)](https://github.com/AY2122S1-CS2103T-T13-4/tp/actions)","lastModifiedDate":"2021-10-02"},{"lineNumber":7,"author":{"gitId":"houtenteo"},"content":"[![codecov](https://codecov.io/gh/AY2122S1-CS2103T-T13-4/tp/branch/master/graph/badge.svg?token\u003dFCSNKTFDO1)](https://codecov.io/gh/AY2122S1-CS2103T-T13-4/tp)","lastModifiedDate":"2021-09-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"![Ui](images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"Kangxun"},"content":"**CallMeMaybe is a desktop application _developed for freelance telemarketers_.** While it has a GUI, most of the user interactions happen using a CLI (Command Line Interface).","lastModifiedDate":"2021-10-02"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"Kangxun"},"content":"* If you are interested in using CallMeMaybe, head over to the [_Quick Start_ section of the **User Guide**](UserGuide.html#quick-start).","lastModifiedDate":"2021-10-02"},{"lineNumber":14,"author":{"gitId":"Kangxun"},"content":"* If you are interested about developing CallMeMaybe, the [**Developer Guide**](DeveloperGuide.html) is a good place to start.","lastModifiedDate":"2021-10-02"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"**Acknowledgements**","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"* Libraries used: [JavaFX](https://openjfx.io/), [Jackson](https://github.com/FasterXML/jackson), [JUnit5](https://github.com/junit-team/junit5)","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"houtenteo":1,"-":12,"Kangxun":5}},{"path":"docs/team/houtenteo.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"houtenteo"},"content":"---","lastModifiedDate":"2021-11-02"},{"lineNumber":2,"author":{"gitId":"houtenteo"},"content":"layout: page","lastModifiedDate":"2021-11-02"},{"lineNumber":3,"author":{"gitId":"houtenteo"},"content":"title: Houten Teo\u0027s Project Portfolio Page","lastModifiedDate":"2021-11-02"},{"lineNumber":4,"author":{"gitId":"houtenteo"},"content":"---","lastModifiedDate":"2021-11-02"},{"lineNumber":5,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":6,"author":{"gitId":"houtenteo"},"content":"### Project: CallMeMaybe(CMM)","lastModifiedDate":"2021-11-02"},{"lineNumber":7,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":8,"author":{"gitId":"houtenteo"},"content":"CallMeMaybe is a desktop application developed for freelance telemarketers.","lastModifiedDate":"2021-11-02"},{"lineNumber":9,"author":{"gitId":"houtenteo"},"content":"While it has a GUI, most of the user interactions happen using a CLI (Command Line Interface).","lastModifiedDate":"2021-11-02"},{"lineNumber":10,"author":{"gitId":"houtenteo"},"content":"The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java, and has about 15 kLoC.","lastModifiedDate":"2021-11-02"},{"lineNumber":11,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":12,"author":{"gitId":"houtenteo"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2021-11-02"},{"lineNumber":13,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":14,"author":{"gitId":"houtenteo"},"content":"* **findAll command**: Added the ability for users to search for all contacts that match all the keywords specified.","lastModifiedDate":"2021-11-02"},{"lineNumber":15,"author":{"gitId":"houtenteo"},"content":"    * What it does: Allows the user to search multiple fields at once. For example, the person can search for a particular name","lastModifiedDate":"2021-11-02"},{"lineNumber":16,"author":{"gitId":"houtenteo"},"content":"and address. The command will only return contacts that match **BOTH** the name and address. If a contact only matches one of the field,","lastModifiedDate":"2021-11-02"},{"lineNumber":17,"author":{"gitId":"houtenteo"},"content":"it would not be returned.","lastModifiedDate":"2021-11-02"},{"lineNumber":18,"author":{"gitId":"houtenteo"},"content":"    * Justification: This feature improves the product significantly because often times as a telemarketer, you are looking to narrow","lastModifiedDate":"2021-11-02"},{"lineNumber":19,"author":{"gitId":"houtenteo"},"content":"down your target demographic in order to best sell your product. Therefore, this function offers them a quick way to easily find","lastModifiedDate":"2021-11-02"},{"lineNumber":20,"author":{"gitId":"houtenteo"},"content":"all contacts that match all the descriptions of their target demographic.","lastModifiedDate":"2021-11-02"},{"lineNumber":21,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":22,"author":{"gitId":"houtenteo"},"content":"* **Code contributed**: [RepoSense link](https://nus-cs2103-ay2122s1.github.io/tp-dashboard/?search\u003d\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026breakdown\u003dtrue\u0026checkedFileTypes\u003ddocs~functional-code~test-code~other\u0026since\u003d2021-09-17\u0026tabOpen\u003dtrue\u0026tabType\u003dauthorship\u0026tabAuthor\u003dhoutenteo\u0026tabRepo\u003dAY2122S1-CS2103T-T13-4%2Ftp%5Bmaster%5D\u0026authorshipIsMergeGroup\u003dfalse\u0026authorshipFileTypes\u003ddocs~functional-code~test-code~other\u0026authorshipIsBinaryFileTypeChecked\u003dfalse\u0026zFR\u003dfalse)","lastModifiedDate":"2021-11-02"},{"lineNumber":23,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":24,"author":{"gitId":"houtenteo"},"content":"* **Project management**:","lastModifiedDate":"2021-11-02"},{"lineNumber":25,"author":{"gitId":"houtenteo"},"content":"    * Managed releases `v1.1` - `v1.4rc` (4 releases) on GitHub","lastModifiedDate":"2021-11-02"},{"lineNumber":26,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":27,"author":{"gitId":"houtenteo"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2021-11-02"},{"lineNumber":28,"author":{"gitId":"houtenteo"},"content":"    * Updated the GUI to show a `FullPersonCard` (Pull requests [#52](https://github.com/AY2122S1-CS2103T-T13-4/tp/pull/52) [\\#75](https://github.com/AY2122S1-CS2103T-T13-4/tp/pull/75))","lastModifiedDate":"2021-11-02"},{"lineNumber":29,"author":{"gitId":"houtenteo"},"content":"    * Improved the original `add` command to allow users to add in more optional fields. (Pull requests [#78](https://github.com/AY2122S1-CS2103T-T13-4/tp/pull/78))","lastModifiedDate":"2021-11-02"},{"lineNumber":30,"author":{"gitId":"houtenteo"},"content":"    * Updated the original `find` command to allow users to search for contacts thought more than 1 field.","lastModifiedDate":"2021-11-02"},{"lineNumber":31,"author":{"gitId":"houtenteo"},"content":"Originally, contacts could only be searched by name. Now they can be searched using `name`, `phone`, `email`, `gender`, `age`, `address`","lastModifiedDate":"2021-11-02"},{"lineNumber":32,"author":{"gitId":"houtenteo"},"content":"`isDone`, `interest`. (Pull requests [#128](https://github.com/AY2122S1-CS2103T-T13-4/tp/pull/128))","lastModifiedDate":"2021-11-02"},{"lineNumber":33,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":34,"author":{"gitId":"houtenteo"},"content":"* **Documentation**:","lastModifiedDate":"2021-11-02"},{"lineNumber":35,"author":{"gitId":"houtenteo"},"content":"    * User Guide:","lastModifiedDate":"2021-11-02"},{"lineNumber":36,"author":{"gitId":"houtenteo"},"content":"        * Added documentation for the features `add`, `display`, `edit` `findAny`, `findAll`, `csv import/export`","lastModifiedDate":"2021-11-02"},{"lineNumber":37,"author":{"gitId":"houtenteo"},"content":"    [\\#95](https://github.com/AY2122S1-CS2103T-T13-4/tp/pull/95), [#110](https://github.com/AY2122S1-CS2103T-T13-4/tp/pull/110),","lastModifiedDate":"2021-11-02"},{"lineNumber":38,"author":{"gitId":"houtenteo"},"content":"    [#111](https://github.com/AY2122S1-CS2103T-T13-4/tp/pull/111), [#114](https://github.com/AY2122S1-CS2103T-T13-4/tp/pull/114),","lastModifiedDate":"2021-11-02"},{"lineNumber":39,"author":{"gitId":"houtenteo"},"content":"    [#115](https://github.com/AY2122S1-CS2103T-T13-4/tp/pull/115), [#116](https://github.com/AY2122S1-CS2103T-T13-4/tp/pull/116),","lastModifiedDate":"2021-11-02"},{"lineNumber":40,"author":{"gitId":"houtenteo"},"content":"    [#117](https://github.com/AY2122S1-CS2103T-T13-4/tp/pull/117), [\\#118](https://github.com/AY2122S1-CS2103T-T13-4/tp/pull/118),","lastModifiedDate":"2021-11-02"},{"lineNumber":41,"author":{"gitId":"houtenteo"},"content":"    [#119](https://github.com/AY2122S1-CS2103T-T13-4/tp/pull/119/files)","lastModifiedDate":"2021-11-02"},{"lineNumber":42,"author":{"gitId":"houtenteo"},"content":"    * Developer Guide:","lastModifiedDate":"2021-11-02"},{"lineNumber":43,"author":{"gitId":"houtenteo"},"content":"        * Added implementation details of the `add` feature. [#89](https://github.com/AY2122S1-CS2103T-T13-4/tp/pull/89)","lastModifiedDate":"2021-11-02"},{"lineNumber":44,"author":{"gitId":"houtenteo"},"content":"        * Updated the diagrams for the model and Ui portions. [#93](https://github.com/AY2122S1-CS2103T-T13-4/tp/pull/93)","lastModifiedDate":"2021-11-02"},{"lineNumber":45,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":46,"author":{"gitId":"houtenteo"},"content":"* **Community**:","lastModifiedDate":"2021-11-02"},{"lineNumber":47,"author":{"gitId":"houtenteo"},"content":"    * PRs reviewed (with non-trivial review comments): [#67](https://github.com/AY2122S1-CS2103T-T13-4/tp/pull/67), [\\#107](https://github.com/AY2122S1-CS2103T-T13-4/tp/pull/107), [\\#122](https://github.com/AY2122S1-CS2103T-T13-4/tp/pull/122),","lastModifiedDate":"2021-11-02"},{"lineNumber":48,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-11-02"}],"authorContributionMap":{"houtenteo":48}},{"path":"docs/team/idgrr.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"idgrr"},"content":"---","lastModifiedDate":"2021-09-18"},{"lineNumber":2,"author":{"gitId":"idgrr"},"content":"layout: page","lastModifiedDate":"2021-09-18"},{"lineNumber":3,"author":{"gitId":"idgrr"},"content":"title: Irfan\u0027s Project Portfolio Page","lastModifiedDate":"2021-09-18"},{"lineNumber":4,"author":{"gitId":"idgrr"},"content":"---","lastModifiedDate":"2021-09-18"},{"lineNumber":5,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":6,"author":{"gitId":"idgrr"},"content":"### Project: CallMeMaybe","lastModifiedDate":"2021-11-02"},{"lineNumber":7,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":8,"author":{"gitId":"idgrr"},"content":"CallMeMaybe (CMM) is a **desktop app** centered for Telemarketers in aiding them in customer contact management.","lastModifiedDate":"2021-11-02"},{"lineNumber":9,"author":{"gitId":"idgrr"},"content":"The in-built tracking functionality serves as a reminder to reach back on previously unreachable customers.","lastModifiedDate":"2021-11-02"},{"lineNumber":10,"author":{"gitId":"idgrr"},"content":"Importing and exporting of existing customer database is also supported by CMM to facilitate team-based environments.","lastModifiedDate":"2021-11-02"},{"lineNumber":11,"author":{"gitId":"idgrr"},"content":"The user interacts with it using a CLI, and it has a GUI created with JavaFX. This is written in Java, and has about","lastModifiedDate":"2021-11-05"},{"lineNumber":12,"author":{"gitId":"idgrr"},"content":"10 kLoC. The development of this software was used as a medium for students to apply Software Engineering principles","lastModifiedDate":"2021-11-08"},{"lineNumber":13,"author":{"gitId":"idgrr"},"content":"taught during the Software Engineering Module CS2103T.","lastModifiedDate":"2021-11-03"},{"lineNumber":14,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":15,"author":{"gitId":"idgrr"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2021-09-18"},{"lineNumber":16,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":17,"author":{"gitId":"idgrr"},"content":"* **New Major Feature**: Added Importing functionality","lastModifiedDate":"2021-11-08"},{"lineNumber":18,"author":{"gitId":"idgrr"},"content":"  * **What it does:**\u003cbr\u003e","lastModifiedDate":"2021-11-08"},{"lineNumber":19,"author":{"gitId":"idgrr"},"content":"      * Allows users to import contacts into CMM\u0027s database quickly. CMM currently imports from Excel Files only","lastModifiedDate":"2021-11-08"},{"lineNumber":20,"author":{"gitId":"idgrr"},"content":"  * **Justification:**\u003cbr\u003e","lastModifiedDate":"2021-11-08"},{"lineNumber":21,"author":{"gitId":"idgrr"},"content":"      * Based on the user story, a telemarketer receives his/her daily call list in an Excel sheet. This means that quickly","lastModifiedDate":"2021-11-08"},{"lineNumber":22,"author":{"gitId":"idgrr"},"content":"        importing long list of contacts is crucial","lastModifiedDate":"2021-11-08"},{"lineNumber":23,"author":{"gitId":"idgrr"},"content":"      * This  function allows user to import multiple people at once, as compared to adding in contacts individually","lastModifiedDate":"2021-11-08"},{"lineNumber":24,"author":{"gitId":"idgrr"},"content":"        (previously the two options were to either learn json or to manually input all the data using the add function)","lastModifiedDate":"2021-11-07"},{"lineNumber":25,"author":{"gitId":"idgrr"},"content":"  * **Highlights:** \u003cbr\u003e","lastModifiedDate":"2021-11-08"},{"lineNumber":26,"author":{"gitId":"idgrr"},"content":"      * This enhancement required a deep understanding of CMM components, primarily the Storage component ","lastModifiedDate":"2021-11-08"},{"lineNumber":27,"author":{"gitId":"idgrr"},"content":"      * This enhancement required understanding in parser components, primarily `FileUtil`","lastModifiedDate":"2021-11-08"},{"lineNumber":28,"author":{"gitId":"idgrr"},"content":"      * This enhancement required good use of logging as there are multiple contacts being imported and error displayed","lastModifiedDate":"2021-11-08"},{"lineNumber":29,"author":{"gitId":"idgrr"},"content":"        on the feedback box would be too long for user to read/scroll through","lastModifiedDate":"2021-11-08"},{"lineNumber":30,"author":{"gitId":"idgrr"},"content":"      * This enhancement involves modifications in `UI`, `Logic` , `Storage`, `Model` and `Commons`","lastModifiedDate":"2021-11-08"},{"lineNumber":31,"author":{"gitId":"idgrr"},"content":"      * Crucial for the feature to import only valid contacts from the CSV file","lastModifiedDate":"2021-11-08"},{"lineNumber":32,"author":{"gitId":"idgrr"},"content":"      * The implementation was challenging as it required constant updating and tweaking as the team\u0027s definition of a ","lastModifiedDate":"2021-11-08"},{"lineNumber":33,"author":{"gitId":"idgrr"},"content":"        valid person to be imported constantly changed throughout the project","lastModifiedDate":"2021-11-08"},{"lineNumber":34,"author":{"gitId":"idgrr"},"content":"  * **Credits:**\u003cbr\u003e","lastModifiedDate":"2021-11-08"},{"lineNumber":35,"author":{"gitId":"idgrr"},"content":"      * The previous iteration CallMeMaybe (AddressBookLevel3) \u0027s JSON storage architecture helped me structure","lastModifiedDate":"2021-11-08"},{"lineNumber":36,"author":{"gitId":"idgrr"},"content":"        my Import feature. This taught me how to follow an existing architectural style while implementing a new","lastModifiedDate":"2021-11-08"},{"lineNumber":37,"author":{"gitId":"idgrr"},"content":"        feature. It also helped me rethink the way I approach code abstractions.","lastModifiedDate":"2021-11-08"},{"lineNumber":38,"author":{"gitId":"idgrr"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-11-08"},{"lineNumber":39,"author":{"gitId":"idgrr"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-11-08"},{"lineNumber":40,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":41,"author":{"gitId":"idgrr"},"content":"* **New Major Feature**: Added Exporting functionality","lastModifiedDate":"2021-11-08"},{"lineNumber":42,"author":{"gitId":"idgrr"},"content":"  * **What it does:** \u003cbr\u003e","lastModifiedDate":"2021-11-08"},{"lineNumber":43,"author":{"gitId":"idgrr"},"content":"      * Allows users to export contacts found in CMM\u0027s database quickly. CMM currently export to Excel Files only","lastModifiedDate":"2021-11-08"},{"lineNumber":44,"author":{"gitId":"idgrr"},"content":"  * **Justification:** \u003cbr\u003e","lastModifiedDate":"2021-11-08"},{"lineNumber":45,"author":{"gitId":"idgrr"},"content":"      * Based on the user story, a telemarketer returns the daily call list in an Excel sheet to the manager. This means","lastModifiedDate":"2021-11-08"},{"lineNumber":46,"author":{"gitId":"idgrr"},"content":"        that there is a need to convert the JSON data used in CMM back to an Excel sheet","lastModifiedDate":"2021-11-08"},{"lineNumber":47,"author":{"gitId":"idgrr"},"content":"      * This is allows seamless data conversion between Excel and CMM.","lastModifiedDate":"2021-11-08"},{"lineNumber":48,"author":{"gitId":"idgrr"},"content":"      * The Export function also acts as a safety net should telemarketers wish to start a new database with imported","lastModifiedDate":"2021-11-08"},{"lineNumber":49,"author":{"gitId":"idgrr"},"content":"        contacts. CMM will immediately export the current database in an Excel file before wiping and introducing new","lastModifiedDate":"2021-11-05"},{"lineNumber":50,"author":{"gitId":"idgrr"},"content":"        contacts into the database.","lastModifiedDate":"2021-11-05"},{"lineNumber":51,"author":{"gitId":"idgrr"},"content":"  * **Highlights:**\u003cbr\u003e","lastModifiedDate":"2021-11-08"},{"lineNumber":52,"author":{"gitId":"idgrr"},"content":"      * This enhancement required understanding how importing works","lastModifiedDate":"2021-11-08"},{"lineNumber":53,"author":{"gitId":"idgrr"},"content":"      * This enhancement required understanding of how `Person` details are handled within CMM","lastModifiedDate":"2021-11-08"},{"lineNumber":54,"author":{"gitId":"idgrr"},"content":"      * This enhancement required understanding of file writing components, primarily `FileUtil`","lastModifiedDate":"2021-11-08"},{"lineNumber":55,"author":{"gitId":"idgrr"},"content":"  * **Credits:**\u003cbr\u003e","lastModifiedDate":"2021-11-08"},{"lineNumber":56,"author":{"gitId":"idgrr"},"content":"      * The previous iteration CallMeMaybe (AddressBookLevel3) \u0027s JSON storage architecture  helped me structure","lastModifiedDate":"2021-11-08"},{"lineNumber":57,"author":{"gitId":"idgrr"},"content":"        my Export feature. This taught me how to follow an existing architectural style while implementing a new ","lastModifiedDate":"2021-11-08"},{"lineNumber":58,"author":{"gitId":"idgrr"},"content":"        feature. It also helped me rethink the way I approach code abstractions.","lastModifiedDate":"2021-11-08"},{"lineNumber":59,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":60,"author":{"gitId":"idgrr"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2021-11-08"},{"lineNumber":61,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":62,"author":{"gitId":"idgrr"},"content":"* **Code contributed**: [RepoSense link](https://nus-cs2103-ay2122s1.github.io/tp-dashboard/?search\u003d\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026since\u003d2021-09-17\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026breakdown\u003dfalse\u0026tabOpen\u003dtrue\u0026tabType\u003dauthorship\u0026zFR\u003dfalse\u0026tabAuthor\u003didgrr\u0026tabRepo\u003dAY2122S1-CS2103T-T13-4%2Ftp%5Bmaster%5D\u0026authorshipIsMergeGroup\u003dfalse\u0026authorshipFileTypes\u003ddocs~functional-code~test-code\u0026authorshipIsBinaryFileTypeChecked\u003dfalse)","lastModifiedDate":"2021-11-08"},{"lineNumber":63,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":64,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":65,"author":{"gitId":"idgrr"},"content":"* **Project management**:","lastModifiedDate":"2021-09-18"},{"lineNumber":66,"author":{"gitId":"idgrr"},"content":"  * Managed releases `v1.1` - `v1.4` (4 releases) on GitHub","lastModifiedDate":"2021-11-07"},{"lineNumber":67,"author":{"gitId":"idgrr"},"content":"  * Managed Github Milestones","lastModifiedDate":"2021-11-08"},{"lineNumber":68,"author":{"gitId":"idgrr"},"content":"  * Managed Github Labels","lastModifiedDate":"2021-11-08"},{"lineNumber":69,"author":{"gitId":"idgrr"},"content":"  * Update demo for v1.3","lastModifiedDate":"2021-11-08"},{"lineNumber":70,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":71,"author":{"gitId":"idgrr"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2021-09-18"},{"lineNumber":72,"author":{"gitId":"idgrr"},"content":"  * Updated the GUI resizing functionality to ensure that features can always be displayed","lastModifiedDate":"2021-11-02"},{"lineNumber":73,"author":{"gitId":"idgrr"},"content":"  * Wrote additional tests for existing features such as CsvUtil, CsvAdaptedPerson, CsvAddressBook","lastModifiedDate":"2021-11-02"},{"lineNumber":74,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":75,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":76,"author":{"gitId":"idgrr"},"content":"* **Documentation**:","lastModifiedDate":"2021-09-18"},{"lineNumber":77,"author":{"gitId":"idgrr"},"content":"  * User Guide:","lastModifiedDate":"2021-09-18"},{"lineNumber":78,"author":{"gitId":"idgrr"},"content":"    * Added documentation for the features `import` and `export` and `findAny`","lastModifiedDate":"2021-11-03"},{"lineNumber":79,"author":{"gitId":"idgrr"},"content":"      PR for reference:\u003cbr\u003e ","lastModifiedDate":"2021-11-08"},{"lineNumber":80,"author":{"gitId":"idgrr"},"content":"      * [#131](https://github.com/AY2122S1-CS2103T-T13-4/tp/pull/131/files)","lastModifiedDate":"2021-11-08"},{"lineNumber":81,"author":{"gitId":"idgrr"},"content":"        , [#109](https://github.com/AY2122S1-CS2103T-T13-4/tp/pull/109/files)","lastModifiedDate":"2021-11-08"},{"lineNumber":82,"author":{"gitId":"idgrr"},"content":"        , [#97](https://github.com/AY2122S1-CS2103T-T13-4/tp/pull/97/files) \u003cbr\u003e","lastModifiedDate":"2021-11-08"},{"lineNumber":83,"author":{"gitId":"idgrr"},"content":"  * Developer Guide:","lastModifiedDate":"2021-09-18"},{"lineNumber":84,"author":{"gitId":"idgrr"},"content":"    * Added implementation details of the `import` and `export` feature.\u003cbr\u003e","lastModifiedDate":"2021-11-08"},{"lineNumber":85,"author":{"gitId":"idgrr"},"content":"      [#96](https://github.com/AY2122S1-CS2103T-T13-4/tp/pull/96/files)","lastModifiedDate":"2021-11-08"},{"lineNumber":86,"author":{"gitId":"idgrr"},"content":"      , [#32](https://github.com/AY2122S1-CS2103T-T13-4/tp/pull/32/files) \u003cbr\u003e","lastModifiedDate":"2021-11-08"},{"lineNumber":87,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":88,"author":{"gitId":"idgrr"},"content":"* **Testing**","lastModifiedDate":"2021-11-08"},{"lineNumber":89,"author":{"gitId":"idgrr"},"content":"  * Testcases for Import export feature","lastModifiedDate":"2021-11-08"},{"lineNumber":90,"author":{"gitId":"idgrr"},"content":"    * [#121](https://github.com/AY2122S1-CS2103T-T13-4/tp/pull/121)","lastModifiedDate":"2021-11-08"},{"lineNumber":91,"author":{"gitId":"idgrr"},"content":"  ","lastModifiedDate":"2021-11-08"},{"lineNumber":92,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":93,"author":{"gitId":"idgrr"},"content":"* **Community**:","lastModifiedDate":"2021-09-18"},{"lineNumber":94,"author":{"gitId":"idgrr"},"content":"  * Total PRs reviewed : 23","lastModifiedDate":"2021-11-08"},{"lineNumber":95,"author":{"gitId":"idgrr"},"content":"  * Examples of PRs reviewed (with non-trivial review comments): \u003cbr\u003e","lastModifiedDate":"2021-11-08"},{"lineNumber":96,"author":{"gitId":"idgrr"},"content":"    * [#175](https://github.com/AY2122S1-CS2103T-T13-4/tp/pull/175)","lastModifiedDate":"2021-11-08"},{"lineNumber":97,"author":{"gitId":"idgrr"},"content":"    , [#89](https://github.com/AY2122S1-CS2103T-T13-4/tp/pull/89)","lastModifiedDate":"2021-11-08"},{"lineNumber":98,"author":{"gitId":"idgrr"},"content":"    , [#93](https://github.com/AY2122S1-CS2103T-T13-4/tp/pull/93)","lastModifiedDate":"2021-11-08"},{"lineNumber":99,"author":{"gitId":"idgrr"},"content":"    , [#67](https://github.com/AY2122S1-CS2103T-T13-4/tp/pull/67)","lastModifiedDate":"2021-11-08"},{"lineNumber":100,"author":{"gitId":"idgrr"},"content":"    , [#38](https://github.com/AY2122S1-CS2103T-T13-4/tp/pull/38)","lastModifiedDate":"2021-11-08"},{"lineNumber":101,"author":{"gitId":"idgrr"},"content":"    , [#34](https://github.com/AY2122S1-CS2103T-T13-4/tp/pull/34)","lastModifiedDate":"2021-11-08"},{"lineNumber":102,"author":{"gitId":"idgrr"},"content":"  * Reported bugs and suggestions for other teams in the class:","lastModifiedDate":"2021-11-08"},{"lineNumber":103,"author":{"gitId":"idgrr"},"content":"    * [Bugs found in PE-D](https://github.com/idgrr/ped/issues)","lastModifiedDate":"2021-11-08"},{"lineNumber":104,"author":{"gitId":"idgrr"},"content":"    ","lastModifiedDate":"2021-09-18"}],"authorContributionMap":{"idgrr":104}},{"path":"docs/team/kangxun.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Kangxun"},"content":"---","lastModifiedDate":"2021-09-18"},{"lineNumber":2,"author":{"gitId":"Kangxun"},"content":"layout: page","lastModifiedDate":"2021-09-18"},{"lineNumber":3,"author":{"gitId":"Kangxun"},"content":"title: Kangxun\u0027s Project Portfolio Page","lastModifiedDate":"2021-11-04"},{"lineNumber":4,"author":{"gitId":"Kangxun"},"content":"---","lastModifiedDate":"2021-09-18"},{"lineNumber":5,"author":{"gitId":"Kangxun"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":6,"author":{"gitId":"Kangxun"},"content":"### Project: CallMeMaybe(CMM)","lastModifiedDate":"2021-11-04"},{"lineNumber":7,"author":{"gitId":"Kangxun"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":8,"author":{"gitId":"Kangxun"},"content":"CallMeMaybe (CMM) is a **desktop app** centered for Telemarketers in aiding them in customer contact management.","lastModifiedDate":"2021-11-04"},{"lineNumber":9,"author":{"gitId":"Kangxun"},"content":"CMM provides a solution to quickly catalog people based on who has/yet to be called. It caters to Telemarketers ","lastModifiedDate":"2021-11-04"},{"lineNumber":10,"author":{"gitId":"Kangxun"},"content":"by providing in-app tracking functionality to quickly contact previously unreachable customers. CMM also provides ","lastModifiedDate":"2021-11-04"},{"lineNumber":11,"author":{"gitId":"Kangxun"},"content":"importing and exporting capabilities to allow ease of collaboration in team-based environments.","lastModifiedDate":"2021-11-04"},{"lineNumber":12,"author":{"gitId":"Kangxun"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":13,"author":{"gitId":"Kangxun"},"content":"CMM is developed for use via a **Command Line Interface** (CLI) while providing the additional benefits of a ","lastModifiedDate":"2021-11-04"},{"lineNumber":14,"author":{"gitId":"Kangxun"},"content":"Graphical User Interface (GUI). It is written in Java and the GUI is created with JavaFX. CMM has about 17 kLoC.","lastModifiedDate":"2021-11-04"},{"lineNumber":15,"author":{"gitId":"Kangxun"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":16,"author":{"gitId":"Kangxun"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2021-11-04"},{"lineNumber":17,"author":{"gitId":"Kangxun"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":18,"author":{"gitId":"Kangxun"},"content":"* **New Feature**: Added the ability to filter contacts (Pull request [\\#122](https://github.com/AY2122S1-CS2103T-T13-4/tp/pull/122))","lastModifiedDate":"2021-11-04"},{"lineNumber":19,"author":{"gitId":"Kangxun"},"content":"  * What it does: Allows the user to filter contacts displayed based on category and count. ","lastModifiedDate":"2021-11-04"},{"lineNumber":20,"author":{"gitId":"Kangxun"},"content":"  * Justification: This feature enhances the app\u0027s ability to support telemarketers by allowing them to view contacts that they want to see.","lastModifiedDate":"2021-11-04"},{"lineNumber":21,"author":{"gitId":"Kangxun"},"content":"  * Highlights: The filter command involves both sorting and filtering the list of contacts. The implementation was challenging as it involved working around the ","lastModifiedDate":"2021-11-04"},{"lineNumber":22,"author":{"gitId":"Kangxun"},"content":"  current implementation of an Observer design pattern using a FilteredList. Considerations of different design options were made before finalising on the existing","lastModifiedDate":"2021-11-04"},{"lineNumber":23,"author":{"gitId":"Kangxun"},"content":"  implementation. Modifications to code base can complement future enhancements that require similar functionality.","lastModifiedDate":"2021-11-04"},{"lineNumber":24,"author":{"gitId":"Kangxun"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":25,"author":{"gitId":"Kangxun"},"content":"* **Code contributed**: [RepoSense link](https://nus-cs2103-ay2122s1.github.io/tp-dashboard/?search\u003d\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026since\u003d2021-09-17\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026breakdown\u003dfalse\u0026tabOpen\u003dtrue\u0026tabType\u003dauthorship\u0026tabAuthor\u003dKangxun\u0026tabRepo\u003dAY2122S1-CS2103T-T13-4%2Ftp%5Bmaster%5D\u0026authorshipIsMergeGroup\u003dfalse\u0026authorshipFileTypes\u003ddocs~functional-code~test-code\u0026authorshipIsBinaryFileTypeChecked\u003dfalse)","lastModifiedDate":"2021-11-04"},{"lineNumber":26,"author":{"gitId":"Kangxun"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":27,"author":{"gitId":"Kangxun"},"content":"* **Project management**:","lastModifiedDate":"2021-09-18"},{"lineNumber":28,"author":{"gitId":"Kangxun"},"content":"  * Managed releases `v1.1` - `v1.4` (4 releases) on GitHub","lastModifiedDate":"2021-11-04"},{"lineNumber":29,"author":{"gitId":"Kangxun"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":30,"author":{"gitId":"Kangxun"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2021-09-18"},{"lineNumber":31,"author":{"gitId":"Kangxun"},"content":"  * Added new person attribute `Called` class for tracking functionality (Pull request [\\#40](https://github.com/AY2122S1-CS2103T-T13-4/tp/pull/40))","lastModifiedDate":"2021-11-04"},{"lineNumber":32,"author":{"gitId":"Kangxun"},"content":"  * Modified writing to storage to support tracking functionality (Pull request [\\#40](https://github.com/AY2122S1-CS2103T-T13-4/tp/pull/40))","lastModifiedDate":"2021-11-04"},{"lineNumber":33,"author":{"gitId":"Kangxun"},"content":"  ","lastModifiedDate":"2021-09-18"},{"lineNumber":34,"author":{"gitId":"Kangxun"},"content":"* **Documentation**:","lastModifiedDate":"2021-09-18"},{"lineNumber":35,"author":{"gitId":"Kangxun"},"content":"  * User Guide:","lastModifiedDate":"2021-09-18"},{"lineNumber":36,"author":{"gitId":"Kangxun"},"content":"    * Added documentation for the feature `help`, `add`, `done`, `delete`, `clear`, `filter` ","lastModifiedDate":"2021-11-04"},{"lineNumber":37,"author":{"gitId":"Kangxun"},"content":"                       [\\#72](https://github.com/AY2122S1-CS2103T-T13-4/tp/pull/72),","lastModifiedDate":"2021-11-04"},{"lineNumber":38,"author":{"gitId":"Kangxun"},"content":"                       [\\#73](https://github.com/AY2122S1-CS2103T-T13-4/tp/pull/73),","lastModifiedDate":"2021-11-04"},{"lineNumber":39,"author":{"gitId":"Kangxun"},"content":"                       [\\#124](https://github.com/AY2122S1-CS2103T-T13-4/tp/pull/124),","lastModifiedDate":"2021-11-04"},{"lineNumber":40,"author":{"gitId":"Kangxun"},"content":"                       [\\#175](https://github.com/AY2122S1-CS2103T-T13-4/tp/pull/175)","lastModifiedDate":"2021-11-04"},{"lineNumber":41,"author":{"gitId":"Kangxun"},"content":"    * Did cosmetic tweaks to existing documentation: ","lastModifiedDate":"2021-11-04"},{"lineNumber":42,"author":{"gitId":"Kangxun"},"content":"                       [\\#100](https://github.com/AY2122S1-CS2103T-T13-4/tp/pull/100)","lastModifiedDate":"2021-11-04"},{"lineNumber":43,"author":{"gitId":"Kangxun"},"content":"  * Developer Guide:","lastModifiedDate":"2021-09-18"},{"lineNumber":44,"author":{"gitId":"Kangxun"},"content":"    * Added implementation details of the `filter` feature:","lastModifiedDate":"2021-11-04"},{"lineNumber":45,"author":{"gitId":"Kangxun"},"content":"                       [\\#124](https://github.com/AY2122S1-CS2103T-T13-4/tp/pull/124)","lastModifiedDate":"2021-11-04"},{"lineNumber":46,"author":{"gitId":"Kangxun"},"content":"    * Updated for CMM: [\\#66](https://github.com/AY2122S1-CS2103T-T13-4/tp/pull/66)","lastModifiedDate":"2021-11-04"},{"lineNumber":47,"author":{"gitId":"Kangxun"},"content":"  * README, config and index:","lastModifiedDate":"2021-11-04"},{"lineNumber":48,"author":{"gitId":"Kangxun"},"content":"    * Updated for CMM: [\\#60](https://github.com/AY2122S1-CS2103T-T13-4/tp/pull/60), ","lastModifiedDate":"2021-11-04"},{"lineNumber":49,"author":{"gitId":"Kangxun"},"content":"                       [\\#61](https://github.com/AY2122S1-CS2103T-T13-4/tp/pull/61),","lastModifiedDate":"2021-11-04"},{"lineNumber":50,"author":{"gitId":"Kangxun"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":51,"author":{"gitId":"Kangxun"},"content":"* **Community**:","lastModifiedDate":"2021-09-18"},{"lineNumber":52,"author":{"gitId":"Kangxun"},"content":"  * PRs reviewed (with non-trivial review comments): ","lastModifiedDate":"2021-11-04"},{"lineNumber":53,"author":{"gitId":"Kangxun"},"content":"                       [\\#65](https://github.com/AY2122S1-CS2103T-T13-4/tp/pull/65),","lastModifiedDate":"2021-11-04"},{"lineNumber":54,"author":{"gitId":"Kangxun"},"content":"                       [\\#71](https://github.com/AY2122S1-CS2103T-T13-4/tp/pull/71), ","lastModifiedDate":"2021-11-04"},{"lineNumber":55,"author":{"gitId":"Kangxun"},"content":"                       [\\#102](https://github.com/AY2122S1-CS2103T-T13-4/tp/pull/102), ","lastModifiedDate":"2021-11-04"},{"lineNumber":56,"author":{"gitId":"Kangxun"},"content":"                       [\\#121](https://github.com/AY2122S1-CS2103T-T13-4/tp/pull/121),","lastModifiedDate":"2021-11-04"},{"lineNumber":57,"author":{"gitId":"Kangxun"},"content":"                       [\\#172](https://github.com/AY2122S1-CS2103T-T13-4/tp/pull/172),","lastModifiedDate":"2021-11-04"},{"lineNumber":58,"author":{"gitId":"Kangxun"},"content":"                       [\\#180](https://github.com/AY2122S1-CS2103T-T13-4/tp/pull/180)","lastModifiedDate":"2021-11-04"}],"authorContributionMap":{"Kangxun":58}},{"path":"docs/team/loose-bus-change.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"loose-bus-change"},"content":"---","lastModifiedDate":"2021-11-06"},{"lineNumber":2,"author":{"gitId":"loose-bus-change"},"content":"layout: page","lastModifiedDate":"2021-11-06"},{"lineNumber":3,"author":{"gitId":"loose-bus-change"},"content":"title: Saketh\u0027s Project Portfolio Page","lastModifiedDate":"2021-11-06"},{"lineNumber":4,"author":{"gitId":"loose-bus-change"},"content":"---","lastModifiedDate":"2021-11-06"},{"lineNumber":5,"author":{"gitId":"loose-bus-change"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":6,"author":{"gitId":"loose-bus-change"},"content":"### Project: CallMeMaybe(CMM)","lastModifiedDate":"2021-11-06"},{"lineNumber":7,"author":{"gitId":"loose-bus-change"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":8,"author":{"gitId":"loose-bus-change"},"content":"CallMeMaybe is a desktop application developed for freelance telemarketers.","lastModifiedDate":"2021-11-06"},{"lineNumber":9,"author":{"gitId":"loose-bus-change"},"content":"While it has a GUI, most of the user interactions happen using a CLI (Command Line Interface).","lastModifiedDate":"2021-11-06"},{"lineNumber":10,"author":{"gitId":"loose-bus-change"},"content":"The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java, and has about 15 kLoC.","lastModifiedDate":"2021-11-06"},{"lineNumber":11,"author":{"gitId":"loose-bus-change"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":12,"author":{"gitId":"loose-bus-change"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2021-11-06"},{"lineNumber":13,"author":{"gitId":"loose-bus-change"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":14,"author":{"gitId":"loose-bus-change"},"content":"* **Features worked on:**","lastModifiedDate":"2021-11-06"},{"lineNumber":15,"author":{"gitId":"loose-bus-change"},"content":"  * **Display command**: Added the ability for users to display additional details about a chosen contact.","lastModifiedDate":"2021-11-08"},{"lineNumber":16,"author":{"gitId":"loose-bus-change"},"content":"      * What it does: Allows the user to view additional information about a particular contact. The additional details include things like","lastModifiedDate":"2021-11-06"},{"lineNumber":17,"author":{"gitId":"loose-bus-change"},"content":"        age, called status, gender, address, interests. The feature allows them to view details of one contact at a time chosen based on index. ","lastModifiedDate":"2021-11-06"},{"lineNumber":18,"author":{"gitId":"loose-bus-change"},"content":"      * Justification: This feature improves the product significantly because often times as a telemarketer you are looking for more information ","lastModifiedDate":"2021-11-06"},{"lineNumber":19,"author":{"gitId":"loose-bus-change"},"content":"        about a particular contact rather than just the name and phone number. The additional information such as age, gender etc. can play a role","lastModifiedDate":"2021-11-06"},{"lineNumber":20,"author":{"gitId":"loose-bus-change"},"content":"        in the telemarketer deciding how to approach calling the particular contact and how to handle the call. ","lastModifiedDate":"2021-11-06"},{"lineNumber":21,"author":{"gitId":"loose-bus-change"},"content":"      * Difficulties: It was rather difficult to include this new functionality, since it required a lot of change in the UI as well as the Logic.","lastModifiedDate":"2021-11-08"},{"lineNumber":22,"author":{"gitId":"loose-bus-change"},"content":"        However, through a team effort we were able to implement this feature. It was integral that this function was not just a stand-alone feature,","lastModifiedDate":"2021-11-08"},{"lineNumber":23,"author":{"gitId":"loose-bus-change"},"content":"        but had to be modified such that it updated the details when other functions were called. It was quite difficult to write tests for it, and ","lastModifiedDate":"2021-11-08"},{"lineNumber":24,"author":{"gitId":"loose-bus-change"},"content":"        catch errors in an appropriate manner. ","lastModifiedDate":"2021-11-08"},{"lineNumber":25,"author":{"gitId":"loose-bus-change"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":26,"author":{"gitId":"loose-bus-change"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":27,"author":{"gitId":"loose-bus-change"},"content":"* **Code contributed**: [RepoSense link](https://nus-cs2103-ay2122s1.github.io/tp-dashboard/?search\u003d\u0026sort\u003dtotalCommits\u0026sortWithin\u003dtotalCommits%20dsc\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026breakdown\u003dtrue\u0026checkedFileTypes\u003ddocs~functional-code~test-code~other\u0026since\u003d2021-09-17\u0026tabOpen\u003dtrue\u0026tabType\u003dauthorship\u0026tabAuthor\u003dloose-bus-change\u0026tabRepo\u003dAY2122S1-CS2103T-T13-4%2Ftp%5Bmaster%5D\u0026authorshipIsMergeGroup\u003dfalse\u0026authorshipFileTypes\u003ddocs~functional-code~test-code~other\u0026authorshipIsBinaryFileTypeChecked\u003dfalse)","lastModifiedDate":"2021-11-06"},{"lineNumber":28,"author":{"gitId":"loose-bus-change"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":29,"author":{"gitId":"loose-bus-change"},"content":"* **Project management**:","lastModifiedDate":"2021-11-08"},{"lineNumber":30,"author":{"gitId":"loose-bus-change"},"content":"    * Managed project milestones on GitHub","lastModifiedDate":"2021-11-08"},{"lineNumber":31,"author":{"gitId":"loose-bus-change"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":32,"author":{"gitId":"loose-bus-change"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":33,"author":{"gitId":"loose-bus-change"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2021-11-08"},{"lineNumber":34,"author":{"gitId":"loose-bus-change"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":35,"author":{"gitId":"loose-bus-change"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":36,"author":{"gitId":"loose-bus-change"},"content":"* **Team-based tasks**: Updating user/developer docs that are not specific to a feature","lastModifiedDate":"2021-11-06"},{"lineNumber":37,"author":{"gitId":"loose-bus-change"},"content":"    * Modifying target user profile. (Pull request [#129](https://github.com/AY2122S1-CS2103T-T13-4/tp/pull/129))","lastModifiedDate":"2021-11-08"},{"lineNumber":38,"author":{"gitId":"loose-bus-change"},"content":"    * Modifying use cases for project. (Pull request [#196](https://github.com/AY2122S1-CS2103T-T13-4/tp/pull/196))","lastModifiedDate":"2021-11-08"},{"lineNumber":39,"author":{"gitId":"loose-bus-change"},"content":"    * Editing final documentation (Pull request [#196](https://github.com/AY2122S1-CS2103T-T13-4/tp/pull/196))","lastModifiedDate":"2021-11-08"},{"lineNumber":40,"author":{"gitId":"loose-bus-change"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":41,"author":{"gitId":"loose-bus-change"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":42,"author":{"gitId":"loose-bus-change"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2021-11-06"},{"lineNumber":43,"author":{"gitId":"loose-bus-change"},"content":"    * Modified the original `add` command for the v1.2 release. (Pull request [#45](https://github.com/AY2122S1-CS2103T-T13-4/tp/pull/45))","lastModifiedDate":"2021-11-08"},{"lineNumber":44,"author":{"gitId":"loose-bus-change"},"content":"    * Modified the implementation of the `clear` command to change the updated UI of `display`. (Pull request [#192](https://github.com/AY2122S1-CS2103T-T13-4/tp/pull/182))","lastModifiedDate":"2021-11-08"},{"lineNumber":45,"author":{"gitId":"loose-bus-change"},"content":"    * Modified error messages of existing functions to provide more clarity. (Pull request [#45](https://github.com/AY2122S1-CS2103T-T13-4/tp/pull/192))","lastModifiedDate":"2021-11-08"},{"lineNumber":46,"author":{"gitId":"loose-bus-change"},"content":"    * Changed the way in which an input index is parsed. (Pull request [#192](https://github.com/AY2122S1-CS2103T-T13-4/tp/pull/192))","lastModifiedDate":"2021-11-08"},{"lineNumber":47,"author":{"gitId":"loose-bus-change"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":48,"author":{"gitId":"loose-bus-change"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":49,"author":{"gitId":"loose-bus-change"},"content":"* **Community:** ","lastModifiedDate":"2021-11-08"},{"lineNumber":50,"author":{"gitId":"loose-bus-change"},"content":"    * Sample of PR reviewed (with non-trivial comments): (Pull request [#194](https://github.com/AY2122S1-CS2103T-T13-4/tp/pull/194))","lastModifiedDate":"2021-11-08"},{"lineNumber":51,"author":{"gitId":"loose-bus-change"},"content":"    * Reported bugs for other teams: [Bugs found in PE-D](https://github.com/loose-bus-change/ped/issues)","lastModifiedDate":"2021-11-08"},{"lineNumber":52,"author":{"gitId":"loose-bus-change"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":53,"author":{"gitId":"loose-bus-change"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":54,"author":{"gitId":"loose-bus-change"},"content":"* **Documentation**:","lastModifiedDate":"2021-11-06"},{"lineNumber":55,"author":{"gitId":"loose-bus-change"},"content":"    * User Guide:","lastModifiedDate":"2021-11-06"},{"lineNumber":56,"author":{"gitId":"loose-bus-change"},"content":"        * Added documentation for the features `add`, `display`, `list`, `done`, `exit`","lastModifiedDate":"2021-11-06"},{"lineNumber":57,"author":{"gitId":"loose-bus-change"},"content":"          (Pull requests [#13](https://github.com/AY2122S1-CS2103T-T13-4/tp/pull/13), [#45](https://github.com/AY2122S1-CS2103T-T13-4/tp/pull/45),","lastModifiedDate":"2021-11-08"},{"lineNumber":58,"author":{"gitId":"loose-bus-change"},"content":"          [#107](https://github.com/AY2122S1-CS2103T-T13-4/tp/pull/107))","lastModifiedDate":"2021-11-08"},{"lineNumber":59,"author":{"gitId":"loose-bus-change"},"content":"        * Contributed to the \u0027navigating user guide\u0027 section and restructured the UG (Pull request [#196](https://github.com/AY2122S1-CS2103T-T13-4/tp/pull/196))","lastModifiedDate":"2021-11-08"},{"lineNumber":60,"author":{"gitId":"loose-bus-change"},"content":"    * Developer Guide:","lastModifiedDate":"2021-11-06"},{"lineNumber":61,"author":{"gitId":"loose-bus-change"},"content":"        * Added implementation details of the `display` feature. (Pull request [#129](https://github.com/AY2122S1-CS2103T-T13-4/tp/pull/129))","lastModifiedDate":"2021-11-08"},{"lineNumber":62,"author":{"gitId":"loose-bus-change"},"content":"        * Edited the use cases, testing information (Pull request [#129](https://github.com/AY2122S1-CS2103T-T13-4/tp/pull/129))","lastModifiedDate":"2021-11-08"},{"lineNumber":63,"author":{"gitId":"loose-bus-change"},"content":"        * Edited the target user profile, user stories (Pull request [#196](https://github.com/AY2122S1-CS2103T-T13-4/tp/pull/196))","lastModifiedDate":"2021-11-08"},{"lineNumber":64,"author":{"gitId":"loose-bus-change"},"content":"        * Diagrams drawn: Display Activity Diagram  and Display Sequence Diagram","lastModifiedDate":"2021-11-08"}],"authorContributionMap":{"loose-bus-change":64}},{"path":"docs/team/pranav-ganesh.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"pranav-ganesh"},"content":"---","lastModifiedDate":"2021-11-08"},{"lineNumber":2,"author":{"gitId":"pranav-ganesh"},"content":"layout: page","lastModifiedDate":"2021-11-08"},{"lineNumber":3,"author":{"gitId":"pranav-ganesh"},"content":"title: Pranav\u0027s Project Portfolio Page","lastModifiedDate":"2021-11-08"},{"lineNumber":4,"author":{"gitId":"pranav-ganesh"},"content":"---","lastModifiedDate":"2021-11-08"},{"lineNumber":5,"author":{"gitId":"pranav-ganesh"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":6,"author":{"gitId":"pranav-ganesh"},"content":"### Project: CallMeMaybe","lastModifiedDate":"2021-11-08"},{"lineNumber":7,"author":{"gitId":"pranav-ganesh"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":8,"author":{"gitId":"pranav-ganesh"},"content":"CallMeMaybe (CMM) is a desktop application developed for freelance telemarketers that aims to enhance the contact tracking process.","lastModifiedDate":"2021-11-08"},{"lineNumber":9,"author":{"gitId":"pranav-ganesh"},"content":"While it has a GUI created with JavaFX, most of the user interactions happen via a CLI (Command Line Interface). ","lastModifiedDate":"2021-11-08"},{"lineNumber":10,"author":{"gitId":"pranav-ganesh"},"content":"It is written in Java, and has about 15 kLoC.","lastModifiedDate":"2021-11-08"},{"lineNumber":11,"author":{"gitId":"pranav-ganesh"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":12,"author":{"gitId":"pranav-ganesh"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2021-11-08"},{"lineNumber":13,"author":{"gitId":"pranav-ganesh"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":14,"author":{"gitId":"pranav-ganesh"},"content":"* **New Feature**: Implementing the Called command","lastModifiedDate":"2021-11-08"},{"lineNumber":15,"author":{"gitId":"pranav-ganesh"},"content":"  * What it does: Allows users to mark the specified contact from the address book as called (i.e. person has already been called)","lastModifiedDate":"2021-11-08"},{"lineNumber":16,"author":{"gitId":"pranav-ganesh"},"content":"  * Justification: Telemarketers make numerous calls every single day and must  keep track of who all they called so that they don\u0027t","lastModifiedDate":"2021-11-08"},{"lineNumber":17,"author":{"gitId":"pranav-ganesh"},"content":"    call the same person more than once and know who they are yet to call. This functionality is an essential part in ensuring","lastModifiedDate":"2021-11-08"},{"lineNumber":18,"author":{"gitId":"pranav-ganesh"},"content":"    that telemarketers are easily able to keep track of their call progress during work every day.","lastModifiedDate":"2021-11-08"},{"lineNumber":19,"author":{"gitId":"pranav-ganesh"},"content":"  * Highlights: The enhancement did affect the filter command since the filter feature makes use of the \u0027Called\u0027 field to sort contacts.","lastModifiedDate":"2021-11-08"},{"lineNumber":20,"author":{"gitId":"pranav-ganesh"},"content":"    Although there were initial difficulties posed since I was new to the codebase, the implementation of this feature was not overly ","lastModifiedDate":"2021-11-08"},{"lineNumber":21,"author":{"gitId":"pranav-ganesh"},"content":"   challenging since it didn\u0027t require many changes to existing commands and didn\u0027t involve many complications.","lastModifiedDate":"2021-11-08"},{"lineNumber":22,"author":{"gitId":"pranav-ganesh"},"content":"  ","lastModifiedDate":"2021-11-08"},{"lineNumber":23,"author":{"gitId":"pranav-ganesh"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":24,"author":{"gitId":"pranav-ganesh"},"content":"* **New Feature**: Implementing the edit feature for interests list","lastModifiedDate":"2021-11-08"},{"lineNumber":25,"author":{"gitId":"pranav-ganesh"},"content":"    * What it does: Allows telemarketers to edit an interests list for every contact in CMM","lastModifiedDate":"2021-11-08"},{"lineNumber":26,"author":{"gitId":"pranav-ganesh"},"content":"    * Justification: On an average, telemarketers make several hundreds of calls every single day and most of the customers don\u0027t show much ","lastModifiedDate":"2021-11-08"},{"lineNumber":27,"author":{"gitId":"pranav-ganesh"},"content":"      interest in their service or product, making their job unproductive and inefficient at times. In an attempt to increase their","lastModifiedDate":"2021-11-08"},{"lineNumber":28,"author":{"gitId":"pranav-ganesh"},"content":"      productivity, we decided to include an optional interests list that is associated with every contact in the contact list. The telemarketers ","lastModifiedDate":"2021-11-08"},{"lineNumber":29,"author":{"gitId":"pranav-ganesh"},"content":"      can specifically target contacts whose interests are aligned with the service or product they offer. This will accentuate the probability of successful","lastModifiedDate":"2021-11-08"},{"lineNumber":30,"author":{"gitId":"pranav-ganesh"},"content":"      calls. The edit feature significantly improves the product by allowing telemarketers to edit this interests list for every ","lastModifiedDate":"2021-11-08"},{"lineNumber":31,"author":{"gitId":"pranav-ganesh"},"content":"      contact by adding, deleting or editing a specific interest whenever they want to.","lastModifiedDate":"2021-11-08"},{"lineNumber":32,"author":{"gitId":"pranav-ganesh"},"content":"    * Highlights: This enhancement affects existing commands and commands to be added in the future. It required an in-depth analysis of design ","lastModifiedDate":"2021-11-08"},{"lineNumber":33,"author":{"gitId":"pranav-ganesh"},"content":"      alternatives. There were several complications caused by the inclusion of a separate interests list index on top of the contact index.","lastModifiedDate":"2021-11-08"},{"lineNumber":34,"author":{"gitId":"pranav-ganesh"},"content":"      Such an index allowed telemarketers to edit the interests list by adding, deleting and editing interest values. A complication arises from the fact that a user could make so many kinds of","lastModifiedDate":"2021-11-08"},{"lineNumber":35,"author":{"gitId":"pranav-ganesh"},"content":"      errors when typing such a long command. For example, they could enter duplicate indexes, duplicate interest arguments or edit a person","lastModifiedDate":"2021-11-08"},{"lineNumber":36,"author":{"gitId":"pranav-ganesh"},"content":"      to someone who already exists in the list. The design of the feature implementation plays a crucial role in helping handle different kinds of exceptions.","lastModifiedDate":"2021-11-08"},{"lineNumber":37,"author":{"gitId":"pranav-ganesh"},"content":"      Overall, the implementation of this feature was challenging due to the several intricacies involved.","lastModifiedDate":"2021-11-08"},{"lineNumber":38,"author":{"gitId":"pranav-ganesh"},"content":"    ","lastModifiedDate":"2021-11-08"},{"lineNumber":39,"author":{"gitId":"pranav-ganesh"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":40,"author":{"gitId":"pranav-ganesh"},"content":"* **Code contributed:** [RepoSense link](https://nus-cs2103-ay2122s1.github.io/tp-dashboard/?search\u003d\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026since\u003d2021-09-17\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026breakdown\u003dfalse\u0026tabOpen\u003dtrue\u0026tabType\u003dauthorship\u0026tabAuthor\u003dpranav-ganesh\u0026tabRepo\u003dAY2122S1-CS2103T-T13-4%2Ftp%5Bmaster%5D\u0026authorshipIsMergeGroup\u003dfalse\u0026authorshipFileTypes\u003ddocs~functional-code~test-code\u0026authorshipIsBinaryFileTypeChecked\u003dfalse)","lastModifiedDate":"2021-11-08"},{"lineNumber":41,"author":{"gitId":"pranav-ganesh"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":42,"author":{"gitId":"pranav-ganesh"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":43,"author":{"gitId":"pranav-ganesh"},"content":"* **Project management**:","lastModifiedDate":"2021-11-08"},{"lineNumber":44,"author":{"gitId":"pranav-ganesh"},"content":"    * Managed releases `v1.1` - `v1.4` (4 releases) on GitHub","lastModifiedDate":"2021-11-08"},{"lineNumber":45,"author":{"gitId":"pranav-ganesh"},"content":"    * Managed Github Milestones and Labels","lastModifiedDate":"2021-11-08"},{"lineNumber":46,"author":{"gitId":"pranav-ganesh"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":47,"author":{"gitId":"pranav-ganesh"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":48,"author":{"gitId":"pranav-ganesh"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2021-11-08"},{"lineNumber":49,"author":{"gitId":"pranav-ganesh"},"content":"    * Enhanced the original Edit Command to allow users to edit more fields (age, gender, isCalled, interests list)  (Pull requests [#108](https://github.com/AY2122S1-CS2103T-T13-4/tp/pull/108) [\\#194](https://github.com/AY2122S1-CS2103T-T13-4/tp/pull/194))","lastModifiedDate":"2021-11-08"},{"lineNumber":50,"author":{"gitId":"pranav-ganesh"},"content":"    * Wrote additional tests for the Edit Command and Edit Command Parser classes to improve testing (Pull requests [#108](https://github.com/AY2122S1-CS2103T-T13-4/tp/pull/108/files) [#187](https://github.com/AY2122S1-CS2103T-T13-4/tp/pull/187) [#194](https://github.com/AY2122S1-CS2103T-T13-4/tp/pull/194))","lastModifiedDate":"2021-11-08"},{"lineNumber":51,"author":{"gitId":"pranav-ganesh"},"content":"    * Added display feature to the Edit Command so that users can view the updated contact details in the full person card as soon as they edit a contact [#132](https://github.com/AY2122S1-CS2103T-T13-4/tp/pull/132)","lastModifiedDate":"2021-11-08"},{"lineNumber":52,"author":{"gitId":"pranav-ganesh"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":53,"author":{"gitId":"pranav-ganesh"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":54,"author":{"gitId":"pranav-ganesh"},"content":"* **Team-based tasks**:","lastModifiedDate":"2021-11-08"},{"lineNumber":55,"author":{"gitId":"pranav-ganesh"},"content":"    * Did cosmetic tweaks to the existing code to maintain consistency and improve code quality (for eg modified the name of the DoneCommand class to CalledCommand throughout the codebase) [#183](https://github.com/AY2122S1-CS2103T-T13-4/tp/pull/183/commits/fb1e26a641ac5084bfb0004dc5320873142a1e4f)","lastModifiedDate":"2021-11-08"},{"lineNumber":56,"author":{"gitId":"pranav-ganesh"},"content":"    * Updated user guide that is not specific to a feature (added a new section called `Interface layout`) [\\#211](https://github.com/AY2122S1-CS2103T-T13-4/tp/pull/211)","lastModifiedDate":"2021-11-08"},{"lineNumber":57,"author":{"gitId":"pranav-ganesh"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":58,"author":{"gitId":"pranav-ganesh"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":59,"author":{"gitId":"pranav-ganesh"},"content":"* **Documentation**:","lastModifiedDate":"2021-11-08"},{"lineNumber":60,"author":{"gitId":"pranav-ganesh"},"content":"    * User Guide:","lastModifiedDate":"2021-11-08"},{"lineNumber":61,"author":{"gitId":"pranav-ganesh"},"content":"        * Added documentation for the feature `edit`","lastModifiedDate":"2021-11-08"},{"lineNumber":62,"author":{"gitId":"pranav-ganesh"},"content":"          [\\#113](https://github.com/AY2122S1-CS2103T-T13-4/tp/pull/113) [\\#194](https://github.com/AY2122S1-CS2103T-T13-4/tp/pull/194/commits/02ec1b06bb866325fcc172cdb9991605e09f72a3)","lastModifiedDate":"2021-11-08"},{"lineNumber":63,"author":{"gitId":"pranav-ganesh"},"content":"        * Added a section `Interface layout` in the user guide to define the layout of CMM\u0027s user interface before delving into the actual features","lastModifiedDate":"2021-11-08"},{"lineNumber":64,"author":{"gitId":"pranav-ganesh"},"content":"          [\\#211](https://github.com/AY2122S1-CS2103T-T13-4/tp/pull/211)","lastModifiedDate":"2021-11-08"},{"lineNumber":65,"author":{"gitId":"pranav-ganesh"},"content":"        * Did cosmetic tweaks to existing documentation [\\#211](https://github.com/AY2122S1-CS2103T-T13-4/tp/pull/211/commits/0233215ed1884cb89751880b47a1cb818ceaf67d)","lastModifiedDate":"2021-11-08"},{"lineNumber":66,"author":{"gitId":"pranav-ganesh"},"content":"    * Developer Guide:","lastModifiedDate":"2021-11-08"},{"lineNumber":67,"author":{"gitId":"pranav-ganesh"},"content":"        * Added implementation details of the `edit` feature [#126](https://github.com/AY2122S1-CS2103T-T13-4/tp/pull/126/files) [#194](https://github.com/AY2122S1-CS2103T-T13-4/tp/pull/194/commits/17aa4482400a3d5bc15bec98402d392e1f10146b)","lastModifiedDate":"2021-11-08"},{"lineNumber":68,"author":{"gitId":"pranav-ganesh"},"content":"        * Edited use cases, test cases for the Edit Command and updated two diagrams (Edit Sequence Diagram and Edit Activity Diagram)  [#194](https://github.com/AY2122S1-CS2103T-T13-4/tp/pull/194/commits/17aa4482400a3d5bc15bec98402d392e1f10146b)","lastModifiedDate":"2021-11-08"},{"lineNumber":69,"author":{"gitId":"pranav-ganesh"},"content":"    ","lastModifiedDate":"2021-11-08"},{"lineNumber":70,"author":{"gitId":"pranav-ganesh"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":71,"author":{"gitId":"pranav-ganesh"},"content":"* **Community**","lastModifiedDate":"2021-11-08"},{"lineNumber":72,"author":{"gitId":"pranav-ganesh"},"content":"  * PRs reviewed (with non-trivial review comments): [#177](https://github.com/AY2122S1-CS2103T-T13-4/tp/pull/177)","lastModifiedDate":"2021-11-08"},{"lineNumber":73,"author":{"gitId":"pranav-ganesh"},"content":"  * Reported an above-average number of bugs and suggestions for other teams in the class: [Bugs found in PE-D](https://github.com/pranav-ganesh/ped/issues) ","lastModifiedDate":"2021-11-08"}],"authorContributionMap":{"pranav-ganesh":73}},{"path":"src/main/java/seedu/address/MainApp.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2016-08-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Config;","lastModifiedDate":"2016-09-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Version;","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2016-09-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ConfigUtil;","lastModifiedDate":"2016-10-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2016-09-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.Logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.LogicManager;","lastModifiedDate":"2016-09-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-01-18"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-01-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-01-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2017-01-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-12-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-01-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.util.SampleDataUtil;","lastModifiedDate":"2016-12-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.storage.AddressBookStorage;","lastModifiedDate":"2017-02-25"},{"lineNumber":26,"author":{"gitId":"idgrr"},"content":"import seedu.address.storage.CsvAddressBookImportExport;","lastModifiedDate":"2021-09-29"},{"lineNumber":27,"author":{"gitId":"idgrr"},"content":"import seedu.address.storage.ImportExport;","lastModifiedDate":"2021-09-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonAddressBookStorage;","lastModifiedDate":"2018-11-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonUserPrefsStorage;","lastModifiedDate":"2017-02-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.storage.Storage;","lastModifiedDate":"2016-09-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.storage.StorageManager;","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.storage.UserPrefsStorage;","lastModifiedDate":"2017-02-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import seedu.address.ui.Ui;","lastModifiedDate":"2016-09-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import seedu.address.ui.UiManager;","lastModifiedDate":"2016-09-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":" * Runs the application.","lastModifiedDate":"2019-02-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"public class MainApp extends Application {","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public static final Version VERSION \u003d new Version(0, 2, 0, true);","lastModifiedDate":"2021-08-30"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(MainApp.class);","lastModifiedDate":"2017-04-01"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    protected Ui ui;","lastModifiedDate":"2016-09-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    protected Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    protected Storage storage;","lastModifiedDate":"2016-09-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    protected Model model;","lastModifiedDate":"2016-09-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    protected Config config;","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"idgrr"},"content":"    protected ImportExport importExportManager;","lastModifiedDate":"2021-09-29"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void init() throws Exception {","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d[ Initializing AddressBook ]\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2016-09-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        super.init();","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        AppParameters appParameters \u003d AppParameters.parse(getParameters());","lastModifiedDate":"2018-04-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        config \u003d initConfig(appParameters.getConfigPath());","lastModifiedDate":"2018-04-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        UserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(config.getUserPrefsFilePath());","lastModifiedDate":"2017-02-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d initPrefs(userPrefsStorage);","lastModifiedDate":"2018-12-06"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        AddressBookStorage addressBookStorage \u003d new JsonAddressBookStorage(userPrefs.getAddressBookFilePath());","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"idgrr"},"content":"        importExportManager \u003d new CsvAddressBookImportExport(userPrefs.getImportPath(), userPrefs.getExportPath());","lastModifiedDate":"2021-10-25"},{"lineNumber":64,"author":{"gitId":"idgrr"},"content":"        storage \u003d new StorageManager(addressBookStorage, userPrefsStorage, importExportManager);","lastModifiedDate":"2021-10-25"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        initLogging(config);","lastModifiedDate":"2016-09-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        model \u003d initModelManager(storage, userPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2021-10-25"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        ui \u003d new UiManager(logic);","lastModifiedDate":"2018-12-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * Returns a {@code ModelManager} with the data from {@code storage}\u0027s address book and {@code userPrefs}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     * The data from the sample address book will be used instead if {@code storage}\u0027s address book is not found,","lastModifiedDate":"2017-08-16"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * or an empty address book will be used instead if errors occur when reading {@code storage}\u0027s address book.","lastModifiedDate":"2017-08-16"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    private Model initModelManager(Storage storage, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        Optional\u003cReadOnlyAddressBook\u003e addressBookOptional;","lastModifiedDate":"2016-09-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        ReadOnlyAddressBook initialData;","lastModifiedDate":"2016-09-24"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":84,"author":{"gitId":"-"},"content":"            addressBookOptional \u003d storage.readAddressBook();","lastModifiedDate":"2016-09-25"},{"lineNumber":85,"author":{"gitId":"-"},"content":"            if (!addressBookOptional.isPresent()) {","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"                logger.info(\"Data file not found. Will be starting with a sample AddressBook\");","lastModifiedDate":"2016-12-20"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-09-24"},{"lineNumber":88,"author":{"gitId":"-"},"content":"            initialData \u003d addressBookOptional.orElseGet(SampleDataUtil::getSampleAddressBook);","lastModifiedDate":"2016-12-20"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            logger.warning(\"Data file not in the correct format. Will be starting with an empty AddressBook\");","lastModifiedDate":"2016-09-24"},{"lineNumber":91,"author":{"gitId":"-"},"content":"            initialData \u003d new AddressBook();","lastModifiedDate":"2016-09-24"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-10-01"},{"lineNumber":93,"author":{"gitId":"-"},"content":"            logger.warning(\"Problem while reading from the file. Will be starting with an empty AddressBook\");","lastModifiedDate":"2016-10-12"},{"lineNumber":94,"author":{"gitId":"-"},"content":"            initialData \u003d new AddressBook();","lastModifiedDate":"2016-09-24"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        return new ModelManager(initialData, userPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    private void initLogging(Config config) {","lastModifiedDate":"2016-09-24"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        LogsCenter.init(config);","lastModifiedDate":"2016-09-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     * Returns a {@code Config} using the file at {@code configFilePath}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     * The default file path {@code Config#DEFAULT_CONFIG_FILE} will be used instead","lastModifiedDate":"2017-08-16"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     * if {@code configFilePath} is null.","lastModifiedDate":"2017-08-16"},{"lineNumber":108,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    protected Config initConfig(Path configFilePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        Config initializedConfig;","lastModifiedDate":"2016-09-24"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        Path configFilePathUsed;","lastModifiedDate":"2018-04-21"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        configFilePathUsed \u003d Config.DEFAULT_CONFIG_FILE;","lastModifiedDate":"2016-09-24"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        if (configFilePath !\u003d null) {","lastModifiedDate":"2016-09-24"},{"lineNumber":116,"author":{"gitId":"-"},"content":"            logger.info(\"Custom Config file specified \" + configFilePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":117,"author":{"gitId":"-"},"content":"            configFilePathUsed \u003d configFilePath;","lastModifiedDate":"2016-09-24"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        logger.info(\"Using config file : \" + configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":123,"author":{"gitId":"-"},"content":"            Optional\u003cConfig\u003e configOptional \u003d ConfigUtil.readConfig(configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":124,"author":{"gitId":"-"},"content":"            initializedConfig \u003d configOptional.orElse(new Config());","lastModifiedDate":"2016-09-24"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":126,"author":{"gitId":"-"},"content":"            logger.warning(\"Config file at \" + configFilePathUsed + \" is not in the correct format. \"","lastModifiedDate":"2017-05-22"},{"lineNumber":127,"author":{"gitId":"-"},"content":"                    + \"Using default config properties\");","lastModifiedDate":"2017-05-22"},{"lineNumber":128,"author":{"gitId":"-"},"content":"            initializedConfig \u003d new Config();","lastModifiedDate":"2016-09-24"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        //Update config file in case it was missing to begin with or there are new/unused fields","lastModifiedDate":"2016-09-24"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":133,"author":{"gitId":"-"},"content":"            ConfigUtil.saveConfig(initializedConfig, configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":135,"author":{"gitId":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        return initializedConfig;","lastModifiedDate":"2016-09-24"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":141,"author":{"gitId":"-"},"content":"     * Returns a {@code UserPrefs} using the file at {@code storage}\u0027s user prefs file path,","lastModifiedDate":"2017-08-16"},{"lineNumber":142,"author":{"gitId":"-"},"content":"     * or a new {@code UserPrefs} with default configuration if errors occur when","lastModifiedDate":"2017-08-16"},{"lineNumber":143,"author":{"gitId":"-"},"content":"     * reading from the file.","lastModifiedDate":"2017-08-16"},{"lineNumber":144,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    protected UserPrefs initPrefs(UserPrefsStorage storage) {","lastModifiedDate":"2017-02-25"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        Path prefsFilePath \u003d storage.getUserPrefsFilePath();","lastModifiedDate":"2018-04-21"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        logger.info(\"Using prefs file : \" + prefsFilePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        UserPrefs initializedPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":151,"author":{"gitId":"-"},"content":"            Optional\u003cUserPrefs\u003e prefsOptional \u003d storage.readUserPrefs();","lastModifiedDate":"2016-09-25"},{"lineNumber":152,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d prefsOptional.orElse(new UserPrefs());","lastModifiedDate":"2016-09-24"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":154,"author":{"gitId":"-"},"content":"            logger.warning(\"UserPrefs file at \" + prefsFilePath + \" is not in the correct format. \"","lastModifiedDate":"2017-05-22"},{"lineNumber":155,"author":{"gitId":"-"},"content":"                    + \"Using default user prefs\");","lastModifiedDate":"2017-05-22"},{"lineNumber":156,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":158,"author":{"gitId":"-"},"content":"            logger.warning(\"Problem while reading from the file. Will be starting with an empty AddressBook\");","lastModifiedDate":"2016-10-12"},{"lineNumber":159,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        //Update prefs file in case it was missing to begin with or there are new/unused fields","lastModifiedDate":"2016-09-24"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":164,"author":{"gitId":"-"},"content":"            storage.saveUserPrefs(initializedPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":166,"author":{"gitId":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        return initializedPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    public void start(Stage primaryStage) {","lastModifiedDate":"2016-08-08"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        logger.info(\"Starting AddressBook \" + MainApp.VERSION);","lastModifiedDate":"2016-09-29"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        ui.start(primaryStage);","lastModifiedDate":"2016-09-25"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    public void stop() {","lastModifiedDate":"2016-08-08"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d [ Stopping Address Book ] \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2016-09-29"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":182,"author":{"gitId":"-"},"content":"            storage.saveUserPrefs(model.getUserPrefs());","lastModifiedDate":"2018-12-06"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":184,"author":{"gitId":"-"},"content":"            logger.severe(\"Failed to save preferences \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":186,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":187,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":188,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"idgrr":6,"-":182}},{"path":"src/main/java/seedu/address/commons/core/Messages.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.core;","lastModifiedDate":"2016-09-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Container for user visible messages.","lastModifiedDate":"2016-08-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class Messages {","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_UNKNOWN_COMMAND \u003d \"Unknown command\";","lastModifiedDate":"2016-09-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_COMMAND_FORMAT \u003d \"Invalid command format! \\n%1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"pranav-ganesh"},"content":"    public static final String MESSAGE_INVALID_PERSON_DISPLAYED_INDEX \u003d \"The index provided is invalid.\";","lastModifiedDate":"2021-11-08"},{"lineNumber":11,"author":{"gitId":"houtenteo"},"content":"    public static final String MESSAGE_PERSONS_LISTED_OVERVIEW \u003d \"%1$d person(s) listed!\";","lastModifiedDate":"2021-11-01"},{"lineNumber":12,"author":{"gitId":"loose-bus-change"},"content":"    public static final String MESSAGE_INDEX_NOT_PARSED \u003d \"The index entered is not within the allowed range. \"","lastModifiedDate":"2021-11-07"},{"lineNumber":13,"author":{"gitId":"loose-bus-change"},"content":"            + \"The index cannot be bigger than 2147483647 (i.e., MAX_VALUE).\";","lastModifiedDate":"2021-11-07"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":15,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"houtenteo":1,"loose-bus-change":2,"pranav-ganesh":1,"-":11}},{"path":"src/main/java/seedu/address/commons/exceptions/DataConversionException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.exceptions;","lastModifiedDate":"2016-09-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Represents an error during conversion of data from one format to another","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class DataConversionException extends Exception {","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    public DataConversionException(Exception cause) {","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"        super(cause);","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"idgrr"},"content":"    public DataConversionException(String cause) {","lastModifiedDate":"2021-11-03"},{"lineNumber":12,"author":{"gitId":"idgrr"},"content":"        super(cause);","lastModifiedDate":"2021-11-03"},{"lineNumber":13,"author":{"gitId":"idgrr"},"content":"    }","lastModifiedDate":"2021-11-03"},{"lineNumber":14,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"idgrr":4,"-":11}},{"path":"src/main/java/seedu/address/commons/util/CsvUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"idgrr"},"content":"package seedu.address.commons.util;","lastModifiedDate":"2021-09-22"},{"lineNumber":2,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":3,"author":{"gitId":"idgrr"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-09-22"},{"lineNumber":4,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":5,"author":{"gitId":"idgrr"},"content":"import java.io.File;","lastModifiedDate":"2021-10-10"},{"lineNumber":6,"author":{"gitId":"idgrr"},"content":"import java.io.IOException;","lastModifiedDate":"2021-09-22"},{"lineNumber":7,"author":{"gitId":"idgrr"},"content":"import java.nio.file.Files;","lastModifiedDate":"2021-09-22"},{"lineNumber":8,"author":{"gitId":"idgrr"},"content":"import java.nio.file.Path;","lastModifiedDate":"2021-09-22"},{"lineNumber":9,"author":{"gitId":"idgrr"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2021-10-10"},{"lineNumber":10,"author":{"gitId":"idgrr"},"content":"import java.text.SimpleDateFormat;","lastModifiedDate":"2021-10-10"},{"lineNumber":11,"author":{"gitId":"idgrr"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-09-22"},{"lineNumber":12,"author":{"gitId":"idgrr"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-10-06"},{"lineNumber":13,"author":{"gitId":"idgrr"},"content":"import java.util.Date;","lastModifiedDate":"2021-10-10"},{"lineNumber":14,"author":{"gitId":"idgrr"},"content":"import java.util.List;","lastModifiedDate":"2021-09-22"},{"lineNumber":15,"author":{"gitId":"idgrr"},"content":"import java.util.Locale;","lastModifiedDate":"2021-10-06"},{"lineNumber":16,"author":{"gitId":"idgrr"},"content":"import java.util.Optional;","lastModifiedDate":"2021-09-22"},{"lineNumber":17,"author":{"gitId":"idgrr"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2021-09-22"},{"lineNumber":18,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":19,"author":{"gitId":"idgrr"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2021-09-22"},{"lineNumber":20,"author":{"gitId":"idgrr"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2021-09-22"},{"lineNumber":21,"author":{"gitId":"idgrr"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2021-09-22"},{"lineNumber":22,"author":{"gitId":"idgrr"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2021-09-22"},{"lineNumber":23,"author":{"gitId":"idgrr"},"content":"import seedu.address.storage.CsvAdaptedPerson;","lastModifiedDate":"2021-09-22"},{"lineNumber":24,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":25,"author":{"gitId":"idgrr"},"content":"/**","lastModifiedDate":"2021-09-22"},{"lineNumber":26,"author":{"gitId":"idgrr"},"content":" * Converts a List of persons {@code Person} instance to CSV and vice versa","lastModifiedDate":"2021-10-24"},{"lineNumber":27,"author":{"gitId":"idgrr"},"content":" */","lastModifiedDate":"2021-09-22"},{"lineNumber":28,"author":{"gitId":"idgrr"},"content":"public class CsvUtil {","lastModifiedDate":"2021-09-22"},{"lineNumber":29,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":30,"author":{"gitId":"idgrr"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(CsvUtil.class);","lastModifiedDate":"2021-09-22"},{"lineNumber":31,"author":{"gitId":"idgrr"},"content":"    private static List\u003cInteger\u003e unsuccessfulRow \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-09-25"},{"lineNumber":32,"author":{"gitId":"idgrr"},"content":"    private static String header \u003d \"\";","lastModifiedDate":"2021-09-29"},{"lineNumber":33,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":34,"author":{"gitId":"idgrr"},"content":"    /**","lastModifiedDate":"2021-09-29"},{"lineNumber":35,"author":{"gitId":"idgrr"},"content":"     * Reads from file and returns a list of valid people to be imported in","lastModifiedDate":"2021-09-29"},{"lineNumber":36,"author":{"gitId":"idgrr"},"content":"     *","lastModifiedDate":"2021-09-29"},{"lineNumber":37,"author":{"gitId":"idgrr"},"content":"     * @param filePath path that contains the csv file to be imported","lastModifiedDate":"2021-09-29"},{"lineNumber":38,"author":{"gitId":"idgrr"},"content":"     * @return list of valid people to be imported","lastModifiedDate":"2021-09-29"},{"lineNumber":39,"author":{"gitId":"idgrr"},"content":"     * @throws IOException thrown when file util could not read the file","lastModifiedDate":"2021-09-29"},{"lineNumber":40,"author":{"gitId":"idgrr"},"content":"     */","lastModifiedDate":"2021-09-29"},{"lineNumber":41,"author":{"gitId":"idgrr"},"content":"    public static List\u003cPerson\u003e deserializeObjectFromCsvFile(Path filePath)","lastModifiedDate":"2021-09-29"},{"lineNumber":42,"author":{"gitId":"idgrr"},"content":"            throws IOException, DataConversionException {","lastModifiedDate":"2021-10-06"},{"lineNumber":43,"author":{"gitId":"idgrr"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2021-09-22"},{"lineNumber":44,"author":{"gitId":"idgrr"},"content":"        return fromCsvString(FileUtil.readFromFile(filePath));","lastModifiedDate":"2021-09-22"},{"lineNumber":45,"author":{"gitId":"idgrr"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":46,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":47,"author":{"gitId":"idgrr"},"content":"    /**","lastModifiedDate":"2021-10-24"},{"lineNumber":48,"author":{"gitId":"idgrr"},"content":"     * Takes in a list of people and writes the individual details in a Csv file","lastModifiedDate":"2021-10-24"},{"lineNumber":49,"author":{"gitId":"idgrr"},"content":"     *","lastModifiedDate":"2021-10-24"},{"lineNumber":50,"author":{"gitId":"idgrr"},"content":"     * @param filePath","lastModifiedDate":"2021-10-24"},{"lineNumber":51,"author":{"gitId":"idgrr"},"content":"     * @param currentState","lastModifiedDate":"2021-10-24"},{"lineNumber":52,"author":{"gitId":"idgrr"},"content":"     * @throws IOException","lastModifiedDate":"2021-10-24"},{"lineNumber":53,"author":{"gitId":"idgrr"},"content":"     */","lastModifiedDate":"2021-10-24"},{"lineNumber":54,"author":{"gitId":"idgrr"},"content":"    public static void serializeObjectToCsvFile(Path filePath, List\u003cPerson\u003e currentState) throws IOException {","lastModifiedDate":"2021-10-10"},{"lineNumber":55,"author":{"gitId":"idgrr"},"content":"        FileUtil.writeToFile(filePath, toCsvString(currentState));","lastModifiedDate":"2021-10-10"},{"lineNumber":56,"author":{"gitId":"idgrr"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":57,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":58,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":59,"author":{"gitId":"idgrr"},"content":"    /**","lastModifiedDate":"2021-09-22"},{"lineNumber":60,"author":{"gitId":"idgrr"},"content":"     * Reads from Csv file and converts into an optional list of people","lastModifiedDate":"2021-10-24"},{"lineNumber":61,"author":{"gitId":"idgrr"},"content":"     *","lastModifiedDate":"2021-09-22"},{"lineNumber":62,"author":{"gitId":"idgrr"},"content":"     * @param filePath filepath of the csv","lastModifiedDate":"2021-09-22"},{"lineNumber":63,"author":{"gitId":"idgrr"},"content":"     * @return list optional, whether there is a list of people within the Csv file","lastModifiedDate":"2021-10-24"},{"lineNumber":64,"author":{"gitId":"idgrr"},"content":"     * @throws DataConversionException","lastModifiedDate":"2021-09-22"},{"lineNumber":65,"author":{"gitId":"idgrr"},"content":"     */","lastModifiedDate":"2021-09-22"},{"lineNumber":66,"author":{"gitId":"idgrr"},"content":"    public static Optional\u003cList\u003cPerson\u003e\u003e readCsvFile(Path filePath) throws DataConversionException {","lastModifiedDate":"2021-09-22"},{"lineNumber":67,"author":{"gitId":"idgrr"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2021-09-22"},{"lineNumber":68,"author":{"gitId":"idgrr"},"content":"        if (!Files.exists(filePath)) {","lastModifiedDate":"2021-09-22"},{"lineNumber":69,"author":{"gitId":"idgrr"},"content":"            logger.info(\"CSV file \" + filePath + \" not found\");","lastModifiedDate":"2021-09-29"},{"lineNumber":70,"author":{"gitId":"idgrr"},"content":"            return Optional.empty();","lastModifiedDate":"2021-09-22"},{"lineNumber":71,"author":{"gitId":"idgrr"},"content":"        }","lastModifiedDate":"2021-09-22"},{"lineNumber":72,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":73,"author":{"gitId":"idgrr"},"content":"        List\u003cPerson\u003e persons;","lastModifiedDate":"2021-09-22"},{"lineNumber":74,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":75,"author":{"gitId":"idgrr"},"content":"        try {","lastModifiedDate":"2021-09-22"},{"lineNumber":76,"author":{"gitId":"idgrr"},"content":"            persons \u003d deserializeObjectFromCsvFile(filePath);","lastModifiedDate":"2021-09-22"},{"lineNumber":77,"author":{"gitId":"idgrr"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-09-29"},{"lineNumber":78,"author":{"gitId":"idgrr"},"content":"            logger.warning(\"Error reading from CSV file \" + filePath);","lastModifiedDate":"2021-10-24"},{"lineNumber":79,"author":{"gitId":"idgrr"},"content":"            throw new DataConversionException(e);","lastModifiedDate":"2021-09-22"},{"lineNumber":80,"author":{"gitId":"idgrr"},"content":"        }","lastModifiedDate":"2021-09-22"},{"lineNumber":81,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":82,"author":{"gitId":"idgrr"},"content":"        return Optional.of(persons);","lastModifiedDate":"2021-09-22"},{"lineNumber":83,"author":{"gitId":"idgrr"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":84,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":85,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":86,"author":{"gitId":"idgrr"},"content":"    /**","lastModifiedDate":"2021-10-10"},{"lineNumber":87,"author":{"gitId":"idgrr"},"content":"     * Gets the current state of the application databse and writes it into a CSV file","lastModifiedDate":"2021-10-10"},{"lineNumber":88,"author":{"gitId":"idgrr"},"content":"     *","lastModifiedDate":"2021-10-10"},{"lineNumber":89,"author":{"gitId":"idgrr"},"content":"     * @param currentState list of valid people currently in the database","lastModifiedDate":"2021-10-10"},{"lineNumber":90,"author":{"gitId":"idgrr"},"content":"     */","lastModifiedDate":"2021-10-10"},{"lineNumber":91,"author":{"gitId":"idgrr"},"content":"    public static void writeCsvFile(List\u003cPerson\u003e currentState, Path exportPath) {","lastModifiedDate":"2021-10-24"},{"lineNumber":92,"author":{"gitId":"idgrr"},"content":"        requireNonNull(currentState);","lastModifiedDate":"2021-10-10"},{"lineNumber":93,"author":{"gitId":"idgrr"},"content":"        File dir \u003d new File(exportPath.toString());","lastModifiedDate":"2021-10-24"},{"lineNumber":94,"author":{"gitId":"idgrr"},"content":"        dir.mkdirs();","lastModifiedDate":"2021-10-10"},{"lineNumber":95,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":96,"author":{"gitId":"idgrr"},"content":"        SimpleDateFormat dateFormat \u003d new SimpleDateFormat(\"dd-MM-yy HH-mm-ss\");","lastModifiedDate":"2021-10-10"},{"lineNumber":97,"author":{"gitId":"idgrr"},"content":"        Date date \u003d new Date();","lastModifiedDate":"2021-10-10"},{"lineNumber":98,"author":{"gitId":"idgrr"},"content":"        String exportUniqueName \u003d \"export[\" + dateFormat.format(date) + \"].csv\";","lastModifiedDate":"2021-10-10"},{"lineNumber":99,"author":{"gitId":"idgrr"},"content":"        Path exportFilePath \u003d Paths.get(exportPath.toString() , exportUniqueName);","lastModifiedDate":"2021-10-24"},{"lineNumber":100,"author":{"gitId":"idgrr"},"content":"        try {","lastModifiedDate":"2021-10-10"},{"lineNumber":101,"author":{"gitId":"idgrr"},"content":"            FileUtil.createIfMissing(exportFilePath);","lastModifiedDate":"2021-10-10"},{"lineNumber":102,"author":{"gitId":"idgrr"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-10-10"},{"lineNumber":103,"author":{"gitId":"idgrr"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-10-10"},{"lineNumber":104,"author":{"gitId":"idgrr"},"content":"        }","lastModifiedDate":"2021-10-10"},{"lineNumber":105,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":106,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":107,"author":{"gitId":"idgrr"},"content":"        try {","lastModifiedDate":"2021-10-10"},{"lineNumber":108,"author":{"gitId":"idgrr"},"content":"            serializeObjectToCsvFile(exportFilePath, currentState);","lastModifiedDate":"2021-10-10"},{"lineNumber":109,"author":{"gitId":"idgrr"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-10-10"},{"lineNumber":110,"author":{"gitId":"idgrr"},"content":"            logger.warning(\"Error writing from CsvFile file \" + exportFilePath);","lastModifiedDate":"2021-10-10"},{"lineNumber":111,"author":{"gitId":"idgrr"},"content":"        }","lastModifiedDate":"2021-10-10"},{"lineNumber":112,"author":{"gitId":"idgrr"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":113,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":114,"author":{"gitId":"idgrr"},"content":"    /**","lastModifiedDate":"2021-09-22"},{"lineNumber":115,"author":{"gitId":"idgrr"},"content":"     * Returns the list of valid person from the given file or {@code Optional.empty()} object if the file is not found.","lastModifiedDate":"2021-09-22"},{"lineNumber":116,"author":{"gitId":"idgrr"},"content":"     *   If any columns in the CSV file is not found, it will not be imported","lastModifiedDate":"2021-09-22"},{"lineNumber":117,"author":{"gitId":"idgrr"},"content":"     *     Will not read the header of the file as it does not contain a persondetails","lastModifiedDate":"2021-09-22"},{"lineNumber":118,"author":{"gitId":"idgrr"},"content":"     * @param csv","lastModifiedDate":"2021-09-22"},{"lineNumber":119,"author":{"gitId":"idgrr"},"content":"     * @return","lastModifiedDate":"2021-09-22"},{"lineNumber":120,"author":{"gitId":"idgrr"},"content":"     */","lastModifiedDate":"2021-09-22"},{"lineNumber":121,"author":{"gitId":"houtenteo"},"content":"    public static List\u003cPerson\u003e fromCsvString(String csv) throws DataConversionException {","lastModifiedDate":"2021-10-18"},{"lineNumber":122,"author":{"gitId":"idgrr"},"content":"        unsuccessfulRow \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-09-25"},{"lineNumber":123,"author":{"gitId":"idgrr"},"content":"        List\u003cPerson\u003e persons \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-09-22"},{"lineNumber":124,"author":{"gitId":"idgrr"},"content":"        String[] personRows \u003d csv.split(\"\\n\");","lastModifiedDate":"2021-09-22"},{"lineNumber":125,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":126,"author":{"gitId":"idgrr"},"content":"        header \u003d personRows[0];","lastModifiedDate":"2021-09-29"},{"lineNumber":127,"author":{"gitId":"idgrr"},"content":"        checkValidHeader(header);","lastModifiedDate":"2021-10-06"},{"lineNumber":128,"author":{"gitId":"idgrr"},"content":"        for (int i \u003d 1; i \u003c personRows.length; i++) {","lastModifiedDate":"2021-09-22"},{"lineNumber":129,"author":{"gitId":"idgrr"},"content":"            Optional\u003cPerson\u003e temp \u003d createPerson(personRows[i].trim(), i + 1);","lastModifiedDate":"2021-09-29"},{"lineNumber":130,"author":{"gitId":"idgrr"},"content":"            if (temp.equals(Optional.empty())) {","lastModifiedDate":"2021-09-29"},{"lineNumber":131,"author":{"gitId":"idgrr"},"content":"                unsuccessfulRow.add(i + 1);","lastModifiedDate":"2021-09-25"},{"lineNumber":132,"author":{"gitId":"idgrr"},"content":"                continue;","lastModifiedDate":"2021-09-22"},{"lineNumber":133,"author":{"gitId":"idgrr"},"content":"            }","lastModifiedDate":"2021-09-22"},{"lineNumber":134,"author":{"gitId":"idgrr"},"content":"            persons.add(temp.get());","lastModifiedDate":"2021-09-29"},{"lineNumber":135,"author":{"gitId":"idgrr"},"content":"        }","lastModifiedDate":"2021-09-22"},{"lineNumber":136,"author":{"gitId":"idgrr"},"content":"        return persons;","lastModifiedDate":"2021-09-22"},{"lineNumber":137,"author":{"gitId":"idgrr"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":138,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":139,"author":{"gitId":"idgrr"},"content":"    /**","lastModifiedDate":"2021-09-22"},{"lineNumber":140,"author":{"gitId":"idgrr"},"content":"     * Creates a valid person based on the rowdetails found in the csv file","lastModifiedDate":"2021-09-22"},{"lineNumber":141,"author":{"gitId":"idgrr"},"content":"     *","lastModifiedDate":"2021-09-22"},{"lineNumber":142,"author":{"gitId":"idgrr"},"content":"     * @param rowStringPerson","lastModifiedDate":"2021-09-22"},{"lineNumber":143,"author":{"gitId":"idgrr"},"content":"     * @return","lastModifiedDate":"2021-09-22"},{"lineNumber":144,"author":{"gitId":"idgrr"},"content":"     */","lastModifiedDate":"2021-09-22"},{"lineNumber":145,"author":{"gitId":"houtenteo"},"content":"    public static Optional\u003cPerson\u003e createPerson(String rowStringPerson, int rowNumber) {","lastModifiedDate":"2021-10-18"},{"lineNumber":146,"author":{"gitId":"idgrr"},"content":"        try {","lastModifiedDate":"2021-09-22"},{"lineNumber":147,"author":{"gitId":"idgrr"},"content":"            return Optional.of(new CsvAdaptedPerson(rowStringPerson).toModelType());","lastModifiedDate":"2021-09-29"},{"lineNumber":148,"author":{"gitId":"idgrr"},"content":"        } catch (IllegalValueException e) {","lastModifiedDate":"2021-09-22"},{"lineNumber":149,"author":{"gitId":"idgrr"},"content":"            logger.warning(\"CSV File Import error : In row \" + rowNumber + \" : \" + e);","lastModifiedDate":"2021-10-02"},{"lineNumber":150,"author":{"gitId":"idgrr"},"content":"            return Optional.empty();","lastModifiedDate":"2021-09-29"},{"lineNumber":151,"author":{"gitId":"idgrr"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2021-10-06"},{"lineNumber":152,"author":{"gitId":"idgrr"},"content":"            logger.warning(\"CSV File Import error : In row \" + rowNumber + \" : \" + e.toString());","lastModifiedDate":"2021-10-06"},{"lineNumber":153,"author":{"gitId":"idgrr"},"content":"            return Optional.empty();","lastModifiedDate":"2021-10-06"},{"lineNumber":154,"author":{"gitId":"idgrr"},"content":"        }","lastModifiedDate":"2021-09-22"},{"lineNumber":155,"author":{"gitId":"idgrr"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":156,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":157,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":158,"author":{"gitId":"idgrr"},"content":"    static String toCsvString(List\u003cPerson\u003e personList) {","lastModifiedDate":"2021-10-10"},{"lineNumber":159,"author":{"gitId":"idgrr"},"content":"        String[] headingOrder \u003d CsvAdaptedPerson.headerOrder();","lastModifiedDate":"2021-10-19"},{"lineNumber":160,"author":{"gitId":"idgrr"},"content":"        String headerString \u003d headingOrder[0];","lastModifiedDate":"2021-10-10"},{"lineNumber":161,"author":{"gitId":"idgrr"},"content":"        for (int i \u003d 1; i \u003c headingOrder.length; i++) {","lastModifiedDate":"2021-10-10"},{"lineNumber":162,"author":{"gitId":"idgrr"},"content":"            headerString \u003d headerString + \";\" + headingOrder[i];","lastModifiedDate":"2021-10-10"},{"lineNumber":163,"author":{"gitId":"idgrr"},"content":"        }","lastModifiedDate":"2021-10-10"},{"lineNumber":164,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":165,"author":{"gitId":"idgrr"},"content":"        String toCsv \u003d headerString;","lastModifiedDate":"2021-10-10"},{"lineNumber":166,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":167,"author":{"gitId":"idgrr"},"content":"        for (Person p : personList) {","lastModifiedDate":"2021-10-10"},{"lineNumber":168,"author":{"gitId":"idgrr"},"content":"            String csvString \u003d p.toStringNoHeaders();","lastModifiedDate":"2021-10-19"},{"lineNumber":169,"author":{"gitId":"idgrr"},"content":"            toCsv \u003d toCsv + \"\\n\" + csvString;","lastModifiedDate":"2021-10-10"},{"lineNumber":170,"author":{"gitId":"idgrr"},"content":"        }","lastModifiedDate":"2021-10-10"},{"lineNumber":171,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":172,"author":{"gitId":"idgrr"},"content":"        return toCsv + \"\\n\";","lastModifiedDate":"2021-10-10"},{"lineNumber":173,"author":{"gitId":"idgrr"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":174,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":175,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":176,"author":{"gitId":"idgrr"},"content":"    public static List\u003cInteger\u003e getUnsuccessfulRow() {","lastModifiedDate":"2021-10-18"},{"lineNumber":177,"author":{"gitId":"idgrr"},"content":"        return unsuccessfulRow;","lastModifiedDate":"2021-10-18"},{"lineNumber":178,"author":{"gitId":"idgrr"},"content":"    }","lastModifiedDate":"2021-09-25"},{"lineNumber":179,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":180,"author":{"gitId":"houtenteo"},"content":"    /**","lastModifiedDate":"2021-10-18"},{"lineNumber":181,"author":{"gitId":"houtenteo"},"content":"     * Check header of CSV","lastModifiedDate":"2021-10-18"},{"lineNumber":182,"author":{"gitId":"houtenteo"},"content":"     *","lastModifiedDate":"2021-10-18"},{"lineNumber":183,"author":{"gitId":"houtenteo"},"content":"     * @param header first line of CSV that represents the header","lastModifiedDate":"2021-10-18"},{"lineNumber":184,"author":{"gitId":"houtenteo"},"content":"     * @throws DataConversionException thrown if header does not follow format","lastModifiedDate":"2021-10-18"},{"lineNumber":185,"author":{"gitId":"houtenteo"},"content":"     */","lastModifiedDate":"2021-10-18"},{"lineNumber":186,"author":{"gitId":"houtenteo"},"content":"    public static void checkValidHeader(String header)","lastModifiedDate":"2021-10-18"},{"lineNumber":187,"author":{"gitId":"idgrr"},"content":"            throws DataConversionException {","lastModifiedDate":"2021-10-06"},{"lineNumber":188,"author":{"gitId":"idgrr"},"content":"        String[] headerCheck \u003d header.split(\";\", CsvAdaptedPerson.ATTRIBUTE_ORDERING.keySet().size());","lastModifiedDate":"2021-10-06"},{"lineNumber":189,"author":{"gitId":"idgrr"},"content":"        String[] headerValid \u003d CsvAdaptedPerson.headerOrder();","lastModifiedDate":"2021-10-19"},{"lineNumber":190,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":191,"author":{"gitId":"idgrr"},"content":"        if (headerCheck.length \u003d\u003d 1) {","lastModifiedDate":"2021-10-06"},{"lineNumber":192,"author":{"gitId":"idgrr"},"content":"            throw new DataConversionException(\"Wrong delimiter, Refer to user guide to use correct \"","lastModifiedDate":"2021-11-03"},{"lineNumber":193,"author":{"gitId":"idgrr"},"content":"                    + \"delimiter.\\nEach row should have \"","lastModifiedDate":"2021-10-06"},{"lineNumber":194,"author":{"gitId":"idgrr"},"content":"                    + (CsvAdaptedPerson.ATTRIBUTE_ORDERING.keySet().size() - 1) + \" \u0027;\u0027 \");","lastModifiedDate":"2021-11-03"},{"lineNumber":195,"author":{"gitId":"idgrr"},"content":"        }","lastModifiedDate":"2021-10-06"},{"lineNumber":196,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":197,"author":{"gitId":"idgrr"},"content":"        if (headerCheck.length !\u003d headerValid.length) {","lastModifiedDate":"2021-10-18"},{"lineNumber":198,"author":{"gitId":"idgrr"},"content":"            throw new DataConversionException(\"Missing/Extra Headers, Please check file\");","lastModifiedDate":"2021-11-03"},{"lineNumber":199,"author":{"gitId":"idgrr"},"content":"        }","lastModifiedDate":"2021-10-06"},{"lineNumber":200,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":201,"author":{"gitId":"idgrr"},"content":"        for (int i \u003d 0; i \u003c headerValid.length; i++) {","lastModifiedDate":"2021-11-03"},{"lineNumber":202,"author":{"gitId":"idgrr"},"content":"            String upperHeader \u003d headerCheck[i].toUpperCase(Locale.ROOT);","lastModifiedDate":"2021-10-06"},{"lineNumber":203,"author":{"gitId":"idgrr"},"content":"            String upperValidHeader \u003d headerValid[i].toUpperCase(Locale.ROOT);","lastModifiedDate":"2021-10-06"},{"lineNumber":204,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":205,"author":{"gitId":"idgrr"},"content":"            if (!(upperHeader.contains(upperValidHeader))) {","lastModifiedDate":"2021-10-06"},{"lineNumber":206,"author":{"gitId":"idgrr"},"content":"                throw new DataConversionException(\"Wrong header detected,\"","lastModifiedDate":"2021-11-03"},{"lineNumber":207,"author":{"gitId":"idgrr"},"content":"                        + \"please double check file\\nFirst row of csv must contain valid headers \"","lastModifiedDate":"2021-11-03"},{"lineNumber":208,"author":{"gitId":"idgrr"},"content":"                        + Arrays.toString(headerValid) + \" in that order.\");","lastModifiedDate":"2021-11-03"},{"lineNumber":209,"author":{"gitId":"idgrr"},"content":"            }","lastModifiedDate":"2021-10-06"},{"lineNumber":210,"author":{"gitId":"idgrr"},"content":"        }","lastModifiedDate":"2021-10-06"},{"lineNumber":211,"author":{"gitId":"idgrr"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":212,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":213,"author":{"gitId":"idgrr"},"content":"}","lastModifiedDate":"2021-09-22"}],"authorContributionMap":{"houtenteo":9,"idgrr":204}},{"path":"src/main/java/seedu/address/logic/Logic.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2016-09-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":9,"author":{"gitId":"Kangxun"},"content":"import seedu.address.logic.comparators.exceptions.ComparatorException;","lastModifiedDate":"2021-10-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-12-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * API of the Logic component","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public interface Logic {","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2016-09-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * @param commandText The command as entered by the user.","lastModifiedDate":"2016-09-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * @return the result of the command execution.","lastModifiedDate":"2016-09-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @throws ParseException If an error occurs during parsing.","lastModifiedDate":"2017-03-11"},{"lineNumber":24,"author":{"gitId":"Kangxun"},"content":"     * @throws ComparatorException If an error occurs during comparing Persons.","lastModifiedDate":"2021-10-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-25"},{"lineNumber":26,"author":{"gitId":"Kangxun"},"content":"    CommandResult execute(String commandText) throws CommandException, ParseException, ComparatorException;","lastModifiedDate":"2021-10-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Returns the AddressBook.","lastModifiedDate":"2018-12-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * @see seedu.address.model.Model#getAddressBook()","lastModifiedDate":"2018-12-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    ReadOnlyAddressBook getAddressBook();","lastModifiedDate":"2018-12-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /** Returns an unmodifiable view of the filtered list of persons */","lastModifiedDate":"2017-09-01"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    ObservableList\u003cPerson\u003e getFilteredPersonList();","lastModifiedDate":"2018-01-10"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-26"},{"lineNumber":38,"author":{"gitId":"Kangxun"},"content":"    /** Returns an unmodifiable view of the original filtered list of persons */","lastModifiedDate":"2021-10-25"},{"lineNumber":39,"author":{"gitId":"Kangxun"},"content":"    ObservableList\u003cPerson\u003e getOriginalPersonList();","lastModifiedDate":"2021-10-25"},{"lineNumber":40,"author":{"gitId":"Kangxun"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Set the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":56,"author":{"gitId":"idgrr"},"content":"    /**","lastModifiedDate":"2021-09-22"},{"lineNumber":57,"author":{"gitId":"idgrr"},"content":"     * Import data from CSV","lastModifiedDate":"2021-09-22"},{"lineNumber":58,"author":{"gitId":"idgrr"},"content":"     */","lastModifiedDate":"2021-09-22"},{"lineNumber":59,"author":{"gitId":"idgrr"},"content":"    String importData();","lastModifiedDate":"2021-09-25"},{"lineNumber":60,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":61,"author":{"gitId":"idgrr"},"content":"    /**","lastModifiedDate":"2021-10-20"},{"lineNumber":62,"author":{"gitId":"idgrr"},"content":"     * Exports and Resets current database","lastModifiedDate":"2021-10-20"},{"lineNumber":63,"author":{"gitId":"idgrr"},"content":"     */","lastModifiedDate":"2021-10-20"},{"lineNumber":64,"author":{"gitId":"idgrr"},"content":"    String exportResetData();","lastModifiedDate":"2021-10-20"},{"lineNumber":65,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":66,"author":{"gitId":"idgrr"},"content":"    /**","lastModifiedDate":"2021-10-10"},{"lineNumber":67,"author":{"gitId":"idgrr"},"content":"     * Export data to CSV","lastModifiedDate":"2021-10-10"},{"lineNumber":68,"author":{"gitId":"idgrr"},"content":"     */","lastModifiedDate":"2021-10-10"},{"lineNumber":69,"author":{"gitId":"idgrr"},"content":"    String exportData();","lastModifiedDate":"2021-10-10"},{"lineNumber":70,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"idgrr":15,"-":49,"Kangxun":6}},{"path":"src/main/java/seedu/address/logic/LogicManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-29"},{"lineNumber":10,"author":{"gitId":"idgrr"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2021-09-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2016-09-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2016-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":14,"author":{"gitId":"Kangxun"},"content":"import seedu.address.logic.comparators.exceptions.ComparatorException;","lastModifiedDate":"2021-10-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.AddressBookParser;","lastModifiedDate":"2017-07-07"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":17,"author":{"gitId":"idgrr"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2021-10-20"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2016-09-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-12-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.storage.Storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * The main LogicManager of the app.","lastModifiedDate":"2016-09-22"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class LogicManager implements Logic {","lastModifiedDate":"2018-12-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public static final String FILE_OPS_ERROR_MESSAGE \u003d \"Could not save data to file: \";","lastModifiedDate":"2018-12-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(LogicManager.class);","lastModifiedDate":"2016-09-29"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private final Model model;","lastModifiedDate":"2016-09-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private final Storage storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private final AddressBookParser addressBookParser;","lastModifiedDate":"2017-07-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * Constructs a {@code LogicManager} with the given {@code Model} and {@code Storage}.","lastModifiedDate":"2020-05-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public LogicManager(Model model, Storage storage) {","lastModifiedDate":"2021-10-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        this.model \u003d model;","lastModifiedDate":"2016-09-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":41,"author":{"gitId":"idgrr"},"content":"        this.addressBookParser \u003d new AddressBookParser();","lastModifiedDate":"2021-09-29"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":45,"author":{"gitId":"Kangxun"},"content":"    public CommandResult execute(String commandText) throws CommandException, ParseException, ComparatorException {","lastModifiedDate":"2021-10-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        logger.info(\"----------------[USER COMMAND][\" + commandText + \"]\");","lastModifiedDate":"2016-09-29"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        CommandResult commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        Command command \u003d addressBookParser.parseCommand(commandText);","lastModifiedDate":"2017-07-07"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        commandResult \u003d command.execute(model);","lastModifiedDate":"2019-01-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            storage.saveAddressBook(model.getAddressBook());","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2018-12-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            throw new CommandException(FILE_OPS_ERROR_MESSAGE + ioe, ioe);","lastModifiedDate":"2018-12-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-03"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2018-12-03"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        return model.getAddressBook();","lastModifiedDate":"2018-12-03"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-03"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return model.getFilteredPersonList();","lastModifiedDate":"2016-09-25"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-29"},{"lineNumber":71,"author":{"gitId":"Kangxun"},"content":"    @Override","lastModifiedDate":"2021-10-25"},{"lineNumber":72,"author":{"gitId":"Kangxun"},"content":"    public ObservableList\u003cPerson\u003e getOriginalPersonList() {","lastModifiedDate":"2021-10-25"},{"lineNumber":73,"author":{"gitId":"Kangxun"},"content":"        return model.getOriginalPersonList();","lastModifiedDate":"2021-10-25"},{"lineNumber":74,"author":{"gitId":"Kangxun"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":75,"author":{"gitId":"Kangxun"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        return model.getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        return model.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        model.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":90,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":91,"author":{"gitId":"idgrr"},"content":"    @Override","lastModifiedDate":"2021-09-22"},{"lineNumber":92,"author":{"gitId":"idgrr"},"content":"    public String importData() {","lastModifiedDate":"2021-09-25"},{"lineNumber":93,"author":{"gitId":"idgrr"},"content":"        try {","lastModifiedDate":"2021-09-22"},{"lineNumber":94,"author":{"gitId":"idgrr"},"content":"            storage.importIntoAddressBook(model);","lastModifiedDate":"2021-10-25"},{"lineNumber":95,"author":{"gitId":"idgrr"},"content":"            storage.saveAddressBook(model.getAddressBook());","lastModifiedDate":"2021-09-22"},{"lineNumber":96,"author":{"gitId":"idgrr"},"content":"        } catch (DataConversionException | IOException e) {","lastModifiedDate":"2021-09-22"},{"lineNumber":97,"author":{"gitId":"idgrr"},"content":"            String error \u003d \"Data file not in the correct format.\\n\" + e.getMessage()","lastModifiedDate":"2021-11-03"},{"lineNumber":98,"author":{"gitId":"idgrr"},"content":"                    + \"\\nData will not be imported. Importing aborted\";","lastModifiedDate":"2021-11-03"},{"lineNumber":99,"author":{"gitId":"idgrr"},"content":"            logger.warning(error);","lastModifiedDate":"2021-11-03"},{"lineNumber":100,"author":{"gitId":"idgrr"},"content":"            return error;","lastModifiedDate":"2021-11-03"},{"lineNumber":101,"author":{"gitId":"idgrr"},"content":"        }","lastModifiedDate":"2021-09-22"},{"lineNumber":102,"author":{"gitId":"idgrr"},"content":"        return storage.getImportStatus();","lastModifiedDate":"2021-10-25"},{"lineNumber":103,"author":{"gitId":"idgrr"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":104,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":105,"author":{"gitId":"idgrr"},"content":"    @Override","lastModifiedDate":"2021-10-20"},{"lineNumber":106,"author":{"gitId":"idgrr"},"content":"    public String exportResetData() {","lastModifiedDate":"2021-10-20"},{"lineNumber":107,"author":{"gitId":"idgrr"},"content":"        exportData();","lastModifiedDate":"2021-10-20"},{"lineNumber":108,"author":{"gitId":"idgrr"},"content":"        this.model.setAddressBook(new AddressBook());","lastModifiedDate":"2021-10-20"},{"lineNumber":109,"author":{"gitId":"idgrr"},"content":"        return \"Exported and reset\";","lastModifiedDate":"2021-10-20"},{"lineNumber":110,"author":{"gitId":"idgrr"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":111,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":112,"author":{"gitId":"idgrr"},"content":"    @Override","lastModifiedDate":"2021-10-10"},{"lineNumber":113,"author":{"gitId":"idgrr"},"content":"    public String exportData() {","lastModifiedDate":"2021-10-10"},{"lineNumber":114,"author":{"gitId":"idgrr"},"content":"        try {","lastModifiedDate":"2021-10-10"},{"lineNumber":115,"author":{"gitId":"idgrr"},"content":"            storage.exportCurrentAddressBook(model);","lastModifiedDate":"2021-10-25"},{"lineNumber":116,"author":{"gitId":"idgrr"},"content":"            storage.saveAddressBook(model.getAddressBook());","lastModifiedDate":"2021-10-10"},{"lineNumber":117,"author":{"gitId":"idgrr"},"content":"        } catch (DataConversionException | IOException e) {","lastModifiedDate":"2021-10-10"},{"lineNumber":118,"author":{"gitId":"idgrr"},"content":"            logger.warning(\"Data file not in the correct format.\\n\" + e.toString()","lastModifiedDate":"2021-10-10"},{"lineNumber":119,"author":{"gitId":"idgrr"},"content":"                    + \"\\nData will not be imported. Importing aborted\");","lastModifiedDate":"2021-10-10"},{"lineNumber":120,"author":{"gitId":"idgrr"},"content":"        }","lastModifiedDate":"2021-10-10"},{"lineNumber":121,"author":{"gitId":"idgrr"},"content":"        return storage.getImportStatus();","lastModifiedDate":"2021-10-25"},{"lineNumber":122,"author":{"gitId":"idgrr"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":123,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":124,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"idgrr":37,"-":80,"Kangxun":7}},{"path":"src/main/java/seedu/address/logic/commands/AddCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2021-10-20"},{"lineNumber":5,"author":{"gitId":"houtenteo"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_AGE;","lastModifiedDate":"2021-10-20"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-05-09"},{"lineNumber":7,"author":{"gitId":"houtenteo"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_GENDER;","lastModifiedDate":"2021-10-20"},{"lineNumber":8,"author":{"gitId":"houtenteo"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_INTEREST;","lastModifiedDate":"2021-10-20"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-05-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-01-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * Adds a person to the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"add\";","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"loose-bus-change"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds a person to the address book. \\n\"","lastModifiedDate":"2021-11-06"},{"lineNumber":24,"author":{"gitId":"loose-bus-change"},"content":"            + \"Parameters: Compulsory parameters: \"","lastModifiedDate":"2021-11-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"            + PREFIX_NAME + \"NAME \"","lastModifiedDate":"2017-06-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"PHONE \"","lastModifiedDate":"2017-05-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"EMAIL \"","lastModifiedDate":"2017-05-09"},{"lineNumber":28,"author":{"gitId":"houtenteo"},"content":"            + \"| \"","lastModifiedDate":"2021-10-20"},{"lineNumber":29,"author":{"gitId":"houtenteo"},"content":"            + \"Optional parameters: \"","lastModifiedDate":"2021-10-20"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            + PREFIX_ADDRESS + \"ADDRESS \"","lastModifiedDate":"2021-10-20"},{"lineNumber":31,"author":{"gitId":"houtenteo"},"content":"            + PREFIX_GENDER + \"GENDER \"","lastModifiedDate":"2021-10-20"},{"lineNumber":32,"author":{"gitId":"houtenteo"},"content":"            + PREFIX_AGE + \"AGE \"","lastModifiedDate":"2021-10-20"},{"lineNumber":33,"author":{"gitId":"houtenteo"},"content":"            + PREFIX_INTEREST + \"INTEREST \\n\"","lastModifiedDate":"2021-10-20"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2017-06-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            + PREFIX_NAME + \"John Doe \"","lastModifiedDate":"2017-06-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"98765432 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"johnd@example.com \"","lastModifiedDate":"2021-10-20"},{"lineNumber":38,"author":{"gitId":"houtenteo"},"content":"            + PREFIX_GENDER + \"M\";","lastModifiedDate":"2021-10-20"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New person added: %1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"This person already exists in the address book\";","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    private final Person toAdd;","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * Creates an AddCommand to add the specified {@code Person}","lastModifiedDate":"2018-01-10"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public AddCommand(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        toAdd \u003d person;","lastModifiedDate":"2018-01-10"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2017-05-15"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        if (model.hasPerson(toAdd)) {","lastModifiedDate":"2018-08-07"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2018-08-07"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        model.addPerson(toAdd);","lastModifiedDate":"2016-09-25"},{"lineNumber":62,"author":{"gitId":"houtenteo"},"content":"        model.sortFilteredPersonList();","lastModifiedDate":"2021-11-01"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, toAdd));","lastModifiedDate":"2016-08-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-22"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-22"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-22"},{"lineNumber":69,"author":{"gitId":"-"},"content":"                || (other instanceof AddCommand // instanceof handles nulls","lastModifiedDate":"2017-06-22"},{"lineNumber":70,"author":{"gitId":"-"},"content":"                \u0026\u0026 toAdd.equals(((AddCommand) other).toAdd));","lastModifiedDate":"2017-06-22"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":72,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"houtenteo":10,"loose-bus-change":2,"-":60}},{"path":"src/main/java/seedu/address/logic/commands/CalledCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"pranav-ganesh"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-09-24"},{"lineNumber":2,"author":{"gitId":"pranav-ganesh"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":3,"author":{"gitId":"pranav-ganesh"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-09-24"},{"lineNumber":4,"author":{"gitId":"pranav-ganesh"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2021-09-24"},{"lineNumber":5,"author":{"gitId":"pranav-ganesh"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":6,"author":{"gitId":"pranav-ganesh"},"content":"import java.util.List;","lastModifiedDate":"2021-10-04"},{"lineNumber":7,"author":{"gitId":"pranav-ganesh"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":8,"author":{"gitId":"pranav-ganesh"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2021-10-04"},{"lineNumber":9,"author":{"gitId":"pranav-ganesh"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-10-04"},{"lineNumber":10,"author":{"gitId":"pranav-ganesh"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-04"},{"lineNumber":11,"author":{"gitId":"pranav-ganesh"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-10-04"},{"lineNumber":12,"author":{"gitId":"houtenteo"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2021-10-18"},{"lineNumber":13,"author":{"gitId":"houtenteo"},"content":"import seedu.address.model.person.Age;","lastModifiedDate":"2021-10-18"},{"lineNumber":14,"author":{"gitId":"pranav-ganesh"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2021-09-25"},{"lineNumber":15,"author":{"gitId":"houtenteo"},"content":"import seedu.address.model.person.Gender;","lastModifiedDate":"2021-10-18"},{"lineNumber":16,"author":{"gitId":"pranav-ganesh"},"content":"import seedu.address.model.person.IsCalled;","lastModifiedDate":"2021-11-04"},{"lineNumber":17,"author":{"gitId":"pranav-ganesh"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2021-09-25"},{"lineNumber":18,"author":{"gitId":"pranav-ganesh"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2021-10-04"},{"lineNumber":19,"author":{"gitId":"pranav-ganesh"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2021-10-04"},{"lineNumber":20,"author":{"gitId":"houtenteo"},"content":"import seedu.address.model.person.interests.InterestsList;","lastModifiedDate":"2021-10-18"},{"lineNumber":21,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":22,"author":{"gitId":"pranav-ganesh"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":23,"author":{"gitId":"pranav-ganesh"},"content":"/**","lastModifiedDate":"2021-09-24"},{"lineNumber":24,"author":{"gitId":"pranav-ganesh"},"content":" * Changes the called field of an existing person in the address book.","lastModifiedDate":"2021-11-04"},{"lineNumber":25,"author":{"gitId":"pranav-ganesh"},"content":" */","lastModifiedDate":"2021-09-24"},{"lineNumber":26,"author":{"gitId":"pranav-ganesh"},"content":"public class CalledCommand extends Command {","lastModifiedDate":"2021-11-04"},{"lineNumber":27,"author":{"gitId":"pranav-ganesh"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":28,"author":{"gitId":"pranav-ganesh"},"content":"    public static final String COMMAND_WORD \u003d \"called\";","lastModifiedDate":"2021-11-04"},{"lineNumber":29,"author":{"gitId":"pranav-ganesh"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2021-09-24"},{"lineNumber":30,"author":{"gitId":"pranav-ganesh"},"content":"            + \": Edits the \u0027Called\u0027 field of the address identified \"","lastModifiedDate":"2021-09-24"},{"lineNumber":31,"author":{"gitId":"pranav-ganesh"},"content":"            + \"by the index number of the address listing. \"","lastModifiedDate":"2021-09-24"},{"lineNumber":32,"author":{"gitId":"pranav-ganesh"},"content":"            + \"Existing \u0027Called\u0027 field will change to True.\\n\"","lastModifiedDate":"2021-09-24"},{"lineNumber":33,"author":{"gitId":"loose-bus-change"},"content":"            + \"Parameter: INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2021-11-06"},{"lineNumber":34,"author":{"gitId":"loose-bus-change"},"content":"            + \"Example: \" + COMMAND_WORD + \" 3\";","lastModifiedDate":"2021-11-06"},{"lineNumber":35,"author":{"gitId":"pranav-ganesh"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":36,"author":{"gitId":"pranav-ganesh"},"content":"    public static final String MESSAGE_DONE_CALL_SUCCESS \u003d \"Marked Call as Done: %1$s\";","lastModifiedDate":"2021-09-24"},{"lineNumber":37,"author":{"gitId":"pranav-ganesh"},"content":"    public static final String MESSAGE_ALREADY_DONE_CALL \u003d \"The \u0027Called\u0027 field for the specified address listing is \"","lastModifiedDate":"2021-09-24"},{"lineNumber":38,"author":{"gitId":"pranav-ganesh"},"content":"            + \"already marked as true!\";","lastModifiedDate":"2021-09-24"},{"lineNumber":39,"author":{"gitId":"pranav-ganesh"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":40,"author":{"gitId":"pranav-ganesh"},"content":"    private final Index index;","lastModifiedDate":"2021-09-24"},{"lineNumber":41,"author":{"gitId":"pranav-ganesh"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":42,"author":{"gitId":"pranav-ganesh"},"content":"    /**","lastModifiedDate":"2021-10-04"},{"lineNumber":43,"author":{"gitId":"pranav-ganesh"},"content":"     * Creates a CalledCommand to mark the specified {@code Person} as called","lastModifiedDate":"2021-11-04"},{"lineNumber":44,"author":{"gitId":"pranav-ganesh"},"content":"     *","lastModifiedDate":"2021-10-04"},{"lineNumber":45,"author":{"gitId":"pranav-ganesh"},"content":"     * @param index of the person in the person list","lastModifiedDate":"2021-10-04"},{"lineNumber":46,"author":{"gitId":"pranav-ganesh"},"content":"     */","lastModifiedDate":"2021-10-04"},{"lineNumber":47,"author":{"gitId":"pranav-ganesh"},"content":"    public CalledCommand(Index index) {","lastModifiedDate":"2021-11-04"},{"lineNumber":48,"author":{"gitId":"pranav-ganesh"},"content":"        requireAllNonNull(index);","lastModifiedDate":"2021-09-24"},{"lineNumber":49,"author":{"gitId":"pranav-ganesh"},"content":"        this.index \u003d index;","lastModifiedDate":"2021-09-24"},{"lineNumber":50,"author":{"gitId":"pranav-ganesh"},"content":"    }","lastModifiedDate":"2021-09-24"},{"lineNumber":51,"author":{"gitId":"pranav-ganesh"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":52,"author":{"gitId":"pranav-ganesh"},"content":"    @Override","lastModifiedDate":"2021-09-24"},{"lineNumber":53,"author":{"gitId":"pranav-ganesh"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-09-24"},{"lineNumber":54,"author":{"gitId":"pranav-ganesh"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-09-24"},{"lineNumber":55,"author":{"gitId":"pranav-ganesh"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2021-09-24"},{"lineNumber":56,"author":{"gitId":"pranav-ganesh"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":57,"author":{"gitId":"pranav-ganesh"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2021-09-24"},{"lineNumber":58,"author":{"gitId":"pranav-ganesh"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2021-09-24"},{"lineNumber":59,"author":{"gitId":"pranav-ganesh"},"content":"        }","lastModifiedDate":"2021-09-24"},{"lineNumber":60,"author":{"gitId":"pranav-ganesh"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":61,"author":{"gitId":"pranav-ganesh"},"content":"        assert index.getZeroBased() \u003c lastShownList.size();","lastModifiedDate":"2021-11-08"},{"lineNumber":62,"author":{"gitId":"pranav-ganesh"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":63,"author":{"gitId":"pranav-ganesh"},"content":"        Person personToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2021-09-25"},{"lineNumber":64,"author":{"gitId":"pranav-ganesh"},"content":"        if (personToEdit.getIsCalled().value) {","lastModifiedDate":"2021-11-04"},{"lineNumber":65,"author":{"gitId":"pranav-ganesh"},"content":"            return new CommandResult(MESSAGE_ALREADY_DONE_CALL);","lastModifiedDate":"2021-09-24"},{"lineNumber":66,"author":{"gitId":"pranav-ganesh"},"content":"        }","lastModifiedDate":"2021-09-24"},{"lineNumber":67,"author":{"gitId":"pranav-ganesh"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":68,"author":{"gitId":"pranav-ganesh"},"content":"        Person editedPerson \u003d createCalledPerson(personToEdit);","lastModifiedDate":"2021-09-25"},{"lineNumber":69,"author":{"gitId":"pranav-ganesh"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":70,"author":{"gitId":"pranav-ganesh"},"content":"        model.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2021-09-25"},{"lineNumber":71,"author":{"gitId":"pranav-ganesh"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":72,"author":{"gitId":"pranav-ganesh"},"content":"        DisplayCommand displayCommand \u003d new DisplayCommand(Index.fromOneBased(index.getOneBased()));","lastModifiedDate":"2021-11-04"},{"lineNumber":73,"author":{"gitId":"pranav-ganesh"},"content":"        displayCommand.execute(model);","lastModifiedDate":"2021-11-04"},{"lineNumber":74,"author":{"gitId":"pranav-ganesh"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":75,"author":{"gitId":"pranav-ganesh"},"content":"        return new CommandResult(String.format(MESSAGE_DONE_CALL_SUCCESS, editedPerson));","lastModifiedDate":"2021-09-25"},{"lineNumber":76,"author":{"gitId":"pranav-ganesh"},"content":"    }","lastModifiedDate":"2021-09-25"},{"lineNumber":77,"author":{"gitId":"pranav-ganesh"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":78,"author":{"gitId":"pranav-ganesh"},"content":"    private static Person createCalledPerson(Person personToEdit) {","lastModifiedDate":"2021-09-25"},{"lineNumber":79,"author":{"gitId":"pranav-ganesh"},"content":"        assert personToEdit !\u003d null;","lastModifiedDate":"2021-09-25"},{"lineNumber":80,"author":{"gitId":"pranav-ganesh"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":81,"author":{"gitId":"pranav-ganesh"},"content":"        Name name \u003d personToEdit.getName();","lastModifiedDate":"2021-09-25"},{"lineNumber":82,"author":{"gitId":"pranav-ganesh"},"content":"        Phone phone \u003d personToEdit.getPhone();","lastModifiedDate":"2021-09-25"},{"lineNumber":83,"author":{"gitId":"pranav-ganesh"},"content":"        Email email \u003d personToEdit.getEmail();","lastModifiedDate":"2021-09-25"},{"lineNumber":84,"author":{"gitId":"pranav-ganesh"},"content":"        IsCalled updatedIsCalled \u003d new IsCalled(\"TRUE\");","lastModifiedDate":"2021-11-04"},{"lineNumber":85,"author":{"gitId":"houtenteo"},"content":"        Address address \u003d personToEdit.getAddress();","lastModifiedDate":"2021-10-18"},{"lineNumber":86,"author":{"gitId":"houtenteo"},"content":"        Gender gender \u003d personToEdit.getGender();","lastModifiedDate":"2021-10-18"},{"lineNumber":87,"author":{"gitId":"houtenteo"},"content":"        Age age \u003d personToEdit.getAge();","lastModifiedDate":"2021-10-18"},{"lineNumber":88,"author":{"gitId":"houtenteo"},"content":"        InterestsList interests \u003d personToEdit.getInterests();","lastModifiedDate":"2021-10-18"},{"lineNumber":89,"author":{"gitId":"pranav-ganesh"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":90,"author":{"gitId":"pranav-ganesh"},"content":"        return new Person(name, phone, email, updatedIsCalled, address, gender, age, interests);","lastModifiedDate":"2021-11-04"},{"lineNumber":91,"author":{"gitId":"pranav-ganesh"},"content":"    }","lastModifiedDate":"2021-09-24"},{"lineNumber":92,"author":{"gitId":"pranav-ganesh"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":93,"author":{"gitId":"pranav-ganesh"},"content":"    @Override","lastModifiedDate":"2021-09-24"},{"lineNumber":94,"author":{"gitId":"pranav-ganesh"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-09-24"},{"lineNumber":95,"author":{"gitId":"pranav-ganesh"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2021-09-24"},{"lineNumber":96,"author":{"gitId":"pranav-ganesh"},"content":"            return true;","lastModifiedDate":"2021-09-24"},{"lineNumber":97,"author":{"gitId":"pranav-ganesh"},"content":"        }","lastModifiedDate":"2021-09-24"},{"lineNumber":98,"author":{"gitId":"pranav-ganesh"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":99,"author":{"gitId":"pranav-ganesh"},"content":"        if (!(other instanceof CalledCommand)) {","lastModifiedDate":"2021-11-04"},{"lineNumber":100,"author":{"gitId":"pranav-ganesh"},"content":"            return false;","lastModifiedDate":"2021-09-24"},{"lineNumber":101,"author":{"gitId":"pranav-ganesh"},"content":"        }","lastModifiedDate":"2021-09-24"},{"lineNumber":102,"author":{"gitId":"pranav-ganesh"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":103,"author":{"gitId":"pranav-ganesh"},"content":"        CalledCommand e \u003d (CalledCommand) other;","lastModifiedDate":"2021-11-04"},{"lineNumber":104,"author":{"gitId":"pranav-ganesh"},"content":"        return index.equals(e.index);","lastModifiedDate":"2021-09-24"},{"lineNumber":105,"author":{"gitId":"pranav-ganesh"},"content":"    }","lastModifiedDate":"2021-09-24"},{"lineNumber":106,"author":{"gitId":"pranav-ganesh"},"content":"}","lastModifiedDate":"2021-09-24"}],"authorContributionMap":{"houtenteo":9,"loose-bus-change":2,"pranav-ganesh":95}},{"path":"src/main/java/seedu/address/logic/commands/ClearCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-09-22"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":7,"author":{"gitId":"loose-bus-change"},"content":"import seedu.address.ui.FullPersonCard;","lastModifiedDate":"2021-11-04"},{"lineNumber":8,"author":{"gitId":"loose-bus-change"},"content":"import seedu.address.ui.UiManager;","lastModifiedDate":"2021-11-04"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Clears the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class ClearCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"clear\";","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Address book has been cleared!\";","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2017-05-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        model.setAddressBook(new AddressBook());","lastModifiedDate":"2018-11-27"},{"lineNumber":23,"author":{"gitId":"loose-bus-change"},"content":"        FullPersonCard.setDisplayedIndex(0);","lastModifiedDate":"2021-11-04"},{"lineNumber":24,"author":{"gitId":"loose-bus-change"},"content":"        UiManager.displayFunction();","lastModifiedDate":"2021-11-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"loose-bus-change":4,"-":23}},{"path":"src/main/java/seedu/address/logic/commands/Command.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":4,"author":{"gitId":"Kangxun"},"content":"import seedu.address.logic.comparators.exceptions.ComparatorException;","lastModifiedDate":"2021-10-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2016-09-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Represents a command with hidden internal logic and the ability to be executed.","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public abstract class Command {","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result message.","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * @param model {@code Model} which the command should operate on.","lastModifiedDate":"2018-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * @return feedback message of the operation result for display","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"Kangxun"},"content":"    public abstract CommandResult execute(Model model) throws CommandException, ComparatorException;","lastModifiedDate":"2021-10-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"-":19,"Kangxun":2}},{"path":"src/main/java/seedu/address/logic/commands/DeleteCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-09-01"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2016-09-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":12,"author":{"gitId":"loose-bus-change"},"content":"import seedu.address.ui.FullPersonCard;","lastModifiedDate":"2021-10-21"},{"lineNumber":13,"author":{"gitId":"loose-bus-change"},"content":"import seedu.address.ui.UiManager;","lastModifiedDate":"2021-10-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * Deletes a person identified using it\u0027s displayed index from the address book.","lastModifiedDate":"2018-04-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"delete\";","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            + \": Deletes the person identified by the index number used in the displayed person list.\\n\"","lastModifiedDate":"2018-04-01"},{"lineNumber":24,"author":{"gitId":"loose-bus-change"},"content":"            + \"Parameter: INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2021-11-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1\";","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DELETE_PERSON_SUCCESS \u003d \"Deleted Person: %1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private final Index targetIndex;","lastModifiedDate":"2017-06-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public DeleteCommand(Index targetIndex) {","lastModifiedDate":"2017-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2016-09-22"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2018-04-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2018-04-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2018-04-19"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        Person personToDelete \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2018-04-19"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        model.deletePerson(personToDelete);","lastModifiedDate":"2016-09-25"},{"lineNumber":46,"author":{"gitId":"loose-bus-change"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":47,"author":{"gitId":"loose-bus-change"},"content":"        checkDisplayAfterDelete(lastShownList);","lastModifiedDate":"2021-10-22"},{"lineNumber":48,"author":{"gitId":"loose-bus-change"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_DELETE_PERSON_SUCCESS, personToDelete));","lastModifiedDate":"2021-10-22"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2021-10-22"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-22"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-22"},{"lineNumber":55,"author":{"gitId":"-"},"content":"                || (other instanceof DeleteCommand // instanceof handles nulls","lastModifiedDate":"2021-10-22"},{"lineNumber":56,"author":{"gitId":"-"},"content":"                \u0026\u0026 targetIndex.equals(((DeleteCommand) other).targetIndex)); // state check","lastModifiedDate":"2021-10-22"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":58,"author":{"gitId":"loose-bus-change"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":59,"author":{"gitId":"loose-bus-change"},"content":"    /**","lastModifiedDate":"2021-10-22"},{"lineNumber":60,"author":{"gitId":"loose-bus-change"},"content":"     * Updates the display window once a particular person is deleted","lastModifiedDate":"2021-10-22"},{"lineNumber":61,"author":{"gitId":"loose-bus-change"},"content":"     * @param lastShownList The list of people in the address book","lastModifiedDate":"2021-10-22"},{"lineNumber":62,"author":{"gitId":"loose-bus-change"},"content":"     */","lastModifiedDate":"2021-10-22"},{"lineNumber":63,"author":{"gitId":"loose-bus-change"},"content":"    public void checkDisplayAfterDelete(List\u003cPerson\u003e lastShownList) {","lastModifiedDate":"2021-10-22"},{"lineNumber":64,"author":{"gitId":"loose-bus-change"},"content":"        if (targetIndex.getOneBased() \u003c FullPersonCard.getDisplayedIndex()) {","lastModifiedDate":"2021-10-21"},{"lineNumber":65,"author":{"gitId":"loose-bus-change"},"content":"            FullPersonCard.setDisplayedIndex(FullPersonCard.getDisplayedIndex() - 1);","lastModifiedDate":"2021-10-21"},{"lineNumber":66,"author":{"gitId":"loose-bus-change"},"content":"            UiManager.displayFunction();","lastModifiedDate":"2021-10-21"},{"lineNumber":67,"author":{"gitId":"loose-bus-change"},"content":"        } else if (targetIndex.getOneBased() \u003d\u003d FullPersonCard.getDisplayedIndex()) {","lastModifiedDate":"2021-10-21"},{"lineNumber":68,"author":{"gitId":"loose-bus-change"},"content":"            if (targetIndex.getOneBased() \u003d\u003d lastShownList.size() + 1) {","lastModifiedDate":"2021-10-21"},{"lineNumber":69,"author":{"gitId":"loose-bus-change"},"content":"                FullPersonCard.setDisplayedIndex(FullPersonCard.getDisplayedIndex() - 1);","lastModifiedDate":"2021-10-21"},{"lineNumber":70,"author":{"gitId":"loose-bus-change"},"content":"                UiManager.displayFunction();","lastModifiedDate":"2021-10-21"},{"lineNumber":71,"author":{"gitId":"loose-bus-change"},"content":"            }","lastModifiedDate":"2021-10-21"},{"lineNumber":72,"author":{"gitId":"loose-bus-change"},"content":"            UiManager.displayFunction();","lastModifiedDate":"2021-10-21"},{"lineNumber":73,"author":{"gitId":"loose-bus-change"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"loose-bus-change":22,"-":53}},{"path":"src/main/java/seedu/address/logic/commands/DisplayCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"loose-bus-change"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-10-21"},{"lineNumber":2,"author":{"gitId":"loose-bus-change"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":3,"author":{"gitId":"loose-bus-change"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-22"},{"lineNumber":4,"author":{"gitId":"loose-bus-change"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":5,"author":{"gitId":"loose-bus-change"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-10-21"},{"lineNumber":6,"author":{"gitId":"loose-bus-change"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2021-10-21"},{"lineNumber":7,"author":{"gitId":"loose-bus-change"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-10-21"},{"lineNumber":8,"author":{"gitId":"loose-bus-change"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-21"},{"lineNumber":9,"author":{"gitId":"loose-bus-change"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-10-21"},{"lineNumber":10,"author":{"gitId":"loose-bus-change"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2021-10-21"},{"lineNumber":11,"author":{"gitId":"loose-bus-change"},"content":"import seedu.address.ui.FullPersonCard;","lastModifiedDate":"2021-10-22"},{"lineNumber":12,"author":{"gitId":"loose-bus-change"},"content":"import seedu.address.ui.UiManager;","lastModifiedDate":"2021-10-22"},{"lineNumber":13,"author":{"gitId":"loose-bus-change"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":14,"author":{"gitId":"loose-bus-change"},"content":"public class DisplayCommand extends Command {","lastModifiedDate":"2021-10-21"},{"lineNumber":15,"author":{"gitId":"loose-bus-change"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":16,"author":{"gitId":"loose-bus-change"},"content":"    public static final String COMMAND_WORD \u003d \"display\";","lastModifiedDate":"2021-10-21"},{"lineNumber":17,"author":{"gitId":"loose-bus-change"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":18,"author":{"gitId":"loose-bus-change"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Displays additional details about a \"","lastModifiedDate":"2021-10-22"},{"lineNumber":19,"author":{"gitId":"loose-bus-change"},"content":"            + \"particular contact in the address book. Contact is chosen based on index.\\n\"","lastModifiedDate":"2021-11-04"},{"lineNumber":20,"author":{"gitId":"loose-bus-change"},"content":"            + \"Parameter: INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2021-11-06"},{"lineNumber":21,"author":{"gitId":"loose-bus-change"},"content":"            + \"Example: \" + COMMAND_WORD + \" 2\";","lastModifiedDate":"2021-11-06"},{"lineNumber":22,"author":{"gitId":"loose-bus-change"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":23,"author":{"gitId":"loose-bus-change"},"content":"    public static final String MESSAGE_DISPLAY_SUCCESS \u003d \"Displayed selected person!\";","lastModifiedDate":"2021-10-21"},{"lineNumber":24,"author":{"gitId":"loose-bus-change"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":25,"author":{"gitId":"loose-bus-change"},"content":"    private final Index displayIndex;","lastModifiedDate":"2021-10-21"},{"lineNumber":26,"author":{"gitId":"loose-bus-change"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":27,"author":{"gitId":"loose-bus-change"},"content":"    /**","lastModifiedDate":"2021-10-21"},{"lineNumber":28,"author":{"gitId":"loose-bus-change"},"content":"     * Creates a DisplayCommand to display the specified {@code Person}","lastModifiedDate":"2021-10-22"},{"lineNumber":29,"author":{"gitId":"loose-bus-change"},"content":"     */","lastModifiedDate":"2021-10-21"},{"lineNumber":30,"author":{"gitId":"loose-bus-change"},"content":"    public DisplayCommand(Index index) {","lastModifiedDate":"2021-10-21"},{"lineNumber":31,"author":{"gitId":"loose-bus-change"},"content":"        requireNonNull(index);","lastModifiedDate":"2021-10-21"},{"lineNumber":32,"author":{"gitId":"loose-bus-change"},"content":"        displayIndex \u003d index;","lastModifiedDate":"2021-10-21"},{"lineNumber":33,"author":{"gitId":"loose-bus-change"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":34,"author":{"gitId":"loose-bus-change"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":35,"author":{"gitId":"loose-bus-change"},"content":"    @Override","lastModifiedDate":"2021-10-21"},{"lineNumber":36,"author":{"gitId":"loose-bus-change"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-10-21"},{"lineNumber":37,"author":{"gitId":"loose-bus-change"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-10-21"},{"lineNumber":38,"author":{"gitId":"loose-bus-change"},"content":"        ObservableList\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2021-10-21"},{"lineNumber":39,"author":{"gitId":"loose-bus-change"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":40,"author":{"gitId":"loose-bus-change"},"content":"        assert displayIndex.getOneBased() \u003e 0;","lastModifiedDate":"2021-10-21"},{"lineNumber":41,"author":{"gitId":"loose-bus-change"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":42,"author":{"gitId":"loose-bus-change"},"content":"        if (displayIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2021-10-21"},{"lineNumber":43,"author":{"gitId":"loose-bus-change"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2021-10-21"},{"lineNumber":44,"author":{"gitId":"loose-bus-change"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":45,"author":{"gitId":"loose-bus-change"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":46,"author":{"gitId":"loose-bus-change"},"content":"        Person personToDisplay \u003d lastShownList.get(displayIndex.getZeroBased());","lastModifiedDate":"2021-10-21"},{"lineNumber":47,"author":{"gitId":"loose-bus-change"},"content":"        assert personToDisplay !\u003d null : \"person to display cannot be null\";","lastModifiedDate":"2021-10-21"},{"lineNumber":48,"author":{"gitId":"loose-bus-change"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":49,"author":{"gitId":"loose-bus-change"},"content":"        int intDisplayIndex \u003d displayIndex.getOneBased();","lastModifiedDate":"2021-10-21"},{"lineNumber":50,"author":{"gitId":"loose-bus-change"},"content":"        FullPersonCard.setDisplayedIndex(intDisplayIndex);","lastModifiedDate":"2021-10-21"},{"lineNumber":51,"author":{"gitId":"loose-bus-change"},"content":"        UiManager.displayFunction();","lastModifiedDate":"2021-10-21"},{"lineNumber":52,"author":{"gitId":"loose-bus-change"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":53,"author":{"gitId":"loose-bus-change"},"content":"        return new CommandResult(String.format(MESSAGE_DISPLAY_SUCCESS, personToDisplay));","lastModifiedDate":"2021-10-21"},{"lineNumber":54,"author":{"gitId":"loose-bus-change"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":55,"author":{"gitId":"loose-bus-change"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":56,"author":{"gitId":"loose-bus-change"},"content":"    @Override","lastModifiedDate":"2021-10-21"},{"lineNumber":57,"author":{"gitId":"loose-bus-change"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-21"},{"lineNumber":58,"author":{"gitId":"loose-bus-change"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2021-10-21"},{"lineNumber":59,"author":{"gitId":"loose-bus-change"},"content":"            return true;","lastModifiedDate":"2021-10-21"},{"lineNumber":60,"author":{"gitId":"loose-bus-change"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":61,"author":{"gitId":"loose-bus-change"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":62,"author":{"gitId":"loose-bus-change"},"content":"        if (!(other instanceof DisplayCommand)) {","lastModifiedDate":"2021-10-21"},{"lineNumber":63,"author":{"gitId":"loose-bus-change"},"content":"            return false;","lastModifiedDate":"2021-10-21"},{"lineNumber":64,"author":{"gitId":"loose-bus-change"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":65,"author":{"gitId":"loose-bus-change"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":66,"author":{"gitId":"loose-bus-change"},"content":"        DisplayCommand e \u003d (DisplayCommand) other;","lastModifiedDate":"2021-10-21"},{"lineNumber":67,"author":{"gitId":"loose-bus-change"},"content":"        return displayIndex.equals(e.displayIndex);","lastModifiedDate":"2021-10-21"},{"lineNumber":68,"author":{"gitId":"loose-bus-change"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":69,"author":{"gitId":"loose-bus-change"},"content":"}","lastModifiedDate":"2021-10-21"}],"authorContributionMap":{"loose-bus-change":69}},{"path":"src/main/java/seedu/address/logic/commands/EditCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-12-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-05-09"},{"lineNumber":5,"author":{"gitId":"pranav-ganesh"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_AGE;","lastModifiedDate":"2021-10-20"},{"lineNumber":6,"author":{"gitId":"pranav-ganesh"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_CALLED;","lastModifiedDate":"2021-11-04"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-05-09"},{"lineNumber":8,"author":{"gitId":"pranav-ganesh"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_GENDER;","lastModifiedDate":"2021-10-20"},{"lineNumber":9,"author":{"gitId":"pranav-ganesh"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_INTEREST;","lastModifiedDate":"2021-10-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-05-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":13,"author":{"gitId":"pranav-ganesh"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-11-06"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2021-11-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-12-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2016-12-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.CollectionUtil;","lastModifiedDate":"2016-12-26"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2021-10-18"},{"lineNumber":24,"author":{"gitId":"houtenteo"},"content":"import seedu.address.model.person.Age;","lastModifiedDate":"2021-10-18"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2016-12-26"},{"lineNumber":26,"author":{"gitId":"houtenteo"},"content":"import seedu.address.model.person.Gender;","lastModifiedDate":"2021-10-18"},{"lineNumber":27,"author":{"gitId":"pranav-ganesh"},"content":"import seedu.address.model.person.IsCalled;","lastModifiedDate":"2021-11-04"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2016-12-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-12-26"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2016-12-26"},{"lineNumber":31,"author":{"gitId":"pranav-ganesh"},"content":"import seedu.address.model.person.interests.Interest;","lastModifiedDate":"2021-10-20"},{"lineNumber":32,"author":{"gitId":"houtenteo"},"content":"import seedu.address.model.person.interests.InterestsList;","lastModifiedDate":"2021-10-18"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":34,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-12-26"},{"lineNumber":35,"author":{"gitId":"-"},"content":" * Edits the details of an existing person in the address book.","lastModifiedDate":"2016-12-26"},{"lineNumber":36,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-12-26"},{"lineNumber":37,"author":{"gitId":"-"},"content":"public class EditCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"edit\";","lastModifiedDate":"2016-12-26"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Edits the details of the person identified \"","lastModifiedDate":"2016-12-26"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            + \"by the index number used in the displayed person list. \"","lastModifiedDate":"2018-04-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            + \"Existing values will be overwritten by the input values.\\n\"","lastModifiedDate":"2016-12-26"},{"lineNumber":44,"author":{"gitId":"pranav-ganesh"},"content":"            + \"Parameters: INDEX (must be a positive integer in the displayed list) \"","lastModifiedDate":"2021-11-06"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_NAME + \"NAME] \"","lastModifiedDate":"2017-06-06"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_PHONE + \"PHONE] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_EMAIL + \"EMAIL] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_ADDRESS + \"ADDRESS] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":49,"author":{"gitId":"pranav-ganesh"},"content":"            + \"[\" + PREFIX_CALLED + \"CALLED]\"","lastModifiedDate":"2021-11-04"},{"lineNumber":50,"author":{"gitId":"pranav-ganesh"},"content":"            + \"[\" + PREFIX_GENDER + \"GENDER] \"","lastModifiedDate":"2021-10-20"},{"lineNumber":51,"author":{"gitId":"pranav-ganesh"},"content":"            + \"[\" + PREFIX_AGE + \"AGE] \"","lastModifiedDate":"2021-10-20"},{"lineNumber":52,"author":{"gitId":"pranav-ganesh"},"content":"            + \"[\" + PREFIX_INTEREST + \"INTEREST_TO_BE_ADDED]…\\u200B\"","lastModifiedDate":"2021-11-08"},{"lineNumber":53,"author":{"gitId":"pranav-ganesh"},"content":"            + \"[\" + PREFIX_INTEREST + \"(INDEX) remove]…\\u200B\"","lastModifiedDate":"2021-11-08"},{"lineNumber":54,"author":{"gitId":"pranav-ganesh"},"content":"            + \"[\" + PREFIX_INTEREST + \"(INDEX) INTEREST]…\\u200B\\n\"","lastModifiedDate":"2021-11-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"91234567 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":57,"author":{"gitId":"pranav-ganesh"},"content":"            + PREFIX_EMAIL + \"johndoe@example.com \"","lastModifiedDate":"2021-10-20"},{"lineNumber":58,"author":{"gitId":"pranav-ganesh"},"content":"            + PREFIX_GENDER + \"M \"","lastModifiedDate":"2021-10-20"},{"lineNumber":59,"author":{"gitId":"pranav-ganesh"},"content":"            + PREFIX_CALLED + \"false \"","lastModifiedDate":"2021-11-04"},{"lineNumber":60,"author":{"gitId":"pranav-ganesh"},"content":"            + PREFIX_INTEREST + \"(1) software engineering \"","lastModifiedDate":"2021-11-08"},{"lineNumber":61,"author":{"gitId":"pranav-ganesh"},"content":"            + PREFIX_INTEREST + \"(2) remove\";","lastModifiedDate":"2021-11-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_EDIT_PERSON_SUCCESS \u003d \"Edited Person: %1$s\";","lastModifiedDate":"2016-12-26"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_NOT_EDITED \u003d \"At least one field to edit must be provided.\";","lastModifiedDate":"2016-12-26"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"This person already exists in the address book.\";","lastModifiedDate":"2016-12-26"},{"lineNumber":66,"author":{"gitId":"pranav-ganesh"},"content":"    public static final String MESSAGE_INVALID_INTERESTS_INDEX \u003d \"The specified interestsList index is invalid.\";","lastModifiedDate":"2021-10-22"},{"lineNumber":67,"author":{"gitId":"pranav-ganesh"},"content":"    public static final String MESSAGE_DUPLICATE_INDEX \u003d \"You have specified the same index more than once.\";","lastModifiedDate":"2021-11-06"},{"lineNumber":68,"author":{"gitId":"pranav-ganesh"},"content":"    public static final String MESSAGE_DUPLICATE_INTEREST_ARGUMENT \u003d \"You have duplicate interest arguments in \"","lastModifiedDate":"2021-11-06"},{"lineNumber":69,"author":{"gitId":"pranav-ganesh"},"content":"            + \"your command.\";","lastModifiedDate":"2021-11-06"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    private final Index index;","lastModifiedDate":"2017-05-25"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    private final EditPersonDescriptor editPersonDescriptor;","lastModifiedDate":"2016-12-26"},{"lineNumber":73,"author":{"gitId":"pranav-ganesh"},"content":"    private ArrayList\u003cInteger\u003e indexesToBeRemoved;","lastModifiedDate":"2021-11-06"},{"lineNumber":74,"author":{"gitId":"pranav-ganesh"},"content":"    private ArrayList\u003cInterest\u003e interestsToBeAdded;","lastModifiedDate":"2021-11-06"},{"lineNumber":75,"author":{"gitId":"pranav-ganesh"},"content":"    private ArrayList\u003cInteger\u003e listOfIndexes;","lastModifiedDate":"2021-11-06"},{"lineNumber":76,"author":{"gitId":"pranav-ganesh"},"content":"    private ArrayList\u003cString\u003e listOfArguments;","lastModifiedDate":"2021-11-06"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * @param index of the person in the filtered person list to edit","lastModifiedDate":"2017-05-25"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * @param editPersonDescriptor details to edit the person with","lastModifiedDate":"2016-12-26"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public EditCommand(Index index, EditPersonDescriptor editPersonDescriptor) {","lastModifiedDate":"2017-05-25"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        requireNonNull(index);","lastModifiedDate":"2017-05-25"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        requireNonNull(editPersonDescriptor);","lastModifiedDate":"2017-05-15"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        this.index \u003d index;","lastModifiedDate":"2017-05-25"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        this.editPersonDescriptor \u003d new EditPersonDescriptor(editPersonDescriptor);","lastModifiedDate":"2016-12-26"},{"lineNumber":88,"author":{"gitId":"pranav-ganesh"},"content":"        this.indexesToBeRemoved \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-11-06"},{"lineNumber":89,"author":{"gitId":"pranav-ganesh"},"content":"        this.interestsToBeAdded \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-11-06"},{"lineNumber":90,"author":{"gitId":"pranav-ganesh"},"content":"        this.listOfIndexes \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-11-06"},{"lineNumber":91,"author":{"gitId":"pranav-ganesh"},"content":"        this.listOfArguments \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-11-06"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-26"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2018-04-19"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2018-04-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2018-04-19"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":103,"author":{"gitId":"pranav-ganesh"},"content":"        assert index.getZeroBased() \u003c lastShownList.size();","lastModifiedDate":"2021-11-08"},{"lineNumber":104,"author":{"gitId":"pranav-ganesh"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        Person personToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2018-04-19"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d createEditedPerson(personToEdit, editPersonDescriptor);","lastModifiedDate":"2018-04-19"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":108,"author":{"gitId":"pranav-ganesh"},"content":"        if (!personToEdit.equals(editedPerson)) {","lastModifiedDate":"2021-11-08"},{"lineNumber":109,"author":{"gitId":"pranav-ganesh"},"content":"            if (model.hasPerson(editedPerson)) {","lastModifiedDate":"2021-11-04"},{"lineNumber":110,"author":{"gitId":"-"},"content":"                throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2018-08-07"},{"lineNumber":111,"author":{"gitId":"pranav-ganesh"},"content":"            } else {","lastModifiedDate":"2021-11-04"},{"lineNumber":112,"author":{"gitId":"pranav-ganesh"},"content":"                model.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2021-11-04"},{"lineNumber":113,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-08-07"},{"lineNumber":114,"author":{"gitId":"houtenteo"},"content":"        } else if (editPersonDescriptor.getName().isEmpty() \u0026\u0026 editPersonDescriptor.getPhone().isEmpty()","lastModifiedDate":"2021-11-08"},{"lineNumber":115,"author":{"gitId":"houtenteo"},"content":"                    \u0026\u0026 editPersonDescriptor.getEmail().isEmpty()) {","lastModifiedDate":"2021-11-08"},{"lineNumber":116,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":117,"author":{"gitId":"houtenteo"},"content":"            checkEqualsCalled(personToEdit, editPersonDescriptor);","lastModifiedDate":"2021-11-08"},{"lineNumber":118,"author":{"gitId":"houtenteo"},"content":"            checkEqualsAddress(personToEdit, editPersonDescriptor);","lastModifiedDate":"2021-11-08"},{"lineNumber":119,"author":{"gitId":"houtenteo"},"content":"            checkEqualsGender(personToEdit, editPersonDescriptor);","lastModifiedDate":"2021-11-08"},{"lineNumber":120,"author":{"gitId":"houtenteo"},"content":"            checkEqualsAge(personToEdit, editPersonDescriptor);","lastModifiedDate":"2021-11-08"},{"lineNumber":121,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"            model.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":123,"author":{"gitId":"houtenteo"},"content":"        } else {","lastModifiedDate":"2021-11-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2021-11-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-11-04"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":127,"author":{"gitId":"pranav-ganesh"},"content":"        DisplayCommand displayCommand \u003d new DisplayCommand(Index.fromOneBased(index.getOneBased()));","lastModifiedDate":"2021-10-28"},{"lineNumber":128,"author":{"gitId":"pranav-ganesh"},"content":"        displayCommand.execute(model);","lastModifiedDate":"2021-10-28"},{"lineNumber":129,"author":{"gitId":"pranav-ganesh"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_EDIT_PERSON_SUCCESS, editedPerson));","lastModifiedDate":"2017-08-05"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":134,"author":{"gitId":"-"},"content":"     * Creates and returns a {@code Person} with the details of {@code personToEdit}","lastModifiedDate":"2016-12-26"},{"lineNumber":135,"author":{"gitId":"-"},"content":"     * edited with {@code editPersonDescriptor}.","lastModifiedDate":"2016-12-26"},{"lineNumber":136,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":137,"author":{"gitId":"pranav-ganesh"},"content":"    private Person createEditedPerson(Person personToEdit, EditPersonDescriptor editPersonDescriptor)","lastModifiedDate":"2021-10-22"},{"lineNumber":138,"author":{"gitId":"pranav-ganesh"},"content":"            throws CommandException {","lastModifiedDate":"2021-10-22"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        assert personToEdit !\u003d null;","lastModifiedDate":"2016-12-26"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        Name updatedName \u003d editPersonDescriptor.getName().orElse(personToEdit.getName());","lastModifiedDate":"2017-06-21"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        Phone updatedPhone \u003d editPersonDescriptor.getPhone().orElse(personToEdit.getPhone());","lastModifiedDate":"2017-06-21"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        Email updatedEmail \u003d editPersonDescriptor.getEmail().orElse(personToEdit.getEmail());","lastModifiedDate":"2017-06-21"},{"lineNumber":144,"author":{"gitId":"pranav-ganesh"},"content":"        IsCalled updatedIsCalled \u003d editPersonDescriptor.getIsCalled().orElse(personToEdit.getIsCalled());","lastModifiedDate":"2021-11-04"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        Address updatedAddress \u003d editPersonDescriptor.getAddress().orElse(personToEdit.getAddress());","lastModifiedDate":"2021-10-18"},{"lineNumber":146,"author":{"gitId":"houtenteo"},"content":"        Gender updatedGender \u003d editPersonDescriptor.getGender().orElse(personToEdit.getGender());","lastModifiedDate":"2021-10-18"},{"lineNumber":147,"author":{"gitId":"houtenteo"},"content":"        Age updatedAge \u003d editPersonDescriptor.getAge().orElse(personToEdit.getAge());","lastModifiedDate":"2021-10-18"},{"lineNumber":148,"author":{"gitId":"pranav-ganesh"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":149,"author":{"gitId":"pranav-ganesh"},"content":"        InterestsList newInterests \u003d editPersonDescriptor.getInterests().orElse(null);","lastModifiedDate":"2021-10-22"},{"lineNumber":150,"author":{"gitId":"pranav-ganesh"},"content":"        InterestsList interestsListCopy \u003d personToEdit.getInterests().copyInterestsList();","lastModifiedDate":"2021-11-06"},{"lineNumber":151,"author":{"gitId":"pranav-ganesh"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":152,"author":{"gitId":"pranav-ganesh"},"content":"        if (newInterests !\u003d null) {","lastModifiedDate":"2021-10-22"},{"lineNumber":153,"author":{"gitId":"pranav-ganesh"},"content":"            editInterestList(newInterests, interestsListCopy);","lastModifiedDate":"2021-11-08"},{"lineNumber":154,"author":{"gitId":"pranav-ganesh"},"content":"            removeSpecifiedInterests(interestsListCopy);","lastModifiedDate":"2021-11-08"},{"lineNumber":155,"author":{"gitId":"pranav-ganesh"},"content":"            addSpecifiedInterests(interestsListCopy);","lastModifiedDate":"2021-11-08"},{"lineNumber":156,"author":{"gitId":"pranav-ganesh"},"content":"        }","lastModifiedDate":"2021-10-22"},{"lineNumber":157,"author":{"gitId":"pranav-ganesh"},"content":"        InterestsList updatedInterests \u003d interestsListCopy;","lastModifiedDate":"2021-11-06"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":159,"author":{"gitId":"pranav-ganesh"},"content":"        return new Person(updatedName, updatedPhone, updatedEmail, updatedIsCalled, updatedAddress,","lastModifiedDate":"2021-11-04"},{"lineNumber":160,"author":{"gitId":"houtenteo"},"content":"                updatedGender, updatedAge, updatedInterests);","lastModifiedDate":"2021-10-18"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":163,"author":{"gitId":"pranav-ganesh"},"content":"    /**","lastModifiedDate":"2021-10-22"},{"lineNumber":164,"author":{"gitId":"pranav-ganesh"},"content":"     * Edits the {@code InterestsList} attribute of {@code personToEdit} based on user input command.","lastModifiedDate":"2021-10-22"},{"lineNumber":165,"author":{"gitId":"pranav-ganesh"},"content":"     */","lastModifiedDate":"2021-10-22"},{"lineNumber":166,"author":{"gitId":"pranav-ganesh"},"content":"    public void editInterestList(InterestsList newList, InterestsList currentList) throws CommandException {","lastModifiedDate":"2021-10-22"},{"lineNumber":167,"author":{"gitId":"pranav-ganesh"},"content":"        emptyLists();","lastModifiedDate":"2021-11-08"},{"lineNumber":168,"author":{"gitId":"pranav-ganesh"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":169,"author":{"gitId":"pranav-ganesh"},"content":"        assert this.listOfArguments.isEmpty();","lastModifiedDate":"2021-11-08"},{"lineNumber":170,"author":{"gitId":"pranav-ganesh"},"content":"        assert this.listOfIndexes.isEmpty();","lastModifiedDate":"2021-11-08"},{"lineNumber":171,"author":{"gitId":"pranav-ganesh"},"content":"        assert this.interestsToBeAdded.isEmpty();","lastModifiedDate":"2021-11-08"},{"lineNumber":172,"author":{"gitId":"pranav-ganesh"},"content":"        assert this.indexesToBeRemoved.isEmpty();","lastModifiedDate":"2021-11-08"},{"lineNumber":173,"author":{"gitId":"pranav-ganesh"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":174,"author":{"gitId":"pranav-ganesh"},"content":"        for (Interest i : newList.getAllInterests()) {","lastModifiedDate":"2021-10-22"},{"lineNumber":175,"author":{"gitId":"pranav-ganesh"},"content":"            String s \u003d i.toString();","lastModifiedDate":"2021-10-22"},{"lineNumber":176,"author":{"gitId":"pranav-ganesh"},"content":"            editSpecifiedInterest(s, currentList);","lastModifiedDate":"2021-11-08"},{"lineNumber":177,"author":{"gitId":"pranav-ganesh"},"content":"        }","lastModifiedDate":"2021-10-22"},{"lineNumber":178,"author":{"gitId":"pranav-ganesh"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":179,"author":{"gitId":"pranav-ganesh"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":180,"author":{"gitId":"pranav-ganesh"},"content":"    private void editSpecifiedInterest(String s, InterestsList currentList) throws CommandException {","lastModifiedDate":"2021-10-28"},{"lineNumber":181,"author":{"gitId":"pranav-ganesh"},"content":"        if (s.substring(0, 1).equals(\"(\")) {","lastModifiedDate":"2021-11-04"},{"lineNumber":182,"author":{"gitId":"pranav-ganesh"},"content":"            String pos \u003d s.substring(s.indexOf(\"(\") + 1, s.indexOf(\")\")).trim();","lastModifiedDate":"2021-11-06"},{"lineNumber":183,"author":{"gitId":"pranav-ganesh"},"content":"            String desc \u003d s.substring(s.indexOf(\")\") + 1).trim();","lastModifiedDate":"2021-11-06"},{"lineNumber":184,"author":{"gitId":"pranav-ganesh"},"content":"            int index;","lastModifiedDate":"2021-11-06"},{"lineNumber":185,"author":{"gitId":"pranav-ganesh"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":186,"author":{"gitId":"pranav-ganesh"},"content":"            try {","lastModifiedDate":"2021-11-06"},{"lineNumber":187,"author":{"gitId":"pranav-ganesh"},"content":"                index \u003d Integer.parseInt(pos) - 1;","lastModifiedDate":"2021-11-06"},{"lineNumber":188,"author":{"gitId":"pranav-ganesh"},"content":"            } catch (NumberFormatException e) {","lastModifiedDate":"2021-11-06"},{"lineNumber":189,"author":{"gitId":"pranav-ganesh"},"content":"                throw new CommandException(\"The interestslist index provided is invalid.\");","lastModifiedDate":"2021-11-06"},{"lineNumber":190,"author":{"gitId":"pranav-ganesh"},"content":"            }","lastModifiedDate":"2021-11-06"},{"lineNumber":191,"author":{"gitId":"pranav-ganesh"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":192,"author":{"gitId":"pranav-ganesh"},"content":"            if (index \u003e\u003d currentList.size()) {","lastModifiedDate":"2021-11-06"},{"lineNumber":193,"author":{"gitId":"pranav-ganesh"},"content":"                throw new CommandException(MESSAGE_INVALID_INTERESTS_INDEX);","lastModifiedDate":"2021-10-22"},{"lineNumber":194,"author":{"gitId":"pranav-ganesh"},"content":"            }","lastModifiedDate":"2021-10-22"},{"lineNumber":195,"author":{"gitId":"pranav-ganesh"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":196,"author":{"gitId":"pranav-ganesh"},"content":"            if (this.listOfIndexes.contains(index)) {","lastModifiedDate":"2021-11-06"},{"lineNumber":197,"author":{"gitId":"pranav-ganesh"},"content":"                throw new CommandException(MESSAGE_DUPLICATE_INDEX);","lastModifiedDate":"2021-11-06"},{"lineNumber":198,"author":{"gitId":"pranav-ganesh"},"content":"            }","lastModifiedDate":"2021-11-06"},{"lineNumber":199,"author":{"gitId":"pranav-ganesh"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":200,"author":{"gitId":"pranav-ganesh"},"content":"            if (this.listOfArguments.contains(desc)) {","lastModifiedDate":"2021-11-06"},{"lineNumber":201,"author":{"gitId":"pranav-ganesh"},"content":"                throw new CommandException(MESSAGE_DUPLICATE_INTEREST_ARGUMENT);","lastModifiedDate":"2021-11-06"},{"lineNumber":202,"author":{"gitId":"pranav-ganesh"},"content":"            }","lastModifiedDate":"2021-11-06"},{"lineNumber":203,"author":{"gitId":"pranav-ganesh"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":204,"author":{"gitId":"pranav-ganesh"},"content":"            assert index \u003c currentList.size();","lastModifiedDate":"2021-11-08"},{"lineNumber":205,"author":{"gitId":"pranav-ganesh"},"content":"            this.listOfIndexes.add(index);","lastModifiedDate":"2021-11-06"},{"lineNumber":206,"author":{"gitId":"pranav-ganesh"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":207,"author":{"gitId":"pranav-ganesh"},"content":"            if (desc.equals(\"remove\")) {","lastModifiedDate":"2021-11-06"},{"lineNumber":208,"author":{"gitId":"pranav-ganesh"},"content":"                this.indexesToBeRemoved.add(index);","lastModifiedDate":"2021-11-06"},{"lineNumber":209,"author":{"gitId":"pranav-ganesh"},"content":"            } else {","lastModifiedDate":"2021-11-06"},{"lineNumber":210,"author":{"gitId":"pranav-ganesh"},"content":"                trySetInterest(currentList, desc, index);","lastModifiedDate":"2021-11-06"},{"lineNumber":211,"author":{"gitId":"pranav-ganesh"},"content":"                this.listOfArguments.add(desc);","lastModifiedDate":"2021-11-06"},{"lineNumber":212,"author":{"gitId":"pranav-ganesh"},"content":"            }","lastModifiedDate":"2021-11-06"},{"lineNumber":213,"author":{"gitId":"pranav-ganesh"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":214,"author":{"gitId":"pranav-ganesh"},"content":"        } else {","lastModifiedDate":"2021-10-22"},{"lineNumber":215,"author":{"gitId":"pranav-ganesh"},"content":"            Interest interest \u003d new Interest(s);","lastModifiedDate":"2021-11-04"},{"lineNumber":216,"author":{"gitId":"pranav-ganesh"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":217,"author":{"gitId":"pranav-ganesh"},"content":"            if (this.listOfArguments.contains(s)) {","lastModifiedDate":"2021-11-06"},{"lineNumber":218,"author":{"gitId":"pranav-ganesh"},"content":"                throw new CommandException(MESSAGE_DUPLICATE_INTEREST_ARGUMENT);","lastModifiedDate":"2021-11-06"},{"lineNumber":219,"author":{"gitId":"pranav-ganesh"},"content":"            }","lastModifiedDate":"2021-11-06"},{"lineNumber":220,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":221,"author":{"gitId":"pranav-ganesh"},"content":"            this.listOfArguments.add(s);","lastModifiedDate":"2021-11-06"},{"lineNumber":222,"author":{"gitId":"pranav-ganesh"},"content":"            this.interestsToBeAdded.add(interest);","lastModifiedDate":"2021-11-06"},{"lineNumber":223,"author":{"gitId":"pranav-ganesh"},"content":"        }","lastModifiedDate":"2021-11-04"},{"lineNumber":224,"author":{"gitId":"pranav-ganesh"},"content":"    }","lastModifiedDate":"2021-11-04"},{"lineNumber":225,"author":{"gitId":"pranav-ganesh"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":226,"author":{"gitId":"pranav-ganesh"},"content":"    private void trySetInterest(InterestsList currentList, String desc, int index) throws CommandException {","lastModifiedDate":"2021-11-06"},{"lineNumber":227,"author":{"gitId":"pranav-ganesh"},"content":"        try {","lastModifiedDate":"2021-11-06"},{"lineNumber":228,"author":{"gitId":"pranav-ganesh"},"content":"            assert index \u003e\u003d 0;","lastModifiedDate":"2021-11-08"},{"lineNumber":229,"author":{"gitId":"pranav-ganesh"},"content":"            currentList.setInterest(new Interest(desc), index);","lastModifiedDate":"2021-11-06"},{"lineNumber":230,"author":{"gitId":"pranav-ganesh"},"content":"        } catch (IllegalArgumentException e) {","lastModifiedDate":"2021-11-06"},{"lineNumber":231,"author":{"gitId":"pranav-ganesh"},"content":"            throw new CommandException(e.getMessage());","lastModifiedDate":"2021-11-06"},{"lineNumber":232,"author":{"gitId":"pranav-ganesh"},"content":"        }","lastModifiedDate":"2021-11-06"},{"lineNumber":233,"author":{"gitId":"pranav-ganesh"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":234,"author":{"gitId":"pranav-ganesh"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":235,"author":{"gitId":"pranav-ganesh"},"content":"    private void tryAddInterest(InterestsList currentList, Interest interest) throws CommandException {","lastModifiedDate":"2021-11-06"},{"lineNumber":236,"author":{"gitId":"pranav-ganesh"},"content":"        try {","lastModifiedDate":"2021-11-06"},{"lineNumber":237,"author":{"gitId":"pranav-ganesh"},"content":"            currentList.addInterest(interest);","lastModifiedDate":"2021-11-06"},{"lineNumber":238,"author":{"gitId":"pranav-ganesh"},"content":"        } catch (IllegalArgumentException e) {","lastModifiedDate":"2021-11-06"},{"lineNumber":239,"author":{"gitId":"pranav-ganesh"},"content":"            throw new CommandException(e.getMessage());","lastModifiedDate":"2021-11-06"},{"lineNumber":240,"author":{"gitId":"pranav-ganesh"},"content":"        }","lastModifiedDate":"2021-11-06"},{"lineNumber":241,"author":{"gitId":"pranav-ganesh"},"content":"    }","lastModifiedDate":"2021-11-06"},{"lineNumber":242,"author":{"gitId":"pranav-ganesh"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":243,"author":{"gitId":"pranav-ganesh"},"content":"    private void removeSpecifiedInterests(InterestsList currentList) {","lastModifiedDate":"2021-11-06"},{"lineNumber":244,"author":{"gitId":"pranav-ganesh"},"content":"        int count \u003d 0;","lastModifiedDate":"2021-11-06"},{"lineNumber":245,"author":{"gitId":"pranav-ganesh"},"content":"        int len \u003d this.indexesToBeRemoved.size();","lastModifiedDate":"2021-11-06"},{"lineNumber":246,"author":{"gitId":"pranav-ganesh"},"content":"        Collections.sort(this.indexesToBeRemoved);","lastModifiedDate":"2021-11-06"},{"lineNumber":247,"author":{"gitId":"pranav-ganesh"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":248,"author":{"gitId":"pranav-ganesh"},"content":"        if (len \u003e 0) {","lastModifiedDate":"2021-11-06"},{"lineNumber":249,"author":{"gitId":"pranav-ganesh"},"content":"            for (int i \u003d 0; i \u003c len; i++) {","lastModifiedDate":"2021-11-06"},{"lineNumber":250,"author":{"gitId":"pranav-ganesh"},"content":"                currentList.removeInterest(indexesToBeRemoved.get(i) - count);","lastModifiedDate":"2021-11-06"},{"lineNumber":251,"author":{"gitId":"pranav-ganesh"},"content":"                count++;","lastModifiedDate":"2021-11-06"},{"lineNumber":252,"author":{"gitId":"pranav-ganesh"},"content":"            }","lastModifiedDate":"2021-11-06"},{"lineNumber":253,"author":{"gitId":"pranav-ganesh"},"content":"        }","lastModifiedDate":"2021-11-06"},{"lineNumber":254,"author":{"gitId":"pranav-ganesh"},"content":"    }","lastModifiedDate":"2021-11-06"},{"lineNumber":255,"author":{"gitId":"pranav-ganesh"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":256,"author":{"gitId":"pranav-ganesh"},"content":"    private void addSpecifiedInterests(InterestsList currentList) throws CommandException {","lastModifiedDate":"2021-11-06"},{"lineNumber":257,"author":{"gitId":"pranav-ganesh"},"content":"        for (int i \u003d 0; i \u003c interestsToBeAdded.size(); i++) {","lastModifiedDate":"2021-11-06"},{"lineNumber":258,"author":{"gitId":"pranav-ganesh"},"content":"            this.tryAddInterest(currentList, interestsToBeAdded.get(i));","lastModifiedDate":"2021-11-06"},{"lineNumber":259,"author":{"gitId":"pranav-ganesh"},"content":"        }","lastModifiedDate":"2021-11-06"},{"lineNumber":260,"author":{"gitId":"pranav-ganesh"},"content":"    }","lastModifiedDate":"2021-11-06"},{"lineNumber":261,"author":{"gitId":"pranav-ganesh"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":262,"author":{"gitId":"pranav-ganesh"},"content":"    private void emptyLists() {","lastModifiedDate":"2021-11-06"},{"lineNumber":263,"author":{"gitId":"pranav-ganesh"},"content":"        this.listOfIndexes.clear();","lastModifiedDate":"2021-11-06"},{"lineNumber":264,"author":{"gitId":"pranav-ganesh"},"content":"        this.listOfArguments.clear();","lastModifiedDate":"2021-11-06"},{"lineNumber":265,"author":{"gitId":"pranav-ganesh"},"content":"        this.indexesToBeRemoved.clear();","lastModifiedDate":"2021-11-06"},{"lineNumber":266,"author":{"gitId":"pranav-ganesh"},"content":"        this.interestsToBeAdded.clear();","lastModifiedDate":"2021-11-06"},{"lineNumber":267,"author":{"gitId":"pranav-ganesh"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":268,"author":{"gitId":"pranav-ganesh"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":269,"author":{"gitId":"houtenteo"},"content":"    private void checkEqualsCalled(Person personToEdit, EditPersonDescriptor editPersonDescriptor)","lastModifiedDate":"2021-11-08"},{"lineNumber":270,"author":{"gitId":"houtenteo"},"content":"            throws CommandException {","lastModifiedDate":"2021-11-08"},{"lineNumber":271,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":272,"author":{"gitId":"houtenteo"},"content":"        if (editPersonDescriptor.getIsCalled().isPresent()) {","lastModifiedDate":"2021-11-08"},{"lineNumber":273,"author":{"gitId":"houtenteo"},"content":"            if (editPersonDescriptor.getIsCalled().get().equals(personToEdit.getIsCalled())) {","lastModifiedDate":"2021-11-08"},{"lineNumber":274,"author":{"gitId":"houtenteo"},"content":"                throw new CommandException(\"Edited called status is already the same as the current called status!\");","lastModifiedDate":"2021-11-08"},{"lineNumber":275,"author":{"gitId":"houtenteo"},"content":"            }","lastModifiedDate":"2021-11-08"},{"lineNumber":276,"author":{"gitId":"houtenteo"},"content":"        }","lastModifiedDate":"2021-11-08"},{"lineNumber":277,"author":{"gitId":"houtenteo"},"content":"    }","lastModifiedDate":"2021-11-08"},{"lineNumber":278,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":279,"author":{"gitId":"houtenteo"},"content":"    private void checkEqualsAddress(Person personToEdit, EditPersonDescriptor editPersonDescriptor)","lastModifiedDate":"2021-11-08"},{"lineNumber":280,"author":{"gitId":"houtenteo"},"content":"            throws CommandException {","lastModifiedDate":"2021-11-08"},{"lineNumber":281,"author":{"gitId":"houtenteo"},"content":"        if (editPersonDescriptor.getAddress().isPresent()) {","lastModifiedDate":"2021-11-08"},{"lineNumber":282,"author":{"gitId":"houtenteo"},"content":"            if (editPersonDescriptor.getAddress().get().equals(personToEdit.getAddress())) {","lastModifiedDate":"2021-11-08"},{"lineNumber":283,"author":{"gitId":"houtenteo"},"content":"                throw new CommandException(\"Edited address is already the same as the current address!\");","lastModifiedDate":"2021-11-08"},{"lineNumber":284,"author":{"gitId":"houtenteo"},"content":"            }","lastModifiedDate":"2021-11-08"},{"lineNumber":285,"author":{"gitId":"houtenteo"},"content":"        }","lastModifiedDate":"2021-11-08"},{"lineNumber":286,"author":{"gitId":"houtenteo"},"content":"    }","lastModifiedDate":"2021-11-08"},{"lineNumber":287,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":288,"author":{"gitId":"houtenteo"},"content":"    private void checkEqualsGender(Person personToEdit, EditPersonDescriptor editPersonDescriptor)","lastModifiedDate":"2021-11-08"},{"lineNumber":289,"author":{"gitId":"houtenteo"},"content":"            throws CommandException {","lastModifiedDate":"2021-11-08"},{"lineNumber":290,"author":{"gitId":"houtenteo"},"content":"        if (editPersonDescriptor.getGender().isPresent()) {","lastModifiedDate":"2021-11-08"},{"lineNumber":291,"author":{"gitId":"houtenteo"},"content":"            if (editPersonDescriptor.getGender().get().equals(personToEdit.getGender())) {","lastModifiedDate":"2021-11-08"},{"lineNumber":292,"author":{"gitId":"houtenteo"},"content":"                throw new CommandException(\"Edited gender is already the same as the current gender!\");","lastModifiedDate":"2021-11-08"},{"lineNumber":293,"author":{"gitId":"houtenteo"},"content":"            }","lastModifiedDate":"2021-11-08"},{"lineNumber":294,"author":{"gitId":"houtenteo"},"content":"        }","lastModifiedDate":"2021-11-08"},{"lineNumber":295,"author":{"gitId":"houtenteo"},"content":"    }","lastModifiedDate":"2021-11-08"},{"lineNumber":296,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":297,"author":{"gitId":"houtenteo"},"content":"    private void checkEqualsAge(Person personToEdit, EditPersonDescriptor editPersonDescriptor)","lastModifiedDate":"2021-11-08"},{"lineNumber":298,"author":{"gitId":"houtenteo"},"content":"            throws CommandException {","lastModifiedDate":"2021-11-08"},{"lineNumber":299,"author":{"gitId":"houtenteo"},"content":"        if (editPersonDescriptor.getAge().isPresent()) {","lastModifiedDate":"2021-11-08"},{"lineNumber":300,"author":{"gitId":"houtenteo"},"content":"            if (editPersonDescriptor.getAge().get().equals(personToEdit.getAge())) {","lastModifiedDate":"2021-11-08"},{"lineNumber":301,"author":{"gitId":"houtenteo"},"content":"                throw new CommandException(\"Edited age is already the same as the current age!\");","lastModifiedDate":"2021-11-08"},{"lineNumber":302,"author":{"gitId":"houtenteo"},"content":"            }","lastModifiedDate":"2021-11-08"},{"lineNumber":303,"author":{"gitId":"houtenteo"},"content":"        }","lastModifiedDate":"2021-11-08"},{"lineNumber":304,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-11-08"},{"lineNumber":305,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":306,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-08"},{"lineNumber":307,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-05-08"},{"lineNumber":308,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-05-08"},{"lineNumber":309,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-08"},{"lineNumber":310,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-08"},{"lineNumber":311,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":312,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":313,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-08"},{"lineNumber":314,"author":{"gitId":"-"},"content":"        if (!(other instanceof EditCommand)) {","lastModifiedDate":"2017-05-08"},{"lineNumber":315,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-08"},{"lineNumber":316,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":317,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":318,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-05-08"},{"lineNumber":319,"author":{"gitId":"-"},"content":"        EditCommand e \u003d (EditCommand) other;","lastModifiedDate":"2017-05-08"},{"lineNumber":320,"author":{"gitId":"-"},"content":"        return index.equals(e.index)","lastModifiedDate":"2017-05-25"},{"lineNumber":321,"author":{"gitId":"-"},"content":"                \u0026\u0026 editPersonDescriptor.equals(e.editPersonDescriptor);","lastModifiedDate":"2018-04-19"},{"lineNumber":322,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":323,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":324,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":325,"author":{"gitId":"-"},"content":"     * Stores the details to edit the person with. Each non-empty field value will replace the","lastModifiedDate":"2016-12-26"},{"lineNumber":326,"author":{"gitId":"-"},"content":"     * corresponding field value of the person.","lastModifiedDate":"2016-12-26"},{"lineNumber":327,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":328,"author":{"gitId":"-"},"content":"    public static class EditPersonDescriptor {","lastModifiedDate":"2016-12-26"},{"lineNumber":329,"author":{"gitId":"-"},"content":"        private Name name;","lastModifiedDate":"2017-06-21"},{"lineNumber":330,"author":{"gitId":"-"},"content":"        private Phone phone;","lastModifiedDate":"2017-06-21"},{"lineNumber":331,"author":{"gitId":"-"},"content":"        private Email email;","lastModifiedDate":"2017-06-21"},{"lineNumber":332,"author":{"gitId":"pranav-ganesh"},"content":"        private IsCalled isCalled;","lastModifiedDate":"2021-11-04"},{"lineNumber":333,"author":{"gitId":"-"},"content":"        private Address address;","lastModifiedDate":"2021-10-18"},{"lineNumber":334,"author":{"gitId":"houtenteo"},"content":"        private Gender gender;","lastModifiedDate":"2021-10-18"},{"lineNumber":335,"author":{"gitId":"houtenteo"},"content":"        private Age age;","lastModifiedDate":"2021-10-18"},{"lineNumber":336,"author":{"gitId":"houtenteo"},"content":"        private InterestsList interests;","lastModifiedDate":"2021-10-18"},{"lineNumber":337,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":338,"author":{"gitId":"-"},"content":"        public EditPersonDescriptor() {}","lastModifiedDate":"2016-12-26"},{"lineNumber":339,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":340,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":341,"author":{"gitId":"-"},"content":"         * Copy constructor.","lastModifiedDate":"2018-01-11"},{"lineNumber":342,"author":{"gitId":"-"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2018-01-11"},{"lineNumber":343,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":344,"author":{"gitId":"-"},"content":"        public EditPersonDescriptor(EditPersonDescriptor toCopy) {","lastModifiedDate":"2016-12-26"},{"lineNumber":345,"author":{"gitId":"-"},"content":"            setName(toCopy.name);","lastModifiedDate":"2018-01-15"},{"lineNumber":346,"author":{"gitId":"-"},"content":"            setPhone(toCopy.phone);","lastModifiedDate":"2018-01-15"},{"lineNumber":347,"author":{"gitId":"-"},"content":"            setEmail(toCopy.email);","lastModifiedDate":"2018-01-15"},{"lineNumber":348,"author":{"gitId":"pranav-ganesh"},"content":"            setIsCalled(toCopy.isCalled);","lastModifiedDate":"2021-11-04"},{"lineNumber":349,"author":{"gitId":"-"},"content":"            setAddress(toCopy.address);","lastModifiedDate":"2021-10-18"},{"lineNumber":350,"author":{"gitId":"houtenteo"},"content":"            setGender(toCopy.gender);","lastModifiedDate":"2021-10-18"},{"lineNumber":351,"author":{"gitId":"houtenteo"},"content":"            setAge(toCopy.age);","lastModifiedDate":"2021-10-18"},{"lineNumber":352,"author":{"gitId":"houtenteo"},"content":"            setInterests(toCopy.interests);","lastModifiedDate":"2021-10-18"},{"lineNumber":353,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":354,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":355,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2016-12-26"},{"lineNumber":356,"author":{"gitId":"-"},"content":"         * Returns true if at least one field is edited.","lastModifiedDate":"2016-12-26"},{"lineNumber":357,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-26"},{"lineNumber":358,"author":{"gitId":"-"},"content":"        public boolean isAnyFieldEdited() {","lastModifiedDate":"2016-12-26"},{"lineNumber":359,"author":{"gitId":"pranav-ganesh"},"content":"            return CollectionUtil.isAnyNonNull(name, phone, email, isCalled, address,","lastModifiedDate":"2021-11-04"},{"lineNumber":360,"author":{"gitId":"houtenteo"},"content":"                    gender, age, interests);","lastModifiedDate":"2021-10-18"},{"lineNumber":361,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":362,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":363,"author":{"gitId":"-"},"content":"        public void setName(Name name) {","lastModifiedDate":"2017-06-21"},{"lineNumber":364,"author":{"gitId":"-"},"content":"            this.name \u003d name;","lastModifiedDate":"2017-06-21"},{"lineNumber":365,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":366,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":367,"author":{"gitId":"-"},"content":"        public Optional\u003cName\u003e getName() {","lastModifiedDate":"2016-12-26"},{"lineNumber":368,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(name);","lastModifiedDate":"2017-06-21"},{"lineNumber":369,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":370,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":371,"author":{"gitId":"-"},"content":"        public void setPhone(Phone phone) {","lastModifiedDate":"2017-06-21"},{"lineNumber":372,"author":{"gitId":"-"},"content":"            this.phone \u003d phone;","lastModifiedDate":"2017-06-21"},{"lineNumber":373,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":374,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":375,"author":{"gitId":"-"},"content":"        public Optional\u003cPhone\u003e getPhone() {","lastModifiedDate":"2016-12-26"},{"lineNumber":376,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(phone);","lastModifiedDate":"2017-06-21"},{"lineNumber":377,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":378,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":379,"author":{"gitId":"-"},"content":"        public void setEmail(Email email) {","lastModifiedDate":"2017-06-21"},{"lineNumber":380,"author":{"gitId":"-"},"content":"            this.email \u003d email;","lastModifiedDate":"2017-06-21"},{"lineNumber":381,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":382,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":383,"author":{"gitId":"-"},"content":"        public Optional\u003cEmail\u003e getEmail() {","lastModifiedDate":"2016-12-26"},{"lineNumber":384,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(email);","lastModifiedDate":"2017-06-21"},{"lineNumber":385,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":386,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":387,"author":{"gitId":"pranav-ganesh"},"content":"        public Optional\u003cIsCalled\u003e getIsCalled() {","lastModifiedDate":"2021-11-04"},{"lineNumber":388,"author":{"gitId":"pranav-ganesh"},"content":"            return Optional.ofNullable(isCalled);","lastModifiedDate":"2021-11-04"},{"lineNumber":389,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":390,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":391,"author":{"gitId":"pranav-ganesh"},"content":"        public void setIsCalled(IsCalled isCalled) {","lastModifiedDate":"2021-11-04"},{"lineNumber":392,"author":{"gitId":"pranav-ganesh"},"content":"            this.isCalled \u003d isCalled;","lastModifiedDate":"2021-11-04"},{"lineNumber":393,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":394,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":395,"author":{"gitId":"-"},"content":"        public void setAddress(Address address) {","lastModifiedDate":"2021-10-18"},{"lineNumber":396,"author":{"gitId":"-"},"content":"            this.address \u003d address;","lastModifiedDate":"2021-10-18"},{"lineNumber":397,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-10-18"},{"lineNumber":398,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":399,"author":{"gitId":"-"},"content":"        public Optional\u003cAddress\u003e getAddress() {","lastModifiedDate":"2021-10-18"},{"lineNumber":400,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(address);","lastModifiedDate":"2021-10-18"},{"lineNumber":401,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-10-18"},{"lineNumber":402,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":403,"author":{"gitId":"houtenteo"},"content":"        public void setGender(Gender gender) {","lastModifiedDate":"2021-10-18"},{"lineNumber":404,"author":{"gitId":"houtenteo"},"content":"            this.gender \u003d gender;","lastModifiedDate":"2021-10-18"},{"lineNumber":405,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-10-18"},{"lineNumber":406,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":407,"author":{"gitId":"houtenteo"},"content":"        public Optional\u003cGender\u003e getGender() {","lastModifiedDate":"2021-10-18"},{"lineNumber":408,"author":{"gitId":"houtenteo"},"content":"            return Optional.ofNullable(gender);","lastModifiedDate":"2021-10-18"},{"lineNumber":409,"author":{"gitId":"houtenteo"},"content":"        }","lastModifiedDate":"2021-10-18"},{"lineNumber":410,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":411,"author":{"gitId":"houtenteo"},"content":"        public void setAge(Age age) {","lastModifiedDate":"2021-10-18"},{"lineNumber":412,"author":{"gitId":"houtenteo"},"content":"            this.age \u003d age;","lastModifiedDate":"2021-10-18"},{"lineNumber":413,"author":{"gitId":"houtenteo"},"content":"        }","lastModifiedDate":"2021-10-18"},{"lineNumber":414,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":415,"author":{"gitId":"houtenteo"},"content":"        public Optional\u003cAge\u003e getAge() {","lastModifiedDate":"2021-10-18"},{"lineNumber":416,"author":{"gitId":"houtenteo"},"content":"            return Optional.ofNullable(age);","lastModifiedDate":"2021-10-18"},{"lineNumber":417,"author":{"gitId":"houtenteo"},"content":"        }","lastModifiedDate":"2021-10-18"},{"lineNumber":418,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":419,"author":{"gitId":"houtenteo"},"content":"        public void setInterests(InterestsList interests) {","lastModifiedDate":"2021-10-18"},{"lineNumber":420,"author":{"gitId":"houtenteo"},"content":"            this.interests \u003d interests;","lastModifiedDate":"2021-10-18"},{"lineNumber":421,"author":{"gitId":"houtenteo"},"content":"        }","lastModifiedDate":"2021-10-18"},{"lineNumber":422,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":423,"author":{"gitId":"houtenteo"},"content":"        public Optional\u003cInterestsList\u003e getInterests() {","lastModifiedDate":"2021-10-18"},{"lineNumber":424,"author":{"gitId":"houtenteo"},"content":"            return Optional.ofNullable(interests);","lastModifiedDate":"2021-10-18"},{"lineNumber":425,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-10-18"},{"lineNumber":426,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":427,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-05"},{"lineNumber":428,"author":{"gitId":"-"},"content":"        public boolean equals(Object other) {","lastModifiedDate":"2017-05-05"},{"lineNumber":429,"author":{"gitId":"-"},"content":"            // short circuit if same object","lastModifiedDate":"2017-05-05"},{"lineNumber":430,"author":{"gitId":"-"},"content":"            if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-05"},{"lineNumber":431,"author":{"gitId":"-"},"content":"                return true;","lastModifiedDate":"2017-05-05"},{"lineNumber":432,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":433,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":434,"author":{"gitId":"-"},"content":"            // instanceof handles nulls","lastModifiedDate":"2017-05-05"},{"lineNumber":435,"author":{"gitId":"-"},"content":"            if (!(other instanceof EditPersonDescriptor)) {","lastModifiedDate":"2017-05-05"},{"lineNumber":436,"author":{"gitId":"-"},"content":"                return false;","lastModifiedDate":"2017-05-05"},{"lineNumber":437,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":438,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":439,"author":{"gitId":"-"},"content":"            // state check","lastModifiedDate":"2017-05-05"},{"lineNumber":440,"author":{"gitId":"-"},"content":"            EditPersonDescriptor e \u003d (EditPersonDescriptor) other;","lastModifiedDate":"2017-05-05"},{"lineNumber":441,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-21"},{"lineNumber":442,"author":{"gitId":"-"},"content":"            return getName().equals(e.getName())","lastModifiedDate":"2017-06-21"},{"lineNumber":443,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getPhone().equals(e.getPhone())","lastModifiedDate":"2017-06-21"},{"lineNumber":444,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getEmail().equals(e.getEmail())","lastModifiedDate":"2017-06-21"},{"lineNumber":445,"author":{"gitId":"pranav-ganesh"},"content":"                    \u0026\u0026 getIsCalled().equals(e.getIsCalled())","lastModifiedDate":"2021-11-04"},{"lineNumber":446,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getAddress().equals(e.getAddress())","lastModifiedDate":"2021-10-18"},{"lineNumber":447,"author":{"gitId":"houtenteo"},"content":"                    \u0026\u0026 getGender().equals(e.getGender())","lastModifiedDate":"2021-10-18"},{"lineNumber":448,"author":{"gitId":"houtenteo"},"content":"                    \u0026\u0026 getAge().equals(e.getAge());","lastModifiedDate":"2021-10-18"},{"lineNumber":449,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-05"},{"lineNumber":450,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":451,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-26"}],"authorContributionMap":{"houtenteo":79,"pranav-ganesh":167,"-":205}},{"path":"src/main/java/seedu/address/logic/commands/FilterCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Kangxun"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-10-08"},{"lineNumber":2,"author":{"gitId":"Kangxun"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":3,"author":{"gitId":"Kangxun"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-25"},{"lineNumber":4,"author":{"gitId":"Kangxun"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-11-07"},{"lineNumber":5,"author":{"gitId":"Kangxun"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2021-10-09"},{"lineNumber":6,"author":{"gitId":"Kangxun"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":7,"author":{"gitId":"Kangxun"},"content":"import java.util.Comparator;","lastModifiedDate":"2021-10-25"},{"lineNumber":8,"author":{"gitId":"Kangxun"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":9,"author":{"gitId":"Kangxun"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-11-06"},{"lineNumber":10,"author":{"gitId":"Kangxun"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-11-06"},{"lineNumber":11,"author":{"gitId":"Kangxun"},"content":"import seedu.address.logic.comparators.PersonComparator;","lastModifiedDate":"2021-10-25"},{"lineNumber":12,"author":{"gitId":"Kangxun"},"content":"import seedu.address.logic.comparators.exceptions.ComparatorException;","lastModifiedDate":"2021-10-25"},{"lineNumber":13,"author":{"gitId":"Kangxun"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-10-08"},{"lineNumber":14,"author":{"gitId":"Kangxun"},"content":"import seedu.address.model.category.Category;","lastModifiedDate":"2021-10-09"},{"lineNumber":15,"author":{"gitId":"Kangxun"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2021-10-25"},{"lineNumber":16,"author":{"gitId":"Kangxun"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":17,"author":{"gitId":"Kangxun"},"content":"/**","lastModifiedDate":"2021-10-08"},{"lineNumber":18,"author":{"gitId":"Kangxun"},"content":" * Filters the displayed list in the GUI of CallMeMaybe","lastModifiedDate":"2021-10-08"},{"lineNumber":19,"author":{"gitId":"Kangxun"},"content":" */","lastModifiedDate":"2021-10-08"},{"lineNumber":20,"author":{"gitId":"Kangxun"},"content":"public class FilterCommand extends Command {","lastModifiedDate":"2021-10-08"},{"lineNumber":21,"author":{"gitId":"Kangxun"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":22,"author":{"gitId":"Kangxun"},"content":"    public static final String COMMAND_WORD \u003d \"filter\";","lastModifiedDate":"2021-10-08"},{"lineNumber":23,"author":{"gitId":"Kangxun"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":24,"author":{"gitId":"Kangxun"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Filters the displayed list of people \"","lastModifiedDate":"2021-10-08"},{"lineNumber":25,"author":{"gitId":"Kangxun"},"content":"            + \"by the category given by the user. \"","lastModifiedDate":"2021-10-08"},{"lineNumber":26,"author":{"gitId":"Kangxun"},"content":"            + \"List will be shown in ascending alphabetical order.\\n\"","lastModifiedDate":"2021-10-08"},{"lineNumber":27,"author":{"gitId":"Kangxun"},"content":"            + \"Parameters: CATEGORY \"","lastModifiedDate":"2021-10-08"},{"lineNumber":28,"author":{"gitId":"Kangxun"},"content":"            + \"COUNT (must be a positive integer)\\n\"","lastModifiedDate":"2021-11-07"},{"lineNumber":29,"author":{"gitId":"Kangxun"},"content":"            + \"Example: \" + COMMAND_WORD + \" Called 5\";","lastModifiedDate":"2021-10-08"},{"lineNumber":30,"author":{"gitId":"Kangxun"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":31,"author":{"gitId":"Kangxun"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Filtered by: %1$s\";","lastModifiedDate":"2021-10-25"},{"lineNumber":32,"author":{"gitId":"Kangxun"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":33,"author":{"gitId":"Kangxun"},"content":"    private final Integer count;","lastModifiedDate":"2021-10-09"},{"lineNumber":34,"author":{"gitId":"Kangxun"},"content":"    private final Category category;","lastModifiedDate":"2021-10-09"},{"lineNumber":35,"author":{"gitId":"Kangxun"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":36,"author":{"gitId":"Kangxun"},"content":"    /**","lastModifiedDate":"2021-10-09"},{"lineNumber":37,"author":{"gitId":"Kangxun"},"content":"     * @param category of the person to be updated to","lastModifiedDate":"2021-10-09"},{"lineNumber":38,"author":{"gitId":"Kangxun"},"content":"     * @param count of the person in the filtered person list to edit the remark","lastModifiedDate":"2021-10-09"},{"lineNumber":39,"author":{"gitId":"Kangxun"},"content":"     */","lastModifiedDate":"2021-10-09"},{"lineNumber":40,"author":{"gitId":"Kangxun"},"content":"    public FilterCommand(Category category, Integer count) {","lastModifiedDate":"2021-10-09"},{"lineNumber":41,"author":{"gitId":"Kangxun"},"content":"        requireAllNonNull(category, count);","lastModifiedDate":"2021-10-09"},{"lineNumber":42,"author":{"gitId":"Kangxun"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":43,"author":{"gitId":"Kangxun"},"content":"        this.category \u003d category;","lastModifiedDate":"2021-10-09"},{"lineNumber":44,"author":{"gitId":"Kangxun"},"content":"        this.count \u003d count;","lastModifiedDate":"2021-10-09"},{"lineNumber":45,"author":{"gitId":"Kangxun"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":46,"author":{"gitId":"Kangxun"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":47,"author":{"gitId":"Kangxun"},"content":"    @Override","lastModifiedDate":"2021-10-08"},{"lineNumber":48,"author":{"gitId":"Kangxun"},"content":"    public CommandResult execute(Model model) throws ComparatorException, CommandException {","lastModifiedDate":"2021-11-06"},{"lineNumber":49,"author":{"gitId":"Kangxun"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-10-25"},{"lineNumber":50,"author":{"gitId":"Kangxun"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":51,"author":{"gitId":"Kangxun"},"content":"        // Get Comparator based on category","lastModifiedDate":"2021-10-25"},{"lineNumber":52,"author":{"gitId":"Kangxun"},"content":"        Comparator\u003cPerson\u003e comparator;","lastModifiedDate":"2021-11-07"},{"lineNumber":53,"author":{"gitId":"Kangxun"},"content":"        try {","lastModifiedDate":"2021-11-07"},{"lineNumber":54,"author":{"gitId":"Kangxun"},"content":"            comparator \u003d PersonComparator.getComparator(category);","lastModifiedDate":"2021-11-07"},{"lineNumber":55,"author":{"gitId":"Kangxun"},"content":"        } catch (ComparatorException e) {","lastModifiedDate":"2021-11-07"},{"lineNumber":56,"author":{"gitId":"Kangxun"},"content":"            throw new ComparatorException(","lastModifiedDate":"2021-11-07"},{"lineNumber":57,"author":{"gitId":"Kangxun"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, e.getMessage() + FilterCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-11-07"},{"lineNumber":58,"author":{"gitId":"Kangxun"},"content":"        }","lastModifiedDate":"2021-11-07"},{"lineNumber":59,"author":{"gitId":"Kangxun"},"content":"        assert(comparator !\u003d null);","lastModifiedDate":"2021-11-07"},{"lineNumber":60,"author":{"gitId":"Kangxun"},"content":"        model.sortFilteredPersonList(comparator);","lastModifiedDate":"2021-10-25"},{"lineNumber":61,"author":{"gitId":"Kangxun"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":62,"author":{"gitId":"Kangxun"},"content":"        // Limit displayed Persons using count","lastModifiedDate":"2021-10-25"},{"lineNumber":63,"author":{"gitId":"Kangxun"},"content":"        model.limitFilteredPersonList(count);","lastModifiedDate":"2021-10-25"},{"lineNumber":64,"author":{"gitId":"Kangxun"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":65,"author":{"gitId":"Kangxun"},"content":"        DisplayCommand displayCommand \u003d new DisplayCommand(Index.fromOneBased(1));","lastModifiedDate":"2021-11-06"},{"lineNumber":66,"author":{"gitId":"Kangxun"},"content":"        displayCommand.execute(model);","lastModifiedDate":"2021-11-06"},{"lineNumber":67,"author":{"gitId":"Kangxun"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":68,"author":{"gitId":"Kangxun"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, category));","lastModifiedDate":"2021-10-25"},{"lineNumber":69,"author":{"gitId":"Kangxun"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":70,"author":{"gitId":"Kangxun"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":71,"author":{"gitId":"Kangxun"},"content":"    @Override","lastModifiedDate":"2021-10-09"},{"lineNumber":72,"author":{"gitId":"Kangxun"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-09"},{"lineNumber":73,"author":{"gitId":"Kangxun"},"content":"        // short circuit if same object","lastModifiedDate":"2021-10-09"},{"lineNumber":74,"author":{"gitId":"Kangxun"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2021-10-09"},{"lineNumber":75,"author":{"gitId":"Kangxun"},"content":"            return true;","lastModifiedDate":"2021-10-09"},{"lineNumber":76,"author":{"gitId":"Kangxun"},"content":"        }","lastModifiedDate":"2021-10-09"},{"lineNumber":77,"author":{"gitId":"Kangxun"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":78,"author":{"gitId":"Kangxun"},"content":"        // instanceof handles nulls","lastModifiedDate":"2021-10-09"},{"lineNumber":79,"author":{"gitId":"Kangxun"},"content":"        if (!(other instanceof FilterCommand)) {","lastModifiedDate":"2021-10-09"},{"lineNumber":80,"author":{"gitId":"Kangxun"},"content":"            return false;","lastModifiedDate":"2021-10-09"},{"lineNumber":81,"author":{"gitId":"Kangxun"},"content":"        }","lastModifiedDate":"2021-10-09"},{"lineNumber":82,"author":{"gitId":"Kangxun"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":83,"author":{"gitId":"Kangxun"},"content":"        // state check","lastModifiedDate":"2021-10-09"},{"lineNumber":84,"author":{"gitId":"Kangxun"},"content":"        FilterCommand e \u003d (FilterCommand) other;","lastModifiedDate":"2021-10-09"},{"lineNumber":85,"author":{"gitId":"Kangxun"},"content":"        return category.equals(e.category)","lastModifiedDate":"2021-10-09"},{"lineNumber":86,"author":{"gitId":"Kangxun"},"content":"                \u0026\u0026 count.equals(e.count);","lastModifiedDate":"2021-10-09"},{"lineNumber":87,"author":{"gitId":"Kangxun"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":88,"author":{"gitId":"Kangxun"},"content":"}","lastModifiedDate":"2021-10-08"}],"authorContributionMap":{"Kangxun":88}},{"path":"src/main/java/seedu/address/logic/commands/FindAllCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"houtenteo"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-10-26"},{"lineNumber":2,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":3,"author":{"gitId":"houtenteo"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-26"},{"lineNumber":4,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":5,"author":{"gitId":"houtenteo"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2021-10-26"},{"lineNumber":6,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":7,"author":{"gitId":"houtenteo"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2021-10-26"},{"lineNumber":8,"author":{"gitId":"houtenteo"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-10-26"},{"lineNumber":9,"author":{"gitId":"houtenteo"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2021-10-26"},{"lineNumber":10,"author":{"gitId":"houtenteo"},"content":"import seedu.address.ui.FullPersonCard;","lastModifiedDate":"2021-10-26"},{"lineNumber":11,"author":{"gitId":"houtenteo"},"content":"import seedu.address.ui.UiManager;","lastModifiedDate":"2021-10-26"},{"lineNumber":12,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":13,"author":{"gitId":"houtenteo"},"content":"/**","lastModifiedDate":"2021-10-26"},{"lineNumber":14,"author":{"gitId":"houtenteo"},"content":" * Finds and lists all persons in address book whose name contains any of the argument keywords.","lastModifiedDate":"2021-10-26"},{"lineNumber":15,"author":{"gitId":"houtenteo"},"content":" * Keyword matching is case insensitive.","lastModifiedDate":"2021-10-26"},{"lineNumber":16,"author":{"gitId":"houtenteo"},"content":" */","lastModifiedDate":"2021-10-26"},{"lineNumber":17,"author":{"gitId":"houtenteo"},"content":"public class FindAllCommand extends Command {","lastModifiedDate":"2021-10-27"},{"lineNumber":18,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":19,"author":{"gitId":"houtenteo"},"content":"    public static final String COMMAND_WORD \u003d \"findAll\";","lastModifiedDate":"2021-10-26"},{"lineNumber":20,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":21,"author":{"gitId":"houtenteo"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Finds all persons whose fields matches \"","lastModifiedDate":"2021-10-26"},{"lineNumber":22,"author":{"gitId":"houtenteo"},"content":"            + \"ALL the specified keywords (case-insensitive) and displays them as a list with index numbers.\\n\"","lastModifiedDate":"2021-10-28"},{"lineNumber":23,"author":{"gitId":"houtenteo"},"content":"            + \"Parameters: KEYWORD [n/NAME] [p/PHONE] [e/EMAIL] [a/ADDRESS] [g/GENDER] [age/AGE] [i/INTEREST]...\\n\"","lastModifiedDate":"2021-10-26"},{"lineNumber":24,"author":{"gitId":"houtenteo"},"content":"            + \"Example: \" + COMMAND_WORD + \" n/alice  g/F age/15\";","lastModifiedDate":"2021-10-26"},{"lineNumber":25,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":26,"author":{"gitId":"houtenteo"},"content":"    private final Predicate\u003cPerson\u003e predicate;","lastModifiedDate":"2021-10-26"},{"lineNumber":27,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":28,"author":{"gitId":"houtenteo"},"content":"    public FindAllCommand(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2021-10-27"},{"lineNumber":29,"author":{"gitId":"houtenteo"},"content":"        this.predicate \u003d predicate;","lastModifiedDate":"2021-10-26"},{"lineNumber":30,"author":{"gitId":"houtenteo"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":31,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":32,"author":{"gitId":"houtenteo"},"content":"    @Override","lastModifiedDate":"2021-10-26"},{"lineNumber":33,"author":{"gitId":"houtenteo"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2021-10-26"},{"lineNumber":34,"author":{"gitId":"houtenteo"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-10-26"},{"lineNumber":35,"author":{"gitId":"houtenteo"},"content":"        model.updateFilteredPersonList(predicate);","lastModifiedDate":"2021-10-26"},{"lineNumber":36,"author":{"gitId":"houtenteo"},"content":"        resetDisplay();","lastModifiedDate":"2021-10-26"},{"lineNumber":37,"author":{"gitId":"houtenteo"},"content":"        UiManager.displayFunction();","lastModifiedDate":"2021-10-26"},{"lineNumber":38,"author":{"gitId":"houtenteo"},"content":"        return new CommandResult(","lastModifiedDate":"2021-10-26"},{"lineNumber":39,"author":{"gitId":"houtenteo"},"content":"                String.format(Messages.MESSAGE_PERSONS_LISTED_OVERVIEW, model.getFilteredPersonList().size()));","lastModifiedDate":"2021-10-26"},{"lineNumber":40,"author":{"gitId":"houtenteo"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":41,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":42,"author":{"gitId":"houtenteo"},"content":"    /**","lastModifiedDate":"2021-10-26"},{"lineNumber":43,"author":{"gitId":"houtenteo"},"content":"     * Resets the displayed index to 1","lastModifiedDate":"2021-10-26"},{"lineNumber":44,"author":{"gitId":"houtenteo"},"content":"     */","lastModifiedDate":"2021-10-26"},{"lineNumber":45,"author":{"gitId":"houtenteo"},"content":"    private void resetDisplay() {","lastModifiedDate":"2021-10-26"},{"lineNumber":46,"author":{"gitId":"houtenteo"},"content":"        FullPersonCard.setDisplayedIndex(1);","lastModifiedDate":"2021-10-26"},{"lineNumber":47,"author":{"gitId":"houtenteo"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":48,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":49,"author":{"gitId":"houtenteo"},"content":"    @Override","lastModifiedDate":"2021-10-26"},{"lineNumber":50,"author":{"gitId":"houtenteo"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-26"},{"lineNumber":51,"author":{"gitId":"houtenteo"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-26"},{"lineNumber":52,"author":{"gitId":"houtenteo"},"content":"                || (other instanceof FindAllCommand // instanceof handles nulls","lastModifiedDate":"2021-10-27"},{"lineNumber":53,"author":{"gitId":"houtenteo"},"content":"                \u0026\u0026 predicate.equals(((FindAllCommand) other).predicate)); // state check","lastModifiedDate":"2021-10-27"},{"lineNumber":54,"author":{"gitId":"houtenteo"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":55,"author":{"gitId":"houtenteo"},"content":"}","lastModifiedDate":"2021-10-26"}],"authorContributionMap":{"houtenteo":55}},{"path":"src/main/java/seedu/address/logic/commands/FindAnyCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":5,"author":{"gitId":"houtenteo"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2021-10-25"},{"lineNumber":6,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2018-04-01"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":9,"author":{"gitId":"houtenteo"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2021-10-25"},{"lineNumber":10,"author":{"gitId":"houtenteo"},"content":"import seedu.address.ui.FullPersonCard;","lastModifiedDate":"2021-10-26"},{"lineNumber":11,"author":{"gitId":"houtenteo"},"content":"import seedu.address.ui.UiManager;","lastModifiedDate":"2021-10-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Finds and lists all persons in address book whose name contains any of the argument keywords.","lastModifiedDate":"2016-09-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * Keyword matching is case insensitive.","lastModifiedDate":"2018-04-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-22"},{"lineNumber":17,"author":{"gitId":"houtenteo"},"content":"public class FindAnyCommand extends Command {","lastModifiedDate":"2021-10-28"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":19,"author":{"gitId":"houtenteo"},"content":"    public static final String COMMAND_WORD \u003d \"findAny\";","lastModifiedDate":"2021-10-28"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":21,"author":{"gitId":"houtenteo"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Finds all persons whose fields matches \"","lastModifiedDate":"2021-10-25"},{"lineNumber":22,"author":{"gitId":"houtenteo"},"content":"            + \"any of the specified keywords (case-insensitive) and displays them as a list with index numbers.\\n\"","lastModifiedDate":"2021-10-28"},{"lineNumber":23,"author":{"gitId":"houtenteo"},"content":"            + \"Parameters: KEYWORD [n/NAME] [p/PHONE] [e/EMAIL] [a/ADDRESS] [g/GENDER] [age/AGE] [i/INTEREST]...\\n\"","lastModifiedDate":"2021-10-25"},{"lineNumber":24,"author":{"gitId":"houtenteo"},"content":"            + \"Example: \" + COMMAND_WORD + \" n/alice  g/F age/15\";","lastModifiedDate":"2021-10-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":26,"author":{"gitId":"houtenteo"},"content":"    private final Predicate\u003cPerson\u003e predicate;","lastModifiedDate":"2021-10-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":28,"author":{"gitId":"houtenteo"},"content":"    public FindAnyCommand(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2021-10-28"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        this.predicate \u003d predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-22"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(predicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":36,"author":{"gitId":"houtenteo"},"content":"        resetDisplay();","lastModifiedDate":"2021-10-26"},{"lineNumber":37,"author":{"gitId":"houtenteo"},"content":"        UiManager.displayFunction();","lastModifiedDate":"2021-10-26"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return new CommandResult(","lastModifiedDate":"2018-04-01"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                String.format(Messages.MESSAGE_PERSONS_LISTED_OVERVIEW, model.getFilteredPersonList().size()));","lastModifiedDate":"2018-04-01"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":42,"author":{"gitId":"houtenteo"},"content":"    /**","lastModifiedDate":"2021-10-26"},{"lineNumber":43,"author":{"gitId":"houtenteo"},"content":"     * Resets the displayed index to 1","lastModifiedDate":"2021-10-26"},{"lineNumber":44,"author":{"gitId":"houtenteo"},"content":"     */","lastModifiedDate":"2021-10-26"},{"lineNumber":45,"author":{"gitId":"houtenteo"},"content":"    private void resetDisplay() {","lastModifiedDate":"2021-10-26"},{"lineNumber":46,"author":{"gitId":"houtenteo"},"content":"        FullPersonCard.setDisplayedIndex(1);","lastModifiedDate":"2021-10-26"},{"lineNumber":47,"author":{"gitId":"houtenteo"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":48,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-27"},{"lineNumber":52,"author":{"gitId":"houtenteo"},"content":"                || (other instanceof FindAnyCommand // instanceof handles nulls","lastModifiedDate":"2021-10-28"},{"lineNumber":53,"author":{"gitId":"houtenteo"},"content":"                \u0026\u0026 predicate.equals(((FindAnyCommand) other).predicate)); // state check","lastModifiedDate":"2021-10-28"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"houtenteo":24,"-":31}},{"path":"src/main/java/seedu/address/logic/commands/ListCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2017-08-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":7,"author":{"gitId":"houtenteo"},"content":"import seedu.address.ui.FullPersonCard;","lastModifiedDate":"2021-10-26"},{"lineNumber":8,"author":{"gitId":"houtenteo"},"content":"import seedu.address.ui.UiManager;","lastModifiedDate":"2021-10-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Lists all persons in the address book to the user.","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2016-09-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"list\";","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Listed all persons\";","lastModifiedDate":"2016-09-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":24,"author":{"gitId":"Kangxun"},"content":"        model.sortFilteredPersonList();","lastModifiedDate":"2021-10-25"},{"lineNumber":25,"author":{"gitId":"houtenteo"},"content":"        resetDisplay();","lastModifiedDate":"2021-10-26"},{"lineNumber":26,"author":{"gitId":"houtenteo"},"content":"        UiManager.displayFunction();","lastModifiedDate":"2021-10-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2016-09-22"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":30,"author":{"gitId":"houtenteo"},"content":"    /**","lastModifiedDate":"2021-10-26"},{"lineNumber":31,"author":{"gitId":"houtenteo"},"content":"     * Resets the displayed index to 1","lastModifiedDate":"2021-10-26"},{"lineNumber":32,"author":{"gitId":"houtenteo"},"content":"     */","lastModifiedDate":"2021-10-26"},{"lineNumber":33,"author":{"gitId":"houtenteo"},"content":"    private void resetDisplay() {","lastModifiedDate":"2021-10-26"},{"lineNumber":34,"author":{"gitId":"houtenteo"},"content":"        FullPersonCard.setDisplayedIndex(1);","lastModifiedDate":"2021-10-26"},{"lineNumber":35,"author":{"gitId":"houtenteo"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":36,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"houtenteo":11,"-":24,"Kangxun":1}},{"path":"src/main/java/seedu/address/logic/comparators/CalledComparator.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Kangxun"},"content":"package seedu.address.logic.comparators;","lastModifiedDate":"2021-10-25"},{"lineNumber":2,"author":{"gitId":"Kangxun"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":3,"author":{"gitId":"Kangxun"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2021-10-25"},{"lineNumber":4,"author":{"gitId":"Kangxun"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":5,"author":{"gitId":"Kangxun"},"content":"import java.util.Comparator;","lastModifiedDate":"2021-10-25"},{"lineNumber":6,"author":{"gitId":"Kangxun"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":7,"author":{"gitId":"Kangxun"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2021-10-25"},{"lineNumber":8,"author":{"gitId":"Kangxun"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":9,"author":{"gitId":"Kangxun"},"content":"/**","lastModifiedDate":"2021-10-25"},{"lineNumber":10,"author":{"gitId":"Kangxun"},"content":" * A comparator that compares Persons based on whether they are called.","lastModifiedDate":"2021-10-25"},{"lineNumber":11,"author":{"gitId":"Kangxun"},"content":" */","lastModifiedDate":"2021-10-25"},{"lineNumber":12,"author":{"gitId":"Kangxun"},"content":"public class CalledComparator implements Comparator\u003cPerson\u003e {","lastModifiedDate":"2021-10-25"},{"lineNumber":13,"author":{"gitId":"Kangxun"},"content":"    // Used for sorting based on whether person is called","lastModifiedDate":"2021-10-25"},{"lineNumber":14,"author":{"gitId":"Kangxun"},"content":"    // Person who isn\u0027t called will be shown first","lastModifiedDate":"2021-10-25"},{"lineNumber":15,"author":{"gitId":"Kangxun"},"content":"    @Override","lastModifiedDate":"2021-10-25"},{"lineNumber":16,"author":{"gitId":"Kangxun"},"content":"    public int compare(Person a, Person b) {","lastModifiedDate":"2021-10-25"},{"lineNumber":17,"author":{"gitId":"Kangxun"},"content":"        requireAllNonNull(a, b);","lastModifiedDate":"2021-10-25"},{"lineNumber":18,"author":{"gitId":"pranav-ganesh"},"content":"        if (a.getIsCalled().value \u003d\u003d b.getIsCalled().value) {","lastModifiedDate":"2021-11-04"},{"lineNumber":19,"author":{"gitId":"Kangxun"},"content":"            return 0;","lastModifiedDate":"2021-10-25"},{"lineNumber":20,"author":{"gitId":"Kangxun"},"content":"        }","lastModifiedDate":"2021-10-25"},{"lineNumber":21,"author":{"gitId":"pranav-ganesh"},"content":"        return a.getIsCalled().value ? 1 : -1;","lastModifiedDate":"2021-11-04"},{"lineNumber":22,"author":{"gitId":"Kangxun"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":23,"author":{"gitId":"Kangxun"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":24,"author":{"gitId":"Kangxun"},"content":"    @Override","lastModifiedDate":"2021-10-25"},{"lineNumber":25,"author":{"gitId":"Kangxun"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-25"},{"lineNumber":26,"author":{"gitId":"Kangxun"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-25"},{"lineNumber":27,"author":{"gitId":"Kangxun"},"content":"                || (other instanceof CalledComparator); // instanceof handles nulls","lastModifiedDate":"2021-10-25"},{"lineNumber":28,"author":{"gitId":"Kangxun"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":29,"author":{"gitId":"Kangxun"},"content":"}","lastModifiedDate":"2021-10-25"}],"authorContributionMap":{"pranav-ganesh":2,"Kangxun":27}},{"path":"src/main/java/seedu/address/logic/comparators/GenderComparator.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Kangxun"},"content":"package seedu.address.logic.comparators;","lastModifiedDate":"2021-10-25"},{"lineNumber":2,"author":{"gitId":"Kangxun"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":3,"author":{"gitId":"Kangxun"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2021-10-25"},{"lineNumber":4,"author":{"gitId":"Kangxun"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":5,"author":{"gitId":"Kangxun"},"content":"import java.util.Comparator;","lastModifiedDate":"2021-10-25"},{"lineNumber":6,"author":{"gitId":"Kangxun"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":7,"author":{"gitId":"Kangxun"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2021-10-25"},{"lineNumber":8,"author":{"gitId":"Kangxun"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":9,"author":{"gitId":"Kangxun"},"content":"/**","lastModifiedDate":"2021-10-25"},{"lineNumber":10,"author":{"gitId":"Kangxun"},"content":" * A comparator that compares Persons based on their genders.","lastModifiedDate":"2021-10-25"},{"lineNumber":11,"author":{"gitId":"Kangxun"},"content":" */","lastModifiedDate":"2021-10-25"},{"lineNumber":12,"author":{"gitId":"Kangxun"},"content":"public class GenderComparator implements Comparator\u003cPerson\u003e {","lastModifiedDate":"2021-10-25"},{"lineNumber":13,"author":{"gitId":"Kangxun"},"content":"    // Used for sorting based on gender","lastModifiedDate":"2021-10-25"},{"lineNumber":14,"author":{"gitId":"Kangxun"},"content":"    // Persons will be shown in this order: Female, Male, N.A","lastModifiedDate":"2021-10-25"},{"lineNumber":15,"author":{"gitId":"Kangxun"},"content":"    @Override","lastModifiedDate":"2021-10-25"},{"lineNumber":16,"author":{"gitId":"Kangxun"},"content":"    public int compare(Person a, Person b) {","lastModifiedDate":"2021-10-25"},{"lineNumber":17,"author":{"gitId":"Kangxun"},"content":"        requireAllNonNull(a, b);","lastModifiedDate":"2021-10-25"},{"lineNumber":18,"author":{"gitId":"Kangxun"},"content":"        if (a.getGender().value \u003d\u003d \"N.A\") {","lastModifiedDate":"2021-10-25"},{"lineNumber":19,"author":{"gitId":"Kangxun"},"content":"            return 1;","lastModifiedDate":"2021-10-25"},{"lineNumber":20,"author":{"gitId":"Kangxun"},"content":"        }","lastModifiedDate":"2021-10-25"},{"lineNumber":21,"author":{"gitId":"Kangxun"},"content":"        return a.getGender().value.compareTo(b.getGender().value);","lastModifiedDate":"2021-10-25"},{"lineNumber":22,"author":{"gitId":"Kangxun"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":23,"author":{"gitId":"Kangxun"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":24,"author":{"gitId":"Kangxun"},"content":"    @Override","lastModifiedDate":"2021-10-25"},{"lineNumber":25,"author":{"gitId":"Kangxun"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-25"},{"lineNumber":26,"author":{"gitId":"Kangxun"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-25"},{"lineNumber":27,"author":{"gitId":"Kangxun"},"content":"                || (other instanceof GenderComparator); // instanceof handles nulls","lastModifiedDate":"2021-10-25"},{"lineNumber":28,"author":{"gitId":"Kangxun"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":29,"author":{"gitId":"Kangxun"},"content":"}","lastModifiedDate":"2021-10-25"}],"authorContributionMap":{"Kangxun":29}},{"path":"src/main/java/seedu/address/logic/comparators/NameComparator.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Kangxun"},"content":"package seedu.address.logic.comparators;","lastModifiedDate":"2021-10-25"},{"lineNumber":2,"author":{"gitId":"Kangxun"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":3,"author":{"gitId":"Kangxun"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2021-10-25"},{"lineNumber":4,"author":{"gitId":"Kangxun"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":5,"author":{"gitId":"Kangxun"},"content":"import java.util.Comparator;","lastModifiedDate":"2021-10-25"},{"lineNumber":6,"author":{"gitId":"Kangxun"},"content":"import java.util.Locale;","lastModifiedDate":"2021-10-27"},{"lineNumber":7,"author":{"gitId":"Kangxun"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":8,"author":{"gitId":"Kangxun"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2021-10-25"},{"lineNumber":9,"author":{"gitId":"Kangxun"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":10,"author":{"gitId":"Kangxun"},"content":"/**","lastModifiedDate":"2021-10-25"},{"lineNumber":11,"author":{"gitId":"Kangxun"},"content":" * A comparator that compares Persons based on their names.","lastModifiedDate":"2021-10-25"},{"lineNumber":12,"author":{"gitId":"Kangxun"},"content":" */","lastModifiedDate":"2021-10-25"},{"lineNumber":13,"author":{"gitId":"Kangxun"},"content":"public class NameComparator implements Comparator\u003cPerson\u003e {","lastModifiedDate":"2021-10-25"},{"lineNumber":14,"author":{"gitId":"Kangxun"},"content":"    // Used for sorting in ascending order of name","lastModifiedDate":"2021-10-25"},{"lineNumber":15,"author":{"gitId":"Kangxun"},"content":"    @Override","lastModifiedDate":"2021-10-25"},{"lineNumber":16,"author":{"gitId":"Kangxun"},"content":"    public int compare(Person a, Person b) {","lastModifiedDate":"2021-10-25"},{"lineNumber":17,"author":{"gitId":"Kangxun"},"content":"        requireAllNonNull(a, b);","lastModifiedDate":"2021-10-25"},{"lineNumber":18,"author":{"gitId":"Kangxun"},"content":"        String aNameInUpperCase \u003d a.getName().fullName.toUpperCase(Locale.ROOT);","lastModifiedDate":"2021-10-27"},{"lineNumber":19,"author":{"gitId":"Kangxun"},"content":"        String bNameInUpperCase \u003d b.getName().fullName.toUpperCase(Locale.ROOT);","lastModifiedDate":"2021-10-27"},{"lineNumber":20,"author":{"gitId":"Kangxun"},"content":"        return aNameInUpperCase.compareTo(bNameInUpperCase);","lastModifiedDate":"2021-10-27"},{"lineNumber":21,"author":{"gitId":"Kangxun"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":22,"author":{"gitId":"Kangxun"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":23,"author":{"gitId":"Kangxun"},"content":"    @Override","lastModifiedDate":"2021-10-25"},{"lineNumber":24,"author":{"gitId":"Kangxun"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-25"},{"lineNumber":25,"author":{"gitId":"Kangxun"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-25"},{"lineNumber":26,"author":{"gitId":"Kangxun"},"content":"                || (other instanceof NameComparator); // instanceof handles nulls","lastModifiedDate":"2021-10-25"},{"lineNumber":27,"author":{"gitId":"Kangxun"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":28,"author":{"gitId":"Kangxun"},"content":"}","lastModifiedDate":"2021-10-25"}],"authorContributionMap":{"Kangxun":28}},{"path":"src/main/java/seedu/address/logic/comparators/PersonComparator.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Kangxun"},"content":"package seedu.address.logic.comparators;","lastModifiedDate":"2021-10-25"},{"lineNumber":2,"author":{"gitId":"Kangxun"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":3,"author":{"gitId":"Kangxun"},"content":"import java.util.Comparator;","lastModifiedDate":"2021-10-25"},{"lineNumber":4,"author":{"gitId":"Kangxun"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":5,"author":{"gitId":"Kangxun"},"content":"import seedu.address.logic.comparators.exceptions.ComparatorException;","lastModifiedDate":"2021-10-25"},{"lineNumber":6,"author":{"gitId":"Kangxun"},"content":"import seedu.address.model.category.Category;","lastModifiedDate":"2021-10-25"},{"lineNumber":7,"author":{"gitId":"Kangxun"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2021-10-25"},{"lineNumber":8,"author":{"gitId":"Kangxun"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":9,"author":{"gitId":"Kangxun"},"content":"/**","lastModifiedDate":"2021-10-25"},{"lineNumber":10,"author":{"gitId":"Kangxun"},"content":" * A general comparator for Persons. Can be specified to compare any Person attributes.","lastModifiedDate":"2021-10-25"},{"lineNumber":11,"author":{"gitId":"Kangxun"},"content":" */","lastModifiedDate":"2021-10-25"},{"lineNumber":12,"author":{"gitId":"Kangxun"},"content":"public class PersonComparator {","lastModifiedDate":"2021-10-25"},{"lineNumber":13,"author":{"gitId":"Kangxun"},"content":"    public static final String MESSAGE_INVALID_CATEGORY \u003d \"Category can only be either \\\"called\\\" or \\\"gender\\\"\\n\";","lastModifiedDate":"2021-11-07"},{"lineNumber":14,"author":{"gitId":"Kangxun"},"content":"    public static final String VALIDATION_REGEX \u003d \"CALLED|GENDER\";","lastModifiedDate":"2021-10-25"},{"lineNumber":15,"author":{"gitId":"Kangxun"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":16,"author":{"gitId":"Kangxun"},"content":"    /**","lastModifiedDate":"2021-10-25"},{"lineNumber":17,"author":{"gitId":"Kangxun"},"content":"     * Returns the appropriate comparator based on the {@code category} given.","lastModifiedDate":"2021-10-25"},{"lineNumber":18,"author":{"gitId":"Kangxun"},"content":"     * @throws ComparatorException if unable to create the appropriate comparator.","lastModifiedDate":"2021-10-25"},{"lineNumber":19,"author":{"gitId":"Kangxun"},"content":"     */","lastModifiedDate":"2021-10-25"},{"lineNumber":20,"author":{"gitId":"Kangxun"},"content":"    public static Comparator\u003cPerson\u003e getComparator(Category category) throws ComparatorException {","lastModifiedDate":"2021-10-25"},{"lineNumber":21,"author":{"gitId":"Kangxun"},"content":"        switch (category.category) {","lastModifiedDate":"2021-10-25"},{"lineNumber":22,"author":{"gitId":"Kangxun"},"content":"        case \"CALLED\":","lastModifiedDate":"2021-10-25"},{"lineNumber":23,"author":{"gitId":"Kangxun"},"content":"            return new CalledComparator();","lastModifiedDate":"2021-10-25"},{"lineNumber":24,"author":{"gitId":"Kangxun"},"content":"        case \"GENDER\":","lastModifiedDate":"2021-10-25"},{"lineNumber":25,"author":{"gitId":"Kangxun"},"content":"            return new GenderComparator();","lastModifiedDate":"2021-10-25"},{"lineNumber":26,"author":{"gitId":"Kangxun"},"content":"        default:","lastModifiedDate":"2021-10-25"},{"lineNumber":27,"author":{"gitId":"Kangxun"},"content":"            throw new ComparatorException(MESSAGE_INVALID_CATEGORY);","lastModifiedDate":"2021-10-25"},{"lineNumber":28,"author":{"gitId":"Kangxun"},"content":"        }","lastModifiedDate":"2021-10-25"},{"lineNumber":29,"author":{"gitId":"Kangxun"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":30,"author":{"gitId":"Kangxun"},"content":"}","lastModifiedDate":"2021-10-25"}],"authorContributionMap":{"Kangxun":30}},{"path":"src/main/java/seedu/address/logic/comparators/exceptions/ComparatorException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Kangxun"},"content":"package seedu.address.logic.comparators.exceptions;","lastModifiedDate":"2021-10-25"},{"lineNumber":2,"author":{"gitId":"Kangxun"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":3,"author":{"gitId":"Kangxun"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2021-10-25"},{"lineNumber":4,"author":{"gitId":"Kangxun"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":5,"author":{"gitId":"Kangxun"},"content":"/**","lastModifiedDate":"2021-10-25"},{"lineNumber":6,"author":{"gitId":"Kangxun"},"content":" * Represents a comparison error encountered by a comparator.","lastModifiedDate":"2021-10-25"},{"lineNumber":7,"author":{"gitId":"Kangxun"},"content":" */","lastModifiedDate":"2021-10-25"},{"lineNumber":8,"author":{"gitId":"Kangxun"},"content":"public class ComparatorException extends IllegalValueException {","lastModifiedDate":"2021-10-25"},{"lineNumber":9,"author":{"gitId":"Kangxun"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":10,"author":{"gitId":"Kangxun"},"content":"    public ComparatorException(String message) {","lastModifiedDate":"2021-10-25"},{"lineNumber":11,"author":{"gitId":"Kangxun"},"content":"        super(message);","lastModifiedDate":"2021-10-25"},{"lineNumber":12,"author":{"gitId":"Kangxun"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":13,"author":{"gitId":"Kangxun"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":14,"author":{"gitId":"Kangxun"},"content":"    public ComparatorException(String message, Throwable cause) {","lastModifiedDate":"2021-10-25"},{"lineNumber":15,"author":{"gitId":"Kangxun"},"content":"        super(message, cause);","lastModifiedDate":"2021-10-25"},{"lineNumber":16,"author":{"gitId":"Kangxun"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":17,"author":{"gitId":"Kangxun"},"content":"}","lastModifiedDate":"2021-10-25"}],"authorContributionMap":{"Kangxun":17}},{"path":"src/main/java/seedu/address/logic/parser/AddCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-02-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2021-10-18"},{"lineNumber":5,"author":{"gitId":"houtenteo"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_AGE;","lastModifiedDate":"2021-10-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2021-10-11"},{"lineNumber":7,"author":{"gitId":"houtenteo"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_GENDER;","lastModifiedDate":"2021-10-18"},{"lineNumber":8,"author":{"gitId":"houtenteo"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_INTEREST;","lastModifiedDate":"2021-10-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2021-10-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2021-10-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2017-03-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-02-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2021-10-18"},{"lineNumber":17,"author":{"gitId":"houtenteo"},"content":"import seedu.address.model.person.Age;","lastModifiedDate":"2021-10-18"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-03-17"},{"lineNumber":19,"author":{"gitId":"houtenteo"},"content":"import seedu.address.model.person.Gender;","lastModifiedDate":"2021-10-18"},{"lineNumber":20,"author":{"gitId":"pranav-ganesh"},"content":"import seedu.address.model.person.IsCalled;","lastModifiedDate":"2021-11-04"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-03-17"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-03-17"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-03-17"},{"lineNumber":24,"author":{"gitId":"houtenteo"},"content":"import seedu.address.model.person.interests.InterestsList;","lastModifiedDate":"2021-10-18"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new AddCommand object","lastModifiedDate":"2017-02-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"public class AddCommandParser implements Parser\u003cAddCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the AddCommand","lastModifiedDate":"2017-02-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * and returns an AddCommand object for execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public AddCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2017-03-20"},{"lineNumber":38,"author":{"gitId":"houtenteo"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL,","lastModifiedDate":"2021-10-18"},{"lineNumber":39,"author":{"gitId":"houtenteo"},"content":"                        PREFIX_ADDRESS, PREFIX_GENDER, PREFIX_AGE, PREFIX_INTEREST);","lastModifiedDate":"2021-10-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":41,"author":{"gitId":"loose-bus-change"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL)","lastModifiedDate":"2021-09-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2017-12-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-03-11"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-17"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        Name name \u003d ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        Phone phone \u003d ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        Email email \u003d ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":49,"author":{"gitId":"houtenteo"},"content":"        Address address \u003d ParserUtil.parseAddress(argMultimap.getValue(PREFIX_ADDRESS).orElse(null));","lastModifiedDate":"2021-10-18"},{"lineNumber":50,"author":{"gitId":"houtenteo"},"content":"        Gender gender \u003d ParserUtil.parseGender(argMultimap.getValue(PREFIX_GENDER).orElse(null));","lastModifiedDate":"2021-10-18"},{"lineNumber":51,"author":{"gitId":"houtenteo"},"content":"        Age age \u003d ParserUtil.parseAge(argMultimap.getValue(PREFIX_AGE).orElse(null));","lastModifiedDate":"2021-10-18"},{"lineNumber":52,"author":{"gitId":"houtenteo"},"content":"        InterestsList interestList \u003d ParserUtil.parseInterests(argMultimap.getAllValues(PREFIX_INTEREST));","lastModifiedDate":"2021-10-18"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":54,"author":{"gitId":"pranav-ganesh"},"content":"        Person person \u003d new Person(name, phone, email, new IsCalled(\"FALSE\"), address,","lastModifiedDate":"2021-11-04"},{"lineNumber":55,"author":{"gitId":"houtenteo"},"content":"                gender, age, interestList);","lastModifiedDate":"2021-10-18"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return new AddCommand(person);","lastModifiedDate":"2017-03-17"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-17"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2017-03-17"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2017-03-17"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-17"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2017-03-17"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2017-03-17"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-17"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":68,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-05"}],"authorContributionMap":{"houtenteo":13,"loose-bus-change":1,"pranav-ganesh":2,"-":52}},{"path":"src/main/java/seedu/address/logic/parser/AddressBookParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":10,"author":{"gitId":"pranav-ganesh"},"content":"import seedu.address.logic.commands.CalledCommand;","lastModifiedDate":"2021-11-04"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ClearCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2017-01-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":14,"author":{"gitId":"loose-bus-change"},"content":"import seedu.address.logic.commands.DisplayCommand;","lastModifiedDate":"2021-10-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ExitCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":17,"author":{"gitId":"Kangxun"},"content":"import seedu.address.logic.commands.FilterCommand;","lastModifiedDate":"2021-10-08"},{"lineNumber":18,"author":{"gitId":"houtenteo"},"content":"import seedu.address.logic.commands.FindAllCommand;","lastModifiedDate":"2021-10-27"},{"lineNumber":19,"author":{"gitId":"houtenteo"},"content":"import seedu.address.logic.commands.FindAnyCommand;","lastModifiedDate":"2021-10-28"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.HelpCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":" * Parses user input.","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"public class AddressBookParser {","lastModifiedDate":"2017-07-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Used for initial separation of command word and args.","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private static final Pattern BASIC_COMMAND_FORMAT \u003d Pattern.compile(\"(?\u003ccommandWord\u003e\\\\S+)(?\u003carguments\u003e.*)\");","lastModifiedDate":"2016-09-22"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Parses user input into command for execution.","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * @param userInput full user input string","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * @return the command based on the user input","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public Command parseCommand(String userInput) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        final Matcher matcher \u003d BASIC_COMMAND_FORMAT.matcher(userInput.trim());","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-03-11"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        final String commandWord \u003d matcher.group(\"commandWord\");","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        switch (commandWord) {","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        case AddCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            return new AddCommandParser().parse(arguments);","lastModifiedDate":"2017-02-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        case EditCommand.COMMAND_WORD:","lastModifiedDate":"2016-12-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            return new EditCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        case DeleteCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            return new DeleteCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        case ClearCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"            return new ClearCommand();","lastModifiedDate":"2016-09-21"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":63,"author":{"gitId":"houtenteo"},"content":"        case FindAnyCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-28"},{"lineNumber":64,"author":{"gitId":"houtenteo"},"content":"            return new FindAnyCommandParser().parse(arguments);","lastModifiedDate":"2021-10-28"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":66,"author":{"gitId":"houtenteo"},"content":"        case FindAllCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-27"},{"lineNumber":67,"author":{"gitId":"houtenteo"},"content":"            return new FindAllCommandParser().parse(arguments);","lastModifiedDate":"2021-10-27"},{"lineNumber":68,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":69,"author":{"gitId":"pranav-ganesh"},"content":"        case CalledCommand.COMMAND_WORD:","lastModifiedDate":"2021-11-04"},{"lineNumber":70,"author":{"gitId":"pranav-ganesh"},"content":"            return new CalledCommandParser().parse(arguments);","lastModifiedDate":"2021-11-04"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        case ListCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            return new ListCommand();","lastModifiedDate":"2016-09-21"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":75,"author":{"gitId":"loose-bus-change"},"content":"        case DisplayCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-21"},{"lineNumber":76,"author":{"gitId":"loose-bus-change"},"content":"            return new DisplayCommandParser().parse(arguments);","lastModifiedDate":"2021-10-21"},{"lineNumber":77,"author":{"gitId":"loose-bus-change"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        case ExitCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"            return new ExitCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        case HelpCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-26"},{"lineNumber":82,"author":{"gitId":"-"},"content":"            return new HelpCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":84,"author":{"gitId":"Kangxun"},"content":"        case FilterCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-08"},{"lineNumber":85,"author":{"gitId":"Kangxun"},"content":"            return new FilterCommandParser().parse(arguments);","lastModifiedDate":"2021-10-09"},{"lineNumber":86,"author":{"gitId":"Kangxun"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        default:","lastModifiedDate":"2016-08-26"},{"lineNumber":88,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-03-11"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":91,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"houtenteo":7,"loose-bus-change":4,"pranav-ganesh":3,"-":73,"Kangxun":4}},{"path":"src/main/java/seedu/address/logic/parser/CalledCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"pranav-ganesh"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-09-24"},{"lineNumber":2,"author":{"gitId":"pranav-ganesh"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":3,"author":{"gitId":"pranav-ganesh"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-09-24"},{"lineNumber":4,"author":{"gitId":"pranav-ganesh"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":5,"author":{"gitId":"pranav-ganesh"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-09-24"},{"lineNumber":6,"author":{"gitId":"pranav-ganesh"},"content":"import seedu.address.logic.commands.CalledCommand;","lastModifiedDate":"2021-11-04"},{"lineNumber":7,"author":{"gitId":"pranav-ganesh"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-09-24"},{"lineNumber":8,"author":{"gitId":"pranav-ganesh"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":9,"author":{"gitId":"pranav-ganesh"},"content":"/**","lastModifiedDate":"2021-10-04"},{"lineNumber":10,"author":{"gitId":"pranav-ganesh"},"content":" * Parses the input argument and creates a new CalledCommand object","lastModifiedDate":"2021-11-04"},{"lineNumber":11,"author":{"gitId":"pranav-ganesh"},"content":" */","lastModifiedDate":"2021-10-04"},{"lineNumber":12,"author":{"gitId":"pranav-ganesh"},"content":"public class CalledCommandParser implements Parser\u003cCalledCommand\u003e {","lastModifiedDate":"2021-11-04"},{"lineNumber":13,"author":{"gitId":"pranav-ganesh"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":14,"author":{"gitId":"pranav-ganesh"},"content":"    /**","lastModifiedDate":"2021-10-04"},{"lineNumber":15,"author":{"gitId":"pranav-ganesh"},"content":"     * Parses the given {@code String} of argument and returns a CalledCommand object for execution.","lastModifiedDate":"2021-11-04"},{"lineNumber":16,"author":{"gitId":"pranav-ganesh"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2021-10-04"},{"lineNumber":17,"author":{"gitId":"pranav-ganesh"},"content":"     */","lastModifiedDate":"2021-10-04"},{"lineNumber":18,"author":{"gitId":"pranav-ganesh"},"content":"    public CalledCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-11-04"},{"lineNumber":19,"author":{"gitId":"pranav-ganesh"},"content":"        requireNonNull(args);","lastModifiedDate":"2021-09-24"},{"lineNumber":20,"author":{"gitId":"pranav-ganesh"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args);","lastModifiedDate":"2021-09-24"},{"lineNumber":21,"author":{"gitId":"pranav-ganesh"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":22,"author":{"gitId":"pranav-ganesh"},"content":"        Index index;","lastModifiedDate":"2021-09-24"},{"lineNumber":23,"author":{"gitId":"loose-bus-change"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":24,"author":{"gitId":"loose-bus-change"},"content":"        index \u003d ParserUtil.parseIndex(argMultimap.getPreamble(), CalledCommand.MESSAGE_USAGE);","lastModifiedDate":"2021-11-07"},{"lineNumber":25,"author":{"gitId":"loose-bus-change"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":26,"author":{"gitId":"pranav-ganesh"},"content":"        return new CalledCommand(index);","lastModifiedDate":"2021-11-04"},{"lineNumber":27,"author":{"gitId":"pranav-ganesh"},"content":"    }","lastModifiedDate":"2021-09-24"},{"lineNumber":28,"author":{"gitId":"pranav-ganesh"},"content":"}","lastModifiedDate":"2021-09-24"}],"authorContributionMap":{"loose-bus-change":3,"pranav-ganesh":25}},{"path":"src/main/java/seedu/address/logic/parser/CliSyntax.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Contains Command Line Interface (CLI) syntax definitions common to multiple commands","lastModifiedDate":"2017-02-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class CliSyntax {","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    /* Prefix definitions */","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_NAME \u003d new Prefix(\"n/\");","lastModifiedDate":"2017-06-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_PHONE \u003d new Prefix(\"p/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_EMAIL \u003d new Prefix(\"e/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":12,"author":{"gitId":"pranav-ganesh"},"content":"    public static final Prefix PREFIX_CALLED \u003d new Prefix(\"c/\");","lastModifiedDate":"2021-11-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_ADDRESS \u003d new Prefix(\"a/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":14,"author":{"gitId":"houtenteo"},"content":"    public static final Prefix PREFIX_GENDER \u003d new Prefix(\"g/\");","lastModifiedDate":"2021-10-18"},{"lineNumber":15,"author":{"gitId":"houtenteo"},"content":"    public static final Prefix PREFIX_AGE \u003d new Prefix(\"age/\");","lastModifiedDate":"2021-10-18"},{"lineNumber":16,"author":{"gitId":"houtenteo"},"content":"    public static final Prefix PREFIX_INTEREST \u003d new Prefix(\"i/\");","lastModifiedDate":"2021-10-18"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_TAG \u003d new Prefix(\"t/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":18,"author":{"gitId":"Kangxun"},"content":"    public static final Prefix EMPTY_PREFIX \u003d new Prefix(\"\");","lastModifiedDate":"2021-10-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"houtenteo":3,"pranav-ganesh":1,"-":14,"Kangxun":1}},{"path":"src/main/java/seedu/address/logic/parser/DeleteCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-01-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2017-01-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new DeleteCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class DeleteCommandParser implements Parser\u003cDeleteCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the DeleteCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * and returns a DeleteCommand object for execution.","lastModifiedDate":"2019-05-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public DeleteCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":18,"author":{"gitId":"loose-bus-change"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args);","lastModifiedDate":"2021-11-06"},{"lineNumber":19,"author":{"gitId":"loose-bus-change"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":20,"author":{"gitId":"loose-bus-change"},"content":"        Index index;","lastModifiedDate":"2021-11-07"},{"lineNumber":21,"author":{"gitId":"loose-bus-change"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":22,"author":{"gitId":"loose-bus-change"},"content":"        index \u003d ParserUtil.parseIndex(argMultimap.getPreamble(), DeleteCommand.MESSAGE_USAGE);","lastModifiedDate":"2021-11-07"},{"lineNumber":23,"author":{"gitId":"loose-bus-change"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        return new DeleteCommand(index);","lastModifiedDate":"2017-05-15"},{"lineNumber":25,"author":{"gitId":"loose-bus-change"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"loose-bus-change":7,"-":21}},{"path":"src/main/java/seedu/address/logic/parser/DisplayCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"loose-bus-change"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-10-21"},{"lineNumber":2,"author":{"gitId":"loose-bus-change"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":3,"author":{"gitId":"loose-bus-change"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-21"},{"lineNumber":4,"author":{"gitId":"loose-bus-change"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":5,"author":{"gitId":"loose-bus-change"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-10-21"},{"lineNumber":6,"author":{"gitId":"loose-bus-change"},"content":"import seedu.address.logic.commands.DisplayCommand;","lastModifiedDate":"2021-10-21"},{"lineNumber":7,"author":{"gitId":"loose-bus-change"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-21"},{"lineNumber":8,"author":{"gitId":"loose-bus-change"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":9,"author":{"gitId":"loose-bus-change"},"content":"/**","lastModifiedDate":"2021-10-21"},{"lineNumber":10,"author":{"gitId":"loose-bus-change"},"content":" * Parses the input argument and creates a new DisplayCommand object","lastModifiedDate":"2021-10-22"},{"lineNumber":11,"author":{"gitId":"loose-bus-change"},"content":" */","lastModifiedDate":"2021-10-21"},{"lineNumber":12,"author":{"gitId":"loose-bus-change"},"content":"public class DisplayCommandParser implements Parser\u003cDisplayCommand\u003e {","lastModifiedDate":"2021-10-21"},{"lineNumber":13,"author":{"gitId":"loose-bus-change"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":14,"author":{"gitId":"loose-bus-change"},"content":"    /**","lastModifiedDate":"2021-10-21"},{"lineNumber":15,"author":{"gitId":"loose-bus-change"},"content":"     * Parses the given {@code String} of argument and returns a DisplayCommand object for execution.","lastModifiedDate":"2021-10-22"},{"lineNumber":16,"author":{"gitId":"loose-bus-change"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2021-10-21"},{"lineNumber":17,"author":{"gitId":"loose-bus-change"},"content":"     */","lastModifiedDate":"2021-10-21"},{"lineNumber":18,"author":{"gitId":"loose-bus-change"},"content":"    public DisplayCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-10-21"},{"lineNumber":19,"author":{"gitId":"loose-bus-change"},"content":"        requireNonNull(args);","lastModifiedDate":"2021-10-21"},{"lineNumber":20,"author":{"gitId":"loose-bus-change"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args);","lastModifiedDate":"2021-10-21"},{"lineNumber":21,"author":{"gitId":"loose-bus-change"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":22,"author":{"gitId":"loose-bus-change"},"content":"        Index index;","lastModifiedDate":"2021-10-21"},{"lineNumber":23,"author":{"gitId":"loose-bus-change"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":24,"author":{"gitId":"loose-bus-change"},"content":"        index \u003d ParserUtil.parseIndex(argMultimap.getPreamble(), DisplayCommand.MESSAGE_USAGE);","lastModifiedDate":"2021-11-07"},{"lineNumber":25,"author":{"gitId":"loose-bus-change"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":26,"author":{"gitId":"loose-bus-change"},"content":"        return new DisplayCommand(index);","lastModifiedDate":"2021-10-21"},{"lineNumber":27,"author":{"gitId":"loose-bus-change"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":28,"author":{"gitId":"loose-bus-change"},"content":"}","lastModifiedDate":"2021-10-21"}],"authorContributionMap":{"loose-bus-change":28}},{"path":"src/main/java/seedu/address/logic/parser/EditCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-01-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-01-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-01-26"},{"lineNumber":6,"author":{"gitId":"pranav-ganesh"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_AGE;","lastModifiedDate":"2021-10-20"},{"lineNumber":7,"author":{"gitId":"pranav-ganesh"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_CALLED;","lastModifiedDate":"2021-11-04"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-01-26"},{"lineNumber":9,"author":{"gitId":"pranav-ganesh"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_GENDER;","lastModifiedDate":"2021-10-20"},{"lineNumber":10,"author":{"gitId":"pranav-ganesh"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_INTEREST;","lastModifiedDate":"2021-10-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-01-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-01-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-01-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":20,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new EditCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":21,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class EditCommandParser implements Parser\u003cEditCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the EditCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * and returns an EditCommand object for execution.","lastModifiedDate":"2017-01-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public EditCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        requireNonNull(args);","lastModifiedDate":"2017-05-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2017-03-20"},{"lineNumber":32,"author":{"gitId":"pranav-ganesh"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ADDRESS, PREFIX_GENDER,","lastModifiedDate":"2021-10-20"},{"lineNumber":33,"author":{"gitId":"pranav-ganesh"},"content":"                        PREFIX_CALLED, PREFIX_AGE, PREFIX_INTEREST);","lastModifiedDate":"2021-11-04"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        Index index;","lastModifiedDate":"2017-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-05-15"},{"lineNumber":38,"author":{"gitId":"loose-bus-change"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble(), EditCommand.MESSAGE_USAGE);","lastModifiedDate":"2021-11-07"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2018-07-10"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2018-08-06"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        EditPersonDescriptor editPersonDescriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2017-01-26"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_NAME).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setName(ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_PHONE).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setPhone(ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_EMAIL).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setEmail(ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":53,"author":{"gitId":"pranav-ganesh"},"content":"        if (argMultimap.getValue(PREFIX_GENDER).isPresent()) {","lastModifiedDate":"2021-10-20"},{"lineNumber":54,"author":{"gitId":"pranav-ganesh"},"content":"            editPersonDescriptor.setGender(ParserUtil.parseGender(argMultimap.getValue(PREFIX_GENDER).get()));","lastModifiedDate":"2021-10-20"},{"lineNumber":55,"author":{"gitId":"pranav-ganesh"},"content":"        }","lastModifiedDate":"2021-10-20"},{"lineNumber":56,"author":{"gitId":"pranav-ganesh"},"content":"        if (argMultimap.getValue(PREFIX_AGE).isPresent()) {","lastModifiedDate":"2021-10-20"},{"lineNumber":57,"author":{"gitId":"pranav-ganesh"},"content":"            editPersonDescriptor.setAge(ParserUtil.parseAge(argMultimap.getValue(PREFIX_AGE).get()));","lastModifiedDate":"2021-10-20"},{"lineNumber":58,"author":{"gitId":"pranav-ganesh"},"content":"        }","lastModifiedDate":"2021-10-20"},{"lineNumber":59,"author":{"gitId":"pranav-ganesh"},"content":"        if (argMultimap.getValue(PREFIX_CALLED).isPresent()) {","lastModifiedDate":"2021-11-04"},{"lineNumber":60,"author":{"gitId":"pranav-ganesh"},"content":"            editPersonDescriptor.setIsCalled(ParserUtil.parseIsCalled(argMultimap.getValue(PREFIX_CALLED).get()));","lastModifiedDate":"2021-11-04"},{"lineNumber":61,"author":{"gitId":"pranav-ganesh"},"content":"        }","lastModifiedDate":"2021-10-22"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_ADDRESS).isPresent()) {","lastModifiedDate":"2021-10-22"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setAddress(ParserUtil.parseAddress(argMultimap.getValue(PREFIX_ADDRESS).get()));","lastModifiedDate":"2021-10-22"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-10-22"},{"lineNumber":65,"author":{"gitId":"pranav-ganesh"},"content":"        if (argMultimap.getValue(PREFIX_INTEREST).isPresent()) {","lastModifiedDate":"2021-10-20"},{"lineNumber":66,"author":{"gitId":"pranav-ganesh"},"content":"            editPersonDescriptor.setInterests(ParserUtil.parseInterests(argMultimap.getAllValues(PREFIX_INTEREST)));","lastModifiedDate":"2021-10-20"},{"lineNumber":67,"author":{"gitId":"pranav-ganesh"},"content":"        }","lastModifiedDate":"2021-10-20"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        if (!editPersonDescriptor.isAnyFieldEdited()) {","lastModifiedDate":"2017-01-26"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            throw new ParseException(EditCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2017-03-11"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        return new EditCommand(index, editPersonDescriptor);","lastModifiedDate":"2017-05-15"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":76,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"loose-bus-change":1,"pranav-ganesh":18,"-":57}},{"path":"src/main/java/seedu/address/logic/parser/FilterCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Kangxun"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-10-09"},{"lineNumber":2,"author":{"gitId":"Kangxun"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":3,"author":{"gitId":"Kangxun"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-09"},{"lineNumber":4,"author":{"gitId":"Kangxun"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-09"},{"lineNumber":5,"author":{"gitId":"Kangxun"},"content":"import static seedu.address.logic.comparators.PersonComparator.MESSAGE_INVALID_CATEGORY;","lastModifiedDate":"2021-10-25"},{"lineNumber":6,"author":{"gitId":"Kangxun"},"content":"import static seedu.address.logic.comparators.PersonComparator.VALIDATION_REGEX;","lastModifiedDate":"2021-10-25"},{"lineNumber":7,"author":{"gitId":"Kangxun"},"content":"import static seedu.address.logic.parser.CliSyntax.EMPTY_PREFIX;","lastModifiedDate":"2021-10-09"},{"lineNumber":8,"author":{"gitId":"Kangxun"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":9,"author":{"gitId":"Kangxun"},"content":"import java.util.List;","lastModifiedDate":"2021-10-09"},{"lineNumber":10,"author":{"gitId":"Kangxun"},"content":"import java.util.Locale;","lastModifiedDate":"2021-10-25"},{"lineNumber":11,"author":{"gitId":"Kangxun"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":12,"author":{"gitId":"Kangxun"},"content":"import seedu.address.logic.commands.FilterCommand;","lastModifiedDate":"2021-10-09"},{"lineNumber":13,"author":{"gitId":"Kangxun"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-09"},{"lineNumber":14,"author":{"gitId":"Kangxun"},"content":"import seedu.address.model.category.Category;","lastModifiedDate":"2021-10-09"},{"lineNumber":15,"author":{"gitId":"Kangxun"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":16,"author":{"gitId":"Kangxun"},"content":"/**","lastModifiedDate":"2021-10-09"},{"lineNumber":17,"author":{"gitId":"Kangxun"},"content":" * Parses input arguments and creates a new {@code FilterCommand} object","lastModifiedDate":"2021-10-09"},{"lineNumber":18,"author":{"gitId":"Kangxun"},"content":" */","lastModifiedDate":"2021-10-09"},{"lineNumber":19,"author":{"gitId":"Kangxun"},"content":"public class FilterCommandParser implements Parser\u003cFilterCommand\u003e {","lastModifiedDate":"2021-10-09"},{"lineNumber":20,"author":{"gitId":"Kangxun"},"content":"    private Category category;","lastModifiedDate":"2021-11-07"},{"lineNumber":21,"author":{"gitId":"Kangxun"},"content":"    private Integer count;","lastModifiedDate":"2021-11-07"},{"lineNumber":22,"author":{"gitId":"Kangxun"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":23,"author":{"gitId":"Kangxun"},"content":"    /**","lastModifiedDate":"2021-10-09"},{"lineNumber":24,"author":{"gitId":"Kangxun"},"content":"     * Parses the given {@code String} of arguments in the context of the {@code FilterCommand}","lastModifiedDate":"2021-10-09"},{"lineNumber":25,"author":{"gitId":"Kangxun"},"content":"     * and returns a {@code FilterCommand} object for execution.","lastModifiedDate":"2021-10-09"},{"lineNumber":26,"author":{"gitId":"Kangxun"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2021-10-09"},{"lineNumber":27,"author":{"gitId":"Kangxun"},"content":"     */","lastModifiedDate":"2021-10-09"},{"lineNumber":28,"author":{"gitId":"Kangxun"},"content":"    public FilterCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-10-09"},{"lineNumber":29,"author":{"gitId":"Kangxun"},"content":"        requireNonNull(args);","lastModifiedDate":"2021-10-09"},{"lineNumber":30,"author":{"gitId":"Kangxun"},"content":"        String trimmedArgs \u003d args.trim();","lastModifiedDate":"2021-10-09"},{"lineNumber":31,"author":{"gitId":"Kangxun"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(trimmedArgs, EMPTY_PREFIX);","lastModifiedDate":"2021-10-09"},{"lineNumber":32,"author":{"gitId":"Kangxun"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":33,"author":{"gitId":"Kangxun"},"content":"        List\u003cString\u003e argList \u003d argMultimap.getAllValues(EMPTY_PREFIX);","lastModifiedDate":"2021-10-09"},{"lineNumber":34,"author":{"gitId":"Kangxun"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":35,"author":{"gitId":"Kangxun"},"content":"        if (!areArgumentsPresent(argList)) {","lastModifiedDate":"2021-10-09"},{"lineNumber":36,"author":{"gitId":"Kangxun"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, FilterCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-09"},{"lineNumber":37,"author":{"gitId":"Kangxun"},"content":"        }","lastModifiedDate":"2021-10-09"},{"lineNumber":38,"author":{"gitId":"Kangxun"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":39,"author":{"gitId":"Kangxun"},"content":"        try {","lastModifiedDate":"2021-11-07"},{"lineNumber":40,"author":{"gitId":"Kangxun"},"content":"            processArguments(argList);","lastModifiedDate":"2021-11-07"},{"lineNumber":41,"author":{"gitId":"Kangxun"},"content":"        } catch (ParseException e) {","lastModifiedDate":"2021-11-07"},{"lineNumber":42,"author":{"gitId":"Kangxun"},"content":"            // for formatting of error output","lastModifiedDate":"2021-11-07"},{"lineNumber":43,"author":{"gitId":"Kangxun"},"content":"            throw new ParseException(String.format(","lastModifiedDate":"2021-11-07"},{"lineNumber":44,"author":{"gitId":"Kangxun"},"content":"                    MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2021-11-07"},{"lineNumber":45,"author":{"gitId":"Kangxun"},"content":"                    e.getMessage() + FilterCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-11-07"},{"lineNumber":46,"author":{"gitId":"Kangxun"},"content":"        }","lastModifiedDate":"2021-11-07"},{"lineNumber":47,"author":{"gitId":"Kangxun"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":48,"author":{"gitId":"Kangxun"},"content":"        return new FilterCommand(category, count);","lastModifiedDate":"2021-11-07"},{"lineNumber":49,"author":{"gitId":"Kangxun"},"content":"    }","lastModifiedDate":"2021-11-07"},{"lineNumber":50,"author":{"gitId":"Kangxun"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":51,"author":{"gitId":"Kangxun"},"content":"    /**","lastModifiedDate":"2021-11-07"},{"lineNumber":52,"author":{"gitId":"Kangxun"},"content":"     * Parses the arguments in the given {@code List\u003cString\u003e} for filter.","lastModifiedDate":"2021-11-07"},{"lineNumber":53,"author":{"gitId":"Kangxun"},"content":"     * @throws ParseException if the category or count is invalid.","lastModifiedDate":"2021-11-07"},{"lineNumber":54,"author":{"gitId":"Kangxun"},"content":"     */","lastModifiedDate":"2021-11-07"},{"lineNumber":55,"author":{"gitId":"Kangxun"},"content":"    private void processArguments(List\u003cString\u003e argList) throws ParseException {","lastModifiedDate":"2021-11-07"},{"lineNumber":56,"author":{"gitId":"Kangxun"},"content":"        if (moreThanOneArgumentPresent(argList)) {","lastModifiedDate":"2021-10-25"},{"lineNumber":57,"author":{"gitId":"Kangxun"},"content":"            // category and count arguments are specified","lastModifiedDate":"2021-10-09"},{"lineNumber":58,"author":{"gitId":"Kangxun"},"content":"            String lastArgument \u003d extractLastArgument(argList);","lastModifiedDate":"2021-10-25"},{"lineNumber":59,"author":{"gitId":"Kangxun"},"content":"            String secondLastArgument \u003d extractSecondLastArgument(argList);","lastModifiedDate":"2021-10-25"},{"lineNumber":60,"author":{"gitId":"Kangxun"},"content":"            try {","lastModifiedDate":"2021-10-25"},{"lineNumber":61,"author":{"gitId":"Kangxun"},"content":"                // Try to parse last argument as integer","lastModifiedDate":"2021-10-25"},{"lineNumber":62,"author":{"gitId":"Kangxun"},"content":"                Integer.parseInt(lastArgument);","lastModifiedDate":"2021-10-25"},{"lineNumber":63,"author":{"gitId":"Kangxun"},"content":"                count \u003d ParserUtil.parseInteger(lastArgument);","lastModifiedDate":"2021-10-25"},{"lineNumber":64,"author":{"gitId":"Kangxun"},"content":"                category \u003d checkAndParseCategory(secondLastArgument);","lastModifiedDate":"2021-10-25"},{"lineNumber":65,"author":{"gitId":"Kangxun"},"content":"            } catch (NumberFormatException e) {","lastModifiedDate":"2021-10-25"},{"lineNumber":66,"author":{"gitId":"Kangxun"},"content":"                // Parse last argument as category","lastModifiedDate":"2021-10-25"},{"lineNumber":67,"author":{"gitId":"Kangxun"},"content":"                checkIfNumberTooLarge(lastArgument);","lastModifiedDate":"2021-11-02"},{"lineNumber":68,"author":{"gitId":"Kangxun"},"content":"                category \u003d checkAndParseCategory(lastArgument);","lastModifiedDate":"2021-10-25"},{"lineNumber":69,"author":{"gitId":"Kangxun"},"content":"                count \u003d Integer.MAX_VALUE;","lastModifiedDate":"2021-10-25"},{"lineNumber":70,"author":{"gitId":"Kangxun"},"content":"            }","lastModifiedDate":"2021-10-25"},{"lineNumber":71,"author":{"gitId":"Kangxun"},"content":"        } else {","lastModifiedDate":"2021-10-09"},{"lineNumber":72,"author":{"gitId":"Kangxun"},"content":"            // only category argument specified","lastModifiedDate":"2021-10-09"},{"lineNumber":73,"author":{"gitId":"Kangxun"},"content":"            String lastArgument \u003d extractLastArgument(argList);","lastModifiedDate":"2021-10-25"},{"lineNumber":74,"author":{"gitId":"Kangxun"},"content":"            category \u003d checkAndParseCategory(lastArgument);","lastModifiedDate":"2021-10-25"},{"lineNumber":75,"author":{"gitId":"Kangxun"},"content":"            count \u003d Integer.MAX_VALUE;","lastModifiedDate":"2021-10-09"},{"lineNumber":76,"author":{"gitId":"Kangxun"},"content":"        }","lastModifiedDate":"2021-10-09"},{"lineNumber":77,"author":{"gitId":"Kangxun"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":78,"author":{"gitId":"Kangxun"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":79,"author":{"gitId":"Kangxun"},"content":"    /**","lastModifiedDate":"2021-10-09"},{"lineNumber":80,"author":{"gitId":"Kangxun"},"content":"     * Returns true if arguments are present in the given","lastModifiedDate":"2021-10-25"},{"lineNumber":81,"author":{"gitId":"Kangxun"},"content":"     * {@code List\u003cString\u003e}.","lastModifiedDate":"2021-10-09"},{"lineNumber":82,"author":{"gitId":"Kangxun"},"content":"     */","lastModifiedDate":"2021-10-09"},{"lineNumber":83,"author":{"gitId":"Kangxun"},"content":"    private boolean areArgumentsPresent(List\u003cString\u003e argList) {","lastModifiedDate":"2021-11-07"},{"lineNumber":84,"author":{"gitId":"Kangxun"},"content":"        if (argList \u003d\u003d null) {","lastModifiedDate":"2021-10-09"},{"lineNumber":85,"author":{"gitId":"Kangxun"},"content":"            return false;","lastModifiedDate":"2021-10-09"},{"lineNumber":86,"author":{"gitId":"Kangxun"},"content":"        }","lastModifiedDate":"2021-10-09"},{"lineNumber":87,"author":{"gitId":"Kangxun"},"content":"        if (argList.size() \u003d\u003d 1) {","lastModifiedDate":"2021-11-06"},{"lineNumber":88,"author":{"gitId":"Kangxun"},"content":"            if (argList.get(0).equals(\"\")) {","lastModifiedDate":"2021-11-06"},{"lineNumber":89,"author":{"gitId":"Kangxun"},"content":"                return false;","lastModifiedDate":"2021-11-06"},{"lineNumber":90,"author":{"gitId":"Kangxun"},"content":"            }","lastModifiedDate":"2021-11-06"},{"lineNumber":91,"author":{"gitId":"Kangxun"},"content":"        }","lastModifiedDate":"2021-11-06"},{"lineNumber":92,"author":{"gitId":"Kangxun"},"content":"        return argList.size() \u003e\u003d 1;","lastModifiedDate":"2021-10-25"},{"lineNumber":93,"author":{"gitId":"Kangxun"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":94,"author":{"gitId":"Kangxun"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":95,"author":{"gitId":"Kangxun"},"content":"    /**","lastModifiedDate":"2021-10-09"},{"lineNumber":96,"author":{"gitId":"Kangxun"},"content":"     * Returns true if there are more than one argument present in the given","lastModifiedDate":"2021-10-25"},{"lineNumber":97,"author":{"gitId":"Kangxun"},"content":"     * {@code List\u003cString\u003e}.","lastModifiedDate":"2021-10-09"},{"lineNumber":98,"author":{"gitId":"Kangxun"},"content":"     */","lastModifiedDate":"2021-10-09"},{"lineNumber":99,"author":{"gitId":"Kangxun"},"content":"    private boolean moreThanOneArgumentPresent(List\u003cString\u003e argList) {","lastModifiedDate":"2021-11-07"},{"lineNumber":100,"author":{"gitId":"Kangxun"},"content":"        if (argList \u003d\u003d null) {","lastModifiedDate":"2021-10-09"},{"lineNumber":101,"author":{"gitId":"Kangxun"},"content":"            return false;","lastModifiedDate":"2021-10-09"},{"lineNumber":102,"author":{"gitId":"Kangxun"},"content":"        }","lastModifiedDate":"2021-10-09"},{"lineNumber":103,"author":{"gitId":"Kangxun"},"content":"        return argList.size() \u003e\u003d 2;","lastModifiedDate":"2021-10-25"},{"lineNumber":104,"author":{"gitId":"Kangxun"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":105,"author":{"gitId":"Kangxun"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":106,"author":{"gitId":"Kangxun"},"content":"    /**","lastModifiedDate":"2021-10-09"},{"lineNumber":107,"author":{"gitId":"Kangxun"},"content":"     * Extracts the last {@code argument} from {@code List\u003cString\u003e argList}.","lastModifiedDate":"2021-10-25"},{"lineNumber":108,"author":{"gitId":"Kangxun"},"content":"     */","lastModifiedDate":"2021-10-09"},{"lineNumber":109,"author":{"gitId":"Kangxun"},"content":"    private String extractLastArgument(List\u003cString\u003e argList) {","lastModifiedDate":"2021-10-25"},{"lineNumber":110,"author":{"gitId":"Kangxun"},"content":"        String last \u003d argList.get(argList.size() - 1); // category is the first argument","lastModifiedDate":"2021-10-25"},{"lineNumber":111,"author":{"gitId":"Kangxun"},"content":"        return last;","lastModifiedDate":"2021-10-25"},{"lineNumber":112,"author":{"gitId":"Kangxun"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":113,"author":{"gitId":"Kangxun"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":114,"author":{"gitId":"Kangxun"},"content":"    /**","lastModifiedDate":"2021-10-09"},{"lineNumber":115,"author":{"gitId":"Kangxun"},"content":"     * Extracts the second last {@code argument} from {@code List\u003cString\u003e argList}.","lastModifiedDate":"2021-10-25"},{"lineNumber":116,"author":{"gitId":"Kangxun"},"content":"     */","lastModifiedDate":"2021-10-09"},{"lineNumber":117,"author":{"gitId":"Kangxun"},"content":"    private String extractSecondLastArgument(List\u003cString\u003e argList) {","lastModifiedDate":"2021-10-25"},{"lineNumber":118,"author":{"gitId":"Kangxun"},"content":"        String secondLast \u003d argList.get(argList.size() - 2); // category is the first argument","lastModifiedDate":"2021-10-25"},{"lineNumber":119,"author":{"gitId":"Kangxun"},"content":"        return secondLast;","lastModifiedDate":"2021-10-25"},{"lineNumber":120,"author":{"gitId":"Kangxun"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":121,"author":{"gitId":"Kangxun"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":122,"author":{"gitId":"Kangxun"},"content":"    /**","lastModifiedDate":"2021-10-25"},{"lineNumber":123,"author":{"gitId":"Kangxun"},"content":"     * Checks if the {@code argument} is a valid {@code Category} for Comparator.","lastModifiedDate":"2021-10-25"},{"lineNumber":124,"author":{"gitId":"Kangxun"},"content":"     */","lastModifiedDate":"2021-10-25"},{"lineNumber":125,"author":{"gitId":"Kangxun"},"content":"    private boolean isValidComparatorCategory(String arg) {","lastModifiedDate":"2021-10-25"},{"lineNumber":126,"author":{"gitId":"Kangxun"},"content":"        requireNonNull(arg);","lastModifiedDate":"2021-10-25"},{"lineNumber":127,"author":{"gitId":"Kangxun"},"content":"        String trimmedArg \u003d arg.trim();","lastModifiedDate":"2021-10-25"},{"lineNumber":128,"author":{"gitId":"Kangxun"},"content":"        String argUpperCase \u003d trimmedArg.toUpperCase(Locale.ROOT);","lastModifiedDate":"2021-10-25"},{"lineNumber":129,"author":{"gitId":"Kangxun"},"content":"        return argUpperCase.matches(VALIDATION_REGEX);","lastModifiedDate":"2021-10-25"},{"lineNumber":130,"author":{"gitId":"Kangxun"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":131,"author":{"gitId":"Kangxun"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":132,"author":{"gitId":"Kangxun"},"content":"    /**","lastModifiedDate":"2021-10-25"},{"lineNumber":133,"author":{"gitId":"Kangxun"},"content":"     * Returns Category if the {@code argument} is a valid {@code Category} for Comparator.","lastModifiedDate":"2021-10-25"},{"lineNumber":134,"author":{"gitId":"Kangxun"},"content":"     * @throws ParseException if the argument is not a valid category for Comparator.","lastModifiedDate":"2021-10-25"},{"lineNumber":135,"author":{"gitId":"Kangxun"},"content":"     */","lastModifiedDate":"2021-10-25"},{"lineNumber":136,"author":{"gitId":"Kangxun"},"content":"    private Category checkAndParseCategory(String arg) throws ParseException {","lastModifiedDate":"2021-10-25"},{"lineNumber":137,"author":{"gitId":"Kangxun"},"content":"        if (isValidComparatorCategory(arg)) {","lastModifiedDate":"2021-10-25"},{"lineNumber":138,"author":{"gitId":"Kangxun"},"content":"            return ParserUtil.parseCategory(arg);","lastModifiedDate":"2021-10-25"},{"lineNumber":139,"author":{"gitId":"Kangxun"},"content":"        } else {","lastModifiedDate":"2021-10-25"},{"lineNumber":140,"author":{"gitId":"Kangxun"},"content":"            throw new ParseException(MESSAGE_INVALID_CATEGORY);","lastModifiedDate":"2021-10-25"},{"lineNumber":141,"author":{"gitId":"Kangxun"},"content":"        }","lastModifiedDate":"2021-10-25"},{"lineNumber":142,"author":{"gitId":"Kangxun"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":143,"author":{"gitId":"Kangxun"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":144,"author":{"gitId":"Kangxun"},"content":"    /**","lastModifiedDate":"2021-11-02"},{"lineNumber":145,"author":{"gitId":"Kangxun"},"content":"     * Checks if the {@code argument} is a number larger than {@code Integer.MAX_VALUE}.","lastModifiedDate":"2021-11-02"},{"lineNumber":146,"author":{"gitId":"Kangxun"},"content":"     * @throws ParseException if {@code argument} is a number is larger than {@code Integer.MAX_VALUE}","lastModifiedDate":"2021-11-02"},{"lineNumber":147,"author":{"gitId":"Kangxun"},"content":"     */","lastModifiedDate":"2021-11-02"},{"lineNumber":148,"author":{"gitId":"Kangxun"},"content":"    private void checkIfNumberTooLarge(String arg) throws ParseException {","lastModifiedDate":"2021-11-02"},{"lineNumber":149,"author":{"gitId":"Kangxun"},"content":"        try {","lastModifiedDate":"2021-11-02"},{"lineNumber":150,"author":{"gitId":"Kangxun"},"content":"            for (char c : arg.toCharArray()) {","lastModifiedDate":"2021-11-02"},{"lineNumber":151,"author":{"gitId":"Kangxun"},"content":"                Integer.parseInt(String.valueOf(c));","lastModifiedDate":"2021-11-02"},{"lineNumber":152,"author":{"gitId":"Kangxun"},"content":"            }","lastModifiedDate":"2021-11-02"},{"lineNumber":153,"author":{"gitId":"Kangxun"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2021-11-02"},{"lineNumber":154,"author":{"gitId":"Kangxun"},"content":"            return;","lastModifiedDate":"2021-11-02"},{"lineNumber":155,"author":{"gitId":"Kangxun"},"content":"        }","lastModifiedDate":"2021-11-02"},{"lineNumber":156,"author":{"gitId":"Kangxun"},"content":"        ParserUtil.parseInteger(arg);","lastModifiedDate":"2021-11-02"},{"lineNumber":157,"author":{"gitId":"Kangxun"},"content":"    }","lastModifiedDate":"2021-11-02"},{"lineNumber":158,"author":{"gitId":"Kangxun"},"content":"}","lastModifiedDate":"2021-10-09"}],"authorContributionMap":{"Kangxun":158}},{"path":"src/main/java/seedu/address/logic/parser/FindAllCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"houtenteo"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-10-26"},{"lineNumber":2,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":3,"author":{"gitId":"houtenteo"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-26"},{"lineNumber":4,"author":{"gitId":"houtenteo"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2021-10-26"},{"lineNumber":5,"author":{"gitId":"houtenteo"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_AGE;","lastModifiedDate":"2021-10-26"},{"lineNumber":6,"author":{"gitId":"pranav-ganesh"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_CALLED;","lastModifiedDate":"2021-11-04"},{"lineNumber":7,"author":{"gitId":"houtenteo"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2021-10-26"},{"lineNumber":8,"author":{"gitId":"houtenteo"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_GENDER;","lastModifiedDate":"2021-10-26"},{"lineNumber":9,"author":{"gitId":"houtenteo"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_INTEREST;","lastModifiedDate":"2021-10-26"},{"lineNumber":10,"author":{"gitId":"houtenteo"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2021-10-26"},{"lineNumber":11,"author":{"gitId":"houtenteo"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2021-10-26"},{"lineNumber":12,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":13,"author":{"gitId":"houtenteo"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-26"},{"lineNumber":14,"author":{"gitId":"houtenteo"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2021-10-26"},{"lineNumber":15,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":16,"author":{"gitId":"houtenteo"},"content":"import seedu.address.logic.commands.FindAllCommand;","lastModifiedDate":"2021-10-27"},{"lineNumber":17,"author":{"gitId":"houtenteo"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-26"},{"lineNumber":18,"author":{"gitId":"houtenteo"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2021-10-26"},{"lineNumber":19,"author":{"gitId":"houtenteo"},"content":"import seedu.address.model.person.predicates.AddressContainsKeywordsPredicate;","lastModifiedDate":"2021-10-26"},{"lineNumber":20,"author":{"gitId":"houtenteo"},"content":"import seedu.address.model.person.predicates.AgeContainsValuePredicate;","lastModifiedDate":"2021-10-26"},{"lineNumber":21,"author":{"gitId":"pranav-ganesh"},"content":"import seedu.address.model.person.predicates.CalledPredicate;","lastModifiedDate":"2021-11-04"},{"lineNumber":22,"author":{"gitId":"houtenteo"},"content":"import seedu.address.model.person.predicates.CombinedPredicate;","lastModifiedDate":"2021-10-26"},{"lineNumber":23,"author":{"gitId":"houtenteo"},"content":"import seedu.address.model.person.predicates.EmailContainsKeywordsPredicate;","lastModifiedDate":"2021-10-26"},{"lineNumber":24,"author":{"gitId":"houtenteo"},"content":"import seedu.address.model.person.predicates.GenderContainsKeywordPredicate;","lastModifiedDate":"2021-10-26"},{"lineNumber":25,"author":{"gitId":"houtenteo"},"content":"import seedu.address.model.person.predicates.InterestContainsKeywordsPredicate;","lastModifiedDate":"2021-10-26"},{"lineNumber":26,"author":{"gitId":"houtenteo"},"content":"import seedu.address.model.person.predicates.NameContainsKeywordsPredicate;","lastModifiedDate":"2021-10-26"},{"lineNumber":27,"author":{"gitId":"houtenteo"},"content":"import seedu.address.model.person.predicates.PhoneContainsNumberPredicate;","lastModifiedDate":"2021-10-26"},{"lineNumber":28,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":29,"author":{"gitId":"houtenteo"},"content":"/**","lastModifiedDate":"2021-10-26"},{"lineNumber":30,"author":{"gitId":"houtenteo"},"content":" * Parses input arguments and creates a new FindCommand object","lastModifiedDate":"2021-10-26"},{"lineNumber":31,"author":{"gitId":"houtenteo"},"content":" */","lastModifiedDate":"2021-10-26"},{"lineNumber":32,"author":{"gitId":"houtenteo"},"content":"public class FindAllCommandParser implements Parser\u003cFindAllCommand\u003e {","lastModifiedDate":"2021-10-27"},{"lineNumber":33,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":34,"author":{"gitId":"houtenteo"},"content":"    public static final String EMPTY_FIELD_MESSAGE \u003d \"Fields provided can be anything but cannot be an empty string \\n\"","lastModifiedDate":"2021-10-27"},{"lineNumber":35,"author":{"gitId":"houtenteo"},"content":"            + \"Found one violation at: \";","lastModifiedDate":"2021-10-27"},{"lineNumber":36,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":37,"author":{"gitId":"houtenteo"},"content":"    /**","lastModifiedDate":"2021-10-26"},{"lineNumber":38,"author":{"gitId":"houtenteo"},"content":"     * Parses the given {@code String} of arguments in the context of the FindCommand","lastModifiedDate":"2021-10-26"},{"lineNumber":39,"author":{"gitId":"houtenteo"},"content":"     * and returns a FindCommand object for execution.","lastModifiedDate":"2021-10-26"},{"lineNumber":40,"author":{"gitId":"houtenteo"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2021-10-26"},{"lineNumber":41,"author":{"gitId":"houtenteo"},"content":"     */","lastModifiedDate":"2021-10-26"},{"lineNumber":42,"author":{"gitId":"houtenteo"},"content":"    public FindAllCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-10-27"},{"lineNumber":43,"author":{"gitId":"houtenteo"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2021-10-26"},{"lineNumber":44,"author":{"gitId":"pranav-ganesh"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_CALLED,","lastModifiedDate":"2021-11-04"},{"lineNumber":45,"author":{"gitId":"houtenteo"},"content":"                        PREFIX_ADDRESS, PREFIX_GENDER, PREFIX_AGE, PREFIX_INTEREST);","lastModifiedDate":"2021-10-26"},{"lineNumber":46,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":47,"author":{"gitId":"houtenteo"},"content":"        if (!ParserUtil.areAnyPrefixesPresent(argMultimap) || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2021-11-02"},{"lineNumber":48,"author":{"gitId":"houtenteo"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindAllCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-11-01"},{"lineNumber":49,"author":{"gitId":"houtenteo"},"content":"        }","lastModifiedDate":"2021-10-26"},{"lineNumber":50,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":51,"author":{"gitId":"houtenteo"},"content":"        String nameKeywords \u003d argMultimap.getValue(PREFIX_NAME).orElse(null);","lastModifiedDate":"2021-10-26"},{"lineNumber":52,"author":{"gitId":"houtenteo"},"content":"        String phoneNumbers \u003d argMultimap.getValue(PREFIX_PHONE).orElse(null);","lastModifiedDate":"2021-10-26"},{"lineNumber":53,"author":{"gitId":"houtenteo"},"content":"        String emailKeywords \u003d argMultimap.getValue(PREFIX_EMAIL).orElse(null);","lastModifiedDate":"2021-10-26"},{"lineNumber":54,"author":{"gitId":"pranav-ganesh"},"content":"        String calledKeywords \u003d argMultimap.getValue(PREFIX_CALLED).orElse(null);","lastModifiedDate":"2021-11-04"},{"lineNumber":55,"author":{"gitId":"houtenteo"},"content":"        String addressKeywords \u003d argMultimap.getValue(PREFIX_ADDRESS).orElse(null);","lastModifiedDate":"2021-10-26"},{"lineNumber":56,"author":{"gitId":"houtenteo"},"content":"        String genderKeywords \u003d argMultimap.getValue(PREFIX_GENDER).orElse(null);","lastModifiedDate":"2021-10-26"},{"lineNumber":57,"author":{"gitId":"houtenteo"},"content":"        String ageValues \u003d argMultimap.getValue(PREFIX_AGE).orElse(null);","lastModifiedDate":"2021-10-26"},{"lineNumber":58,"author":{"gitId":"houtenteo"},"content":"        String interestKeywords \u003d argMultimap.getValue(PREFIX_INTEREST).orElse(null);","lastModifiedDate":"2021-10-26"},{"lineNumber":59,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":60,"author":{"gitId":"houtenteo"},"content":"        ArrayList\u003cPredicate\u003cPerson\u003e\u003e predicates \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-26"},{"lineNumber":61,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":62,"author":{"gitId":"houtenteo"},"content":"        if (nameKeywords !\u003d null) {","lastModifiedDate":"2021-10-26"},{"lineNumber":63,"author":{"gitId":"houtenteo"},"content":"            ParserUtil.checkEmptyString(nameKeywords, PREFIX_NAME);","lastModifiedDate":"2021-11-01"},{"lineNumber":64,"author":{"gitId":"houtenteo"},"content":"            NameContainsKeywordsPredicate namePredicate \u003d ParserUtil.getNamePredicate(nameKeywords, true);","lastModifiedDate":"2021-11-01"},{"lineNumber":65,"author":{"gitId":"houtenteo"},"content":"            predicates.add(namePredicate);","lastModifiedDate":"2021-10-26"},{"lineNumber":66,"author":{"gitId":"houtenteo"},"content":"        }","lastModifiedDate":"2021-10-26"},{"lineNumber":67,"author":{"gitId":"houtenteo"},"content":"        if (phoneNumbers !\u003d null) {","lastModifiedDate":"2021-10-26"},{"lineNumber":68,"author":{"gitId":"houtenteo"},"content":"            ParserUtil.checkEmptyString(phoneNumbers, PREFIX_PHONE);","lastModifiedDate":"2021-11-01"},{"lineNumber":69,"author":{"gitId":"houtenteo"},"content":"            PhoneContainsNumberPredicate phonePredicate \u003d ParserUtil.getPhonePredicate(phoneNumbers, true);","lastModifiedDate":"2021-11-01"},{"lineNumber":70,"author":{"gitId":"houtenteo"},"content":"            predicates.add(phonePredicate);","lastModifiedDate":"2021-10-26"},{"lineNumber":71,"author":{"gitId":"houtenteo"},"content":"        }","lastModifiedDate":"2021-10-26"},{"lineNumber":72,"author":{"gitId":"houtenteo"},"content":"        if (emailKeywords !\u003d null) {","lastModifiedDate":"2021-10-26"},{"lineNumber":73,"author":{"gitId":"houtenteo"},"content":"            ParserUtil.checkEmptyString(emailKeywords, PREFIX_EMAIL);","lastModifiedDate":"2021-11-01"},{"lineNumber":74,"author":{"gitId":"houtenteo"},"content":"            EmailContainsKeywordsPredicate emailPredicate \u003d ParserUtil.getEmailPredicate(emailKeywords, true);","lastModifiedDate":"2021-11-01"},{"lineNumber":75,"author":{"gitId":"houtenteo"},"content":"            predicates.add(emailPredicate);","lastModifiedDate":"2021-10-26"},{"lineNumber":76,"author":{"gitId":"houtenteo"},"content":"        }","lastModifiedDate":"2021-10-26"},{"lineNumber":77,"author":{"gitId":"pranav-ganesh"},"content":"        if (calledKeywords !\u003d null) {","lastModifiedDate":"2021-11-04"},{"lineNumber":78,"author":{"gitId":"pranav-ganesh"},"content":"            ParserUtil.checkEmptyString(calledKeywords, PREFIX_CALLED);","lastModifiedDate":"2021-11-04"},{"lineNumber":79,"author":{"gitId":"pranav-ganesh"},"content":"            ParserUtil.checkTrueOrFalse(calledKeywords);","lastModifiedDate":"2021-11-04"},{"lineNumber":80,"author":{"gitId":"pranav-ganesh"},"content":"            CalledPredicate calledPredicate \u003d ParserUtil.getCalledPredicate(calledKeywords, true);","lastModifiedDate":"2021-11-04"},{"lineNumber":81,"author":{"gitId":"pranav-ganesh"},"content":"            predicates.add(calledPredicate);","lastModifiedDate":"2021-11-04"},{"lineNumber":82,"author":{"gitId":"houtenteo"},"content":"        }","lastModifiedDate":"2021-10-26"},{"lineNumber":83,"author":{"gitId":"houtenteo"},"content":"        if (addressKeywords !\u003d null) {","lastModifiedDate":"2021-10-26"},{"lineNumber":84,"author":{"gitId":"houtenteo"},"content":"            ParserUtil.checkEmptyString(addressKeywords, PREFIX_ADDRESS);","lastModifiedDate":"2021-11-01"},{"lineNumber":85,"author":{"gitId":"houtenteo"},"content":"            AddressContainsKeywordsPredicate addressPredicate \u003d ParserUtil.getAddressPredicate(addressKeywords, true);","lastModifiedDate":"2021-11-01"},{"lineNumber":86,"author":{"gitId":"houtenteo"},"content":"            predicates.add(addressPredicate);","lastModifiedDate":"2021-10-26"},{"lineNumber":87,"author":{"gitId":"houtenteo"},"content":"        }","lastModifiedDate":"2021-10-26"},{"lineNumber":88,"author":{"gitId":"houtenteo"},"content":"        if (genderKeywords !\u003d null) {","lastModifiedDate":"2021-10-26"},{"lineNumber":89,"author":{"gitId":"houtenteo"},"content":"            ParserUtil.checkEmptyString(genderKeywords, PREFIX_GENDER);","lastModifiedDate":"2021-11-01"},{"lineNumber":90,"author":{"gitId":"houtenteo"},"content":"            ParserUtil.checkMaleOrFemale(genderKeywords);","lastModifiedDate":"2021-11-01"},{"lineNumber":91,"author":{"gitId":"houtenteo"},"content":"            GenderContainsKeywordPredicate genderPredicate \u003d ParserUtil.getGenderPredicate(genderKeywords, true);","lastModifiedDate":"2021-11-01"},{"lineNumber":92,"author":{"gitId":"houtenteo"},"content":"            predicates.add(genderPredicate);","lastModifiedDate":"2021-10-26"},{"lineNumber":93,"author":{"gitId":"houtenteo"},"content":"        }","lastModifiedDate":"2021-10-26"},{"lineNumber":94,"author":{"gitId":"houtenteo"},"content":"        if (ageValues !\u003d null) {","lastModifiedDate":"2021-10-26"},{"lineNumber":95,"author":{"gitId":"houtenteo"},"content":"            ParserUtil.checkEmptyString(ageValues, PREFIX_AGE);","lastModifiedDate":"2021-11-01"},{"lineNumber":96,"author":{"gitId":"houtenteo"},"content":"            AgeContainsValuePredicate agePredicate \u003d ParserUtil.getAgePredicate(ageValues, true);","lastModifiedDate":"2021-11-01"},{"lineNumber":97,"author":{"gitId":"houtenteo"},"content":"            predicates.add(agePredicate);","lastModifiedDate":"2021-10-26"},{"lineNumber":98,"author":{"gitId":"houtenteo"},"content":"        }","lastModifiedDate":"2021-10-26"},{"lineNumber":99,"author":{"gitId":"houtenteo"},"content":"        if (interestKeywords !\u003d null) {","lastModifiedDate":"2021-10-26"},{"lineNumber":100,"author":{"gitId":"houtenteo"},"content":"            ParserUtil.checkEmptyString(interestKeywords, PREFIX_INTEREST);","lastModifiedDate":"2021-11-01"},{"lineNumber":101,"author":{"gitId":"houtenteo"},"content":"            InterestContainsKeywordsPredicate interestPredicate \u003d ParserUtil.getInterestPredicate(","lastModifiedDate":"2021-11-01"},{"lineNumber":102,"author":{"gitId":"houtenteo"},"content":"                    interestKeywords, true","lastModifiedDate":"2021-11-01"},{"lineNumber":103,"author":{"gitId":"houtenteo"},"content":"            );","lastModifiedDate":"2021-11-01"},{"lineNumber":104,"author":{"gitId":"houtenteo"},"content":"            predicates.add(interestPredicate);","lastModifiedDate":"2021-10-26"},{"lineNumber":105,"author":{"gitId":"houtenteo"},"content":"        }","lastModifiedDate":"2021-10-26"},{"lineNumber":106,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":107,"author":{"gitId":"houtenteo"},"content":"        CombinedPredicate combinedPredicate \u003d new CombinedPredicate(predicates, true);","lastModifiedDate":"2021-10-26"},{"lineNumber":108,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":109,"author":{"gitId":"houtenteo"},"content":"        return new FindAllCommand(combinedPredicate);","lastModifiedDate":"2021-10-27"},{"lineNumber":110,"author":{"gitId":"houtenteo"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":111,"author":{"gitId":"houtenteo"},"content":"}","lastModifiedDate":"2021-10-26"}],"authorContributionMap":{"houtenteo":102,"pranav-ganesh":9}},{"path":"src/main/java/seedu/address/logic/parser/FindAnyCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-01-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-01-26"},{"lineNumber":4,"author":{"gitId":"houtenteo"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2021-10-25"},{"lineNumber":5,"author":{"gitId":"houtenteo"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_AGE;","lastModifiedDate":"2021-10-25"},{"lineNumber":6,"author":{"gitId":"pranav-ganesh"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_CALLED;","lastModifiedDate":"2021-11-04"},{"lineNumber":7,"author":{"gitId":"houtenteo"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2021-10-25"},{"lineNumber":8,"author":{"gitId":"houtenteo"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_GENDER;","lastModifiedDate":"2021-10-25"},{"lineNumber":9,"author":{"gitId":"houtenteo"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_INTEREST;","lastModifiedDate":"2021-10-25"},{"lineNumber":10,"author":{"gitId":"houtenteo"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2021-10-25"},{"lineNumber":11,"author":{"gitId":"houtenteo"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2021-10-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":13,"author":{"gitId":"houtenteo"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-26"},{"lineNumber":14,"author":{"gitId":"houtenteo"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2021-10-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":16,"author":{"gitId":"houtenteo"},"content":"import seedu.address.logic.commands.FindAnyCommand;","lastModifiedDate":"2021-10-28"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":18,"author":{"gitId":"houtenteo"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2021-10-25"},{"lineNumber":19,"author":{"gitId":"houtenteo"},"content":"import seedu.address.model.person.predicates.AddressContainsKeywordsPredicate;","lastModifiedDate":"2021-10-25"},{"lineNumber":20,"author":{"gitId":"houtenteo"},"content":"import seedu.address.model.person.predicates.AgeContainsValuePredicate;","lastModifiedDate":"2021-10-25"},{"lineNumber":21,"author":{"gitId":"pranav-ganesh"},"content":"import seedu.address.model.person.predicates.CalledPredicate;","lastModifiedDate":"2021-11-04"},{"lineNumber":22,"author":{"gitId":"houtenteo"},"content":"import seedu.address.model.person.predicates.CombinedPredicate;","lastModifiedDate":"2021-10-26"},{"lineNumber":23,"author":{"gitId":"houtenteo"},"content":"import seedu.address.model.person.predicates.EmailContainsKeywordsPredicate;","lastModifiedDate":"2021-10-25"},{"lineNumber":24,"author":{"gitId":"houtenteo"},"content":"import seedu.address.model.person.predicates.GenderContainsKeywordPredicate;","lastModifiedDate":"2021-10-25"},{"lineNumber":25,"author":{"gitId":"houtenteo"},"content":"import seedu.address.model.person.predicates.InterestContainsKeywordsPredicate;","lastModifiedDate":"2021-10-25"},{"lineNumber":26,"author":{"gitId":"houtenteo"},"content":"import seedu.address.model.person.predicates.NameContainsKeywordsPredicate;","lastModifiedDate":"2021-10-25"},{"lineNumber":27,"author":{"gitId":"houtenteo"},"content":"import seedu.address.model.person.predicates.PhoneContainsNumberPredicate;","lastModifiedDate":"2021-10-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":30,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new FindCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":31,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":32,"author":{"gitId":"houtenteo"},"content":"public class FindAnyCommandParser implements Parser\u003cFindAnyCommand\u003e {","lastModifiedDate":"2021-10-28"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":34,"author":{"gitId":"houtenteo"},"content":"    public static final String EMPTY_FIELD_MESSAGE \u003d \"Fields provided can be anything but cannot be an empty string \\n\"","lastModifiedDate":"2021-10-27"},{"lineNumber":35,"author":{"gitId":"houtenteo"},"content":"            + \"Found one violation at: \";","lastModifiedDate":"2021-10-27"},{"lineNumber":36,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the FindCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * and returns a FindCommand object for execution.","lastModifiedDate":"2019-05-11"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":42,"author":{"gitId":"houtenteo"},"content":"    public FindAnyCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-10-28"},{"lineNumber":43,"author":{"gitId":"houtenteo"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2021-10-25"},{"lineNumber":44,"author":{"gitId":"pranav-ganesh"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_CALLED,","lastModifiedDate":"2021-11-04"},{"lineNumber":45,"author":{"gitId":"houtenteo"},"content":"                        PREFIX_ADDRESS, PREFIX_GENDER, PREFIX_AGE, PREFIX_INTEREST);","lastModifiedDate":"2021-10-25"},{"lineNumber":46,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":47,"author":{"gitId":"houtenteo"},"content":"        if (!ParserUtil.areAnyPrefixesPresent(argMultimap) || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2021-11-02"},{"lineNumber":48,"author":{"gitId":"houtenteo"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindAnyCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-11-01"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":51,"author":{"gitId":"houtenteo"},"content":"        String nameKeywords \u003d argMultimap.getValue(PREFIX_NAME).orElse(null);","lastModifiedDate":"2021-10-25"},{"lineNumber":52,"author":{"gitId":"houtenteo"},"content":"        String phoneNumbers \u003d argMultimap.getValue(PREFIX_PHONE).orElse(null);","lastModifiedDate":"2021-10-25"},{"lineNumber":53,"author":{"gitId":"houtenteo"},"content":"        String emailKeywords \u003d argMultimap.getValue(PREFIX_EMAIL).orElse(null);","lastModifiedDate":"2021-10-25"},{"lineNumber":54,"author":{"gitId":"pranav-ganesh"},"content":"        String calledKeywords \u003d argMultimap.getValue(PREFIX_CALLED).orElse(null);","lastModifiedDate":"2021-11-04"},{"lineNumber":55,"author":{"gitId":"houtenteo"},"content":"        String addressKeywords \u003d argMultimap.getValue(PREFIX_ADDRESS).orElse(null);","lastModifiedDate":"2021-10-25"},{"lineNumber":56,"author":{"gitId":"houtenteo"},"content":"        String genderKeywords \u003d argMultimap.getValue(PREFIX_GENDER).orElse(null);","lastModifiedDate":"2021-10-25"},{"lineNumber":57,"author":{"gitId":"houtenteo"},"content":"        String ageValues \u003d argMultimap.getValue(PREFIX_AGE).orElse(null);","lastModifiedDate":"2021-10-25"},{"lineNumber":58,"author":{"gitId":"houtenteo"},"content":"        String interestKeywords \u003d argMultimap.getValue(PREFIX_INTEREST).orElse(null);","lastModifiedDate":"2021-10-25"},{"lineNumber":59,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":60,"author":{"gitId":"houtenteo"},"content":"        ArrayList\u003cPredicate\u003cPerson\u003e\u003e predicates \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-26"},{"lineNumber":61,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":62,"author":{"gitId":"houtenteo"},"content":"        if (nameKeywords !\u003d null) {","lastModifiedDate":"2021-10-25"},{"lineNumber":63,"author":{"gitId":"houtenteo"},"content":"            ParserUtil.checkEmptyString(nameKeywords, PREFIX_NAME);","lastModifiedDate":"2021-11-01"},{"lineNumber":64,"author":{"gitId":"houtenteo"},"content":"            NameContainsKeywordsPredicate namePredicate \u003d ParserUtil.getNamePredicate(nameKeywords, false);","lastModifiedDate":"2021-11-01"},{"lineNumber":65,"author":{"gitId":"houtenteo"},"content":"            predicates.add(namePredicate);","lastModifiedDate":"2021-10-26"},{"lineNumber":66,"author":{"gitId":"houtenteo"},"content":"        }","lastModifiedDate":"2021-10-26"},{"lineNumber":67,"author":{"gitId":"houtenteo"},"content":"        if (phoneNumbers !\u003d null) {","lastModifiedDate":"2021-10-26"},{"lineNumber":68,"author":{"gitId":"houtenteo"},"content":"            ParserUtil.checkEmptyString(phoneNumbers, PREFIX_PHONE);","lastModifiedDate":"2021-11-01"},{"lineNumber":69,"author":{"gitId":"houtenteo"},"content":"            PhoneContainsNumberPredicate phonePredicate \u003d ParserUtil.getPhonePredicate(phoneNumbers, false);","lastModifiedDate":"2021-11-01"},{"lineNumber":70,"author":{"gitId":"houtenteo"},"content":"            predicates.add(phonePredicate);","lastModifiedDate":"2021-10-26"},{"lineNumber":71,"author":{"gitId":"houtenteo"},"content":"        }","lastModifiedDate":"2021-10-26"},{"lineNumber":72,"author":{"gitId":"houtenteo"},"content":"        if (emailKeywords !\u003d null) {","lastModifiedDate":"2021-10-26"},{"lineNumber":73,"author":{"gitId":"houtenteo"},"content":"            ParserUtil.checkEmptyString(emailKeywords, PREFIX_EMAIL);","lastModifiedDate":"2021-11-01"},{"lineNumber":74,"author":{"gitId":"houtenteo"},"content":"            EmailContainsKeywordsPredicate emailPredicate \u003d ParserUtil.getEmailPredicate(emailKeywords, false);","lastModifiedDate":"2021-11-01"},{"lineNumber":75,"author":{"gitId":"houtenteo"},"content":"            predicates.add(emailPredicate);","lastModifiedDate":"2021-10-26"},{"lineNumber":76,"author":{"gitId":"houtenteo"},"content":"        }","lastModifiedDate":"2021-10-26"},{"lineNumber":77,"author":{"gitId":"pranav-ganesh"},"content":"        if (calledKeywords !\u003d null) {","lastModifiedDate":"2021-11-04"},{"lineNumber":78,"author":{"gitId":"pranav-ganesh"},"content":"            ParserUtil.checkEmptyString(calledKeywords, PREFIX_CALLED);","lastModifiedDate":"2021-11-04"},{"lineNumber":79,"author":{"gitId":"pranav-ganesh"},"content":"            ParserUtil.checkTrueOrFalse(calledKeywords);","lastModifiedDate":"2021-11-04"},{"lineNumber":80,"author":{"gitId":"pranav-ganesh"},"content":"            CalledPredicate calledPredicate \u003d ParserUtil.getCalledPredicate(calledKeywords, false);","lastModifiedDate":"2021-11-04"},{"lineNumber":81,"author":{"gitId":"pranav-ganesh"},"content":"            predicates.add(calledPredicate);","lastModifiedDate":"2021-11-04"},{"lineNumber":82,"author":{"gitId":"houtenteo"},"content":"        }","lastModifiedDate":"2021-10-26"},{"lineNumber":83,"author":{"gitId":"houtenteo"},"content":"        if (addressKeywords !\u003d null) {","lastModifiedDate":"2021-10-26"},{"lineNumber":84,"author":{"gitId":"houtenteo"},"content":"            ParserUtil.checkEmptyString(addressKeywords, PREFIX_ADDRESS);","lastModifiedDate":"2021-11-01"},{"lineNumber":85,"author":{"gitId":"houtenteo"},"content":"            AddressContainsKeywordsPredicate addressPredicate \u003d ParserUtil.getAddressPredicate(addressKeywords, false);","lastModifiedDate":"2021-11-01"},{"lineNumber":86,"author":{"gitId":"houtenteo"},"content":"            predicates.add(addressPredicate);","lastModifiedDate":"2021-10-26"},{"lineNumber":87,"author":{"gitId":"houtenteo"},"content":"        }","lastModifiedDate":"2021-10-26"},{"lineNumber":88,"author":{"gitId":"houtenteo"},"content":"        if (genderKeywords !\u003d null) {","lastModifiedDate":"2021-10-26"},{"lineNumber":89,"author":{"gitId":"houtenteo"},"content":"            ParserUtil.checkEmptyString(genderKeywords, PREFIX_GENDER);","lastModifiedDate":"2021-11-01"},{"lineNumber":90,"author":{"gitId":"houtenteo"},"content":"            ParserUtil.checkMaleOrFemale(genderKeywords);","lastModifiedDate":"2021-11-01"},{"lineNumber":91,"author":{"gitId":"houtenteo"},"content":"            GenderContainsKeywordPredicate genderPredicate \u003d ParserUtil.getGenderPredicate(genderKeywords, false);","lastModifiedDate":"2021-11-01"},{"lineNumber":92,"author":{"gitId":"houtenteo"},"content":"            predicates.add(genderPredicate);","lastModifiedDate":"2021-10-26"},{"lineNumber":93,"author":{"gitId":"houtenteo"},"content":"        }","lastModifiedDate":"2021-10-26"},{"lineNumber":94,"author":{"gitId":"houtenteo"},"content":"        if (ageValues !\u003d null) {","lastModifiedDate":"2021-10-26"},{"lineNumber":95,"author":{"gitId":"houtenteo"},"content":"            ParserUtil.checkEmptyString(ageValues, PREFIX_AGE);","lastModifiedDate":"2021-11-01"},{"lineNumber":96,"author":{"gitId":"houtenteo"},"content":"            AgeContainsValuePredicate agePredicate \u003d ParserUtil.getAgePredicate(ageValues, false);","lastModifiedDate":"2021-11-01"},{"lineNumber":97,"author":{"gitId":"houtenteo"},"content":"            predicates.add(agePredicate);","lastModifiedDate":"2021-10-26"},{"lineNumber":98,"author":{"gitId":"houtenteo"},"content":"        }","lastModifiedDate":"2021-10-26"},{"lineNumber":99,"author":{"gitId":"houtenteo"},"content":"        if (interestKeywords !\u003d null) {","lastModifiedDate":"2021-10-26"},{"lineNumber":100,"author":{"gitId":"houtenteo"},"content":"            ParserUtil.checkEmptyString(interestKeywords, PREFIX_INTEREST);","lastModifiedDate":"2021-11-01"},{"lineNumber":101,"author":{"gitId":"houtenteo"},"content":"            InterestContainsKeywordsPredicate interestPredicate \u003d ParserUtil.getInterestPredicate(","lastModifiedDate":"2021-11-01"},{"lineNumber":102,"author":{"gitId":"houtenteo"},"content":"                    interestKeywords, false","lastModifiedDate":"2021-11-01"},{"lineNumber":103,"author":{"gitId":"houtenteo"},"content":"            );","lastModifiedDate":"2021-11-01"},{"lineNumber":104,"author":{"gitId":"houtenteo"},"content":"            predicates.add(interestPredicate);","lastModifiedDate":"2021-10-26"},{"lineNumber":105,"author":{"gitId":"houtenteo"},"content":"        }","lastModifiedDate":"2021-10-26"},{"lineNumber":106,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":107,"author":{"gitId":"houtenteo"},"content":"        CombinedPredicate combinedPredicate \u003d new CombinedPredicate(predicates, false);","lastModifiedDate":"2021-10-26"},{"lineNumber":108,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":109,"author":{"gitId":"houtenteo"},"content":"        return new FindAnyCommand(combinedPredicate);","lastModifiedDate":"2021-10-28"},{"lineNumber":110,"author":{"gitId":"houtenteo"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":111,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"houtenteo":83,"pranav-ganesh":9,"-":19}},{"path":"src/main/java/seedu/address/logic/parser/ParserUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"loose-bus-change"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INDEX_NOT_PARSED;","lastModifiedDate":"2021-11-07"},{"lineNumber":5,"author":{"gitId":"houtenteo"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-11-01"},{"lineNumber":6,"author":{"gitId":"houtenteo"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2021-11-01"},{"lineNumber":7,"author":{"gitId":"houtenteo"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_AGE;","lastModifiedDate":"2021-11-01"},{"lineNumber":8,"author":{"gitId":"pranav-ganesh"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_CALLED;","lastModifiedDate":"2021-11-04"},{"lineNumber":9,"author":{"gitId":"houtenteo"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2021-11-01"},{"lineNumber":10,"author":{"gitId":"houtenteo"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_GENDER;","lastModifiedDate":"2021-11-01"},{"lineNumber":11,"author":{"gitId":"houtenteo"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_INTEREST;","lastModifiedDate":"2021-11-01"},{"lineNumber":12,"author":{"gitId":"houtenteo"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2021-11-01"},{"lineNumber":13,"author":{"gitId":"houtenteo"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2021-11-01"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":15,"author":{"gitId":"houtenteo"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-11-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-02-11"},{"lineNumber":17,"author":{"gitId":"houtenteo"},"content":"import java.util.Locale;","lastModifiedDate":"2021-11-01"},{"lineNumber":18,"author":{"gitId":"houtenteo"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2021-11-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2017-02-11"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-07-10"},{"lineNumber":23,"author":{"gitId":"Kangxun"},"content":"import seedu.address.model.category.Category;","lastModifiedDate":"2021-10-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-02-11"},{"lineNumber":25,"author":{"gitId":"houtenteo"},"content":"import seedu.address.model.person.Age;","lastModifiedDate":"2021-10-18"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-02-11"},{"lineNumber":27,"author":{"gitId":"houtenteo"},"content":"import seedu.address.model.person.Gender;","lastModifiedDate":"2021-10-18"},{"lineNumber":28,"author":{"gitId":"pranav-ganesh"},"content":"import seedu.address.model.person.IsCalled;","lastModifiedDate":"2021-11-04"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-02-11"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-02-11"},{"lineNumber":31,"author":{"gitId":"houtenteo"},"content":"import seedu.address.model.person.interests.Interest;","lastModifiedDate":"2021-10-18"},{"lineNumber":32,"author":{"gitId":"houtenteo"},"content":"import seedu.address.model.person.interests.InterestsList;","lastModifiedDate":"2021-10-18"},{"lineNumber":33,"author":{"gitId":"houtenteo"},"content":"import seedu.address.model.person.predicates.AddressContainsKeywordsPredicate;","lastModifiedDate":"2021-11-01"},{"lineNumber":34,"author":{"gitId":"houtenteo"},"content":"import seedu.address.model.person.predicates.AgeContainsValuePredicate;","lastModifiedDate":"2021-11-01"},{"lineNumber":35,"author":{"gitId":"pranav-ganesh"},"content":"import seedu.address.model.person.predicates.CalledPredicate;","lastModifiedDate":"2021-11-04"},{"lineNumber":36,"author":{"gitId":"houtenteo"},"content":"import seedu.address.model.person.predicates.EmailContainsKeywordsPredicate;","lastModifiedDate":"2021-11-01"},{"lineNumber":37,"author":{"gitId":"houtenteo"},"content":"import seedu.address.model.person.predicates.GenderContainsKeywordPredicate;","lastModifiedDate":"2021-11-01"},{"lineNumber":38,"author":{"gitId":"houtenteo"},"content":"import seedu.address.model.person.predicates.InterestContainsKeywordsPredicate;","lastModifiedDate":"2021-11-01"},{"lineNumber":39,"author":{"gitId":"houtenteo"},"content":"import seedu.address.model.person.predicates.NameContainsKeywordsPredicate;","lastModifiedDate":"2021-11-01"},{"lineNumber":40,"author":{"gitId":"houtenteo"},"content":"import seedu.address.model.person.predicates.PhoneContainsNumberPredicate;","lastModifiedDate":"2021-11-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":42,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":43,"author":{"gitId":"-"},"content":" * Contains utility methods used for parsing strings in the various *Parser classes.","lastModifiedDate":"2017-07-18"},{"lineNumber":44,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":45,"author":{"gitId":"-"},"content":"public class ParserUtil {","lastModifiedDate":"2017-02-11"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":47,"author":{"gitId":"Kangxun"},"content":"    public static final String MESSAGE_INVALID_COUNT \u003d \"Count is not a non-zero unsigned integer. \"","lastModifiedDate":"2021-11-07"},{"lineNumber":48,"author":{"gitId":"Kangxun"},"content":"            + \"It cannot be bigger than 2147483647 (i.e., MAX_VALUE). \\n\";","lastModifiedDate":"2021-11-07"},{"lineNumber":49,"author":{"gitId":"houtenteo"},"content":"    public static final String EMPTY_FIELD_MESSAGE \u003d \"Fields provided can be anything but cannot be an empty string \\n\"","lastModifiedDate":"2021-11-01"},{"lineNumber":50,"author":{"gitId":"houtenteo"},"content":"            + \"Found one violation at: \";","lastModifiedDate":"2021-11-01"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Parses {@code oneBasedIndex} into an {@code Index} and returns it. Leading and trailing whitespaces will be","lastModifiedDate":"2017-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * trimmed.","lastModifiedDate":"2017-05-25"},{"lineNumber":55,"author":{"gitId":"loose-bus-change"},"content":"     * @throws ParseException if the specified index is invalid (i.e., if it is not a number, or it is more than","lastModifiedDate":"2021-11-08"},{"lineNumber":56,"author":{"gitId":"loose-bus-change"},"content":"     * the MAX_VALUE). Different error messages will be displayed based on whether input is an integer or not.","lastModifiedDate":"2021-11-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":58,"author":{"gitId":"loose-bus-change"},"content":"    public static Index parseIndex(String indexString, String exceptionMessage) throws ParseException {","lastModifiedDate":"2021-11-07"},{"lineNumber":59,"author":{"gitId":"loose-bus-change"},"content":"        Index returnIndex;","lastModifiedDate":"2021-11-07"},{"lineNumber":60,"author":{"gitId":"loose-bus-change"},"content":"        if (indexString.equals(\"\")) {","lastModifiedDate":"2021-11-07"},{"lineNumber":61,"author":{"gitId":"loose-bus-change"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, exceptionMessage));","lastModifiedDate":"2021-11-07"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":63,"author":{"gitId":"loose-bus-change"},"content":"        if (isPositiveInteger(indexString)) {","lastModifiedDate":"2021-11-07"},{"lineNumber":64,"author":{"gitId":"loose-bus-change"},"content":"            try {","lastModifiedDate":"2021-11-07"},{"lineNumber":65,"author":{"gitId":"loose-bus-change"},"content":"                int intIndex \u003d Integer.parseInt(indexString.trim());","lastModifiedDate":"2021-11-07"},{"lineNumber":66,"author":{"gitId":"loose-bus-change"},"content":"                returnIndex \u003d Index.fromOneBased(intIndex);","lastModifiedDate":"2021-11-07"},{"lineNumber":67,"author":{"gitId":"loose-bus-change"},"content":"            } catch (NumberFormatException e) {","lastModifiedDate":"2021-11-07"},{"lineNumber":68,"author":{"gitId":"loose-bus-change"},"content":"                throw new ParseException(MESSAGE_INDEX_NOT_PARSED);","lastModifiedDate":"2021-11-07"},{"lineNumber":69,"author":{"gitId":"loose-bus-change"},"content":"            }","lastModifiedDate":"2021-11-07"},{"lineNumber":70,"author":{"gitId":"loose-bus-change"},"content":"        } else {","lastModifiedDate":"2021-11-07"},{"lineNumber":71,"author":{"gitId":"loose-bus-change"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, exceptionMessage));","lastModifiedDate":"2021-11-07"},{"lineNumber":72,"author":{"gitId":"loose-bus-change"},"content":"        }","lastModifiedDate":"2021-11-07"},{"lineNumber":73,"author":{"gitId":"loose-bus-change"},"content":"        return returnIndex;","lastModifiedDate":"2021-11-07"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-29"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     * Parses a {@code String name} into a {@code Name}.","lastModifiedDate":"2017-05-29"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-29"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-29"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code name} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-29"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public static Name parseName(String name) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-29"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        String trimmedName \u003d name.trim();","lastModifiedDate":"2017-05-29"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(trimmedName)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":86,"author":{"gitId":"houtenteo"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, Name.MESSAGE_CONSTRAINTS));","lastModifiedDate":"2021-11-06"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        return new Name(trimmedName);","lastModifiedDate":"2017-05-29"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     * Parses a {@code String phone} into a {@code Phone}.","lastModifiedDate":"2017-05-30"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code phone} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    public static Phone parsePhone(String phone) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        requireNonNull(phone);","lastModifiedDate":"2017-05-30"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        String trimmedPhone \u003d phone.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(trimmedPhone)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":101,"author":{"gitId":"houtenteo"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, Phone.MESSAGE_CONSTRAINTS));","lastModifiedDate":"2021-11-06"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        return new Phone(trimmedPhone);","lastModifiedDate":"2017-05-30"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":106,"author":{"gitId":"houtenteo"},"content":"    /**","lastModifiedDate":"2021-10-18"},{"lineNumber":107,"author":{"gitId":"houtenteo"},"content":"     * Parses a {@code String email} into an {@code Email}.","lastModifiedDate":"2021-10-18"},{"lineNumber":108,"author":{"gitId":"houtenteo"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2021-10-18"},{"lineNumber":109,"author":{"gitId":"houtenteo"},"content":"     *","lastModifiedDate":"2021-10-18"},{"lineNumber":110,"author":{"gitId":"houtenteo"},"content":"     * @throws ParseException if the given {@code email} is invalid.","lastModifiedDate":"2021-10-18"},{"lineNumber":111,"author":{"gitId":"houtenteo"},"content":"     */","lastModifiedDate":"2021-10-18"},{"lineNumber":112,"author":{"gitId":"houtenteo"},"content":"    public static Email parseEmail(String email) throws ParseException {","lastModifiedDate":"2021-10-18"},{"lineNumber":113,"author":{"gitId":"houtenteo"},"content":"        requireNonNull(email);","lastModifiedDate":"2021-10-18"},{"lineNumber":114,"author":{"gitId":"houtenteo"},"content":"        String trimmedEmail \u003d email.trim();","lastModifiedDate":"2021-10-18"},{"lineNumber":115,"author":{"gitId":"houtenteo"},"content":"        if (!Email.isValidEmail(trimmedEmail)) {","lastModifiedDate":"2021-10-18"},{"lineNumber":116,"author":{"gitId":"houtenteo"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, Email.MESSAGE_CONSTRAINTS));","lastModifiedDate":"2021-11-06"},{"lineNumber":117,"author":{"gitId":"houtenteo"},"content":"        }","lastModifiedDate":"2021-10-18"},{"lineNumber":118,"author":{"gitId":"houtenteo"},"content":"        return new Email(trimmedEmail);","lastModifiedDate":"2021-10-18"},{"lineNumber":119,"author":{"gitId":"houtenteo"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":120,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":122,"author":{"gitId":"-"},"content":"     * Parses a {@code String address} into an {@code Address}.","lastModifiedDate":"2017-05-30"},{"lineNumber":123,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":124,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":125,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code address} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":126,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    public static Address parseAddress(String address) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":128,"author":{"gitId":"houtenteo"},"content":"        if (address \u003d\u003d null) {","lastModifiedDate":"2021-10-18"},{"lineNumber":129,"author":{"gitId":"houtenteo"},"content":"            return new Address(null);","lastModifiedDate":"2021-10-18"},{"lineNumber":130,"author":{"gitId":"houtenteo"},"content":"        }","lastModifiedDate":"2021-10-18"},{"lineNumber":131,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        String trimmedAddress \u003d address.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        if (!Address.isValidAddress(trimmedAddress)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":134,"author":{"gitId":"houtenteo"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, Address.MESSAGE_CONSTRAINTS));","lastModifiedDate":"2021-11-06"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        return new Address(trimmedAddress);","lastModifiedDate":"2017-05-30"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":140,"author":{"gitId":"houtenteo"},"content":"     * Parses a {@code String gender} into an {@code Gender}.","lastModifiedDate":"2021-10-18"},{"lineNumber":141,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2021-10-11"},{"lineNumber":142,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2021-10-11"},{"lineNumber":143,"author":{"gitId":"houtenteo"},"content":"     * @throws ParseException if the given {@code gender} is invalid.","lastModifiedDate":"2021-10-18"},{"lineNumber":144,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-10-11"},{"lineNumber":145,"author":{"gitId":"houtenteo"},"content":"    public static Gender parseGender(String gender) throws ParseException {","lastModifiedDate":"2021-10-18"},{"lineNumber":146,"author":{"gitId":"houtenteo"},"content":"        if (gender \u003d\u003d null) {","lastModifiedDate":"2021-10-18"},{"lineNumber":147,"author":{"gitId":"houtenteo"},"content":"            return new Gender(null);","lastModifiedDate":"2021-10-18"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-10-11"},{"lineNumber":149,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":150,"author":{"gitId":"houtenteo"},"content":"        String trimmedGender \u003d gender.trim();","lastModifiedDate":"2021-10-18"},{"lineNumber":151,"author":{"gitId":"houtenteo"},"content":"        if (!Gender.isValidGender(trimmedGender)) {","lastModifiedDate":"2021-10-18"},{"lineNumber":152,"author":{"gitId":"houtenteo"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, Gender.MESSAGE_CONSTRAINTS));","lastModifiedDate":"2021-11-06"},{"lineNumber":153,"author":{"gitId":"houtenteo"},"content":"        }","lastModifiedDate":"2021-10-18"},{"lineNumber":154,"author":{"gitId":"houtenteo"},"content":"        return new Gender(trimmedGender);","lastModifiedDate":"2021-10-18"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-10-18"},{"lineNumber":158,"author":{"gitId":"houtenteo"},"content":"     * Parses a {@code String age} into an {@code Age}.","lastModifiedDate":"2021-10-18"},{"lineNumber":159,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2021-10-18"},{"lineNumber":160,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2021-10-18"},{"lineNumber":161,"author":{"gitId":"houtenteo"},"content":"     * @throws ParseException if the given {@code age} is invalid.","lastModifiedDate":"2021-10-18"},{"lineNumber":162,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-10-18"},{"lineNumber":163,"author":{"gitId":"houtenteo"},"content":"    public static Age parseAge(String age) throws ParseException {","lastModifiedDate":"2021-10-18"},{"lineNumber":164,"author":{"gitId":"houtenteo"},"content":"        if (age \u003d\u003d null) {","lastModifiedDate":"2021-10-18"},{"lineNumber":165,"author":{"gitId":"houtenteo"},"content":"            return new Age(null);","lastModifiedDate":"2021-10-18"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-10-18"},{"lineNumber":167,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":168,"author":{"gitId":"houtenteo"},"content":"        String trimmedAge \u003d age.trim();","lastModifiedDate":"2021-10-18"},{"lineNumber":169,"author":{"gitId":"houtenteo"},"content":"        if (!Age.isValidAge(trimmedAge)) {","lastModifiedDate":"2021-10-18"},{"lineNumber":170,"author":{"gitId":"houtenteo"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, Age.MESSAGE_CONSTRAINTS));","lastModifiedDate":"2021-11-06"},{"lineNumber":171,"author":{"gitId":"houtenteo"},"content":"        }","lastModifiedDate":"2021-10-18"},{"lineNumber":172,"author":{"gitId":"houtenteo"},"content":"        return new Age(trimmedAge);","lastModifiedDate":"2021-10-18"},{"lineNumber":173,"author":{"gitId":"houtenteo"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":174,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":175,"author":{"gitId":"pranav-ganesh"},"content":"    /**","lastModifiedDate":"2021-10-22"},{"lineNumber":176,"author":{"gitId":"pranav-ganesh"},"content":"     * Parses a {@code String isCalled} into an {@code isCalled}.","lastModifiedDate":"2021-11-04"},{"lineNumber":177,"author":{"gitId":"pranav-ganesh"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2021-10-22"},{"lineNumber":178,"author":{"gitId":"pranav-ganesh"},"content":"     *","lastModifiedDate":"2021-10-22"},{"lineNumber":179,"author":{"gitId":"pranav-ganesh"},"content":"     * @throws ParseException if the given {@code isCalled} is invalid.","lastModifiedDate":"2021-11-04"},{"lineNumber":180,"author":{"gitId":"pranav-ganesh"},"content":"     */","lastModifiedDate":"2021-10-22"},{"lineNumber":181,"author":{"gitId":"pranav-ganesh"},"content":"    public static IsCalled parseIsCalled(String isCalled) throws ParseException {","lastModifiedDate":"2021-11-04"},{"lineNumber":182,"author":{"gitId":"pranav-ganesh"},"content":"        if (isCalled \u003d\u003d null) {","lastModifiedDate":"2021-11-04"},{"lineNumber":183,"author":{"gitId":"pranav-ganesh"},"content":"            return new IsCalled(null);","lastModifiedDate":"2021-11-04"},{"lineNumber":184,"author":{"gitId":"pranav-ganesh"},"content":"        }","lastModifiedDate":"2021-10-22"},{"lineNumber":185,"author":{"gitId":"pranav-ganesh"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":186,"author":{"gitId":"pranav-ganesh"},"content":"        String trimmedCalled \u003d isCalled.trim();","lastModifiedDate":"2021-11-04"},{"lineNumber":187,"author":{"gitId":"pranav-ganesh"},"content":"        if (!IsCalled.isValidIsCalled(trimmedCalled)) {","lastModifiedDate":"2021-11-04"},{"lineNumber":188,"author":{"gitId":"houtenteo"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, IsCalled.MESSAGE_CONSTRAINTS));","lastModifiedDate":"2021-11-06"},{"lineNumber":189,"author":{"gitId":"pranav-ganesh"},"content":"        }","lastModifiedDate":"2021-10-22"},{"lineNumber":190,"author":{"gitId":"pranav-ganesh"},"content":"        return new IsCalled(trimmedCalled);","lastModifiedDate":"2021-11-04"},{"lineNumber":191,"author":{"gitId":"pranav-ganesh"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":192,"author":{"gitId":"pranav-ganesh"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":193,"author":{"gitId":"houtenteo"},"content":"    /**","lastModifiedDate":"2021-10-18"},{"lineNumber":194,"author":{"gitId":"houtenteo"},"content":"     * Parses a {@code String interest} into a {@code Interest}.","lastModifiedDate":"2021-10-18"},{"lineNumber":195,"author":{"gitId":"houtenteo"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2021-10-18"},{"lineNumber":196,"author":{"gitId":"houtenteo"},"content":"     *","lastModifiedDate":"2021-10-18"},{"lineNumber":197,"author":{"gitId":"houtenteo"},"content":"     * @throws ParseException if the given {@code interest} is invalid.","lastModifiedDate":"2021-10-18"},{"lineNumber":198,"author":{"gitId":"houtenteo"},"content":"     */","lastModifiedDate":"2021-10-18"},{"lineNumber":199,"author":{"gitId":"houtenteo"},"content":"    public static Interest parseInterest(String interest) throws ParseException {","lastModifiedDate":"2021-10-18"},{"lineNumber":200,"author":{"gitId":"houtenteo"},"content":"        requireNonNull(interest);","lastModifiedDate":"2021-10-18"},{"lineNumber":201,"author":{"gitId":"houtenteo"},"content":"        String trimmedInterest \u003d interest.trim();","lastModifiedDate":"2021-10-18"},{"lineNumber":202,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":203,"author":{"gitId":"houtenteo"},"content":"        if (!Interest.isValidInterest(trimmedInterest)) {","lastModifiedDate":"2021-10-18"},{"lineNumber":204,"author":{"gitId":"houtenteo"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, Interest.MESSAGE_CONSTRAINTS));","lastModifiedDate":"2021-11-06"},{"lineNumber":205,"author":{"gitId":"houtenteo"},"content":"        }","lastModifiedDate":"2021-10-18"},{"lineNumber":206,"author":{"gitId":"houtenteo"},"content":"        return new Interest(trimmedInterest);","lastModifiedDate":"2021-10-18"},{"lineNumber":207,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":208,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-10-18"},{"lineNumber":210,"author":{"gitId":"-"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e}.","lastModifiedDate":"2021-10-18"},{"lineNumber":211,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-10-18"},{"lineNumber":212,"author":{"gitId":"houtenteo"},"content":"    public static InterestsList parseInterests(Collection\u003cString\u003e interests) throws ParseException {","lastModifiedDate":"2021-10-18"},{"lineNumber":213,"author":{"gitId":"houtenteo"},"content":"        requireNonNull(interests);","lastModifiedDate":"2021-10-18"},{"lineNumber":214,"author":{"gitId":"houtenteo"},"content":"        final InterestsList interestsList \u003d new InterestsList();","lastModifiedDate":"2021-10-18"},{"lineNumber":215,"author":{"gitId":"houtenteo"},"content":"        for (String interest : interests) {","lastModifiedDate":"2021-10-18"},{"lineNumber":216,"author":{"gitId":"pranav-ganesh"},"content":"            try {","lastModifiedDate":"2021-11-06"},{"lineNumber":217,"author":{"gitId":"houtenteo"},"content":"                interestsList.addInterest(parseInterest(interest));","lastModifiedDate":"2021-10-18"},{"lineNumber":218,"author":{"gitId":"pranav-ganesh"},"content":"            } catch (IllegalArgumentException e) {","lastModifiedDate":"2021-11-06"},{"lineNumber":219,"author":{"gitId":"pranav-ganesh"},"content":"                throw new ParseException(\"Duplicate arguments are not allowed!\");","lastModifiedDate":"2021-11-08"},{"lineNumber":220,"author":{"gitId":"pranav-ganesh"},"content":"            }","lastModifiedDate":"2021-11-06"},{"lineNumber":221,"author":{"gitId":"houtenteo"},"content":"        }","lastModifiedDate":"2021-10-18"},{"lineNumber":222,"author":{"gitId":"houtenteo"},"content":"        return interestsList;","lastModifiedDate":"2021-10-18"},{"lineNumber":223,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":224,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":225,"author":{"gitId":"Kangxun"},"content":"    /**","lastModifiedDate":"2021-10-09"},{"lineNumber":226,"author":{"gitId":"Kangxun"},"content":"     * Parses {@code oneBasedInteger} into an {@code Integer} and returns it. Leading and trailing whitespaces will be","lastModifiedDate":"2021-10-09"},{"lineNumber":227,"author":{"gitId":"Kangxun"},"content":"     * trimmed.","lastModifiedDate":"2021-10-09"},{"lineNumber":228,"author":{"gitId":"Kangxun"},"content":"     * @throws ParseException if the specified integer is invalid (not non-zero unsigned integer).","lastModifiedDate":"2021-10-09"},{"lineNumber":229,"author":{"gitId":"Kangxun"},"content":"     */","lastModifiedDate":"2021-10-09"},{"lineNumber":230,"author":{"gitId":"Kangxun"},"content":"    public static Integer parseInteger(String oneBasedInteger) throws ParseException {","lastModifiedDate":"2021-10-09"},{"lineNumber":231,"author":{"gitId":"Kangxun"},"content":"        String trimmedInteger \u003d oneBasedInteger.trim();","lastModifiedDate":"2021-10-09"},{"lineNumber":232,"author":{"gitId":"Kangxun"},"content":"        if (!StringUtil.isNonZeroUnsignedInteger(trimmedInteger)) {","lastModifiedDate":"2021-10-09"},{"lineNumber":233,"author":{"gitId":"Kangxun"},"content":"            throw new ParseException(MESSAGE_INVALID_COUNT);","lastModifiedDate":"2021-10-09"},{"lineNumber":234,"author":{"gitId":"Kangxun"},"content":"        }","lastModifiedDate":"2021-10-09"},{"lineNumber":235,"author":{"gitId":"Kangxun"},"content":"        return Integer.parseInt(trimmedInteger);","lastModifiedDate":"2021-10-09"},{"lineNumber":236,"author":{"gitId":"Kangxun"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":237,"author":{"gitId":"Kangxun"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":238,"author":{"gitId":"Kangxun"},"content":"    /**","lastModifiedDate":"2021-10-09"},{"lineNumber":239,"author":{"gitId":"Kangxun"},"content":"     * Parses a {@code String category} into a {@code category}.","lastModifiedDate":"2021-10-09"},{"lineNumber":240,"author":{"gitId":"Kangxun"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2021-10-09"},{"lineNumber":241,"author":{"gitId":"Kangxun"},"content":"     *","lastModifiedDate":"2021-10-09"},{"lineNumber":242,"author":{"gitId":"Kangxun"},"content":"     * @throws ParseException if the given {@code category} is invalid.","lastModifiedDate":"2021-10-09"},{"lineNumber":243,"author":{"gitId":"Kangxun"},"content":"     */","lastModifiedDate":"2021-10-09"},{"lineNumber":244,"author":{"gitId":"Kangxun"},"content":"    public static Category parseCategory(String category) throws ParseException {","lastModifiedDate":"2021-10-09"},{"lineNumber":245,"author":{"gitId":"Kangxun"},"content":"        requireNonNull(category);","lastModifiedDate":"2021-10-09"},{"lineNumber":246,"author":{"gitId":"Kangxun"},"content":"        String trimmedCategory \u003d category.trim();","lastModifiedDate":"2021-10-09"},{"lineNumber":247,"author":{"gitId":"Kangxun"},"content":"        if (!Category.isValidCategory(trimmedCategory)) {","lastModifiedDate":"2021-10-09"},{"lineNumber":248,"author":{"gitId":"Kangxun"},"content":"            throw new ParseException(Category.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-09"},{"lineNumber":249,"author":{"gitId":"Kangxun"},"content":"        }","lastModifiedDate":"2021-10-09"},{"lineNumber":250,"author":{"gitId":"Kangxun"},"content":"        return new Category(trimmedCategory);","lastModifiedDate":"2021-10-09"},{"lineNumber":251,"author":{"gitId":"Kangxun"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":252,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":253,"author":{"gitId":"houtenteo"},"content":"    /**","lastModifiedDate":"2021-11-01"},{"lineNumber":254,"author":{"gitId":"houtenteo"},"content":"     * Checks if the string provided at the respective prefix is empty","lastModifiedDate":"2021-11-01"},{"lineNumber":255,"author":{"gitId":"houtenteo"},"content":"     * @param test The string to be checked","lastModifiedDate":"2021-11-01"},{"lineNumber":256,"author":{"gitId":"houtenteo"},"content":"     * @param prefix The prefix the string has","lastModifiedDate":"2021-11-01"},{"lineNumber":257,"author":{"gitId":"houtenteo"},"content":"     * @throws ParseException when the string is empty","lastModifiedDate":"2021-11-01"},{"lineNumber":258,"author":{"gitId":"houtenteo"},"content":"     */","lastModifiedDate":"2021-11-01"},{"lineNumber":259,"author":{"gitId":"houtenteo"},"content":"    public static boolean checkEmptyString(String test, Prefix prefix) throws ParseException {","lastModifiedDate":"2021-11-02"},{"lineNumber":260,"author":{"gitId":"houtenteo"},"content":"        requireNonNull(test);","lastModifiedDate":"2021-11-01"},{"lineNumber":261,"author":{"gitId":"houtenteo"},"content":"        requireNonNull(prefix);","lastModifiedDate":"2021-11-01"},{"lineNumber":262,"author":{"gitId":"houtenteo"},"content":"        if (test.length() \u003d\u003d 0) {","lastModifiedDate":"2021-11-01"},{"lineNumber":263,"author":{"gitId":"houtenteo"},"content":"            throw new ParseException(String.format(","lastModifiedDate":"2021-11-01"},{"lineNumber":264,"author":{"gitId":"houtenteo"},"content":"                    MESSAGE_INVALID_COMMAND_FORMAT, EMPTY_FIELD_MESSAGE + prefix.getPrefix()","lastModifiedDate":"2021-11-01"},{"lineNumber":265,"author":{"gitId":"houtenteo"},"content":"            ));","lastModifiedDate":"2021-11-01"},{"lineNumber":266,"author":{"gitId":"houtenteo"},"content":"        }","lastModifiedDate":"2021-11-01"},{"lineNumber":267,"author":{"gitId":"houtenteo"},"content":"        return true;","lastModifiedDate":"2021-11-02"},{"lineNumber":268,"author":{"gitId":"houtenteo"},"content":"    }","lastModifiedDate":"2021-11-01"},{"lineNumber":269,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":270,"author":{"gitId":"houtenteo"},"content":"    /**","lastModifiedDate":"2021-11-01"},{"lineNumber":271,"author":{"gitId":"houtenteo"},"content":"     * Parses a String into a {@code NameContainsKeyWordPredicate}","lastModifiedDate":"2021-11-01"},{"lineNumber":272,"author":{"gitId":"houtenteo"},"content":"     * @param nameKeywords the keywords to be parsed","lastModifiedDate":"2021-11-01"},{"lineNumber":273,"author":{"gitId":"houtenteo"},"content":"     * @return The predicate","lastModifiedDate":"2021-11-01"},{"lineNumber":274,"author":{"gitId":"houtenteo"},"content":"     */","lastModifiedDate":"2021-11-01"},{"lineNumber":275,"author":{"gitId":"houtenteo"},"content":"    public static NameContainsKeywordsPredicate getNamePredicate(String nameKeywords, boolean isFindAll) {","lastModifiedDate":"2021-11-01"},{"lineNumber":276,"author":{"gitId":"houtenteo"},"content":"        requireNonNull(nameKeywords);","lastModifiedDate":"2021-11-02"},{"lineNumber":277,"author":{"gitId":"houtenteo"},"content":"        String[] nameKeywordsArr \u003d nameKeywords.split(\"\\\\s+\");","lastModifiedDate":"2021-11-01"},{"lineNumber":278,"author":{"gitId":"houtenteo"},"content":"        return new NameContainsKeywordsPredicate(Arrays.asList(nameKeywordsArr), isFindAll);","lastModifiedDate":"2021-11-01"},{"lineNumber":279,"author":{"gitId":"houtenteo"},"content":"    }","lastModifiedDate":"2021-11-01"},{"lineNumber":280,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":281,"author":{"gitId":"houtenteo"},"content":"    /**","lastModifiedDate":"2021-11-01"},{"lineNumber":282,"author":{"gitId":"houtenteo"},"content":"     * Parses a String into a {@code PhoneContainsNumberPredicate}","lastModifiedDate":"2021-11-01"},{"lineNumber":283,"author":{"gitId":"houtenteo"},"content":"     * @param numbers the numbers to be parsed","lastModifiedDate":"2021-11-01"},{"lineNumber":284,"author":{"gitId":"houtenteo"},"content":"     * @return The predicate","lastModifiedDate":"2021-11-01"},{"lineNumber":285,"author":{"gitId":"houtenteo"},"content":"     */","lastModifiedDate":"2021-11-01"},{"lineNumber":286,"author":{"gitId":"houtenteo"},"content":"    public static PhoneContainsNumberPredicate getPhonePredicate(String numbers, boolean isFindAll) {","lastModifiedDate":"2021-11-01"},{"lineNumber":287,"author":{"gitId":"houtenteo"},"content":"        requireNonNull(numbers);","lastModifiedDate":"2021-11-02"},{"lineNumber":288,"author":{"gitId":"houtenteo"},"content":"        String[] numbersArr \u003d numbers.split(\"\\\\s+\");","lastModifiedDate":"2021-11-01"},{"lineNumber":289,"author":{"gitId":"houtenteo"},"content":"        return new PhoneContainsNumberPredicate(Arrays.asList(numbersArr), isFindAll);","lastModifiedDate":"2021-11-01"},{"lineNumber":290,"author":{"gitId":"houtenteo"},"content":"    }","lastModifiedDate":"2021-11-01"},{"lineNumber":291,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":292,"author":{"gitId":"houtenteo"},"content":"    /**","lastModifiedDate":"2021-11-01"},{"lineNumber":293,"author":{"gitId":"houtenteo"},"content":"     * Parses a String into a {@code EmailContainsKeywordsPredicate}","lastModifiedDate":"2021-11-01"},{"lineNumber":294,"author":{"gitId":"houtenteo"},"content":"     * @param emailKeywords the keywords to be parsed","lastModifiedDate":"2021-11-01"},{"lineNumber":295,"author":{"gitId":"houtenteo"},"content":"     * @return The predicate","lastModifiedDate":"2021-11-01"},{"lineNumber":296,"author":{"gitId":"houtenteo"},"content":"     */","lastModifiedDate":"2021-11-01"},{"lineNumber":297,"author":{"gitId":"houtenteo"},"content":"    public static EmailContainsKeywordsPredicate getEmailPredicate(String emailKeywords, boolean isFindAll) {","lastModifiedDate":"2021-11-01"},{"lineNumber":298,"author":{"gitId":"houtenteo"},"content":"        requireNonNull(emailKeywords);","lastModifiedDate":"2021-11-02"},{"lineNumber":299,"author":{"gitId":"houtenteo"},"content":"        String[] emailKeywordsArr \u003d emailKeywords.split(\"\\\\s+\");","lastModifiedDate":"2021-11-01"},{"lineNumber":300,"author":{"gitId":"houtenteo"},"content":"        return new EmailContainsKeywordsPredicate(Arrays.asList(emailKeywordsArr), isFindAll);","lastModifiedDate":"2021-11-01"},{"lineNumber":301,"author":{"gitId":"houtenteo"},"content":"    }","lastModifiedDate":"2021-11-01"},{"lineNumber":302,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":303,"author":{"gitId":"houtenteo"},"content":"    /**","lastModifiedDate":"2021-11-01"},{"lineNumber":304,"author":{"gitId":"pranav-ganesh"},"content":"     * Parses a String into a {@code CalledPredicate}","lastModifiedDate":"2021-11-04"},{"lineNumber":305,"author":{"gitId":"pranav-ganesh"},"content":"     * @param calledKeywords the keywords to be parsed","lastModifiedDate":"2021-11-04"},{"lineNumber":306,"author":{"gitId":"houtenteo"},"content":"     * @return The predicate","lastModifiedDate":"2021-11-01"},{"lineNumber":307,"author":{"gitId":"houtenteo"},"content":"     */","lastModifiedDate":"2021-11-01"},{"lineNumber":308,"author":{"gitId":"pranav-ganesh"},"content":"    public static CalledPredicate getCalledPredicate(String calledKeywords, boolean isFindAll) {","lastModifiedDate":"2021-11-04"},{"lineNumber":309,"author":{"gitId":"pranav-ganesh"},"content":"        requireNonNull(calledKeywords);","lastModifiedDate":"2021-11-04"},{"lineNumber":310,"author":{"gitId":"pranav-ganesh"},"content":"        String[] calledKeywordsArr \u003d calledKeywords.split(\"\\\\s+\");","lastModifiedDate":"2021-11-04"},{"lineNumber":311,"author":{"gitId":"pranav-ganesh"},"content":"        return new CalledPredicate(Arrays.asList(calledKeywordsArr), isFindAll);","lastModifiedDate":"2021-11-04"},{"lineNumber":312,"author":{"gitId":"houtenteo"},"content":"    }","lastModifiedDate":"2021-11-01"},{"lineNumber":313,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":314,"author":{"gitId":"houtenteo"},"content":"    /**","lastModifiedDate":"2021-11-01"},{"lineNumber":315,"author":{"gitId":"houtenteo"},"content":"     * Parses a String into a {@code AddressContainsKeywordsPredicate}","lastModifiedDate":"2021-11-01"},{"lineNumber":316,"author":{"gitId":"houtenteo"},"content":"     * @param addressKeywords the keywords to be parsed","lastModifiedDate":"2021-11-01"},{"lineNumber":317,"author":{"gitId":"houtenteo"},"content":"     * @return The predicate","lastModifiedDate":"2021-11-01"},{"lineNumber":318,"author":{"gitId":"houtenteo"},"content":"     */","lastModifiedDate":"2021-11-01"},{"lineNumber":319,"author":{"gitId":"houtenteo"},"content":"    public static AddressContainsKeywordsPredicate getAddressPredicate(String addressKeywords, boolean isFindAll) {","lastModifiedDate":"2021-11-01"},{"lineNumber":320,"author":{"gitId":"houtenteo"},"content":"        requireNonNull(addressKeywords);","lastModifiedDate":"2021-11-02"},{"lineNumber":321,"author":{"gitId":"houtenteo"},"content":"        String[] addressKeywordsArr \u003d addressKeywords.split(\"\\\\s+\");","lastModifiedDate":"2021-11-01"},{"lineNumber":322,"author":{"gitId":"houtenteo"},"content":"        return new AddressContainsKeywordsPredicate(Arrays.asList(addressKeywordsArr), isFindAll);","lastModifiedDate":"2021-11-01"},{"lineNumber":323,"author":{"gitId":"houtenteo"},"content":"    }","lastModifiedDate":"2021-11-01"},{"lineNumber":324,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":325,"author":{"gitId":"houtenteo"},"content":"    /**","lastModifiedDate":"2021-11-01"},{"lineNumber":326,"author":{"gitId":"houtenteo"},"content":"     * Parses a String into a {@code GenderContainsKeywordPredicate}","lastModifiedDate":"2021-11-01"},{"lineNumber":327,"author":{"gitId":"houtenteo"},"content":"     * @param genderKeywords the keywords to be parsed","lastModifiedDate":"2021-11-01"},{"lineNumber":328,"author":{"gitId":"houtenteo"},"content":"     * @return The predicate","lastModifiedDate":"2021-11-01"},{"lineNumber":329,"author":{"gitId":"houtenteo"},"content":"     */","lastModifiedDate":"2021-11-01"},{"lineNumber":330,"author":{"gitId":"houtenteo"},"content":"    public static GenderContainsKeywordPredicate getGenderPredicate(String genderKeywords, boolean isFindAll) {","lastModifiedDate":"2021-11-01"},{"lineNumber":331,"author":{"gitId":"houtenteo"},"content":"        requireNonNull(genderKeywords);","lastModifiedDate":"2021-11-02"},{"lineNumber":332,"author":{"gitId":"houtenteo"},"content":"        String[] genderKeywordsArr \u003d genderKeywords.split(\"\\\\s+\");","lastModifiedDate":"2021-11-01"},{"lineNumber":333,"author":{"gitId":"houtenteo"},"content":"        return new GenderContainsKeywordPredicate(Arrays.asList(genderKeywordsArr), isFindAll);","lastModifiedDate":"2021-11-01"},{"lineNumber":334,"author":{"gitId":"houtenteo"},"content":"    }","lastModifiedDate":"2021-11-01"},{"lineNumber":335,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":336,"author":{"gitId":"houtenteo"},"content":"    /**","lastModifiedDate":"2021-11-01"},{"lineNumber":337,"author":{"gitId":"houtenteo"},"content":"     * Parses a String into a {@code AgeContainsValuePredicate}","lastModifiedDate":"2021-11-01"},{"lineNumber":338,"author":{"gitId":"houtenteo"},"content":"     * @param ageValues the values to be parsed","lastModifiedDate":"2021-11-01"},{"lineNumber":339,"author":{"gitId":"houtenteo"},"content":"     * @return The predicate","lastModifiedDate":"2021-11-01"},{"lineNumber":340,"author":{"gitId":"houtenteo"},"content":"     */","lastModifiedDate":"2021-11-01"},{"lineNumber":341,"author":{"gitId":"houtenteo"},"content":"    public static AgeContainsValuePredicate getAgePredicate(String ageValues, boolean isFindAll) {","lastModifiedDate":"2021-11-01"},{"lineNumber":342,"author":{"gitId":"houtenteo"},"content":"        requireNonNull(ageValues);","lastModifiedDate":"2021-11-02"},{"lineNumber":343,"author":{"gitId":"houtenteo"},"content":"        String[] ageValuesArr \u003d ageValues.split(\"\\\\s+\");","lastModifiedDate":"2021-11-01"},{"lineNumber":344,"author":{"gitId":"houtenteo"},"content":"        return new AgeContainsValuePredicate(Arrays.asList(ageValuesArr), isFindAll);","lastModifiedDate":"2021-11-01"},{"lineNumber":345,"author":{"gitId":"houtenteo"},"content":"    }","lastModifiedDate":"2021-11-01"},{"lineNumber":346,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":347,"author":{"gitId":"houtenteo"},"content":"    /**","lastModifiedDate":"2021-11-01"},{"lineNumber":348,"author":{"gitId":"houtenteo"},"content":"     * Parses a String into a {@code InterestContainsKeywordsPredicate}","lastModifiedDate":"2021-11-01"},{"lineNumber":349,"author":{"gitId":"houtenteo"},"content":"     * @param interestKeywords the keywords to be parsed","lastModifiedDate":"2021-11-01"},{"lineNumber":350,"author":{"gitId":"houtenteo"},"content":"     * @return The predicate","lastModifiedDate":"2021-11-01"},{"lineNumber":351,"author":{"gitId":"houtenteo"},"content":"     */","lastModifiedDate":"2021-11-01"},{"lineNumber":352,"author":{"gitId":"houtenteo"},"content":"    public static InterestContainsKeywordsPredicate getInterestPredicate(String interestKeywords, boolean isFindAll) {","lastModifiedDate":"2021-11-01"},{"lineNumber":353,"author":{"gitId":"houtenteo"},"content":"        requireNonNull(interestKeywords);","lastModifiedDate":"2021-11-02"},{"lineNumber":354,"author":{"gitId":"houtenteo"},"content":"        String[] interestKeywordsArr \u003d interestKeywords.split(\"\\\\s+\");","lastModifiedDate":"2021-11-01"},{"lineNumber":355,"author":{"gitId":"houtenteo"},"content":"        return new InterestContainsKeywordsPredicate(Arrays.asList(interestKeywordsArr), isFindAll);","lastModifiedDate":"2021-11-01"},{"lineNumber":356,"author":{"gitId":"houtenteo"},"content":"    }","lastModifiedDate":"2021-11-01"},{"lineNumber":357,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":358,"author":{"gitId":"houtenteo"},"content":"    /**","lastModifiedDate":"2021-11-01"},{"lineNumber":359,"author":{"gitId":"houtenteo"},"content":"     * Checks if the string supplied is either \"t\", \"true\", \"f\" or \"false\". (case-insensitive)","lastModifiedDate":"2021-11-01"},{"lineNumber":360,"author":{"gitId":"houtenteo"},"content":"     * @param s The String to be checked","lastModifiedDate":"2021-11-01"},{"lineNumber":361,"author":{"gitId":"houtenteo"},"content":"     * @throws ParseException if the String is not one of the accepted forms","lastModifiedDate":"2021-11-02"},{"lineNumber":362,"author":{"gitId":"houtenteo"},"content":"     */","lastModifiedDate":"2021-11-01"},{"lineNumber":363,"author":{"gitId":"houtenteo"},"content":"    public static boolean checkTrueOrFalse(String s) throws ParseException {","lastModifiedDate":"2021-11-02"},{"lineNumber":364,"author":{"gitId":"houtenteo"},"content":"        String[] testStrings \u003d s.split(\"\\\\s+\");","lastModifiedDate":"2021-11-01"},{"lineNumber":365,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":366,"author":{"gitId":"houtenteo"},"content":"        for (String test : testStrings) {","lastModifiedDate":"2021-11-01"},{"lineNumber":367,"author":{"gitId":"houtenteo"},"content":"            test \u003d test.toLowerCase(Locale.ROOT);","lastModifiedDate":"2021-11-01"},{"lineNumber":368,"author":{"gitId":"houtenteo"},"content":"            if (!(test.equals(\"t\") || test.equals(\"true\")","lastModifiedDate":"2021-11-01"},{"lineNumber":369,"author":{"gitId":"houtenteo"},"content":"                    || test.equals(\"f\") || test.equals(\"false\"))) {","lastModifiedDate":"2021-11-01"},{"lineNumber":370,"author":{"gitId":"houtenteo"},"content":"                throw new ParseException(String.format(","lastModifiedDate":"2021-11-06"},{"lineNumber":371,"author":{"gitId":"houtenteo"},"content":"                        MESSAGE_INVALID_COMMAND_FORMAT, \"\u0027d/\u0027 can only be followed by \u0027t\u0027,\u0027f\u0027, \u0027true\u0027, or \u0027false\u0027\"","lastModifiedDate":"2021-11-06"},{"lineNumber":372,"author":{"gitId":"houtenteo"},"content":"                ));","lastModifiedDate":"2021-11-06"},{"lineNumber":373,"author":{"gitId":"houtenteo"},"content":"            }","lastModifiedDate":"2021-11-01"},{"lineNumber":374,"author":{"gitId":"houtenteo"},"content":"        }","lastModifiedDate":"2021-11-01"},{"lineNumber":375,"author":{"gitId":"houtenteo"},"content":"        return true;","lastModifiedDate":"2021-11-02"},{"lineNumber":376,"author":{"gitId":"houtenteo"},"content":"    }","lastModifiedDate":"2021-11-01"},{"lineNumber":377,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":378,"author":{"gitId":"houtenteo"},"content":"    /**","lastModifiedDate":"2021-11-01"},{"lineNumber":379,"author":{"gitId":"houtenteo"},"content":"     * Checks if the string supplied is either \"m\", \"male\", \"f\", \"female\" or \"n.a\". (case-insensitive)","lastModifiedDate":"2021-11-01"},{"lineNumber":380,"author":{"gitId":"houtenteo"},"content":"     * @param s The String to be checked","lastModifiedDate":"2021-11-01"},{"lineNumber":381,"author":{"gitId":"houtenteo"},"content":"     * @throws ParseException if the String is not one of the accepted forms","lastModifiedDate":"2021-11-02"},{"lineNumber":382,"author":{"gitId":"houtenteo"},"content":"     */","lastModifiedDate":"2021-11-01"},{"lineNumber":383,"author":{"gitId":"houtenteo"},"content":"    public static boolean checkMaleOrFemale(String s) throws ParseException {","lastModifiedDate":"2021-11-02"},{"lineNumber":384,"author":{"gitId":"houtenteo"},"content":"        String[] testStrings \u003d s.split(\"\\\\s+\");","lastModifiedDate":"2021-11-01"},{"lineNumber":385,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":386,"author":{"gitId":"houtenteo"},"content":"        for (String test : testStrings) {","lastModifiedDate":"2021-11-01"},{"lineNumber":387,"author":{"gitId":"houtenteo"},"content":"            test \u003d test.toLowerCase(Locale.ROOT);","lastModifiedDate":"2021-11-01"},{"lineNumber":388,"author":{"gitId":"houtenteo"},"content":"            if (!(test.equals(\"m\") || test.equals(\"male\")","lastModifiedDate":"2021-11-01"},{"lineNumber":389,"author":{"gitId":"houtenteo"},"content":"                    || test.equals(\"f\") || test.equals(\"female\") || test.equals(\"n.a\"))) {","lastModifiedDate":"2021-11-01"},{"lineNumber":390,"author":{"gitId":"houtenteo"},"content":"                throw new ParseException(String.format(","lastModifiedDate":"2021-11-06"},{"lineNumber":391,"author":{"gitId":"houtenteo"},"content":"                        MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2021-11-06"},{"lineNumber":392,"author":{"gitId":"houtenteo"},"content":"                        \"\u0027g/\u0027 can only be followed by \u0027m\u0027,\u0027f\u0027, \u0027male\u0027, \u0027female\u0027 or \u0027N.A\u0027\"","lastModifiedDate":"2021-11-06"},{"lineNumber":393,"author":{"gitId":"houtenteo"},"content":"                ));","lastModifiedDate":"2021-11-06"},{"lineNumber":394,"author":{"gitId":"houtenteo"},"content":"            }","lastModifiedDate":"2021-11-01"},{"lineNumber":395,"author":{"gitId":"houtenteo"},"content":"        }","lastModifiedDate":"2021-11-01"},{"lineNumber":396,"author":{"gitId":"houtenteo"},"content":"        return true;","lastModifiedDate":"2021-11-02"},{"lineNumber":397,"author":{"gitId":"houtenteo"},"content":"    }","lastModifiedDate":"2021-11-01"},{"lineNumber":398,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":399,"author":{"gitId":"houtenteo"},"content":"    /**","lastModifiedDate":"2021-11-01"},{"lineNumber":400,"author":{"gitId":"houtenteo"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2021-11-01"},{"lineNumber":401,"author":{"gitId":"houtenteo"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2021-11-01"},{"lineNumber":402,"author":{"gitId":"houtenteo"},"content":"     */","lastModifiedDate":"2021-11-01"},{"lineNumber":403,"author":{"gitId":"houtenteo"},"content":"    public static boolean areAnyPrefixesPresent(ArgumentMultimap argumentMultimap) {","lastModifiedDate":"2021-11-02"},{"lineNumber":404,"author":{"gitId":"houtenteo"},"content":"        requireNonNull(argumentMultimap);","lastModifiedDate":"2021-11-02"},{"lineNumber":405,"author":{"gitId":"pranav-ganesh"},"content":"        return Stream.of(PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_CALLED,","lastModifiedDate":"2021-11-04"},{"lineNumber":406,"author":{"gitId":"houtenteo"},"content":"                        PREFIX_ADDRESS, PREFIX_GENDER, PREFIX_AGE, PREFIX_INTEREST)","lastModifiedDate":"2021-11-01"},{"lineNumber":407,"author":{"gitId":"houtenteo"},"content":"                .anyMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2021-11-01"},{"lineNumber":408,"author":{"gitId":"houtenteo"},"content":"    }","lastModifiedDate":"2021-11-01"},{"lineNumber":409,"author":{"gitId":"loose-bus-change"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":410,"author":{"gitId":"loose-bus-change"},"content":"    /**","lastModifiedDate":"2021-11-06"},{"lineNumber":411,"author":{"gitId":"loose-bus-change"},"content":"     * Checks whether the parameter that has been input is a whole number (can also be a whole number greater","lastModifiedDate":"2021-11-06"},{"lineNumber":412,"author":{"gitId":"loose-bus-change"},"content":"     * than Integer.MAX_VALUE)","lastModifiedDate":"2021-11-08"},{"lineNumber":413,"author":{"gitId":"loose-bus-change"},"content":"     *","lastModifiedDate":"2021-11-06"},{"lineNumber":414,"author":{"gitId":"loose-bus-change"},"content":"     * @param arg the index parameter that has been entered by the user","lastModifiedDate":"2021-11-08"},{"lineNumber":415,"author":{"gitId":"loose-bus-change"},"content":"     * @return a boolean representing whether the index is a positive integer or not","lastModifiedDate":"2021-11-08"},{"lineNumber":416,"author":{"gitId":"loose-bus-change"},"content":"     */","lastModifiedDate":"2021-11-06"},{"lineNumber":417,"author":{"gitId":"loose-bus-change"},"content":"    public static boolean isPositiveInteger(String arg) {","lastModifiedDate":"2021-11-07"},{"lineNumber":418,"author":{"gitId":"loose-bus-change"},"content":"        boolean isZero \u003d true;","lastModifiedDate":"2021-11-07"},{"lineNumber":419,"author":{"gitId":"loose-bus-change"},"content":"        try {","lastModifiedDate":"2021-11-06"},{"lineNumber":420,"author":{"gitId":"loose-bus-change"},"content":"            for (char c : arg.trim().toCharArray()) {","lastModifiedDate":"2021-11-07"},{"lineNumber":421,"author":{"gitId":"loose-bus-change"},"content":"                Integer.parseInt(String.valueOf(c));","lastModifiedDate":"2021-11-06"},{"lineNumber":422,"author":{"gitId":"loose-bus-change"},"content":"                if (isZero \u0026\u0026 c !\u003d \u00270\u0027) {","lastModifiedDate":"2021-11-07"},{"lineNumber":423,"author":{"gitId":"loose-bus-change"},"content":"                    isZero \u003d false;","lastModifiedDate":"2021-11-07"},{"lineNumber":424,"author":{"gitId":"loose-bus-change"},"content":"                }","lastModifiedDate":"2021-11-07"},{"lineNumber":425,"author":{"gitId":"loose-bus-change"},"content":"            }","lastModifiedDate":"2021-11-06"},{"lineNumber":426,"author":{"gitId":"loose-bus-change"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2021-11-06"},{"lineNumber":427,"author":{"gitId":"loose-bus-change"},"content":"            return false;","lastModifiedDate":"2021-11-06"},{"lineNumber":428,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-11-06"},{"lineNumber":429,"author":{"gitId":"loose-bus-change"},"content":"        return !isZero;","lastModifiedDate":"2021-11-07"},{"lineNumber":430,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-11-06"},{"lineNumber":431,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"houtenteo":242,"loose-bus-change":38,"pranav-ganesh":31,"-":90,"Kangxun":30}},{"path":"src/main/java/seedu/address/model/AddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.person.UniquePersonList;","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Wraps all data at the address-book level","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * Duplicates are not allowed (by .isSamePerson comparison)","lastModifiedDate":"2018-04-19"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class AddressBook implements ReadOnlyAddressBook {","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private final UniquePersonList persons;","lastModifiedDate":"2016-08-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * The \u0027unusual\u0027 code block below is a non-static initialization block, sometimes used to avoid duplication","lastModifiedDate":"2019-05-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * between constructors. See https://docs.oracle.com/javase/tutorial/java/javaOO/initial.html","lastModifiedDate":"2016-10-19"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Note that non-static init blocks are not recommended to use. There are other ways to avoid duplication","lastModifiedDate":"2016-10-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     *   among constructors.","lastModifiedDate":"2016-10-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    {","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        persons \u003d new UniquePersonList();","lastModifiedDate":"2016-08-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public AddressBook() {}","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Creates an AddressBook using the Persons in the {@code toBeCopied}","lastModifiedDate":"2018-03-29"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public AddressBook(ReadOnlyAddressBook toBeCopied) {","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        this();","lastModifiedDate":"2016-12-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        resetData(toBeCopied);","lastModifiedDate":"2016-12-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    //// list overwrite operations","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * Replaces the contents of the person list with {@code persons}.","lastModifiedDate":"2018-08-07"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * {@code persons} must not contain duplicate persons.","lastModifiedDate":"2018-08-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public void setPersons(List\u003cPerson\u003e persons) {","lastModifiedDate":"2018-08-07"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        this.persons.setPersons(persons);","lastModifiedDate":"2016-10-19"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     * Resets the existing data of this {@code AddressBook} with {@code newData}.","lastModifiedDate":"2017-08-16"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void resetData(ReadOnlyAddressBook newData) {","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        requireNonNull(newData);","lastModifiedDate":"2017-05-15"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-20"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        setPersons(newData.getPersonList());","lastModifiedDate":"2018-03-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    //// person-level operations","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * Returns true if a person with the same identity as {@code person} exists in the address book.","lastModifiedDate":"2018-08-06"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-06"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        return persons.contains(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":69,"author":{"gitId":"idgrr"},"content":"    /**","lastModifiedDate":"2021-10-19"},{"lineNumber":70,"author":{"gitId":"idgrr"},"content":"     * Returns true if a person with the same identity as {@code person} exists in the address book.","lastModifiedDate":"2021-10-19"},{"lineNumber":71,"author":{"gitId":"idgrr"},"content":"     */","lastModifiedDate":"2021-10-19"},{"lineNumber":72,"author":{"gitId":"idgrr"},"content":"    public int duplicateIndex(Person person) {","lastModifiedDate":"2021-10-19"},{"lineNumber":73,"author":{"gitId":"idgrr"},"content":"        requireNonNull(person);","lastModifiedDate":"2021-10-19"},{"lineNumber":74,"author":{"gitId":"idgrr"},"content":"        return persons.indexOfDuplicate(person);","lastModifiedDate":"2021-10-19"},{"lineNumber":75,"author":{"gitId":"idgrr"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":76,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * Adds a person to the address book.","lastModifiedDate":"2016-09-21"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * The person must not already exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void addPerson(Person p) {","lastModifiedDate":"2018-08-07"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        persons.add(p);","lastModifiedDate":"2018-03-29"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * Replaces the given person {@code target} in the list with {@code editedPerson}.","lastModifiedDate":"2018-01-10"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        requireNonNull(editedPerson);","lastModifiedDate":"2018-01-10"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        persons.setPerson(target, editedPerson);","lastModifiedDate":"2018-03-29"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":96,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     * Removes {@code key} from this {@code AddressBook}.","lastModifiedDate":"2017-08-16"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     * {@code key} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    public void removePerson(Person key) {","lastModifiedDate":"2018-08-07"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        persons.remove(key);","lastModifiedDate":"2018-02-28"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    //// util methods","lastModifiedDate":"2016-08-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        return persons.asUnmodifiableObservableList().size() + \" persons\";","lastModifiedDate":"2018-04-05"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        // TODO: refine later","lastModifiedDate":"2016-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        return persons.asUnmodifiableObservableList();","lastModifiedDate":"2018-04-05"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-01"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-01"},{"lineNumber":118,"author":{"gitId":"Kangxun"},"content":"    public ObservableList\u003cPerson\u003e getModifiablePersonList() {","lastModifiedDate":"2021-10-25"},{"lineNumber":119,"author":{"gitId":"Kangxun"},"content":"        return persons.asModifiableObservableList();","lastModifiedDate":"2021-10-25"},{"lineNumber":120,"author":{"gitId":"Kangxun"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":121,"author":{"gitId":"Kangxun"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-21"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-09-21"},{"lineNumber":125,"author":{"gitId":"-"},"content":"                || (other instanceof AddressBook // instanceof handles nulls","lastModifiedDate":"2016-09-21"},{"lineNumber":126,"author":{"gitId":"-"},"content":"                \u0026\u0026 persons.equals(((AddressBook) other).persons));","lastModifiedDate":"2018-08-14"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-21"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        return persons.hashCode();","lastModifiedDate":"2018-03-29"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":133,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"idgrr":9,"-":120,"Kangxun":4}},{"path":"src/main/java/seedu/address/model/Model.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"Kangxun"},"content":"import java.util.Comparator;","lastModifiedDate":"2021-10-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * The API of the Model component.","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public interface Model {","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /** {@code Predicate} that always evaluate to true */","lastModifiedDate":"2017-08-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    Predicate\u003cPerson\u003e PREDICATE_SHOW_ALL_PERSONS \u003d unused -\u003e true;","lastModifiedDate":"2018-01-10"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * Replaces user prefs data with the data in {@code userPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    void setUserPrefs(ReadOnlyUserPrefs userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Returns the user prefs.","lastModifiedDate":"2018-11-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    ReadOnlyUserPrefs getUserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    void setAddressBookFilePath(Path addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * Replaces address book data with the data in {@code addressBook}.","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    void setAddressBook(ReadOnlyAddressBook addressBook);","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    /** Returns the AddressBook */","lastModifiedDate":"2016-09-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    ReadOnlyAddressBook getAddressBook();","lastModifiedDate":"2016-09-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * Returns true if a person with the same identity as {@code person} exists in the address book.","lastModifiedDate":"2018-08-06"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    boolean hasPerson(Person person);","lastModifiedDate":"2018-08-06"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":61,"author":{"gitId":"idgrr"},"content":"    /**","lastModifiedDate":"2021-10-19"},{"lineNumber":62,"author":{"gitId":"idgrr"},"content":"     * Returns index of duplicate. Returns -1 if does not exists","lastModifiedDate":"2021-10-19"},{"lineNumber":63,"author":{"gitId":"idgrr"},"content":"     */","lastModifiedDate":"2021-10-19"},{"lineNumber":64,"author":{"gitId":"idgrr"},"content":"    int duplicateIndex(Person person);","lastModifiedDate":"2021-10-19"},{"lineNumber":65,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     * Deletes the given person.","lastModifiedDate":"2018-08-07"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     * The person must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    void deletePerson(Person target);","lastModifiedDate":"2018-08-07"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * Adds the given person.","lastModifiedDate":"2018-08-07"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * {@code person} must not already exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    void addPerson(Person person);","lastModifiedDate":"2018-08-07"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Replaces the given person {@code target} with {@code editedPerson}.","lastModifiedDate":"2017-06-07"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    void setPerson(Person target, Person editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":85,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    /** Returns an unmodifiable view of the filtered person list */","lastModifiedDate":"2017-09-01"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    ObservableList\u003cPerson\u003e getFilteredPersonList();","lastModifiedDate":"2018-01-10"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":89,"author":{"gitId":"Kangxun"},"content":"    /** Returns an unmodifiable view of the original filtered person list */","lastModifiedDate":"2021-10-25"},{"lineNumber":90,"author":{"gitId":"Kangxun"},"content":"    ObservableList\u003cPerson\u003e getOriginalPersonList();","lastModifiedDate":"2021-10-25"},{"lineNumber":91,"author":{"gitId":"Kangxun"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-05"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * Updates the filter of the filtered person list to filter by the given {@code predicate}.","lastModifiedDate":"2017-08-05"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2017-08-05"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-05"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate);","lastModifiedDate":"2018-01-10"},{"lineNumber":97,"author":{"gitId":"Kangxun"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":98,"author":{"gitId":"Kangxun"},"content":"    /**","lastModifiedDate":"2021-10-25"},{"lineNumber":99,"author":{"gitId":"Kangxun"},"content":"     * Sort the filtered person list in alphabetically ascending order by a default ordering.","lastModifiedDate":"2021-10-25"},{"lineNumber":100,"author":{"gitId":"Kangxun"},"content":"     */","lastModifiedDate":"2021-10-25"},{"lineNumber":101,"author":{"gitId":"Kangxun"},"content":"    void sortFilteredPersonList();","lastModifiedDate":"2021-10-25"},{"lineNumber":102,"author":{"gitId":"Kangxun"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":103,"author":{"gitId":"Kangxun"},"content":"    /**","lastModifiedDate":"2021-10-25"},{"lineNumber":104,"author":{"gitId":"Kangxun"},"content":"     * Sort the filtered person list in alphabetically ascending order by the given {@code category}.","lastModifiedDate":"2021-10-25"},{"lineNumber":105,"author":{"gitId":"Kangxun"},"content":"     * @throws NullPointerException if {@code comparator} is null.","lastModifiedDate":"2021-10-25"},{"lineNumber":106,"author":{"gitId":"Kangxun"},"content":"     */","lastModifiedDate":"2021-10-25"},{"lineNumber":107,"author":{"gitId":"Kangxun"},"content":"    void sortFilteredPersonList(Comparator\u003cPerson\u003e comparator);","lastModifiedDate":"2021-10-25"},{"lineNumber":108,"author":{"gitId":"Kangxun"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":109,"author":{"gitId":"Kangxun"},"content":"    /**","lastModifiedDate":"2021-10-25"},{"lineNumber":110,"author":{"gitId":"Kangxun"},"content":"     * Limit the number of people displayed in filtered person list by the given {@code count}.","lastModifiedDate":"2021-10-25"},{"lineNumber":111,"author":{"gitId":"Kangxun"},"content":"     * @throws IllegalArgumentException if {@code count} is less than zero.","lastModifiedDate":"2021-10-25"},{"lineNumber":112,"author":{"gitId":"Kangxun"},"content":"     */","lastModifiedDate":"2021-10-25"},{"lineNumber":113,"author":{"gitId":"Kangxun"},"content":"    void limitFilteredPersonList(int count);","lastModifiedDate":"2021-10-25"},{"lineNumber":114,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"idgrr":6,"-":87,"Kangxun":21}},{"path":"src/main/java/seedu/address/model/ModelManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-08-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2017-05-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"Kangxun"},"content":"import java.util.Comparator;","lastModifiedDate":"2021-10-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import javafx.collections.transformation.FilteredList;","lastModifiedDate":"2016-08-26"},{"lineNumber":13,"author":{"gitId":"Kangxun"},"content":"import javafx.collections.transformation.SortedList;","lastModifiedDate":"2021-10-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":16,"author":{"gitId":"Kangxun"},"content":"import seedu.address.logic.comparators.NameComparator;","lastModifiedDate":"2021-10-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":" * Represents the in-memory model of the address book data.","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class ModelManager implements Model {","lastModifiedDate":"2018-12-09"},{"lineNumber":23,"author":{"gitId":"Kangxun"},"content":"    public static final String MESSAGE_INVALID_LIMIT \u003d \"Count must be more than 0.\";","lastModifiedDate":"2021-10-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(ModelManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private final AddressBook addressBook;","lastModifiedDate":"2019-01-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final UserPrefs userPrefs;","lastModifiedDate":"2018-12-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final FilteredList\u003cPerson\u003e filteredPersons;","lastModifiedDate":"2018-01-10"},{"lineNumber":29,"author":{"gitId":"Kangxun"},"content":"    private final SortedList\u003cPerson\u003e sortedPersons;","lastModifiedDate":"2021-10-25"},{"lineNumber":30,"author":{"gitId":"Kangxun"},"content":"    private ObservableList\u003cPerson\u003e source;","lastModifiedDate":"2021-10-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Initializes a ModelManager with the given addressBook and userPrefs.","lastModifiedDate":"2016-12-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public ModelManager(ReadOnlyAddressBook addressBook, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        super();","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        requireAllNonNull(addressBook, userPrefs);","lastModifiedDate":"2017-05-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        logger.fine(\"Initializing with address book: \" + addressBook + \" and user prefs \" + userPrefs);","lastModifiedDate":"2016-12-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        this.addressBook \u003d new AddressBook(addressBook);","lastModifiedDate":"2019-01-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        this.userPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":43,"author":{"gitId":"Kangxun"},"content":"        source \u003d this.addressBook.getModifiablePersonList();","lastModifiedDate":"2021-10-25"},{"lineNumber":44,"author":{"gitId":"Kangxun"},"content":"        //Wrap ObservableList into FilteredList","lastModifiedDate":"2021-10-25"},{"lineNumber":45,"author":{"gitId":"Kangxun"},"content":"        filteredPersons \u003d new FilteredList\u003c\u003e(source, person -\u003e true);","lastModifiedDate":"2021-10-25"},{"lineNumber":46,"author":{"gitId":"Kangxun"},"content":"        //Wrap ObservableList into SortedList","lastModifiedDate":"2021-10-25"},{"lineNumber":47,"author":{"gitId":"Kangxun"},"content":"        sortedPersons \u003d new SortedList\u003c\u003e(source);","lastModifiedDate":"2021-10-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public ModelManager() {","lastModifiedDate":"2016-09-22"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        this(new AddressBook(), new UserPrefs());","lastModifiedDate":"2016-09-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        requireNonNull(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        this.userPrefs.resetData(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        return userPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        return userPrefs.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        return userPrefs.getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-11-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        requireNonNull(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d AddressBook \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public void setAddressBook(ReadOnlyAddressBook addressBook) {","lastModifiedDate":"2018-11-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        this.addressBook.resetData(addressBook);","lastModifiedDate":"2019-01-25"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2016-09-21"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        return addressBook;","lastModifiedDate":"2019-01-25"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-15"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        return addressBook.hasPerson(person);","lastModifiedDate":"2019-01-25"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":107,"author":{"gitId":"idgrr"},"content":"    @Override","lastModifiedDate":"2021-10-19"},{"lineNumber":108,"author":{"gitId":"idgrr"},"content":"    public int duplicateIndex(Person person) {","lastModifiedDate":"2021-10-19"},{"lineNumber":109,"author":{"gitId":"idgrr"},"content":"        requireNonNull(person);","lastModifiedDate":"2021-10-19"},{"lineNumber":110,"author":{"gitId":"idgrr"},"content":"        return addressBook.duplicateIndex(person);","lastModifiedDate":"2021-10-19"},{"lineNumber":111,"author":{"gitId":"idgrr"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":112,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    public void deletePerson(Person target) {","lastModifiedDate":"2018-08-15"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        addressBook.removePerson(target);","lastModifiedDate":"2019-01-25"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    public void addPerson(Person person) {","lastModifiedDate":"2018-08-15"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        addressBook.addPerson(person);","lastModifiedDate":"2019-01-25"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-26"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-13"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        requireAllNonNull(target, editedPerson);","lastModifiedDate":"2017-06-07"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        addressBook.setPerson(target, editedPerson);","lastModifiedDate":"2019-01-25"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":130,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Filtered Person List Accessors \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2016-10-12"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-19"},{"lineNumber":134,"author":{"gitId":"-"},"content":"     * Returns an unmodifiable view of the list of {@code Person} backed by the internal list of","lastModifiedDate":"2018-01-10"},{"lineNumber":135,"author":{"gitId":"-"},"content":"     * {@code versionedAddressBook}","lastModifiedDate":"2018-06-11"},{"lineNumber":136,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-19"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        return filteredPersons;","lastModifiedDate":"2021-10-25"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":142,"author":{"gitId":"Kangxun"},"content":"    /**","lastModifiedDate":"2021-10-25"},{"lineNumber":143,"author":{"gitId":"Kangxun"},"content":"     * Returns the original unmodifiable view of the list of {@code Person} backed by the internal list of","lastModifiedDate":"2021-10-25"},{"lineNumber":144,"author":{"gitId":"Kangxun"},"content":"     * {@code versionedAddressBook}","lastModifiedDate":"2021-10-25"},{"lineNumber":145,"author":{"gitId":"Kangxun"},"content":"     */","lastModifiedDate":"2021-10-25"},{"lineNumber":146,"author":{"gitId":"Kangxun"},"content":"    @Override","lastModifiedDate":"2021-10-25"},{"lineNumber":147,"author":{"gitId":"Kangxun"},"content":"    public ObservableList\u003cPerson\u003e getOriginalPersonList() {","lastModifiedDate":"2021-10-25"},{"lineNumber":148,"author":{"gitId":"Kangxun"},"content":"        sortFilteredPersonList();","lastModifiedDate":"2021-10-25"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        return filteredPersons;","lastModifiedDate":"2018-12-09"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2018-01-10"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2017-08-05"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        filteredPersons.setPredicate(predicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":158,"author":{"gitId":"Kangxun"},"content":"    @Override","lastModifiedDate":"2021-10-25"},{"lineNumber":159,"author":{"gitId":"Kangxun"},"content":"    public void sortFilteredPersonList() {","lastModifiedDate":"2021-10-25"},{"lineNumber":160,"author":{"gitId":"Kangxun"},"content":"        sortedPersons.setComparator(new NameComparator());","lastModifiedDate":"2021-10-25"},{"lineNumber":161,"author":{"gitId":"Kangxun"},"content":"        source.setAll(sortedPersons);","lastModifiedDate":"2021-10-25"},{"lineNumber":162,"author":{"gitId":"Kangxun"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":163,"author":{"gitId":"Kangxun"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":164,"author":{"gitId":"Kangxun"},"content":"    @Override","lastModifiedDate":"2021-10-25"},{"lineNumber":165,"author":{"gitId":"Kangxun"},"content":"    public void sortFilteredPersonList(Comparator\u003cPerson\u003e comparator) {","lastModifiedDate":"2021-10-25"},{"lineNumber":166,"author":{"gitId":"Kangxun"},"content":"        requireNonNull(comparator);","lastModifiedDate":"2021-10-25"},{"lineNumber":167,"author":{"gitId":"Kangxun"},"content":"        sortedPersons.setComparator(comparator);","lastModifiedDate":"2021-10-25"},{"lineNumber":168,"author":{"gitId":"Kangxun"},"content":"        source.setAll(sortedPersons);","lastModifiedDate":"2021-10-25"},{"lineNumber":169,"author":{"gitId":"Kangxun"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":170,"author":{"gitId":"Kangxun"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":171,"author":{"gitId":"Kangxun"},"content":"    @Override","lastModifiedDate":"2021-10-25"},{"lineNumber":172,"author":{"gitId":"Kangxun"},"content":"    public void limitFilteredPersonList(int count) {","lastModifiedDate":"2021-10-25"},{"lineNumber":173,"author":{"gitId":"Kangxun"},"content":"        if (count \u003c 0) {","lastModifiedDate":"2021-10-25"},{"lineNumber":174,"author":{"gitId":"Kangxun"},"content":"            throw new IndexOutOfBoundsException(MESSAGE_INVALID_LIMIT);","lastModifiedDate":"2021-10-25"},{"lineNumber":175,"author":{"gitId":"Kangxun"},"content":"        }","lastModifiedDate":"2021-10-25"},{"lineNumber":176,"author":{"gitId":"Kangxun"},"content":"        Predicate\u003cPerson\u003e limit \u003d limitByCount(count);","lastModifiedDate":"2021-10-25"},{"lineNumber":177,"author":{"gitId":"Kangxun"},"content":"        updateFilteredPersonList(limit);","lastModifiedDate":"2021-10-25"},{"lineNumber":178,"author":{"gitId":"Kangxun"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":179,"author":{"gitId":"Kangxun"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":180,"author":{"gitId":"Kangxun"},"content":"    /**","lastModifiedDate":"2021-10-25"},{"lineNumber":181,"author":{"gitId":"Kangxun"},"content":"     * Returns a Predicate to limit number of {@code Person} to {@code count}","lastModifiedDate":"2021-10-25"},{"lineNumber":182,"author":{"gitId":"Kangxun"},"content":"     */","lastModifiedDate":"2021-10-25"},{"lineNumber":183,"author":{"gitId":"Kangxun"},"content":"    private Predicate\u003cPerson\u003e limitByCount(int count) {","lastModifiedDate":"2021-10-25"},{"lineNumber":184,"author":{"gitId":"Kangxun"},"content":"        var ref \u003d new Object() {","lastModifiedDate":"2021-10-25"},{"lineNumber":185,"author":{"gitId":"Kangxun"},"content":"            private Integer i \u003d count;","lastModifiedDate":"2021-10-25"},{"lineNumber":186,"author":{"gitId":"Kangxun"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":187,"author":{"gitId":"Kangxun"},"content":"            public Integer get() {","lastModifiedDate":"2021-10-25"},{"lineNumber":188,"author":{"gitId":"Kangxun"},"content":"                return i;","lastModifiedDate":"2021-10-25"},{"lineNumber":189,"author":{"gitId":"Kangxun"},"content":"            }","lastModifiedDate":"2021-10-25"},{"lineNumber":190,"author":{"gitId":"Kangxun"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":191,"author":{"gitId":"Kangxun"},"content":"            public void minus() {","lastModifiedDate":"2021-10-25"},{"lineNumber":192,"author":{"gitId":"Kangxun"},"content":"                i--;","lastModifiedDate":"2021-10-25"},{"lineNumber":193,"author":{"gitId":"Kangxun"},"content":"            }","lastModifiedDate":"2021-10-25"},{"lineNumber":194,"author":{"gitId":"Kangxun"},"content":"        };","lastModifiedDate":"2021-10-25"},{"lineNumber":195,"author":{"gitId":"Kangxun"},"content":"        Predicate\u003cPerson\u003e predicate \u003d person -\u003e {","lastModifiedDate":"2021-10-25"},{"lineNumber":196,"author":{"gitId":"Kangxun"},"content":"            if (ref.get() \u003c\u003d 0) {","lastModifiedDate":"2021-10-25"},{"lineNumber":197,"author":{"gitId":"Kangxun"},"content":"                return false;","lastModifiedDate":"2021-10-25"},{"lineNumber":198,"author":{"gitId":"Kangxun"},"content":"            }","lastModifiedDate":"2021-10-25"},{"lineNumber":199,"author":{"gitId":"Kangxun"},"content":"            ref.minus();","lastModifiedDate":"2021-10-25"},{"lineNumber":200,"author":{"gitId":"Kangxun"},"content":"            return true;","lastModifiedDate":"2021-10-25"},{"lineNumber":201,"author":{"gitId":"Kangxun"},"content":"        };","lastModifiedDate":"2021-10-25"},{"lineNumber":202,"author":{"gitId":"Kangxun"},"content":"        return predicate;","lastModifiedDate":"2021-10-25"},{"lineNumber":203,"author":{"gitId":"Kangxun"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":204,"author":{"gitId":"Kangxun"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":205,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-31"},{"lineNumber":206,"author":{"gitId":"-"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2017-05-31"},{"lineNumber":207,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-05-31"},{"lineNumber":208,"author":{"gitId":"-"},"content":"        if (obj \u003d\u003d this) {","lastModifiedDate":"2017-05-31"},{"lineNumber":209,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-31"},{"lineNumber":210,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":211,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":212,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-31"},{"lineNumber":213,"author":{"gitId":"-"},"content":"        if (!(obj instanceof ModelManager)) {","lastModifiedDate":"2017-05-31"},{"lineNumber":214,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-31"},{"lineNumber":215,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":217,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-05-31"},{"lineNumber":218,"author":{"gitId":"-"},"content":"        ModelManager other \u003d (ModelManager) obj;","lastModifiedDate":"2017-05-31"},{"lineNumber":219,"author":{"gitId":"-"},"content":"        return addressBook.equals(other.addressBook)","lastModifiedDate":"2019-01-25"},{"lineNumber":220,"author":{"gitId":"-"},"content":"                \u0026\u0026 userPrefs.equals(other.userPrefs)","lastModifiedDate":"2018-11-27"},{"lineNumber":221,"author":{"gitId":"-"},"content":"                \u0026\u0026 filteredPersons.equals(other.filteredPersons);","lastModifiedDate":"2019-01-25"},{"lineNumber":222,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":223,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":224,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"idgrr":7,"-":152,"Kangxun":65}},{"path":"src/main/java/seedu/address/model/UserPrefs.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2016-09-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Represents User\u0027s preferences.","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class UserPrefs implements ReadOnlyUserPrefs {","lastModifiedDate":"2018-11-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private GuiSettings guiSettings \u003d new GuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private Path addressBookFilePath \u003d Paths.get(\"data\" , \"addressbook.json\");","lastModifiedDate":"2018-11-27"},{"lineNumber":18,"author":{"gitId":"idgrr"},"content":"    private Path importPath \u003d Paths.get(\"data\" , \"import.csv\");","lastModifiedDate":"2021-10-24"},{"lineNumber":19,"author":{"gitId":"idgrr"},"content":"    private Path exportPath \u003d Paths.get(\"data\");","lastModifiedDate":"2021-10-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Creates a {@code UserPrefs} with default values.","lastModifiedDate":"2018-12-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public UserPrefs() {}","lastModifiedDate":"2018-12-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * Creates a {@code UserPrefs} with the prefs in {@code userPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public UserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        this();","lastModifiedDate":"2018-12-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        resetData(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Resets the existing data of this {@code UserPrefs} with {@code newUserPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void resetData(ReadOnlyUserPrefs newUserPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        requireNonNull(newUserPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        setGuiSettings(newUserPrefs.getGuiSettings());","lastModifiedDate":"2018-12-06"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        setAddressBookFilePath(newUserPrefs.getAddressBookFilePath());","lastModifiedDate":"2018-12-06"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-06"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return guiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        this.guiSettings \u003d guiSettings;","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        return addressBookFilePath;","lastModifiedDate":"2017-02-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        requireNonNull(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        this.addressBookFilePath \u003d addressBookFilePath;","lastModifiedDate":"2017-02-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":61,"author":{"gitId":"idgrr"},"content":"    public Path getImportPath() {","lastModifiedDate":"2021-10-24"},{"lineNumber":62,"author":{"gitId":"idgrr"},"content":"        return this.importPath;","lastModifiedDate":"2021-10-24"},{"lineNumber":63,"author":{"gitId":"idgrr"},"content":"    }","lastModifiedDate":"2021-09-29"},{"lineNumber":64,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":65,"author":{"gitId":"idgrr"},"content":"    public Path getExportPath() {","lastModifiedDate":"2021-10-24"},{"lineNumber":66,"author":{"gitId":"idgrr"},"content":"        return this.exportPath;","lastModifiedDate":"2021-10-24"},{"lineNumber":67,"author":{"gitId":"idgrr"},"content":"    }","lastModifiedDate":"2021-09-29"},{"lineNumber":68,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":69,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2016-09-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2016-09-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        if (!(other instanceof UserPrefs)) { //this handles null as well.","lastModifiedDate":"2016-09-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-09-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        UserPrefs o \u003d (UserPrefs) other;","lastModifiedDate":"2016-09-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        return guiSettings.equals(o.guiSettings)","lastModifiedDate":"2018-11-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"                \u0026\u0026 addressBookFilePath.equals(o.addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        return Objects.hash(guiSettings, addressBookFilePath);","lastModifiedDate":"2018-08-09"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-09-24"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2017-02-25"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        sb.append(\"Gui Settings : \" + guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        sb.append(\"\\nLocal data file location : \" + addressBookFilePath);","lastModifiedDate":"2017-02-25"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2017-02-25"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":98,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"idgrr":11,"-":87}},{"path":"src/main/java/seedu/address/model/category/Category.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Kangxun"},"content":"package seedu.address.model.category;","lastModifiedDate":"2021-10-09"},{"lineNumber":2,"author":{"gitId":"Kangxun"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":3,"author":{"gitId":"Kangxun"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-09"},{"lineNumber":4,"author":{"gitId":"Kangxun"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2021-10-09"},{"lineNumber":5,"author":{"gitId":"Kangxun"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":6,"author":{"gitId":"Kangxun"},"content":"import java.util.Locale;","lastModifiedDate":"2021-10-09"},{"lineNumber":7,"author":{"gitId":"Kangxun"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":8,"author":{"gitId":"Kangxun"},"content":"/**","lastModifiedDate":"2021-10-09"},{"lineNumber":9,"author":{"gitId":"Kangxun"},"content":" * Represents a Category in the address book.","lastModifiedDate":"2021-10-09"},{"lineNumber":10,"author":{"gitId":"Kangxun"},"content":" * Guarantees: immutable; name is valid as declared in {@link #isValidCategory(String)}","lastModifiedDate":"2021-10-09"},{"lineNumber":11,"author":{"gitId":"Kangxun"},"content":" */","lastModifiedDate":"2021-10-09"},{"lineNumber":12,"author":{"gitId":"Kangxun"},"content":"public class Category {","lastModifiedDate":"2021-10-09"},{"lineNumber":13,"author":{"gitId":"Kangxun"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":14,"author":{"gitId":"Kangxun"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Category can only be one of the person attributes\";","lastModifiedDate":"2021-10-09"},{"lineNumber":15,"author":{"gitId":"Kangxun"},"content":"    public static final String VALIDATION_REGEX \u003d \"NAME|PHONE|EMAIL|CALLED|ADDRESS|GENDER|AGE|INTERESTS\";","lastModifiedDate":"2021-10-09"},{"lineNumber":16,"author":{"gitId":"Kangxun"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":17,"author":{"gitId":"Kangxun"},"content":"    public final String category;","lastModifiedDate":"2021-10-09"},{"lineNumber":18,"author":{"gitId":"Kangxun"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":19,"author":{"gitId":"Kangxun"},"content":"    /**","lastModifiedDate":"2021-10-09"},{"lineNumber":20,"author":{"gitId":"Kangxun"},"content":"     * Constructs a {@code Category}.","lastModifiedDate":"2021-10-09"},{"lineNumber":21,"author":{"gitId":"Kangxun"},"content":"     *","lastModifiedDate":"2021-10-09"},{"lineNumber":22,"author":{"gitId":"Kangxun"},"content":"     * @param category A valid category.","lastModifiedDate":"2021-10-09"},{"lineNumber":23,"author":{"gitId":"Kangxun"},"content":"     */","lastModifiedDate":"2021-10-09"},{"lineNumber":24,"author":{"gitId":"Kangxun"},"content":"    public Category(String category) {","lastModifiedDate":"2021-10-09"},{"lineNumber":25,"author":{"gitId":"Kangxun"},"content":"        requireNonNull(category);","lastModifiedDate":"2021-10-09"},{"lineNumber":26,"author":{"gitId":"Kangxun"},"content":"        String categoryUpperCase \u003d category.toUpperCase(Locale.ROOT);","lastModifiedDate":"2021-10-09"},{"lineNumber":27,"author":{"gitId":"Kangxun"},"content":"        checkArgument(isValidCategory(categoryUpperCase), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-09"},{"lineNumber":28,"author":{"gitId":"Kangxun"},"content":"        this.category \u003d categoryUpperCase;","lastModifiedDate":"2021-10-09"},{"lineNumber":29,"author":{"gitId":"Kangxun"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":30,"author":{"gitId":"Kangxun"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":31,"author":{"gitId":"Kangxun"},"content":"    /**","lastModifiedDate":"2021-10-09"},{"lineNumber":32,"author":{"gitId":"Kangxun"},"content":"     * Returns true if a given string is a valid category.","lastModifiedDate":"2021-10-25"},{"lineNumber":33,"author":{"gitId":"Kangxun"},"content":"     */","lastModifiedDate":"2021-10-09"},{"lineNumber":34,"author":{"gitId":"Kangxun"},"content":"    public static boolean isValidCategory(String test) {","lastModifiedDate":"2021-10-09"},{"lineNumber":35,"author":{"gitId":"Kangxun"},"content":"        String testUpperCase \u003d test.toUpperCase(Locale.ROOT);","lastModifiedDate":"2021-10-09"},{"lineNumber":36,"author":{"gitId":"Kangxun"},"content":"        return testUpperCase.matches(VALIDATION_REGEX);","lastModifiedDate":"2021-10-09"},{"lineNumber":37,"author":{"gitId":"Kangxun"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":38,"author":{"gitId":"Kangxun"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":39,"author":{"gitId":"Kangxun"},"content":"    @Override","lastModifiedDate":"2021-10-09"},{"lineNumber":40,"author":{"gitId":"Kangxun"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-09"},{"lineNumber":41,"author":{"gitId":"Kangxun"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-09"},{"lineNumber":42,"author":{"gitId":"Kangxun"},"content":"                || (other instanceof Category // instanceof handles nulls","lastModifiedDate":"2021-10-09"},{"lineNumber":43,"author":{"gitId":"Kangxun"},"content":"                \u0026\u0026 category.equals(((Category) other).category)); // state check","lastModifiedDate":"2021-10-09"},{"lineNumber":44,"author":{"gitId":"Kangxun"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":45,"author":{"gitId":"Kangxun"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":46,"author":{"gitId":"Kangxun"},"content":"    @Override","lastModifiedDate":"2021-10-09"},{"lineNumber":47,"author":{"gitId":"Kangxun"},"content":"    public int hashCode() {","lastModifiedDate":"2021-10-09"},{"lineNumber":48,"author":{"gitId":"Kangxun"},"content":"        return category.hashCode();","lastModifiedDate":"2021-10-09"},{"lineNumber":49,"author":{"gitId":"Kangxun"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":50,"author":{"gitId":"Kangxun"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":51,"author":{"gitId":"Kangxun"},"content":"    /**","lastModifiedDate":"2021-10-09"},{"lineNumber":52,"author":{"gitId":"Kangxun"},"content":"     * Format state as text for viewing.","lastModifiedDate":"2021-10-09"},{"lineNumber":53,"author":{"gitId":"Kangxun"},"content":"     */","lastModifiedDate":"2021-10-09"},{"lineNumber":54,"author":{"gitId":"Kangxun"},"content":"    public String toString() {","lastModifiedDate":"2021-10-09"},{"lineNumber":55,"author":{"gitId":"Kangxun"},"content":"        return \u0027[\u0027 + category + \u0027]\u0027;","lastModifiedDate":"2021-10-09"},{"lineNumber":56,"author":{"gitId":"Kangxun"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":57,"author":{"gitId":"Kangxun"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":58,"author":{"gitId":"Kangxun"},"content":"}","lastModifiedDate":"2021-10-09"}],"authorContributionMap":{"Kangxun":58}},{"path":"src/main/java/seedu/address/model/person/Address.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2016-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-30"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":5,"author":{"gitId":"houtenteo"},"content":"import java.util.Locale;","lastModifiedDate":"2021-11-08"},{"lineNumber":6,"author":{"gitId":"houtenteo"},"content":"import java.util.Objects;","lastModifiedDate":"2021-10-18"},{"lineNumber":7,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Represents a Person\u0027s address in the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidAddress(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class Address {","lastModifiedDate":"2016-09-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"houtenteo"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Addresses can take any values, but should not be an empty string\";","lastModifiedDate":"2021-10-18"},{"lineNumber":15,"author":{"gitId":"houtenteo"},"content":"    public static final String NO_ADDRESS \u003d \"N.A\";","lastModifiedDate":"2021-10-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2017-01-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * The first character of the address must not be a whitespace,","lastModifiedDate":"2017-01-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2017-01-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-16"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"[^\\\\s].*\";","lastModifiedDate":"2018-09-22"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public final String value;","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * Constructs an {@code Address}.","lastModifiedDate":"2017-05-30"},{"lineNumber":27,"author":{"gitId":"houtenteo"},"content":"     * If no address is provided(i.e. @param address \u003d null), default value of \u0027N.A\u0027 will be given","lastModifiedDate":"2021-10-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * @param address A valid address.","lastModifiedDate":"2017-05-30"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public Address(String address) {","lastModifiedDate":"2017-05-30"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        checkArgument(isValidAddress(address), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-05"},{"lineNumber":32,"author":{"gitId":"houtenteo"},"content":"        value \u003d Objects.requireNonNullElse(address, NO_ADDRESS);","lastModifiedDate":"2021-10-18"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-02"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid email.","lastModifiedDate":"2018-04-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static boolean isValidAddress(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"houtenteo"},"content":"        if (test \u003d\u003d null) {","lastModifiedDate":"2021-10-18"},{"lineNumber":40,"author":{"gitId":"houtenteo"},"content":"            return true;","lastModifiedDate":"2021-10-18"},{"lineNumber":41,"author":{"gitId":"houtenteo"},"content":"        }","lastModifiedDate":"2021-10-18"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"houtenteo"},"content":"    /**","lastModifiedDate":"2021-10-18"},{"lineNumber":46,"author":{"gitId":"houtenteo"},"content":"     * Checks if there is a proper value.","lastModifiedDate":"2021-10-18"},{"lineNumber":47,"author":{"gitId":"houtenteo"},"content":"     * @return True if value equals to \"N.A\", false otherwise.","lastModifiedDate":"2021-10-18"},{"lineNumber":48,"author":{"gitId":"houtenteo"},"content":"     */","lastModifiedDate":"2021-10-18"},{"lineNumber":49,"author":{"gitId":"houtenteo"},"content":"    public boolean isEmpty() {","lastModifiedDate":"2021-10-18"},{"lineNumber":50,"author":{"gitId":"houtenteo"},"content":"        return value.equals(NO_ADDRESS);","lastModifiedDate":"2021-10-18"},{"lineNumber":51,"author":{"gitId":"houtenteo"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":52,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        return value;","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"                || (other instanceof Address // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":62,"author":{"gitId":"houtenteo"},"content":"                \u0026\u0026 value.toLowerCase(Locale.ROOT).equals(((Address) other).value","lastModifiedDate":"2021-11-08"},{"lineNumber":63,"author":{"gitId":"houtenteo"},"content":"                    .toLowerCase(Locale.ROOT))); // state check","lastModifiedDate":"2021-11-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return value.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"houtenteo":20,"-":51}},{"path":"src/main/java/seedu/address/model/person/Age.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"houtenteo"},"content":"package seedu.address.model.person;","lastModifiedDate":"2021-10-18"},{"lineNumber":2,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":3,"author":{"gitId":"houtenteo"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2021-10-18"},{"lineNumber":4,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":5,"author":{"gitId":"houtenteo"},"content":"import java.util.Objects;","lastModifiedDate":"2021-10-18"},{"lineNumber":6,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":7,"author":{"gitId":"houtenteo"},"content":"public class Age {","lastModifiedDate":"2021-10-18"},{"lineNumber":8,"author":{"gitId":"houtenteo"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Age should only contain numbers.\";","lastModifiedDate":"2021-10-18"},{"lineNumber":9,"author":{"gitId":"houtenteo"},"content":"    public static final String NO_AGE \u003d \"N.A\";","lastModifiedDate":"2021-10-18"},{"lineNumber":10,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":11,"author":{"gitId":"houtenteo"},"content":"    // Age should only contain numbers","lastModifiedDate":"2021-10-18"},{"lineNumber":12,"author":{"gitId":"houtenteo"},"content":"    public static final String VALIDATION_REGEX \u003d \"[0-9]+\";","lastModifiedDate":"2021-10-18"},{"lineNumber":13,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":14,"author":{"gitId":"houtenteo"},"content":"    public final String value;","lastModifiedDate":"2021-10-18"},{"lineNumber":15,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":16,"author":{"gitId":"houtenteo"},"content":"    /**","lastModifiedDate":"2021-10-18"},{"lineNumber":17,"author":{"gitId":"houtenteo"},"content":"     * Constructs an {@code Age}.","lastModifiedDate":"2021-10-18"},{"lineNumber":18,"author":{"gitId":"houtenteo"},"content":"     * If no age is provided(i.e. @param age \u003d null), default value of \u0027N.A\u0027 will be given","lastModifiedDate":"2021-10-18"},{"lineNumber":19,"author":{"gitId":"houtenteo"},"content":"     * @param age A valid age.","lastModifiedDate":"2021-10-18"},{"lineNumber":20,"author":{"gitId":"houtenteo"},"content":"     */","lastModifiedDate":"2021-10-18"},{"lineNumber":21,"author":{"gitId":"houtenteo"},"content":"    public Age(String age) {","lastModifiedDate":"2021-10-18"},{"lineNumber":22,"author":{"gitId":"houtenteo"},"content":"        checkArgument(isValidAge(age), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-18"},{"lineNumber":23,"author":{"gitId":"houtenteo"},"content":"        value \u003d Objects.requireNonNullElse(age, NO_AGE);","lastModifiedDate":"2021-10-18"},{"lineNumber":24,"author":{"gitId":"houtenteo"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":25,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":26,"author":{"gitId":"houtenteo"},"content":"    /**","lastModifiedDate":"2021-10-18"},{"lineNumber":27,"author":{"gitId":"houtenteo"},"content":"     * Returns true if a given string is a valid age.","lastModifiedDate":"2021-10-18"},{"lineNumber":28,"author":{"gitId":"houtenteo"},"content":"     */","lastModifiedDate":"2021-10-18"},{"lineNumber":29,"author":{"gitId":"houtenteo"},"content":"    public static boolean isValidAge(String test) {","lastModifiedDate":"2021-10-18"},{"lineNumber":30,"author":{"gitId":"houtenteo"},"content":"        if (test \u003d\u003d null) {","lastModifiedDate":"2021-10-18"},{"lineNumber":31,"author":{"gitId":"houtenteo"},"content":"            return true;","lastModifiedDate":"2021-10-18"},{"lineNumber":32,"author":{"gitId":"houtenteo"},"content":"        }","lastModifiedDate":"2021-10-18"},{"lineNumber":33,"author":{"gitId":"houtenteo"},"content":"        if (test.equals(NO_AGE)) {","lastModifiedDate":"2021-10-18"},{"lineNumber":34,"author":{"gitId":"houtenteo"},"content":"            return true;","lastModifiedDate":"2021-10-18"},{"lineNumber":35,"author":{"gitId":"houtenteo"},"content":"        }","lastModifiedDate":"2021-10-18"},{"lineNumber":36,"author":{"gitId":"houtenteo"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2021-10-18"},{"lineNumber":37,"author":{"gitId":"houtenteo"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":38,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":39,"author":{"gitId":"houtenteo"},"content":"    /**","lastModifiedDate":"2021-10-18"},{"lineNumber":40,"author":{"gitId":"houtenteo"},"content":"     * Checks if there is a proper value.","lastModifiedDate":"2021-10-18"},{"lineNumber":41,"author":{"gitId":"houtenteo"},"content":"     * @return True if value equals to \"N.A\", false otherwise.","lastModifiedDate":"2021-10-18"},{"lineNumber":42,"author":{"gitId":"houtenteo"},"content":"     */","lastModifiedDate":"2021-10-18"},{"lineNumber":43,"author":{"gitId":"houtenteo"},"content":"    public boolean isEmpty() {","lastModifiedDate":"2021-10-18"},{"lineNumber":44,"author":{"gitId":"houtenteo"},"content":"        return value.equals(NO_AGE);","lastModifiedDate":"2021-10-18"},{"lineNumber":45,"author":{"gitId":"houtenteo"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":46,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":47,"author":{"gitId":"houtenteo"},"content":"    @Override","lastModifiedDate":"2021-10-18"},{"lineNumber":48,"author":{"gitId":"houtenteo"},"content":"    public String toString() {","lastModifiedDate":"2021-10-18"},{"lineNumber":49,"author":{"gitId":"houtenteo"},"content":"        return value;","lastModifiedDate":"2021-10-18"},{"lineNumber":50,"author":{"gitId":"houtenteo"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":51,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":52,"author":{"gitId":"houtenteo"},"content":"    @Override","lastModifiedDate":"2021-10-18"},{"lineNumber":53,"author":{"gitId":"houtenteo"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-18"},{"lineNumber":54,"author":{"gitId":"houtenteo"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-18"},{"lineNumber":55,"author":{"gitId":"houtenteo"},"content":"                || (other instanceof Age // instanceof handles nulls","lastModifiedDate":"2021-10-18"},{"lineNumber":56,"author":{"gitId":"houtenteo"},"content":"                \u0026\u0026 value.equals(((Age) other).value)); // state check","lastModifiedDate":"2021-10-18"},{"lineNumber":57,"author":{"gitId":"houtenteo"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":58,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":59,"author":{"gitId":"houtenteo"},"content":"    @Override","lastModifiedDate":"2021-10-18"},{"lineNumber":60,"author":{"gitId":"houtenteo"},"content":"    public int hashCode() {","lastModifiedDate":"2021-10-18"},{"lineNumber":61,"author":{"gitId":"houtenteo"},"content":"        return value.hashCode();","lastModifiedDate":"2021-10-18"},{"lineNumber":62,"author":{"gitId":"houtenteo"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":63,"author":{"gitId":"houtenteo"},"content":"}","lastModifiedDate":"2021-10-18"},{"lineNumber":64,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-18"}],"authorContributionMap":{"houtenteo":64}},{"path":"src/main/java/seedu/address/model/person/Email.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2016-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"houtenteo"},"content":"import java.util.Locale;","lastModifiedDate":"2021-11-08"},{"lineNumber":7,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Represents a Person\u0027s email in the address book.","lastModifiedDate":"2018-02-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidEmail(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class Email {","lastModifiedDate":"2016-09-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private static final String SPECIAL_CHARACTERS \u003d \"+_.-\";","lastModifiedDate":"2021-07-20"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Emails should be of the format local-part@domain \"","lastModifiedDate":"2018-09-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"            + \"and adhere to the following constraints:\\n\"","lastModifiedDate":"2018-02-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"            + \"1. The local-part should only contain alphanumeric characters and these special characters, excluding \"","lastModifiedDate":"2018-02-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"            + \"the parentheses, (\" + SPECIAL_CHARACTERS + \"). The local-part may not start or end with any special \"","lastModifiedDate":"2021-07-20"},{"lineNumber":19,"author":{"gitId":"-"},"content":"            + \"characters.\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            + \"2. This is followed by a \u0027@\u0027 and then a domain name. The domain name is made up of domain labels \"","lastModifiedDate":"2021-07-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            + \"separated by periods.\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            + \"The domain name must:\\n\"","lastModifiedDate":"2018-02-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            + \"    - end with a domain label at least 2 characters long\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            + \"    - have each domain label start and end with alphanumeric characters\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"            + \"    - have each domain label consist of alphanumeric characters, separated only by hyphens, if any.\";","lastModifiedDate":"2021-07-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    // alphanumeric and special characters","lastModifiedDate":"2018-02-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private static final String ALPHANUMERIC_NO_UNDERSCORE \u003d \"[^\\\\W_]+\"; // alphanumeric characters except underscore","lastModifiedDate":"2021-07-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final String LOCAL_PART_REGEX \u003d \"^\" + ALPHANUMERIC_NO_UNDERSCORE + \"([\" + SPECIAL_CHARACTERS + \"]\"","lastModifiedDate":"2021-07-20"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            + ALPHANUMERIC_NO_UNDERSCORE + \")*\";","lastModifiedDate":"2021-07-20"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private static final String DOMAIN_PART_REGEX \u003d ALPHANUMERIC_NO_UNDERSCORE","lastModifiedDate":"2021-07-20"},{"lineNumber":31,"author":{"gitId":"-"},"content":"            + \"(-\" + ALPHANUMERIC_NO_UNDERSCORE + \")*\";","lastModifiedDate":"2021-07-20"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private static final String DOMAIN_LAST_PART_REGEX \u003d \"(\" + DOMAIN_PART_REGEX + \"){2,}$\"; // At least two chars","lastModifiedDate":"2021-07-20"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private static final String DOMAIN_REGEX \u003d \"(\" + DOMAIN_PART_REGEX + \"\\\\.)*\" + DOMAIN_LAST_PART_REGEX;","lastModifiedDate":"2021-07-20"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d LOCAL_PART_REGEX + \"@\" + DOMAIN_REGEX;","lastModifiedDate":"2021-07-20"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public final String value;","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * Constructs an {@code Email}.","lastModifiedDate":"2017-05-30"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * @param email A valid email address.","lastModifiedDate":"2017-05-30"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public Email(String email) {","lastModifiedDate":"2017-05-30"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        requireNonNull(email);","lastModifiedDate":"2017-05-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        checkArgument(isValidEmail(email), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        value \u003d email;","lastModifiedDate":"2018-08-14"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * Returns if a given string is a valid email.","lastModifiedDate":"2018-04-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public static boolean isValidEmail(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        return value;","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"                || (other instanceof Email // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":65,"author":{"gitId":"houtenteo"},"content":"                \u0026\u0026 value.toLowerCase(Locale.ROOT).equals(((Email) other).value","lastModifiedDate":"2021-11-08"},{"lineNumber":66,"author":{"gitId":"houtenteo"},"content":"                    .toLowerCase(Locale.ROOT))); // state check","lastModifiedDate":"2021-11-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        return value.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"houtenteo":4,"-":70}},{"path":"src/main/java/seedu/address/model/person/Gender.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"houtenteo"},"content":"package seedu.address.model.person;","lastModifiedDate":"2021-10-18"},{"lineNumber":2,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":3,"author":{"gitId":"houtenteo"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2021-10-18"},{"lineNumber":4,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":5,"author":{"gitId":"houtenteo"},"content":"import java.util.Locale;","lastModifiedDate":"2021-10-18"},{"lineNumber":6,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":7,"author":{"gitId":"houtenteo"},"content":"public class Gender {","lastModifiedDate":"2021-10-18"},{"lineNumber":8,"author":{"gitId":"houtenteo"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Gender can only be \u0027M\u0027 or \u0027F\u0027\";","lastModifiedDate":"2021-10-18"},{"lineNumber":9,"author":{"gitId":"houtenteo"},"content":"    public static final String NO_GENDER \u003d \"N.A\";","lastModifiedDate":"2021-10-18"},{"lineNumber":10,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":11,"author":{"gitId":"houtenteo"},"content":"    public static final String VALIDATION_REGEX \u003d \"M|F|N.A\";","lastModifiedDate":"2021-10-18"},{"lineNumber":12,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":13,"author":{"gitId":"houtenteo"},"content":"    public final String value;","lastModifiedDate":"2021-10-18"},{"lineNumber":14,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":15,"author":{"gitId":"houtenteo"},"content":"    /**","lastModifiedDate":"2021-10-18"},{"lineNumber":16,"author":{"gitId":"houtenteo"},"content":"     * Constructs an {@code Gender}.","lastModifiedDate":"2021-10-18"},{"lineNumber":17,"author":{"gitId":"houtenteo"},"content":"     * If no gender is provided(i.e. @param address \u003d null), default value of \u0027N.A\u0027 will be given","lastModifiedDate":"2021-10-18"},{"lineNumber":18,"author":{"gitId":"houtenteo"},"content":"     * @param gender A valid gender.","lastModifiedDate":"2021-10-18"},{"lineNumber":19,"author":{"gitId":"houtenteo"},"content":"     */","lastModifiedDate":"2021-10-18"},{"lineNumber":20,"author":{"gitId":"houtenteo"},"content":"    public Gender(String gender) {","lastModifiedDate":"2021-10-18"},{"lineNumber":21,"author":{"gitId":"houtenteo"},"content":"        checkArgument(isValidGender(gender), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-18"},{"lineNumber":22,"author":{"gitId":"houtenteo"},"content":"        if (gender \u003d\u003d null) {","lastModifiedDate":"2021-10-18"},{"lineNumber":23,"author":{"gitId":"houtenteo"},"content":"            value \u003d NO_GENDER;","lastModifiedDate":"2021-10-18"},{"lineNumber":24,"author":{"gitId":"houtenteo"},"content":"        } else {","lastModifiedDate":"2021-10-18"},{"lineNumber":25,"author":{"gitId":"houtenteo"},"content":"            value \u003d gender.toUpperCase(Locale.ROOT);","lastModifiedDate":"2021-10-18"},{"lineNumber":26,"author":{"gitId":"houtenteo"},"content":"        }","lastModifiedDate":"2021-10-18"},{"lineNumber":27,"author":{"gitId":"houtenteo"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":28,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":29,"author":{"gitId":"houtenteo"},"content":"    /**","lastModifiedDate":"2021-10-18"},{"lineNumber":30,"author":{"gitId":"houtenteo"},"content":"     * Returns true if a given string is a valid email.","lastModifiedDate":"2021-10-18"},{"lineNumber":31,"author":{"gitId":"houtenteo"},"content":"     */","lastModifiedDate":"2021-10-18"},{"lineNumber":32,"author":{"gitId":"houtenteo"},"content":"    public static Boolean isValidGender(String gender) {","lastModifiedDate":"2021-10-18"},{"lineNumber":33,"author":{"gitId":"houtenteo"},"content":"        if (gender \u003d\u003d null) {","lastModifiedDate":"2021-10-18"},{"lineNumber":34,"author":{"gitId":"houtenteo"},"content":"            return true;","lastModifiedDate":"2021-10-18"},{"lineNumber":35,"author":{"gitId":"houtenteo"},"content":"        }","lastModifiedDate":"2021-10-18"},{"lineNumber":36,"author":{"gitId":"houtenteo"},"content":"        String test \u003d gender.toUpperCase(Locale.ROOT);","lastModifiedDate":"2021-10-18"},{"lineNumber":37,"author":{"gitId":"houtenteo"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2021-10-18"},{"lineNumber":38,"author":{"gitId":"houtenteo"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":39,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":40,"author":{"gitId":"houtenteo"},"content":"    /**","lastModifiedDate":"2021-10-18"},{"lineNumber":41,"author":{"gitId":"houtenteo"},"content":"     * Checks if there is a proper value.","lastModifiedDate":"2021-10-18"},{"lineNumber":42,"author":{"gitId":"houtenteo"},"content":"     * @return True if value equals to \"N.A\", false otherwise.","lastModifiedDate":"2021-10-18"},{"lineNumber":43,"author":{"gitId":"houtenteo"},"content":"     */","lastModifiedDate":"2021-10-18"},{"lineNumber":44,"author":{"gitId":"houtenteo"},"content":"    public boolean isEmpty() {","lastModifiedDate":"2021-10-18"},{"lineNumber":45,"author":{"gitId":"houtenteo"},"content":"        return value.equals(NO_GENDER);","lastModifiedDate":"2021-10-18"},{"lineNumber":46,"author":{"gitId":"houtenteo"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":47,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":48,"author":{"gitId":"houtenteo"},"content":"    @Override","lastModifiedDate":"2021-10-18"},{"lineNumber":49,"author":{"gitId":"houtenteo"},"content":"    public String toString() {","lastModifiedDate":"2021-10-18"},{"lineNumber":50,"author":{"gitId":"houtenteo"},"content":"        return value;","lastModifiedDate":"2021-10-18"},{"lineNumber":51,"author":{"gitId":"houtenteo"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":52,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":53,"author":{"gitId":"houtenteo"},"content":"    @Override","lastModifiedDate":"2021-10-18"},{"lineNumber":54,"author":{"gitId":"houtenteo"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-18"},{"lineNumber":55,"author":{"gitId":"houtenteo"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-18"},{"lineNumber":56,"author":{"gitId":"houtenteo"},"content":"                || (other instanceof Gender // instanceof handles nulls","lastModifiedDate":"2021-10-18"},{"lineNumber":57,"author":{"gitId":"houtenteo"},"content":"                \u0026\u0026 value.equals(((Gender) other).value)); // state check","lastModifiedDate":"2021-10-18"},{"lineNumber":58,"author":{"gitId":"houtenteo"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":59,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":60,"author":{"gitId":"houtenteo"},"content":"    @Override","lastModifiedDate":"2021-10-18"},{"lineNumber":61,"author":{"gitId":"houtenteo"},"content":"    public int hashCode() {","lastModifiedDate":"2021-10-18"},{"lineNumber":62,"author":{"gitId":"houtenteo"},"content":"        return value.hashCode();","lastModifiedDate":"2021-10-18"},{"lineNumber":63,"author":{"gitId":"houtenteo"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":64,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":65,"author":{"gitId":"houtenteo"},"content":"}","lastModifiedDate":"2021-10-18"},{"lineNumber":66,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-18"}],"authorContributionMap":{"houtenteo":66}},{"path":"src/main/java/seedu/address/model/person/IsCalled.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Kangxun"},"content":"package seedu.address.model.person;","lastModifiedDate":"2021-09-23"},{"lineNumber":2,"author":{"gitId":"Kangxun"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":3,"author":{"gitId":"Kangxun"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-09-23"},{"lineNumber":4,"author":{"gitId":"idgrr"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2021-10-03"},{"lineNumber":5,"author":{"gitId":"Kangxun"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":6,"author":{"gitId":"idgrr"},"content":"import java.util.Locale;","lastModifiedDate":"2021-10-02"},{"lineNumber":7,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":8,"author":{"gitId":"Kangxun"},"content":"/**","lastModifiedDate":"2021-09-23"},{"lineNumber":9,"author":{"gitId":"Kangxun"},"content":" * Represents whether a Person is called in the address book.","lastModifiedDate":"2021-09-23"},{"lineNumber":10,"author":{"gitId":"Kangxun"},"content":" */","lastModifiedDate":"2021-09-23"},{"lineNumber":11,"author":{"gitId":"pranav-ganesh"},"content":"public class IsCalled {","lastModifiedDate":"2021-11-04"},{"lineNumber":12,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":13,"author":{"gitId":"pranav-ganesh"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Called has to either be TRUE or FALSE\";","lastModifiedDate":"2021-11-04"},{"lineNumber":14,"author":{"gitId":"idgrr"},"content":"    public final boolean value;","lastModifiedDate":"2021-10-03"},{"lineNumber":15,"author":{"gitId":"Kangxun"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":16,"author":{"gitId":"Kangxun"},"content":"    /**","lastModifiedDate":"2021-09-24"},{"lineNumber":17,"author":{"gitId":"pranav-ganesh"},"content":"     * Constructs an {@code IsCalled}.","lastModifiedDate":"2021-11-04"},{"lineNumber":18,"author":{"gitId":"Kangxun"},"content":"     *","lastModifiedDate":"2021-09-24"},{"lineNumber":19,"author":{"gitId":"pranav-ganesh"},"content":"     * @param isCalled Indication whether person is called.","lastModifiedDate":"2021-11-04"},{"lineNumber":20,"author":{"gitId":"Kangxun"},"content":"     */","lastModifiedDate":"2021-09-24"},{"lineNumber":21,"author":{"gitId":"pranav-ganesh"},"content":"    public IsCalled(String isCalled) {","lastModifiedDate":"2021-11-04"},{"lineNumber":22,"author":{"gitId":"pranav-ganesh"},"content":"        requireNonNull(isCalled);","lastModifiedDate":"2021-11-04"},{"lineNumber":23,"author":{"gitId":"pranav-ganesh"},"content":"        checkArgument(isValidIsCalled(isCalled), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-11-04"},{"lineNumber":24,"author":{"gitId":"pranav-ganesh"},"content":"        value \u003d isCalled.toUpperCase(Locale.ROOT).equals(\"TRUE\");","lastModifiedDate":"2021-11-04"},{"lineNumber":25,"author":{"gitId":"idgrr"},"content":"    }","lastModifiedDate":"2021-10-02"},{"lineNumber":26,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":27,"author":{"gitId":"idgrr"},"content":"    /**","lastModifiedDate":"2021-10-02"},{"lineNumber":28,"author":{"gitId":"pranav-ganesh"},"content":"     * Returns true if a given string is a valid IsCalled.","lastModifiedDate":"2021-11-04"},{"lineNumber":29,"author":{"gitId":"idgrr"},"content":"     */","lastModifiedDate":"2021-10-02"},{"lineNumber":30,"author":{"gitId":"pranav-ganesh"},"content":"    public static boolean isValidIsCalled(String test) {","lastModifiedDate":"2021-11-04"},{"lineNumber":31,"author":{"gitId":"idgrr"},"content":"        String testValid \u003d test.toUpperCase(Locale.ROOT);","lastModifiedDate":"2021-10-02"},{"lineNumber":32,"author":{"gitId":"idgrr"},"content":"        return testValid.equals(\"TRUE\") || testValid.equals(\"FALSE\") || testValid.equals(\"\");","lastModifiedDate":"2021-10-02"},{"lineNumber":33,"author":{"gitId":"Kangxun"},"content":"    }","lastModifiedDate":"2021-09-23"},{"lineNumber":34,"author":{"gitId":"Kangxun"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":35,"author":{"gitId":"Kangxun"},"content":"    @Override","lastModifiedDate":"2021-09-23"},{"lineNumber":36,"author":{"gitId":"Kangxun"},"content":"    public String toString() {","lastModifiedDate":"2021-09-23"},{"lineNumber":37,"author":{"gitId":"idgrr"},"content":"        if (value) {","lastModifiedDate":"2021-10-03"},{"lineNumber":38,"author":{"gitId":"Kangxun"},"content":"            return \"True\";","lastModifiedDate":"2021-09-23"},{"lineNumber":39,"author":{"gitId":"Kangxun"},"content":"        }","lastModifiedDate":"2021-09-23"},{"lineNumber":40,"author":{"gitId":"Kangxun"},"content":"        return \"False\";","lastModifiedDate":"2021-09-23"},{"lineNumber":41,"author":{"gitId":"Kangxun"},"content":"    }","lastModifiedDate":"2021-09-23"},{"lineNumber":42,"author":{"gitId":"Kangxun"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":43,"author":{"gitId":"Kangxun"},"content":"    @Override","lastModifiedDate":"2021-09-23"},{"lineNumber":44,"author":{"gitId":"Kangxun"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-09-23"},{"lineNumber":45,"author":{"gitId":"Kangxun"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-09-23"},{"lineNumber":46,"author":{"gitId":"pranav-ganesh"},"content":"                || (other instanceof IsCalled // instanceof handles nulls","lastModifiedDate":"2021-11-04"},{"lineNumber":47,"author":{"gitId":"pranav-ganesh"},"content":"                \u0026\u0026 (value \u003d\u003d ((IsCalled) other).value)); // state check","lastModifiedDate":"2021-11-04"},{"lineNumber":48,"author":{"gitId":"Kangxun"},"content":"    }","lastModifiedDate":"2021-09-23"},{"lineNumber":49,"author":{"gitId":"Kangxun"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":50,"author":{"gitId":"Kangxun"},"content":"    @Override","lastModifiedDate":"2021-09-23"},{"lineNumber":51,"author":{"gitId":"Kangxun"},"content":"    public int hashCode() {","lastModifiedDate":"2021-09-23"},{"lineNumber":52,"author":{"gitId":"idgrr"},"content":"        if (value) {","lastModifiedDate":"2021-10-03"},{"lineNumber":53,"author":{"gitId":"Kangxun"},"content":"            return 1;","lastModifiedDate":"2021-09-23"},{"lineNumber":54,"author":{"gitId":"Kangxun"},"content":"        }","lastModifiedDate":"2021-09-23"},{"lineNumber":55,"author":{"gitId":"Kangxun"},"content":"        return 0;","lastModifiedDate":"2021-09-23"},{"lineNumber":56,"author":{"gitId":"Kangxun"},"content":"    }","lastModifiedDate":"2021-09-23"},{"lineNumber":57,"author":{"gitId":"Kangxun"},"content":"}","lastModifiedDate":"2021-09-23"}],"authorContributionMap":{"idgrr":13,"pranav-ganesh":12,"Kangxun":32}},{"path":"src/main/java/seedu/address/model/person/Name.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2016-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"houtenteo"},"content":"import java.util.Locale;","lastModifiedDate":"2021-11-08"},{"lineNumber":7,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Represents a Person\u0027s name in the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidName(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class Name {","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2018-09-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"            \"Names should only contain alphanumeric characters and spaces, and it should not be blank\";","lastModifiedDate":"2018-04-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2017-01-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * The first character of the address must not be a whitespace,","lastModifiedDate":"2017-01-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2017-01-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-16"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"[\\\\p{Alnum}][\\\\p{Alnum} ]*\";","lastModifiedDate":"2018-09-22"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public final String fullName;","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * Constructs a {@code Name}.","lastModifiedDate":"2017-05-30"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * @param name A valid name.","lastModifiedDate":"2017-05-30"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public Name(String name) {","lastModifiedDate":"2017-05-30"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        checkArgument(isValidName(name), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        fullName \u003d name;","lastModifiedDate":"2018-08-14"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid name.","lastModifiedDate":"2018-04-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public static boolean isValidName(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        return fullName;","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"                || (other instanceof Name // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"houtenteo"},"content":"                \u0026\u0026 fullName.toLowerCase(Locale.ROOT).equals(((Name) other).fullName","lastModifiedDate":"2021-11-08"},{"lineNumber":54,"author":{"gitId":"houtenteo"},"content":"                    .toLowerCase(Locale.ROOT))); // state check","lastModifiedDate":"2021-11-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        return fullName.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"houtenteo":4,"-":58}},{"path":"src/main/java/seedu/address/model/person/Person.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2016-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2017-05-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"idgrr"},"content":"import java.util.List;","lastModifiedDate":"2021-10-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"idgrr"},"content":"import seedu.address.model.person.interests.Interest;","lastModifiedDate":"2021-10-18"},{"lineNumber":9,"author":{"gitId":"houtenteo"},"content":"import seedu.address.model.person.interests.InterestsList;","lastModifiedDate":"2021-10-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Represents a Person in the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * Guarantees: details are present and not null, field values are validated, immutable.","lastModifiedDate":"2017-12-20"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class Person {","lastModifiedDate":"2018-01-10"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    // Identity fields","lastModifiedDate":"2018-04-19"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private final Name name;","lastModifiedDate":"2017-12-20"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private final Phone phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private final Email email;","lastModifiedDate":"2017-12-20"},{"lineNumber":21,"author":{"gitId":"houtenteo"},"content":"    private final Address address;","lastModifiedDate":"2021-10-18"},{"lineNumber":22,"author":{"gitId":"houtenteo"},"content":"    private final Gender gender;","lastModifiedDate":"2021-10-18"},{"lineNumber":23,"author":{"gitId":"houtenteo"},"content":"    private final Age age;","lastModifiedDate":"2021-10-18"},{"lineNumber":24,"author":{"gitId":"houtenteo"},"content":"    private final InterestsList interests;","lastModifiedDate":"2021-10-18"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    // Data fields","lastModifiedDate":"2018-04-19"},{"lineNumber":27,"author":{"gitId":"pranav-ganesh"},"content":"    private final IsCalled isCalled;","lastModifiedDate":"2021-11-04"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"pranav-ganesh"},"content":"    public Person(Name name, Phone phone, Email email, IsCalled isCalled,","lastModifiedDate":"2021-11-04"},{"lineNumber":33,"author":{"gitId":"houtenteo"},"content":"                  Address address, Gender gender, Age age, InterestsList interests) {","lastModifiedDate":"2021-10-18"},{"lineNumber":34,"author":{"gitId":"pranav-ganesh"},"content":"        requireAllNonNull(name, phone, email, isCalled, address, gender, age, interests);","lastModifiedDate":"2021-11-04"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2017-12-20"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        this.email \u003d email;","lastModifiedDate":"2017-12-20"},{"lineNumber":38,"author":{"gitId":"pranav-ganesh"},"content":"        this.isCalled \u003d isCalled;","lastModifiedDate":"2021-11-04"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        this.address \u003d address;","lastModifiedDate":"2021-10-18"},{"lineNumber":40,"author":{"gitId":"houtenteo"},"content":"        this.gender \u003d gender;","lastModifiedDate":"2021-10-18"},{"lineNumber":41,"author":{"gitId":"houtenteo"},"content":"        this.age \u003d age;","lastModifiedDate":"2021-10-18"},{"lineNumber":42,"author":{"gitId":"houtenteo"},"content":"        this.interests \u003d interests;","lastModifiedDate":"2021-10-18"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public Name getName() {","lastModifiedDate":"2017-07-12"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        return name;","lastModifiedDate":"2017-12-20"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public Phone getPhone() {","lastModifiedDate":"2017-07-12"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        return phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public Email getEmail() {","lastModifiedDate":"2017-07-12"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        return email;","lastModifiedDate":"2017-12-20"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"pranav-ganesh"},"content":"    public IsCalled getIsCalled() {","lastModifiedDate":"2021-11-04"},{"lineNumber":58,"author":{"gitId":"pranav-ganesh"},"content":"        return isCalled;","lastModifiedDate":"2021-11-04"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-12"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public Address getAddress() {","lastModifiedDate":"2021-10-18"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return address;","lastModifiedDate":"2021-10-18"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":65,"author":{"gitId":"houtenteo"},"content":"    public Gender getGender() {","lastModifiedDate":"2021-10-18"},{"lineNumber":66,"author":{"gitId":"houtenteo"},"content":"        return gender;","lastModifiedDate":"2021-10-18"},{"lineNumber":67,"author":{"gitId":"houtenteo"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":68,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":69,"author":{"gitId":"houtenteo"},"content":"    public Age getAge() {","lastModifiedDate":"2021-10-18"},{"lineNumber":70,"author":{"gitId":"houtenteo"},"content":"        return age;","lastModifiedDate":"2021-10-18"},{"lineNumber":71,"author":{"gitId":"houtenteo"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":72,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":73,"author":{"gitId":"houtenteo"},"content":"    public InterestsList getInterests() {","lastModifiedDate":"2021-10-18"},{"lineNumber":74,"author":{"gitId":"houtenteo"},"content":"        return interests;","lastModifiedDate":"2021-10-18"},{"lineNumber":75,"author":{"gitId":"houtenteo"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":76,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":77,"author":{"gitId":"idgrr"},"content":"    public List\u003cInterest\u003e getAllInterests() {","lastModifiedDate":"2021-10-18"},{"lineNumber":78,"author":{"gitId":"idgrr"},"content":"        return interests.getAllInterests();","lastModifiedDate":"2021-10-18"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * Returns true if both persons have the same name.","lastModifiedDate":"2020-12-18"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * This defines a weaker notion of equality between two persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public boolean isSamePerson(Person otherPerson) {","lastModifiedDate":"2018-04-19"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        if (otherPerson \u003d\u003d this) {","lastModifiedDate":"2018-04-19"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-04-19"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        return otherPerson !\u003d null","lastModifiedDate":"2018-04-19"},{"lineNumber":91,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherPerson.getName().equals(getName());","lastModifiedDate":"2020-12-18"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":95,"author":{"gitId":"pranav-ganesh"},"content":"     * Returns true if both persons have the name, phone and email data fields.","lastModifiedDate":"2021-11-04"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     * This defines a stronger notion of equality between two persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-01-10"},{"lineNumber":101,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-01-10"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        if (!(other instanceof Person)) {","lastModifiedDate":"2018-01-10"},{"lineNumber":105,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-01-10"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        Person otherPerson \u003d (Person) other;","lastModifiedDate":"2018-01-10"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        return otherPerson.getName().equals(getName())","lastModifiedDate":"2018-08-14"},{"lineNumber":110,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherPerson.getPhone().equals(getPhone())","lastModifiedDate":"2018-08-14"},{"lineNumber":111,"author":{"gitId":"pranav-ganesh"},"content":"                \u0026\u0026 otherPerson.getEmail().equals(getEmail());","lastModifiedDate":"2021-11-04"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        // use this method for custom fields hashing instead of implementing your own","lastModifiedDate":"2016-08-24"},{"lineNumber":117,"author":{"gitId":"idgrr"},"content":"        // return Objects.hash(name, phone, email);","lastModifiedDate":"2021-11-02"},{"lineNumber":118,"author":{"gitId":"pranav-ganesh"},"content":"        return Objects.hash(name, phone, email);","lastModifiedDate":"2021-11-04"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2018-01-10"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        builder.append(getName())","lastModifiedDate":"2018-01-10"},{"lineNumber":125,"author":{"gitId":"-"},"content":"                .append(\"; Phone: \")","lastModifiedDate":"2020-12-11"},{"lineNumber":126,"author":{"gitId":"-"},"content":"                .append(getPhone())","lastModifiedDate":"2018-01-10"},{"lineNumber":127,"author":{"gitId":"-"},"content":"                .append(\"; Email: \")","lastModifiedDate":"2020-12-11"},{"lineNumber":128,"author":{"gitId":"-"},"content":"                .append(getEmail())","lastModifiedDate":"2018-01-10"},{"lineNumber":129,"author":{"gitId":"pranav-ganesh"},"content":"                .append(\"; Called: \")","lastModifiedDate":"2021-11-04"},{"lineNumber":130,"author":{"gitId":"pranav-ganesh"},"content":"                .append(getIsCalled());","lastModifiedDate":"2021-11-04"},{"lineNumber":131,"author":{"gitId":"houtenteo"},"content":"        if (!address.isEmpty()) {","lastModifiedDate":"2021-10-18"},{"lineNumber":132,"author":{"gitId":"houtenteo"},"content":"            builder.append(\"; Address: \").append(getAddress());","lastModifiedDate":"2021-10-18"},{"lineNumber":133,"author":{"gitId":"houtenteo"},"content":"        }","lastModifiedDate":"2021-10-18"},{"lineNumber":134,"author":{"gitId":"houtenteo"},"content":"        if (!gender.isEmpty()) {","lastModifiedDate":"2021-10-18"},{"lineNumber":135,"author":{"gitId":"houtenteo"},"content":"            builder.append(\"; Gender: \").append(getGender());","lastModifiedDate":"2021-10-18"},{"lineNumber":136,"author":{"gitId":"houtenteo"},"content":"        }","lastModifiedDate":"2021-10-18"},{"lineNumber":137,"author":{"gitId":"houtenteo"},"content":"        if (!age.isEmpty()) {","lastModifiedDate":"2021-10-18"},{"lineNumber":138,"author":{"gitId":"houtenteo"},"content":"            builder.append(\"; Age: \").append(getAge());","lastModifiedDate":"2021-10-18"},{"lineNumber":139,"author":{"gitId":"houtenteo"},"content":"        }","lastModifiedDate":"2021-10-18"},{"lineNumber":140,"author":{"gitId":"houtenteo"},"content":"        if (!interests.isEmpty()) {","lastModifiedDate":"2021-10-18"},{"lineNumber":141,"author":{"gitId":"houtenteo"},"content":"            builder.append(\"; Interests: \").append(getInterests());","lastModifiedDate":"2021-10-18"},{"lineNumber":142,"author":{"gitId":"houtenteo"},"content":"        }","lastModifiedDate":"2021-10-18"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        return builder.toString();","lastModifiedDate":"2018-01-10"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":146,"author":{"gitId":"idgrr"},"content":"    /**","lastModifiedDate":"2021-10-19"},{"lineNumber":147,"author":{"gitId":"idgrr"},"content":"     * Display details without headers. If field is empty, field will be an empty string","lastModifiedDate":"2021-10-19"},{"lineNumber":148,"author":{"gitId":"idgrr"},"content":"     */","lastModifiedDate":"2021-10-19"},{"lineNumber":149,"author":{"gitId":"idgrr"},"content":"    public String toStringNoHeaders() {","lastModifiedDate":"2021-10-19"},{"lineNumber":150,"author":{"gitId":"idgrr"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2021-10-18"},{"lineNumber":151,"author":{"gitId":"idgrr"},"content":"        builder.append(getName())","lastModifiedDate":"2021-10-18"},{"lineNumber":152,"author":{"gitId":"idgrr"},"content":"                .append(\";\")","lastModifiedDate":"2021-10-18"},{"lineNumber":153,"author":{"gitId":"idgrr"},"content":"                .append(getPhone())","lastModifiedDate":"2021-10-18"},{"lineNumber":154,"author":{"gitId":"idgrr"},"content":"                .append(\";\")","lastModifiedDate":"2021-10-18"},{"lineNumber":155,"author":{"gitId":"idgrr"},"content":"                .append(getEmail());","lastModifiedDate":"2021-10-18"},{"lineNumber":156,"author":{"gitId":"idgrr"},"content":"        if (!address.isEmpty()) {","lastModifiedDate":"2021-10-18"},{"lineNumber":157,"author":{"gitId":"houtenteo"},"content":"            builder.append(\";\");","lastModifiedDate":"2021-11-02"},{"lineNumber":158,"author":{"gitId":"idgrr"},"content":"            builder.append(getAddress());","lastModifiedDate":"2021-10-18"},{"lineNumber":159,"author":{"gitId":"idgrr"},"content":"        }","lastModifiedDate":"2021-10-18"},{"lineNumber":160,"author":{"gitId":"idgrr"},"content":"        if (!gender.isEmpty()) {","lastModifiedDate":"2021-10-18"},{"lineNumber":161,"author":{"gitId":"houtenteo"},"content":"            builder.append(\";\");","lastModifiedDate":"2021-11-02"},{"lineNumber":162,"author":{"gitId":"idgrr"},"content":"            builder.append(getGender());","lastModifiedDate":"2021-10-18"},{"lineNumber":163,"author":{"gitId":"idgrr"},"content":"        }","lastModifiedDate":"2021-10-18"},{"lineNumber":164,"author":{"gitId":"idgrr"},"content":"        if (!age.isEmpty()) {","lastModifiedDate":"2021-10-18"},{"lineNumber":165,"author":{"gitId":"houtenteo"},"content":"            builder.append(\";\");","lastModifiedDate":"2021-11-02"},{"lineNumber":166,"author":{"gitId":"idgrr"},"content":"            builder.append(getAge());","lastModifiedDate":"2021-10-18"},{"lineNumber":167,"author":{"gitId":"idgrr"},"content":"        }","lastModifiedDate":"2021-10-18"},{"lineNumber":168,"author":{"gitId":"idgrr"},"content":"        if (!interests.isEmpty()) {","lastModifiedDate":"2021-10-18"},{"lineNumber":169,"author":{"gitId":"houtenteo"},"content":"            builder.append(\";\");","lastModifiedDate":"2021-11-02"},{"lineNumber":170,"author":{"gitId":"idgrr"},"content":"            builder.append(interests.toStringNoNumbering());","lastModifiedDate":"2021-10-19"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-10-18"},{"lineNumber":172,"author":{"gitId":"pranav-ganesh"},"content":"        builder.append(\";\").append(getIsCalled()).append(\";\");","lastModifiedDate":"2021-11-04"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        return builder.toString();","lastModifiedDate":"2021-10-18"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":176,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"houtenteo":37,"idgrr":26,"pranav-ganesh":12,"-":101}},{"path":"src/main/java/seedu/address/model/person/Phone.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2016-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a Person\u0027s phone number in the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidPhone(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Phone {","lastModifiedDate":"2016-09-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2018-09-22"},{"lineNumber":14,"author":{"gitId":"houtenteo"},"content":"            \"Phone numbers should only contain numbers \\n\"","lastModifiedDate":"2021-11-02"},{"lineNumber":15,"author":{"gitId":"houtenteo"},"content":"                    + \"Must start with either 6, 8 or 9 and it must be 8 digits long\";","lastModifiedDate":"2021-11-02"},{"lineNumber":16,"author":{"gitId":"houtenteo"},"content":"    public static final String VALIDATION_REGEX \u003d \"^(6|8|9)\\\\d{7}\";","lastModifiedDate":"2021-11-02"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public final String value;","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * Constructs a {@code Phone}.","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * @param phone A valid phone number.","lastModifiedDate":"2017-05-30"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public Phone(String phone) {","lastModifiedDate":"2017-05-30"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        requireNonNull(phone);","lastModifiedDate":"2017-05-15"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        checkArgument(isValidPhone(phone), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        value \u003d phone;","lastModifiedDate":"2018-08-14"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid phone number.","lastModifiedDate":"2018-04-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public static boolean isValidPhone(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return value;","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"                || (other instanceof Phone // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"                \u0026\u0026 value.equals(((Phone) other).value)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        return value.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"houtenteo":3,"-":51}},{"path":"src/main/java/seedu/address/model/person/UniquePersonList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2016-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2018-01-10"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Iterator;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"idgrr"},"content":"import java.util.stream.IntStream;","lastModifiedDate":"2021-10-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.DuplicatePersonException;","lastModifiedDate":"2017-06-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.PersonNotFoundException;","lastModifiedDate":"2017-06-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * A list of persons that enforces uniqueness between its elements and does not allow nulls.","lastModifiedDate":"2016-09-22"},{"lineNumber":17,"author":{"gitId":"idgrr"},"content":" * A person is considered unique by comparing using {@code Person#equals(Person)}. As such, adding and updating of","lastModifiedDate":"2021-10-19"},{"lineNumber":18,"author":{"gitId":"idgrr"},"content":" * persons uses Person#equals(Person) for equality so as to ensure that the person being added or updated is","lastModifiedDate":"2021-10-19"},{"lineNumber":19,"author":{"gitId":"idgrr"},"content":" * unique in terms of identity in the UniquePersonList. Removal of a person uses Person#equals(Object) so","lastModifiedDate":"2021-10-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":" * as to ensure that the person with exactly the same fields will be removed.","lastModifiedDate":"2018-04-19"},{"lineNumber":21,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * Supports a minimal set of list operations.","lastModifiedDate":"2016-09-22"},{"lineNumber":23,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * @see Person#isSamePerson(Person)","lastModifiedDate":"2018-04-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class UniquePersonList implements Iterable\u003cPerson\u003e {","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final ObservableList\u003cPerson\u003e internalList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2016-10-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private final ObservableList\u003cPerson\u003e internalUnmodifiableList \u003d","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            FXCollections.unmodifiableObservableList(internalList);","lastModifiedDate":"2018-12-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Returns true if the list contains an equivalent person as the given argument.","lastModifiedDate":"2016-09-22"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public boolean contains(Person toCheck) {","lastModifiedDate":"2018-01-10"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2017-05-15"},{"lineNumber":37,"author":{"gitId":"idgrr"},"content":"        return internalList.stream().anyMatch(x -\u003e x.equals(toCheck));","lastModifiedDate":"2021-10-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"idgrr"},"content":"    /**","lastModifiedDate":"2021-10-19"},{"lineNumber":41,"author":{"gitId":"idgrr"},"content":"     * Returns index of duplicate. If duplicate exists, return value \u003e\u003d 0. If no duplicate return -1.","lastModifiedDate":"2021-10-19"},{"lineNumber":42,"author":{"gitId":"idgrr"},"content":"     */","lastModifiedDate":"2021-10-19"},{"lineNumber":43,"author":{"gitId":"idgrr"},"content":"    public int indexOfDuplicate(Person toCheck) {","lastModifiedDate":"2021-10-19"},{"lineNumber":44,"author":{"gitId":"idgrr"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2021-10-19"},{"lineNumber":45,"author":{"gitId":"idgrr"},"content":"        int pos \u003d IntStream.range(0, internalList.size())","lastModifiedDate":"2021-10-19"},{"lineNumber":46,"author":{"gitId":"idgrr"},"content":"                .filter(x -\u003e (internalList.get(x).hashCode() \u003d\u003d toCheck.hashCode())","lastModifiedDate":"2021-10-19"},{"lineNumber":47,"author":{"gitId":"idgrr"},"content":"                        \u0026\u0026 internalList.get(x).equals(toCheck))","lastModifiedDate":"2021-10-19"},{"lineNumber":48,"author":{"gitId":"idgrr"},"content":"                .findFirst().orElse(-1);","lastModifiedDate":"2021-10-19"},{"lineNumber":49,"author":{"gitId":"idgrr"},"content":"        return pos;","lastModifiedDate":"2021-10-19"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Adds a person to the list.","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * The person must not already exist in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void add(Person toAdd) {","lastModifiedDate":"2018-08-07"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2017-05-15"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        if (contains(toAdd)) {","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"            throw new DuplicatePersonException();","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        internalList.add(toAdd);","lastModifiedDate":"2018-01-10"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     * Replaces the person {@code target} in the list with {@code editedPerson}.","lastModifiedDate":"2017-06-07"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-07"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        requireAllNonNull(target, editedPerson);","lastModifiedDate":"2018-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        int index \u003d internalList.indexOf(target);","lastModifiedDate":"2017-06-07"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        if (index \u003d\u003d -1) {","lastModifiedDate":"2017-06-07"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            throw new PersonNotFoundException();","lastModifiedDate":"2017-06-07"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-06-07"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-07"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        if (!target.isSamePerson(editedPerson) \u0026\u0026 contains(editedPerson)) {","lastModifiedDate":"2018-04-19"},{"lineNumber":78,"author":{"gitId":"-"},"content":"            throw new DuplicatePersonException();","lastModifiedDate":"2016-12-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        internalList.set(index, editedPerson);","lastModifiedDate":"2018-01-10"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":84,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * Removes the equivalent person from the list.","lastModifiedDate":"2016-08-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * The person must exist in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    public void remove(Person toRemove) {","lastModifiedDate":"2018-08-07"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        requireNonNull(toRemove);","lastModifiedDate":"2017-05-15"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        if (!internalList.remove(toRemove)) {","lastModifiedDate":"2018-02-28"},{"lineNumber":92,"author":{"gitId":"-"},"content":"            throw new PersonNotFoundException();","lastModifiedDate":"2016-08-24"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    public void setPersons(UniquePersonList replacement) {","lastModifiedDate":"2016-10-19"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        requireNonNull(replacement);","lastModifiedDate":"2018-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        internalList.setAll(replacement.internalList);","lastModifiedDate":"2018-08-14"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * Replaces the contents of this list with {@code persons}.","lastModifiedDate":"2018-08-07"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * {@code persons} must not contain duplicate persons.","lastModifiedDate":"2018-08-07"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    public void setPersons(List\u003cPerson\u003e persons) {","lastModifiedDate":"2018-08-07"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        requireAllNonNull(persons);","lastModifiedDate":"2018-01-10"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        if (!personsAreUnique(persons)) {","lastModifiedDate":"2018-04-19"},{"lineNumber":108,"author":{"gitId":"-"},"content":"            throw new DuplicatePersonException();","lastModifiedDate":"2018-01-21"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-21"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        internalList.setAll(persons);","lastModifiedDate":"2018-08-14"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-09-01"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     * Returns the backing list as an unmodifiable {@code ObservableList}.","lastModifiedDate":"2017-09-01"},{"lineNumber":116,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-09-01"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e asUnmodifiableObservableList() {","lastModifiedDate":"2018-04-05"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        return internalUnmodifiableList;","lastModifiedDate":"2018-12-09"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":121,"author":{"gitId":"Kangxun"},"content":"    /**","lastModifiedDate":"2021-10-25"},{"lineNumber":122,"author":{"gitId":"Kangxun"},"content":"     * Returns the backing list as an modifiable {@code ObservableList}.","lastModifiedDate":"2021-10-25"},{"lineNumber":123,"author":{"gitId":"Kangxun"},"content":"     */","lastModifiedDate":"2021-10-25"},{"lineNumber":124,"author":{"gitId":"Kangxun"},"content":"    public ObservableList\u003cPerson\u003e asModifiableObservableList() {","lastModifiedDate":"2021-10-25"},{"lineNumber":125,"author":{"gitId":"Kangxun"},"content":"        return internalList;","lastModifiedDate":"2021-10-25"},{"lineNumber":126,"author":{"gitId":"Kangxun"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":127,"author":{"gitId":"Kangxun"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    public Iterator\u003cPerson\u003e iterator() {","lastModifiedDate":"2016-08-24"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        return internalList.iterator();","lastModifiedDate":"2016-08-24"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-21"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-09-21"},{"lineNumber":136,"author":{"gitId":"-"},"content":"                || (other instanceof UniquePersonList // instanceof handles nulls","lastModifiedDate":"2016-09-21"},{"lineNumber":137,"author":{"gitId":"-"},"content":"                        \u0026\u0026 internalList.equals(((UniquePersonList) other).internalList));","lastModifiedDate":"2018-08-14"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-21"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        return internalList.hashCode();","lastModifiedDate":"2016-09-21"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":146,"author":{"gitId":"-"},"content":"     * Returns true if {@code persons} contains only unique persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":147,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    private boolean personsAreUnique(List\u003cPerson\u003e persons) {","lastModifiedDate":"2018-04-19"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        for (int i \u003d 0; i \u003c persons.size() - 1; i++) {","lastModifiedDate":"2018-04-19"},{"lineNumber":150,"author":{"gitId":"-"},"content":"            for (int j \u003d i + 1; j \u003c persons.size(); j++) {","lastModifiedDate":"2018-04-19"},{"lineNumber":151,"author":{"gitId":"idgrr"},"content":"                if (persons.get(i).equals(persons.get(j))) {","lastModifiedDate":"2021-10-19"},{"lineNumber":152,"author":{"gitId":"-"},"content":"                    return false;","lastModifiedDate":"2018-04-19"},{"lineNumber":153,"author":{"gitId":"-"},"content":"                }","lastModifiedDate":"2018-04-19"},{"lineNumber":154,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-04-19"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        return true;","lastModifiedDate":"2018-04-19"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":158,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"idgrr":17,"-":134,"Kangxun":7}},{"path":"src/main/java/seedu/address/model/person/interests/Interest.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"houtenteo"},"content":"package seedu.address.model.person.interests;","lastModifiedDate":"2021-10-18"},{"lineNumber":2,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":3,"author":{"gitId":"houtenteo"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-18"},{"lineNumber":4,"author":{"gitId":"houtenteo"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2021-10-18"},{"lineNumber":5,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":6,"author":{"gitId":"houtenteo"},"content":"import java.util.Locale;","lastModifiedDate":"2021-10-20"},{"lineNumber":7,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":8,"author":{"gitId":"houtenteo"},"content":"public class Interest {","lastModifiedDate":"2021-10-18"},{"lineNumber":9,"author":{"gitId":"houtenteo"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Interest can take any value, but should not be an empty string\";","lastModifiedDate":"2021-10-18"},{"lineNumber":10,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":11,"author":{"gitId":"houtenteo"},"content":"    /*","lastModifiedDate":"2021-10-18"},{"lineNumber":12,"author":{"gitId":"houtenteo"},"content":"     * The first character of the address must not be a whitespace,","lastModifiedDate":"2021-10-18"},{"lineNumber":13,"author":{"gitId":"houtenteo"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2021-10-18"},{"lineNumber":14,"author":{"gitId":"houtenteo"},"content":"     */","lastModifiedDate":"2021-10-18"},{"lineNumber":15,"author":{"gitId":"houtenteo"},"content":"    public static final String VALIDATION_REGEX \u003d \"[^\\\\s].*\";","lastModifiedDate":"2021-10-18"},{"lineNumber":16,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":17,"author":{"gitId":"houtenteo"},"content":"    public final String value;","lastModifiedDate":"2021-10-18"},{"lineNumber":18,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":19,"author":{"gitId":"houtenteo"},"content":"    /**","lastModifiedDate":"2021-10-18"},{"lineNumber":20,"author":{"gitId":"houtenteo"},"content":"     * Constructs an {@code Interests}.","lastModifiedDate":"2021-10-18"},{"lineNumber":21,"author":{"gitId":"houtenteo"},"content":"     *","lastModifiedDate":"2021-10-18"},{"lineNumber":22,"author":{"gitId":"houtenteo"},"content":"     * @param interest Indication whether person is called.","lastModifiedDate":"2021-10-18"},{"lineNumber":23,"author":{"gitId":"houtenteo"},"content":"     */","lastModifiedDate":"2021-10-18"},{"lineNumber":24,"author":{"gitId":"houtenteo"},"content":"    public Interest(String interest) {","lastModifiedDate":"2021-10-18"},{"lineNumber":25,"author":{"gitId":"houtenteo"},"content":"        requireNonNull(interest);","lastModifiedDate":"2021-10-18"},{"lineNumber":26,"author":{"gitId":"houtenteo"},"content":"        checkArgument(isValidInterest(interest), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-18"},{"lineNumber":27,"author":{"gitId":"houtenteo"},"content":"        value \u003d interest;","lastModifiedDate":"2021-10-18"},{"lineNumber":28,"author":{"gitId":"houtenteo"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":29,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":30,"author":{"gitId":"houtenteo"},"content":"    /**","lastModifiedDate":"2021-10-18"},{"lineNumber":31,"author":{"gitId":"houtenteo"},"content":"     * Returns true if a given string is a valid interest.","lastModifiedDate":"2021-10-18"},{"lineNumber":32,"author":{"gitId":"houtenteo"},"content":"     */","lastModifiedDate":"2021-10-18"},{"lineNumber":33,"author":{"gitId":"houtenteo"},"content":"    public static boolean isValidInterest(String test) {","lastModifiedDate":"2021-10-18"},{"lineNumber":34,"author":{"gitId":"houtenteo"},"content":"        requireNonNull(test);","lastModifiedDate":"2021-10-18"},{"lineNumber":35,"author":{"gitId":"houtenteo"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2021-10-18"},{"lineNumber":36,"author":{"gitId":"houtenteo"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":37,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":38,"author":{"gitId":"houtenteo"},"content":"    @Override","lastModifiedDate":"2021-10-18"},{"lineNumber":39,"author":{"gitId":"houtenteo"},"content":"    public String toString() {","lastModifiedDate":"2021-10-18"},{"lineNumber":40,"author":{"gitId":"houtenteo"},"content":"        return value;","lastModifiedDate":"2021-10-18"},{"lineNumber":41,"author":{"gitId":"houtenteo"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":42,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":43,"author":{"gitId":"houtenteo"},"content":"    @Override","lastModifiedDate":"2021-10-18"},{"lineNumber":44,"author":{"gitId":"houtenteo"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-18"},{"lineNumber":45,"author":{"gitId":"houtenteo"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-18"},{"lineNumber":46,"author":{"gitId":"houtenteo"},"content":"                || (other instanceof Interest // instanceof handles nulls","lastModifiedDate":"2021-10-18"},{"lineNumber":47,"author":{"gitId":"houtenteo"},"content":"                \u0026\u0026 value.toLowerCase(Locale.ROOT)","lastModifiedDate":"2021-10-20"},{"lineNumber":48,"author":{"gitId":"houtenteo"},"content":"                .equals(((Interest) other).value.toLowerCase(Locale.ROOT))); // state check","lastModifiedDate":"2021-10-20"},{"lineNumber":49,"author":{"gitId":"houtenteo"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":50,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":51,"author":{"gitId":"houtenteo"},"content":"    @Override","lastModifiedDate":"2021-10-18"},{"lineNumber":52,"author":{"gitId":"houtenteo"},"content":"    public int hashCode() {","lastModifiedDate":"2021-10-18"},{"lineNumber":53,"author":{"gitId":"houtenteo"},"content":"        return value.hashCode();","lastModifiedDate":"2021-10-18"},{"lineNumber":54,"author":{"gitId":"houtenteo"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":55,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":56,"author":{"gitId":"houtenteo"},"content":"}","lastModifiedDate":"2021-10-18"}],"authorContributionMap":{"houtenteo":56}},{"path":"src/main/java/seedu/address/model/person/interests/InterestsList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"houtenteo"},"content":"package seedu.address.model.person.interests;","lastModifiedDate":"2021-10-18"},{"lineNumber":2,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":3,"author":{"gitId":"houtenteo"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-18"},{"lineNumber":4,"author":{"gitId":"houtenteo"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2021-10-18"},{"lineNumber":5,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":6,"author":{"gitId":"houtenteo"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-18"},{"lineNumber":7,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":8,"author":{"gitId":"houtenteo"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-10-18"},{"lineNumber":9,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":10,"author":{"gitId":"houtenteo"},"content":"/**","lastModifiedDate":"2021-10-18"},{"lineNumber":11,"author":{"gitId":"houtenteo"},"content":" * Represents the list of interests of the person","lastModifiedDate":"2021-10-18"},{"lineNumber":12,"author":{"gitId":"houtenteo"},"content":" */","lastModifiedDate":"2021-10-18"},{"lineNumber":13,"author":{"gitId":"houtenteo"},"content":"public class InterestsList {","lastModifiedDate":"2021-10-18"},{"lineNumber":14,"author":{"gitId":"houtenteo"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Duplicated interests not allowed\";","lastModifiedDate":"2021-10-18"},{"lineNumber":15,"author":{"gitId":"houtenteo"},"content":"    public static final String NO_INTEREST \u003d \"N.A\";","lastModifiedDate":"2021-10-18"},{"lineNumber":16,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":17,"author":{"gitId":"houtenteo"},"content":"    private ArrayList\u003cInterest\u003e list;","lastModifiedDate":"2021-10-18"},{"lineNumber":18,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":19,"author":{"gitId":"houtenteo"},"content":"    public InterestsList() {","lastModifiedDate":"2021-10-18"},{"lineNumber":20,"author":{"gitId":"houtenteo"},"content":"        this.list \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-18"},{"lineNumber":21,"author":{"gitId":"houtenteo"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":22,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":23,"author":{"gitId":"houtenteo"},"content":"    /**","lastModifiedDate":"2021-11-02"},{"lineNumber":24,"author":{"gitId":"houtenteo"},"content":"     * Constructor for the class","lastModifiedDate":"2021-11-02"},{"lineNumber":25,"author":{"gitId":"houtenteo"},"content":"     * @param list A list of interests","lastModifiedDate":"2021-11-02"},{"lineNumber":26,"author":{"gitId":"houtenteo"},"content":"     */","lastModifiedDate":"2021-11-02"},{"lineNumber":27,"author":{"gitId":"houtenteo"},"content":"    public InterestsList(ArrayList\u003cInterest\u003e list) {","lastModifiedDate":"2021-11-02"},{"lineNumber":28,"author":{"gitId":"houtenteo"},"content":"        requireNonNull(list);","lastModifiedDate":"2021-11-02"},{"lineNumber":29,"author":{"gitId":"houtenteo"},"content":"        this.list \u003d list;","lastModifiedDate":"2021-11-02"},{"lineNumber":30,"author":{"gitId":"houtenteo"},"content":"    }","lastModifiedDate":"2021-11-02"},{"lineNumber":31,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":32,"author":{"gitId":"houtenteo"},"content":"    /**","lastModifiedDate":"2021-10-18"},{"lineNumber":33,"author":{"gitId":"houtenteo"},"content":"     * Adds an interest into the list.","lastModifiedDate":"2021-10-18"},{"lineNumber":34,"author":{"gitId":"houtenteo"},"content":"     * @param interest","lastModifiedDate":"2021-10-18"},{"lineNumber":35,"author":{"gitId":"houtenteo"},"content":"     */","lastModifiedDate":"2021-10-18"},{"lineNumber":36,"author":{"gitId":"houtenteo"},"content":"    public void addInterest(Interest interest) {","lastModifiedDate":"2021-10-18"},{"lineNumber":37,"author":{"gitId":"houtenteo"},"content":"        requireNonNull(interest);","lastModifiedDate":"2021-10-18"},{"lineNumber":38,"author":{"gitId":"houtenteo"},"content":"        checkArgument(!checkDuplicate(interest), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-18"},{"lineNumber":39,"author":{"gitId":"houtenteo"},"content":"        this.list.add(interest);","lastModifiedDate":"2021-10-18"},{"lineNumber":40,"author":{"gitId":"houtenteo"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":41,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":42,"author":{"gitId":"pranav-ganesh"},"content":"    /**","lastModifiedDate":"2021-10-20"},{"lineNumber":43,"author":{"gitId":"pranav-ganesh"},"content":"     * Edits an interest in the list.","lastModifiedDate":"2021-10-20"},{"lineNumber":44,"author":{"gitId":"houtenteo"},"content":"     * @param interest The new interest","lastModifiedDate":"2021-11-02"},{"lineNumber":45,"author":{"gitId":"pranav-ganesh"},"content":"     * @param index The index of the Interest in the list that is to be changed","lastModifiedDate":"2021-11-06"},{"lineNumber":46,"author":{"gitId":"pranav-ganesh"},"content":"     */","lastModifiedDate":"2021-10-20"},{"lineNumber":47,"author":{"gitId":"pranav-ganesh"},"content":"    public void setInterest(Interest interest, int index) {","lastModifiedDate":"2021-10-20"},{"lineNumber":48,"author":{"gitId":"houtenteo"},"content":"        checkArgument(!checkDuplicate(interest), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-11-05"},{"lineNumber":49,"author":{"gitId":"pranav-ganesh"},"content":"        this.list.set(index, interest);","lastModifiedDate":"2021-10-20"},{"lineNumber":50,"author":{"gitId":"pranav-ganesh"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":51,"author":{"gitId":"pranav-ganesh"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":52,"author":{"gitId":"pranav-ganesh"},"content":"    /**","lastModifiedDate":"2021-11-06"},{"lineNumber":53,"author":{"gitId":"pranav-ganesh"},"content":"     * Removes an interest in the list.","lastModifiedDate":"2021-11-06"},{"lineNumber":54,"author":{"gitId":"pranav-ganesh"},"content":"     * @param index The index of the Interest in the list that is to be removed","lastModifiedDate":"2021-11-06"},{"lineNumber":55,"author":{"gitId":"pranav-ganesh"},"content":"     */","lastModifiedDate":"2021-11-06"},{"lineNumber":56,"author":{"gitId":"pranav-ganesh"},"content":"    public void removeInterest(int index) {","lastModifiedDate":"2021-11-06"},{"lineNumber":57,"author":{"gitId":"pranav-ganesh"},"content":"        this.list.remove(index);","lastModifiedDate":"2021-11-06"},{"lineNumber":58,"author":{"gitId":"pranav-ganesh"},"content":"    }","lastModifiedDate":"2021-11-06"},{"lineNumber":59,"author":{"gitId":"pranav-ganesh"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":60,"author":{"gitId":"houtenteo"},"content":"    /**","lastModifiedDate":"2021-10-18"},{"lineNumber":61,"author":{"gitId":"houtenteo"},"content":"     * Checks for duplicates in the list","lastModifiedDate":"2021-10-18"},{"lineNumber":62,"author":{"gitId":"houtenteo"},"content":"     * @param i","lastModifiedDate":"2021-10-18"},{"lineNumber":63,"author":{"gitId":"houtenteo"},"content":"     * @return True if a duplicate exists, false otherwise.","lastModifiedDate":"2021-10-18"},{"lineNumber":64,"author":{"gitId":"houtenteo"},"content":"     */","lastModifiedDate":"2021-10-18"},{"lineNumber":65,"author":{"gitId":"houtenteo"},"content":"    public boolean checkDuplicate(Interest i) {","lastModifiedDate":"2021-10-18"},{"lineNumber":66,"author":{"gitId":"houtenteo"},"content":"        if (size() \u003d\u003d 0) {","lastModifiedDate":"2021-10-18"},{"lineNumber":67,"author":{"gitId":"houtenteo"},"content":"            return false;","lastModifiedDate":"2021-10-18"},{"lineNumber":68,"author":{"gitId":"houtenteo"},"content":"        }","lastModifiedDate":"2021-10-18"},{"lineNumber":69,"author":{"gitId":"houtenteo"},"content":"        for (Interest interest : list) {","lastModifiedDate":"2021-10-18"},{"lineNumber":70,"author":{"gitId":"houtenteo"},"content":"            if (interest.equals(i)) {","lastModifiedDate":"2021-10-18"},{"lineNumber":71,"author":{"gitId":"houtenteo"},"content":"                return true;","lastModifiedDate":"2021-10-18"},{"lineNumber":72,"author":{"gitId":"houtenteo"},"content":"            }","lastModifiedDate":"2021-10-18"},{"lineNumber":73,"author":{"gitId":"houtenteo"},"content":"        }","lastModifiedDate":"2021-10-18"},{"lineNumber":74,"author":{"gitId":"houtenteo"},"content":"        return false;","lastModifiedDate":"2021-10-18"},{"lineNumber":75,"author":{"gitId":"houtenteo"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":76,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":77,"author":{"gitId":"houtenteo"},"content":"    public int size() {","lastModifiedDate":"2021-10-18"},{"lineNumber":78,"author":{"gitId":"houtenteo"},"content":"        return list.size();","lastModifiedDate":"2021-10-18"},{"lineNumber":79,"author":{"gitId":"houtenteo"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":80,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":81,"author":{"gitId":"houtenteo"},"content":"    public Interest getInterest(Index i) {","lastModifiedDate":"2021-10-18"},{"lineNumber":82,"author":{"gitId":"houtenteo"},"content":"        return list.get(i.getZeroBased());","lastModifiedDate":"2021-10-18"},{"lineNumber":83,"author":{"gitId":"houtenteo"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":84,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":85,"author":{"gitId":"houtenteo"},"content":"    public ArrayList\u003cInterest\u003e getAllInterests() {","lastModifiedDate":"2021-10-18"},{"lineNumber":86,"author":{"gitId":"houtenteo"},"content":"        return this.list;","lastModifiedDate":"2021-10-18"},{"lineNumber":87,"author":{"gitId":"houtenteo"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":88,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":89,"author":{"gitId":"pranav-ganesh"},"content":"    public InterestsList copyInterestsList() {","lastModifiedDate":"2021-11-06"},{"lineNumber":90,"author":{"gitId":"pranav-ganesh"},"content":"        return new InterestsList(new ArrayList\u003c\u003e(this.list));","lastModifiedDate":"2021-11-06"},{"lineNumber":91,"author":{"gitId":"pranav-ganesh"},"content":"    }","lastModifiedDate":"2021-11-06"},{"lineNumber":92,"author":{"gitId":"pranav-ganesh"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":93,"author":{"gitId":"houtenteo"},"content":"    /**","lastModifiedDate":"2021-10-18"},{"lineNumber":94,"author":{"gitId":"houtenteo"},"content":"     * Checks if there is a proper value.","lastModifiedDate":"2021-10-18"},{"lineNumber":95,"author":{"gitId":"houtenteo"},"content":"     * @return True if the list is empty, false otherwise.","lastModifiedDate":"2021-10-18"},{"lineNumber":96,"author":{"gitId":"houtenteo"},"content":"     */","lastModifiedDate":"2021-10-18"},{"lineNumber":97,"author":{"gitId":"houtenteo"},"content":"    public boolean isEmpty() {","lastModifiedDate":"2021-10-18"},{"lineNumber":98,"author":{"gitId":"houtenteo"},"content":"        return list.isEmpty();","lastModifiedDate":"2021-10-18"},{"lineNumber":99,"author":{"gitId":"houtenteo"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":100,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":101,"author":{"gitId":"houtenteo"},"content":"    @Override","lastModifiedDate":"2021-10-18"},{"lineNumber":102,"author":{"gitId":"houtenteo"},"content":"    public String toString() {","lastModifiedDate":"2021-10-18"},{"lineNumber":103,"author":{"gitId":"houtenteo"},"content":"        if (list.isEmpty()) {","lastModifiedDate":"2021-10-18"},{"lineNumber":104,"author":{"gitId":"houtenteo"},"content":"            return NO_INTEREST;","lastModifiedDate":"2021-10-18"},{"lineNumber":105,"author":{"gitId":"houtenteo"},"content":"        }","lastModifiedDate":"2021-10-18"},{"lineNumber":106,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":107,"author":{"gitId":"houtenteo"},"content":"        StringBuilder value \u003d new StringBuilder();","lastModifiedDate":"2021-10-18"},{"lineNumber":108,"author":{"gitId":"houtenteo"},"content":"        for (int k \u003d 0; k \u003c list.size(); k++) {","lastModifiedDate":"2021-10-18"},{"lineNumber":109,"author":{"gitId":"houtenteo"},"content":"            if (k \u003d\u003d 0) {","lastModifiedDate":"2021-10-18"},{"lineNumber":110,"author":{"gitId":"houtenteo"},"content":"                value.append(\"1. \").append(list.get(k).value);","lastModifiedDate":"2021-10-18"},{"lineNumber":111,"author":{"gitId":"houtenteo"},"content":"            } else {","lastModifiedDate":"2021-10-18"},{"lineNumber":112,"author":{"gitId":"houtenteo"},"content":"                value.append(\"\\n\").append(k + 1).append(\". \").append(list.get(k).value);","lastModifiedDate":"2021-10-18"},{"lineNumber":113,"author":{"gitId":"houtenteo"},"content":"            }","lastModifiedDate":"2021-10-18"},{"lineNumber":114,"author":{"gitId":"houtenteo"},"content":"        }","lastModifiedDate":"2021-10-18"},{"lineNumber":115,"author":{"gitId":"houtenteo"},"content":"        return value.toString();","lastModifiedDate":"2021-10-18"},{"lineNumber":116,"author":{"gitId":"houtenteo"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":117,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":118,"author":{"gitId":"idgrr"},"content":"    /**","lastModifiedDate":"2021-10-19"},{"lineNumber":119,"author":{"gitId":"houtenteo"},"content":"     * Prints out all interests without the numbering","lastModifiedDate":"2021-11-05"},{"lineNumber":120,"author":{"gitId":"houtenteo"},"content":"     * @return The string","lastModifiedDate":"2021-11-05"},{"lineNumber":121,"author":{"gitId":"idgrr"},"content":"     */","lastModifiedDate":"2021-10-19"},{"lineNumber":122,"author":{"gitId":"idgrr"},"content":"    public String toStringNoNumbering() {","lastModifiedDate":"2021-10-19"},{"lineNumber":123,"author":{"gitId":"idgrr"},"content":"        if (list.isEmpty()) {","lastModifiedDate":"2021-10-18"},{"lineNumber":124,"author":{"gitId":"idgrr"},"content":"            return \"\";","lastModifiedDate":"2021-10-18"},{"lineNumber":125,"author":{"gitId":"idgrr"},"content":"        }","lastModifiedDate":"2021-10-18"},{"lineNumber":126,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":127,"author":{"gitId":"idgrr"},"content":"        StringBuilder value \u003d new StringBuilder();","lastModifiedDate":"2021-10-18"},{"lineNumber":128,"author":{"gitId":"houtenteo"},"content":"        for (int k \u003d 0; k \u003c list.size() - 1; k++) {","lastModifiedDate":"2021-11-05"},{"lineNumber":129,"author":{"gitId":"idgrr"},"content":"            value.append(list.get(k).value).append(\", \");","lastModifiedDate":"2021-10-18"},{"lineNumber":130,"author":{"gitId":"idgrr"},"content":"        }","lastModifiedDate":"2021-10-18"},{"lineNumber":131,"author":{"gitId":"houtenteo"},"content":"        value.append(list.get(size() - 1));","lastModifiedDate":"2021-11-05"},{"lineNumber":132,"author":{"gitId":"idgrr"},"content":"        return value.toString();","lastModifiedDate":"2021-10-18"},{"lineNumber":133,"author":{"gitId":"idgrr"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":134,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":135,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":136,"author":{"gitId":"houtenteo"},"content":"    @Override","lastModifiedDate":"2021-10-18"},{"lineNumber":137,"author":{"gitId":"houtenteo"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-18"},{"lineNumber":138,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":139,"author":{"gitId":"houtenteo"},"content":"        if (other \u003d\u003d this) { // short circuit if same object","lastModifiedDate":"2021-10-18"},{"lineNumber":140,"author":{"gitId":"houtenteo"},"content":"            return true;","lastModifiedDate":"2021-10-18"},{"lineNumber":141,"author":{"gitId":"houtenteo"},"content":"        }","lastModifiedDate":"2021-10-18"},{"lineNumber":142,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":143,"author":{"gitId":"houtenteo"},"content":"        if (!(other instanceof InterestsList)) {","lastModifiedDate":"2021-10-18"},{"lineNumber":144,"author":{"gitId":"houtenteo"},"content":"            return false;","lastModifiedDate":"2021-10-18"},{"lineNumber":145,"author":{"gitId":"houtenteo"},"content":"        }","lastModifiedDate":"2021-10-18"},{"lineNumber":146,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":147,"author":{"gitId":"houtenteo"},"content":"        InterestsList il \u003d (InterestsList) other;","lastModifiedDate":"2021-10-18"},{"lineNumber":148,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":149,"author":{"gitId":"houtenteo"},"content":"        if (size() !\u003d il.size()) {","lastModifiedDate":"2021-10-18"},{"lineNumber":150,"author":{"gitId":"houtenteo"},"content":"            return false;","lastModifiedDate":"2021-10-18"},{"lineNumber":151,"author":{"gitId":"houtenteo"},"content":"        }","lastModifiedDate":"2021-10-18"},{"lineNumber":152,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":153,"author":{"gitId":"houtenteo"},"content":"        boolean result \u003d true;","lastModifiedDate":"2021-10-18"},{"lineNumber":154,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":155,"author":{"gitId":"houtenteo"},"content":"        for (int k \u003d 0; k \u003c size(); k++) {","lastModifiedDate":"2021-10-18"},{"lineNumber":156,"author":{"gitId":"houtenteo"},"content":"            Interest i1 \u003d getInterest(Index.fromZeroBased(k));","lastModifiedDate":"2021-10-18"},{"lineNumber":157,"author":{"gitId":"houtenteo"},"content":"            Interest i2 \u003d il.getInterest(Index.fromZeroBased(k));","lastModifiedDate":"2021-10-18"},{"lineNumber":158,"author":{"gitId":"houtenteo"},"content":"            result \u003d i1.equals(i2);","lastModifiedDate":"2021-10-18"},{"lineNumber":159,"author":{"gitId":"houtenteo"},"content":"            if (!result) {","lastModifiedDate":"2021-10-18"},{"lineNumber":160,"author":{"gitId":"houtenteo"},"content":"                return false;","lastModifiedDate":"2021-10-18"},{"lineNumber":161,"author":{"gitId":"houtenteo"},"content":"            }","lastModifiedDate":"2021-10-18"},{"lineNumber":162,"author":{"gitId":"houtenteo"},"content":"        }","lastModifiedDate":"2021-10-18"},{"lineNumber":163,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":164,"author":{"gitId":"houtenteo"},"content":"        return true;","lastModifiedDate":"2021-10-18"},{"lineNumber":165,"author":{"gitId":"houtenteo"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":166,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":167,"author":{"gitId":"houtenteo"},"content":"    @Override","lastModifiedDate":"2021-10-18"},{"lineNumber":168,"author":{"gitId":"houtenteo"},"content":"    public int hashCode() {","lastModifiedDate":"2021-10-18"},{"lineNumber":169,"author":{"gitId":"houtenteo"},"content":"        return list.hashCode();","lastModifiedDate":"2021-10-18"},{"lineNumber":170,"author":{"gitId":"houtenteo"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":171,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":172,"author":{"gitId":"houtenteo"},"content":"}","lastModifiedDate":"2021-10-18"},{"lineNumber":173,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-18"}],"authorContributionMap":{"houtenteo":139,"idgrr":14,"pranav-ganesh":20}},{"path":"src/main/java/seedu/address/model/person/predicates/AddressContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"houtenteo"},"content":"package seedu.address.model.person.predicates;","lastModifiedDate":"2021-10-25"},{"lineNumber":2,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":3,"author":{"gitId":"houtenteo"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-26"},{"lineNumber":4,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":5,"author":{"gitId":"houtenteo"},"content":"import java.util.List;","lastModifiedDate":"2021-10-25"},{"lineNumber":6,"author":{"gitId":"houtenteo"},"content":"import java.util.Locale;","lastModifiedDate":"2021-10-25"},{"lineNumber":7,"author":{"gitId":"houtenteo"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2021-10-25"},{"lineNumber":8,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":9,"author":{"gitId":"houtenteo"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2021-10-25"},{"lineNumber":10,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":11,"author":{"gitId":"houtenteo"},"content":"/**","lastModifiedDate":"2021-10-26"},{"lineNumber":12,"author":{"gitId":"houtenteo"},"content":" * Tests that a {@code Person}\u0027s {@code Address} contains the keywords given.","lastModifiedDate":"2021-10-26"},{"lineNumber":13,"author":{"gitId":"houtenteo"},"content":" */","lastModifiedDate":"2021-10-26"},{"lineNumber":14,"author":{"gitId":"houtenteo"},"content":"public class AddressContainsKeywordsPredicate implements Predicate\u003cPerson\u003e {","lastModifiedDate":"2021-10-25"},{"lineNumber":15,"author":{"gitId":"houtenteo"},"content":"    private final List\u003cString\u003e keywords;","lastModifiedDate":"2021-10-25"},{"lineNumber":16,"author":{"gitId":"houtenteo"},"content":"    private final boolean isFindAll;","lastModifiedDate":"2021-10-26"},{"lineNumber":17,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":18,"author":{"gitId":"houtenteo"},"content":"    /**","lastModifiedDate":"2021-10-26"},{"lineNumber":19,"author":{"gitId":"houtenteo"},"content":"     * Constructor for the AddressContainsKeywordsPredicate class","lastModifiedDate":"2021-10-26"},{"lineNumber":20,"author":{"gitId":"houtenteo"},"content":"     * @param keywords The keywords to compare against the {@code Person}\u0027s {@code Address}","lastModifiedDate":"2021-10-26"},{"lineNumber":21,"author":{"gitId":"houtenteo"},"content":"     * @param isFindAll True if all keywords need to match, false otherwise","lastModifiedDate":"2021-10-26"},{"lineNumber":22,"author":{"gitId":"houtenteo"},"content":"     */","lastModifiedDate":"2021-10-26"},{"lineNumber":23,"author":{"gitId":"houtenteo"},"content":"    public AddressContainsKeywordsPredicate(List\u003cString\u003e keywords, boolean isFindAll) {","lastModifiedDate":"2021-10-26"},{"lineNumber":24,"author":{"gitId":"houtenteo"},"content":"        requireNonNull(keywords);","lastModifiedDate":"2021-10-26"},{"lineNumber":25,"author":{"gitId":"houtenteo"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2021-10-25"},{"lineNumber":26,"author":{"gitId":"houtenteo"},"content":"        this.isFindAll \u003d isFindAll;","lastModifiedDate":"2021-10-26"},{"lineNumber":27,"author":{"gitId":"houtenteo"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":28,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":29,"author":{"gitId":"houtenteo"},"content":"    @Override","lastModifiedDate":"2021-10-25"},{"lineNumber":30,"author":{"gitId":"houtenteo"},"content":"    public boolean test(Person person) {","lastModifiedDate":"2021-10-25"},{"lineNumber":31,"author":{"gitId":"houtenteo"},"content":"        if (isFindAll) {","lastModifiedDate":"2021-10-26"},{"lineNumber":32,"author":{"gitId":"houtenteo"},"content":"            return keywords.stream().allMatch(keyword -\u003e person.getAddress().value.toLowerCase(Locale.ROOT)","lastModifiedDate":"2021-10-27"},{"lineNumber":33,"author":{"gitId":"houtenteo"},"content":"                            .contains(keyword.toLowerCase(Locale.ROOT)));","lastModifiedDate":"2021-10-27"},{"lineNumber":34,"author":{"gitId":"houtenteo"},"content":"        }","lastModifiedDate":"2021-10-26"},{"lineNumber":35,"author":{"gitId":"houtenteo"},"content":"        return keywords.stream().anyMatch(keyword -\u003e person.getAddress().value.toLowerCase(Locale.ROOT)","lastModifiedDate":"2021-10-27"},{"lineNumber":36,"author":{"gitId":"houtenteo"},"content":"                                .contains(keyword.toLowerCase(Locale.ROOT)));","lastModifiedDate":"2021-10-27"},{"lineNumber":37,"author":{"gitId":"houtenteo"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":38,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":39,"author":{"gitId":"houtenteo"},"content":"    @Override","lastModifiedDate":"2021-10-25"},{"lineNumber":40,"author":{"gitId":"houtenteo"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-25"},{"lineNumber":41,"author":{"gitId":"houtenteo"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-25"},{"lineNumber":42,"author":{"gitId":"houtenteo"},"content":"                || (other instanceof AddressContainsKeywordsPredicate // instanceof handles nulls","lastModifiedDate":"2021-10-25"},{"lineNumber":43,"author":{"gitId":"houtenteo"},"content":"                \u0026\u0026 keywords.equals(((AddressContainsKeywordsPredicate) other).keywords))","lastModifiedDate":"2021-10-27"},{"lineNumber":44,"author":{"gitId":"houtenteo"},"content":"                \u0026\u0026 isFindAll \u003d\u003d ((AddressContainsKeywordsPredicate) other).isFindAll; // state check","lastModifiedDate":"2021-10-27"},{"lineNumber":45,"author":{"gitId":"houtenteo"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":46,"author":{"gitId":"houtenteo"},"content":"}","lastModifiedDate":"2021-10-25"}],"authorContributionMap":{"houtenteo":46}},{"path":"src/main/java/seedu/address/model/person/predicates/AgeContainsValuePredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"houtenteo"},"content":"package seedu.address.model.person.predicates;","lastModifiedDate":"2021-10-25"},{"lineNumber":2,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":3,"author":{"gitId":"houtenteo"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-26"},{"lineNumber":4,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":5,"author":{"gitId":"houtenteo"},"content":"import java.util.List;","lastModifiedDate":"2021-10-25"},{"lineNumber":6,"author":{"gitId":"houtenteo"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2021-10-25"},{"lineNumber":7,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":8,"author":{"gitId":"houtenteo"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2021-10-25"},{"lineNumber":9,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":10,"author":{"gitId":"houtenteo"},"content":"/**","lastModifiedDate":"2021-10-26"},{"lineNumber":11,"author":{"gitId":"houtenteo"},"content":" * Tests that a {@code Person}\u0027s {@code Age} matches the value given.","lastModifiedDate":"2021-10-26"},{"lineNumber":12,"author":{"gitId":"houtenteo"},"content":" */","lastModifiedDate":"2021-10-26"},{"lineNumber":13,"author":{"gitId":"houtenteo"},"content":"public class AgeContainsValuePredicate implements Predicate\u003cPerson\u003e {","lastModifiedDate":"2021-10-25"},{"lineNumber":14,"author":{"gitId":"houtenteo"},"content":"    private final List\u003cString\u003e ages;","lastModifiedDate":"2021-10-25"},{"lineNumber":15,"author":{"gitId":"houtenteo"},"content":"    private final boolean isFindAll;","lastModifiedDate":"2021-10-26"},{"lineNumber":16,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":17,"author":{"gitId":"houtenteo"},"content":"    /**","lastModifiedDate":"2021-10-26"},{"lineNumber":18,"author":{"gitId":"houtenteo"},"content":"     * Constructor for the AgeContainsValuePredicate class","lastModifiedDate":"2021-10-26"},{"lineNumber":19,"author":{"gitId":"houtenteo"},"content":"     * @param ages The keywords to compare against the {@code Person}\u0027s {@code Age}","lastModifiedDate":"2021-10-26"},{"lineNumber":20,"author":{"gitId":"houtenteo"},"content":"     * @param isFindAll True if all keywords need to match, false otherwise","lastModifiedDate":"2021-10-26"},{"lineNumber":21,"author":{"gitId":"houtenteo"},"content":"     */","lastModifiedDate":"2021-10-26"},{"lineNumber":22,"author":{"gitId":"houtenteo"},"content":"    public AgeContainsValuePredicate(List\u003cString\u003e ages, boolean isFindAll) {","lastModifiedDate":"2021-10-26"},{"lineNumber":23,"author":{"gitId":"houtenteo"},"content":"        requireNonNull(ages);","lastModifiedDate":"2021-10-26"},{"lineNumber":24,"author":{"gitId":"houtenteo"},"content":"        this.ages \u003d ages;","lastModifiedDate":"2021-10-25"},{"lineNumber":25,"author":{"gitId":"houtenteo"},"content":"        this.isFindAll \u003d isFindAll;","lastModifiedDate":"2021-10-26"},{"lineNumber":26,"author":{"gitId":"houtenteo"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":27,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":28,"author":{"gitId":"houtenteo"},"content":"    @Override","lastModifiedDate":"2021-10-25"},{"lineNumber":29,"author":{"gitId":"houtenteo"},"content":"    public boolean test(Person person) {","lastModifiedDate":"2021-10-25"},{"lineNumber":30,"author":{"gitId":"houtenteo"},"content":"        if (isFindAll) {","lastModifiedDate":"2021-10-26"},{"lineNumber":31,"author":{"gitId":"houtenteo"},"content":"            return ages.stream()","lastModifiedDate":"2021-10-26"},{"lineNumber":32,"author":{"gitId":"houtenteo"},"content":"                    .allMatch(age -\u003e person.getAge().value.equals(age));","lastModifiedDate":"2021-10-26"},{"lineNumber":33,"author":{"gitId":"houtenteo"},"content":"        }","lastModifiedDate":"2021-10-26"},{"lineNumber":34,"author":{"gitId":"houtenteo"},"content":"        return ages.stream()","lastModifiedDate":"2021-10-25"},{"lineNumber":35,"author":{"gitId":"houtenteo"},"content":"                .anyMatch(age -\u003e person.getAge().value.equals(age));","lastModifiedDate":"2021-10-25"},{"lineNumber":36,"author":{"gitId":"houtenteo"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":37,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":38,"author":{"gitId":"houtenteo"},"content":"    @Override","lastModifiedDate":"2021-10-25"},{"lineNumber":39,"author":{"gitId":"houtenteo"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-25"},{"lineNumber":40,"author":{"gitId":"houtenteo"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-25"},{"lineNumber":41,"author":{"gitId":"houtenteo"},"content":"                || (other instanceof AgeContainsValuePredicate // instanceof handles nulls","lastModifiedDate":"2021-10-25"},{"lineNumber":42,"author":{"gitId":"houtenteo"},"content":"                \u0026\u0026 ages.equals(((AgeContainsValuePredicate) other).ages))","lastModifiedDate":"2021-10-27"},{"lineNumber":43,"author":{"gitId":"houtenteo"},"content":"                \u0026\u0026 isFindAll \u003d\u003d ((AgeContainsValuePredicate) other).isFindAll; // state check","lastModifiedDate":"2021-10-27"},{"lineNumber":44,"author":{"gitId":"houtenteo"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":45,"author":{"gitId":"houtenteo"},"content":"}","lastModifiedDate":"2021-10-25"},{"lineNumber":46,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-27"}],"authorContributionMap":{"houtenteo":46}},{"path":"src/main/java/seedu/address/model/person/predicates/CalledPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"houtenteo"},"content":"package seedu.address.model.person.predicates;","lastModifiedDate":"2021-10-25"},{"lineNumber":2,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":3,"author":{"gitId":"houtenteo"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-26"},{"lineNumber":4,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":5,"author":{"gitId":"houtenteo"},"content":"import java.util.List;","lastModifiedDate":"2021-10-25"},{"lineNumber":6,"author":{"gitId":"houtenteo"},"content":"import java.util.Locale;","lastModifiedDate":"2021-10-25"},{"lineNumber":7,"author":{"gitId":"houtenteo"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2021-10-25"},{"lineNumber":8,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":9,"author":{"gitId":"houtenteo"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2021-10-25"},{"lineNumber":10,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":11,"author":{"gitId":"houtenteo"},"content":"/**","lastModifiedDate":"2021-10-26"},{"lineNumber":12,"author":{"gitId":"pranav-ganesh"},"content":" * Tests that a {@code Person}\u0027s {@code Called} matches the value given.","lastModifiedDate":"2021-11-04"},{"lineNumber":13,"author":{"gitId":"houtenteo"},"content":" */","lastModifiedDate":"2021-10-26"},{"lineNumber":14,"author":{"gitId":"pranav-ganesh"},"content":"public class CalledPredicate implements Predicate\u003cPerson\u003e {","lastModifiedDate":"2021-11-04"},{"lineNumber":15,"author":{"gitId":"houtenteo"},"content":"    private final List\u003cString\u003e keywords;","lastModifiedDate":"2021-10-25"},{"lineNumber":16,"author":{"gitId":"houtenteo"},"content":"    private final boolean isFindAll;","lastModifiedDate":"2021-10-26"},{"lineNumber":17,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":18,"author":{"gitId":"houtenteo"},"content":"    /**","lastModifiedDate":"2021-10-26"},{"lineNumber":19,"author":{"gitId":"pranav-ganesh"},"content":"     * Constructor for the CalledPredicate class","lastModifiedDate":"2021-11-04"},{"lineNumber":20,"author":{"gitId":"pranav-ganesh"},"content":"     * @param keywords The keywords to compare against the {@code Person}\u0027s {@code isCalled}","lastModifiedDate":"2021-11-04"},{"lineNumber":21,"author":{"gitId":"houtenteo"},"content":"     * @param isFindAll True if all keywords need to match, false otherwise","lastModifiedDate":"2021-10-26"},{"lineNumber":22,"author":{"gitId":"houtenteo"},"content":"     */","lastModifiedDate":"2021-10-26"},{"lineNumber":23,"author":{"gitId":"pranav-ganesh"},"content":"    public CalledPredicate(List\u003cString\u003e keywords, boolean isFindAll) {","lastModifiedDate":"2021-11-04"},{"lineNumber":24,"author":{"gitId":"houtenteo"},"content":"        requireNonNull(keywords);","lastModifiedDate":"2021-10-26"},{"lineNumber":25,"author":{"gitId":"houtenteo"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2021-10-25"},{"lineNumber":26,"author":{"gitId":"houtenteo"},"content":"        this.isFindAll \u003d isFindAll;","lastModifiedDate":"2021-10-26"},{"lineNumber":27,"author":{"gitId":"houtenteo"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":28,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":29,"author":{"gitId":"houtenteo"},"content":"    @Override","lastModifiedDate":"2021-10-25"},{"lineNumber":30,"author":{"gitId":"houtenteo"},"content":"    public boolean test(Person person) {","lastModifiedDate":"2021-10-25"},{"lineNumber":31,"author":{"gitId":"houtenteo"},"content":"        if (isFindAll) {","lastModifiedDate":"2021-10-26"},{"lineNumber":32,"author":{"gitId":"houtenteo"},"content":"            return keywords.stream()","lastModifiedDate":"2021-10-26"},{"lineNumber":33,"author":{"gitId":"pranav-ganesh"},"content":"                    .allMatch(keyword -\u003e person.getIsCalled().toString().toLowerCase(Locale.ROOT).equals(","lastModifiedDate":"2021-11-04"},{"lineNumber":34,"author":{"gitId":"houtenteo"},"content":"                            getDoneValueFromKeyword(keyword)","lastModifiedDate":"2021-10-26"},{"lineNumber":35,"author":{"gitId":"houtenteo"},"content":"                    ));","lastModifiedDate":"2021-10-26"},{"lineNumber":36,"author":{"gitId":"houtenteo"},"content":"        }","lastModifiedDate":"2021-10-26"},{"lineNumber":37,"author":{"gitId":"houtenteo"},"content":"        return keywords.stream()","lastModifiedDate":"2021-10-25"},{"lineNumber":38,"author":{"gitId":"pranav-ganesh"},"content":"                .anyMatch(keyword -\u003e person.getIsCalled().toString().toLowerCase(Locale.ROOT).equals(","lastModifiedDate":"2021-11-04"},{"lineNumber":39,"author":{"gitId":"houtenteo"},"content":"                        getDoneValueFromKeyword(keyword)","lastModifiedDate":"2021-10-26"},{"lineNumber":40,"author":{"gitId":"houtenteo"},"content":"                ));","lastModifiedDate":"2021-10-26"},{"lineNumber":41,"author":{"gitId":"houtenteo"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":42,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":43,"author":{"gitId":"houtenteo"},"content":"    /**","lastModifiedDate":"2021-10-26"},{"lineNumber":44,"author":{"gitId":"houtenteo"},"content":"     * Allows more flexibility for user inputs","lastModifiedDate":"2021-10-26"},{"lineNumber":45,"author":{"gitId":"houtenteo"},"content":"     * @param keyword entered by user","lastModifiedDate":"2021-10-26"},{"lineNumber":46,"author":{"gitId":"houtenteo"},"content":"     * @return True if input is t or true","lastModifiedDate":"2021-10-26"},{"lineNumber":47,"author":{"gitId":"houtenteo"},"content":"     *          false if its f or false","lastModifiedDate":"2021-10-26"},{"lineNumber":48,"author":{"gitId":"houtenteo"},"content":"     */","lastModifiedDate":"2021-10-26"},{"lineNumber":49,"author":{"gitId":"houtenteo"},"content":"    private String getDoneValueFromKeyword(String keyword) {","lastModifiedDate":"2021-10-26"},{"lineNumber":50,"author":{"gitId":"houtenteo"},"content":"        String test \u003d keyword.toLowerCase(Locale.ROOT);","lastModifiedDate":"2021-10-26"},{"lineNumber":51,"author":{"gitId":"houtenteo"},"content":"        if (test.equals(\"t\") || test.equals(\"true\")) {","lastModifiedDate":"2021-10-26"},{"lineNumber":52,"author":{"gitId":"houtenteo"},"content":"            return \"true\";","lastModifiedDate":"2021-10-26"},{"lineNumber":53,"author":{"gitId":"houtenteo"},"content":"        } else if (test.equals(\"f\") || test.equals(\"false\")) {","lastModifiedDate":"2021-10-26"},{"lineNumber":54,"author":{"gitId":"houtenteo"},"content":"            return \"false\";","lastModifiedDate":"2021-10-26"},{"lineNumber":55,"author":{"gitId":"houtenteo"},"content":"        } else {","lastModifiedDate":"2021-10-26"},{"lineNumber":56,"author":{"gitId":"houtenteo"},"content":"            // Basically return anything that is not \u0027true\u0027 / \u0027false\u0027 / \u0027N.A\u0027","lastModifiedDate":"2021-10-26"},{"lineNumber":57,"author":{"gitId":"houtenteo"},"content":"            // so that the predicate will return false","lastModifiedDate":"2021-10-26"},{"lineNumber":58,"author":{"gitId":"houtenteo"},"content":"            return \"THIS IS NOT A DONE VALUE\";","lastModifiedDate":"2021-10-26"},{"lineNumber":59,"author":{"gitId":"houtenteo"},"content":"        }","lastModifiedDate":"2021-10-26"},{"lineNumber":60,"author":{"gitId":"houtenteo"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":61,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":62,"author":{"gitId":"houtenteo"},"content":"    @Override","lastModifiedDate":"2021-10-25"},{"lineNumber":63,"author":{"gitId":"houtenteo"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-25"},{"lineNumber":64,"author":{"gitId":"houtenteo"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-25"},{"lineNumber":65,"author":{"gitId":"pranav-ganesh"},"content":"                || (other instanceof CalledPredicate // instanceof handles nulls","lastModifiedDate":"2021-11-04"},{"lineNumber":66,"author":{"gitId":"pranav-ganesh"},"content":"                \u0026\u0026 keywords.equals(((CalledPredicate) other).keywords))","lastModifiedDate":"2021-11-04"},{"lineNumber":67,"author":{"gitId":"pranav-ganesh"},"content":"                \u0026\u0026 isFindAll \u003d\u003d ((CalledPredicate) other).isFindAll; // state check","lastModifiedDate":"2021-11-04"},{"lineNumber":68,"author":{"gitId":"houtenteo"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":69,"author":{"gitId":"houtenteo"},"content":"}","lastModifiedDate":"2021-10-25"}],"authorContributionMap":{"houtenteo":59,"pranav-ganesh":10}},{"path":"src/main/java/seedu/address/model/person/predicates/CombinedPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"houtenteo"},"content":"package seedu.address.model.person.predicates;","lastModifiedDate":"2021-10-26"},{"lineNumber":2,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":3,"author":{"gitId":"houtenteo"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-26"},{"lineNumber":4,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":5,"author":{"gitId":"houtenteo"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-26"},{"lineNumber":6,"author":{"gitId":"houtenteo"},"content":"import java.util.List;","lastModifiedDate":"2021-10-26"},{"lineNumber":7,"author":{"gitId":"houtenteo"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2021-10-26"},{"lineNumber":8,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":9,"author":{"gitId":"houtenteo"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2021-10-26"},{"lineNumber":10,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":11,"author":{"gitId":"houtenteo"},"content":"/**","lastModifiedDate":"2021-10-26"},{"lineNumber":12,"author":{"gitId":"houtenteo"},"content":" * Tests that a {@code Person}\u0027s fields matches any of the respective fields provided","lastModifiedDate":"2021-10-26"},{"lineNumber":13,"author":{"gitId":"houtenteo"},"content":" */","lastModifiedDate":"2021-10-26"},{"lineNumber":14,"author":{"gitId":"houtenteo"},"content":"public class CombinedPredicate implements Predicate\u003cPerson\u003e {","lastModifiedDate":"2021-10-26"},{"lineNumber":15,"author":{"gitId":"houtenteo"},"content":"    private final List\u003cPredicate\u003cPerson\u003e\u003e predicates;","lastModifiedDate":"2021-10-26"},{"lineNumber":16,"author":{"gitId":"houtenteo"},"content":"    private final boolean isFindAll;","lastModifiedDate":"2021-10-26"},{"lineNumber":17,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":18,"author":{"gitId":"houtenteo"},"content":"    /**","lastModifiedDate":"2021-10-26"},{"lineNumber":19,"author":{"gitId":"houtenteo"},"content":"     * Constructor for the CombinedPredicate class","lastModifiedDate":"2021-10-26"},{"lineNumber":20,"author":{"gitId":"houtenteo"},"content":"     * @param predicates The predicates to compare against the {@code Person}","lastModifiedDate":"2021-10-26"},{"lineNumber":21,"author":{"gitId":"houtenteo"},"content":"     * @param isFindAll True if all predicates need to return true, false otherwise","lastModifiedDate":"2021-10-26"},{"lineNumber":22,"author":{"gitId":"houtenteo"},"content":"     */","lastModifiedDate":"2021-10-26"},{"lineNumber":23,"author":{"gitId":"houtenteo"},"content":"    public CombinedPredicate(ArrayList\u003cPredicate\u003cPerson\u003e\u003e predicates, boolean isFindAll) {","lastModifiedDate":"2021-10-26"},{"lineNumber":24,"author":{"gitId":"houtenteo"},"content":"        requireNonNull(predicates);","lastModifiedDate":"2021-10-26"},{"lineNumber":25,"author":{"gitId":"houtenteo"},"content":"        this.predicates \u003d predicates;","lastModifiedDate":"2021-10-26"},{"lineNumber":26,"author":{"gitId":"houtenteo"},"content":"        this.isFindAll \u003d isFindAll;","lastModifiedDate":"2021-10-26"},{"lineNumber":27,"author":{"gitId":"houtenteo"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":28,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":29,"author":{"gitId":"houtenteo"},"content":"    @Override","lastModifiedDate":"2021-10-26"},{"lineNumber":30,"author":{"gitId":"houtenteo"},"content":"    public boolean test(Person person) {","lastModifiedDate":"2021-10-26"},{"lineNumber":31,"author":{"gitId":"houtenteo"},"content":"        if (isFindAll) {","lastModifiedDate":"2021-10-26"},{"lineNumber":32,"author":{"gitId":"houtenteo"},"content":"            return predicates.stream()","lastModifiedDate":"2021-10-26"},{"lineNumber":33,"author":{"gitId":"houtenteo"},"content":"                    .allMatch(predicate -\u003e predicate.test(person));","lastModifiedDate":"2021-10-26"},{"lineNumber":34,"author":{"gitId":"houtenteo"},"content":"        }","lastModifiedDate":"2021-10-26"},{"lineNumber":35,"author":{"gitId":"houtenteo"},"content":"        return predicates.stream()","lastModifiedDate":"2021-10-26"},{"lineNumber":36,"author":{"gitId":"houtenteo"},"content":"                .anyMatch(predicate -\u003e predicate.test(person));","lastModifiedDate":"2021-10-26"},{"lineNumber":37,"author":{"gitId":"houtenteo"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":38,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":39,"author":{"gitId":"houtenteo"},"content":"    @Override","lastModifiedDate":"2021-10-26"},{"lineNumber":40,"author":{"gitId":"houtenteo"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-26"},{"lineNumber":41,"author":{"gitId":"houtenteo"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-26"},{"lineNumber":42,"author":{"gitId":"houtenteo"},"content":"                || (other instanceof CombinedPredicate // instanceof handles nulls","lastModifiedDate":"2021-10-26"},{"lineNumber":43,"author":{"gitId":"houtenteo"},"content":"                \u0026\u0026 predicates.equals(((CombinedPredicate) other).predicates))","lastModifiedDate":"2021-10-27"},{"lineNumber":44,"author":{"gitId":"houtenteo"},"content":"                \u0026\u0026 isFindAll \u003d\u003d ((CombinedPredicate) other).isFindAll; // state check","lastModifiedDate":"2021-10-27"},{"lineNumber":45,"author":{"gitId":"houtenteo"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":46,"author":{"gitId":"houtenteo"},"content":"}","lastModifiedDate":"2021-10-26"}],"authorContributionMap":{"houtenteo":46}},{"path":"src/main/java/seedu/address/model/person/predicates/EmailContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"houtenteo"},"content":"package seedu.address.model.person.predicates;","lastModifiedDate":"2021-10-25"},{"lineNumber":2,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":3,"author":{"gitId":"houtenteo"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-26"},{"lineNumber":4,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":5,"author":{"gitId":"houtenteo"},"content":"import java.util.List;","lastModifiedDate":"2021-10-25"},{"lineNumber":6,"author":{"gitId":"houtenteo"},"content":"import java.util.Locale;","lastModifiedDate":"2021-10-27"},{"lineNumber":7,"author":{"gitId":"houtenteo"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2021-10-25"},{"lineNumber":8,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":9,"author":{"gitId":"houtenteo"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2021-10-25"},{"lineNumber":10,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":11,"author":{"gitId":"houtenteo"},"content":"/**","lastModifiedDate":"2021-10-25"},{"lineNumber":12,"author":{"gitId":"houtenteo"},"content":" * Tests that a {@code Person}\u0027s {@code Email} matches the keywords given.","lastModifiedDate":"2021-10-25"},{"lineNumber":13,"author":{"gitId":"houtenteo"},"content":" */","lastModifiedDate":"2021-10-25"},{"lineNumber":14,"author":{"gitId":"houtenteo"},"content":"public class EmailContainsKeywordsPredicate implements Predicate\u003cPerson\u003e {","lastModifiedDate":"2021-10-25"},{"lineNumber":15,"author":{"gitId":"houtenteo"},"content":"    private final List\u003cString\u003e keywords;","lastModifiedDate":"2021-10-25"},{"lineNumber":16,"author":{"gitId":"houtenteo"},"content":"    private final boolean isFindAll;","lastModifiedDate":"2021-10-26"},{"lineNumber":17,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":18,"author":{"gitId":"houtenteo"},"content":"    /**","lastModifiedDate":"2021-10-26"},{"lineNumber":19,"author":{"gitId":"houtenteo"},"content":"     * Constructor for the EmailContainsKeywordsPredicate class","lastModifiedDate":"2021-10-26"},{"lineNumber":20,"author":{"gitId":"houtenteo"},"content":"     * @param keywords The keywords to compare against the {@code Person}\u0027s {@code Email}","lastModifiedDate":"2021-10-26"},{"lineNumber":21,"author":{"gitId":"houtenteo"},"content":"     * @param isFindAll True if all keywords need to match, false otherwise","lastModifiedDate":"2021-10-26"},{"lineNumber":22,"author":{"gitId":"houtenteo"},"content":"     */","lastModifiedDate":"2021-10-26"},{"lineNumber":23,"author":{"gitId":"houtenteo"},"content":"    public EmailContainsKeywordsPredicate(List\u003cString\u003e keywords, boolean isFindAll) {","lastModifiedDate":"2021-10-26"},{"lineNumber":24,"author":{"gitId":"houtenteo"},"content":"        requireNonNull(keywords);","lastModifiedDate":"2021-10-26"},{"lineNumber":25,"author":{"gitId":"houtenteo"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2021-10-25"},{"lineNumber":26,"author":{"gitId":"houtenteo"},"content":"        this.isFindAll \u003d isFindAll;","lastModifiedDate":"2021-10-26"},{"lineNumber":27,"author":{"gitId":"houtenteo"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":28,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":29,"author":{"gitId":"houtenteo"},"content":"    @Override","lastModifiedDate":"2021-10-25"},{"lineNumber":30,"author":{"gitId":"houtenteo"},"content":"    public boolean test(Person person) {","lastModifiedDate":"2021-10-25"},{"lineNumber":31,"author":{"gitId":"houtenteo"},"content":"        if (isFindAll) {","lastModifiedDate":"2021-10-26"},{"lineNumber":32,"author":{"gitId":"houtenteo"},"content":"            return keywords.stream()","lastModifiedDate":"2021-10-26"},{"lineNumber":33,"author":{"gitId":"houtenteo"},"content":"                    .allMatch(keyword -\u003e person.getEmail().value.toLowerCase(Locale.ROOT)","lastModifiedDate":"2021-10-27"},{"lineNumber":34,"author":{"gitId":"houtenteo"},"content":"                            .contains(keyword.toLowerCase(Locale.ROOT)));","lastModifiedDate":"2021-10-27"},{"lineNumber":35,"author":{"gitId":"houtenteo"},"content":"        }","lastModifiedDate":"2021-10-26"},{"lineNumber":36,"author":{"gitId":"houtenteo"},"content":"        return keywords.stream()","lastModifiedDate":"2021-10-25"},{"lineNumber":37,"author":{"gitId":"houtenteo"},"content":"                .anyMatch(keyword -\u003e person.getEmail().value.toLowerCase(Locale.ROOT)","lastModifiedDate":"2021-10-27"},{"lineNumber":38,"author":{"gitId":"houtenteo"},"content":"                        .contains(keyword.toLowerCase(Locale.ROOT)));","lastModifiedDate":"2021-10-27"},{"lineNumber":39,"author":{"gitId":"houtenteo"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":40,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":41,"author":{"gitId":"houtenteo"},"content":"    @Override","lastModifiedDate":"2021-10-25"},{"lineNumber":42,"author":{"gitId":"houtenteo"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-25"},{"lineNumber":43,"author":{"gitId":"houtenteo"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-25"},{"lineNumber":44,"author":{"gitId":"houtenteo"},"content":"                || (other instanceof EmailContainsKeywordsPredicate // instanceof handles nulls","lastModifiedDate":"2021-10-25"},{"lineNumber":45,"author":{"gitId":"houtenteo"},"content":"                \u0026\u0026 keywords.equals(((EmailContainsKeywordsPredicate) other).keywords))","lastModifiedDate":"2021-10-27"},{"lineNumber":46,"author":{"gitId":"houtenteo"},"content":"                \u0026\u0026 isFindAll \u003d\u003d ((EmailContainsKeywordsPredicate) other).isFindAll; // state check","lastModifiedDate":"2021-10-27"},{"lineNumber":47,"author":{"gitId":"houtenteo"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":48,"author":{"gitId":"houtenteo"},"content":"}","lastModifiedDate":"2021-10-25"}],"authorContributionMap":{"houtenteo":48}},{"path":"src/main/java/seedu/address/model/person/predicates/GenderContainsKeywordPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"houtenteo"},"content":"package seedu.address.model.person.predicates;","lastModifiedDate":"2021-10-25"},{"lineNumber":2,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":3,"author":{"gitId":"houtenteo"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-26"},{"lineNumber":4,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":5,"author":{"gitId":"houtenteo"},"content":"import java.util.List;","lastModifiedDate":"2021-10-25"},{"lineNumber":6,"author":{"gitId":"houtenteo"},"content":"import java.util.Locale;","lastModifiedDate":"2021-10-25"},{"lineNumber":7,"author":{"gitId":"houtenteo"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2021-10-25"},{"lineNumber":8,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":9,"author":{"gitId":"houtenteo"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2021-10-25"},{"lineNumber":10,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":11,"author":{"gitId":"houtenteo"},"content":"/**","lastModifiedDate":"2021-10-26"},{"lineNumber":12,"author":{"gitId":"houtenteo"},"content":" * Tests that a {@code Person}\u0027s {@code Gender} matches the gender given.","lastModifiedDate":"2021-10-26"},{"lineNumber":13,"author":{"gitId":"houtenteo"},"content":" */","lastModifiedDate":"2021-10-26"},{"lineNumber":14,"author":{"gitId":"houtenteo"},"content":"public class GenderContainsKeywordPredicate implements Predicate\u003cPerson\u003e {","lastModifiedDate":"2021-10-25"},{"lineNumber":15,"author":{"gitId":"houtenteo"},"content":"    private final List\u003cString\u003e keywords;","lastModifiedDate":"2021-10-25"},{"lineNumber":16,"author":{"gitId":"houtenteo"},"content":"    private final boolean isFindAll;","lastModifiedDate":"2021-10-26"},{"lineNumber":17,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":18,"author":{"gitId":"houtenteo"},"content":"    /**","lastModifiedDate":"2021-10-26"},{"lineNumber":19,"author":{"gitId":"houtenteo"},"content":"     * Constructor for the GenderContainsKeywordPredicate class","lastModifiedDate":"2021-10-26"},{"lineNumber":20,"author":{"gitId":"houtenteo"},"content":"     * @param keywords The keywords to compare against the {@code Person}\u0027s {@code Gender}","lastModifiedDate":"2021-10-26"},{"lineNumber":21,"author":{"gitId":"houtenteo"},"content":"     * @param isFindAll True if all keywords need to match, false otherwise","lastModifiedDate":"2021-10-26"},{"lineNumber":22,"author":{"gitId":"houtenteo"},"content":"     */","lastModifiedDate":"2021-10-26"},{"lineNumber":23,"author":{"gitId":"houtenteo"},"content":"    public GenderContainsKeywordPredicate(List\u003cString\u003e keywords, boolean isFindAll) {","lastModifiedDate":"2021-10-26"},{"lineNumber":24,"author":{"gitId":"houtenteo"},"content":"        requireNonNull(keywords);","lastModifiedDate":"2021-10-26"},{"lineNumber":25,"author":{"gitId":"houtenteo"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2021-10-25"},{"lineNumber":26,"author":{"gitId":"houtenteo"},"content":"        this.isFindAll \u003d isFindAll;","lastModifiedDate":"2021-10-26"},{"lineNumber":27,"author":{"gitId":"houtenteo"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":28,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":29,"author":{"gitId":"houtenteo"},"content":"    @Override","lastModifiedDate":"2021-10-25"},{"lineNumber":30,"author":{"gitId":"houtenteo"},"content":"    public boolean test(Person person) {","lastModifiedDate":"2021-10-25"},{"lineNumber":31,"author":{"gitId":"houtenteo"},"content":"        if (isFindAll) {","lastModifiedDate":"2021-10-26"},{"lineNumber":32,"author":{"gitId":"houtenteo"},"content":"            return keywords.stream()","lastModifiedDate":"2021-10-26"},{"lineNumber":33,"author":{"gitId":"houtenteo"},"content":"                    .allMatch(keyword -\u003e person.getGender().value.toLowerCase(Locale.ROOT).contains(","lastModifiedDate":"2021-10-26"},{"lineNumber":34,"author":{"gitId":"houtenteo"},"content":"                            getGenderValueFromKeyword(keyword)","lastModifiedDate":"2021-10-26"},{"lineNumber":35,"author":{"gitId":"houtenteo"},"content":"                    ));","lastModifiedDate":"2021-10-26"},{"lineNumber":36,"author":{"gitId":"houtenteo"},"content":"        }","lastModifiedDate":"2021-10-26"},{"lineNumber":37,"author":{"gitId":"houtenteo"},"content":"        return keywords.stream()","lastModifiedDate":"2021-10-25"},{"lineNumber":38,"author":{"gitId":"houtenteo"},"content":"                .anyMatch(keyword -\u003e person.getGender().value.toLowerCase(Locale.ROOT).contains(","lastModifiedDate":"2021-10-26"},{"lineNumber":39,"author":{"gitId":"houtenteo"},"content":"                        getGenderValueFromKeyword(keyword)","lastModifiedDate":"2021-10-26"},{"lineNumber":40,"author":{"gitId":"houtenteo"},"content":"                ));","lastModifiedDate":"2021-10-26"},{"lineNumber":41,"author":{"gitId":"houtenteo"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":42,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":43,"author":{"gitId":"houtenteo"},"content":"    /**","lastModifiedDate":"2021-10-26"},{"lineNumber":44,"author":{"gitId":"houtenteo"},"content":"     * Allows more flexibility for user inputs","lastModifiedDate":"2021-10-26"},{"lineNumber":45,"author":{"gitId":"houtenteo"},"content":"     * @param keyword entered by user","lastModifiedDate":"2021-10-26"},{"lineNumber":46,"author":{"gitId":"houtenteo"},"content":"     * @return m if input is m or male","lastModifiedDate":"2021-10-26"},{"lineNumber":47,"author":{"gitId":"houtenteo"},"content":"     *          f if its f or female","lastModifiedDate":"2021-10-26"},{"lineNumber":48,"author":{"gitId":"houtenteo"},"content":"     */","lastModifiedDate":"2021-10-26"},{"lineNumber":49,"author":{"gitId":"houtenteo"},"content":"    private String getGenderValueFromKeyword(String keyword) {","lastModifiedDate":"2021-10-26"},{"lineNumber":50,"author":{"gitId":"houtenteo"},"content":"        String test \u003d keyword.toLowerCase(Locale.ROOT);","lastModifiedDate":"2021-10-26"},{"lineNumber":51,"author":{"gitId":"houtenteo"},"content":"        if (test.equals(\"m\") || test.equals(\"male\")) {","lastModifiedDate":"2021-10-26"},{"lineNumber":52,"author":{"gitId":"houtenteo"},"content":"            return \"m\";","lastModifiedDate":"2021-10-26"},{"lineNumber":53,"author":{"gitId":"houtenteo"},"content":"        } else if (test.equals(\"f\") || test.equals(\"female\")) {","lastModifiedDate":"2021-10-26"},{"lineNumber":54,"author":{"gitId":"houtenteo"},"content":"            return \"f\";","lastModifiedDate":"2021-10-26"},{"lineNumber":55,"author":{"gitId":"houtenteo"},"content":"        } else if (test.equals(\"n.a\")) {","lastModifiedDate":"2021-10-27"},{"lineNumber":56,"author":{"gitId":"houtenteo"},"content":"            return (\"n.a\");","lastModifiedDate":"2021-10-27"},{"lineNumber":57,"author":{"gitId":"houtenteo"},"content":"        } else {","lastModifiedDate":"2021-10-26"},{"lineNumber":58,"author":{"gitId":"houtenteo"},"content":"            // Basically return anything that is not \u0027m\u0027 / \u0027f\u0027 / \u0027N.A\u0027","lastModifiedDate":"2021-10-26"},{"lineNumber":59,"author":{"gitId":"houtenteo"},"content":"            // so that the predicate will return false","lastModifiedDate":"2021-10-26"},{"lineNumber":60,"author":{"gitId":"houtenteo"},"content":"            return \"THIS IS NOT A GENDER\";","lastModifiedDate":"2021-10-26"},{"lineNumber":61,"author":{"gitId":"houtenteo"},"content":"        }","lastModifiedDate":"2021-10-26"},{"lineNumber":62,"author":{"gitId":"houtenteo"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":63,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":64,"author":{"gitId":"houtenteo"},"content":"    @Override","lastModifiedDate":"2021-10-25"},{"lineNumber":65,"author":{"gitId":"houtenteo"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-25"},{"lineNumber":66,"author":{"gitId":"houtenteo"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-25"},{"lineNumber":67,"author":{"gitId":"houtenteo"},"content":"                || (other instanceof GenderContainsKeywordPredicate // instanceof handles nulls","lastModifiedDate":"2021-10-25"},{"lineNumber":68,"author":{"gitId":"houtenteo"},"content":"                \u0026\u0026 keywords.equals(((GenderContainsKeywordPredicate) other).keywords))","lastModifiedDate":"2021-10-27"},{"lineNumber":69,"author":{"gitId":"houtenteo"},"content":"                \u0026\u0026 isFindAll \u003d\u003d ((GenderContainsKeywordPredicate) other).isFindAll; // state check","lastModifiedDate":"2021-10-27"},{"lineNumber":70,"author":{"gitId":"houtenteo"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":71,"author":{"gitId":"houtenteo"},"content":"}","lastModifiedDate":"2021-10-25"}],"authorContributionMap":{"houtenteo":71}},{"path":"src/main/java/seedu/address/model/person/predicates/InterestContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"houtenteo"},"content":"package seedu.address.model.person.predicates;","lastModifiedDate":"2021-10-25"},{"lineNumber":2,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":3,"author":{"gitId":"houtenteo"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-26"},{"lineNumber":4,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":5,"author":{"gitId":"houtenteo"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-25"},{"lineNumber":6,"author":{"gitId":"houtenteo"},"content":"import java.util.List;","lastModifiedDate":"2021-10-25"},{"lineNumber":7,"author":{"gitId":"houtenteo"},"content":"import java.util.Locale;","lastModifiedDate":"2021-10-25"},{"lineNumber":8,"author":{"gitId":"houtenteo"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2021-10-25"},{"lineNumber":9,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":10,"author":{"gitId":"houtenteo"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2021-10-25"},{"lineNumber":11,"author":{"gitId":"houtenteo"},"content":"import seedu.address.model.person.interests.Interest;","lastModifiedDate":"2021-10-25"},{"lineNumber":12,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":13,"author":{"gitId":"houtenteo"},"content":"/**","lastModifiedDate":"2021-10-26"},{"lineNumber":14,"author":{"gitId":"houtenteo"},"content":" * Tests that a {@code Person}\u0027s {@code Interests} contains the keywords given.","lastModifiedDate":"2021-10-26"},{"lineNumber":15,"author":{"gitId":"houtenteo"},"content":" */","lastModifiedDate":"2021-10-26"},{"lineNumber":16,"author":{"gitId":"houtenteo"},"content":"public class InterestContainsKeywordsPredicate implements Predicate\u003cPerson\u003e {","lastModifiedDate":"2021-10-25"},{"lineNumber":17,"author":{"gitId":"houtenteo"},"content":"    private final List\u003cString\u003e interests;","lastModifiedDate":"2021-10-25"},{"lineNumber":18,"author":{"gitId":"houtenteo"},"content":"    private boolean isFindAll;","lastModifiedDate":"2021-10-26"},{"lineNumber":19,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":20,"author":{"gitId":"houtenteo"},"content":"    /**","lastModifiedDate":"2021-10-26"},{"lineNumber":21,"author":{"gitId":"houtenteo"},"content":"     * Constructor for the InterestContainsKeywordsPredicate class","lastModifiedDate":"2021-10-26"},{"lineNumber":22,"author":{"gitId":"houtenteo"},"content":"     * @param interests The interests to compare against the {@code Person}\u0027s {@code InterestsList}","lastModifiedDate":"2021-10-26"},{"lineNumber":23,"author":{"gitId":"houtenteo"},"content":"     * @param isFindAll True if all keywords need to match, false otherwise","lastModifiedDate":"2021-10-26"},{"lineNumber":24,"author":{"gitId":"houtenteo"},"content":"     */","lastModifiedDate":"2021-10-26"},{"lineNumber":25,"author":{"gitId":"houtenteo"},"content":"    public InterestContainsKeywordsPredicate(List\u003cString\u003e interests, boolean isFindAll) {","lastModifiedDate":"2021-10-26"},{"lineNumber":26,"author":{"gitId":"houtenteo"},"content":"        requireNonNull(interests);","lastModifiedDate":"2021-10-26"},{"lineNumber":27,"author":{"gitId":"houtenteo"},"content":"        this.interests \u003d interests;","lastModifiedDate":"2021-10-25"},{"lineNumber":28,"author":{"gitId":"houtenteo"},"content":"        this.isFindAll \u003d isFindAll;","lastModifiedDate":"2021-10-26"},{"lineNumber":29,"author":{"gitId":"houtenteo"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":30,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":31,"author":{"gitId":"houtenteo"},"content":"    @Override","lastModifiedDate":"2021-10-25"},{"lineNumber":32,"author":{"gitId":"houtenteo"},"content":"    public boolean test(Person person) {","lastModifiedDate":"2021-10-25"},{"lineNumber":33,"author":{"gitId":"houtenteo"},"content":"        ArrayList\u003cInterest\u003e personInterestsList \u003d person.getInterests().getAllInterests();","lastModifiedDate":"2021-10-25"},{"lineNumber":34,"author":{"gitId":"houtenteo"},"content":"        if (isFindAll) {","lastModifiedDate":"2021-10-26"},{"lineNumber":35,"author":{"gitId":"houtenteo"},"content":"            return interests.stream().allMatch(interest -\u003e personInterestsList","lastModifiedDate":"2021-10-26"},{"lineNumber":36,"author":{"gitId":"houtenteo"},"content":"                    .stream().anyMatch(interest1 -\u003e interest1.value.toLowerCase(Locale.ROOT)","lastModifiedDate":"2021-10-27"},{"lineNumber":37,"author":{"gitId":"houtenteo"},"content":"                            .contains(interest.toLowerCase(Locale.ROOT))));","lastModifiedDate":"2021-10-27"},{"lineNumber":38,"author":{"gitId":"houtenteo"},"content":"        }","lastModifiedDate":"2021-10-26"},{"lineNumber":39,"author":{"gitId":"houtenteo"},"content":"        return interests.stream().anyMatch(interest -\u003e personInterestsList","lastModifiedDate":"2021-10-25"},{"lineNumber":40,"author":{"gitId":"houtenteo"},"content":"                        .stream().anyMatch(interest1 -\u003e interest1.value.toLowerCase(Locale.ROOT)","lastModifiedDate":"2021-10-27"},{"lineNumber":41,"author":{"gitId":"houtenteo"},"content":"                        .contains(interest.toLowerCase(Locale.ROOT))));","lastModifiedDate":"2021-10-27"},{"lineNumber":42,"author":{"gitId":"houtenteo"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":43,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":44,"author":{"gitId":"houtenteo"},"content":"    @Override","lastModifiedDate":"2021-10-25"},{"lineNumber":45,"author":{"gitId":"houtenteo"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-25"},{"lineNumber":46,"author":{"gitId":"houtenteo"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-25"},{"lineNumber":47,"author":{"gitId":"houtenteo"},"content":"                || (other instanceof InterestContainsKeywordsPredicate // instanceof handles nulls","lastModifiedDate":"2021-10-25"},{"lineNumber":48,"author":{"gitId":"houtenteo"},"content":"                \u0026\u0026 interests.equals(((InterestContainsKeywordsPredicate) other).interests))","lastModifiedDate":"2021-10-27"},{"lineNumber":49,"author":{"gitId":"houtenteo"},"content":"                \u0026\u0026 isFindAll \u003d\u003d ((InterestContainsKeywordsPredicate) other).isFindAll; // state check","lastModifiedDate":"2021-10-27"},{"lineNumber":50,"author":{"gitId":"houtenteo"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":51,"author":{"gitId":"houtenteo"},"content":"}","lastModifiedDate":"2021-10-25"}],"authorContributionMap":{"houtenteo":51}},{"path":"src/main/java/seedu/address/model/person/predicates/NameContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"houtenteo"},"content":"package seedu.address.model.person.predicates;","lastModifiedDate":"2021-10-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"houtenteo"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-26"},{"lineNumber":4,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":6,"author":{"gitId":"houtenteo"},"content":"import java.util.Locale;","lastModifiedDate":"2021-10-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":9,"author":{"gitId":"houtenteo"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2021-10-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Tests that a {@code Person}\u0027s {@code Name} matches any of the keywords given.","lastModifiedDate":"2018-01-10"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class NameContainsKeywordsPredicate implements Predicate\u003cPerson\u003e {","lastModifiedDate":"2018-01-10"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    private final List\u003cString\u003e keywords;","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"houtenteo"},"content":"    private final boolean isFindAll;","lastModifiedDate":"2021-10-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"houtenteo"},"content":"    /**","lastModifiedDate":"2021-10-26"},{"lineNumber":19,"author":{"gitId":"houtenteo"},"content":"     * Constructor for the NameContainsKeywordsPredicate class","lastModifiedDate":"2021-10-26"},{"lineNumber":20,"author":{"gitId":"houtenteo"},"content":"     * @param keywords The keywords to compare against the {@code Person}\u0027s {@code name}","lastModifiedDate":"2021-10-26"},{"lineNumber":21,"author":{"gitId":"houtenteo"},"content":"     * @param isFindAll True if all keywords need to match, false otherwise","lastModifiedDate":"2021-10-26"},{"lineNumber":22,"author":{"gitId":"houtenteo"},"content":"     */","lastModifiedDate":"2021-10-26"},{"lineNumber":23,"author":{"gitId":"houtenteo"},"content":"    public NameContainsKeywordsPredicate(List\u003cString\u003e keywords, boolean isFindAll) {","lastModifiedDate":"2021-10-26"},{"lineNumber":24,"author":{"gitId":"houtenteo"},"content":"        requireNonNull(keywords);","lastModifiedDate":"2021-10-26"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"houtenteo"},"content":"        this.isFindAll \u003d isFindAll;","lastModifiedDate":"2021-10-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public boolean test(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":31,"author":{"gitId":"houtenteo"},"content":"        if (isFindAll) {","lastModifiedDate":"2021-10-26"},{"lineNumber":32,"author":{"gitId":"houtenteo"},"content":"            return keywords.stream()","lastModifiedDate":"2021-10-26"},{"lineNumber":33,"author":{"gitId":"houtenteo"},"content":"                    .allMatch(keyword -\u003e person.getName().fullName.toLowerCase(Locale.ROOT)","lastModifiedDate":"2021-10-27"},{"lineNumber":34,"author":{"gitId":"houtenteo"},"content":"                            .contains(keyword.toLowerCase(Locale.ROOT))","lastModifiedDate":"2021-10-27"},{"lineNumber":35,"author":{"gitId":"houtenteo"},"content":"                    );","lastModifiedDate":"2021-10-27"},{"lineNumber":36,"author":{"gitId":"houtenteo"},"content":"        }","lastModifiedDate":"2021-10-26"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return keywords.stream()","lastModifiedDate":"2017-06-12"},{"lineNumber":38,"author":{"gitId":"houtenteo"},"content":"                .anyMatch(keyword -\u003e person.getName().fullName.toLowerCase(Locale.ROOT)","lastModifiedDate":"2021-10-27"},{"lineNumber":39,"author":{"gitId":"houtenteo"},"content":"                        .contains(keyword.toLowerCase(Locale.ROOT))","lastModifiedDate":"2021-10-27"},{"lineNumber":40,"author":{"gitId":"houtenteo"},"content":"                );","lastModifiedDate":"2021-10-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-12"},{"lineNumber":45,"author":{"gitId":"houtenteo"},"content":"        System.out.println(\"HELLO\");","lastModifiedDate":"2021-11-02"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-12"},{"lineNumber":47,"author":{"gitId":"-"},"content":"                || (other instanceof NameContainsKeywordsPredicate // instanceof handles nulls","lastModifiedDate":"2017-06-12"},{"lineNumber":48,"author":{"gitId":"houtenteo"},"content":"                \u0026\u0026 keywords.equals(((NameContainsKeywordsPredicate) other).keywords))","lastModifiedDate":"2021-10-27"},{"lineNumber":49,"author":{"gitId":"houtenteo"},"content":"                \u0026\u0026 isFindAll \u003d\u003d ((NameContainsKeywordsPredicate) other).isFindAll; // state check","lastModifiedDate":"2021-10-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"houtenteo":26,"-":26}},{"path":"src/main/java/seedu/address/model/person/predicates/PhoneContainsNumberPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"houtenteo"},"content":"package seedu.address.model.person.predicates;","lastModifiedDate":"2021-10-25"},{"lineNumber":2,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":3,"author":{"gitId":"houtenteo"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-26"},{"lineNumber":4,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":5,"author":{"gitId":"houtenteo"},"content":"import java.util.List;","lastModifiedDate":"2021-10-25"},{"lineNumber":6,"author":{"gitId":"houtenteo"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2021-10-25"},{"lineNumber":7,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":8,"author":{"gitId":"houtenteo"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2021-10-25"},{"lineNumber":9,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":10,"author":{"gitId":"houtenteo"},"content":"/**","lastModifiedDate":"2021-10-25"},{"lineNumber":11,"author":{"gitId":"houtenteo"},"content":" * Tests that a {@code Person}\u0027s {@code Phone} contains a substring equivalent to the numbers given.","lastModifiedDate":"2021-10-25"},{"lineNumber":12,"author":{"gitId":"houtenteo"},"content":" */","lastModifiedDate":"2021-10-25"},{"lineNumber":13,"author":{"gitId":"houtenteo"},"content":"public class PhoneContainsNumberPredicate implements Predicate\u003cPerson\u003e {","lastModifiedDate":"2021-10-25"},{"lineNumber":14,"author":{"gitId":"houtenteo"},"content":"    private final List\u003cString\u003e numbers;","lastModifiedDate":"2021-10-25"},{"lineNumber":15,"author":{"gitId":"houtenteo"},"content":"    private final boolean isFindAll;","lastModifiedDate":"2021-10-26"},{"lineNumber":16,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":17,"author":{"gitId":"houtenteo"},"content":"    /**","lastModifiedDate":"2021-10-26"},{"lineNumber":18,"author":{"gitId":"houtenteo"},"content":"     * Constructor for the PhoneContainsNumberPredicate class","lastModifiedDate":"2021-10-26"},{"lineNumber":19,"author":{"gitId":"houtenteo"},"content":"     * @param numbers The numbers to compare against the {@code Person}\u0027s {@code phone}","lastModifiedDate":"2021-10-26"},{"lineNumber":20,"author":{"gitId":"houtenteo"},"content":"     * @param isFindAll True if all numbers need to match, false otherwise","lastModifiedDate":"2021-10-26"},{"lineNumber":21,"author":{"gitId":"houtenteo"},"content":"     */","lastModifiedDate":"2021-10-26"},{"lineNumber":22,"author":{"gitId":"houtenteo"},"content":"    public PhoneContainsNumberPredicate(List\u003cString\u003e numbers, boolean isFindAll) {","lastModifiedDate":"2021-10-26"},{"lineNumber":23,"author":{"gitId":"houtenteo"},"content":"        requireNonNull(numbers);","lastModifiedDate":"2021-10-26"},{"lineNumber":24,"author":{"gitId":"houtenteo"},"content":"        this.numbers \u003d numbers;","lastModifiedDate":"2021-10-25"},{"lineNumber":25,"author":{"gitId":"houtenteo"},"content":"        this.isFindAll \u003d isFindAll;","lastModifiedDate":"2021-10-26"},{"lineNumber":26,"author":{"gitId":"houtenteo"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":27,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":28,"author":{"gitId":"houtenteo"},"content":"    @Override","lastModifiedDate":"2021-10-25"},{"lineNumber":29,"author":{"gitId":"houtenteo"},"content":"    public boolean test(Person person) {","lastModifiedDate":"2021-10-25"},{"lineNumber":30,"author":{"gitId":"houtenteo"},"content":"        if (isFindAll) {","lastModifiedDate":"2021-10-26"},{"lineNumber":31,"author":{"gitId":"houtenteo"},"content":"            return numbers.stream()","lastModifiedDate":"2021-10-26"},{"lineNumber":32,"author":{"gitId":"houtenteo"},"content":"                    .allMatch(number -\u003e person.getPhone().value.contains(number));","lastModifiedDate":"2021-10-26"},{"lineNumber":33,"author":{"gitId":"houtenteo"},"content":"        }","lastModifiedDate":"2021-10-26"},{"lineNumber":34,"author":{"gitId":"houtenteo"},"content":"        return numbers.stream()","lastModifiedDate":"2021-10-25"},{"lineNumber":35,"author":{"gitId":"houtenteo"},"content":"                .anyMatch(number -\u003e person.getPhone().value.contains(number));","lastModifiedDate":"2021-10-25"},{"lineNumber":36,"author":{"gitId":"houtenteo"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":37,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":38,"author":{"gitId":"houtenteo"},"content":"    @Override","lastModifiedDate":"2021-10-25"},{"lineNumber":39,"author":{"gitId":"houtenteo"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-25"},{"lineNumber":40,"author":{"gitId":"houtenteo"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-25"},{"lineNumber":41,"author":{"gitId":"houtenteo"},"content":"                || (other instanceof PhoneContainsNumberPredicate // instanceof handles nulls","lastModifiedDate":"2021-10-25"},{"lineNumber":42,"author":{"gitId":"houtenteo"},"content":"                \u0026\u0026 numbers.equals(((PhoneContainsNumberPredicate) other).numbers))","lastModifiedDate":"2021-10-27"},{"lineNumber":43,"author":{"gitId":"houtenteo"},"content":"                \u0026\u0026 isFindAll \u003d\u003d ((PhoneContainsNumberPredicate) other).isFindAll; // state check","lastModifiedDate":"2021-10-27"},{"lineNumber":44,"author":{"gitId":"houtenteo"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":45,"author":{"gitId":"houtenteo"},"content":"}","lastModifiedDate":"2021-10-25"}],"authorContributionMap":{"houtenteo":45}},{"path":"src/main/java/seedu/address/model/util/SampleDataUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.util;","lastModifiedDate":"2016-12-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-12-20"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2016-12-20"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2021-10-18"},{"lineNumber":6,"author":{"gitId":"houtenteo"},"content":"import seedu.address.model.person.Age;","lastModifiedDate":"2021-10-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2021-09-24"},{"lineNumber":8,"author":{"gitId":"houtenteo"},"content":"import seedu.address.model.person.Gender;","lastModifiedDate":"2021-10-18"},{"lineNumber":9,"author":{"gitId":"pranav-ganesh"},"content":"import seedu.address.model.person.IsCalled;","lastModifiedDate":"2021-11-04"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2021-09-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2021-09-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2021-09-24"},{"lineNumber":13,"author":{"gitId":"houtenteo"},"content":"import seedu.address.model.person.interests.InterestsList;","lastModifiedDate":"2021-10-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * Contains utility methods for populating {@code AddressBook} with sample data.","lastModifiedDate":"2017-08-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class SampleDataUtil {","lastModifiedDate":"2016-12-20"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static Person[] getSamplePersons() {","lastModifiedDate":"2016-12-20"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        return new Person[] {","lastModifiedDate":"2016-12-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Alex Yeoh\"), new Phone(\"87438807\"), new Email(\"alexyeoh@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":22,"author":{"gitId":"pranav-ganesh"},"content":"                    new IsCalled(\"FALSE\"), new Address(null), new Gender(\"M\"), new Age(\"32\"),","lastModifiedDate":"2021-11-04"},{"lineNumber":23,"author":{"gitId":"houtenteo"},"content":"                    new InterestsList()),","lastModifiedDate":"2021-10-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Bernice Yu\"), new Phone(\"99272758\"), new Email(\"berniceyu@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":25,"author":{"gitId":"pranav-ganesh"},"content":"                    new IsCalled(\"FALSE\"), new Address(null), new Gender(\"F\"), new Age(\"11\"),","lastModifiedDate":"2021-11-04"},{"lineNumber":26,"author":{"gitId":"houtenteo"},"content":"                    new InterestsList()),","lastModifiedDate":"2021-10-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Charlotte Oliveiro\"), new Phone(\"93210283\"), new Email(\"charlotte@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":28,"author":{"gitId":"pranav-ganesh"},"content":"                    new IsCalled(\"FALSE\"), new Address(null), new Gender(null), new Age(null),","lastModifiedDate":"2021-11-04"},{"lineNumber":29,"author":{"gitId":"houtenteo"},"content":"                    new InterestsList()),","lastModifiedDate":"2021-10-18"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            new Person(new Name(\"David Li\"), new Phone(\"91031282\"), new Email(\"lidavid@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":31,"author":{"gitId":"pranav-ganesh"},"content":"                    new IsCalled(\"FALSE\"), new Address(null), new Gender(null), new Age(null),","lastModifiedDate":"2021-11-04"},{"lineNumber":32,"author":{"gitId":"houtenteo"},"content":"                    new InterestsList()),","lastModifiedDate":"2021-10-18"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Irfan Ibrahim\"), new Phone(\"92492021\"), new Email(\"irfan@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":34,"author":{"gitId":"pranav-ganesh"},"content":"                    new IsCalled(\"FALSE\"), new Address(null), new Gender(null), new Age(null),","lastModifiedDate":"2021-11-04"},{"lineNumber":35,"author":{"gitId":"houtenteo"},"content":"                    new InterestsList()),","lastModifiedDate":"2021-10-18"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Roy Balakrishnan\"), new Phone(\"92624417\"), new Email(\"royb@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":37,"author":{"gitId":"pranav-ganesh"},"content":"                    new IsCalled(\"FALSE\"), new Address(null), new Gender(null), new Age(null),","lastModifiedDate":"2021-11-04"},{"lineNumber":38,"author":{"gitId":"houtenteo"},"content":"                    new InterestsList())","lastModifiedDate":"2021-10-18"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        };","lastModifiedDate":"2016-12-20"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public static ReadOnlyAddressBook getSampleAddressBook() {","lastModifiedDate":"2016-12-20"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        AddressBook sampleAb \u003d new AddressBook();","lastModifiedDate":"2017-04-07"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        for (Person samplePerson : getSamplePersons()) {","lastModifiedDate":"2016-12-20"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            sampleAb.addPerson(samplePerson);","lastModifiedDate":"2017-04-07"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-20"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return sampleAb;","lastModifiedDate":"2017-04-07"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":50,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-20"}],"authorContributionMap":{"houtenteo":9,"pranav-ganesh":7,"-":34}},{"path":"src/main/java/seedu/address/storage/CsvAdaptedInterest.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"idgrr"},"content":"package seedu.address.storage;","lastModifiedDate":"2021-10-18"},{"lineNumber":2,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":3,"author":{"gitId":"idgrr"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2021-10-18"},{"lineNumber":4,"author":{"gitId":"idgrr"},"content":"import seedu.address.model.person.interests.Interest;","lastModifiedDate":"2021-10-18"},{"lineNumber":5,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":6,"author":{"gitId":"idgrr"},"content":"public class CsvAdaptedInterest {","lastModifiedDate":"2021-10-18"},{"lineNumber":7,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":8,"author":{"gitId":"idgrr"},"content":"    private final String interest;","lastModifiedDate":"2021-10-18"},{"lineNumber":9,"author":{"gitId":"idgrr"},"content":"    /**","lastModifiedDate":"2021-10-19"},{"lineNumber":10,"author":{"gitId":"idgrr"},"content":"     * Constructs a {@code CsvAdaptedInterest} with the given {@code interest}.","lastModifiedDate":"2021-10-19"},{"lineNumber":11,"author":{"gitId":"idgrr"},"content":"     */","lastModifiedDate":"2021-10-19"},{"lineNumber":12,"author":{"gitId":"idgrr"},"content":"    public CsvAdaptedInterest(String interest) {","lastModifiedDate":"2021-10-18"},{"lineNumber":13,"author":{"gitId":"idgrr"},"content":"        this.interest \u003d interest;","lastModifiedDate":"2021-10-18"},{"lineNumber":14,"author":{"gitId":"idgrr"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":15,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":16,"author":{"gitId":"idgrr"},"content":"    /**","lastModifiedDate":"2021-10-19"},{"lineNumber":17,"author":{"gitId":"idgrr"},"content":"     * Converts a given {@code Interest}","lastModifiedDate":"2021-10-19"},{"lineNumber":18,"author":{"gitId":"idgrr"},"content":"     */","lastModifiedDate":"2021-10-19"},{"lineNumber":19,"author":{"gitId":"idgrr"},"content":"    public CsvAdaptedInterest(Interest source) {","lastModifiedDate":"2021-10-18"},{"lineNumber":20,"author":{"gitId":"idgrr"},"content":"        interest \u003d source.value;","lastModifiedDate":"2021-10-18"},{"lineNumber":21,"author":{"gitId":"idgrr"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":22,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":23,"author":{"gitId":"idgrr"},"content":"    public String getInterest() {","lastModifiedDate":"2021-10-18"},{"lineNumber":24,"author":{"gitId":"idgrr"},"content":"        return interest;","lastModifiedDate":"2021-10-18"},{"lineNumber":25,"author":{"gitId":"idgrr"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":26,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":27,"author":{"gitId":"idgrr"},"content":"    /**","lastModifiedDate":"2021-10-19"},{"lineNumber":28,"author":{"gitId":"idgrr"},"content":"     * Converts this Csv adapted tag object into the model\u0027s {@code Interest} object.","lastModifiedDate":"2021-10-19"},{"lineNumber":29,"author":{"gitId":"idgrr"},"content":"     *","lastModifiedDate":"2021-10-19"},{"lineNumber":30,"author":{"gitId":"idgrr"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted interest.","lastModifiedDate":"2021-10-19"},{"lineNumber":31,"author":{"gitId":"idgrr"},"content":"     */","lastModifiedDate":"2021-10-19"},{"lineNumber":32,"author":{"gitId":"idgrr"},"content":"    public Interest toModelType() throws IllegalValueException {","lastModifiedDate":"2021-10-18"},{"lineNumber":33,"author":{"gitId":"idgrr"},"content":"        if (!Interest.isValidInterest(interest)) {","lastModifiedDate":"2021-10-18"},{"lineNumber":34,"author":{"gitId":"idgrr"},"content":"            throw new IllegalValueException(Interest.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-18"},{"lineNumber":35,"author":{"gitId":"idgrr"},"content":"        }","lastModifiedDate":"2021-10-18"},{"lineNumber":36,"author":{"gitId":"idgrr"},"content":"        return new Interest(interest);","lastModifiedDate":"2021-10-18"},{"lineNumber":37,"author":{"gitId":"idgrr"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":38,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":39,"author":{"gitId":"idgrr"},"content":"}","lastModifiedDate":"2021-10-18"}],"authorContributionMap":{"idgrr":39}},{"path":"src/main/java/seedu/address/storage/CsvAdaptedPerson.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"idgrr"},"content":"package seedu.address.storage;","lastModifiedDate":"2021-09-22"},{"lineNumber":2,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":3,"author":{"gitId":"houtenteo"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-18"},{"lineNumber":4,"author":{"gitId":"houtenteo"},"content":"import java.util.List;","lastModifiedDate":"2021-10-18"},{"lineNumber":5,"author":{"gitId":"idgrr"},"content":"import java.util.Map;","lastModifiedDate":"2021-09-22"},{"lineNumber":6,"author":{"gitId":"idgrr"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2021-09-22"},{"lineNumber":7,"author":{"gitId":"idgrr"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2021-09-22"},{"lineNumber":8,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":9,"author":{"gitId":"houtenteo"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2021-10-18"},{"lineNumber":10,"author":{"gitId":"idgrr"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2021-09-22"},{"lineNumber":11,"author":{"gitId":"houtenteo"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2021-10-18"},{"lineNumber":12,"author":{"gitId":"houtenteo"},"content":"import seedu.address.model.person.Age;","lastModifiedDate":"2021-10-18"},{"lineNumber":13,"author":{"gitId":"idgrr"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2021-09-22"},{"lineNumber":14,"author":{"gitId":"houtenteo"},"content":"import seedu.address.model.person.Gender;","lastModifiedDate":"2021-10-18"},{"lineNumber":15,"author":{"gitId":"pranav-ganesh"},"content":"import seedu.address.model.person.IsCalled;","lastModifiedDate":"2021-11-04"},{"lineNumber":16,"author":{"gitId":"idgrr"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2021-09-22"},{"lineNumber":17,"author":{"gitId":"idgrr"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2021-09-22"},{"lineNumber":18,"author":{"gitId":"idgrr"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2021-09-22"},{"lineNumber":19,"author":{"gitId":"houtenteo"},"content":"import seedu.address.model.person.interests.Interest;","lastModifiedDate":"2021-10-18"},{"lineNumber":20,"author":{"gitId":"houtenteo"},"content":"import seedu.address.model.person.interests.InterestsList;","lastModifiedDate":"2021-10-18"},{"lineNumber":21,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":22,"author":{"gitId":"idgrr"},"content":"/**","lastModifiedDate":"2021-09-22"},{"lineNumber":23,"author":{"gitId":"idgrr"},"content":" * CSV-friendly version of {@link Person}.","lastModifiedDate":"2021-09-22"},{"lineNumber":24,"author":{"gitId":"idgrr"},"content":" */","lastModifiedDate":"2021-09-22"},{"lineNumber":25,"author":{"gitId":"idgrr"},"content":"public class CsvAdaptedPerson {","lastModifiedDate":"2021-09-22"},{"lineNumber":26,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":27,"author":{"gitId":"idgrr"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Person\u0027s %s field in Import file is missing!\";","lastModifiedDate":"2021-09-22"},{"lineNumber":28,"author":{"gitId":"idgrr"},"content":"    // This sets the ordering of which person object constructor takes in  data","lastModifiedDate":"2021-09-22"},{"lineNumber":29,"author":{"gitId":"houtenteo"},"content":"    public static final Map\u003cString, Integer\u003e ATTRIBUTE_ORDERING \u003d Stream.of(new Object[][] {","lastModifiedDate":"2021-10-18"},{"lineNumber":30,"author":{"gitId":"idgrr"},"content":"            {\"Name\", 0}, { \"Phone\", 1 }, {\"Email\", 2}, {\"Address\", 3}, {\"Gender\", 4}, {\"Age\", 5}, {\"Interest\", 6},","lastModifiedDate":"2021-10-18"},{"lineNumber":31,"author":{"gitId":"pranav-ganesh"},"content":"            {\"Called\", 7},","lastModifiedDate":"2021-11-04"},{"lineNumber":32,"author":{"gitId":"idgrr"},"content":"    }).collect(Collectors.toMap(data -\u003e (String) data[0], data -\u003e (Integer) data[1]));","lastModifiedDate":"2021-09-22"},{"lineNumber":33,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":34,"author":{"gitId":"idgrr"},"content":"    private String name;","lastModifiedDate":"2021-09-22"},{"lineNumber":35,"author":{"gitId":"idgrr"},"content":"    private String phone;","lastModifiedDate":"2021-09-22"},{"lineNumber":36,"author":{"gitId":"idgrr"},"content":"    private String email;","lastModifiedDate":"2021-09-22"},{"lineNumber":37,"author":{"gitId":"pranav-ganesh"},"content":"    private String calledString;","lastModifiedDate":"2021-11-04"},{"lineNumber":38,"author":{"gitId":"houtenteo"},"content":"    private String address;","lastModifiedDate":"2021-10-18"},{"lineNumber":39,"author":{"gitId":"houtenteo"},"content":"    private String gender;","lastModifiedDate":"2021-10-18"},{"lineNumber":40,"author":{"gitId":"houtenteo"},"content":"    private String age;","lastModifiedDate":"2021-10-18"},{"lineNumber":41,"author":{"gitId":"idgrr"},"content":"    private List\u003cCsvAdaptedInterest\u003e interestList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-19"},{"lineNumber":42,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":43,"author":{"gitId":"idgrr"},"content":"    /**","lastModifiedDate":"2021-09-22"},{"lineNumber":44,"author":{"gitId":"idgrr"},"content":"     * Constructs a {@code CsvAdaptedPerson} with the given person details.","lastModifiedDate":"2021-09-29"},{"lineNumber":45,"author":{"gitId":"idgrr"},"content":"     */","lastModifiedDate":"2021-09-22"},{"lineNumber":46,"author":{"gitId":"houtenteo"},"content":"    public CsvAdaptedPerson(String personDetails) throws DataConversionException {","lastModifiedDate":"2021-10-18"},{"lineNumber":47,"author":{"gitId":"idgrr"},"content":"        setDetails(personDetails);","lastModifiedDate":"2021-09-22"},{"lineNumber":48,"author":{"gitId":"idgrr"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":49,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":50,"author":{"gitId":"idgrr"},"content":"    /**","lastModifiedDate":"2021-09-29"},{"lineNumber":51,"author":{"gitId":"idgrr"},"content":"     * Constructs a {@code CsvAdaptedPerson} from a {@code Person} object","lastModifiedDate":"2021-09-29"},{"lineNumber":52,"author":{"gitId":"idgrr"},"content":"     *","lastModifiedDate":"2021-09-29"},{"lineNumber":53,"author":{"gitId":"idgrr"},"content":"     * @param source","lastModifiedDate":"2021-09-29"},{"lineNumber":54,"author":{"gitId":"idgrr"},"content":"     */","lastModifiedDate":"2021-09-29"},{"lineNumber":55,"author":{"gitId":"idgrr"},"content":"    public CsvAdaptedPerson(Person source) {","lastModifiedDate":"2021-09-29"},{"lineNumber":56,"author":{"gitId":"idgrr"},"content":"        name \u003d source.getName().fullName;","lastModifiedDate":"2021-09-29"},{"lineNumber":57,"author":{"gitId":"idgrr"},"content":"        phone \u003d source.getPhone().value;","lastModifiedDate":"2021-09-29"},{"lineNumber":58,"author":{"gitId":"idgrr"},"content":"        email \u003d source.getEmail().value;","lastModifiedDate":"2021-09-29"},{"lineNumber":59,"author":{"gitId":"houtenteo"},"content":"        address \u003d source.getAddress().value;","lastModifiedDate":"2021-10-18"},{"lineNumber":60,"author":{"gitId":"houtenteo"},"content":"        gender \u003d source.getGender().value;","lastModifiedDate":"2021-10-18"},{"lineNumber":61,"author":{"gitId":"houtenteo"},"content":"        age \u003d source.getAge().value;","lastModifiedDate":"2021-10-18"},{"lineNumber":62,"author":{"gitId":"idgrr"},"content":"        interestList.addAll(source.getAllInterests()","lastModifiedDate":"2021-10-18"},{"lineNumber":63,"author":{"gitId":"idgrr"},"content":"                .stream()","lastModifiedDate":"2021-10-18"},{"lineNumber":64,"author":{"gitId":"idgrr"},"content":"                .map(CsvAdaptedInterest::new)","lastModifiedDate":"2021-10-18"},{"lineNumber":65,"author":{"gitId":"idgrr"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2021-10-18"},{"lineNumber":66,"author":{"gitId":"pranav-ganesh"},"content":"        calledString \u003d source.getIsCalled().value ? \"TRUE\" : \"FALSE\";","lastModifiedDate":"2021-11-04"},{"lineNumber":67,"author":{"gitId":"idgrr"},"content":"    }","lastModifiedDate":"2021-09-29"},{"lineNumber":68,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":69,"author":{"gitId":"idgrr"},"content":"    /**","lastModifiedDate":"2021-09-22"},{"lineNumber":70,"author":{"gitId":"pranav-ganesh"},"content":"     * Parses the string into individual details","lastModifiedDate":"2021-11-04"},{"lineNumber":71,"author":{"gitId":"idgrr"},"content":"     * Note that this assumes that the CSV datafile is delimited using semicolon","lastModifiedDate":"2021-09-22"},{"lineNumber":72,"author":{"gitId":"idgrr"},"content":"     * Quick guide as to how to do that :https://ashwaniashwin.wordpress","lastModifiedDate":"2021-09-22"},{"lineNumber":73,"author":{"gitId":"idgrr"},"content":"     * .com/2013/04/19/save-excel-file-as-a-csv-semicolon-delimited","lastModifiedDate":"2021-09-22"},{"lineNumber":74,"author":{"gitId":"idgrr"},"content":"     * // -file-along-with-unicode-encoding/","lastModifiedDate":"2021-09-22"},{"lineNumber":75,"author":{"gitId":"idgrr"},"content":"     *","lastModifiedDate":"2021-09-22"},{"lineNumber":76,"author":{"gitId":"idgrr"},"content":"     * @param personDetails","lastModifiedDate":"2021-09-22"},{"lineNumber":77,"author":{"gitId":"idgrr"},"content":"     */","lastModifiedDate":"2021-09-22"},{"lineNumber":78,"author":{"gitId":"houtenteo"},"content":"    private void setDetails(String personDetails) throws DataConversionException {","lastModifiedDate":"2021-10-18"},{"lineNumber":79,"author":{"gitId":"houtenteo"},"content":"        String[] details \u003d personDetails.split(\";\", CsvAdaptedPerson.ATTRIBUTE_ORDERING.keySet().size());","lastModifiedDate":"2021-10-18"},{"lineNumber":80,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":81,"author":{"gitId":"idgrr"},"content":"        if (details.length !\u003d ATTRIBUTE_ORDERING.size()) {","lastModifiedDate":"2021-10-18"},{"lineNumber":82,"author":{"gitId":"houtenteo"},"content":"            throw new DataConversionException(new Exception(\"Delimiter Missing\"","lastModifiedDate":"2021-10-18"},{"lineNumber":83,"author":{"gitId":"houtenteo"},"content":"                    + \"\\nEach row should have \"","lastModifiedDate":"2021-10-18"},{"lineNumber":84,"author":{"gitId":"houtenteo"},"content":"                    + (CsvAdaptedPerson.ATTRIBUTE_ORDERING.keySet().size() - 1) + \" \u0027;\u0027 \"));","lastModifiedDate":"2021-10-18"},{"lineNumber":85,"author":{"gitId":"houtenteo"},"content":"        }","lastModifiedDate":"2021-10-18"},{"lineNumber":86,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":87,"author":{"gitId":"houtenteo"},"content":"        this.name \u003d details[ATTRIBUTE_ORDERING.get(\"Name\")].trim();","lastModifiedDate":"2021-10-18"},{"lineNumber":88,"author":{"gitId":"houtenteo"},"content":"        this.phone \u003d details[ATTRIBUTE_ORDERING.get(\"Phone\")].trim();","lastModifiedDate":"2021-10-18"},{"lineNumber":89,"author":{"gitId":"houtenteo"},"content":"        this.email \u003d details[ATTRIBUTE_ORDERING.get(\"Email\")].trim();","lastModifiedDate":"2021-10-18"},{"lineNumber":90,"author":{"gitId":"idgrr"},"content":"        this.address \u003d details[ATTRIBUTE_ORDERING.get(\"Address\")].trim();","lastModifiedDate":"2021-10-18"},{"lineNumber":91,"author":{"gitId":"idgrr"},"content":"        this.gender \u003d details[ATTRIBUTE_ORDERING.get(\"Gender\")].trim();","lastModifiedDate":"2021-10-18"},{"lineNumber":92,"author":{"gitId":"idgrr"},"content":"        this.age \u003d details[ATTRIBUTE_ORDERING.get(\"Age\")].trim();","lastModifiedDate":"2021-10-18"},{"lineNumber":93,"author":{"gitId":"idgrr"},"content":"        setInterestList(details[ATTRIBUTE_ORDERING.get(\"Interest\")].trim());","lastModifiedDate":"2021-10-18"},{"lineNumber":94,"author":{"gitId":"pranav-ganesh"},"content":"        this.calledString \u003d details[ATTRIBUTE_ORDERING.get(\"Called\")].trim().toUpperCase();","lastModifiedDate":"2021-11-04"},{"lineNumber":95,"author":{"gitId":"idgrr"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":96,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":97,"author":{"gitId":"idgrr"},"content":"    private void setInterestList (String csvInterestString) {","lastModifiedDate":"2021-10-18"},{"lineNumber":98,"author":{"gitId":"idgrr"},"content":"        String[] interestStringList \u003d csvInterestString.split(\",\");","lastModifiedDate":"2021-10-18"},{"lineNumber":99,"author":{"gitId":"idgrr"},"content":"        for (String interestString : interestStringList) {","lastModifiedDate":"2021-10-18"},{"lineNumber":100,"author":{"gitId":"idgrr"},"content":"            if (!interestString.trim().equals(\"\")) {","lastModifiedDate":"2021-10-18"},{"lineNumber":101,"author":{"gitId":"idgrr"},"content":"                CsvAdaptedInterest addInterest \u003d new CsvAdaptedInterest(interestString.trim());","lastModifiedDate":"2021-10-18"},{"lineNumber":102,"author":{"gitId":"idgrr"},"content":"                this.interestList.add(addInterest);","lastModifiedDate":"2021-10-18"},{"lineNumber":103,"author":{"gitId":"idgrr"},"content":"            }","lastModifiedDate":"2021-10-18"},{"lineNumber":104,"author":{"gitId":"idgrr"},"content":"        }","lastModifiedDate":"2021-10-18"},{"lineNumber":105,"author":{"gitId":"idgrr"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":106,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":107,"author":{"gitId":"idgrr"},"content":"    /**","lastModifiedDate":"2021-10-19"},{"lineNumber":108,"author":{"gitId":"idgrr"},"content":"     * String array with headers in the correct order","lastModifiedDate":"2021-10-19"},{"lineNumber":109,"author":{"gitId":"idgrr"},"content":"     */","lastModifiedDate":"2021-10-19"},{"lineNumber":110,"author":{"gitId":"idgrr"},"content":"    public static String[] headerOrder() {","lastModifiedDate":"2021-10-19"},{"lineNumber":111,"author":{"gitId":"idgrr"},"content":"        String[] headerKeySet \u003d ATTRIBUTE_ORDERING.keySet().toArray(new String[0]);","lastModifiedDate":"2021-10-19"},{"lineNumber":112,"author":{"gitId":"idgrr"},"content":"        String[] validOrder \u003d new String[headerKeySet.length];","lastModifiedDate":"2021-10-19"},{"lineNumber":113,"author":{"gitId":"idgrr"},"content":"        for (String key : headerKeySet) {","lastModifiedDate":"2021-10-19"},{"lineNumber":114,"author":{"gitId":"idgrr"},"content":"            int pos \u003d ATTRIBUTE_ORDERING.get(key);","lastModifiedDate":"2021-10-19"},{"lineNumber":115,"author":{"gitId":"idgrr"},"content":"            validOrder[pos] \u003d key;","lastModifiedDate":"2021-10-19"},{"lineNumber":116,"author":{"gitId":"idgrr"},"content":"        }","lastModifiedDate":"2021-10-19"},{"lineNumber":117,"author":{"gitId":"idgrr"},"content":"        return validOrder;","lastModifiedDate":"2021-10-19"},{"lineNumber":118,"author":{"gitId":"idgrr"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":119,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":120,"author":{"gitId":"idgrr"},"content":"    /**","lastModifiedDate":"2021-09-22"},{"lineNumber":121,"author":{"gitId":"idgrr"},"content":"     * Converts CSV adapted person object into the model\u0027s {@code Person} object.","lastModifiedDate":"2021-09-22"},{"lineNumber":122,"author":{"gitId":"idgrr"},"content":"     *","lastModifiedDate":"2021-09-22"},{"lineNumber":123,"author":{"gitId":"idgrr"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted person.","lastModifiedDate":"2021-09-22"},{"lineNumber":124,"author":{"gitId":"idgrr"},"content":"     */","lastModifiedDate":"2021-09-22"},{"lineNumber":125,"author":{"gitId":"idgrr"},"content":"    public Person toModelType() throws IllegalValueException {","lastModifiedDate":"2021-09-22"},{"lineNumber":126,"author":{"gitId":"idgrr"},"content":"        if (name.equals(\"\")) {","lastModifiedDate":"2021-09-29"},{"lineNumber":127,"author":{"gitId":"idgrr"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName()));","lastModifiedDate":"2021-09-22"},{"lineNumber":128,"author":{"gitId":"idgrr"},"content":"        }","lastModifiedDate":"2021-09-22"},{"lineNumber":129,"author":{"gitId":"idgrr"},"content":"        if (!Name.isValidName(name)) {","lastModifiedDate":"2021-09-22"},{"lineNumber":130,"author":{"gitId":"idgrr"},"content":"            throw new IllegalValueException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-09-22"},{"lineNumber":131,"author":{"gitId":"idgrr"},"content":"        }","lastModifiedDate":"2021-09-22"},{"lineNumber":132,"author":{"gitId":"idgrr"},"content":"        final Name modelName \u003d new Name(name);","lastModifiedDate":"2021-09-22"},{"lineNumber":133,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":134,"author":{"gitId":"idgrr"},"content":"        if (phone.equals(\"\")) {","lastModifiedDate":"2021-09-29"},{"lineNumber":135,"author":{"gitId":"idgrr"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName()));","lastModifiedDate":"2021-09-22"},{"lineNumber":136,"author":{"gitId":"idgrr"},"content":"        }","lastModifiedDate":"2021-09-22"},{"lineNumber":137,"author":{"gitId":"idgrr"},"content":"        if (!Phone.isValidPhone(phone)) {","lastModifiedDate":"2021-09-22"},{"lineNumber":138,"author":{"gitId":"idgrr"},"content":"            throw new IllegalValueException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-09-22"},{"lineNumber":139,"author":{"gitId":"idgrr"},"content":"        }","lastModifiedDate":"2021-09-22"},{"lineNumber":140,"author":{"gitId":"idgrr"},"content":"        final Phone modelPhone \u003d new Phone(phone);","lastModifiedDate":"2021-09-22"},{"lineNumber":141,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":142,"author":{"gitId":"idgrr"},"content":"        if (email.equals(\"\")) {","lastModifiedDate":"2021-09-29"},{"lineNumber":143,"author":{"gitId":"idgrr"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName()));","lastModifiedDate":"2021-09-22"},{"lineNumber":144,"author":{"gitId":"idgrr"},"content":"        }","lastModifiedDate":"2021-09-22"},{"lineNumber":145,"author":{"gitId":"idgrr"},"content":"        if (!Email.isValidEmail(email)) {","lastModifiedDate":"2021-09-22"},{"lineNumber":146,"author":{"gitId":"idgrr"},"content":"            throw new IllegalValueException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-09-22"},{"lineNumber":147,"author":{"gitId":"idgrr"},"content":"        }","lastModifiedDate":"2021-09-22"},{"lineNumber":148,"author":{"gitId":"idgrr"},"content":"        final Email modelEmail \u003d new Email(email);","lastModifiedDate":"2021-09-22"},{"lineNumber":149,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":150,"author":{"gitId":"pranav-ganesh"},"content":"        if (!(IsCalled.isValidIsCalled(calledString))) {","lastModifiedDate":"2021-11-04"},{"lineNumber":151,"author":{"gitId":"pranav-ganesh"},"content":"            throw new IllegalValueException(IsCalled.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-11-04"},{"lineNumber":152,"author":{"gitId":"idgrr"},"content":"        }","lastModifiedDate":"2021-09-29"},{"lineNumber":153,"author":{"gitId":"pranav-ganesh"},"content":"        final IsCalled modelIsCalled \u003d new IsCalled(calledString);","lastModifiedDate":"2021-11-04"},{"lineNumber":154,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":155,"author":{"gitId":"idgrr"},"content":"        String checkAddress \u003d address.equals(\"\") ? null : address;","lastModifiedDate":"2021-10-18"},{"lineNumber":156,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":157,"author":{"gitId":"idgrr"},"content":"        if (!Address.isValidAddress(checkAddress)) {","lastModifiedDate":"2021-10-18"},{"lineNumber":158,"author":{"gitId":"houtenteo"},"content":"            throw new IllegalValueException(Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-18"},{"lineNumber":159,"author":{"gitId":"houtenteo"},"content":"        }","lastModifiedDate":"2021-10-18"},{"lineNumber":160,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":161,"author":{"gitId":"idgrr"},"content":"        final Address modelAddress \u003d new Address(checkAddress);","lastModifiedDate":"2021-10-18"},{"lineNumber":162,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":163,"author":{"gitId":"idgrr"},"content":"        String checkGender \u003d gender.equals(\"\") ? null : gender;","lastModifiedDate":"2021-10-18"},{"lineNumber":164,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":165,"author":{"gitId":"idgrr"},"content":"        if (!Gender.isValidGender(checkGender)) {","lastModifiedDate":"2021-10-18"},{"lineNumber":166,"author":{"gitId":"houtenteo"},"content":"            throw new IllegalValueException(Gender.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-18"},{"lineNumber":167,"author":{"gitId":"houtenteo"},"content":"        }","lastModifiedDate":"2021-10-18"},{"lineNumber":168,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":169,"author":{"gitId":"idgrr"},"content":"        final Gender modelGender \u003d new Gender(checkGender);","lastModifiedDate":"2021-10-18"},{"lineNumber":170,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":171,"author":{"gitId":"idgrr"},"content":"        String checkAge \u003d age.equals(\"\") ? null : age;","lastModifiedDate":"2021-10-18"},{"lineNumber":172,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":173,"author":{"gitId":"idgrr"},"content":"        if (!Age.isValidAge(checkAge)) {","lastModifiedDate":"2021-10-18"},{"lineNumber":174,"author":{"gitId":"houtenteo"},"content":"            throw new IllegalValueException(Age.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-18"},{"lineNumber":175,"author":{"gitId":"houtenteo"},"content":"        }","lastModifiedDate":"2021-10-18"},{"lineNumber":176,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":177,"author":{"gitId":"idgrr"},"content":"        final Age modelAge \u003d new Age(checkAge);","lastModifiedDate":"2021-10-18"},{"lineNumber":178,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":179,"author":{"gitId":"houtenteo"},"content":"        final InterestsList modelInterests \u003d new InterestsList();","lastModifiedDate":"2021-10-18"},{"lineNumber":180,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":181,"author":{"gitId":"idgrr"},"content":"        for (CsvAdaptedInterest interest : interestList) {","lastModifiedDate":"2021-10-18"},{"lineNumber":182,"author":{"gitId":"idgrr"},"content":"            Interest i \u003d interest.toModelType();","lastModifiedDate":"2021-10-18"},{"lineNumber":183,"author":{"gitId":"idgrr"},"content":"            if (modelInterests.checkDuplicate(i)) {","lastModifiedDate":"2021-10-18"},{"lineNumber":184,"author":{"gitId":"idgrr"},"content":"                throw new IllegalValueException(InterestsList.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-18"},{"lineNumber":185,"author":{"gitId":"idgrr"},"content":"            } else {","lastModifiedDate":"2021-10-18"},{"lineNumber":186,"author":{"gitId":"idgrr"},"content":"                modelInterests.addInterest(i);","lastModifiedDate":"2021-10-18"},{"lineNumber":187,"author":{"gitId":"idgrr"},"content":"            }","lastModifiedDate":"2021-10-18"},{"lineNumber":188,"author":{"gitId":"houtenteo"},"content":"        }","lastModifiedDate":"2021-10-18"},{"lineNumber":189,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":190,"author":{"gitId":"pranav-ganesh"},"content":"        return new Person(modelName, modelPhone, modelEmail, modelIsCalled, modelAddress,","lastModifiedDate":"2021-11-04"},{"lineNumber":191,"author":{"gitId":"houtenteo"},"content":"                modelGender, modelAge, modelInterests);","lastModifiedDate":"2021-10-18"},{"lineNumber":192,"author":{"gitId":"idgrr"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":193,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":194,"author":{"gitId":"idgrr"},"content":"}","lastModifiedDate":"2021-09-22"}],"authorContributionMap":{"houtenteo":45,"idgrr":139,"pranav-ganesh":10}},{"path":"src/main/java/seedu/address/storage/CsvAddressBookImportExport.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"idgrr"},"content":"package seedu.address.storage;","lastModifiedDate":"2021-09-22"},{"lineNumber":2,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":3,"author":{"gitId":"idgrr"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-09-22"},{"lineNumber":4,"author":{"gitId":"idgrr"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2021-10-22"},{"lineNumber":5,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":6,"author":{"gitId":"idgrr"},"content":"import java.nio.file.Path;","lastModifiedDate":"2021-09-22"},{"lineNumber":7,"author":{"gitId":"idgrr"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-20"},{"lineNumber":8,"author":{"gitId":"idgrr"},"content":"import java.util.Collections;","lastModifiedDate":"2021-10-22"},{"lineNumber":9,"author":{"gitId":"idgrr"},"content":"import java.util.List;","lastModifiedDate":"2021-09-22"},{"lineNumber":10,"author":{"gitId":"idgrr"},"content":"import java.util.Optional;","lastModifiedDate":"2021-09-22"},{"lineNumber":11,"author":{"gitId":"idgrr"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2021-09-22"},{"lineNumber":12,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":13,"author":{"gitId":"idgrr"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2021-09-22"},{"lineNumber":14,"author":{"gitId":"idgrr"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2021-09-22"},{"lineNumber":15,"author":{"gitId":"idgrr"},"content":"import seedu.address.commons.util.CsvUtil;","lastModifiedDate":"2021-09-22"},{"lineNumber":16,"author":{"gitId":"idgrr"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-09-22"},{"lineNumber":17,"author":{"gitId":"idgrr"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2021-09-22"},{"lineNumber":18,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":19,"author":{"gitId":"idgrr"},"content":"/**","lastModifiedDate":"2021-09-22"},{"lineNumber":20,"author":{"gitId":"idgrr"},"content":" * Importing and exporting of csv files into the database","lastModifiedDate":"2021-09-22"},{"lineNumber":21,"author":{"gitId":"idgrr"},"content":" */","lastModifiedDate":"2021-09-22"},{"lineNumber":22,"author":{"gitId":"idgrr"},"content":"public class CsvAddressBookImportExport implements ImportExport {","lastModifiedDate":"2021-09-22"},{"lineNumber":23,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":24,"author":{"gitId":"pranav-ganesh"},"content":"    public static final String MESSAGE_DUPLICATE_NOT_CALLED_PERSON \u003d \"Import contains duplicate person(s).\"","lastModifiedDate":"2021-11-04"},{"lineNumber":25,"author":{"gitId":"idgrr"},"content":"            + \" These duplicate person(s) are  list index:\" + \"\\n\";","lastModifiedDate":"2021-10-22"},{"lineNumber":26,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":27,"author":{"gitId":"pranav-ganesh"},"content":"    public static final String MESSAGE_DUPLICATE_CALLED_PERSON \u003d \"These duplicate person(s) with \"","lastModifiedDate":"2021-11-04"},{"lineNumber":28,"author":{"gitId":"idgrr"},"content":"            + \"these list index will be updated to \u0027called\u0027 : \\n\";","lastModifiedDate":"2021-10-22"},{"lineNumber":29,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":30,"author":{"gitId":"idgrr"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(CsvAddressBookImportExport.class);","lastModifiedDate":"2021-09-22"},{"lineNumber":31,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":32,"author":{"gitId":"idgrr"},"content":"    private boolean fileFound \u003d true;","lastModifiedDate":"2021-09-29"},{"lineNumber":33,"author":{"gitId":"idgrr"},"content":"    private List\u003cInteger\u003e duplicateRowImport \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-20"},{"lineNumber":34,"author":{"gitId":"idgrr"},"content":"    private List\u003cInteger\u003e updateRowImport \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-20"},{"lineNumber":35,"author":{"gitId":"idgrr"},"content":"    private int successfulNewImportCount \u003d 0;","lastModifiedDate":"2021-10-20"},{"lineNumber":36,"author":{"gitId":"idgrr"},"content":"    private int notCalledDuplicateImportCount \u003d 0;","lastModifiedDate":"2021-10-20"},{"lineNumber":37,"author":{"gitId":"idgrr"},"content":"    private int unsuccessfulImportCount \u003d 0;","lastModifiedDate":"2021-10-18"},{"lineNumber":38,"author":{"gitId":"idgrr"},"content":"    private int calledDuplicateImportCount \u003d 0;","lastModifiedDate":"2021-10-20"},{"lineNumber":39,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":40,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":41,"author":{"gitId":"idgrr"},"content":"    private final Path importPath;","lastModifiedDate":"2021-10-24"},{"lineNumber":42,"author":{"gitId":"idgrr"},"content":"    private final Path exportPath;","lastModifiedDate":"2021-10-24"},{"lineNumber":43,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":44,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":45,"author":{"gitId":"idgrr"},"content":"    /**","lastModifiedDate":"2021-09-22"},{"lineNumber":46,"author":{"gitId":"idgrr"},"content":"     * Constructor of the import export","lastModifiedDate":"2021-09-22"},{"lineNumber":47,"author":{"gitId":"idgrr"},"content":"     */","lastModifiedDate":"2021-09-22"},{"lineNumber":48,"author":{"gitId":"idgrr"},"content":"    public CsvAddressBookImportExport(Path importPath, Path exportPath) {","lastModifiedDate":"2021-10-24"},{"lineNumber":49,"author":{"gitId":"idgrr"},"content":"        requireNonNull(importPath);","lastModifiedDate":"2021-10-24"},{"lineNumber":50,"author":{"gitId":"idgrr"},"content":"        requireNonNull(exportPath);","lastModifiedDate":"2021-10-24"},{"lineNumber":51,"author":{"gitId":"idgrr"},"content":"        this.importPath \u003d importPath;","lastModifiedDate":"2021-10-24"},{"lineNumber":52,"author":{"gitId":"idgrr"},"content":"        this.exportPath \u003d exportPath;","lastModifiedDate":"2021-10-24"},{"lineNumber":53,"author":{"gitId":"idgrr"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":54,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":55,"author":{"gitId":"idgrr"},"content":"    /**","lastModifiedDate":"2021-09-22"},{"lineNumber":56,"author":{"gitId":"idgrr"},"content":"     * The filepath the program expects the csv file to be","lastModifiedDate":"2021-09-22"},{"lineNumber":57,"author":{"gitId":"idgrr"},"content":"     * @return","lastModifiedDate":"2021-09-22"},{"lineNumber":58,"author":{"gitId":"idgrr"},"content":"     */","lastModifiedDate":"2021-09-22"},{"lineNumber":59,"author":{"gitId":"idgrr"},"content":"    public Path getImportExportPath() {","lastModifiedDate":"2021-09-29"},{"lineNumber":60,"author":{"gitId":"idgrr"},"content":"        return importPath;","lastModifiedDate":"2021-10-24"},{"lineNumber":61,"author":{"gitId":"idgrr"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":62,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":63,"author":{"gitId":"idgrr"},"content":"    /**","lastModifiedDate":"2021-09-22"},{"lineNumber":64,"author":{"gitId":"idgrr"},"content":"     * Imports the csv file into the model","lastModifiedDate":"2021-09-22"},{"lineNumber":65,"author":{"gitId":"idgrr"},"content":"     *","lastModifiedDate":"2021-09-22"},{"lineNumber":66,"author":{"gitId":"idgrr"},"content":"     * @param model Model of the addressbook","lastModifiedDate":"2021-09-22"},{"lineNumber":67,"author":{"gitId":"idgrr"},"content":"     * @return Optional list of person","lastModifiedDate":"2021-09-22"},{"lineNumber":68,"author":{"gitId":"idgrr"},"content":"     * @throws DataConversionException if there are any errors found in the data","lastModifiedDate":"2021-09-22"},{"lineNumber":69,"author":{"gitId":"idgrr"},"content":"     */","lastModifiedDate":"2021-09-22"},{"lineNumber":70,"author":{"gitId":"idgrr"},"content":"    @Override","lastModifiedDate":"2021-09-22"},{"lineNumber":71,"author":{"gitId":"idgrr"},"content":"    public Optional\u003cList\u003cPerson\u003e\u003eimportIntoAddressBook(Model model) throws DataConversionException {","lastModifiedDate":"2021-09-22"},{"lineNumber":72,"author":{"gitId":"idgrr"},"content":"        return importAddressBook(this.importPath, model);","lastModifiedDate":"2021-10-24"},{"lineNumber":73,"author":{"gitId":"idgrr"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":74,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":75,"author":{"gitId":"idgrr"},"content":"    /**","lastModifiedDate":"2021-09-22"},{"lineNumber":76,"author":{"gitId":"idgrr"},"content":"     * Returns a list of person optional that are to be imported","lastModifiedDate":"2021-09-22"},{"lineNumber":77,"author":{"gitId":"idgrr"},"content":"     *   Returns {@code Optional.empty()} if the csvfile is not found","lastModifiedDate":"2021-09-22"},{"lineNumber":78,"author":{"gitId":"idgrr"},"content":"     * @param filePath expected path of csv file","lastModifiedDate":"2021-09-22"},{"lineNumber":79,"author":{"gitId":"idgrr"},"content":"     * @param model model to me inserted into","lastModifiedDate":"2021-09-22"},{"lineNumber":80,"author":{"gitId":"idgrr"},"content":"     * @return optional list of person to be added","lastModifiedDate":"2021-09-22"},{"lineNumber":81,"author":{"gitId":"idgrr"},"content":"     * @throws DataConversionException when there are any errors in the person creation","lastModifiedDate":"2021-09-22"},{"lineNumber":82,"author":{"gitId":"idgrr"},"content":"     */","lastModifiedDate":"2021-09-22"},{"lineNumber":83,"author":{"gitId":"idgrr"},"content":"    private Optional\u003cList\u003cPerson\u003e\u003e importAddressBook(Path filePath, Model model) throws DataConversionException {","lastModifiedDate":"2021-09-22"},{"lineNumber":84,"author":{"gitId":"idgrr"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2021-09-22"},{"lineNumber":85,"author":{"gitId":"idgrr"},"content":"        fileFound \u003d true;","lastModifiedDate":"2021-09-29"},{"lineNumber":86,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":87,"author":{"gitId":"idgrr"},"content":"        Optional\u003cList\u003cPerson\u003e\u003e csvImportAddressBook \u003d CsvUtil.readCsvFile(filePath);","lastModifiedDate":"2021-09-22"},{"lineNumber":88,"author":{"gitId":"idgrr"},"content":"        if (csvImportAddressBook.isEmpty()) {","lastModifiedDate":"2021-09-22"},{"lineNumber":89,"author":{"gitId":"idgrr"},"content":"            fileFound \u003d false;","lastModifiedDate":"2021-09-29"},{"lineNumber":90,"author":{"gitId":"idgrr"},"content":"            return Optional.empty();","lastModifiedDate":"2021-09-22"},{"lineNumber":91,"author":{"gitId":"idgrr"},"content":"        }","lastModifiedDate":"2021-09-22"},{"lineNumber":92,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":93,"author":{"gitId":"idgrr"},"content":"        addImportIntoAddressBook(csvImportAddressBook.get(), model);","lastModifiedDate":"2021-09-29"},{"lineNumber":94,"author":{"gitId":"idgrr"},"content":"        List\u003cInteger\u003e unsuccessful \u003d CsvUtil.getUnsuccessfulRow();","lastModifiedDate":"2021-10-18"},{"lineNumber":95,"author":{"gitId":"idgrr"},"content":"        unsuccessfulImportCount \u003d unsuccessful.size();","lastModifiedDate":"2021-10-18"},{"lineNumber":96,"author":{"gitId":"idgrr"},"content":"        return csvImportAddressBook;","lastModifiedDate":"2021-09-25"},{"lineNumber":97,"author":{"gitId":"idgrr"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":98,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":99,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":100,"author":{"gitId":"idgrr"},"content":"    @Override","lastModifiedDate":"2021-10-10"},{"lineNumber":101,"author":{"gitId":"idgrr"},"content":"    public void exportCurrentAddressBook(Model model) {","lastModifiedDate":"2021-10-10"},{"lineNumber":102,"author":{"gitId":"idgrr"},"content":"        exportAddressBook(model);","lastModifiedDate":"2021-10-10"},{"lineNumber":103,"author":{"gitId":"idgrr"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":104,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":105,"author":{"gitId":"idgrr"},"content":"    private void exportAddressBook(Model model) {","lastModifiedDate":"2021-10-10"},{"lineNumber":106,"author":{"gitId":"idgrr"},"content":"        CsvUtil.writeCsvFile(model.getFilteredPersonList(), this.exportPath);","lastModifiedDate":"2021-10-24"},{"lineNumber":107,"author":{"gitId":"idgrr"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":108,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":109,"author":{"gitId":"idgrr"},"content":"    public String getImportStatus() {","lastModifiedDate":"2021-10-10"},{"lineNumber":110,"author":{"gitId":"idgrr"},"content":"        if (fileFound) {","lastModifiedDate":"2021-10-10"},{"lineNumber":111,"author":{"gitId":"idgrr"},"content":"            return String.format(\"New Imports : \" + String.format(\"%-19.30s\" , successfulNewImportCount)","lastModifiedDate":"2021-10-20"},{"lineNumber":112,"author":{"gitId":"idgrr"},"content":"                    + \"          Unsuccessful imports : \" + unsuccessfulImportCount","lastModifiedDate":"2021-10-20"},{"lineNumber":113,"author":{"gitId":"idgrr"},"content":"                    + \"\\nTotal Duplicates : \"","lastModifiedDate":"2021-10-20"},{"lineNumber":114,"author":{"gitId":"idgrr"},"content":"                    + String.format(\"%-10.30s\" , (calledDuplicateImportCount + notCalledDuplicateImportCount))","lastModifiedDate":"2021-10-20"},{"lineNumber":115,"author":{"gitId":"idgrr"},"content":"                    + \"          Called Duplicate(s): \" + calledDuplicateImportCount","lastModifiedDate":"2021-10-20"},{"lineNumber":116,"author":{"gitId":"idgrr"},"content":"                    + \"          Not Called Duplicate(s) : \" + notCalledDuplicateImportCount)","lastModifiedDate":"2021-10-20"},{"lineNumber":117,"author":{"gitId":"idgrr"},"content":"                    + \"\\nCheck logs for detailed explanation.\";","lastModifiedDate":"2021-10-20"},{"lineNumber":118,"author":{"gitId":"idgrr"},"content":"        }","lastModifiedDate":"2021-10-10"},{"lineNumber":119,"author":{"gitId":"idgrr"},"content":"        return String.format(\"CSV file not found in \" + exportPath);","lastModifiedDate":"2021-10-24"},{"lineNumber":120,"author":{"gitId":"idgrr"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":121,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":122,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":123,"author":{"gitId":"idgrr"},"content":"    /**","lastModifiedDate":"2021-09-22"},{"lineNumber":124,"author":{"gitId":"idgrr"},"content":"     * Imports the list of valid people found in the CSV file","lastModifiedDate":"2021-09-22"},{"lineNumber":125,"author":{"gitId":"idgrr"},"content":"     *   Will not include duplicate people","lastModifiedDate":"2021-09-22"},{"lineNumber":126,"author":{"gitId":"idgrr"},"content":"     * @param people list of valid people","lastModifiedDate":"2021-10-06"},{"lineNumber":127,"author":{"gitId":"idgrr"},"content":"     * @param model model to import into","lastModifiedDate":"2021-10-06"},{"lineNumber":128,"author":{"gitId":"idgrr"},"content":"     */","lastModifiedDate":"2021-09-22"},{"lineNumber":129,"author":{"gitId":"idgrr"},"content":"    public void addImportIntoAddressBook(List\u003cPerson\u003e people, Model model) {","lastModifiedDate":"2021-10-22"},{"lineNumber":130,"author":{"gitId":"idgrr"},"content":"        duplicateRowImport \u003d new ArrayList\u003c\u003e(); // reset","lastModifiedDate":"2021-10-20"},{"lineNumber":131,"author":{"gitId":"idgrr"},"content":"        updateRowImport \u003d new ArrayList\u003c\u003e(); // reset","lastModifiedDate":"2021-10-20"},{"lineNumber":132,"author":{"gitId":"idgrr"},"content":"        successfulNewImportCount \u003d 0; // reset","lastModifiedDate":"2021-10-20"},{"lineNumber":133,"author":{"gitId":"idgrr"},"content":"        calledDuplicateImportCount \u003d 0; //reset","lastModifiedDate":"2021-10-20"},{"lineNumber":134,"author":{"gitId":"idgrr"},"content":"        for (int pos \u003d 0; pos \u003c people.size(); pos++) {","lastModifiedDate":"2021-10-20"},{"lineNumber":135,"author":{"gitId":"idgrr"},"content":"            Person importPerson \u003d people.get(pos);","lastModifiedDate":"2021-10-22"},{"lineNumber":136,"author":{"gitId":"idgrr"},"content":"            int listPos \u003d model.duplicateIndex(importPerson);","lastModifiedDate":"2021-10-22"},{"lineNumber":137,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":138,"author":{"gitId":"idgrr"},"content":"            if (listPos !\u003d -1) {","lastModifiedDate":"2021-10-22"},{"lineNumber":139,"author":{"gitId":"pranav-ganesh"},"content":"                if (importPerson.getIsCalled().value) {","lastModifiedDate":"2021-11-04"},{"lineNumber":140,"author":{"gitId":"idgrr"},"content":"                    updatePerson(listPos, importPerson, model);","lastModifiedDate":"2021-10-22"},{"lineNumber":141,"author":{"gitId":"idgrr"},"content":"                    updateRowImport.add(listPos + 1);","lastModifiedDate":"2021-10-22"},{"lineNumber":142,"author":{"gitId":"idgrr"},"content":"                    duplicateRowImport.add(listPos + 1);","lastModifiedDate":"2021-10-22"},{"lineNumber":143,"author":{"gitId":"idgrr"},"content":"                    calledDuplicateImportCount++;","lastModifiedDate":"2021-10-20"},{"lineNumber":144,"author":{"gitId":"idgrr"},"content":"                    continue;","lastModifiedDate":"2021-10-19"},{"lineNumber":145,"author":{"gitId":"idgrr"},"content":"                }","lastModifiedDate":"2021-10-19"},{"lineNumber":146,"author":{"gitId":"idgrr"},"content":"                duplicateRowImport.add(listPos + 1);","lastModifiedDate":"2021-10-22"},{"lineNumber":147,"author":{"gitId":"idgrr"},"content":"                notCalledDuplicateImportCount++;","lastModifiedDate":"2021-10-20"},{"lineNumber":148,"author":{"gitId":"idgrr"},"content":"                continue;","lastModifiedDate":"2021-10-19"},{"lineNumber":149,"author":{"gitId":"idgrr"},"content":"            }","lastModifiedDate":"2021-10-19"},{"lineNumber":150,"author":{"gitId":"idgrr"},"content":"            model.addPerson(importPerson);","lastModifiedDate":"2021-10-22"},{"lineNumber":151,"author":{"gitId":"idgrr"},"content":"            successfulNewImportCount++;","lastModifiedDate":"2021-10-20"},{"lineNumber":152,"author":{"gitId":"idgrr"},"content":"        }","lastModifiedDate":"2021-09-22"},{"lineNumber":153,"author":{"gitId":"idgrr"},"content":"        Collections.sort(duplicateRowImport);","lastModifiedDate":"2021-10-22"},{"lineNumber":154,"author":{"gitId":"idgrr"},"content":"        logger.info(successfulNewImportCount + \" new person(s) successfully imported\");","lastModifiedDate":"2021-10-20"},{"lineNumber":155,"author":{"gitId":"pranav-ganesh"},"content":"        logger.info(MESSAGE_DUPLICATE_CALLED_PERSON + updateRowImport);","lastModifiedDate":"2021-11-04"},{"lineNumber":156,"author":{"gitId":"pranav-ganesh"},"content":"        logger.info(MESSAGE_DUPLICATE_NOT_CALLED_PERSON + duplicateRowImport);","lastModifiedDate":"2021-11-04"},{"lineNumber":157,"author":{"gitId":"idgrr"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":158,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":159,"author":{"gitId":"idgrr"},"content":"    private void updatePerson(int listPos, Person importPerson, Model model) {","lastModifiedDate":"2021-10-22"},{"lineNumber":160,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":161,"author":{"gitId":"idgrr"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2021-10-22"},{"lineNumber":162,"author":{"gitId":"idgrr"},"content":"        assert(listPos \u003e\u003d 0 \u0026\u0026 listPos \u003c lastShownList.size());","lastModifiedDate":"2021-10-24"},{"lineNumber":163,"author":{"gitId":"idgrr"},"content":"        Person personToEdit \u003d lastShownList.get(listPos);","lastModifiedDate":"2021-10-22"},{"lineNumber":164,"author":{"gitId":"idgrr"},"content":"        model.setPerson(personToEdit, importPerson);","lastModifiedDate":"2021-10-22"},{"lineNumber":165,"author":{"gitId":"idgrr"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2021-10-22"},{"lineNumber":166,"author":{"gitId":"idgrr"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":167,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":168,"author":{"gitId":"idgrr"},"content":"}","lastModifiedDate":"2021-09-22"}],"authorContributionMap":{"idgrr":163,"pranav-ganesh":5}},{"path":"src/main/java/seedu/address/storage/ImportExport.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"idgrr"},"content":"package seedu.address.storage;","lastModifiedDate":"2021-09-22"},{"lineNumber":2,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":3,"author":{"gitId":"idgrr"},"content":"import java.nio.file.Path;","lastModifiedDate":"2021-10-24"},{"lineNumber":4,"author":{"gitId":"idgrr"},"content":"import java.util.List;","lastModifiedDate":"2021-09-22"},{"lineNumber":5,"author":{"gitId":"idgrr"},"content":"import java.util.Optional;","lastModifiedDate":"2021-09-22"},{"lineNumber":6,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":7,"author":{"gitId":"idgrr"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2021-09-22"},{"lineNumber":8,"author":{"gitId":"idgrr"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-09-22"},{"lineNumber":9,"author":{"gitId":"idgrr"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2021-09-22"},{"lineNumber":10,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":11,"author":{"gitId":"idgrr"},"content":"/**","lastModifiedDate":"2021-09-22"},{"lineNumber":12,"author":{"gitId":"idgrr"},"content":" * Interface of all import and exports","lastModifiedDate":"2021-09-22"},{"lineNumber":13,"author":{"gitId":"idgrr"},"content":" */","lastModifiedDate":"2021-09-22"},{"lineNumber":14,"author":{"gitId":"idgrr"},"content":"public interface ImportExport {","lastModifiedDate":"2021-09-22"},{"lineNumber":15,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":16,"author":{"gitId":"idgrr"},"content":"    Optional\u003cList\u003cPerson\u003e\u003e importIntoAddressBook(Model model) throws DataConversionException;","lastModifiedDate":"2021-09-22"},{"lineNumber":17,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":18,"author":{"gitId":"idgrr"},"content":"    void exportCurrentAddressBook(Model model) throws DataConversionException;","lastModifiedDate":"2021-10-10"},{"lineNumber":19,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":20,"author":{"gitId":"idgrr"},"content":"    String getImportStatus();","lastModifiedDate":"2021-09-25"},{"lineNumber":21,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":22,"author":{"gitId":"idgrr"},"content":"    Path getImportExportPath();","lastModifiedDate":"2021-10-24"},{"lineNumber":23,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":24,"author":{"gitId":"idgrr"},"content":"}","lastModifiedDate":"2021-09-22"}],"authorContributionMap":{"idgrr":24}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedInterest.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"houtenteo"},"content":"package seedu.address.storage;","lastModifiedDate":"2021-10-18"},{"lineNumber":2,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":3,"author":{"gitId":"houtenteo"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2021-10-18"},{"lineNumber":4,"author":{"gitId":"houtenteo"},"content":"import com.fasterxml.jackson.annotation.JsonValue;","lastModifiedDate":"2021-10-18"},{"lineNumber":5,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":6,"author":{"gitId":"houtenteo"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2021-10-18"},{"lineNumber":7,"author":{"gitId":"houtenteo"},"content":"import seedu.address.model.person.interests.Interest;","lastModifiedDate":"2021-10-18"},{"lineNumber":8,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":9,"author":{"gitId":"houtenteo"},"content":"public class JsonAdaptedInterest {","lastModifiedDate":"2021-10-18"},{"lineNumber":10,"author":{"gitId":"houtenteo"},"content":"    private final String interest;","lastModifiedDate":"2021-10-18"},{"lineNumber":11,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":12,"author":{"gitId":"houtenteo"},"content":"    /**","lastModifiedDate":"2021-10-18"},{"lineNumber":13,"author":{"gitId":"houtenteo"},"content":"     * Constructs a {@code JsonAdaptedInterest} with the given {@code tagName}.","lastModifiedDate":"2021-10-18"},{"lineNumber":14,"author":{"gitId":"houtenteo"},"content":"     */","lastModifiedDate":"2021-10-18"},{"lineNumber":15,"author":{"gitId":"houtenteo"},"content":"    @JsonCreator","lastModifiedDate":"2021-10-18"},{"lineNumber":16,"author":{"gitId":"houtenteo"},"content":"    public JsonAdaptedInterest(String interest) {","lastModifiedDate":"2021-10-18"},{"lineNumber":17,"author":{"gitId":"houtenteo"},"content":"        this.interest \u003d interest;","lastModifiedDate":"2021-10-18"},{"lineNumber":18,"author":{"gitId":"houtenteo"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":19,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":20,"author":{"gitId":"houtenteo"},"content":"    /**","lastModifiedDate":"2021-10-18"},{"lineNumber":21,"author":{"gitId":"houtenteo"},"content":"     * Converts a given {@code Interest} into this class for Jackson use.","lastModifiedDate":"2021-10-18"},{"lineNumber":22,"author":{"gitId":"houtenteo"},"content":"     */","lastModifiedDate":"2021-10-18"},{"lineNumber":23,"author":{"gitId":"houtenteo"},"content":"    public JsonAdaptedInterest(Interest source) {","lastModifiedDate":"2021-10-18"},{"lineNumber":24,"author":{"gitId":"houtenteo"},"content":"        interest \u003d source.value;","lastModifiedDate":"2021-10-18"},{"lineNumber":25,"author":{"gitId":"houtenteo"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":26,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":27,"author":{"gitId":"houtenteo"},"content":"    @JsonValue","lastModifiedDate":"2021-10-18"},{"lineNumber":28,"author":{"gitId":"houtenteo"},"content":"    public String getInterest() {","lastModifiedDate":"2021-10-18"},{"lineNumber":29,"author":{"gitId":"houtenteo"},"content":"        return interest;","lastModifiedDate":"2021-10-18"},{"lineNumber":30,"author":{"gitId":"houtenteo"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":31,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":32,"author":{"gitId":"houtenteo"},"content":"    /**","lastModifiedDate":"2021-10-18"},{"lineNumber":33,"author":{"gitId":"houtenteo"},"content":"     * Converts this Jackson-friendly adapted tag object into the model\u0027s {@code Interest} object.","lastModifiedDate":"2021-10-18"},{"lineNumber":34,"author":{"gitId":"houtenteo"},"content":"     *","lastModifiedDate":"2021-10-18"},{"lineNumber":35,"author":{"gitId":"houtenteo"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted interest.","lastModifiedDate":"2021-10-18"},{"lineNumber":36,"author":{"gitId":"houtenteo"},"content":"     */","lastModifiedDate":"2021-10-18"},{"lineNumber":37,"author":{"gitId":"houtenteo"},"content":"    public Interest toModelType() throws IllegalValueException {","lastModifiedDate":"2021-10-18"},{"lineNumber":38,"author":{"gitId":"houtenteo"},"content":"        if (!Interest.isValidInterest(interest)) {","lastModifiedDate":"2021-10-18"},{"lineNumber":39,"author":{"gitId":"houtenteo"},"content":"            throw new IllegalValueException(Interest.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-18"},{"lineNumber":40,"author":{"gitId":"houtenteo"},"content":"        }","lastModifiedDate":"2021-10-18"},{"lineNumber":41,"author":{"gitId":"houtenteo"},"content":"        return new Interest(interest);","lastModifiedDate":"2021-10-18"},{"lineNumber":42,"author":{"gitId":"houtenteo"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":43,"author":{"gitId":"houtenteo"},"content":"}","lastModifiedDate":"2021-10-18"}],"authorContributionMap":{"houtenteo":43}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedPerson.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2021-10-18"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2021-10-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2021-10-18"},{"lineNumber":12,"author":{"gitId":"houtenteo"},"content":"import seedu.address.model.person.Age;","lastModifiedDate":"2021-10-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"houtenteo"},"content":"import seedu.address.model.person.Gender;","lastModifiedDate":"2021-10-18"},{"lineNumber":15,"author":{"gitId":"pranav-ganesh"},"content":"import seedu.address.model.person.IsCalled;","lastModifiedDate":"2021-11-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"houtenteo"},"content":"import seedu.address.model.person.interests.Interest;","lastModifiedDate":"2021-10-18"},{"lineNumber":20,"author":{"gitId":"houtenteo"},"content":"import seedu.address.model.person.interests.InterestsList;","lastModifiedDate":"2021-10-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * Jackson-friendly version of {@link Person}.","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"class JsonAdaptedPerson {","lastModifiedDate":"2018-12-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Person\u0027s %s field is missing!\";","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private final String name;","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private final String phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private final String email;","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private final String address;","lastModifiedDate":"2021-10-18"},{"lineNumber":33,"author":{"gitId":"pranav-ganesh"},"content":"    private final String isCalled;","lastModifiedDate":"2021-11-04"},{"lineNumber":34,"author":{"gitId":"houtenteo"},"content":"    private final String gender;","lastModifiedDate":"2021-10-18"},{"lineNumber":35,"author":{"gitId":"houtenteo"},"content":"    private final String age;","lastModifiedDate":"2021-10-18"},{"lineNumber":36,"author":{"gitId":"houtenteo"},"content":"    private final List\u003cJsonAdaptedInterest\u003e interests \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-18"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * Constructs a {@code JsonAdaptedPerson} with the given person details.","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public JsonAdaptedPerson(@JsonProperty(\"name\") String name, @JsonProperty(\"phone\") String phone,","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"pranav-ganesh"},"content":"                             @JsonProperty(\"email\") String email, @JsonProperty(\"isCalled\") String isCalled,","lastModifiedDate":"2021-11-04"},{"lineNumber":44,"author":{"gitId":"houtenteo"},"content":"                             @JsonProperty(\"address\") String address, @JsonProperty(\"gender\") String gender,","lastModifiedDate":"2021-10-18"},{"lineNumber":45,"author":{"gitId":"houtenteo"},"content":"                             @JsonProperty(\"age\") String age,","lastModifiedDate":"2021-10-18"},{"lineNumber":46,"author":{"gitId":"houtenteo"},"content":"                             @JsonProperty(\"interests\") List\u003cJsonAdaptedInterest\u003e interests) {","lastModifiedDate":"2021-10-18"},{"lineNumber":47,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        this.email \u003d email;","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"pranav-ganesh"},"content":"        this.isCalled \u003d isCalled;","lastModifiedDate":"2021-11-04"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        this.address \u003d address;","lastModifiedDate":"2021-10-18"},{"lineNumber":53,"author":{"gitId":"houtenteo"},"content":"        this.gender \u003d gender;","lastModifiedDate":"2021-10-18"},{"lineNumber":54,"author":{"gitId":"houtenteo"},"content":"        this.age \u003d age;","lastModifiedDate":"2021-10-18"},{"lineNumber":55,"author":{"gitId":"houtenteo"},"content":"        if (interests !\u003d null) {","lastModifiedDate":"2021-10-18"},{"lineNumber":56,"author":{"gitId":"houtenteo"},"content":"            this.interests.addAll(interests);","lastModifiedDate":"2021-10-18"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-10-18"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * Converts a given {@code Person} into this class for Jackson use.","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public JsonAdaptedPerson(Person source) {","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        name \u003d source.getName().fullName;","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        phone \u003d source.getPhone().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        email \u003d source.getEmail().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"pranav-ganesh"},"content":"        isCalled \u003d source.getIsCalled().value ? \"TRUE\" : \"FALSE\";","lastModifiedDate":"2021-11-04"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        address \u003d source.getAddress().value;","lastModifiedDate":"2021-10-18"},{"lineNumber":69,"author":{"gitId":"houtenteo"},"content":"        gender \u003d source.getGender().value;","lastModifiedDate":"2021-10-18"},{"lineNumber":70,"author":{"gitId":"houtenteo"},"content":"        age \u003d source.getAge().value;","lastModifiedDate":"2021-10-18"},{"lineNumber":71,"author":{"gitId":"idgrr"},"content":"        interests.addAll(source.getAllInterests()","lastModifiedDate":"2021-10-18"},{"lineNumber":72,"author":{"gitId":"houtenteo"},"content":"                .stream()","lastModifiedDate":"2021-10-18"},{"lineNumber":73,"author":{"gitId":"houtenteo"},"content":"                .map(JsonAdaptedInterest::new)","lastModifiedDate":"2021-10-18"},{"lineNumber":74,"author":{"gitId":"-"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2021-10-18"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * Converts this Jackson-friendly adapted person object into the model\u0027s {@code Person} object.","lastModifiedDate":"2018-08-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted person.","lastModifiedDate":"2018-08-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public Person toModelType() throws IllegalValueException {","lastModifiedDate":"2018-08-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        if (name \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(name)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        final Name modelName \u003d new Name(name);","lastModifiedDate":"2018-08-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        if (phone \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(phone)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        final Phone modelPhone \u003d new Phone(phone);","lastModifiedDate":"2018-08-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        if (email \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        if (!Email.isValidEmail(email)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        final Email modelEmail \u003d new Email(email);","lastModifiedDate":"2018-08-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":108,"author":{"gitId":"pranav-ganesh"},"content":"        if (isCalled \u003d\u003d null) {","lastModifiedDate":"2021-11-04"},{"lineNumber":109,"author":{"gitId":"pranav-ganesh"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2021-11-04"},{"lineNumber":110,"author":{"gitId":"pranav-ganesh"},"content":"                    IsCalled.class.getSimpleName()));","lastModifiedDate":"2021-11-04"},{"lineNumber":111,"author":{"gitId":"idgrr"},"content":"        }","lastModifiedDate":"2021-10-03"},{"lineNumber":112,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":113,"author":{"gitId":"pranav-ganesh"},"content":"        if (!(IsCalled.isValidIsCalled(isCalled))) {","lastModifiedDate":"2021-11-04"},{"lineNumber":114,"author":{"gitId":"pranav-ganesh"},"content":"            throw new IllegalValueException(IsCalled.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-11-04"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-10-02"},{"lineNumber":116,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":117,"author":{"gitId":"pranav-ganesh"},"content":"        final IsCalled modelIsCalled \u003d new IsCalled(isCalled);","lastModifiedDate":"2021-11-04"},{"lineNumber":118,"author":{"gitId":"Kangxun"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        if (!Address.isValidAddress(address)) {","lastModifiedDate":"2021-10-18"},{"lineNumber":120,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-18"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-10-18"},{"lineNumber":122,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        final Address modelAddress \u003d new Address(address);","lastModifiedDate":"2021-10-18"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":125,"author":{"gitId":"houtenteo"},"content":"        if (!Gender.isValidGender(gender)) {","lastModifiedDate":"2021-10-18"},{"lineNumber":126,"author":{"gitId":"houtenteo"},"content":"            throw new IllegalValueException(Gender.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-18"},{"lineNumber":127,"author":{"gitId":"houtenteo"},"content":"        }","lastModifiedDate":"2021-10-18"},{"lineNumber":128,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":129,"author":{"gitId":"houtenteo"},"content":"        final Gender modelGender \u003d new Gender(gender);","lastModifiedDate":"2021-10-18"},{"lineNumber":130,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":131,"author":{"gitId":"houtenteo"},"content":"        if (!Age.isValidAge(age)) {","lastModifiedDate":"2021-10-18"},{"lineNumber":132,"author":{"gitId":"houtenteo"},"content":"            throw new IllegalValueException(Age.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-18"},{"lineNumber":133,"author":{"gitId":"houtenteo"},"content":"        }","lastModifiedDate":"2021-10-18"},{"lineNumber":134,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":135,"author":{"gitId":"houtenteo"},"content":"        final Age modelAge \u003d new Age(age);","lastModifiedDate":"2021-10-18"},{"lineNumber":136,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":137,"author":{"gitId":"houtenteo"},"content":"        final InterestsList modelInterests \u003d new InterestsList();","lastModifiedDate":"2021-10-18"},{"lineNumber":138,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":139,"author":{"gitId":"houtenteo"},"content":"        for (JsonAdaptedInterest interest : interests) {","lastModifiedDate":"2021-10-18"},{"lineNumber":140,"author":{"gitId":"houtenteo"},"content":"            Interest i \u003d interest.toModelType();","lastModifiedDate":"2021-10-18"},{"lineNumber":141,"author":{"gitId":"houtenteo"},"content":"            if (modelInterests.checkDuplicate(i)) {","lastModifiedDate":"2021-10-18"},{"lineNumber":142,"author":{"gitId":"houtenteo"},"content":"                throw new IllegalValueException(InterestsList.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-18"},{"lineNumber":143,"author":{"gitId":"houtenteo"},"content":"            } else {","lastModifiedDate":"2021-10-18"},{"lineNumber":144,"author":{"gitId":"houtenteo"},"content":"                modelInterests.addInterest(i);","lastModifiedDate":"2021-10-18"},{"lineNumber":145,"author":{"gitId":"houtenteo"},"content":"            }","lastModifiedDate":"2021-10-18"},{"lineNumber":146,"author":{"gitId":"houtenteo"},"content":"        }","lastModifiedDate":"2021-10-18"},{"lineNumber":147,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":148,"author":{"gitId":"pranav-ganesh"},"content":"        return new Person(modelName, modelPhone, modelEmail, modelIsCalled, modelAddress,","lastModifiedDate":"2021-11-04"},{"lineNumber":149,"author":{"gitId":"houtenteo"},"content":"                modelGender, modelAge, modelInterests);","lastModifiedDate":"2021-10-18"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":152,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"houtenteo":44,"idgrr":4,"pranav-ganesh":12,"-":91,"Kangxun":1}},{"path":"src/main/java/seedu/address/storage/Storage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2016-09-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"idgrr"},"content":"import java.util.List;","lastModifiedDate":"2021-10-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2016-09-25"},{"lineNumber":9,"author":{"gitId":"idgrr"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-10-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2016-09-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"idgrr"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2021-10-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * API of the Storage component","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"idgrr"},"content":"public interface Storage extends AddressBookStorage, UserPrefsStorage, ImportExport {","lastModifiedDate":"2021-10-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    Optional\u003cUserPrefs\u003e readUserPrefs() throws DataConversionException, IOException;","lastModifiedDate":"2016-09-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException;","lastModifiedDate":"2018-11-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-04-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    Optional\u003cReadOnlyAddressBook\u003e readAddressBook() throws DataConversionException, IOException;","lastModifiedDate":"2016-10-01"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    void saveAddressBook(ReadOnlyAddressBook addressBook) throws IOException;","lastModifiedDate":"2016-09-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-26"},{"lineNumber":35,"author":{"gitId":"idgrr"},"content":"    @Override","lastModifiedDate":"2021-10-25"},{"lineNumber":36,"author":{"gitId":"idgrr"},"content":"    Optional\u003cList\u003cPerson\u003e\u003e importIntoAddressBook(Model model) throws DataConversionException;","lastModifiedDate":"2021-10-25"},{"lineNumber":37,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":38,"author":{"gitId":"idgrr"},"content":"    @Override","lastModifiedDate":"2021-10-25"},{"lineNumber":39,"author":{"gitId":"idgrr"},"content":"    void exportCurrentAddressBook(Model model) throws DataConversionException;","lastModifiedDate":"2021-10-25"},{"lineNumber":40,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":41,"author":{"gitId":"idgrr"},"content":"    @Override","lastModifiedDate":"2021-10-25"},{"lineNumber":42,"author":{"gitId":"idgrr"},"content":"    String getImportStatus();","lastModifiedDate":"2021-10-25"},{"lineNumber":43,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":44,"author":{"gitId":"idgrr"},"content":"    @Override","lastModifiedDate":"2021-10-25"},{"lineNumber":45,"author":{"gitId":"idgrr"},"content":"    Path getImportExportPath();","lastModifiedDate":"2021-10-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"idgrr":15,"-":31}},{"path":"src/main/java/seedu/address/storage/StorageManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"idgrr"},"content":"import java.util.List;","lastModifiedDate":"2021-10-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2016-09-24"},{"lineNumber":11,"author":{"gitId":"idgrr"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-10-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":15,"author":{"gitId":"idgrr"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2021-10-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * Manages storage of AddressBook data in local storage.","lastModifiedDate":"2016-09-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class StorageManager implements Storage {","lastModifiedDate":"2018-12-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(StorageManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private AddressBookStorage addressBookStorage;","lastModifiedDate":"2016-10-01"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private UserPrefsStorage userPrefsStorage;","lastModifiedDate":"2016-10-01"},{"lineNumber":25,"author":{"gitId":"idgrr"},"content":"    private final ImportExport importExportManager;","lastModifiedDate":"2021-10-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Creates a {@code StorageManager} with the given {@code AddressBookStorage} and {@code UserPrefStorage}.","lastModifiedDate":"2020-05-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":30,"author":{"gitId":"idgrr"},"content":"    public StorageManager(AddressBookStorage addressBookStorage, UserPrefsStorage userPrefsStorage,","lastModifiedDate":"2021-10-25"},{"lineNumber":31,"author":{"gitId":"idgrr"},"content":"                          ImportExport importExportManager) {","lastModifiedDate":"2021-10-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        super();","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        this.addressBookStorage \u003d addressBookStorage;","lastModifiedDate":"2016-10-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        this.userPrefsStorage \u003d userPrefsStorage;","lastModifiedDate":"2016-10-01"},{"lineNumber":35,"author":{"gitId":"idgrr"},"content":"        this.importExportManager \u003d importExportManager;","lastModifiedDate":"2021-10-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2016-09-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-02-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public Path getUserPrefsFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return userPrefsStorage.getUserPrefsFilePath();","lastModifiedDate":"2017-02-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public Optional\u003cUserPrefs\u003e readUserPrefs() throws DataConversionException, IOException {","lastModifiedDate":"2016-09-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return userPrefsStorage.readUserPrefs();","lastModifiedDate":"2016-10-01"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException {","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        userPrefsStorage.saveUserPrefs(userPrefs);","lastModifiedDate":"2016-10-01"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d AddressBook methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        return addressBookStorage.getAddressBookFilePath();","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public Optional\u003cReadOnlyAddressBook\u003e readAddressBook() throws DataConversionException, IOException {","lastModifiedDate":"2016-10-01"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        return readAddressBook(addressBookStorage.getAddressBookFilePath());","lastModifiedDate":"2016-10-01"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-10-01"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public Optional\u003cReadOnlyAddressBook\u003e readAddressBook(Path filePath) throws DataConversionException, IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        logger.fine(\"Attempting to read data from file: \" + filePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        return addressBookStorage.readAddressBook(filePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"idgrr"},"content":"    @Override","lastModifiedDate":"2021-10-25"},{"lineNumber":75,"author":{"gitId":"idgrr"},"content":"    public void saveAddressBook(ReadOnlyAddressBook addressBook, Path filePath) throws IOException {","lastModifiedDate":"2021-10-25"},{"lineNumber":76,"author":{"gitId":"idgrr"},"content":"        logger.fine(\"Attempting to write to data file: \" + filePath);","lastModifiedDate":"2021-10-25"},{"lineNumber":77,"author":{"gitId":"idgrr"},"content":"        addressBookStorage.saveAddressBook(addressBook, filePath);","lastModifiedDate":"2021-10-25"},{"lineNumber":78,"author":{"gitId":"idgrr"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":79,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void saveAddressBook(ReadOnlyAddressBook addressBook) throws IOException {","lastModifiedDate":"2016-09-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        saveAddressBook(addressBook, addressBookStorage.getAddressBookFilePath());","lastModifiedDate":"2016-10-01"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":85,"author":{"gitId":"idgrr"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d ImportExport Methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-10-25"},{"lineNumber":86,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-10-01"},{"lineNumber":88,"author":{"gitId":"idgrr"},"content":"    public Optional\u003cList\u003cPerson\u003e\u003e importIntoAddressBook(Model model) throws DataConversionException {","lastModifiedDate":"2021-10-25"},{"lineNumber":89,"author":{"gitId":"idgrr"},"content":"        return importExportManager.importIntoAddressBook(model);","lastModifiedDate":"2021-10-25"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":92,"author":{"gitId":"idgrr"},"content":"    @Override","lastModifiedDate":"2021-10-25"},{"lineNumber":93,"author":{"gitId":"idgrr"},"content":"    public void exportCurrentAddressBook(Model model) throws DataConversionException {","lastModifiedDate":"2021-10-25"},{"lineNumber":94,"author":{"gitId":"idgrr"},"content":"        importExportManager.exportCurrentAddressBook(model);","lastModifiedDate":"2021-10-25"},{"lineNumber":95,"author":{"gitId":"idgrr"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":96,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":97,"author":{"gitId":"idgrr"},"content":"    @Override","lastModifiedDate":"2021-10-25"},{"lineNumber":98,"author":{"gitId":"idgrr"},"content":"    public String getImportStatus() {","lastModifiedDate":"2021-10-25"},{"lineNumber":99,"author":{"gitId":"idgrr"},"content":"        return importExportManager.getImportStatus();","lastModifiedDate":"2021-10-25"},{"lineNumber":100,"author":{"gitId":"idgrr"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":101,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":102,"author":{"gitId":"idgrr"},"content":"    @Override","lastModifiedDate":"2021-10-25"},{"lineNumber":103,"author":{"gitId":"idgrr"},"content":"    public Path getImportExportPath() {","lastModifiedDate":"2021-10-25"},{"lineNumber":104,"author":{"gitId":"idgrr"},"content":"        return importExportManager.getImportExportPath();","lastModifiedDate":"2021-10-25"},{"lineNumber":105,"author":{"gitId":"idgrr"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":106,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":107,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":108,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":109,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"idgrr":34,"-":75}},{"path":"src/main/java/seedu/address/ui/CommandBox.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-03-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-09-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2016-09-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2016-10-15"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":9,"author":{"gitId":"Kangxun"},"content":"import seedu.address.logic.comparators.exceptions.ComparatorException;","lastModifiedDate":"2021-10-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * The UI component that is responsible for receiving user command inputs.","lastModifiedDate":"2017-08-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class CommandBox extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public static final String ERROR_STYLE_CLASS \u003d \"error\";","lastModifiedDate":"2017-02-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"CommandBox.fxml\";","lastModifiedDate":"2017-04-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private final CommandExecutor commandExecutor;","lastModifiedDate":"2018-12-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-14"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private TextField commandTextField;","lastModifiedDate":"2016-09-14"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * Creates a {@code CommandBox} with the given {@code CommandExecutor}.","lastModifiedDate":"2020-05-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public CommandBox(CommandExecutor commandExecutor) {","lastModifiedDate":"2019-01-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        this.commandExecutor \u003d commandExecutor;","lastModifiedDate":"2018-12-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // calls #setStyleToDefault() whenever there is a change to the text of the command box.","lastModifiedDate":"2017-06-28"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        commandTextField.textProperty().addListener((unused1, unused2, unused3) -\u003e setStyleToDefault());","lastModifiedDate":"2017-06-28"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-14"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * Handles the Enter button pressed event.","lastModifiedDate":"2017-08-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-14"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private void handleCommandEntered() {","lastModifiedDate":"2018-04-01"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        String commandText \u003d commandTextField.getText();","lastModifiedDate":"2020-12-04"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        if (commandText.equals(\"\")) {","lastModifiedDate":"2020-12-04"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            return;","lastModifiedDate":"2020-12-04"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-12-04"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-12-04"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-02-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            commandExecutor.execute(commandText);","lastModifiedDate":"2020-12-04"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            commandTextField.setText(\"\");","lastModifiedDate":"2016-09-14"},{"lineNumber":48,"author":{"gitId":"Kangxun"},"content":"        } catch (CommandException | ParseException | ComparatorException e) {","lastModifiedDate":"2021-10-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            setStyleToIndicateCommandFailure();","lastModifiedDate":"2017-02-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-14"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-28"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-28"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * Sets the command box style to use the default style.","lastModifiedDate":"2017-06-28"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-28"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    private void setStyleToDefault() {","lastModifiedDate":"2017-06-28"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        commandTextField.getStyleClass().remove(ERROR_STYLE_CLASS);","lastModifiedDate":"2017-02-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-28"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-28"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * Sets the command box style to indicate a failed command.","lastModifiedDate":"2017-02-05"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-28"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    private void setStyleToIndicateCommandFailure() {","lastModifiedDate":"2017-02-05"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        ObservableList\u003cString\u003e styleClass \u003d commandTextField.getStyleClass();","lastModifiedDate":"2017-03-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        if (styleClass.contains(ERROR_STYLE_CLASS)) {","lastModifiedDate":"2017-03-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"            return;","lastModifiedDate":"2017-03-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        styleClass.add(ERROR_STYLE_CLASS);","lastModifiedDate":"2017-03-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-14"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * Represents a function that can execute commands.","lastModifiedDate":"2018-12-09"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @FunctionalInterface","lastModifiedDate":"2018-12-09"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public interface CommandExecutor {","lastModifiedDate":"2018-12-09"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-12-09"},{"lineNumber":79,"author":{"gitId":"-"},"content":"         * Executes the command and returns the result.","lastModifiedDate":"2018-12-09"},{"lineNumber":80,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2018-12-09"},{"lineNumber":81,"author":{"gitId":"-"},"content":"         * @see seedu.address.logic.Logic#execute(String)","lastModifiedDate":"2018-12-09"},{"lineNumber":82,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-12-09"},{"lineNumber":83,"author":{"gitId":"Kangxun"},"content":"        CommandResult execute(String commandText) throws CommandException, ParseException, ComparatorException;","lastModifiedDate":"2021-10-25"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":86,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"}],"authorContributionMap":{"-":83,"Kangxun":3}},{"path":"src/main/java/seedu/address/ui/FullPersonCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"houtenteo"},"content":"package seedu.address.ui;","lastModifiedDate":"2021-10-18"},{"lineNumber":2,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":3,"author":{"gitId":"houtenteo"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2021-10-18"},{"lineNumber":4,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":5,"author":{"gitId":"loose-bus-change"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-10-21"},{"lineNumber":6,"author":{"gitId":"houtenteo"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-10-18"},{"lineNumber":7,"author":{"gitId":"houtenteo"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2021-10-18"},{"lineNumber":8,"author":{"gitId":"houtenteo"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2021-10-18"},{"lineNumber":9,"author":{"gitId":"houtenteo"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2021-10-18"},{"lineNumber":10,"author":{"gitId":"houtenteo"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2021-10-18"},{"lineNumber":11,"author":{"gitId":"houtenteo"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2021-10-18"},{"lineNumber":12,"author":{"gitId":"houtenteo"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2021-10-18"},{"lineNumber":13,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":14,"author":{"gitId":"houtenteo"},"content":"public class FullPersonCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2021-10-18"},{"lineNumber":15,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":16,"author":{"gitId":"houtenteo"},"content":"    private static final String FXML \u003d \"FullPersonCard.fxml\";","lastModifiedDate":"2021-10-18"},{"lineNumber":17,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":18,"author":{"gitId":"houtenteo"},"content":"    private static final String PHONE_LABEL \u003d \"Phone: \";","lastModifiedDate":"2021-10-18"},{"lineNumber":19,"author":{"gitId":"houtenteo"},"content":"    private static final String EMAIL_LABEL \u003d \"Email: \";","lastModifiedDate":"2021-10-18"},{"lineNumber":20,"author":{"gitId":"pranav-ganesh"},"content":"    private static final String CALLED_LABEL \u003d \"Called: \";","lastModifiedDate":"2021-11-04"},{"lineNumber":21,"author":{"gitId":"houtenteo"},"content":"    private static final String ADDRESS_LABEL \u003d \"Address: \";","lastModifiedDate":"2021-10-18"},{"lineNumber":22,"author":{"gitId":"houtenteo"},"content":"    private static final String GENDER_LABEL \u003d \"Gender: \";","lastModifiedDate":"2021-10-18"},{"lineNumber":23,"author":{"gitId":"houtenteo"},"content":"    private static final String AGE_LABEL \u003d \"Age: \";","lastModifiedDate":"2021-10-18"},{"lineNumber":24,"author":{"gitId":"houtenteo"},"content":"    private static final String INTERESTS_LABEL \u003d \"Interests: \";","lastModifiedDate":"2021-10-18"},{"lineNumber":25,"author":{"gitId":"houtenteo"},"content":"    private static final String DEFAULT_FIELD \u003d \"N.A\";","lastModifiedDate":"2021-10-18"},{"lineNumber":26,"author":{"gitId":"houtenteo"},"content":"    private static final String NO_PERSON_TO_DISPLAY \u003d \"No person to display\";","lastModifiedDate":"2021-10-18"},{"lineNumber":27,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":28,"author":{"gitId":"loose-bus-change"},"content":"    private static int displayedIndex \u003d 1;","lastModifiedDate":"2021-10-21"},{"lineNumber":29,"author":{"gitId":"loose-bus-change"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":30,"author":{"gitId":"houtenteo"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(FullPersonCard.class);","lastModifiedDate":"2021-10-18"},{"lineNumber":31,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":32,"author":{"gitId":"houtenteo"},"content":"    private Person person;","lastModifiedDate":"2021-10-18"},{"lineNumber":33,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":34,"author":{"gitId":"houtenteo"},"content":"    @FXML","lastModifiedDate":"2021-10-18"},{"lineNumber":35,"author":{"gitId":"houtenteo"},"content":"    private ScrollPane fullPersonDetails;","lastModifiedDate":"2021-10-18"},{"lineNumber":36,"author":{"gitId":"houtenteo"},"content":"    @FXML","lastModifiedDate":"2021-10-18"},{"lineNumber":37,"author":{"gitId":"houtenteo"},"content":"    private VBox fullPersonContainer;","lastModifiedDate":"2021-10-18"},{"lineNumber":38,"author":{"gitId":"houtenteo"},"content":"    @FXML","lastModifiedDate":"2021-10-18"},{"lineNumber":39,"author":{"gitId":"houtenteo"},"content":"    private Label name;","lastModifiedDate":"2021-10-18"},{"lineNumber":40,"author":{"gitId":"houtenteo"},"content":"    @FXML","lastModifiedDate":"2021-10-18"},{"lineNumber":41,"author":{"gitId":"houtenteo"},"content":"    private Label id;","lastModifiedDate":"2021-10-18"},{"lineNumber":42,"author":{"gitId":"houtenteo"},"content":"    @FXML","lastModifiedDate":"2021-10-18"},{"lineNumber":43,"author":{"gitId":"houtenteo"},"content":"    private Label phone;","lastModifiedDate":"2021-10-18"},{"lineNumber":44,"author":{"gitId":"houtenteo"},"content":"    @FXML","lastModifiedDate":"2021-10-18"},{"lineNumber":45,"author":{"gitId":"houtenteo"},"content":"    private Label email;","lastModifiedDate":"2021-10-18"},{"lineNumber":46,"author":{"gitId":"houtenteo"},"content":"    @FXML","lastModifiedDate":"2021-10-18"},{"lineNumber":47,"author":{"gitId":"pranav-ganesh"},"content":"    private Label isCalled;","lastModifiedDate":"2021-11-04"},{"lineNumber":48,"author":{"gitId":"houtenteo"},"content":"    @FXML","lastModifiedDate":"2021-10-18"},{"lineNumber":49,"author":{"gitId":"houtenteo"},"content":"    private Label address;","lastModifiedDate":"2021-10-18"},{"lineNumber":50,"author":{"gitId":"houtenteo"},"content":"    @FXML","lastModifiedDate":"2021-10-18"},{"lineNumber":51,"author":{"gitId":"houtenteo"},"content":"    private Label gender;","lastModifiedDate":"2021-10-18"},{"lineNumber":52,"author":{"gitId":"houtenteo"},"content":"    @FXML","lastModifiedDate":"2021-10-18"},{"lineNumber":53,"author":{"gitId":"houtenteo"},"content":"    private Label age;","lastModifiedDate":"2021-10-18"},{"lineNumber":54,"author":{"gitId":"houtenteo"},"content":"    @FXML","lastModifiedDate":"2021-10-18"},{"lineNumber":55,"author":{"gitId":"houtenteo"},"content":"    private Label interests;","lastModifiedDate":"2021-10-18"},{"lineNumber":56,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":57,"author":{"gitId":"houtenteo"},"content":"    /**","lastModifiedDate":"2021-10-18"},{"lineNumber":58,"author":{"gitId":"houtenteo"},"content":"     * Constructor for the FullPersonCard","lastModifiedDate":"2021-10-18"},{"lineNumber":59,"author":{"gitId":"houtenteo"},"content":"     * @param persons The current list displayed","lastModifiedDate":"2021-10-18"},{"lineNumber":60,"author":{"gitId":"houtenteo"},"content":"     * @param windowWidth The size of the card","lastModifiedDate":"2021-10-18"},{"lineNumber":61,"author":{"gitId":"houtenteo"},"content":"     */","lastModifiedDate":"2021-10-18"},{"lineNumber":62,"author":{"gitId":"loose-bus-change"},"content":"    public FullPersonCard(ObservableList\u003cPerson\u003e persons, double windowWidth) {","lastModifiedDate":"2021-10-21"},{"lineNumber":63,"author":{"gitId":"houtenteo"},"content":"        super(FXML);","lastModifiedDate":"2021-10-18"},{"lineNumber":64,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":65,"author":{"gitId":"houtenteo"},"content":"        fullPersonDetails.setPrefWidth(windowWidth / 3);","lastModifiedDate":"2021-10-18"},{"lineNumber":66,"author":{"gitId":"pranav-ganesh"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":67,"author":{"gitId":"houtenteo"},"content":"        try {","lastModifiedDate":"2021-10-18"},{"lineNumber":68,"author":{"gitId":"houtenteo"},"content":"            this.person \u003d persons.get(displayedIndex - 1);","lastModifiedDate":"2021-10-18"},{"lineNumber":69,"author":{"gitId":"houtenteo"},"content":"            id.setText(displayedIndex + \". \");","lastModifiedDate":"2021-10-18"},{"lineNumber":70,"author":{"gitId":"houtenteo"},"content":"            name.setText(person.getName().fullName);","lastModifiedDate":"2021-10-18"},{"lineNumber":71,"author":{"gitId":"houtenteo"},"content":"            phone.setText(person.getPhone().value);","lastModifiedDate":"2021-10-18"},{"lineNumber":72,"author":{"gitId":"houtenteo"},"content":"            email.setText(person.getEmail().value);","lastModifiedDate":"2021-10-18"},{"lineNumber":73,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":74,"author":{"gitId":"pranav-ganesh"},"content":"            if (person.getIsCalled().value) {","lastModifiedDate":"2021-11-04"},{"lineNumber":75,"author":{"gitId":"pranav-ganesh"},"content":"                isCalled.setText(\"True\");","lastModifiedDate":"2021-11-04"},{"lineNumber":76,"author":{"gitId":"pranav-ganesh"},"content":"                isCalled.setStyle(\"-fx-text-fill: springgreen\");","lastModifiedDate":"2021-11-04"},{"lineNumber":77,"author":{"gitId":"houtenteo"},"content":"            } else {","lastModifiedDate":"2021-10-18"},{"lineNumber":78,"author":{"gitId":"pranav-ganesh"},"content":"                isCalled.setText(\"False\");","lastModifiedDate":"2021-11-04"},{"lineNumber":79,"author":{"gitId":"pranav-ganesh"},"content":"                isCalled.setStyle(\"-fx-text-fill: red\");","lastModifiedDate":"2021-11-04"},{"lineNumber":80,"author":{"gitId":"houtenteo"},"content":"            }","lastModifiedDate":"2021-10-18"},{"lineNumber":81,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":82,"author":{"gitId":"houtenteo"},"content":"            address.setText(person.getAddress().value);","lastModifiedDate":"2021-10-18"},{"lineNumber":83,"author":{"gitId":"houtenteo"},"content":"            gender.setText(person.getGender().value);","lastModifiedDate":"2021-10-18"},{"lineNumber":84,"author":{"gitId":"loose-bus-change"},"content":"            age.setText(person.getAge().value);","lastModifiedDate":"2021-10-21"},{"lineNumber":85,"author":{"gitId":"houtenteo"},"content":"            interests.setText(person.getInterests().toString());","lastModifiedDate":"2021-10-18"},{"lineNumber":86,"author":{"gitId":"houtenteo"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2021-10-18"},{"lineNumber":87,"author":{"gitId":"houtenteo"},"content":"            createEmptyCard();","lastModifiedDate":"2021-10-18"},{"lineNumber":88,"author":{"gitId":"houtenteo"},"content":"        }","lastModifiedDate":"2021-10-18"},{"lineNumber":89,"author":{"gitId":"houtenteo"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":90,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":91,"author":{"gitId":"loose-bus-change"},"content":"    public static void setDisplayedIndex(int index) {","lastModifiedDate":"2021-10-22"},{"lineNumber":92,"author":{"gitId":"loose-bus-change"},"content":"        displayedIndex \u003d index;","lastModifiedDate":"2021-10-22"},{"lineNumber":93,"author":{"gitId":"loose-bus-change"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":94,"author":{"gitId":"loose-bus-change"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":95,"author":{"gitId":"loose-bus-change"},"content":"    public static int getDisplayedIndex() {","lastModifiedDate":"2021-10-22"},{"lineNumber":96,"author":{"gitId":"loose-bus-change"},"content":"        return displayedIndex;","lastModifiedDate":"2021-10-22"},{"lineNumber":97,"author":{"gitId":"loose-bus-change"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":98,"author":{"gitId":"loose-bus-change"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":99,"author":{"gitId":"houtenteo"},"content":"    /**","lastModifiedDate":"2021-10-18"},{"lineNumber":100,"author":{"gitId":"houtenteo"},"content":"     * Creates an empty card where all the fields are N.A.","lastModifiedDate":"2021-10-18"},{"lineNumber":101,"author":{"gitId":"houtenteo"},"content":"     */","lastModifiedDate":"2021-10-18"},{"lineNumber":102,"author":{"gitId":"houtenteo"},"content":"    private void createEmptyCard() {","lastModifiedDate":"2021-10-18"},{"lineNumber":103,"author":{"gitId":"houtenteo"},"content":"        this.person \u003d null;","lastModifiedDate":"2021-10-18"},{"lineNumber":104,"author":{"gitId":"houtenteo"},"content":"        id.setText(NO_PERSON_TO_DISPLAY);","lastModifiedDate":"2021-10-18"},{"lineNumber":105,"author":{"gitId":"houtenteo"},"content":"        name.setText(\"\");","lastModifiedDate":"2021-10-18"},{"lineNumber":106,"author":{"gitId":"houtenteo"},"content":"        phone.setText(DEFAULT_FIELD);","lastModifiedDate":"2021-10-18"},{"lineNumber":107,"author":{"gitId":"houtenteo"},"content":"        email.setText(DEFAULT_FIELD);","lastModifiedDate":"2021-10-18"},{"lineNumber":108,"author":{"gitId":"pranav-ganesh"},"content":"        isCalled.setText(DEFAULT_FIELD);","lastModifiedDate":"2021-11-04"},{"lineNumber":109,"author":{"gitId":"houtenteo"},"content":"        address.setText(DEFAULT_FIELD);","lastModifiedDate":"2021-10-18"},{"lineNumber":110,"author":{"gitId":"houtenteo"},"content":"        address.setText(DEFAULT_FIELD);","lastModifiedDate":"2021-10-18"},{"lineNumber":111,"author":{"gitId":"houtenteo"},"content":"        gender.setText(DEFAULT_FIELD);","lastModifiedDate":"2021-10-18"},{"lineNumber":112,"author":{"gitId":"houtenteo"},"content":"        age.setText(DEFAULT_FIELD);","lastModifiedDate":"2021-10-18"},{"lineNumber":113,"author":{"gitId":"houtenteo"},"content":"        interests.setText(DEFAULT_FIELD);","lastModifiedDate":"2021-10-18"},{"lineNumber":114,"author":{"gitId":"houtenteo"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":115,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":116,"author":{"gitId":"houtenteo"},"content":"}","lastModifiedDate":"2021-10-18"}],"authorContributionMap":{"houtenteo":94,"loose-bus-change":13,"pranav-ganesh":9}},{"path":"src/main/java/seedu/address/ui/HelpWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-12-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2019-08-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2019-08-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.input.Clipboard;","lastModifiedDate":"2019-08-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.input.ClipboardContent;","lastModifiedDate":"2019-08-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Controller for a help page","lastModifiedDate":"2016-08-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class HelpWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-12-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":18,"author":{"gitId":"Kangxun"},"content":"    public static final String USERGUIDE_URL \u003d \"https://ay2122s1-cs2103t-t13-4.github.io/tp/UserGuide.html\";","lastModifiedDate":"2021-10-02"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String HELP_MESSAGE \u003d \"Refer to the user guide: \" + USERGUIDE_URL;","lastModifiedDate":"2019-08-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(HelpWindow.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"HelpWindow.fxml\";","lastModifiedDate":"2016-09-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-12-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private Button copyButton;","lastModifiedDate":"2019-08-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-08-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2019-08-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private Label helpMessage;","lastModifiedDate":"2019-08-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-12-01"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Creates a new HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-12-01"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * @param root Stage to use as the root of the HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-12-01"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public HelpWindow(Stage root) {","lastModifiedDate":"2017-12-01"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        super(FXML, root);","lastModifiedDate":"2017-12-01"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        helpMessage.setText(HELP_MESSAGE);","lastModifiedDate":"2019-08-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-12-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * Creates a new HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-12-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public HelpWindow() {","lastModifiedDate":"2017-12-01"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        this(new Stage());","lastModifiedDate":"2017-12-01"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-01"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-01"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Shows the help window.","lastModifiedDate":"2017-08-16"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * @throws IllegalStateException","lastModifiedDate":"2017-08-16"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * \u003cul\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     *     \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     *         if this method is called on a thread other than the JavaFX Application Thread.","lastModifiedDate":"2017-08-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     *     \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     *     \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     *         if this method is called during animation or layout processing.","lastModifiedDate":"2017-08-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     *     \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     *     \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     *         if this method is called on the primary stage.","lastModifiedDate":"2017-08-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     *     \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     *     \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     *         if {@code dialogStage} is already showing.","lastModifiedDate":"2017-08-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     *     \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * \u003c/ul\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void show() {","lastModifiedDate":"2016-08-18"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        logger.fine(\"Showing help page about the application.\");","lastModifiedDate":"2016-12-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        getRoot().show();","lastModifiedDate":"2018-02-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        getRoot().centerOnScreen();","lastModifiedDate":"2019-08-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-15"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * Returns true if the help window is currently being shown.","lastModifiedDate":"2018-03-15"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-15"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public boolean isShowing() {","lastModifiedDate":"2018-03-15"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        return getRoot().isShowing();","lastModifiedDate":"2018-03-15"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-15"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Hides the help window.","lastModifiedDate":"2018-12-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void hide() {","lastModifiedDate":"2018-12-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        getRoot().hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * Focuses on the help window.","lastModifiedDate":"2018-03-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public void focus() {","lastModifiedDate":"2018-03-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        getRoot().requestFocus();","lastModifiedDate":"2018-03-15"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-15"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-08-19"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2019-08-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * Copies the URL to the user guide to the clipboard.","lastModifiedDate":"2019-08-19"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2019-08-19"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2019-08-19"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    private void copyUrl() {","lastModifiedDate":"2019-08-19"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        final Clipboard clipboard \u003d Clipboard.getSystemClipboard();","lastModifiedDate":"2019-08-19"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        final ClipboardContent url \u003d new ClipboardContent();","lastModifiedDate":"2019-08-19"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        url.putString(USERGUIDE_URL);","lastModifiedDate":"2019-08-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        clipboard.setContent(url);","lastModifiedDate":"2019-08-19"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-08-19"},{"lineNumber":102,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"-":101,"Kangxun":1}},{"path":"src/main/java/seedu/address/ui/MainWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"idgrr"},"content":"import java.util.Optional;","lastModifiedDate":"2021-09-22"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-06-16"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":6,"author":{"gitId":"loose-bus-change"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-10-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.event.ActionEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-08-26"},{"lineNumber":9,"author":{"gitId":"idgrr"},"content":"import javafx.geometry.Rectangle2D;","lastModifiedDate":"2021-11-01"},{"lineNumber":10,"author":{"gitId":"idgrr"},"content":"import javafx.scene.control.Alert;","lastModifiedDate":"2021-09-22"},{"lineNumber":11,"author":{"gitId":"idgrr"},"content":"import javafx.scene.control.ButtonBar;","lastModifiedDate":"2021-09-22"},{"lineNumber":12,"author":{"gitId":"idgrr"},"content":"import javafx.scene.control.ButtonType;","lastModifiedDate":"2021-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import javafx.scene.control.MenuItem;","lastModifiedDate":"2016-08-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextInputControl;","lastModifiedDate":"2016-12-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyCombination;","lastModifiedDate":"2016-08-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import javafx.scene.layout.StackPane;","lastModifiedDate":"2017-05-09"},{"lineNumber":18,"author":{"gitId":"idgrr"},"content":"import javafx.stage.Screen;","lastModifiedDate":"2021-11-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2016-09-28"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2017-06-16"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.Logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2018-12-09"},{"lineNumber":25,"author":{"gitId":"Kangxun"},"content":"import seedu.address.logic.comparators.exceptions.ComparatorException;","lastModifiedDate":"2021-10-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-12-09"},{"lineNumber":27,"author":{"gitId":"loose-bus-change"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2021-10-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":30,"author":{"gitId":"-"},"content":" * The Main Window. Provides the basic application layout containing","lastModifiedDate":"2016-08-18"},{"lineNumber":31,"author":{"gitId":"-"},"content":" * a menu bar and space where other JavaFX elements can be placed.","lastModifiedDate":"2016-08-18"},{"lineNumber":32,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":33,"author":{"gitId":"-"},"content":"public class MainWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-11-29"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"MainWindow.fxml\";","lastModifiedDate":"2016-08-18"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(getClass());","lastModifiedDate":"2018-08-14"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private Stage primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":42,"author":{"gitId":"houtenteo"},"content":"    private double windowWidth;","lastModifiedDate":"2021-10-18"},{"lineNumber":43,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    // Independent Ui parts residing in this Ui container","lastModifiedDate":"2016-08-18"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    private PersonListPanel personListPanel;","lastModifiedDate":"2016-08-18"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    private ResultDisplay resultDisplay;","lastModifiedDate":"2018-12-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    private HelpWindow helpWindow;","lastModifiedDate":"2018-03-15"},{"lineNumber":48,"author":{"gitId":"houtenteo"},"content":"    private FullPersonCard fullPersonCard;","lastModifiedDate":"2021-10-18"},{"lineNumber":49,"author":{"gitId":"idgrr"},"content":"    private String importStatus;","lastModifiedDate":"2021-09-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    private StackPane commandBoxPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    private MenuItem helpMenuItem;","lastModifiedDate":"2016-08-18"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    private StackPane personListPanelPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    private StackPane resultDisplayPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    private StackPane statusbarPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":66,"author":{"gitId":"houtenteo"},"content":"    @FXML","lastModifiedDate":"2021-10-18"},{"lineNumber":67,"author":{"gitId":"houtenteo"},"content":"    private StackPane fullPersonCardPlaceholder;","lastModifiedDate":"2021-10-18"},{"lineNumber":68,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * Creates a {@code MainWindow} with the given {@code Stage} and {@code Logic}.","lastModifiedDate":"2020-05-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public MainWindow(Stage primaryStage, Logic logic) {","lastModifiedDate":"2018-12-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        super(FXML, primaryStage);","lastModifiedDate":"2017-11-29"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        // Set dependencies","lastModifiedDate":"2016-09-21"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        this.primaryStage \u003d primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        // Configure the UI","lastModifiedDate":"2016-09-21"},{"lineNumber":80,"author":{"gitId":"idgrr"},"content":"        setWindowDefaultSize();","lastModifiedDate":"2021-11-01"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        setAccelerators();","lastModifiedDate":"2016-09-21"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        helpWindow \u003d new HelpWindow();","lastModifiedDate":"2018-03-15"},{"lineNumber":85,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":86,"author":{"gitId":"idgrr"},"content":"        this.windowWidth \u003d this.primaryStage.getWidth();","lastModifiedDate":"2021-11-01"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    public Stage getPrimaryStage() {","lastModifiedDate":"2016-12-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        return primaryStage;","lastModifiedDate":"2016-12-24"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    private void setAccelerators() {","lastModifiedDate":"2016-09-21"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        setAccelerator(helpMenuItem, KeyCombination.valueOf(\"F1\"));","lastModifiedDate":"2016-12-18"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-18"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     * Sets the accelerator of a MenuItem.","lastModifiedDate":"2016-12-18"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     * @param keyCombination the KeyCombination value of the accelerator","lastModifiedDate":"2016-12-18"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-18"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    private void setAccelerator(MenuItem menuItem, KeyCombination keyCombination) {","lastModifiedDate":"2016-12-18"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        menuItem.setAccelerator(keyCombination);","lastModifiedDate":"2016-12-18"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-12-18"},{"lineNumber":105,"author":{"gitId":"-"},"content":"         * TODO: the code below can be removed once the bug reported here","lastModifiedDate":"2016-12-18"},{"lineNumber":106,"author":{"gitId":"-"},"content":"         * https://bugs.openjdk.java.net/browse/JDK-8131666","lastModifiedDate":"2016-12-18"},{"lineNumber":107,"author":{"gitId":"-"},"content":"         * is fixed in later version of SDK.","lastModifiedDate":"2016-12-18"},{"lineNumber":108,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":109,"author":{"gitId":"-"},"content":"         * According to the bug report, TextInputControl (TextField, TextArea) will","lastModifiedDate":"2016-12-18"},{"lineNumber":110,"author":{"gitId":"-"},"content":"         * consume function-key events. Because CommandBox contains a TextField, and","lastModifiedDate":"2016-12-18"},{"lineNumber":111,"author":{"gitId":"-"},"content":"         * ResultDisplay contains a TextArea, thus some accelerators (e.g F1) will","lastModifiedDate":"2016-12-18"},{"lineNumber":112,"author":{"gitId":"-"},"content":"         * not work when the focus is in them because the key event is consumed by","lastModifiedDate":"2016-12-18"},{"lineNumber":113,"author":{"gitId":"-"},"content":"         * the TextInputControl(s).","lastModifiedDate":"2016-12-18"},{"lineNumber":114,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":115,"author":{"gitId":"-"},"content":"         * For now, we add following event filter to capture such key events and open","lastModifiedDate":"2016-12-18"},{"lineNumber":116,"author":{"gitId":"-"},"content":"         * help window purposely so to support accelerators even when focus is","lastModifiedDate":"2016-12-18"},{"lineNumber":117,"author":{"gitId":"-"},"content":"         * in CommandBox or ResultDisplay.","lastModifiedDate":"2016-12-18"},{"lineNumber":118,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-18"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        getRoot().addEventFilter(KeyEvent.KEY_PRESSED, event -\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":120,"author":{"gitId":"-"},"content":"            if (event.getTarget() instanceof TextInputControl \u0026\u0026 keyCombination.match(event)) {","lastModifiedDate":"2016-12-18"},{"lineNumber":121,"author":{"gitId":"-"},"content":"                menuItem.getOnAction().handle(new ActionEvent());","lastModifiedDate":"2016-12-18"},{"lineNumber":122,"author":{"gitId":"-"},"content":"                event.consume();","lastModifiedDate":"2016-12-18"},{"lineNumber":123,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-12-18"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        });","lastModifiedDate":"2016-12-18"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":128,"author":{"gitId":"-"},"content":"     * Fills up all the placeholders of this window.","lastModifiedDate":"2017-08-16"},{"lineNumber":129,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":130,"author":{"gitId":"loose-bus-change"},"content":"    public void fillInnerParts() {","lastModifiedDate":"2021-10-21"},{"lineNumber":131,"author":{"gitId":"Kangxun"},"content":"        personListPanel \u003d new PersonListPanel(logic.getOriginalPersonList(), this.windowWidth);","lastModifiedDate":"2021-10-25"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        personListPanelPlaceholder.getChildren().add(personListPanel.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        resultDisplay \u003d new ResultDisplay();","lastModifiedDate":"2018-12-09"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        resultDisplayPlaceholder.getChildren().add(resultDisplay.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        StatusBarFooter statusBarFooter \u003d new StatusBarFooter(logic.getAddressBookFilePath());","lastModifiedDate":"2019-01-25"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        statusbarPlaceholder.getChildren().add(statusBarFooter.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        CommandBox commandBox \u003d new CommandBox(this::executeCommand);","lastModifiedDate":"2019-01-25"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        commandBoxPlaceholder.getChildren().add(commandBox.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":142,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":143,"author":{"gitId":"houtenteo"},"content":"        //Displays first person in the list by default","lastModifiedDate":"2021-10-18"},{"lineNumber":144,"author":{"gitId":"loose-bus-change"},"content":"        fullPersonCard \u003d new FullPersonCard(this.logic.getFilteredPersonList(), this.windowWidth);","lastModifiedDate":"2021-10-21"},{"lineNumber":145,"author":{"gitId":"loose-bus-change"},"content":"        fullPersonCardPlaceholder.getChildren().add(fullPersonCard.getRoot());","lastModifiedDate":"2021-10-21"},{"lineNumber":146,"author":{"gitId":"loose-bus-change"},"content":"        resultDisplay.setFeedbackToUser(importStatus);","lastModifiedDate":"2021-10-21"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-10-21"},{"lineNumber":150,"author":{"gitId":"loose-bus-change"},"content":"     * Returns a list containing full details of persons stored in the address book.","lastModifiedDate":"2021-10-21"},{"lineNumber":151,"author":{"gitId":"loose-bus-change"},"content":"     * @return An ObservableList of people stored in the address book.","lastModifiedDate":"2021-10-21"},{"lineNumber":152,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-10-21"},{"lineNumber":153,"author":{"gitId":"loose-bus-change"},"content":"    public ObservableList\u003cPerson\u003e getPersonList() {","lastModifiedDate":"2021-10-21"},{"lineNumber":154,"author":{"gitId":"loose-bus-change"},"content":"        return this.logic.getFilteredPersonList();","lastModifiedDate":"2021-10-21"},{"lineNumber":155,"author":{"gitId":"loose-bus-change"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":156,"author":{"gitId":"loose-bus-change"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":157,"author":{"gitId":"loose-bus-change"},"content":"    /**","lastModifiedDate":"2021-10-21"},{"lineNumber":158,"author":{"gitId":"loose-bus-change"},"content":"     * Updates the FullPersonCard window with the details of the person chosen for display","lastModifiedDate":"2021-10-21"},{"lineNumber":159,"author":{"gitId":"loose-bus-change"},"content":"     */","lastModifiedDate":"2021-10-21"},{"lineNumber":160,"author":{"gitId":"loose-bus-change"},"content":"    public void fillFullPersonCard() {","lastModifiedDate":"2021-10-22"},{"lineNumber":161,"author":{"gitId":"loose-bus-change"},"content":"        fullPersonCardPlaceholder.getChildren().remove(fullPersonCard.getRoot());","lastModifiedDate":"2021-10-21"},{"lineNumber":162,"author":{"gitId":"loose-bus-change"},"content":"        fullPersonCard \u003d new FullPersonCard(getPersonList(), this.windowWidth);","lastModifiedDate":"2021-10-22"},{"lineNumber":163,"author":{"gitId":"houtenteo"},"content":"        fullPersonCardPlaceholder.getChildren().add(fullPersonCard.getRoot());","lastModifiedDate":"2021-10-18"},{"lineNumber":164,"author":{"gitId":"idgrr"},"content":"        resultDisplay.setFeedbackToUser(importStatus);","lastModifiedDate":"2021-09-25"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":168,"author":{"gitId":"idgrr"},"content":"     * Sets the default size to full screen","lastModifiedDate":"2021-11-01"},{"lineNumber":169,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":170,"author":{"gitId":"idgrr"},"content":"    private void setWindowDefaultSize() {","lastModifiedDate":"2021-11-01"},{"lineNumber":171,"author":{"gitId":"idgrr"},"content":"        Rectangle2D primaryScreenBounds \u003d Screen.getPrimary().getVisualBounds();","lastModifiedDate":"2021-11-01"},{"lineNumber":172,"author":{"gitId":"idgrr"},"content":"        primaryStage.setHeight(primaryScreenBounds.getHeight());","lastModifiedDate":"2021-11-01"},{"lineNumber":173,"author":{"gitId":"idgrr"},"content":"        primaryStage.setWidth(primaryScreenBounds.getWidth());","lastModifiedDate":"2021-11-01"},{"lineNumber":174,"author":{"gitId":"idgrr"},"content":"        primaryStage.setMaximized(true);","lastModifiedDate":"2021-11-01"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":178,"author":{"gitId":"-"},"content":"     * Opens the help window or focuses on it if it\u0027s already opened.","lastModifiedDate":"2018-03-15"},{"lineNumber":179,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    public void handleHelp() {","lastModifiedDate":"2016-08-31"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        if (!helpWindow.isShowing()) {","lastModifiedDate":"2018-03-15"},{"lineNumber":183,"author":{"gitId":"-"},"content":"            helpWindow.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        } else {","lastModifiedDate":"2018-03-15"},{"lineNumber":185,"author":{"gitId":"-"},"content":"            helpWindow.focus();","lastModifiedDate":"2018-03-15"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-03-15"},{"lineNumber":187,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":189,"author":{"gitId":"idgrr"},"content":"    /**","lastModifiedDate":"2021-09-25"},{"lineNumber":190,"author":{"gitId":"idgrr"},"content":"     * Runs popupwindow to get import settings and showing of primary stage","lastModifiedDate":"2021-09-25"},{"lineNumber":191,"author":{"gitId":"idgrr"},"content":"     *","lastModifiedDate":"2021-09-25"},{"lineNumber":192,"author":{"gitId":"idgrr"},"content":"     */","lastModifiedDate":"2021-09-25"},{"lineNumber":193,"author":{"gitId":"-"},"content":"    void show() {","lastModifiedDate":"2016-10-15"},{"lineNumber":194,"author":{"gitId":"idgrr"},"content":"        importStatus \u003d importCsvUserPrompt();","lastModifiedDate":"2021-09-29"},{"lineNumber":195,"author":{"gitId":"-"},"content":"        primaryStage.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":196,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":198,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":199,"author":{"gitId":"-"},"content":"     * Closes the application.","lastModifiedDate":"2016-08-18"},{"lineNumber":200,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":201,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":202,"author":{"gitId":"-"},"content":"    private void handleExit() {","lastModifiedDate":"2016-08-18"},{"lineNumber":203,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(primaryStage.getWidth(), primaryStage.getHeight(),","lastModifiedDate":"2018-12-08"},{"lineNumber":204,"author":{"gitId":"-"},"content":"                (int) primaryStage.getX(), (int) primaryStage.getY());","lastModifiedDate":"2018-12-08"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        logic.setGuiSettings(guiSettings);","lastModifiedDate":"2018-12-08"},{"lineNumber":206,"author":{"gitId":"idgrr"},"content":"        exportCsvUserPrompt();","lastModifiedDate":"2021-10-10"},{"lineNumber":207,"author":{"gitId":"-"},"content":"        helpWindow.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":208,"author":{"gitId":"-"},"content":"        primaryStage.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-25"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    public PersonListPanel getPersonListPanel() {","lastModifiedDate":"2016-08-25"},{"lineNumber":212,"author":{"gitId":"-"},"content":"        return personListPanel;","lastModifiedDate":"2018-08-14"},{"lineNumber":213,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-25"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":215,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":216,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2018-12-09"},{"lineNumber":217,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-09"},{"lineNumber":218,"author":{"gitId":"houtenteo"},"content":"     * @see Logic#execute(String)","lastModifiedDate":"2021-10-18"},{"lineNumber":219,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":220,"author":{"gitId":"Kangxun"},"content":"    private CommandResult executeCommand(String commandText)","lastModifiedDate":"2021-10-25"},{"lineNumber":221,"author":{"gitId":"Kangxun"},"content":"            throws CommandException, ParseException, ComparatorException {","lastModifiedDate":"2021-10-25"},{"lineNumber":222,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":223,"author":{"gitId":"-"},"content":"            CommandResult commandResult \u003d logic.execute(commandText);","lastModifiedDate":"2018-12-09"},{"lineNumber":224,"author":{"gitId":"-"},"content":"            logger.info(\"Result: \" + commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":225,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":227,"author":{"gitId":"-"},"content":"            if (commandResult.isShowHelp()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":228,"author":{"gitId":"-"},"content":"                handleHelp();","lastModifiedDate":"2018-12-09"},{"lineNumber":229,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":230,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":231,"author":{"gitId":"-"},"content":"            if (commandResult.isExit()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":232,"author":{"gitId":"-"},"content":"                handleExit();","lastModifiedDate":"2018-12-09"},{"lineNumber":233,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":234,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":235,"author":{"gitId":"-"},"content":"            return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":236,"author":{"gitId":"Kangxun"},"content":"        } catch (CommandException | ParseException | ComparatorException e) {","lastModifiedDate":"2021-10-25"},{"lineNumber":237,"author":{"gitId":"-"},"content":"            logger.info(\"Invalid command: \" + commandText);","lastModifiedDate":"2018-12-09"},{"lineNumber":238,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(e.getMessage());","lastModifiedDate":"2018-12-09"},{"lineNumber":239,"author":{"gitId":"-"},"content":"            throw e;","lastModifiedDate":"2018-12-09"},{"lineNumber":240,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":241,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":242,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":243,"author":{"gitId":"idgrr"},"content":"    /**","lastModifiedDate":"2021-09-22"},{"lineNumber":244,"author":{"gitId":"idgrr"},"content":"     * getting the user setting for excel import","lastModifiedDate":"2021-09-25"},{"lineNumber":245,"author":{"gitId":"idgrr"},"content":"     *","lastModifiedDate":"2021-09-22"},{"lineNumber":246,"author":{"gitId":"idgrr"},"content":"     */","lastModifiedDate":"2021-09-22"},{"lineNumber":247,"author":{"gitId":"idgrr"},"content":"    private String importCsvUserPrompt() {","lastModifiedDate":"2021-09-29"},{"lineNumber":248,"author":{"gitId":"idgrr"},"content":"        Alert alert \u003d new Alert(Alert.AlertType.CONFIRMATION);","lastModifiedDate":"2021-09-22"},{"lineNumber":249,"author":{"gitId":"idgrr"},"content":"        alert.setHeaderText(\"Do you want to import contacts from csv?\");","lastModifiedDate":"2021-09-22"},{"lineNumber":250,"author":{"gitId":"idgrr"},"content":"        alert.setContentText(\"There are \" + logic.getFilteredPersonList().size() + \" people currently in the \"","lastModifiedDate":"2021-09-22"},{"lineNumber":251,"author":{"gitId":"idgrr"},"content":"                + \"addressbook\");","lastModifiedDate":"2021-09-22"},{"lineNumber":252,"author":{"gitId":"idgrr"},"content":"        ButtonType startNewUsingImport \u003d new ButtonType(\"Start New Using Import\", ButtonBar.ButtonData.NO);","lastModifiedDate":"2021-10-20"},{"lineNumber":253,"author":{"gitId":"idgrr"},"content":"        ButtonType addOnImports \u003d new ButtonType(\"Add on imports\", ButtonBar.ButtonData.YES);","lastModifiedDate":"2021-10-20"},{"lineNumber":254,"author":{"gitId":"idgrr"},"content":"        ButtonType dontImport \u003d new ButtonType(\"Don\u0027t  Import\", ButtonBar.ButtonData.CANCEL_CLOSE);","lastModifiedDate":"2021-10-20"},{"lineNumber":255,"author":{"gitId":"idgrr"},"content":"        alert.getButtonTypes().setAll(addOnImports, startNewUsingImport, dontImport);","lastModifiedDate":"2021-10-20"},{"lineNumber":256,"author":{"gitId":"idgrr"},"content":"        Optional\u003cButtonType\u003e result \u003d alert.showAndWait();","lastModifiedDate":"2021-09-22"},{"lineNumber":257,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":258,"author":{"gitId":"idgrr"},"content":"        if (result.get() \u003d\u003d addOnImports) {","lastModifiedDate":"2021-10-20"},{"lineNumber":259,"author":{"gitId":"idgrr"},"content":"            return logic.importData();","lastModifiedDate":"2021-10-20"},{"lineNumber":260,"author":{"gitId":"idgrr"},"content":"        } else if (result.get() \u003d\u003d startNewUsingImport) {","lastModifiedDate":"2021-10-20"},{"lineNumber":261,"author":{"gitId":"idgrr"},"content":"            logic.exportResetData();","lastModifiedDate":"2021-10-20"},{"lineNumber":262,"author":{"gitId":"idgrr"},"content":"            return logic.importData();","lastModifiedDate":"2021-09-25"},{"lineNumber":263,"author":{"gitId":"idgrr"},"content":"        }","lastModifiedDate":"2021-09-22"},{"lineNumber":264,"author":{"gitId":"idgrr"},"content":"        return \"No additional import\";","lastModifiedDate":"2021-09-25"},{"lineNumber":265,"author":{"gitId":"idgrr"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":266,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":267,"author":{"gitId":"idgrr"},"content":"    /**","lastModifiedDate":"2021-10-10"},{"lineNumber":268,"author":{"gitId":"idgrr"},"content":"     * getting the user setting for excel import","lastModifiedDate":"2021-10-10"},{"lineNumber":269,"author":{"gitId":"idgrr"},"content":"     *","lastModifiedDate":"2021-10-10"},{"lineNumber":270,"author":{"gitId":"idgrr"},"content":"     */","lastModifiedDate":"2021-10-10"},{"lineNumber":271,"author":{"gitId":"idgrr"},"content":"    private String exportCsvUserPrompt() {","lastModifiedDate":"2021-10-10"},{"lineNumber":272,"author":{"gitId":"idgrr"},"content":"        Alert alert \u003d new Alert(Alert.AlertType.CONFIRMATION);","lastModifiedDate":"2021-10-10"},{"lineNumber":273,"author":{"gitId":"idgrr"},"content":"        alert.setHeaderText(\"Do you want to export contacts from csv?\");","lastModifiedDate":"2021-10-10"},{"lineNumber":274,"author":{"gitId":"Kangxun"},"content":"        alert.setContentText(\"There are \" + logic.getAddressBook().getPersonList().size() + \" people currently in the \"","lastModifiedDate":"2021-10-25"},{"lineNumber":275,"author":{"gitId":"idgrr"},"content":"                + \"addressbook\");","lastModifiedDate":"2021-10-10"},{"lineNumber":276,"author":{"gitId":"idgrr"},"content":"        ButtonType yesButton \u003d new ButtonType(\"Export\", ButtonBar.ButtonData.YES);","lastModifiedDate":"2021-10-10"},{"lineNumber":277,"author":{"gitId":"idgrr"},"content":"        ButtonType noButton \u003d new ButtonType(\"Don\u0027t export\", ButtonBar.ButtonData.NO);","lastModifiedDate":"2021-10-10"},{"lineNumber":278,"author":{"gitId":"idgrr"},"content":"        alert.getButtonTypes().setAll(yesButton, noButton);","lastModifiedDate":"2021-10-10"},{"lineNumber":279,"author":{"gitId":"idgrr"},"content":"        Optional\u003cButtonType\u003e result \u003d alert.showAndWait();","lastModifiedDate":"2021-10-10"},{"lineNumber":280,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":281,"author":{"gitId":"idgrr"},"content":"        if (result.get() \u003d\u003d yesButton) {","lastModifiedDate":"2021-10-10"},{"lineNumber":282,"author":{"gitId":"idgrr"},"content":"            return logic.exportData();","lastModifiedDate":"2021-10-10"},{"lineNumber":283,"author":{"gitId":"idgrr"},"content":"        }","lastModifiedDate":"2021-10-10"},{"lineNumber":284,"author":{"gitId":"idgrr"},"content":"        return \"Exiting application\";","lastModifiedDate":"2021-10-10"},{"lineNumber":285,"author":{"gitId":"idgrr"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":286,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":287,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"houtenteo":10,"idgrr":67,"loose-bus-change":18,"-":186,"Kangxun":6}},{"path":"src/main/java/seedu/address/ui/PersonCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-09-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2016-09-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.scene.layout.FlowPane;","lastModifiedDate":"2016-12-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2016-09-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * An UI component that displays information of a {@code Person}.","lastModifiedDate":"2017-08-16"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class PersonCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"PersonListCard.fxml\";","lastModifiedDate":"2016-09-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX.","lastModifiedDate":"2017-03-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","lastModifiedDate":"2017-03-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2017-03-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe issue on AddressBook level 4\u003c/a\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public final Person person;","lastModifiedDate":"2018-01-10"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private HBox cardPane;","lastModifiedDate":"2016-09-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private Label name;","lastModifiedDate":"2016-09-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private Label id;","lastModifiedDate":"2016-09-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private Label phone;","lastModifiedDate":"2016-09-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private Label address;","lastModifiedDate":"2016-09-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private Label email;","lastModifiedDate":"2016-09-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private FlowPane tags;","lastModifiedDate":"2016-12-18"},{"lineNumber":41,"author":{"gitId":"houtenteo"},"content":"    @FXML","lastModifiedDate":"2021-09-21"},{"lineNumber":42,"author":{"gitId":"pranav-ganesh"},"content":"    private Label isCalled;","lastModifiedDate":"2021-11-04"},{"lineNumber":43,"author":{"gitId":"houtenteo"},"content":"    @FXML","lastModifiedDate":"2021-10-01"},{"lineNumber":44,"author":{"gitId":"pranav-ganesh"},"content":"    private Label calledMarker;","lastModifiedDate":"2021-11-04"},{"lineNumber":45,"author":{"gitId":"Kangxun"},"content":"    @FXML","lastModifiedDate":"2021-10-24"},{"lineNumber":46,"author":{"gitId":"Kangxun"},"content":"    private Label gender;","lastModifiedDate":"2021-10-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * Creates a {@code PersonCode} with the given {@code Person} and index to display.","lastModifiedDate":"2020-05-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public PersonCard(Person person, int displayedIndex) {","lastModifiedDate":"2018-01-10"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        this.person \u003d person;","lastModifiedDate":"2017-07-12"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        id.setText(displayedIndex + \". \");","lastModifiedDate":"2016-09-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        name.setText(person.getName().fullName);","lastModifiedDate":"2017-12-20"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        phone.setText(person.getPhone().value);","lastModifiedDate":"2017-12-20"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        email.setText(person.getEmail().value);","lastModifiedDate":"2017-12-20"},{"lineNumber":58,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":59,"author":{"gitId":"pranav-ganesh"},"content":"        if (person.getIsCalled().value) {","lastModifiedDate":"2021-11-04"},{"lineNumber":60,"author":{"gitId":"pranav-ganesh"},"content":"            isCalled.setText(\"Called: True\");","lastModifiedDate":"2021-11-04"},{"lineNumber":61,"author":{"gitId":"pranav-ganesh"},"content":"            calledMarker.setText(\"✔\");","lastModifiedDate":"2021-11-04"},{"lineNumber":62,"author":{"gitId":"pranav-ganesh"},"content":"            calledMarker.setStyle(\"-fx-text-fill: springgreen\");","lastModifiedDate":"2021-11-04"},{"lineNumber":63,"author":{"gitId":"houtenteo"},"content":"        } else {","lastModifiedDate":"2021-09-21"},{"lineNumber":64,"author":{"gitId":"pranav-ganesh"},"content":"            isCalled.setText(\"Called: False\");","lastModifiedDate":"2021-11-04"},{"lineNumber":65,"author":{"gitId":"pranav-ganesh"},"content":"            calledMarker.setText(\"❌\");","lastModifiedDate":"2021-11-04"},{"lineNumber":66,"author":{"gitId":"pranav-ganesh"},"content":"            calledMarker.setStyle(\"-fx-text-fill: red\");","lastModifiedDate":"2021-11-04"},{"lineNumber":67,"author":{"gitId":"houtenteo"},"content":"        }","lastModifiedDate":"2021-09-21"},{"lineNumber":68,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":69,"author":{"gitId":"Kangxun"},"content":"        if (person.getGender().value.equals(\"M\")) {","lastModifiedDate":"2021-10-24"},{"lineNumber":70,"author":{"gitId":"Kangxun"},"content":"            gender.setText(\"♂\");","lastModifiedDate":"2021-10-24"},{"lineNumber":71,"author":{"gitId":"Kangxun"},"content":"            gender.setStyle(\"-fx-text-fill: lightblue\");","lastModifiedDate":"2021-10-24"},{"lineNumber":72,"author":{"gitId":"Kangxun"},"content":"        } else if (person.getGender().value.equals(\"F\")) {","lastModifiedDate":"2021-10-24"},{"lineNumber":73,"author":{"gitId":"Kangxun"},"content":"            gender.setText(\"♀\");","lastModifiedDate":"2021-10-24"},{"lineNumber":74,"author":{"gitId":"Kangxun"},"content":"            gender.setStyle(\"-fx-text-fill: pink\");","lastModifiedDate":"2021-10-24"},{"lineNumber":75,"author":{"gitId":"Kangxun"},"content":"        } else {","lastModifiedDate":"2021-10-24"},{"lineNumber":76,"author":{"gitId":"Kangxun"},"content":"            gender.setText(\"\");","lastModifiedDate":"2021-10-24"},{"lineNumber":77,"author":{"gitId":"Kangxun"},"content":"        }","lastModifiedDate":"2021-10-24"},{"lineNumber":78,"author":{"gitId":"Kangxun"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-07-14"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-07-14"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-07-14"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2017-07-14"},{"lineNumber":85,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-07-14"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-07-14"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-07-14"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        if (!(other instanceof PersonCard)) {","lastModifiedDate":"2017-07-14"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-07-14"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-07-14"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-07-14"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        PersonCard card \u003d (PersonCard) other;","lastModifiedDate":"2017-07-14"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        return id.getText().equals(card.id.getText())","lastModifiedDate":"2017-07-14"},{"lineNumber":96,"author":{"gitId":"-"},"content":"                \u0026\u0026 person.equals(card.person);","lastModifiedDate":"2017-07-14"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-14"},{"lineNumber":98,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"houtenteo":6,"pranav-ganesh":9,"-":71,"Kangxun":12}},{"path":"src/main/java/seedu/address/ui/PersonListPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-08-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-08-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.ListCell;","lastModifiedDate":"2016-09-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.control.ListView;","lastModifiedDate":"2016-08-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Panel containing the list of persons.","lastModifiedDate":"2016-09-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class PersonListPanel extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"PersonListPanel.fxml\";","lastModifiedDate":"2016-09-14"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(PersonListPanel.class);","lastModifiedDate":"2017-04-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private ListView\u003cPerson\u003e personListView;","lastModifiedDate":"2018-02-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Creates a {@code PersonListPanel} with the given {@code ObservableList}.","lastModifiedDate":"2020-05-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":26,"author":{"gitId":"houtenteo"},"content":"    public PersonListPanel(ObservableList\u003cPerson\u003e personList, double windowWidth) {","lastModifiedDate":"2021-10-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        personListView.setItems(personList);","lastModifiedDate":"2018-02-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        personListView.setCellFactory(listView -\u003e new PersonListViewCell());","lastModifiedDate":"2016-08-18"},{"lineNumber":30,"author":{"gitId":"houtenteo"},"content":"        personListView.setPrefWidth(windowWidth * 2 / 3);","lastModifiedDate":"2021-10-18"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Custom {@code ListCell} that displays the graphics of a {@code Person} using a {@code PersonCard}.","lastModifiedDate":"2018-02-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    class PersonListViewCell extends ListCell\u003cPerson\u003e {","lastModifiedDate":"2018-02-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        protected void updateItem(Person person, boolean empty) {","lastModifiedDate":"2018-02-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            super.updateItem(person, empty);","lastModifiedDate":"2016-09-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            if (empty || person \u003d\u003d null) {","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"                setGraphic(null);","lastModifiedDate":"2016-09-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"                setText(null);","lastModifiedDate":"2016-09-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            } else {","lastModifiedDate":"2016-09-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"                setGraphic(new PersonCard(person, getIndex() + 1).getRoot());","lastModifiedDate":"2018-02-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"houtenteo":2,"-":48}},{"path":"src/main/java/seedu/address/ui/StatusBarFooter.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2018-12-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * A ui for the status bar that is displayed at the footer of the application.","lastModifiedDate":"2016-09-28"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class StatusBarFooter extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-14"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"StatusBarFooter.fxml\";","lastModifiedDate":"2017-04-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-12-10"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private Label saveLocationStatus;","lastModifiedDate":"2018-12-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Creates a {@code StatusBarFooter} with the given {@code Path}.","lastModifiedDate":"2020-05-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public StatusBarFooter(Path saveLocation) {","lastModifiedDate":"2019-01-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2017-04-01"},{"lineNumber":25,"author":{"gitId":"idgrr"},"content":"        saveLocationStatus.setText(\"Saved Location : \" + Paths.get(\".\").resolve(saveLocation).toString());","lastModifiedDate":"2021-09-29"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-01"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"idgrr":1,"-":27}},{"path":"src/main/java/seedu/address/ui/UiManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.application.Platform;","lastModifiedDate":"2016-08-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Alert;","lastModifiedDate":"2016-08-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Alert.AlertType;","lastModifiedDate":"2016-08-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2016-08-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.MainApp;","lastModifiedDate":"2016-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.Logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * The manager of the UI component.","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class UiManager implements Ui {","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String ALERT_DIALOG_PANE_FIELD_ID \u003d \"alertDialogPane\";","lastModifiedDate":"2017-04-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(UiManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final String ICON_APPLICATION \u003d \"/images/address_book_32.png\";","lastModifiedDate":"2016-08-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":25,"author":{"gitId":"loose-bus-change"},"content":"    private static Logic logic;","lastModifiedDate":"2021-10-21"},{"lineNumber":26,"author":{"gitId":"loose-bus-change"},"content":"    private static MainWindow mainWindow;","lastModifiedDate":"2021-10-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Creates a {@code UiManager} with the given {@code Logic}.","lastModifiedDate":"2020-05-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public UiManager(Logic logic) {","lastModifiedDate":"2018-12-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        super();","lastModifiedDate":"2016-08-18"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void start(Stage primaryStage) {","lastModifiedDate":"2016-09-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        logger.info(\"Starting UI...\");","lastModifiedDate":"2016-09-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        //Set the application icon.","lastModifiedDate":"2016-08-18"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        primaryStage.getIcons().add(getImage(ICON_APPLICATION));","lastModifiedDate":"2016-08-18"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-08-18"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            mainWindow \u003d new MainWindow(primaryStage, logic);","lastModifiedDate":"2018-12-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            mainWindow.show(); //This should be called before creating other UI parts","lastModifiedDate":"2016-08-18"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            mainWindow.fillInnerParts();","lastModifiedDate":"2016-08-18"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        } catch (Throwable e) {","lastModifiedDate":"2016-08-18"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            logger.severe(StringUtil.getDetails(e));","lastModifiedDate":"2016-09-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            showFatalErrorDialogAndShutdown(\"Fatal error during initializing\", e);","lastModifiedDate":"2016-08-18"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-18"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":54,"author":{"gitId":"loose-bus-change"},"content":"    /**","lastModifiedDate":"2021-10-21"},{"lineNumber":55,"author":{"gitId":"loose-bus-change"},"content":"     * Displays the full person card (additional details) of the chosen person if the MainWindow is","lastModifiedDate":"2021-10-21"},{"lineNumber":56,"author":{"gitId":"loose-bus-change"},"content":"     * initialised.","lastModifiedDate":"2021-11-08"},{"lineNumber":57,"author":{"gitId":"loose-bus-change"},"content":"     */","lastModifiedDate":"2021-10-21"},{"lineNumber":58,"author":{"gitId":"loose-bus-change"},"content":"    public static void displayFunction() {","lastModifiedDate":"2021-10-21"},{"lineNumber":59,"author":{"gitId":"loose-bus-change"},"content":"        if (mainWindow !\u003d null) {","lastModifiedDate":"2021-10-21"},{"lineNumber":60,"author":{"gitId":"loose-bus-change"},"content":"            mainWindow.fillFullPersonCard();","lastModifiedDate":"2021-10-22"},{"lineNumber":61,"author":{"gitId":"loose-bus-change"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":62,"author":{"gitId":"loose-bus-change"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":63,"author":{"gitId":"loose-bus-change"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    private Image getImage(String imagePath) {","lastModifiedDate":"2016-08-18"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        return new Image(MainApp.class.getResourceAsStream(imagePath));","lastModifiedDate":"2016-08-18"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    void showAlertDialogAndWait(Alert.AlertType type, String title, String headerText, String contentText) {","lastModifiedDate":"2021-10-18"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        showAlertDialogAndWait(mainWindow.getPrimaryStage(), type, title, headerText, contentText);","lastModifiedDate":"2016-08-18"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * Shows an alert dialog on {@code owner} with the given parameters.","lastModifiedDate":"2017-08-16"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * This method only returns after the user has closed the alert dialog.","lastModifiedDate":"2017-08-16"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    private static void showAlertDialogAndWait(Stage owner, AlertType type, String title, String headerText,","lastModifiedDate":"2016-09-21"},{"lineNumber":77,"author":{"gitId":"-"},"content":"                                               String contentText) {","lastModifiedDate":"2016-08-18"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        final Alert alert \u003d new Alert(type);","lastModifiedDate":"2016-08-18"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        alert.getDialogPane().getStylesheets().add(\"view/DarkTheme.css\");","lastModifiedDate":"2016-08-20"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        alert.initOwner(owner);","lastModifiedDate":"2016-08-18"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        alert.setTitle(title);","lastModifiedDate":"2016-08-18"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        alert.setHeaderText(headerText);","lastModifiedDate":"2016-08-18"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        alert.setContentText(contentText);","lastModifiedDate":"2016-08-18"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        alert.getDialogPane().setId(ALERT_DIALOG_PANE_FIELD_ID);","lastModifiedDate":"2016-10-12"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        alert.showAndWait();","lastModifiedDate":"2016-08-18"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     * Shows an error alert dialog with {@code title} and error message, {@code e},","lastModifiedDate":"2017-08-16"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     * and exits the application after the user has closed the alert dialog.","lastModifiedDate":"2017-08-16"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    private void showFatalErrorDialogAndShutdown(String title, Throwable e) {","lastModifiedDate":"2016-09-21"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        logger.severe(title + \" \" + e.getMessage() + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-21"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        showAlertDialogAndWait(Alert.AlertType.ERROR, title, e.getMessage(), e.toString());","lastModifiedDate":"2021-10-18"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        Platform.exit();","lastModifiedDate":"2016-08-18"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        System.exit(1);","lastModifiedDate":"2016-08-18"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-25"},{"lineNumber":99,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"loose-bus-change":12,"-":87}},{"path":"src/main/resources/view/DarkTheme.css","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":".background {","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    background-color: #383838; /* Used in the default.html file */","lastModifiedDate":"2017-03-02"},{"lineNumber":4,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":".label {","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Open Sans Semibold\";","lastModifiedDate":"2021-08-28"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    -fx-text-fill: #555555;","lastModifiedDate":"2016-08-15"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.9;","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":".label-bright {","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Open Sans Semibold\";","lastModifiedDate":"2021-08-28"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":".label-header {","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    -fx-font-size: 32pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Open Sans Light\";","lastModifiedDate":"2021-08-28"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":".text-field {","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    -fx-font-size: 12pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Open Sans Semibold\";","lastModifiedDate":"2021-08-28"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":".tab-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":".tab-pane .tab-header-area {","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    -fx-min-height: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    -fx-max-height: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":".table-view {","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    -fx-base: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    -fx-control-inner-background: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    -fx-table-cell-border-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    -fx-table-header-border-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    -fx-padding: 5;","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":".table-view .column-header-background {","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":".table-view .column-header, .table-view .filler {","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    -fx-size: 35;","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    -fx-border-width: 0 0 1 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    -fx-border-color:","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        transparent","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        transparent","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        derive(-fx-base, 80%)","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    -fx-border-insets: 0 10 1 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":".table-view .column-header .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    -fx-font-size: 20pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Open Sans Light\";","lastModifiedDate":"2021-08-28"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    -fx-alignment: center-left;","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":".table-view:focused .table-row-cell:filled:focused:selected {","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    -fx-background-color: -fx-focus-color;","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":".split-pane:horizontal .split-pane-divider {","lastModifiedDate":"2016-08-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2017-03-02"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    -fx-border-color: transparent transparent transparent #4d4d4d;","lastModifiedDate":"2017-03-02"},{"lineNumber":82,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":84,"author":{"gitId":"-"},"content":".split-pane {","lastModifiedDate":"2016-08-15"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    -fx-border-radius: 1;","lastModifiedDate":"2016-08-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2016-08-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":".list-view {","lastModifiedDate":"2017-03-02"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    -fx-padding: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2018-01-10"},{"lineNumber":94,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":96,"author":{"gitId":"-"},"content":".list-cell {","lastModifiedDate":"2016-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    -fx-label-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    -fx-graphic-text-gap : 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":".list-cell:filled:even {","lastModifiedDate":"2017-03-02"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    -fx-background-color: #3c3e3f;","lastModifiedDate":"2017-03-02"},{"lineNumber":104,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":106,"author":{"gitId":"-"},"content":".list-cell:filled:odd {","lastModifiedDate":"2017-03-02"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    -fx-background-color: #515658;","lastModifiedDate":"2017-03-02"},{"lineNumber":108,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":110,"author":{"gitId":"-"},"content":".list-cell:filled:selected {","lastModifiedDate":"2017-03-02"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    -fx-background-color: #424d5f;","lastModifiedDate":"2017-03-02"},{"lineNumber":112,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":114,"author":{"gitId":"-"},"content":".list-cell:filled:selected #cardPane {","lastModifiedDate":"2017-03-02"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    -fx-border-color: #3e7b91;","lastModifiedDate":"2017-03-02"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2017-03-02"},{"lineNumber":117,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":119,"author":{"gitId":"-"},"content":".list-cell .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2017-03-02"},{"lineNumber":121,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":".cell_big_label {","lastModifiedDate":"2016-08-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Open Sans Semibold\";","lastModifiedDate":"2021-08-28"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    -fx-font-size: 16px;","lastModifiedDate":"2016-08-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    -fx-text-fill: #010504;","lastModifiedDate":"2016-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":".cell_small_label {","lastModifiedDate":"2016-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Open Sans Regular\";","lastModifiedDate":"2021-08-28"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    -fx-font-size: 13px;","lastModifiedDate":"2017-03-02"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    -fx-text-fill: #010504;","lastModifiedDate":"2016-08-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":".stack-pane {","lastModifiedDate":"2018-04-01"},{"lineNumber":136,"author":{"gitId":"-"},"content":"     -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":137,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":".pane-with-border {","lastModifiedDate":"2017-05-15"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2017-05-09"},{"lineNumber":141,"author":{"gitId":"-"},"content":"     -fx-border-color: derive(#1d1d1d, 10%);","lastModifiedDate":"2017-05-09"},{"lineNumber":142,"author":{"gitId":"-"},"content":"     -fx-border-top-width: 1px;","lastModifiedDate":"2017-05-09"},{"lineNumber":143,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-09"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":145,"author":{"gitId":"-"},"content":".status-bar {","lastModifiedDate":"2016-08-08"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2018-12-08"},{"lineNumber":147,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":149,"author":{"gitId":"-"},"content":".result-display {","lastModifiedDate":"2016-09-14"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2017-03-02"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Open Sans Light\";","lastModifiedDate":"2021-08-28"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    -fx-font-size: 13pt;","lastModifiedDate":"2017-03-02"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2017-03-02"},{"lineNumber":154,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":156,"author":{"gitId":"-"},"content":".result-display .label {","lastModifiedDate":"2016-09-14"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    -fx-text-fill: black !important;","lastModifiedDate":"2016-09-14"},{"lineNumber":158,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":160,"author":{"gitId":"-"},"content":".status-bar .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Open Sans Light\";","lastModifiedDate":"2021-08-28"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    -fx-padding: 4px;","lastModifiedDate":"2018-12-08"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    -fx-pref-height: 30px;","lastModifiedDate":"2018-12-08"},{"lineNumber":165,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":167,"author":{"gitId":"-"},"content":".status-bar-with-border {","lastModifiedDate":"2016-08-08"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    -fx-border-color: derive(#1d1d1d, 25%);","lastModifiedDate":"2016-08-15"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    -fx-border-width: 1px;","lastModifiedDate":"2016-08-08"},{"lineNumber":171,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":173,"author":{"gitId":"-"},"content":".status-bar-with-border .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":175,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":177,"author":{"gitId":"-"},"content":".grid-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    -fx-border-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    -fx-border-width: 1px;","lastModifiedDate":"2016-08-08"},{"lineNumber":181,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":183,"author":{"gitId":"-"},"content":".grid-pane .stack-pane {","lastModifiedDate":"2018-04-01"},{"lineNumber":184,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":185,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":187,"author":{"gitId":"-"},"content":".context-menu {","lastModifiedDate":"2016-08-08"},{"lineNumber":188,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 50%);","lastModifiedDate":"2016-08-15"},{"lineNumber":189,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":191,"author":{"gitId":"-"},"content":".context-menu .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":192,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":193,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":195,"author":{"gitId":"-"},"content":".menu-bar {","lastModifiedDate":"2016-08-08"},{"lineNumber":196,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":197,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":198,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":199,"author":{"gitId":"-"},"content":".menu-bar .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":200,"author":{"gitId":"-"},"content":"    -fx-font-size: 14pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":201,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Open Sans Light\";","lastModifiedDate":"2021-08-28"},{"lineNumber":202,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.9;","lastModifiedDate":"2016-08-08"},{"lineNumber":204,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":206,"author":{"gitId":"-"},"content":".menu .left-container {","lastModifiedDate":"2016-08-08"},{"lineNumber":207,"author":{"gitId":"-"},"content":"    -fx-background-color: black;","lastModifiedDate":"2016-08-08"},{"lineNumber":208,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":210,"author":{"gitId":"-"},"content":"/*","lastModifiedDate":"2016-08-08"},{"lineNumber":211,"author":{"gitId":"-"},"content":" * Metro style Push Button","lastModifiedDate":"2016-08-08"},{"lineNumber":212,"author":{"gitId":"-"},"content":" * Author: Pedro Duque Vieira","lastModifiedDate":"2016-08-08"},{"lineNumber":213,"author":{"gitId":"-"},"content":" * http://pixelduke.wordpress.com/2012/10/23/jmetro-windows-8-controls-on-java/","lastModifiedDate":"2016-08-08"},{"lineNumber":214,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":215,"author":{"gitId":"-"},"content":".button {","lastModifiedDate":"2016-08-08"},{"lineNumber":216,"author":{"gitId":"-"},"content":"    -fx-padding: 5 22 5 22;","lastModifiedDate":"2016-08-08"},{"lineNumber":217,"author":{"gitId":"-"},"content":"    -fx-border-color: #e2e2e2;","lastModifiedDate":"2016-08-08"},{"lineNumber":218,"author":{"gitId":"-"},"content":"    -fx-border-width: 2;","lastModifiedDate":"2016-08-08"},{"lineNumber":219,"author":{"gitId":"-"},"content":"    -fx-background-radius: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":220,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":221,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Open Sans Regular\";","lastModifiedDate":"2021-08-28"},{"lineNumber":222,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":223,"author":{"gitId":"-"},"content":"    -fx-text-fill: #d8d8d8;","lastModifiedDate":"2016-08-08"},{"lineNumber":224,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0 0 0 0, 0, 1, 2;","lastModifiedDate":"2016-08-08"},{"lineNumber":225,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":227,"author":{"gitId":"-"},"content":".button:hover {","lastModifiedDate":"2016-08-08"},{"lineNumber":228,"author":{"gitId":"-"},"content":"    -fx-background-color: #3a3a3a;","lastModifiedDate":"2016-08-08"},{"lineNumber":229,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":230,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":231,"author":{"gitId":"-"},"content":".button:pressed, .button:default:hover:pressed {","lastModifiedDate":"2016-08-08"},{"lineNumber":232,"author":{"gitId":"-"},"content":"  -fx-background-color: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":233,"author":{"gitId":"-"},"content":"  -fx-text-fill: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":234,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":236,"author":{"gitId":"-"},"content":".button:focused {","lastModifiedDate":"2016-08-08"},{"lineNumber":237,"author":{"gitId":"-"},"content":"    -fx-border-color: white, white;","lastModifiedDate":"2016-08-08"},{"lineNumber":238,"author":{"gitId":"-"},"content":"    -fx-border-width: 1, 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":239,"author":{"gitId":"-"},"content":"    -fx-border-style: solid, segments(1, 1);","lastModifiedDate":"2016-08-08"},{"lineNumber":240,"author":{"gitId":"-"},"content":"    -fx-border-radius: 0, 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":241,"author":{"gitId":"-"},"content":"    -fx-border-insets: 1 1 1 1, 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":242,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":243,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":244,"author":{"gitId":"-"},"content":".button:disabled, .button:default:disabled {","lastModifiedDate":"2016-08-08"},{"lineNumber":245,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.4;","lastModifiedDate":"2016-08-08"},{"lineNumber":246,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":247,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":248,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":249,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":250,"author":{"gitId":"-"},"content":".button:default {","lastModifiedDate":"2016-08-08"},{"lineNumber":251,"author":{"gitId":"-"},"content":"    -fx-background-color: -fx-focus-color;","lastModifiedDate":"2016-08-08"},{"lineNumber":252,"author":{"gitId":"-"},"content":"    -fx-text-fill: #ffffff;","lastModifiedDate":"2016-08-08"},{"lineNumber":253,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":254,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":255,"author":{"gitId":"-"},"content":".button:default:hover {","lastModifiedDate":"2016-08-08"},{"lineNumber":256,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(-fx-focus-color, 30%);","lastModifiedDate":"2016-08-08"},{"lineNumber":257,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":258,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":259,"author":{"gitId":"-"},"content":".dialog-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":260,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":261,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":262,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":263,"author":{"gitId":"-"},"content":".dialog-pane \u003e *.button-bar \u003e *.container {","lastModifiedDate":"2016-08-08"},{"lineNumber":264,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":265,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":266,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":267,"author":{"gitId":"-"},"content":".dialog-pane \u003e *.label.content {","lastModifiedDate":"2016-08-08"},{"lineNumber":268,"author":{"gitId":"-"},"content":"    -fx-font-size: 14px;","lastModifiedDate":"2016-08-08"},{"lineNumber":269,"author":{"gitId":"-"},"content":"    -fx-font-weight: bold;","lastModifiedDate":"2016-08-08"},{"lineNumber":270,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":271,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":272,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":273,"author":{"gitId":"-"},"content":".dialog-pane:header *.header-panel {","lastModifiedDate":"2016-08-08"},{"lineNumber":274,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 25%);","lastModifiedDate":"2016-08-15"},{"lineNumber":275,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":276,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":277,"author":{"gitId":"-"},"content":".dialog-pane:header *.header-panel *.label {","lastModifiedDate":"2016-08-08"},{"lineNumber":278,"author":{"gitId":"-"},"content":"    -fx-font-size: 18px;","lastModifiedDate":"2016-08-08"},{"lineNumber":279,"author":{"gitId":"-"},"content":"    -fx-font-style: italic;","lastModifiedDate":"2016-08-08"},{"lineNumber":280,"author":{"gitId":"-"},"content":"    -fx-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":281,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":282,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":283,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":284,"author":{"gitId":"-"},"content":".scroll-bar {","lastModifiedDate":"2017-03-02"},{"lineNumber":285,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2017-03-02"},{"lineNumber":286,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":287,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":288,"author":{"gitId":"-"},"content":".scroll-bar .thumb {","lastModifiedDate":"2016-08-15"},{"lineNumber":289,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 50%);","lastModifiedDate":"2016-08-15"},{"lineNumber":290,"author":{"gitId":"-"},"content":"    -fx-background-insets: 3;","lastModifiedDate":"2016-08-15"},{"lineNumber":291,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":292,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":293,"author":{"gitId":"-"},"content":".scroll-bar .increment-button, .scroll-bar .decrement-button {","lastModifiedDate":"2016-08-15"},{"lineNumber":294,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-15"},{"lineNumber":295,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-15"},{"lineNumber":296,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":297,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":298,"author":{"gitId":"-"},"content":".scroll-bar .increment-arrow, .scroll-bar .decrement-arrow {","lastModifiedDate":"2016-08-15"},{"lineNumber":299,"author":{"gitId":"-"},"content":"    -fx-shape: \" \";","lastModifiedDate":"2016-08-15"},{"lineNumber":300,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"},{"lineNumber":301,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":302,"author":{"gitId":"-"},"content":".scroll-bar:vertical .increment-arrow, .scroll-bar:vertical .decrement-arrow {","lastModifiedDate":"2016-08-18"},{"lineNumber":303,"author":{"gitId":"-"},"content":"    -fx-padding: 1 8 1 8;","lastModifiedDate":"2016-08-15"},{"lineNumber":304,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":305,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":306,"author":{"gitId":"-"},"content":".scroll-bar:horizontal .increment-arrow, .scroll-bar:horizontal .decrement-arrow {","lastModifiedDate":"2016-08-18"},{"lineNumber":307,"author":{"gitId":"-"},"content":"    -fx-padding: 8 1 8 1;","lastModifiedDate":"2016-08-18"},{"lineNumber":308,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"},{"lineNumber":309,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":310,"author":{"gitId":"houtenteo"},"content":".scroll-pane {","lastModifiedDate":"2021-10-18"},{"lineNumber":311,"author":{"gitId":"houtenteo"},"content":"   -fx-background-color:transparent;","lastModifiedDate":"2021-10-18"},{"lineNumber":312,"author":{"gitId":"houtenteo"},"content":"}","lastModifiedDate":"2021-10-18"},{"lineNumber":313,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":314,"author":{"gitId":"houtenteo"},"content":".scroll-pane .viewport {","lastModifiedDate":"2021-10-18"},{"lineNumber":315,"author":{"gitId":"houtenteo"},"content":"       -fx-background-color: transparent;","lastModifiedDate":"2021-10-18"},{"lineNumber":316,"author":{"gitId":"houtenteo"},"content":"}","lastModifiedDate":"2021-10-18"},{"lineNumber":317,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":318,"author":{"gitId":"-"},"content":"#cardPane {","lastModifiedDate":"2016-08-08"},{"lineNumber":319,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":320,"author":{"gitId":"-"},"content":"    -fx-border-width: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":321,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":322,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":323,"author":{"gitId":"-"},"content":"#commandTypeLabel {","lastModifiedDate":"2016-08-08"},{"lineNumber":324,"author":{"gitId":"-"},"content":"    -fx-font-size: 11px;","lastModifiedDate":"2016-08-08"},{"lineNumber":325,"author":{"gitId":"-"},"content":"    -fx-text-fill: #F70D1A;","lastModifiedDate":"2016-08-08"},{"lineNumber":326,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":327,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":328,"author":{"gitId":"-"},"content":"#commandTextField {","lastModifiedDate":"2017-03-02"},{"lineNumber":329,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent #383838 transparent #383838;","lastModifiedDate":"2017-03-02"},{"lineNumber":330,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":331,"author":{"gitId":"-"},"content":"    -fx-border-color: #383838 #383838 #ffffff #383838;","lastModifiedDate":"2017-03-02"},{"lineNumber":332,"author":{"gitId":"-"},"content":"    -fx-border-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":333,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2017-03-02"},{"lineNumber":334,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Open Sans Light\";","lastModifiedDate":"2021-08-28"},{"lineNumber":335,"author":{"gitId":"-"},"content":"    -fx-font-size: 13pt;","lastModifiedDate":"2017-03-02"},{"lineNumber":336,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2017-03-02"},{"lineNumber":337,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":338,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":339,"author":{"gitId":"-"},"content":"#filterField, #personListPanel, #personWebpage {","lastModifiedDate":"2016-08-15"},{"lineNumber":340,"author":{"gitId":"-"},"content":"    -fx-effect: innershadow(gaussian, black, 10, 0, 0, 0);","lastModifiedDate":"2016-08-15"},{"lineNumber":341,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":342,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":343,"author":{"gitId":"-"},"content":"#resultDisplay .content {","lastModifiedDate":"2017-03-02"},{"lineNumber":344,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent, #383838, transparent, #383838;","lastModifiedDate":"2017-03-02"},{"lineNumber":345,"author":{"gitId":"-"},"content":"    -fx-background-radius: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":346,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":347,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":348,"author":{"gitId":"-"},"content":"#tags {","lastModifiedDate":"2016-12-18"},{"lineNumber":349,"author":{"gitId":"-"},"content":"    -fx-hgap: 7;","lastModifiedDate":"2016-12-18"},{"lineNumber":350,"author":{"gitId":"-"},"content":"    -fx-vgap: 3;","lastModifiedDate":"2016-12-18"},{"lineNumber":351,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-18"},{"lineNumber":352,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":353,"author":{"gitId":"-"},"content":"#tags .label {","lastModifiedDate":"2016-12-18"},{"lineNumber":354,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-12-18"},{"lineNumber":355,"author":{"gitId":"-"},"content":"    -fx-background-color: #3e7b91;","lastModifiedDate":"2017-03-02"},{"lineNumber":356,"author":{"gitId":"-"},"content":"    -fx-padding: 1 3 1 3;","lastModifiedDate":"2016-12-18"},{"lineNumber":357,"author":{"gitId":"-"},"content":"    -fx-border-radius: 2;","lastModifiedDate":"2016-12-18"},{"lineNumber":358,"author":{"gitId":"-"},"content":"    -fx-background-radius: 2;","lastModifiedDate":"2016-12-18"},{"lineNumber":359,"author":{"gitId":"-"},"content":"    -fx-font-size: 11;","lastModifiedDate":"2016-12-18"},{"lineNumber":360,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-18"},{"lineNumber":361,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":362,"author":{"gitId":"houtenteo"},"content":"#fullPersonDetails {","lastModifiedDate":"2021-10-18"},{"lineNumber":363,"author":{"gitId":"houtenteo"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2021-10-18"},{"lineNumber":364,"author":{"gitId":"houtenteo"},"content":"    -fx-border-width: 3 3 3 3;","lastModifiedDate":"2021-10-18"},{"lineNumber":365,"author":{"gitId":"houtenteo"},"content":"    -fx-border-color: white;","lastModifiedDate":"2021-10-18"},{"lineNumber":366,"author":{"gitId":"houtenteo"},"content":"}","lastModifiedDate":"2021-10-18"},{"lineNumber":367,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":368,"author":{"gitId":"houtenteo"},"content":"#id, #name, #phoneHeader, #emailHeader, #calledHeader,","lastModifiedDate":"2021-10-18"},{"lineNumber":369,"author":{"gitId":"houtenteo"},"content":"#addressHeader, #genderHeader, #ageHeader, #interestHeader {","lastModifiedDate":"2021-10-18"},{"lineNumber":370,"author":{"gitId":"houtenteo"},"content":"    -fx-font-size: 20;","lastModifiedDate":"2021-10-18"},{"lineNumber":371,"author":{"gitId":"houtenteo"},"content":"    -fx-font-family: \"Open Sans Semibold\";","lastModifiedDate":"2021-10-18"},{"lineNumber":372,"author":{"gitId":"houtenteo"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2021-10-18"},{"lineNumber":373,"author":{"gitId":"houtenteo"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2021-10-18"},{"lineNumber":374,"author":{"gitId":"houtenteo"},"content":"}","lastModifiedDate":"2021-10-18"},{"lineNumber":375,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":376,"author":{"gitId":"houtenteo"},"content":"#phone, #email, #address, #gender, #age, #interests {","lastModifiedDate":"2021-10-18"},{"lineNumber":377,"author":{"gitId":"houtenteo"},"content":"    -fx-font-size: 15;","lastModifiedDate":"2021-10-18"},{"lineNumber":378,"author":{"gitId":"houtenteo"},"content":"    -fx-font-family: \"Open Sans Semibold\";","lastModifiedDate":"2021-10-18"},{"lineNumber":379,"author":{"gitId":"houtenteo"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2021-10-18"},{"lineNumber":380,"author":{"gitId":"houtenteo"},"content":"}","lastModifiedDate":"2021-10-18"},{"lineNumber":381,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":382,"author":{"gitId":"houtenteo"},"content":"#isCalled {","lastModifiedDate":"2021-11-05"},{"lineNumber":383,"author":{"gitId":"houtenteo"},"content":"   -fx-font-size: 15;","lastModifiedDate":"2021-10-18"},{"lineNumber":384,"author":{"gitId":"houtenteo"},"content":"   -fx-font-family: \"Open Sans Semibold\";","lastModifiedDate":"2021-10-18"},{"lineNumber":385,"author":{"gitId":"houtenteo"},"content":"   -fx-text-fill: white;","lastModifiedDate":"2021-10-18"},{"lineNumber":386,"author":{"gitId":"houtenteo"},"content":"}","lastModifiedDate":"2021-10-18"}],"authorContributionMap":{"houtenteo":34,"-":352}},{"path":"src/main/resources/view/FullPersonCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"houtenteo"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-10-18"},{"lineNumber":2,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":3,"author":{"gitId":"houtenteo"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2021-10-18"},{"lineNumber":4,"author":{"gitId":"houtenteo"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2021-10-18"},{"lineNumber":5,"author":{"gitId":"houtenteo"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2021-10-18"},{"lineNumber":6,"author":{"gitId":"houtenteo"},"content":"\u003c?import javafx.scene.layout.FlowPane?\u003e","lastModifiedDate":"2021-10-18"},{"lineNumber":7,"author":{"gitId":"houtenteo"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2021-10-18"},{"lineNumber":8,"author":{"gitId":"houtenteo"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2021-10-18"},{"lineNumber":9,"author":{"gitId":"houtenteo"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2021-10-18"},{"lineNumber":10,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":11,"author":{"gitId":"idgrr"},"content":"\u003cScrollPane fx:id\u003d\"fullPersonDetails\" minWidth\u003d\"200.0\" prefHeight\u003d\"100000.0\" prefWidth\u003d\"200.0\" xmlns\u003d\"http://javafx.com/javafx/16\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-11-01"},{"lineNumber":12,"author":{"gitId":"houtenteo"},"content":"   \u003ccontent\u003e","lastModifiedDate":"2021-10-18"},{"lineNumber":13,"author":{"gitId":"idgrr"},"content":"      \u003cVBox fx:id\u003d\"fullPersonContainer\" alignment\u003d\"CENTER_LEFT\" minWidth\u003d\"200.0\" VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2021-11-01"},{"lineNumber":14,"author":{"gitId":"houtenteo"},"content":"         \u003cpadding\u003e","lastModifiedDate":"2021-10-18"},{"lineNumber":15,"author":{"gitId":"houtenteo"},"content":"            \u003cInsets bottom\u003d\"5\" left\u003d\"15\" right\u003d\"5\" top\u003d\"5\" /\u003e","lastModifiedDate":"2021-10-18"},{"lineNumber":16,"author":{"gitId":"houtenteo"},"content":"         \u003c/padding\u003e","lastModifiedDate":"2021-10-18"},{"lineNumber":17,"author":{"gitId":"houtenteo"},"content":"         \u003cchildren\u003e","lastModifiedDate":"2021-10-18"},{"lineNumber":18,"author":{"gitId":"houtenteo"},"content":"            \u003cHBox alignment\u003d\"CENTER_LEFT\" spacing\u003d\"5\"\u003e","lastModifiedDate":"2021-10-18"},{"lineNumber":19,"author":{"gitId":"houtenteo"},"content":"               \u003cVBox.margin\u003e","lastModifiedDate":"2021-10-18"},{"lineNumber":20,"author":{"gitId":"houtenteo"},"content":"                  \u003cInsets bottom\u003d\"10.0\" top\u003d\"20.0\" /\u003e","lastModifiedDate":"2021-10-18"},{"lineNumber":21,"author":{"gitId":"houtenteo"},"content":"               \u003c/VBox.margin\u003e","lastModifiedDate":"2021-10-18"},{"lineNumber":22,"author":{"gitId":"houtenteo"},"content":"               \u003cchildren\u003e","lastModifiedDate":"2021-10-18"},{"lineNumber":23,"author":{"gitId":"houtenteo"},"content":"                  \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"cell_big_label\"\u003e","lastModifiedDate":"2021-10-18"},{"lineNumber":24,"author":{"gitId":"houtenteo"},"content":"                     \u003cminWidth\u003e","lastModifiedDate":"2021-10-18"},{"lineNumber":25,"author":{"gitId":"houtenteo"},"content":"                        \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2021-10-18"},{"lineNumber":26,"author":{"gitId":"houtenteo"},"content":"                     \u003c/minWidth\u003e","lastModifiedDate":"2021-10-18"},{"lineNumber":27,"author":{"gitId":"houtenteo"},"content":"                  \u003c/Label\u003e","lastModifiedDate":"2021-10-18"},{"lineNumber":28,"author":{"gitId":"houtenteo"},"content":"                  \u003cLabel fx:id\u003d\"name\" styleClass\u003d\"cell_big_label\" text\u003d\"\\$first\" wrapText\u003d\"true\" /\u003e","lastModifiedDate":"2021-10-18"},{"lineNumber":29,"author":{"gitId":"houtenteo"},"content":"               \u003c/children\u003e","lastModifiedDate":"2021-10-18"},{"lineNumber":30,"author":{"gitId":"houtenteo"},"content":"            \u003c/HBox\u003e","lastModifiedDate":"2021-10-18"},{"lineNumber":31,"author":{"gitId":"houtenteo"},"content":"            \u003cFlowPane fx:id\u003d\"tags\" /\u003e","lastModifiedDate":"2021-10-18"},{"lineNumber":32,"author":{"gitId":"houtenteo"},"content":"            \u003cLabel fx:id\u003d\"phoneHeader\" text\u003d\"Phone:\" /\u003e","lastModifiedDate":"2021-10-18"},{"lineNumber":33,"author":{"gitId":"houtenteo"},"content":"            \u003cLabel fx:id\u003d\"phone\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$phone\" wrapText\u003d\"true\"\u003e","lastModifiedDate":"2021-10-18"},{"lineNumber":34,"author":{"gitId":"houtenteo"},"content":"               \u003cVBox.margin\u003e","lastModifiedDate":"2021-10-18"},{"lineNumber":35,"author":{"gitId":"houtenteo"},"content":"                  \u003cInsets bottom\u003d\"10.0\" left\u003d\"20.0\" /\u003e","lastModifiedDate":"2021-10-18"},{"lineNumber":36,"author":{"gitId":"houtenteo"},"content":"               \u003c/VBox.margin\u003e","lastModifiedDate":"2021-10-18"},{"lineNumber":37,"author":{"gitId":"houtenteo"},"content":"            \u003c/Label\u003e","lastModifiedDate":"2021-10-18"},{"lineNumber":38,"author":{"gitId":"houtenteo"},"content":"            \u003cLabel fx:id\u003d\"emailHeader\" text\u003d\"Email:\" /\u003e","lastModifiedDate":"2021-10-18"},{"lineNumber":39,"author":{"gitId":"houtenteo"},"content":"            \u003cLabel fx:id\u003d\"email\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$email\" wrapText\u003d\"true\"\u003e","lastModifiedDate":"2021-10-18"},{"lineNumber":40,"author":{"gitId":"houtenteo"},"content":"               \u003cVBox.margin\u003e","lastModifiedDate":"2021-10-18"},{"lineNumber":41,"author":{"gitId":"houtenteo"},"content":"                  \u003cInsets bottom\u003d\"10.0\" left\u003d\"20.0\" /\u003e","lastModifiedDate":"2021-10-18"},{"lineNumber":42,"author":{"gitId":"houtenteo"},"content":"               \u003c/VBox.margin\u003e","lastModifiedDate":"2021-10-18"},{"lineNumber":43,"author":{"gitId":"houtenteo"},"content":"            \u003c/Label\u003e","lastModifiedDate":"2021-10-18"},{"lineNumber":44,"author":{"gitId":"houtenteo"},"content":"            \u003cLabel fx:id\u003d\"calledHeader\" text\u003d\"Called:\" /\u003e","lastModifiedDate":"2021-10-18"},{"lineNumber":45,"author":{"gitId":"pranav-ganesh"},"content":"            \u003cLabel fx:id\u003d\"isCalled\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$isCalled\" wrapText\u003d\"true\"\u003e","lastModifiedDate":"2021-11-04"},{"lineNumber":46,"author":{"gitId":"houtenteo"},"content":"               \u003cVBox.margin\u003e","lastModifiedDate":"2021-10-18"},{"lineNumber":47,"author":{"gitId":"houtenteo"},"content":"                  \u003cInsets bottom\u003d\"10.0\" left\u003d\"20.0\" /\u003e","lastModifiedDate":"2021-10-18"},{"lineNumber":48,"author":{"gitId":"houtenteo"},"content":"               \u003c/VBox.margin\u003e","lastModifiedDate":"2021-10-18"},{"lineNumber":49,"author":{"gitId":"houtenteo"},"content":"            \u003c/Label\u003e","lastModifiedDate":"2021-10-18"},{"lineNumber":50,"author":{"gitId":"houtenteo"},"content":"            \u003cLabel fx:id\u003d\"addressHeader\" text\u003d\"Address:\" /\u003e","lastModifiedDate":"2021-10-18"},{"lineNumber":51,"author":{"gitId":"houtenteo"},"content":"            \u003cLabel fx:id\u003d\"address\" text\u003d\"\\$address\" wrapText\u003d\"true\"\u003e","lastModifiedDate":"2021-10-18"},{"lineNumber":52,"author":{"gitId":"houtenteo"},"content":"               \u003cVBox.margin\u003e","lastModifiedDate":"2021-10-18"},{"lineNumber":53,"author":{"gitId":"houtenteo"},"content":"                  \u003cInsets bottom\u003d\"10.0\" left\u003d\"20.0\" /\u003e","lastModifiedDate":"2021-10-18"},{"lineNumber":54,"author":{"gitId":"houtenteo"},"content":"               \u003c/VBox.margin\u003e","lastModifiedDate":"2021-10-18"},{"lineNumber":55,"author":{"gitId":"houtenteo"},"content":"            \u003c/Label\u003e","lastModifiedDate":"2021-10-18"},{"lineNumber":56,"author":{"gitId":"houtenteo"},"content":"            \u003cLabel fx:id\u003d\"genderHeader\" text\u003d\"Gender:\" /\u003e","lastModifiedDate":"2021-10-18"},{"lineNumber":57,"author":{"gitId":"houtenteo"},"content":"            \u003cLabel fx:id\u003d\"gender\" text\u003d\"\\$gender\" wrapText\u003d\"true\"\u003e","lastModifiedDate":"2021-10-18"},{"lineNumber":58,"author":{"gitId":"houtenteo"},"content":"               \u003cVBox.margin\u003e","lastModifiedDate":"2021-10-18"},{"lineNumber":59,"author":{"gitId":"houtenteo"},"content":"                  \u003cInsets bottom\u003d\"10.0\" left\u003d\"20.0\" /\u003e","lastModifiedDate":"2021-10-18"},{"lineNumber":60,"author":{"gitId":"houtenteo"},"content":"               \u003c/VBox.margin\u003e","lastModifiedDate":"2021-10-18"},{"lineNumber":61,"author":{"gitId":"houtenteo"},"content":"            \u003c/Label\u003e","lastModifiedDate":"2021-10-18"},{"lineNumber":62,"author":{"gitId":"houtenteo"},"content":"            \u003cLabel fx:id\u003d\"ageHeader\" text\u003d\"Age:\" /\u003e","lastModifiedDate":"2021-10-18"},{"lineNumber":63,"author":{"gitId":"houtenteo"},"content":"            \u003cLabel fx:id\u003d\"age\" text\u003d\"\\$age\" wrapText\u003d\"true\"\u003e","lastModifiedDate":"2021-10-18"},{"lineNumber":64,"author":{"gitId":"houtenteo"},"content":"               \u003cVBox.margin\u003e","lastModifiedDate":"2021-10-18"},{"lineNumber":65,"author":{"gitId":"houtenteo"},"content":"                  \u003cInsets bottom\u003d\"10.0\" left\u003d\"20.0\" /\u003e","lastModifiedDate":"2021-10-18"},{"lineNumber":66,"author":{"gitId":"houtenteo"},"content":"               \u003c/VBox.margin\u003e","lastModifiedDate":"2021-10-18"},{"lineNumber":67,"author":{"gitId":"houtenteo"},"content":"            \u003c/Label\u003e","lastModifiedDate":"2021-10-18"},{"lineNumber":68,"author":{"gitId":"houtenteo"},"content":"            \u003cLabel fx:id\u003d\"interestHeader\" text\u003d\"Interests:\" /\u003e","lastModifiedDate":"2021-10-18"},{"lineNumber":69,"author":{"gitId":"houtenteo"},"content":"            \u003cLabel fx:id\u003d\"interests\" text\u003d\"Interested in\" wrapText\u003d\"true\"\u003e","lastModifiedDate":"2021-10-18"},{"lineNumber":70,"author":{"gitId":"houtenteo"},"content":"               \u003cpadding\u003e","lastModifiedDate":"2021-10-18"},{"lineNumber":71,"author":{"gitId":"houtenteo"},"content":"                  \u003cInsets left\u003d\"20.0\" /\u003e","lastModifiedDate":"2021-10-18"},{"lineNumber":72,"author":{"gitId":"houtenteo"},"content":"               \u003c/padding\u003e","lastModifiedDate":"2021-10-18"},{"lineNumber":73,"author":{"gitId":"houtenteo"},"content":"               \u003cVBox.margin\u003e","lastModifiedDate":"2021-10-18"},{"lineNumber":74,"author":{"gitId":"houtenteo"},"content":"                  \u003cInsets /\u003e","lastModifiedDate":"2021-10-18"},{"lineNumber":75,"author":{"gitId":"houtenteo"},"content":"               \u003c/VBox.margin\u003e","lastModifiedDate":"2021-10-18"},{"lineNumber":76,"author":{"gitId":"houtenteo"},"content":"            \u003c/Label\u003e","lastModifiedDate":"2021-10-18"},{"lineNumber":77,"author":{"gitId":"houtenteo"},"content":"            \u003cLabel fx:id\u003d\"buffer\" /\u003e","lastModifiedDate":"2021-10-18"},{"lineNumber":78,"author":{"gitId":"houtenteo"},"content":"         \u003c/children\u003e","lastModifiedDate":"2021-10-18"},{"lineNumber":79,"author":{"gitId":"houtenteo"},"content":"      \u003c/VBox\u003e","lastModifiedDate":"2021-10-18"},{"lineNumber":80,"author":{"gitId":"houtenteo"},"content":"   \u003c/content\u003e","lastModifiedDate":"2021-10-18"},{"lineNumber":81,"author":{"gitId":"houtenteo"},"content":"\u003c/ScrollPane\u003e","lastModifiedDate":"2021-10-18"}],"authorContributionMap":{"houtenteo":78,"idgrr":2,"pranav-ganesh":1}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import java.net.URL?\u003e","lastModifiedDate":"2016-08-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.Scene?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Menu?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuBar?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuItem?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.image.Image?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":10,"author":{"gitId":"houtenteo"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2021-10-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":13,"author":{"gitId":"houtenteo"},"content":"\u003c?import javafx.stage.Stage?\u003e","lastModifiedDate":"2021-10-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":15,"author":{"gitId":"idgrr"},"content":"\u003cfx:root minHeight\u003d\"810\" minWidth\u003d\"725\" onCloseRequest\u003d\"#handleExit\" title\u003d\"Address App\" type\u003d\"javafx.stage.Stage\" xmlns\u003d\"http://javafx.com/javafx/11\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-11-02"},{"lineNumber":16,"author":{"gitId":"-"},"content":"  \u003cicons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    \u003cImage url\u003d\"@/images/address_book_32.png\" /\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":18,"author":{"gitId":"-"},"content":"  \u003c/icons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"  \u003cscene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    \u003cScene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"      \u003cstylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@Fonts.css\" /\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@DarkTheme.css\" /\u003e","lastModifiedDate":"2016-08-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@Extensions.css\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"      \u003c/stylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"      \u003cVBox\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        \u003cMenuBar fx:id\u003d\"menuBar\" VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2017-06-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"          \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"File\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            \u003cMenuItem mnemonicParsing\u003d\"false\" onAction\u003d\"#handleExit\" text\u003d\"Exit\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"          \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"          \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"Help\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            \u003cMenuItem fx:id\u003d\"helpMenuItem\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleHelp\" text\u003d\"Help\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"          \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        \u003c/MenuBar\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":37,"author":{"gitId":"houtenteo"},"content":"        \u003cStackPane fx:id\u003d\"commandBoxPlaceholder\" styleClass\u003d\"pane-with-border\" VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2021-10-18"},{"lineNumber":38,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":39,"author":{"gitId":"idgrr"},"content":"            \u003cInsets left\u003d\"10\" right\u003d\"10\" top\u003d\"5\" /\u003e","lastModifiedDate":"2021-11-02"},{"lineNumber":40,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        \u003c/StackPane\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":43,"author":{"gitId":"houtenteo"},"content":"        \u003cStackPane fx:id\u003d\"resultDisplayPlaceholder\" maxHeight\u003d\"100\" minHeight\u003d\"100\" prefHeight\u003d\"100\" styleClass\u003d\"pane-with-border\" VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2021-10-18"},{"lineNumber":44,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":45,"author":{"gitId":"idgrr"},"content":"            \u003cInsets bottom\u003d\"1\" left\u003d\"10\" right\u003d\"10\" top\u003d\"1\" /\u003e","lastModifiedDate":"2021-11-02"},{"lineNumber":46,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        \u003c/StackPane\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":49,"author":{"gitId":"houtenteo"},"content":"        \u003cVBox fx:id\u003d\"personList\" minWidth\u003d\"340\" prefWidth\u003d\"340\" styleClass\u003d\"pane-with-border\" VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2021-10-18"},{"lineNumber":50,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":51,"author":{"gitId":"houtenteo"},"content":"            \u003cInsets bottom\u003d\"10\" left\u003d\"10\" right\u003d\"10\" top\u003d\"10\" /\u003e","lastModifiedDate":"2021-10-18"},{"lineNumber":52,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":53,"author":{"gitId":"idgrr"},"content":"          \u003cHBox HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2021-11-01"},{"lineNumber":54,"author":{"gitId":"houtenteo"},"content":"            \u003cchildren\u003e","lastModifiedDate":"2021-10-18"},{"lineNumber":55,"author":{"gitId":"idgrr"},"content":"              \u003cStackPane fx:id\u003d\"personListPanelPlaceholder\" minWidth\u003d\"340\"/\u003e","lastModifiedDate":"2021-11-02"},{"lineNumber":56,"author":{"gitId":"idgrr"},"content":"              \u003cStackPane fx:id\u003d\"fullPersonCardPlaceholder\" minWidth\u003d\"340\"/\u003e","lastModifiedDate":"2021-11-02"},{"lineNumber":57,"author":{"gitId":"houtenteo"},"content":"            \u003c/children\u003e","lastModifiedDate":"2021-10-18"},{"lineNumber":58,"author":{"gitId":"houtenteo"},"content":"          \u003c/HBox\u003e","lastModifiedDate":"2021-10-18"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        \u003c/VBox\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        \u003cStackPane fx:id\u003d\"statusbarPlaceholder\" VBox.vgrow\u003d\"NEVER\" /\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":62,"author":{"gitId":"-"},"content":"      \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    \u003c/Scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":64,"author":{"gitId":"-"},"content":"  \u003c/scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":65,"author":{"gitId":"-"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2017-11-29"}],"authorContributionMap":{"houtenteo":9,"idgrr":6,"-":50}},{"path":"src/main/resources/view/PersonListCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.FlowPane?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":10,"author":{"gitId":"houtenteo"},"content":"\u003c?import javafx.scene.layout.RowConstraints?\u003e","lastModifiedDate":"2021-09-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":13,"author":{"gitId":"houtenteo"},"content":"\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx/11\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-09-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"  \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    \u003ccolumnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"      \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\" /\u003e","lastModifiedDate":"2017-03-28"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    \u003c/columnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    \u003cVBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"105\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2017-03-28"},{"lineNumber":19,"author":{"gitId":"-"},"content":"      \u003cpadding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"houtenteo"},"content":"        \u003cInsets bottom\u003d\"5\" left\u003d\"15\" right\u003d\"5\" top\u003d\"5\" /\u003e","lastModifiedDate":"2021-09-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"      \u003c/padding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"houtenteo"},"content":"      \u003cHBox alignment\u003d\"CENTER_LEFT\" spacing\u003d\"5\"\u003e","lastModifiedDate":"2021-09-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"cell_big_label\"\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"          \u003cminWidth\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"            \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"            \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"          \u003c/minWidth\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        \u003c/Label\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":29,"author":{"gitId":"houtenteo"},"content":"        \u003cLabel fx:id\u003d\"name\" styleClass\u003d\"cell_big_label\" text\u003d\"\\$first\" /\u003e","lastModifiedDate":"2021-09-21"},{"lineNumber":30,"author":{"gitId":"pranav-ganesh"},"content":"        \u003cLabel fx:id\u003d\"calledMarker\" text\u003d\"Label\" /\u003e","lastModifiedDate":"2021-11-04"},{"lineNumber":31,"author":{"gitId":"Kangxun"},"content":"        \u003cLabel fx:id\u003d\"gender\" text\u003d\"Label\" /\u003e","lastModifiedDate":"2021-10-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"      \u003c/HBox\u003e","lastModifiedDate":"2016-09-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"      \u003cFlowPane fx:id\u003d\"tags\" /\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":34,"author":{"gitId":"-"},"content":"      \u003cLabel fx:id\u003d\"phone\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$phone\" /\u003e","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"      \u003cLabel fx:id\u003d\"email\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$email\" /\u003e","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"pranav-ganesh"},"content":"      \u003cLabel fx:id\u003d\"isCalled\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$isCalled\" /\u003e","lastModifiedDate":"2021-11-04"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"houtenteo"},"content":"    \u003crowConstraints\u003e","lastModifiedDate":"2021-09-21"},{"lineNumber":39,"author":{"gitId":"houtenteo"},"content":"      \u003cRowConstraints /\u003e","lastModifiedDate":"2021-09-21"},{"lineNumber":40,"author":{"gitId":"houtenteo"},"content":"    \u003c/rowConstraints\u003e","lastModifiedDate":"2021-09-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"  \u003c/GridPane\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"houtenteo":8,"pranav-ganesh":2,"-":31,"Kangxun":1}},{"path":"src/test/java/seedu/address/commons/util/CsvUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"idgrr"},"content":"package seedu.address.commons.util;","lastModifiedDate":"2021-09-29"},{"lineNumber":2,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":3,"author":{"gitId":"idgrr"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-09-29"},{"lineNumber":4,"author":{"gitId":"houtenteo"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-18"},{"lineNumber":5,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":6,"author":{"gitId":"houtenteo"},"content":"import java.io.IOException;","lastModifiedDate":"2021-10-18"},{"lineNumber":7,"author":{"gitId":"idgrr"},"content":"import java.util.Optional;","lastModifiedDate":"2021-09-29"},{"lineNumber":8,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":9,"author":{"gitId":"idgrr"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-09-29"},{"lineNumber":10,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":11,"author":{"gitId":"idgrr"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2021-09-29"},{"lineNumber":12,"author":{"gitId":"idgrr"},"content":"import seedu.address.storage.CsvAdaptedPerson;","lastModifiedDate":"2021-10-19"},{"lineNumber":13,"author":{"gitId":"idgrr"},"content":"import seedu.address.testutil.TestUtil;","lastModifiedDate":"2021-09-29"},{"lineNumber":14,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":15,"author":{"gitId":"idgrr"},"content":"class CsvUtilTest {","lastModifiedDate":"2021-09-29"},{"lineNumber":16,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":17,"author":{"gitId":"idgrr"},"content":"    @Test","lastModifiedDate":"2021-09-29"},{"lineNumber":18,"author":{"gitId":"houtenteo"},"content":"    public void createPerson_invalidCsvString_emptyOptional() {","lastModifiedDate":"2021-10-18"},{"lineNumber":19,"author":{"gitId":"idgrr"},"content":"        String invalidCsvString \u003d \"Name;;;\";","lastModifiedDate":"2021-09-29"},{"lineNumber":20,"author":{"gitId":"idgrr"},"content":"        assertEquals(Optional.empty(), CsvUtil.createPerson(invalidCsvString, 0));","lastModifiedDate":"2021-09-29"},{"lineNumber":21,"author":{"gitId":"idgrr"},"content":"    }","lastModifiedDate":"2021-09-29"},{"lineNumber":22,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":23,"author":{"gitId":"idgrr"},"content":"    @Test","lastModifiedDate":"2021-09-29"},{"lineNumber":24,"author":{"gitId":"houtenteo"},"content":"    public void createPerson_rowMissingDelimiter_dataConversionExceptionThrown() {","lastModifiedDate":"2021-10-18"},{"lineNumber":25,"author":{"gitId":"houtenteo"},"content":"        String rowMissingDelimiter \u003d \"name1;123456789;email@email.comTrue\";","lastModifiedDate":"2021-10-18"},{"lineNumber":26,"author":{"gitId":"houtenteo"},"content":"        int rowNumber \u003d 0;","lastModifiedDate":"2021-10-18"},{"lineNumber":27,"author":{"gitId":"houtenteo"},"content":"        assertEquals(Optional.empty(), CsvUtil.createPerson(rowMissingDelimiter, rowNumber));","lastModifiedDate":"2021-10-18"},{"lineNumber":28,"author":{"gitId":"houtenteo"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":29,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":30,"author":{"gitId":"houtenteo"},"content":"    @Test","lastModifiedDate":"2021-10-18"},{"lineNumber":31,"author":{"gitId":"houtenteo"},"content":"    public void fromCsvString_mixOfValidAndInvalidPeople_peopleList() throws DataConversionException {","lastModifiedDate":"2021-10-18"},{"lineNumber":32,"author":{"gitId":"idgrr"},"content":"        String[] validHeader \u003d CsvAdaptedPerson.headerOrder();","lastModifiedDate":"2021-10-19"},{"lineNumber":33,"author":{"gitId":"idgrr"},"content":"        String header \u003d String.join(\";\", validHeader) + \"\\n\";","lastModifiedDate":"2021-10-19"},{"lineNumber":34,"author":{"gitId":"houtenteo"},"content":"        String validPerson \u003d \"name 3;98765432;email@email.com;;;;;TRUE\\n\";","lastModifiedDate":"2021-11-02"},{"lineNumber":35,"author":{"gitId":"idgrr"},"content":"        String invalidPerson \u003d \";123111222;;\\n\";","lastModifiedDate":"2021-09-29"},{"lineNumber":36,"author":{"gitId":"idgrr"},"content":"        String csvString \u003d header + validPerson + invalidPerson;","lastModifiedDate":"2021-09-29"},{"lineNumber":37,"author":{"gitId":"idgrr"},"content":"        assertEquals(1, CsvUtil.fromCsvString(csvString).size());","lastModifiedDate":"2021-09-29"},{"lineNumber":38,"author":{"gitId":"idgrr"},"content":"    }","lastModifiedDate":"2021-09-29"},{"lineNumber":39,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":40,"author":{"gitId":"idgrr"},"content":"    @Test","lastModifiedDate":"2021-09-29"},{"lineNumber":41,"author":{"gitId":"houtenteo"},"content":"    public void readCsvFile_invalidFilePath_emptyOptional() throws DataConversionException {","lastModifiedDate":"2021-10-18"},{"lineNumber":42,"author":{"gitId":"houtenteo"},"content":"        assertEquals(Optional.empty(),","lastModifiedDate":"2021-10-18"},{"lineNumber":43,"author":{"gitId":"houtenteo"},"content":"                CsvUtil.readCsvFile(TestUtil.getFilePathInSandboxFolder(\"doesNotExist.csv\")));","lastModifiedDate":"2021-10-18"},{"lineNumber":44,"author":{"gitId":"houtenteo"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":45,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":46,"author":{"gitId":"houtenteo"},"content":"    @Test","lastModifiedDate":"2021-10-18"},{"lineNumber":47,"author":{"gitId":"houtenteo"},"content":"    public void deserializeObjectFromCsvFile_wrongFile_ioException() {","lastModifiedDate":"2021-10-18"},{"lineNumber":48,"author":{"gitId":"houtenteo"},"content":"        assertThrows(IOException.class, () -\u003e","lastModifiedDate":"2021-10-18"},{"lineNumber":49,"author":{"gitId":"houtenteo"},"content":"            CsvUtil.deserializeObjectFromCsvFile(TestUtil.getFilePathInSandboxFolder(\"doesNotExist.csv\")));","lastModifiedDate":"2021-10-18"},{"lineNumber":50,"author":{"gitId":"houtenteo"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":51,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":52,"author":{"gitId":"houtenteo"},"content":"    @Test","lastModifiedDate":"2021-10-18"},{"lineNumber":53,"author":{"gitId":"houtenteo"},"content":"    public void checkValidHeader_wrongDelimiter_dataConversionExceptionThrown() {","lastModifiedDate":"2021-10-18"},{"lineNumber":54,"author":{"gitId":"idgrr"},"content":"        String[] validHeader \u003d CsvAdaptedPerson.headerOrder();","lastModifiedDate":"2021-10-19"},{"lineNumber":55,"author":{"gitId":"idgrr"},"content":"        String header \u003d String.join(\",\", validHeader) + \"\\n\";","lastModifiedDate":"2021-10-19"},{"lineNumber":56,"author":{"gitId":"houtenteo"},"content":"        assertThrows(DataConversionException.class, () -\u003e CsvUtil.checkValidHeader(header));","lastModifiedDate":"2021-10-18"},{"lineNumber":57,"author":{"gitId":"houtenteo"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":58,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":59,"author":{"gitId":"houtenteo"},"content":"    @Test","lastModifiedDate":"2021-10-18"},{"lineNumber":60,"author":{"gitId":"houtenteo"},"content":"    public void checkValidHeader_missingHeader_dataConversionExceptionThrown() {","lastModifiedDate":"2021-10-18"},{"lineNumber":61,"author":{"gitId":"houtenteo"},"content":"        String header \u003d \"Name;Phone;Email\";","lastModifiedDate":"2021-10-18"},{"lineNumber":62,"author":{"gitId":"houtenteo"},"content":"        assertThrows(DataConversionException.class, () -\u003e CsvUtil.checkValidHeader(header));","lastModifiedDate":"2021-10-18"},{"lineNumber":63,"author":{"gitId":"houtenteo"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":64,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":65,"author":{"gitId":"houtenteo"},"content":"    @Test","lastModifiedDate":"2021-10-18"},{"lineNumber":66,"author":{"gitId":"houtenteo"},"content":"    public void checkValidHeader_wrongHeader_dataConversionExceptionThrown() {","lastModifiedDate":"2021-10-18"},{"lineNumber":67,"author":{"gitId":"houtenteo"},"content":"        String header \u003d \"Name;Phone;Email;Called\";","lastModifiedDate":"2021-10-18"},{"lineNumber":68,"author":{"gitId":"houtenteo"},"content":"        assertThrows(DataConversionException.class, () -\u003e CsvUtil.checkValidHeader(header));","lastModifiedDate":"2021-10-18"},{"lineNumber":69,"author":{"gitId":"idgrr"},"content":"    }","lastModifiedDate":"2021-09-29"},{"lineNumber":70,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":71,"author":{"gitId":"idgrr"},"content":"}","lastModifiedDate":"2021-09-29"}],"authorContributionMap":{"houtenteo":38,"idgrr":33}},{"path":"src/test/java/seedu/address/logic/LogicManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2021-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-09-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX;","lastModifiedDate":"2021-09-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2021-09-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2021-09-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2021-09-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2021-09-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2021-09-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.AMY;","lastModifiedDate":"2021-09-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2021-09-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2021-09-21"},{"lineNumber":14,"author":{"gitId":"idgrr"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2021-10-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2021-09-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-09-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2021-09-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2021-09-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2021-09-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2021-09-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-09-21"},{"lineNumber":24,"author":{"gitId":"Kangxun"},"content":"import seedu.address.logic.comparators.exceptions.ComparatorException;","lastModifiedDate":"2021-10-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-09-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-09-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2021-09-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2021-09-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2021-09-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2021-09-21"},{"lineNumber":31,"author":{"gitId":"idgrr"},"content":"import seedu.address.storage.CsvAddressBookImportExport;","lastModifiedDate":"2021-09-29"},{"lineNumber":32,"author":{"gitId":"idgrr"},"content":"import seedu.address.storage.ImportExport;","lastModifiedDate":"2021-09-29"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonAddressBookStorage;","lastModifiedDate":"2021-09-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonUserPrefsStorage;","lastModifiedDate":"2021-09-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"import seedu.address.storage.StorageManager;","lastModifiedDate":"2021-09-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2021-09-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"public class LogicManagerTest {","lastModifiedDate":"2021-09-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private static final IOException DUMMY_IO_EXCEPTION \u003d new IOException(\"dummy exception\");","lastModifiedDate":"2021-09-21"},{"lineNumber":40,"author":{"gitId":"idgrr"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\");","lastModifiedDate":"2021-10-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2021-09-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public Path temporaryFolder;","lastModifiedDate":"2021-09-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2021-09-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2021-09-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2021-09-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2021-09-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d","lastModifiedDate":"2021-09-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"                new JsonAddressBookStorage(temporaryFolder.resolve(\"addressBook.json\"));","lastModifiedDate":"2021-09-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(temporaryFolder.resolve(\"userPrefs.json\"));","lastModifiedDate":"2021-09-21"},{"lineNumber":53,"author":{"gitId":"idgrr"},"content":"        ImportExport importExport \u003d new CsvAddressBookImportExport(","lastModifiedDate":"2021-10-24"},{"lineNumber":54,"author":{"gitId":"idgrr"},"content":"                temporaryFolder.resolve(\"importAddressBook.csv\"), TEST_DATA_FOLDER);","lastModifiedDate":"2021-10-24"},{"lineNumber":55,"author":{"gitId":"idgrr"},"content":"        StorageManager storage \u003d new StorageManager(addressBookStorage, userPrefsStorage, importExport);","lastModifiedDate":"2021-10-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2021-10-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-09-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void execute_invalidCommandFormat_throwsParseException() {","lastModifiedDate":"2021-09-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        String invalidCommand \u003d \"uicfhmowqewca\";","lastModifiedDate":"2021-09-21"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertParseException(invalidCommand, MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2021-09-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-09-21"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public void execute_commandExecutionError_throwsCommandException() {","lastModifiedDate":"2021-09-21"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        String deleteCommand \u003d \"delete 9\";","lastModifiedDate":"2021-09-21"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertCommandException(deleteCommand, MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2021-09-21"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-21"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-09-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public void execute_validCommand_success() throws Exception {","lastModifiedDate":"2021-09-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        String listCommand \u003d ListCommand.COMMAND_WORD;","lastModifiedDate":"2021-09-21"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertCommandSuccess(listCommand, ListCommand.MESSAGE_SUCCESS, model);","lastModifiedDate":"2021-09-21"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-21"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-09-21"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public void execute_storageThrowsIoException_throwsCommandException() {","lastModifiedDate":"2021-09-21"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        // Setup LogicManager with JsonAddressBookIoExceptionThrowingStub","lastModifiedDate":"2021-09-21"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d","lastModifiedDate":"2021-09-21"},{"lineNumber":81,"author":{"gitId":"-"},"content":"                new JsonAddressBookIoExceptionThrowingStub(temporaryFolder.resolve(\"ioExceptionAddressBook.json\"));","lastModifiedDate":"2021-09-21"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d","lastModifiedDate":"2021-09-21"},{"lineNumber":83,"author":{"gitId":"-"},"content":"                new JsonUserPrefsStorage(temporaryFolder.resolve(\"ioExceptionUserPrefs.json\"));","lastModifiedDate":"2021-09-21"},{"lineNumber":84,"author":{"gitId":"idgrr"},"content":"        ImportExport importExport \u003d new CsvAddressBookImportExport(temporaryFolder.resolve(\"importAddressBook.csv\"),","lastModifiedDate":"2021-10-24"},{"lineNumber":85,"author":{"gitId":"idgrr"},"content":"                temporaryFolder.resolve(\"data\"));","lastModifiedDate":"2021-10-24"},{"lineNumber":86,"author":{"gitId":"idgrr"},"content":"        StorageManager storage \u003d new StorageManager(addressBookStorage, userPrefsStorage, importExport);","lastModifiedDate":"2021-10-25"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2021-10-25"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        // Execute add command","lastModifiedDate":"2021-09-21"},{"lineNumber":90,"author":{"gitId":"loose-bus-change"},"content":"        String addCommand \u003d AddCommand.COMMAND_WORD + NAME_DESC_AMY + PHONE_DESC_AMY + EMAIL_DESC_AMY;","lastModifiedDate":"2021-09-25"},{"lineNumber":91,"author":{"gitId":"houtenteo"},"content":"        Person expectedPerson \u003d new PersonBuilder(AMY).build();","lastModifiedDate":"2021-09-22"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        ModelManager expectedModel \u003d new ModelManager();","lastModifiedDate":"2021-09-21"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        expectedModel.addPerson(expectedPerson);","lastModifiedDate":"2021-09-21"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d LogicManager.FILE_OPS_ERROR_MESSAGE + DUMMY_IO_EXCEPTION;","lastModifiedDate":"2021-09-21"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertCommandFailure(addCommand, CommandException.class, expectedMessage, expectedModel);","lastModifiedDate":"2021-09-21"},{"lineNumber":96,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-21"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-09-21"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    public void getFilteredPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2021-09-21"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e logic.getFilteredPersonList().remove(0));","lastModifiedDate":"2021-09-21"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-21"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-09-21"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2021-09-21"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     * - no exceptions are thrown \u003cbr\u003e","lastModifiedDate":"2021-09-21"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     * - the feedback message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2021-09-21"},{"lineNumber":108,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2021-09-21"},{"lineNumber":109,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2021-09-21"},{"lineNumber":110,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-09-21"},{"lineNumber":111,"author":{"gitId":"Kangxun"},"content":"    private void assertCommandSuccess(String inputCommand, String expectedMessage, Model expectedModel)","lastModifiedDate":"2021-10-25"},{"lineNumber":112,"author":{"gitId":"Kangxun"},"content":"            throws CommandException, ParseException, ComparatorException {","lastModifiedDate":"2021-10-25"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        CommandResult result \u003d logic.execute(inputCommand);","lastModifiedDate":"2021-09-21"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertEquals(expectedMessage, result.getFeedbackToUser());","lastModifiedDate":"2021-09-21"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2021-09-21"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-21"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-09-21"},{"lineNumber":119,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a ParseException is thrown and that the result message is correct.","lastModifiedDate":"2021-09-21"},{"lineNumber":120,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2021-09-21"},{"lineNumber":121,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-09-21"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    private void assertParseException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2021-09-21"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, ParseException.class, expectedMessage);","lastModifiedDate":"2021-09-21"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-21"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-09-21"},{"lineNumber":127,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a CommandException is thrown and that the result message is correct.","lastModifiedDate":"2021-09-21"},{"lineNumber":128,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2021-09-21"},{"lineNumber":129,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-09-21"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    private void assertCommandException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2021-09-21"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, CommandException.class, expectedMessage);","lastModifiedDate":"2021-09-21"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-21"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-09-21"},{"lineNumber":135,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that the exception is thrown and that the result message is correct.","lastModifiedDate":"2021-09-21"},{"lineNumber":136,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2021-09-21"},{"lineNumber":137,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-09-21"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2021-09-21"},{"lineNumber":139,"author":{"gitId":"houtenteo"},"content":"                                      String expectedMessage) {","lastModifiedDate":"2021-09-21"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2021-09-21"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, expectedException, expectedMessage, expectedModel);","lastModifiedDate":"2021-09-21"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-21"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-09-21"},{"lineNumber":145,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2021-09-21"},{"lineNumber":146,"author":{"gitId":"-"},"content":"     * - the {@code expectedException} is thrown \u003cbr\u003e","lastModifiedDate":"2021-09-21"},{"lineNumber":147,"author":{"gitId":"-"},"content":"     * - the resulting error message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2021-09-21"},{"lineNumber":148,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2021-09-21"},{"lineNumber":149,"author":{"gitId":"-"},"content":"     * @see #assertCommandSuccess(String, String, Model)","lastModifiedDate":"2021-09-21"},{"lineNumber":150,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-09-21"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2021-09-21"},{"lineNumber":152,"author":{"gitId":"houtenteo"},"content":"                                      String expectedMessage, Model expectedModel) {","lastModifiedDate":"2021-09-21"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        assertThrows(expectedException, expectedMessage, () -\u003e logic.execute(inputCommand));","lastModifiedDate":"2021-09-21"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2021-09-21"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-21"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-09-21"},{"lineNumber":158,"author":{"gitId":"-"},"content":"     * A stub class to throw an {@code IOException} when the save method is called.","lastModifiedDate":"2021-09-21"},{"lineNumber":159,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-09-21"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    private static class JsonAddressBookIoExceptionThrowingStub extends JsonAddressBookStorage {","lastModifiedDate":"2021-09-21"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        private JsonAddressBookIoExceptionThrowingStub(Path filePath) {","lastModifiedDate":"2021-09-21"},{"lineNumber":162,"author":{"gitId":"-"},"content":"            super(filePath);","lastModifiedDate":"2021-09-21"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-09-21"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2021-09-21"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        public void saveAddressBook(ReadOnlyAddressBook addressBook, Path filePath) throws IOException {","lastModifiedDate":"2021-09-21"},{"lineNumber":167,"author":{"gitId":"-"},"content":"            throw DUMMY_IO_EXCEPTION;","lastModifiedDate":"2021-09-21"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-09-21"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-21"},{"lineNumber":170,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":171,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-09-21"}],"authorContributionMap":{"houtenteo":4,"idgrr":11,"loose-bus-change":1,"-":152,"Kangxun":3}},{"path":"src/test/java/seedu/address/logic/commands/AddCommandIntegrationTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2017-07-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-15"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-15"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-15"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-06-15"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-06-15"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) for {@code AddCommand}.","lastModifiedDate":"2017-06-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class AddCommandIntegrationTest {","lastModifiedDate":"2017-06-15"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private Model model;","lastModifiedDate":"2017-06-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2017-06-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public void execute_newPerson_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-06-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-06-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        expectedModel.addPerson(validPerson);","lastModifiedDate":"2017-06-15"},{"lineNumber":34,"author":{"gitId":"houtenteo"},"content":"        expectedModel.sortFilteredPersonList();","lastModifiedDate":"2021-11-01"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new AddCommand(validPerson), model,","lastModifiedDate":"2019-01-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"                String.format(AddCommand.MESSAGE_SUCCESS, validPerson), expectedModel);","lastModifiedDate":"2017-07-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public void execute_duplicatePerson_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        Person personInList \u003d model.getAddressBook().getPersonList().get(0);","lastModifiedDate":"2018-01-10"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertCommandFailure(new AddCommand(personInList), model, AddCommand.MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2019-01-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-15"}],"authorContributionMap":{"houtenteo":1,"-":45}},{"path":"src/test/java/seedu/address/logic/commands/AddCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-05-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-01-10"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-05-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-12"},{"lineNumber":12,"author":{"gitId":"Kangxun"},"content":"import java.util.Comparator;","lastModifiedDate":"2021-10-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-05-12"},{"lineNumber":20,"author":{"gitId":"houtenteo"},"content":"import seedu.address.logic.comparators.NameComparator;","lastModifiedDate":"2021-11-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-05-04"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-05-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2017-05-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-05-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-05-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"public class AddCommandTest {","lastModifiedDate":"2017-05-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void constructor_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AddCommand(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public void execute_personAcceptedByModel_addSuccessful() throws Exception {","lastModifiedDate":"2017-05-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        ModelStubAcceptingPersonAdded modelStub \u003d new ModelStubAcceptingPersonAdded();","lastModifiedDate":"2017-05-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-05-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        CommandResult commandResult \u003d new AddCommand(validPerson).execute(modelStub);","lastModifiedDate":"2019-01-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertEquals(String.format(AddCommand.MESSAGE_SUCCESS, validPerson), commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertEquals(Arrays.asList(validPerson), modelStub.personsAdded);","lastModifiedDate":"2017-05-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public void execute_duplicatePerson_throwsCommandException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-05-12"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        AddCommand addCommand \u003d new AddCommand(validPerson);","lastModifiedDate":"2018-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        ModelStub modelStub \u003d new ModelStubWithPerson(validPerson);","lastModifiedDate":"2018-08-07"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertThrows(CommandException.class, AddCommand.MESSAGE_DUPLICATE_PERSON, () -\u003e addCommand.execute(modelStub));","lastModifiedDate":"2019-05-03"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-22"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        Person alice \u003d new PersonBuilder().withName(\"Alice\").build();","lastModifiedDate":"2017-06-22"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        Person bob \u003d new PersonBuilder().withName(\"Bob\").build();","lastModifiedDate":"2017-06-22"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        AddCommand addAliceCommand \u003d new AddCommand(alice);","lastModifiedDate":"2017-06-22"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        AddCommand addBobCommand \u003d new AddCommand(bob);","lastModifiedDate":"2017-06-22"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        AddCommand addAliceCommandCopy \u003d new AddCommand(alice);","lastModifiedDate":"2017-06-22"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommandCopy));","lastModifiedDate":"2017-06-22"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(1));","lastModifiedDate":"2017-06-22"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(null));","lastModifiedDate":"2017-06-22"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(addBobCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * A default model stub that have all of the methods failing.","lastModifiedDate":"2017-05-12"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    private class ModelStub implements Model {","lastModifiedDate":"2017-05-12"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":85,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":105,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-11-27"},{"lineNumber":110,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        public void addPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":115,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        public void setAddressBook(ReadOnlyAddressBook newData) {","lastModifiedDate":"2018-11-27"},{"lineNumber":120,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":123,"author":{"gitId":"idgrr"},"content":"        @Override","lastModifiedDate":"2021-10-19"},{"lineNumber":124,"author":{"gitId":"idgrr"},"content":"        public int duplicateIndex(Person person) {","lastModifiedDate":"2021-10-19"},{"lineNumber":125,"author":{"gitId":"idgrr"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-19"},{"lineNumber":126,"author":{"gitId":"idgrr"},"content":"        }","lastModifiedDate":"2021-10-19"},{"lineNumber":127,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2017-05-12"},{"lineNumber":130,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-06"},{"lineNumber":135,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-06"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        public void deletePerson(Person target) {","lastModifiedDate":"2018-08-08"},{"lineNumber":140,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":145,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":150,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":153,"author":{"gitId":"Kangxun"},"content":"        @Override","lastModifiedDate":"2021-10-25"},{"lineNumber":154,"author":{"gitId":"Kangxun"},"content":"        public ObservableList\u003cPerson\u003e getOriginalPersonList() {","lastModifiedDate":"2021-10-25"},{"lineNumber":155,"author":{"gitId":"Kangxun"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-25"},{"lineNumber":156,"author":{"gitId":"Kangxun"},"content":"        }","lastModifiedDate":"2021-10-25"},{"lineNumber":157,"author":{"gitId":"Kangxun"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2018-01-10"},{"lineNumber":160,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":162,"author":{"gitId":"Kangxun"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":163,"author":{"gitId":"Kangxun"},"content":"        @Override","lastModifiedDate":"2021-10-25"},{"lineNumber":164,"author":{"gitId":"Kangxun"},"content":"        public void sortFilteredPersonList() {","lastModifiedDate":"2021-10-25"},{"lineNumber":165,"author":{"gitId":"Kangxun"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-25"},{"lineNumber":166,"author":{"gitId":"Kangxun"},"content":"        }","lastModifiedDate":"2021-10-25"},{"lineNumber":167,"author":{"gitId":"Kangxun"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":168,"author":{"gitId":"Kangxun"},"content":"        @Override","lastModifiedDate":"2021-10-25"},{"lineNumber":169,"author":{"gitId":"Kangxun"},"content":"        public void sortFilteredPersonList(Comparator\u003cPerson\u003e comparator) {","lastModifiedDate":"2021-10-25"},{"lineNumber":170,"author":{"gitId":"Kangxun"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-25"},{"lineNumber":171,"author":{"gitId":"Kangxun"},"content":"        }","lastModifiedDate":"2021-10-25"},{"lineNumber":172,"author":{"gitId":"Kangxun"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":173,"author":{"gitId":"Kangxun"},"content":"        @Override","lastModifiedDate":"2021-10-25"},{"lineNumber":174,"author":{"gitId":"Kangxun"},"content":"        public void limitFilteredPersonList(int count) {","lastModifiedDate":"2021-10-25"},{"lineNumber":175,"author":{"gitId":"Kangxun"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-25"},{"lineNumber":176,"author":{"gitId":"Kangxun"},"content":"        }","lastModifiedDate":"2021-10-25"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":180,"author":{"gitId":"-"},"content":"     * A Model stub that contains a single person.","lastModifiedDate":"2018-08-07"},{"lineNumber":181,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    private class ModelStubWithPerson extends ModelStub {","lastModifiedDate":"2018-08-07"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        private final Person person;","lastModifiedDate":"2018-08-07"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        ModelStubWithPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":186,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":187,"author":{"gitId":"-"},"content":"            this.person \u003d person;","lastModifiedDate":"2018-08-07"},{"lineNumber":188,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":190,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":192,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":193,"author":{"gitId":"-"},"content":"            return this.person.isSamePerson(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":195,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":197,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":198,"author":{"gitId":"-"},"content":"     * A Model stub that always accept the person being added.","lastModifiedDate":"2017-05-12"},{"lineNumber":199,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":200,"author":{"gitId":"-"},"content":"    private class ModelStubAcceptingPersonAdded extends ModelStub {","lastModifiedDate":"2017-05-12"},{"lineNumber":201,"author":{"gitId":"-"},"content":"        final ArrayList\u003cPerson\u003e personsAdded \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2017-05-12"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":203,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-07"},{"lineNumber":204,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":205,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":206,"author":{"gitId":"-"},"content":"            return personsAdded.stream().anyMatch(person::isSamePerson);","lastModifiedDate":"2018-08-07"},{"lineNumber":207,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":208,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":209,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":210,"author":{"gitId":"-"},"content":"        public void addPerson(Person person) {","lastModifiedDate":"2018-08-08"},{"lineNumber":211,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":212,"author":{"gitId":"-"},"content":"            personsAdded.add(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":213,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":215,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":216,"author":{"gitId":"-"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2017-05-04"},{"lineNumber":217,"author":{"gitId":"-"},"content":"            return new AddressBook();","lastModifiedDate":"2017-05-04"},{"lineNumber":218,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":219,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":220,"author":{"gitId":"houtenteo"},"content":"        @Override","lastModifiedDate":"2021-11-01"},{"lineNumber":221,"author":{"gitId":"houtenteo"},"content":"        public void sortFilteredPersonList() {","lastModifiedDate":"2021-11-01"},{"lineNumber":222,"author":{"gitId":"houtenteo"},"content":"            personsAdded.sort(new NameComparator());","lastModifiedDate":"2021-11-01"},{"lineNumber":223,"author":{"gitId":"houtenteo"},"content":"        }","lastModifiedDate":"2021-11-01"},{"lineNumber":224,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":226,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-12"}],"authorContributionMap":{"houtenteo":6,"idgrr":5,"-":194,"Kangxun":21}},{"path":"src/test/java/seedu/address/logic/commands/CalledCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Kangxun"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-09-23"},{"lineNumber":2,"author":{"gitId":"Kangxun"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":3,"author":{"gitId":"pranav-ganesh"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-02"},{"lineNumber":4,"author":{"gitId":"pranav-ganesh"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-04"},{"lineNumber":5,"author":{"gitId":"pranav-ganesh"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2021-10-04"},{"lineNumber":6,"author":{"gitId":"pranav-ganesh"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-10-04"},{"lineNumber":7,"author":{"gitId":"pranav-ganesh"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2021-09-25"},{"lineNumber":8,"author":{"gitId":"pranav-ganesh"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2021-10-02"},{"lineNumber":9,"author":{"gitId":"Kangxun"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2021-09-23"},{"lineNumber":10,"author":{"gitId":"Kangxun"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":11,"author":{"gitId":"Kangxun"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-09-23"},{"lineNumber":12,"author":{"gitId":"Kangxun"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":13,"author":{"gitId":"pranav-ganesh"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2021-10-02"},{"lineNumber":14,"author":{"gitId":"pranav-ganesh"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-10-02"},{"lineNumber":15,"author":{"gitId":"pranav-ganesh"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2021-09-25"},{"lineNumber":16,"author":{"gitId":"Kangxun"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-09-23"},{"lineNumber":17,"author":{"gitId":"Kangxun"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2021-09-23"},{"lineNumber":18,"author":{"gitId":"Kangxun"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2021-09-23"},{"lineNumber":19,"author":{"gitId":"pranav-ganesh"},"content":"import seedu.address.model.person.IsCalled;","lastModifiedDate":"2021-11-04"},{"lineNumber":20,"author":{"gitId":"pranav-ganesh"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2021-09-25"},{"lineNumber":21,"author":{"gitId":"Kangxun"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":22,"author":{"gitId":"Kangxun"},"content":"/**","lastModifiedDate":"2021-09-23"},{"lineNumber":23,"author":{"gitId":"pranav-ganesh"},"content":" * Contains integration tests (interaction with the Model) and unit tests for CalledCommand.","lastModifiedDate":"2021-11-04"},{"lineNumber":24,"author":{"gitId":"Kangxun"},"content":" */","lastModifiedDate":"2021-09-23"},{"lineNumber":25,"author":{"gitId":"pranav-ganesh"},"content":"public class CalledCommandTest {","lastModifiedDate":"2021-11-04"},{"lineNumber":26,"author":{"gitId":"Kangxun"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":27,"author":{"gitId":"Kangxun"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2021-09-23"},{"lineNumber":28,"author":{"gitId":"Kangxun"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":29,"author":{"gitId":"Kangxun"},"content":"    @Test","lastModifiedDate":"2021-09-23"},{"lineNumber":30,"author":{"gitId":"pranav-ganesh"},"content":"    public void execute_personAcceptedByModel_calledSuccessful() {","lastModifiedDate":"2021-11-04"},{"lineNumber":31,"author":{"gitId":"pranav-ganesh"},"content":"        Person person \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2021-10-02"},{"lineNumber":32,"author":{"gitId":"pranav-ganesh"},"content":"        Person calledPerson \u003d new Person(person.getName(), person.getPhone(), person.getEmail(),","lastModifiedDate":"2021-11-04"},{"lineNumber":33,"author":{"gitId":"pranav-ganesh"},"content":"                new IsCalled(\"TRUE\"), person.getAddress(), person.getGender(), person.getAge(), person.getInterests());","lastModifiedDate":"2021-11-04"},{"lineNumber":34,"author":{"gitId":"pranav-ganesh"},"content":"        CalledCommand calledCommand \u003d new CalledCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2021-11-04"},{"lineNumber":35,"author":{"gitId":"pranav-ganesh"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":36,"author":{"gitId":"pranav-ganesh"},"content":"        String expectedMessage \u003d String.format(CalledCommand.MESSAGE_DONE_CALL_SUCCESS, calledPerson);","lastModifiedDate":"2021-11-04"},{"lineNumber":37,"author":{"gitId":"pranav-ganesh"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":38,"author":{"gitId":"pranav-ganesh"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2021-09-25"},{"lineNumber":39,"author":{"gitId":"pranav-ganesh"},"content":"        expectedModel.setPerson(model.getFilteredPersonList().get(0), calledPerson);","lastModifiedDate":"2021-11-04"},{"lineNumber":40,"author":{"gitId":"pranav-ganesh"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":41,"author":{"gitId":"pranav-ganesh"},"content":"        assertCommandSuccess(calledCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-11-04"},{"lineNumber":42,"author":{"gitId":"pranav-ganesh"},"content":"    }","lastModifiedDate":"2021-10-02"},{"lineNumber":43,"author":{"gitId":"pranav-ganesh"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":44,"author":{"gitId":"pranav-ganesh"},"content":"    @Test","lastModifiedDate":"2021-10-02"},{"lineNumber":45,"author":{"gitId":"pranav-ganesh"},"content":"    public void execute_invalidPersonIndex_throwsCommandException() {","lastModifiedDate":"2021-10-02"},{"lineNumber":46,"author":{"gitId":"pranav-ganesh"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPersonList().size() + 1);","lastModifiedDate":"2021-10-02"},{"lineNumber":47,"author":{"gitId":"pranav-ganesh"},"content":"        CalledCommand calledCommand \u003d new CalledCommand(outOfBoundIndex);","lastModifiedDate":"2021-11-04"},{"lineNumber":48,"author":{"gitId":"pranav-ganesh"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":49,"author":{"gitId":"pranav-ganesh"},"content":"        assertCommandFailure(calledCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2021-11-04"},{"lineNumber":50,"author":{"gitId":"pranav-ganesh"},"content":"    }","lastModifiedDate":"2021-10-02"},{"lineNumber":51,"author":{"gitId":"pranav-ganesh"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":52,"author":{"gitId":"pranav-ganesh"},"content":"    @Test","lastModifiedDate":"2021-10-02"},{"lineNumber":53,"author":{"gitId":"pranav-ganesh"},"content":"    public void execute_personAlreadyMarkedAsCalled_showAppropriateMessage() {","lastModifiedDate":"2021-11-04"},{"lineNumber":54,"author":{"gitId":"pranav-ganesh"},"content":"        Person person \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2021-10-02"},{"lineNumber":55,"author":{"gitId":"pranav-ganesh"},"content":"        Person calledPerson \u003d new Person(person.getName(), person.getPhone(), person.getEmail(),","lastModifiedDate":"2021-11-04"},{"lineNumber":56,"author":{"gitId":"pranav-ganesh"},"content":"                new IsCalled(\"TRUE\"), person.getAddress(), person.getGender(), person.getAge(), person.getInterests());","lastModifiedDate":"2021-11-04"},{"lineNumber":57,"author":{"gitId":"pranav-ganesh"},"content":"        model.setPerson(person, calledPerson);","lastModifiedDate":"2021-11-04"},{"lineNumber":58,"author":{"gitId":"loose-bus-change"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":59,"author":{"gitId":"pranav-ganesh"},"content":"        CalledCommand calledCommand \u003d new CalledCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2021-11-04"},{"lineNumber":60,"author":{"gitId":"pranav-ganesh"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":61,"author":{"gitId":"pranav-ganesh"},"content":"        String expectedMessage \u003d String.format(CalledCommand.MESSAGE_ALREADY_DONE_CALL, person);","lastModifiedDate":"2021-11-04"},{"lineNumber":62,"author":{"gitId":"pranav-ganesh"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":63,"author":{"gitId":"pranav-ganesh"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2021-10-02"},{"lineNumber":64,"author":{"gitId":"pranav-ganesh"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":65,"author":{"gitId":"pranav-ganesh"},"content":"        assertCommandSuccess(calledCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-11-04"},{"lineNumber":66,"author":{"gitId":"pranav-ganesh"},"content":"    }","lastModifiedDate":"2021-10-02"},{"lineNumber":67,"author":{"gitId":"pranav-ganesh"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":68,"author":{"gitId":"pranav-ganesh"},"content":"    @Test","lastModifiedDate":"2021-10-02"},{"lineNumber":69,"author":{"gitId":"pranav-ganesh"},"content":"    public void equals() {","lastModifiedDate":"2021-10-02"},{"lineNumber":70,"author":{"gitId":"pranav-ganesh"},"content":"        final CalledCommand standardCommand \u003d new CalledCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2021-11-04"},{"lineNumber":71,"author":{"gitId":"pranav-ganesh"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":72,"author":{"gitId":"pranav-ganesh"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2021-10-02"},{"lineNumber":73,"author":{"gitId":"pranav-ganesh"},"content":"        CalledCommand commandWithSameValues \u003d new CalledCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2021-11-04"},{"lineNumber":74,"author":{"gitId":"pranav-ganesh"},"content":"        assertTrue(standardCommand.equals(commandWithSameValues));","lastModifiedDate":"2021-10-02"},{"lineNumber":75,"author":{"gitId":"pranav-ganesh"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":76,"author":{"gitId":"pranav-ganesh"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-10-02"},{"lineNumber":77,"author":{"gitId":"pranav-ganesh"},"content":"        assertTrue(standardCommand.equals(standardCommand));","lastModifiedDate":"2021-10-02"},{"lineNumber":78,"author":{"gitId":"pranav-ganesh"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":79,"author":{"gitId":"pranav-ganesh"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-10-02"},{"lineNumber":80,"author":{"gitId":"pranav-ganesh"},"content":"        assertFalse(standardCommand.equals(null));","lastModifiedDate":"2021-10-02"},{"lineNumber":81,"author":{"gitId":"pranav-ganesh"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":82,"author":{"gitId":"pranav-ganesh"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2021-10-02"},{"lineNumber":83,"author":{"gitId":"pranav-ganesh"},"content":"        assertFalse(standardCommand.equals(new ClearCommand()));","lastModifiedDate":"2021-10-02"},{"lineNumber":84,"author":{"gitId":"pranav-ganesh"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":85,"author":{"gitId":"pranav-ganesh"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2021-10-02"},{"lineNumber":86,"author":{"gitId":"pranav-ganesh"},"content":"        assertFalse(standardCommand.equals(new CalledCommand(INDEX_SECOND_PERSON)));","lastModifiedDate":"2021-11-04"},{"lineNumber":87,"author":{"gitId":"Kangxun"},"content":"    }","lastModifiedDate":"2021-09-23"},{"lineNumber":88,"author":{"gitId":"Kangxun"},"content":"}","lastModifiedDate":"2021-09-23"}],"authorContributionMap":{"loose-bus-change":1,"pranav-ganesh":69,"Kangxun":18}},{"path":"src/test/java/seedu/address/logic/commands/CommandTestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-09-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-09-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2021-09-21"},{"lineNumber":6,"author":{"gitId":"houtenteo"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_AGE;","lastModifiedDate":"2021-10-18"},{"lineNumber":7,"author":{"gitId":"pranav-ganesh"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_CALLED;","lastModifiedDate":"2021-11-04"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2021-09-21"},{"lineNumber":9,"author":{"gitId":"houtenteo"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_GENDER;","lastModifiedDate":"2021-10-18"},{"lineNumber":10,"author":{"gitId":"houtenteo"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_INTEREST;","lastModifiedDate":"2021-10-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2021-09-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2021-09-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2021-09-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2021-09-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-09-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-09-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2021-09-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-09-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-09-21"},{"lineNumber":22,"author":{"gitId":"Kangxun"},"content":"import seedu.address.logic.comparators.exceptions.ComparatorException;","lastModifiedDate":"2021-10-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2021-09-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-09-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2021-09-21"},{"lineNumber":26,"author":{"gitId":"houtenteo"},"content":"import seedu.address.model.person.predicates.NameContainsKeywordsPredicate;","lastModifiedDate":"2021-10-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2021-09-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2021-09-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":" * Contains helper methods for testing commands.","lastModifiedDate":"2021-09-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2021-09-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"public class CommandTestUtil {","lastModifiedDate":"2021-09-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_AMY \u003d \"Amy Bee\";","lastModifiedDate":"2021-09-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_BOB \u003d \"Bob Choo\";","lastModifiedDate":"2021-09-21"},{"lineNumber":36,"author":{"gitId":"houtenteo"},"content":"    public static final String VALID_PHONE_AMY \u003d \"88888888\";","lastModifiedDate":"2021-11-02"},{"lineNumber":37,"author":{"gitId":"houtenteo"},"content":"    public static final String VALID_PHONE_BOB \u003d \"99999999\";","lastModifiedDate":"2021-11-02"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static final String VALID_EMAIL_AMY \u003d \"amy@example.com\";","lastModifiedDate":"2021-09-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public static final String VALID_EMAIL_BOB \u003d \"bob@example.com\";","lastModifiedDate":"2021-09-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public static final String VALID_ADDRESS_AMY \u003d \"Block 312, Amy Street 1\";","lastModifiedDate":"2021-09-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public static final String VALID_ADDRESS_BOB \u003d \"Block 123, Bobby Street 3\";","lastModifiedDate":"2021-09-21"},{"lineNumber":42,"author":{"gitId":"houtenteo"},"content":"    public static final String VALID_GENDER_AMY \u003d \"F\";","lastModifiedDate":"2021-10-18"},{"lineNumber":43,"author":{"gitId":"houtenteo"},"content":"    public static final String VALID_GENDER_BOB \u003d \"M\";","lastModifiedDate":"2021-10-18"},{"lineNumber":44,"author":{"gitId":"houtenteo"},"content":"    public static final String VALID_AGE_AMY \u003d \"22\";","lastModifiedDate":"2021-10-18"},{"lineNumber":45,"author":{"gitId":"houtenteo"},"content":"    public static final String VALID_AGE_BOB \u003d \"33\";","lastModifiedDate":"2021-10-18"},{"lineNumber":46,"author":{"gitId":"pranav-ganesh"},"content":"    public static final String VALID_CALLED_AMY \u003d \"true\";","lastModifiedDate":"2021-11-04"},{"lineNumber":47,"author":{"gitId":"pranav-ganesh"},"content":"    public static final String VALID_CALLED_BOB \u003d \"false\";","lastModifiedDate":"2021-11-04"},{"lineNumber":48,"author":{"gitId":"houtenteo"},"content":"    public static final String VALID_INTEREST_AMY \u003d \"Shopping\";","lastModifiedDate":"2021-10-18"},{"lineNumber":49,"author":{"gitId":"houtenteo"},"content":"    public static final String VALID_INTEREST_BOB \u003d \"Watching football\";","lastModifiedDate":"2021-10-18"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public static final String VALID_TAG_HUSBAND \u003d \"husband\";","lastModifiedDate":"2021-09-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public static final String VALID_TAG_FRIEND \u003d \"friend\";","lastModifiedDate":"2021-09-21"},{"lineNumber":52,"author":{"gitId":"Kangxun"},"content":"    public static final String VALID_CATEGORY_CALLED \u003d \"called\";","lastModifiedDate":"2021-10-25"},{"lineNumber":53,"author":{"gitId":"Kangxun"},"content":"    public static final String VALID_CATEGORY_GENDER \u003d \"gender\";","lastModifiedDate":"2021-10-25"},{"lineNumber":54,"author":{"gitId":"Kangxun"},"content":"    public static final String VALID_COUNT_3 \u003d \"3\";","lastModifiedDate":"2021-10-09"},{"lineNumber":55,"author":{"gitId":"Kangxun"},"content":"    public static final String VALID_COUNT_5 \u003d \"5\";","lastModifiedDate":"2021-10-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_AMY \u003d \" \" + PREFIX_NAME + VALID_NAME_AMY;","lastModifiedDate":"2021-09-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_BOB \u003d \" \" + PREFIX_NAME + VALID_NAME_BOB;","lastModifiedDate":"2021-09-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public static final String PHONE_DESC_AMY \u003d \" \" + PREFIX_PHONE + VALID_PHONE_AMY;","lastModifiedDate":"2021-09-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public static final String PHONE_DESC_BOB \u003d \" \" + PREFIX_PHONE + VALID_PHONE_BOB;","lastModifiedDate":"2021-09-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public static final String EMAIL_DESC_AMY \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_AMY;","lastModifiedDate":"2021-09-21"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public static final String EMAIL_DESC_BOB \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_BOB;","lastModifiedDate":"2021-09-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public static final String ADDRESS_DESC_AMY \u003d \" \" + PREFIX_ADDRESS + VALID_ADDRESS_AMY;","lastModifiedDate":"2021-09-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public static final String ADDRESS_DESC_BOB \u003d \" \" + PREFIX_ADDRESS + VALID_ADDRESS_BOB;","lastModifiedDate":"2021-09-21"},{"lineNumber":65,"author":{"gitId":"houtenteo"},"content":"    public static final String GENDER_DESC_AMY \u003d \" \" + PREFIX_GENDER + VALID_GENDER_AMY;","lastModifiedDate":"2021-10-18"},{"lineNumber":66,"author":{"gitId":"houtenteo"},"content":"    public static final String GENDER_DESC_BOB \u003d \" \" + PREFIX_GENDER + VALID_GENDER_BOB;","lastModifiedDate":"2021-10-18"},{"lineNumber":67,"author":{"gitId":"houtenteo"},"content":"    public static final String AGE_DESC_AMY \u003d \" \" + PREFIX_AGE + VALID_AGE_AMY;","lastModifiedDate":"2021-10-18"},{"lineNumber":68,"author":{"gitId":"houtenteo"},"content":"    public static final String AGE_DESC_BOB \u003d \" \" + PREFIX_AGE + VALID_AGE_BOB;","lastModifiedDate":"2021-10-18"},{"lineNumber":69,"author":{"gitId":"pranav-ganesh"},"content":"    public static final String CALLED_DESC_AMY \u003d \" \" + PREFIX_CALLED + VALID_CALLED_AMY;","lastModifiedDate":"2021-11-04"},{"lineNumber":70,"author":{"gitId":"pranav-ganesh"},"content":"    public static final String CALLED_DESC_BOB \u003d \" \" + PREFIX_CALLED + VALID_CALLED_BOB;","lastModifiedDate":"2021-11-04"},{"lineNumber":71,"author":{"gitId":"houtenteo"},"content":"    public static final String INTEREST_DESC_AMY \u003d \" \" + PREFIX_INTEREST + VALID_INTEREST_AMY;","lastModifiedDate":"2021-10-18"},{"lineNumber":72,"author":{"gitId":"houtenteo"},"content":"    public static final String INTEREST_DESC_BOB \u003d \" \" + PREFIX_INTEREST + VALID_INTEREST_BOB;","lastModifiedDate":"2021-10-18"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public static final String TAG_DESC_FRIEND \u003d \" \" + PREFIX_TAG + VALID_TAG_FRIEND;","lastModifiedDate":"2021-09-21"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public static final String TAG_DESC_HUSBAND \u003d \" \" + PREFIX_TAG + VALID_TAG_HUSBAND;","lastModifiedDate":"2021-09-21"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public static final String INVALID_NAME_DESC \u003d \" \" + PREFIX_NAME + \"James\u0026\"; // \u0027\u0026\u0027 not allowed in names","lastModifiedDate":"2021-09-21"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public static final String INVALID_PHONE_DESC \u003d \" \" + PREFIX_PHONE + \"911a\"; // \u0027a\u0027 not allowed in phones","lastModifiedDate":"2021-09-21"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public static final String INVALID_EMAIL_DESC \u003d \" \" + PREFIX_EMAIL + \"bob!yahoo\"; // missing \u0027@\u0027 symbol","lastModifiedDate":"2021-09-21"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public static final String INVALID_ADDRESS_DESC \u003d \" \" + PREFIX_ADDRESS; // empty string not allowed for addresses","lastModifiedDate":"2021-09-21"},{"lineNumber":80,"author":{"gitId":"houtenteo"},"content":"    public static final String INVALID_GENDER_DESC \u003d \" \" + PREFIX_GENDER + \"95\"; // numbers not allowed for gender","lastModifiedDate":"2021-10-18"},{"lineNumber":81,"author":{"gitId":"houtenteo"},"content":"    public static final String INVALID_AGE_DESC \u003d \" \" + PREFIX_AGE + \"HELLO\"; // Age should only consist of numbers","lastModifiedDate":"2021-10-18"},{"lineNumber":82,"author":{"gitId":"houtenteo"},"content":"    public static final String INVALID_INTEREST_DESC \u003d \" \" + PREFIX_INTEREST; // empty string not allowed for interest","lastModifiedDate":"2021-10-18"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public static final String INVALID_TAG_DESC \u003d \" \" + PREFIX_TAG + \"hubby*\"; // \u0027*\u0027 not allowed in tags","lastModifiedDate":"2021-09-21"},{"lineNumber":84,"author":{"gitId":"pranav-ganesh"},"content":"    public static final String INVALID_CALLED_DESC \u003d \" \" + PREFIX_CALLED + \"lucas\"; // only boolean values are allowed","lastModifiedDate":"2021-11-04"},{"lineNumber":85,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":86,"author":{"gitId":"Kangxun"},"content":"    public static final String INVALID_CATEGORY \u003d \"whales\";","lastModifiedDate":"2021-10-25"},{"lineNumber":87,"author":{"gitId":"Kangxun"},"content":"    public static final String INVALID_COUNT \u003d \"-1\";","lastModifiedDate":"2021-10-25"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_WHITESPACE \u003d \"\\t  \\r  \\n\";","lastModifiedDate":"2021-09-21"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_NON_EMPTY \u003d \"NonEmptyPreamble\";","lastModifiedDate":"2021-09-21"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public static final EditCommand.EditPersonDescriptor DESC_AMY;","lastModifiedDate":"2021-09-21"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    public static final EditCommand.EditPersonDescriptor DESC_BOB;","lastModifiedDate":"2021-09-21"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    static {","lastModifiedDate":"2021-09-21"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        DESC_AMY \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2021-09-21"},{"lineNumber":97,"author":{"gitId":"pranav-ganesh"},"content":"                .withPhone(VALID_PHONE_AMY).withEmail(VALID_EMAIL_AMY).withCalled(\"false\").build();","lastModifiedDate":"2021-11-04"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        DESC_BOB \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2021-09-21"},{"lineNumber":99,"author":{"gitId":"pranav-ganesh"},"content":"                .withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB).withCalled(\"false\").build();","lastModifiedDate":"2021-11-04"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-21"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-09-21"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2021-09-21"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * - the returned {@link CommandResult} matches {@code expectedCommandResult} \u003cbr\u003e","lastModifiedDate":"2021-09-21"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     * - the {@code actualModel} matches {@code expectedModel}","lastModifiedDate":"2021-09-21"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-09-21"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, CommandResult expectedCommandResult,","lastModifiedDate":"2021-09-21"},{"lineNumber":108,"author":{"gitId":"houtenteo"},"content":"                                            Model expectedModel) {","lastModifiedDate":"2021-09-21"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2021-09-21"},{"lineNumber":110,"author":{"gitId":"-"},"content":"            CommandResult result \u003d command.execute(actualModel);","lastModifiedDate":"2021-09-21"},{"lineNumber":111,"author":{"gitId":"pranav-ganesh"},"content":"            System.out.println(result.getFeedbackToUser());","lastModifiedDate":"2021-11-06"},{"lineNumber":112,"author":{"gitId":"-"},"content":"            assertEquals(expectedCommandResult, result);","lastModifiedDate":"2021-09-21"},{"lineNumber":113,"author":{"gitId":"-"},"content":"            assertEquals(expectedModel, actualModel);","lastModifiedDate":"2021-09-21"},{"lineNumber":114,"author":{"gitId":"Kangxun"},"content":"        } catch (CommandException | ComparatorException ce) {","lastModifiedDate":"2021-10-25"},{"lineNumber":115,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"Execution of command should not fail.\", ce);","lastModifiedDate":"2021-09-21"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-09-21"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-21"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-09-21"},{"lineNumber":120,"author":{"gitId":"-"},"content":"     * Convenience wrapper to {@link #assertCommandSuccess(Command, Model, CommandResult, Model)}","lastModifiedDate":"2021-09-21"},{"lineNumber":121,"author":{"gitId":"-"},"content":"     * that takes a string {@code expectedMessage}.","lastModifiedDate":"2021-09-21"},{"lineNumber":122,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-09-21"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, String expectedMessage,","lastModifiedDate":"2021-09-21"},{"lineNumber":124,"author":{"gitId":"houtenteo"},"content":"                                            Model expectedModel) {","lastModifiedDate":"2021-09-21"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(expectedMessage);","lastModifiedDate":"2021-09-21"},{"lineNumber":126,"author":{"gitId":"pranav-ganesh"},"content":"        System.out.println(expectedMessage);","lastModifiedDate":"2021-11-06"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, actualModel, expectedCommandResult, expectedModel);","lastModifiedDate":"2021-09-21"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-21"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-09-21"},{"lineNumber":131,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2021-09-21"},{"lineNumber":132,"author":{"gitId":"-"},"content":"     * - a {@code CommandException} is thrown \u003cbr\u003e","lastModifiedDate":"2021-09-21"},{"lineNumber":133,"author":{"gitId":"-"},"content":"     * - the CommandException message matches {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2021-09-21"},{"lineNumber":134,"author":{"gitId":"-"},"content":"     * - the address book, filtered person list and selected person in {@code actualModel} remain unchanged","lastModifiedDate":"2021-09-21"},{"lineNumber":135,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-09-21"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    public static void assertCommandFailure(Command command, Model actualModel, String expectedMessage) {","lastModifiedDate":"2021-09-21"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        // we are unable to defensively copy the model for comparison later, so we can","lastModifiedDate":"2021-09-21"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        // only do so by copying its components.","lastModifiedDate":"2021-09-21"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        AddressBook expectedAddressBook \u003d new AddressBook(actualModel.getAddressBook());","lastModifiedDate":"2021-09-21"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e expectedFilteredList \u003d new ArrayList\u003c\u003e(actualModel.getFilteredPersonList());","lastModifiedDate":"2021-09-21"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        assertThrows(CommandException.class, expectedMessage, () -\u003e command.execute(actualModel));","lastModifiedDate":"2021-09-21"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddressBook, actualModel.getAddressBook());","lastModifiedDate":"2021-09-21"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        assertEquals(expectedFilteredList, actualModel.getFilteredPersonList());","lastModifiedDate":"2021-09-21"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-21"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-09-21"},{"lineNumber":147,"author":{"gitId":"-"},"content":"     * Updates {@code model}\u0027s filtered list to show only the person at the given {@code targetIndex} in the","lastModifiedDate":"2021-09-21"},{"lineNumber":148,"author":{"gitId":"-"},"content":"     * {@code model}\u0027s address book.","lastModifiedDate":"2021-09-21"},{"lineNumber":149,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-09-21"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    public static void showPersonAtIndex(Model model, Index targetIndex) {","lastModifiedDate":"2021-09-21"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        assertTrue(targetIndex.getZeroBased() \u003c model.getFilteredPersonList().size());","lastModifiedDate":"2021-09-21"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        Person person \u003d model.getFilteredPersonList().get(targetIndex.getZeroBased());","lastModifiedDate":"2021-09-21"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        final String[] splitName \u003d person.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2021-09-21"},{"lineNumber":155,"author":{"gitId":"houtenteo"},"content":"        model.updateFilteredPersonList(new NameContainsKeywordsPredicate(Arrays.asList(splitName[0]), false));","lastModifiedDate":"2021-10-26"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        assertEquals(1, model.getFilteredPersonList().size());","lastModifiedDate":"2021-09-21"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-21"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":160,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-09-21"}],"authorContributionMap":{"houtenteo":25,"pranav-ganesh":10,"-":117,"Kangxun":8}},{"path":"src/test/java/seedu/address/logic/commands/DisplayCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"loose-bus-change"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-10-21"},{"lineNumber":2,"author":{"gitId":"loose-bus-change"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":3,"author":{"gitId":"loose-bus-change"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-21"},{"lineNumber":4,"author":{"gitId":"loose-bus-change"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-21"},{"lineNumber":5,"author":{"gitId":"loose-bus-change"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2021-10-21"},{"lineNumber":6,"author":{"gitId":"loose-bus-change"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-10-25"},{"lineNumber":7,"author":{"gitId":"loose-bus-change"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2021-10-21"},{"lineNumber":8,"author":{"gitId":"loose-bus-change"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2021-10-21"},{"lineNumber":9,"author":{"gitId":"loose-bus-change"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2021-10-21"},{"lineNumber":10,"author":{"gitId":"loose-bus-change"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":11,"author":{"gitId":"loose-bus-change"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-21"},{"lineNumber":12,"author":{"gitId":"loose-bus-change"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":13,"author":{"gitId":"loose-bus-change"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2021-10-21"},{"lineNumber":14,"author":{"gitId":"loose-bus-change"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-10-21"},{"lineNumber":15,"author":{"gitId":"loose-bus-change"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2021-10-25"},{"lineNumber":16,"author":{"gitId":"loose-bus-change"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-10-21"},{"lineNumber":17,"author":{"gitId":"loose-bus-change"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2021-10-21"},{"lineNumber":18,"author":{"gitId":"loose-bus-change"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2021-10-21"},{"lineNumber":19,"author":{"gitId":"loose-bus-change"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2021-10-25"},{"lineNumber":20,"author":{"gitId":"loose-bus-change"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":21,"author":{"gitId":"loose-bus-change"},"content":"/**","lastModifiedDate":"2021-10-21"},{"lineNumber":22,"author":{"gitId":"loose-bus-change"},"content":" * Contains integration tests (interaction with the Model) and unit tests for DisplayCommand.","lastModifiedDate":"2021-10-22"},{"lineNumber":23,"author":{"gitId":"loose-bus-change"},"content":" */","lastModifiedDate":"2021-10-21"},{"lineNumber":24,"author":{"gitId":"loose-bus-change"},"content":"public class DisplayCommandTest {","lastModifiedDate":"2021-10-21"},{"lineNumber":25,"author":{"gitId":"loose-bus-change"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":26,"author":{"gitId":"loose-bus-change"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2021-10-21"},{"lineNumber":27,"author":{"gitId":"loose-bus-change"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":28,"author":{"gitId":"loose-bus-change"},"content":"    @Test","lastModifiedDate":"2021-10-21"},{"lineNumber":29,"author":{"gitId":"loose-bus-change"},"content":"    public void execute_invalidPersonIndex_throwsCommandException() {","lastModifiedDate":"2021-10-21"},{"lineNumber":30,"author":{"gitId":"loose-bus-change"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPersonList().size() + 1);","lastModifiedDate":"2021-10-21"},{"lineNumber":31,"author":{"gitId":"loose-bus-change"},"content":"        DisplayCommand displayCommand \u003d new DisplayCommand(outOfBoundIndex);","lastModifiedDate":"2021-10-21"},{"lineNumber":32,"author":{"gitId":"loose-bus-change"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":33,"author":{"gitId":"loose-bus-change"},"content":"        assertCommandFailure(displayCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2021-10-21"},{"lineNumber":34,"author":{"gitId":"loose-bus-change"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":35,"author":{"gitId":"loose-bus-change"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":36,"author":{"gitId":"loose-bus-change"},"content":"    @Test","lastModifiedDate":"2021-10-25"},{"lineNumber":37,"author":{"gitId":"loose-bus-change"},"content":"    public void execute_personAcceptedByModel_displaySuccessful() {","lastModifiedDate":"2021-10-25"},{"lineNumber":38,"author":{"gitId":"loose-bus-change"},"content":"        Person person \u003d model.getFilteredPersonList().get(INDEX_SECOND_PERSON.getZeroBased());","lastModifiedDate":"2021-10-25"},{"lineNumber":39,"author":{"gitId":"loose-bus-change"},"content":"        DisplayCommand displayCommand \u003d new DisplayCommand(INDEX_SECOND_PERSON);","lastModifiedDate":"2021-10-25"},{"lineNumber":40,"author":{"gitId":"loose-bus-change"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":41,"author":{"gitId":"loose-bus-change"},"content":"        String expectedMessage \u003d String.format(DisplayCommand.MESSAGE_DISPLAY_SUCCESS, person);","lastModifiedDate":"2021-10-25"},{"lineNumber":42,"author":{"gitId":"loose-bus-change"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":43,"author":{"gitId":"loose-bus-change"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2021-10-25"},{"lineNumber":44,"author":{"gitId":"loose-bus-change"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":45,"author":{"gitId":"loose-bus-change"},"content":"        assertCommandSuccess(displayCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-10-25"},{"lineNumber":46,"author":{"gitId":"loose-bus-change"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":47,"author":{"gitId":"loose-bus-change"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":48,"author":{"gitId":"loose-bus-change"},"content":"    @Test","lastModifiedDate":"2021-10-21"},{"lineNumber":49,"author":{"gitId":"loose-bus-change"},"content":"    public void equals() {","lastModifiedDate":"2021-10-21"},{"lineNumber":50,"author":{"gitId":"loose-bus-change"},"content":"        final DisplayCommand standardCommand \u003d new DisplayCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2021-10-21"},{"lineNumber":51,"author":{"gitId":"loose-bus-change"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":52,"author":{"gitId":"loose-bus-change"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2021-10-21"},{"lineNumber":53,"author":{"gitId":"loose-bus-change"},"content":"        DisplayCommand commandWithSameValues \u003d new DisplayCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2021-10-21"},{"lineNumber":54,"author":{"gitId":"loose-bus-change"},"content":"        assertTrue(standardCommand.equals(commandWithSameValues));","lastModifiedDate":"2021-10-21"},{"lineNumber":55,"author":{"gitId":"loose-bus-change"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":56,"author":{"gitId":"loose-bus-change"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-10-21"},{"lineNumber":57,"author":{"gitId":"loose-bus-change"},"content":"        assertTrue(standardCommand.equals(standardCommand));","lastModifiedDate":"2021-10-21"},{"lineNumber":58,"author":{"gitId":"loose-bus-change"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":59,"author":{"gitId":"loose-bus-change"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-10-21"},{"lineNumber":60,"author":{"gitId":"loose-bus-change"},"content":"        assertFalse(standardCommand.equals(null));","lastModifiedDate":"2021-10-21"},{"lineNumber":61,"author":{"gitId":"loose-bus-change"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":62,"author":{"gitId":"loose-bus-change"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2021-10-21"},{"lineNumber":63,"author":{"gitId":"loose-bus-change"},"content":"        assertFalse(standardCommand.equals(new ClearCommand()));","lastModifiedDate":"2021-10-21"},{"lineNumber":64,"author":{"gitId":"loose-bus-change"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":65,"author":{"gitId":"loose-bus-change"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2021-10-21"},{"lineNumber":66,"author":{"gitId":"loose-bus-change"},"content":"        assertFalse(standardCommand.equals(new DisplayCommand(INDEX_SECOND_PERSON)));","lastModifiedDate":"2021-10-21"},{"lineNumber":67,"author":{"gitId":"loose-bus-change"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":68,"author":{"gitId":"loose-bus-change"},"content":"}","lastModifiedDate":"2021-10-21"}],"authorContributionMap":{"loose-bus-change":68}},{"path":"src/test/java/seedu/address/logic/commands/EditCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-09-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-09-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_AMY;","lastModifiedDate":"2021-09-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_BOB;","lastModifiedDate":"2021-09-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2021-09-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2021-09-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2021-09-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-09-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2021-09-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2021-09-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2021-09-21"},{"lineNumber":14,"author":{"gitId":"pranav-ganesh"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_THIRD_PERSON;","lastModifiedDate":"2021-10-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2021-09-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-09-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2021-09-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-09-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2021-09-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2021-09-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-09-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2021-09-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2021-09-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2021-09-21"},{"lineNumber":27,"author":{"gitId":"pranav-ganesh"},"content":"import seedu.address.model.person.interests.Interest;","lastModifiedDate":"2021-11-08"},{"lineNumber":28,"author":{"gitId":"pranav-ganesh"},"content":"import seedu.address.model.person.interests.InterestsList;","lastModifiedDate":"2021-11-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2021-09-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2021-09-21"},{"lineNumber":31,"author":{"gitId":"pranav-ganesh"},"content":"import seedu.address.testutil.TypicalPersons;","lastModifiedDate":"2021-10-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2021-09-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for EditCommand.","lastModifiedDate":"2021-09-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2021-09-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"public class EditCommandTest {","lastModifiedDate":"2021-09-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2021-09-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":40,"author":{"gitId":"pranav-ganesh"},"content":"    public void assertEditCommandSuccess(Person p1, Person p2, int index) {","lastModifiedDate":"2021-11-08"},{"lineNumber":41,"author":{"gitId":"pranav-ganesh"},"content":"        Person expectedPerson \u003d p1;","lastModifiedDate":"2021-11-08"},{"lineNumber":42,"author":{"gitId":"pranav-ganesh"},"content":"        Person editedPerson \u003d p2;","lastModifiedDate":"2021-11-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":44,"author":{"gitId":"pranav-ganesh"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(editedPerson).build();","lastModifiedDate":"2021-11-08"},{"lineNumber":45,"author":{"gitId":"pranav-ganesh"},"content":"        EditCommand editCommand \u003d new EditCommand(Index.fromOneBased(index + 1), descriptor);","lastModifiedDate":"2021-11-08"},{"lineNumber":46,"author":{"gitId":"pranav-ganesh"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, expectedPerson);","lastModifiedDate":"2021-11-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2021-11-08"},{"lineNumber":49,"author":{"gitId":"pranav-ganesh"},"content":"        expectedModel.setPerson(model.getFilteredPersonList().get(index), expectedPerson);","lastModifiedDate":"2021-11-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-11-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-11-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":54,"author":{"gitId":"pranav-ganesh"},"content":"    @Test","lastModifiedDate":"2021-11-08"},{"lineNumber":55,"author":{"gitId":"pranav-ganesh"},"content":"    public void execute_allFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2021-11-08"},{"lineNumber":56,"author":{"gitId":"pranav-ganesh"},"content":"        Person editedPerson \u003d new PersonBuilder().withAddress(\"THIS IS MY HOME\")","lastModifiedDate":"2021-11-08"},{"lineNumber":57,"author":{"gitId":"pranav-ganesh"},"content":"                .withGender(\"M\").withAge(\"102\").withInterest(\"Blockchain\", \"Swimming\").build();","lastModifiedDate":"2021-11-08"},{"lineNumber":58,"author":{"gitId":"pranav-ganesh"},"content":"        assertEditCommandSuccess(editedPerson, editedPerson, 2);","lastModifiedDate":"2021-11-08"},{"lineNumber":59,"author":{"gitId":"pranav-ganesh"},"content":"    }","lastModifiedDate":"2021-11-08"},{"lineNumber":60,"author":{"gitId":"pranav-ganesh"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":61,"author":{"gitId":"pranav-ganesh"},"content":"    @Test","lastModifiedDate":"2021-11-08"},{"lineNumber":62,"author":{"gitId":"pranav-ganesh"},"content":"    public void execute_addAndEditInterestToInterestsListSeparately_success() {","lastModifiedDate":"2021-11-08"},{"lineNumber":63,"author":{"gitId":"pranav-ganesh"},"content":"        // adding an interest","lastModifiedDate":"2021-11-08"},{"lineNumber":64,"author":{"gitId":"pranav-ganesh"},"content":"        Person expectedPerson \u003d new PersonBuilder().withName(\"Eric\").withInterest(\"Golf\", \"Reading\").build();","lastModifiedDate":"2021-11-08"},{"lineNumber":65,"author":{"gitId":"pranav-ganesh"},"content":"        assertEditCommandSuccess(expectedPerson, expectedPerson, 3);","lastModifiedDate":"2021-11-08"},{"lineNumber":66,"author":{"gitId":"pranav-ganesh"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":67,"author":{"gitId":"pranav-ganesh"},"content":"        // editing the interest","lastModifiedDate":"2021-11-08"},{"lineNumber":68,"author":{"gitId":"houtenteo"},"content":"        Person expectedPerson2 \u003d new PersonBuilder().withName(\"LMAO\").withInterest(\"Mining\", \"Reading\").build();","lastModifiedDate":"2021-11-08"},{"lineNumber":69,"author":{"gitId":"houtenteo"},"content":"        Person editedPerson \u003d new PersonBuilder().withName(\"LMAO\").withInterest(\"(1) Mining\").build();","lastModifiedDate":"2021-11-08"},{"lineNumber":70,"author":{"gitId":"pranav-ganesh"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":71,"author":{"gitId":"pranav-ganesh"},"content":"        assertEditCommandSuccess(expectedPerson2, editedPerson, 3);","lastModifiedDate":"2021-11-08"},{"lineNumber":72,"author":{"gitId":"pranav-ganesh"},"content":"    }","lastModifiedDate":"2021-11-08"},{"lineNumber":73,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":74,"author":{"gitId":"pranav-ganesh"},"content":"    @Test","lastModifiedDate":"2021-11-08"},{"lineNumber":75,"author":{"gitId":"pranav-ganesh"},"content":"    public void execute_removeInterestFromInterestsList_success() {","lastModifiedDate":"2021-11-08"},{"lineNumber":76,"author":{"gitId":"pranav-ganesh"},"content":"        Person expectedPerson \u003d new PersonBuilder().withName(\"Madrid Zimmerman\")","lastModifiedDate":"2021-11-08"},{"lineNumber":77,"author":{"gitId":"pranav-ganesh"},"content":"                .withEmail(\"maddy@example.com\").withGender(\"M\").withAge(\"73\").build();","lastModifiedDate":"2021-11-08"},{"lineNumber":78,"author":{"gitId":"pranav-ganesh"},"content":"        Person editedPerson \u003d new PersonBuilder().withName(\"Madrid Zimmerman\")","lastModifiedDate":"2021-11-08"},{"lineNumber":79,"author":{"gitId":"pranav-ganesh"},"content":"                .withEmail(\"maddy@example.com\").withGender(\"M\").withAge(\"73\").withInterest(\"(1) remove\").build();","lastModifiedDate":"2021-11-08"},{"lineNumber":80,"author":{"gitId":"pranav-ganesh"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":81,"author":{"gitId":"pranav-ganesh"},"content":"        assertEditCommandSuccess(expectedPerson, editedPerson, 0);","lastModifiedDate":"2021-11-08"},{"lineNumber":82,"author":{"gitId":"pranav-ganesh"},"content":"    }","lastModifiedDate":"2021-11-08"},{"lineNumber":83,"author":{"gitId":"pranav-ganesh"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":84,"author":{"gitId":"pranav-ganesh"},"content":"    @Test","lastModifiedDate":"2021-11-08"},{"lineNumber":85,"author":{"gitId":"pranav-ganesh"},"content":"    public void execute_performManyOperationsInOneCommandOnInterestsList_success() {","lastModifiedDate":"2021-11-08"},{"lineNumber":86,"author":{"gitId":"pranav-ganesh"},"content":"        Person expectedPerson \u003d new PersonBuilder().withName(\"Luke Skywalker\").withEmail(\"luke@example.com\")","lastModifiedDate":"2021-11-08"},{"lineNumber":87,"author":{"gitId":"pranav-ganesh"},"content":"                .withPhone(\"96561828\").withCalled(\"false\").withAddress(\"HOUSE\").withGender(\"M\").withAge(\"17\")","lastModifiedDate":"2021-11-08"},{"lineNumber":88,"author":{"gitId":"pranav-ganesh"},"content":"                .withInterest(\"Reading\", \"football\", \"music\", \"jogging\").build();","lastModifiedDate":"2021-11-08"},{"lineNumber":89,"author":{"gitId":"pranav-ganesh"},"content":"        Person editedPerson \u003d new PersonBuilder().withName(\"Luke Skywalker\").withEmail(\"luke@example.com\")","lastModifiedDate":"2021-11-08"},{"lineNumber":90,"author":{"gitId":"pranav-ganesh"},"content":"                .withPhone(\"96561828\").withCalled(\"false\").withAddress(\"HOUSE\").withGender(\"M\").withAge(\"17\")","lastModifiedDate":"2021-11-08"},{"lineNumber":91,"author":{"gitId":"pranav-ganesh"},"content":"                .withInterest(\"(1) remove\", \"football\", \"music\", \"(2) Reading\", \"jogging\").build();","lastModifiedDate":"2021-11-08"},{"lineNumber":92,"author":{"gitId":"pranav-ganesh"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":93,"author":{"gitId":"pranav-ganesh"},"content":"        assertEditCommandSuccess(expectedPerson, editedPerson, 1);","lastModifiedDate":"2021-11-08"},{"lineNumber":94,"author":{"gitId":"pranav-ganesh"},"content":"    }","lastModifiedDate":"2021-11-08"},{"lineNumber":95,"author":{"gitId":"pranav-ganesh"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-09-21"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    public void execute_someFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2021-09-21"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        Index indexLastPerson \u003d Index.fromOneBased(model.getFilteredPersonList().size());","lastModifiedDate":"2021-09-21"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        Person lastPerson \u003d model.getFilteredPersonList().get(indexLastPerson.getZeroBased());","lastModifiedDate":"2021-09-21"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        PersonBuilder personInList \u003d new PersonBuilder(lastPerson);","lastModifiedDate":"2021-09-21"},{"lineNumber":102,"author":{"gitId":"houtenteo"},"content":"        Person editedPerson \u003d personInList.withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2021-09-22"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2021-09-21"},{"lineNumber":105,"author":{"gitId":"houtenteo"},"content":"                .withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2021-09-22"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(indexLastPerson, descriptor);","lastModifiedDate":"2021-09-21"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, editedPerson);","lastModifiedDate":"2021-09-21"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2021-09-21"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        expectedModel.setPerson(lastPerson, editedPerson);","lastModifiedDate":"2021-09-21"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-09-21"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-21"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-09-21"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    public void execute_noFieldSpecifiedUnfilteredList_success() {","lastModifiedDate":"2021-09-21"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON, new EditPersonDescriptor());","lastModifiedDate":"2021-09-21"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2021-09-21"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, editedPerson);","lastModifiedDate":"2021-09-21"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2021-09-21"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-09-21"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-21"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-09-21"},{"lineNumber":129,"author":{"gitId":"houtenteo"},"content":"    public void execute_duplicatePersonFilteredList_failure() {","lastModifiedDate":"2021-09-21"},{"lineNumber":130,"author":{"gitId":"pranav-ganesh"},"content":"        Person person \u003d TypicalPersons.DANIEL;","lastModifiedDate":"2021-10-27"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2021-09-21"},{"lineNumber":132,"author":{"gitId":"pranav-ganesh"},"content":"                new EditPersonDescriptorBuilder(person).build());","lastModifiedDate":"2021-10-27"},{"lineNumber":133,"author":{"gitId":"houtenteo"},"content":"        assertCommandFailure(editCommand, model, EditCommand.MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2021-09-21"},{"lineNumber":134,"author":{"gitId":"pranav-ganesh"},"content":"    }","lastModifiedDate":"2021-11-04"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":136,"author":{"gitId":"houtenteo"},"content":"    @Test","lastModifiedDate":"2021-09-21"},{"lineNumber":137,"author":{"gitId":"houtenteo"},"content":"    public void execute_invalidPersonIndexUnfilteredList_failure() {","lastModifiedDate":"2021-09-21"},{"lineNumber":138,"author":{"gitId":"houtenteo"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPersonList().size() + 1);","lastModifiedDate":"2021-09-21"},{"lineNumber":139,"author":{"gitId":"houtenteo"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build();","lastModifiedDate":"2021-09-21"},{"lineNumber":140,"author":{"gitId":"houtenteo"},"content":"        EditCommand editCommand \u003d new EditCommand(outOfBoundIndex, descriptor);","lastModifiedDate":"2021-09-21"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":142,"author":{"gitId":"houtenteo"},"content":"        assertCommandFailure(editCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2021-09-21"},{"lineNumber":143,"author":{"gitId":"houtenteo"},"content":"    }","lastModifiedDate":"2021-09-21"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":145,"author":{"gitId":"pranav-ganesh"},"content":"    @Test","lastModifiedDate":"2021-10-22"},{"lineNumber":146,"author":{"gitId":"pranav-ganesh"},"content":"    public void execute_invalidInterestsListIndex_failure() {","lastModifiedDate":"2021-10-22"},{"lineNumber":147,"author":{"gitId":"pranav-ganesh"},"content":"        Person editedPerson \u003d new PersonBuilder().withInterest(\"(5) remove\").build();","lastModifiedDate":"2021-11-06"},{"lineNumber":148,"author":{"gitId":"pranav-ganesh"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(editedPerson).build();","lastModifiedDate":"2021-11-06"},{"lineNumber":149,"author":{"gitId":"pranav-ganesh"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_THIRD_PERSON, descriptor);","lastModifiedDate":"2021-11-06"},{"lineNumber":150,"author":{"gitId":"pranav-ganesh"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":151,"author":{"gitId":"pranav-ganesh"},"content":"        assertCommandFailure(editCommand, model, EditCommand.MESSAGE_INVALID_INTERESTS_INDEX);","lastModifiedDate":"2021-11-06"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-11-06"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-11-06"},{"lineNumber":155,"author":{"gitId":"pranav-ganesh"},"content":"    public void execute_duplicateInterestArgument_failure() {","lastModifiedDate":"2021-11-06"},{"lineNumber":156,"author":{"gitId":"pranav-ganesh"},"content":"        Person editedPerson \u003d new PersonBuilder().withInterest(\"(1) golf\", \"(2) golf\").build();","lastModifiedDate":"2021-11-06"},{"lineNumber":157,"author":{"gitId":"pranav-ganesh"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(editedPerson).build();","lastModifiedDate":"2021-11-06"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_SECOND_PERSON, descriptor);","lastModifiedDate":"2021-11-06"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":160,"author":{"gitId":"pranav-ganesh"},"content":"        assertCommandFailure(editCommand, model, EditCommand.MESSAGE_DUPLICATE_INTEREST_ARGUMENT);","lastModifiedDate":"2021-11-06"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-11-06"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-11-06"},{"lineNumber":164,"author":{"gitId":"pranav-ganesh"},"content":"    public void execute_duplicateIndex_failure() {","lastModifiedDate":"2021-11-06"},{"lineNumber":165,"author":{"gitId":"pranav-ganesh"},"content":"        Person editedPerson \u003d new PersonBuilder().withInterest(\"(1) cycling\", \"(1) remove\").build();","lastModifiedDate":"2021-11-06"},{"lineNumber":166,"author":{"gitId":"pranav-ganesh"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(editedPerson).build();","lastModifiedDate":"2021-11-06"},{"lineNumber":167,"author":{"gitId":"pranav-ganesh"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_SECOND_PERSON, descriptor);","lastModifiedDate":"2021-11-06"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":169,"author":{"gitId":"pranav-ganesh"},"content":"        assertCommandFailure(editCommand, model, EditCommand.MESSAGE_DUPLICATE_INDEX);","lastModifiedDate":"2021-11-06"},{"lineNumber":170,"author":{"gitId":"pranav-ganesh"},"content":"    }","lastModifiedDate":"2021-11-06"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":172,"author":{"gitId":"pranav-ganesh"},"content":"    @Test","lastModifiedDate":"2021-11-06"},{"lineNumber":173,"author":{"gitId":"pranav-ganesh"},"content":"    public void execute_duplicateInterest_failure() {","lastModifiedDate":"2021-11-06"},{"lineNumber":174,"author":{"gitId":"pranav-ganesh"},"content":"        Person editedPerson \u003d new PersonBuilder().withInterest(\"(2) eating\", \"robotics\").build();","lastModifiedDate":"2021-11-06"},{"lineNumber":175,"author":{"gitId":"pranav-ganesh"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(editedPerson).build();","lastModifiedDate":"2021-11-06"},{"lineNumber":176,"author":{"gitId":"pranav-ganesh"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_SECOND_PERSON, descriptor);","lastModifiedDate":"2021-11-06"},{"lineNumber":177,"author":{"gitId":"pranav-ganesh"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":178,"author":{"gitId":"pranav-ganesh"},"content":"        assertCommandFailure(editCommand, model, InterestsList.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-11-06"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-11-06"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-11-08"},{"lineNumber":182,"author":{"gitId":"pranav-ganesh"},"content":"    public void execute_emptyInterestArgument_failure() {","lastModifiedDate":"2021-11-08"},{"lineNumber":183,"author":{"gitId":"pranav-ganesh"},"content":"        Person editedPerson \u003d new PersonBuilder().withInterest(\"(2) \").build();","lastModifiedDate":"2021-11-08"},{"lineNumber":184,"author":{"gitId":"pranav-ganesh"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(editedPerson).build();","lastModifiedDate":"2021-11-08"},{"lineNumber":185,"author":{"gitId":"pranav-ganesh"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_SECOND_PERSON, descriptor);","lastModifiedDate":"2021-11-08"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":187,"author":{"gitId":"pranav-ganesh"},"content":"        assertCommandFailure(editCommand, model, Interest.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-11-08"},{"lineNumber":188,"author":{"gitId":"pranav-ganesh"},"content":"    }","lastModifiedDate":"2021-11-08"},{"lineNumber":189,"author":{"gitId":"pranav-ganesh"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":190,"author":{"gitId":"pranav-ganesh"},"content":"    @Test","lastModifiedDate":"2021-11-08"},{"lineNumber":191,"author":{"gitId":"pranav-ganesh"},"content":"    public void execute_invalidInterestsListIndexCharacter_failure() {","lastModifiedDate":"2021-11-08"},{"lineNumber":192,"author":{"gitId":"pranav-ganesh"},"content":"        Person editedPerson \u003d new PersonBuilder().withInterest(\"(api) astronomy\").build();","lastModifiedDate":"2021-11-08"},{"lineNumber":193,"author":{"gitId":"pranav-ganesh"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(editedPerson).build();","lastModifiedDate":"2021-11-08"},{"lineNumber":194,"author":{"gitId":"pranav-ganesh"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_THIRD_PERSON, descriptor);","lastModifiedDate":"2021-11-08"},{"lineNumber":195,"author":{"gitId":"pranav-ganesh"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":196,"author":{"gitId":"pranav-ganesh"},"content":"        assertCommandFailure(editCommand, model, \"The interestslist index provided is invalid.\");","lastModifiedDate":"2021-11-08"},{"lineNumber":197,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-11-08"},{"lineNumber":198,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":199,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-09-21"},{"lineNumber":200,"author":{"gitId":"-"},"content":"     * Edit filtered list where index is larger than size of filtered list,","lastModifiedDate":"2021-09-21"},{"lineNumber":201,"author":{"gitId":"-"},"content":"     * but smaller than size of address book","lastModifiedDate":"2021-09-21"},{"lineNumber":202,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-09-21"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-09-21"},{"lineNumber":204,"author":{"gitId":"-"},"content":"    public void execute_invalidPersonIndexFilteredList_failure() {","lastModifiedDate":"2021-09-21"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2021-09-21"},{"lineNumber":206,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2021-09-21"},{"lineNumber":207,"author":{"gitId":"-"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2021-09-21"},{"lineNumber":208,"author":{"gitId":"-"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getPersonList().size());","lastModifiedDate":"2021-09-21"},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":210,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(outOfBoundIndex,","lastModifiedDate":"2021-09-21"},{"lineNumber":211,"author":{"gitId":"-"},"content":"                new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build());","lastModifiedDate":"2021-09-21"},{"lineNumber":212,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":213,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2021-09-21"},{"lineNumber":214,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-21"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":216,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-09-21"},{"lineNumber":217,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2021-09-21"},{"lineNumber":218,"author":{"gitId":"-"},"content":"        final EditCommand standardCommand \u003d new EditCommand(INDEX_FIRST_PERSON, DESC_AMY);","lastModifiedDate":"2021-09-21"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":220,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2021-09-21"},{"lineNumber":221,"author":{"gitId":"-"},"content":"        EditPersonDescriptor copyDescriptor \u003d new EditPersonDescriptor(DESC_AMY);","lastModifiedDate":"2021-09-21"},{"lineNumber":222,"author":{"gitId":"-"},"content":"        EditCommand commandWithSameValues \u003d new EditCommand(INDEX_FIRST_PERSON, copyDescriptor);","lastModifiedDate":"2021-09-21"},{"lineNumber":223,"author":{"gitId":"-"},"content":"        assertTrue(standardCommand.equals(commandWithSameValues));","lastModifiedDate":"2021-09-21"},{"lineNumber":224,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":225,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-09-21"},{"lineNumber":226,"author":{"gitId":"-"},"content":"        assertTrue(standardCommand.equals(standardCommand));","lastModifiedDate":"2021-09-21"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":228,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-09-21"},{"lineNumber":229,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(null));","lastModifiedDate":"2021-09-21"},{"lineNumber":230,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":231,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2021-09-21"},{"lineNumber":232,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(new ClearCommand()));","lastModifiedDate":"2021-09-21"},{"lineNumber":233,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":234,"author":{"gitId":"-"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2021-09-21"},{"lineNumber":235,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(new EditCommand(INDEX_SECOND_PERSON, DESC_AMY)));","lastModifiedDate":"2021-09-21"},{"lineNumber":236,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":237,"author":{"gitId":"-"},"content":"        // different descriptor -\u003e returns false","lastModifiedDate":"2021-09-21"},{"lineNumber":238,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(new EditCommand(INDEX_FIRST_PERSON, DESC_BOB)));","lastModifiedDate":"2021-09-21"},{"lineNumber":239,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-21"},{"lineNumber":240,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":241,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-09-21"}],"authorContributionMap":{"houtenteo":14,"pranav-ganesh":91,"-":136}},{"path":"src/test/java/seedu/address/logic/commands/FilterCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Kangxun"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-10-08"},{"lineNumber":2,"author":{"gitId":"Kangxun"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":3,"author":{"gitId":"Kangxun"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-09"},{"lineNumber":4,"author":{"gitId":"Kangxun"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-09"},{"lineNumber":5,"author":{"gitId":"Kangxun"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-11-07"},{"lineNumber":6,"author":{"gitId":"Kangxun"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_COUNT;","lastModifiedDate":"2021-10-25"},{"lineNumber":7,"author":{"gitId":"Kangxun"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_CATEGORY_CALLED;","lastModifiedDate":"2021-10-25"},{"lineNumber":8,"author":{"gitId":"Kangxun"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_CATEGORY_GENDER;","lastModifiedDate":"2021-10-25"},{"lineNumber":9,"author":{"gitId":"Kangxun"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_COUNT_3;","lastModifiedDate":"2021-10-09"},{"lineNumber":10,"author":{"gitId":"Kangxun"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_COUNT_5;","lastModifiedDate":"2021-10-09"},{"lineNumber":11,"author":{"gitId":"Kangxun"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-10-08"},{"lineNumber":12,"author":{"gitId":"Kangxun"},"content":"import static seedu.address.logic.commands.FilterCommand.MESSAGE_SUCCESS;","lastModifiedDate":"2021-10-08"},{"lineNumber":13,"author":{"gitId":"Kangxun"},"content":"import static seedu.address.logic.comparators.PersonComparator.MESSAGE_INVALID_CATEGORY;","lastModifiedDate":"2021-10-25"},{"lineNumber":14,"author":{"gitId":"Kangxun"},"content":"import static seedu.address.model.ModelManager.MESSAGE_INVALID_LIMIT;","lastModifiedDate":"2021-10-25"},{"lineNumber":15,"author":{"gitId":"Kangxun"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-25"},{"lineNumber":16,"author":{"gitId":"Kangxun"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2021-10-08"},{"lineNumber":17,"author":{"gitId":"Kangxun"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":18,"author":{"gitId":"Kangxun"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-08"},{"lineNumber":19,"author":{"gitId":"Kangxun"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":20,"author":{"gitId":"Kangxun"},"content":"import seedu.address.logic.comparators.CalledComparator;","lastModifiedDate":"2021-10-25"},{"lineNumber":21,"author":{"gitId":"Kangxun"},"content":"import seedu.address.logic.comparators.exceptions.ComparatorException;","lastModifiedDate":"2021-10-25"},{"lineNumber":22,"author":{"gitId":"Kangxun"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-10-08"},{"lineNumber":23,"author":{"gitId":"Kangxun"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2021-10-08"},{"lineNumber":24,"author":{"gitId":"Kangxun"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2021-10-08"},{"lineNumber":25,"author":{"gitId":"Kangxun"},"content":"import seedu.address.model.category.Category;","lastModifiedDate":"2021-10-09"},{"lineNumber":26,"author":{"gitId":"Kangxun"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":27,"author":{"gitId":"Kangxun"},"content":"/**","lastModifiedDate":"2021-10-08"},{"lineNumber":28,"author":{"gitId":"Kangxun"},"content":" * Contains integration tests (interaction with the Model) and unit tests for RemarkCommand.","lastModifiedDate":"2021-10-08"},{"lineNumber":29,"author":{"gitId":"Kangxun"},"content":" */","lastModifiedDate":"2021-10-08"},{"lineNumber":30,"author":{"gitId":"Kangxun"},"content":"public class FilterCommandTest {","lastModifiedDate":"2021-10-08"},{"lineNumber":31,"author":{"gitId":"Kangxun"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":32,"author":{"gitId":"Kangxun"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2021-10-08"},{"lineNumber":33,"author":{"gitId":"Kangxun"},"content":"    private Category validCategoryCalled \u003d new Category(VALID_CATEGORY_CALLED);","lastModifiedDate":"2021-10-25"},{"lineNumber":34,"author":{"gitId":"Kangxun"},"content":"    private Category validCategoryGender \u003d new Category(VALID_CATEGORY_GENDER);","lastModifiedDate":"2021-10-25"},{"lineNumber":35,"author":{"gitId":"Kangxun"},"content":"    private Integer invalidCount \u003d Integer.valueOf(INVALID_COUNT);","lastModifiedDate":"2021-10-25"},{"lineNumber":36,"author":{"gitId":"Kangxun"},"content":"    private Integer validCountThree \u003d Integer.valueOf(VALID_COUNT_3);","lastModifiedDate":"2021-10-09"},{"lineNumber":37,"author":{"gitId":"Kangxun"},"content":"    private Integer validCountFive \u003d Integer.valueOf(VALID_COUNT_5);","lastModifiedDate":"2021-10-09"},{"lineNumber":38,"author":{"gitId":"Kangxun"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":39,"author":{"gitId":"Kangxun"},"content":"    @Test","lastModifiedDate":"2021-10-08"},{"lineNumber":40,"author":{"gitId":"Kangxun"},"content":"    public void constructor_nullCategory_throwsNullPointerException() {","lastModifiedDate":"2021-10-25"},{"lineNumber":41,"author":{"gitId":"Kangxun"},"content":"        assertThrows(NullPointerException.class, () -\u003e new FilterCommand(null, validCountThree));","lastModifiedDate":"2021-10-25"},{"lineNumber":42,"author":{"gitId":"Kangxun"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":43,"author":{"gitId":"Kangxun"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":44,"author":{"gitId":"Kangxun"},"content":"    @Test","lastModifiedDate":"2021-10-25"},{"lineNumber":45,"author":{"gitId":"Kangxun"},"content":"    public void constructor_nullCount_throwsNullPointerException() {","lastModifiedDate":"2021-10-25"},{"lineNumber":46,"author":{"gitId":"Kangxun"},"content":"        assertThrows(NullPointerException.class, () -\u003e new FilterCommand(validCategoryCalled, null));","lastModifiedDate":"2021-10-25"},{"lineNumber":47,"author":{"gitId":"Kangxun"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":48,"author":{"gitId":"Kangxun"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":49,"author":{"gitId":"Kangxun"},"content":"    @Test","lastModifiedDate":"2021-10-25"},{"lineNumber":50,"author":{"gitId":"Kangxun"},"content":"    public void execute_validCategoryAndCount_filterSuccessful() throws Exception {","lastModifiedDate":"2021-10-25"},{"lineNumber":51,"author":{"gitId":"Kangxun"},"content":"        Model expectedModel \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2021-10-25"},{"lineNumber":52,"author":{"gitId":"Kangxun"},"content":"        expectedModel.sortFilteredPersonList(new CalledComparator());","lastModifiedDate":"2021-10-25"},{"lineNumber":53,"author":{"gitId":"Kangxun"},"content":"        expectedModel.limitFilteredPersonList(3);","lastModifiedDate":"2021-10-25"},{"lineNumber":54,"author":{"gitId":"Kangxun"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":55,"author":{"gitId":"Kangxun"},"content":"        assertCommandSuccess(new FilterCommand(validCategoryCalled, validCountThree),","lastModifiedDate":"2021-10-25"},{"lineNumber":56,"author":{"gitId":"Kangxun"},"content":"                model, String.format(MESSAGE_SUCCESS, \"[CALLED]\"), expectedModel);","lastModifiedDate":"2021-10-25"},{"lineNumber":57,"author":{"gitId":"Kangxun"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":58,"author":{"gitId":"Kangxun"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":59,"author":{"gitId":"Kangxun"},"content":"    @Test","lastModifiedDate":"2021-10-25"},{"lineNumber":60,"author":{"gitId":"Kangxun"},"content":"    public void execute_invalidCategoryValidCount_throwsComparatorException() {","lastModifiedDate":"2021-10-25"},{"lineNumber":61,"author":{"gitId":"Kangxun"},"content":"        FilterCommand filterCommand \u003d new FilterCommand(new Category(\"Phone\"), validCountThree);","lastModifiedDate":"2021-10-25"},{"lineNumber":62,"author":{"gitId":"Kangxun"},"content":"        assertThrows(ComparatorException.class,","lastModifiedDate":"2021-11-07"},{"lineNumber":63,"author":{"gitId":"Kangxun"},"content":"            String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2021-11-07"},{"lineNumber":64,"author":{"gitId":"Kangxun"},"content":"                MESSAGE_INVALID_CATEGORY + FilterCommand.MESSAGE_USAGE), () -\u003e filterCommand.execute(model));","lastModifiedDate":"2021-11-07"},{"lineNumber":65,"author":{"gitId":"Kangxun"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":66,"author":{"gitId":"Kangxun"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":67,"author":{"gitId":"Kangxun"},"content":"    @Test","lastModifiedDate":"2021-10-25"},{"lineNumber":68,"author":{"gitId":"Kangxun"},"content":"    public void execute_validCategoryInvalidCount_throwsIndexOutOfBoundsException() {","lastModifiedDate":"2021-10-25"},{"lineNumber":69,"author":{"gitId":"Kangxun"},"content":"        FilterCommand filterCommand \u003d new FilterCommand(validCategoryCalled, invalidCount);","lastModifiedDate":"2021-10-25"},{"lineNumber":70,"author":{"gitId":"Kangxun"},"content":"        assertThrows(IndexOutOfBoundsException.class, MESSAGE_INVALID_LIMIT, () -\u003e filterCommand.execute(model));","lastModifiedDate":"2021-10-25"},{"lineNumber":71,"author":{"gitId":"Kangxun"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":72,"author":{"gitId":"Kangxun"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":73,"author":{"gitId":"Kangxun"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":74,"author":{"gitId":"Kangxun"},"content":"    @Test","lastModifiedDate":"2021-10-09"},{"lineNumber":75,"author":{"gitId":"Kangxun"},"content":"    public void equals() {","lastModifiedDate":"2021-10-09"},{"lineNumber":76,"author":{"gitId":"Kangxun"},"content":"        final FilterCommand standardCommand \u003d new FilterCommand(validCategoryCalled, validCountThree);","lastModifiedDate":"2021-10-25"},{"lineNumber":77,"author":{"gitId":"Kangxun"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":78,"author":{"gitId":"Kangxun"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2021-10-09"},{"lineNumber":79,"author":{"gitId":"Kangxun"},"content":"        FilterCommand commandWithSameValues \u003d new FilterCommand(validCategoryCalled, validCountThree);","lastModifiedDate":"2021-10-25"},{"lineNumber":80,"author":{"gitId":"Kangxun"},"content":"        assertTrue(standardCommand.equals(commandWithSameValues));","lastModifiedDate":"2021-10-09"},{"lineNumber":81,"author":{"gitId":"Kangxun"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":82,"author":{"gitId":"Kangxun"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-10-09"},{"lineNumber":83,"author":{"gitId":"Kangxun"},"content":"        assertTrue(standardCommand.equals(standardCommand));","lastModifiedDate":"2021-10-09"},{"lineNumber":84,"author":{"gitId":"Kangxun"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":85,"author":{"gitId":"Kangxun"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-10-09"},{"lineNumber":86,"author":{"gitId":"Kangxun"},"content":"        assertFalse(standardCommand.equals(null));","lastModifiedDate":"2021-10-09"},{"lineNumber":87,"author":{"gitId":"Kangxun"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":88,"author":{"gitId":"Kangxun"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2021-10-09"},{"lineNumber":89,"author":{"gitId":"Kangxun"},"content":"        assertFalse(standardCommand.equals(new ClearCommand()));","lastModifiedDate":"2021-10-09"},{"lineNumber":90,"author":{"gitId":"Kangxun"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":91,"author":{"gitId":"Kangxun"},"content":"        // different category -\u003e returns false","lastModifiedDate":"2021-10-09"},{"lineNumber":92,"author":{"gitId":"Kangxun"},"content":"        assertFalse(standardCommand.equals(new FilterCommand(validCategoryGender, validCountThree)));","lastModifiedDate":"2021-10-25"},{"lineNumber":93,"author":{"gitId":"Kangxun"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":94,"author":{"gitId":"Kangxun"},"content":"        // different count -\u003e returns false","lastModifiedDate":"2021-10-09"},{"lineNumber":95,"author":{"gitId":"Kangxun"},"content":"        assertFalse(standardCommand.equals(new FilterCommand(validCategoryCalled, validCountFive)));","lastModifiedDate":"2021-10-25"},{"lineNumber":96,"author":{"gitId":"Kangxun"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":97,"author":{"gitId":"Kangxun"},"content":"}","lastModifiedDate":"2021-10-08"}],"authorContributionMap":{"Kangxun":97}},{"path":"src/test/java/seedu/address/logic/commands/FindAllCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"houtenteo"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-10-27"},{"lineNumber":2,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":3,"author":{"gitId":"houtenteo"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-27"},{"lineNumber":4,"author":{"gitId":"houtenteo"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-27"},{"lineNumber":5,"author":{"gitId":"houtenteo"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-27"},{"lineNumber":6,"author":{"gitId":"houtenteo"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_PERSONS_LISTED_OVERVIEW;","lastModifiedDate":"2021-10-27"},{"lineNumber":7,"author":{"gitId":"houtenteo"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-10-27"},{"lineNumber":8,"author":{"gitId":"houtenteo"},"content":"import static seedu.address.testutil.TypicalPersons.BENSON;","lastModifiedDate":"2021-10-27"},{"lineNumber":9,"author":{"gitId":"houtenteo"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2021-10-27"},{"lineNumber":10,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":11,"author":{"gitId":"houtenteo"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-27"},{"lineNumber":12,"author":{"gitId":"houtenteo"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-10-27"},{"lineNumber":13,"author":{"gitId":"houtenteo"},"content":"import java.util.Collections;","lastModifiedDate":"2021-10-27"},{"lineNumber":14,"author":{"gitId":"houtenteo"},"content":"import java.util.List;","lastModifiedDate":"2021-10-27"},{"lineNumber":15,"author":{"gitId":"houtenteo"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2021-10-27"},{"lineNumber":16,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":17,"author":{"gitId":"houtenteo"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-27"},{"lineNumber":18,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":19,"author":{"gitId":"houtenteo"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-10-27"},{"lineNumber":20,"author":{"gitId":"houtenteo"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2021-10-27"},{"lineNumber":21,"author":{"gitId":"houtenteo"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2021-10-27"},{"lineNumber":22,"author":{"gitId":"houtenteo"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2021-10-27"},{"lineNumber":23,"author":{"gitId":"pranav-ganesh"},"content":"import seedu.address.model.person.predicates.CalledPredicate;","lastModifiedDate":"2021-11-04"},{"lineNumber":24,"author":{"gitId":"houtenteo"},"content":"import seedu.address.model.person.predicates.CombinedPredicate;","lastModifiedDate":"2021-10-27"},{"lineNumber":25,"author":{"gitId":"houtenteo"},"content":"import seedu.address.model.person.predicates.EmailContainsKeywordsPredicate;","lastModifiedDate":"2021-10-27"},{"lineNumber":26,"author":{"gitId":"houtenteo"},"content":"import seedu.address.model.person.predicates.NameContainsKeywordsPredicate;","lastModifiedDate":"2021-10-27"},{"lineNumber":27,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":28,"author":{"gitId":"houtenteo"},"content":"/**","lastModifiedDate":"2021-10-27"},{"lineNumber":29,"author":{"gitId":"houtenteo"},"content":" * Contains integration tests (interaction with the Model) for {@code FindCommand}.","lastModifiedDate":"2021-10-27"},{"lineNumber":30,"author":{"gitId":"houtenteo"},"content":" */","lastModifiedDate":"2021-10-27"},{"lineNumber":31,"author":{"gitId":"houtenteo"},"content":"public class FindAllCommandTest {","lastModifiedDate":"2021-10-27"},{"lineNumber":32,"author":{"gitId":"houtenteo"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2021-10-27"},{"lineNumber":33,"author":{"gitId":"houtenteo"},"content":"    private Model expectedModel \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2021-10-27"},{"lineNumber":34,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":35,"author":{"gitId":"houtenteo"},"content":"    @Test","lastModifiedDate":"2021-10-27"},{"lineNumber":36,"author":{"gitId":"houtenteo"},"content":"    public void equals() {","lastModifiedDate":"2021-10-27"},{"lineNumber":37,"author":{"gitId":"houtenteo"},"content":"        NameContainsKeywordsPredicate firstNamePredicate \u003d","lastModifiedDate":"2021-10-27"},{"lineNumber":38,"author":{"gitId":"houtenteo"},"content":"                new NameContainsKeywordsPredicate(Collections.singletonList(\"first name\"), false);","lastModifiedDate":"2021-10-27"},{"lineNumber":39,"author":{"gitId":"houtenteo"},"content":"        NameContainsKeywordsPredicate secondNamePredicate \u003d","lastModifiedDate":"2021-10-27"},{"lineNumber":40,"author":{"gitId":"houtenteo"},"content":"                new NameContainsKeywordsPredicate(Collections.singletonList(\"second name\"), false);","lastModifiedDate":"2021-10-27"},{"lineNumber":41,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":42,"author":{"gitId":"houtenteo"},"content":"        EmailContainsKeywordsPredicate firstEmailPredicate \u003d","lastModifiedDate":"2021-10-27"},{"lineNumber":43,"author":{"gitId":"houtenteo"},"content":"                new EmailContainsKeywordsPredicate(Collections.singletonList(\"first email\"), false);","lastModifiedDate":"2021-10-27"},{"lineNumber":44,"author":{"gitId":"houtenteo"},"content":"        EmailContainsKeywordsPredicate secondEmailPredicate \u003d","lastModifiedDate":"2021-10-27"},{"lineNumber":45,"author":{"gitId":"houtenteo"},"content":"                new EmailContainsKeywordsPredicate(Collections.singletonList(\"second email\"), false);","lastModifiedDate":"2021-10-27"},{"lineNumber":46,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":47,"author":{"gitId":"houtenteo"},"content":"        ArrayList\u003cPredicate\u003cPerson\u003e\u003e firstPredicateList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-27"},{"lineNumber":48,"author":{"gitId":"houtenteo"},"content":"        ArrayList\u003cPredicate\u003cPerson\u003e\u003e secondPredicateList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-27"},{"lineNumber":49,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":50,"author":{"gitId":"houtenteo"},"content":"        firstPredicateList.add(firstNamePredicate);","lastModifiedDate":"2021-10-27"},{"lineNumber":51,"author":{"gitId":"houtenteo"},"content":"        firstPredicateList.add(firstEmailPredicate);","lastModifiedDate":"2021-10-27"},{"lineNumber":52,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":53,"author":{"gitId":"houtenteo"},"content":"        secondPredicateList.add(secondNamePredicate);","lastModifiedDate":"2021-10-27"},{"lineNumber":54,"author":{"gitId":"houtenteo"},"content":"        secondPredicateList.add(secondEmailPredicate);","lastModifiedDate":"2021-10-27"},{"lineNumber":55,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":56,"author":{"gitId":"houtenteo"},"content":"        CombinedPredicate firstPredicate \u003d new CombinedPredicate(firstPredicateList, false);","lastModifiedDate":"2021-10-27"},{"lineNumber":57,"author":{"gitId":"houtenteo"},"content":"        CombinedPredicate secondPredicate \u003d new CombinedPredicate(secondPredicateList, false);","lastModifiedDate":"2021-10-27"},{"lineNumber":58,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":59,"author":{"gitId":"houtenteo"},"content":"        FindAnyCommand findFirstCommand \u003d new FindAnyCommand(firstPredicate);","lastModifiedDate":"2021-10-28"},{"lineNumber":60,"author":{"gitId":"houtenteo"},"content":"        FindAnyCommand findSecondCommand \u003d new FindAnyCommand(secondPredicate);","lastModifiedDate":"2021-10-28"},{"lineNumber":61,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":62,"author":{"gitId":"houtenteo"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-10-27"},{"lineNumber":63,"author":{"gitId":"houtenteo"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommand));","lastModifiedDate":"2021-10-27"},{"lineNumber":64,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":65,"author":{"gitId":"houtenteo"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2021-10-27"},{"lineNumber":66,"author":{"gitId":"houtenteo"},"content":"        FindAnyCommand findFirstCommandCopy \u003d new FindAnyCommand(firstPredicate);","lastModifiedDate":"2021-10-28"},{"lineNumber":67,"author":{"gitId":"houtenteo"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommandCopy));","lastModifiedDate":"2021-10-27"},{"lineNumber":68,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":69,"author":{"gitId":"houtenteo"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2021-10-27"},{"lineNumber":70,"author":{"gitId":"houtenteo"},"content":"        assertFalse(findFirstCommand.equals(1));","lastModifiedDate":"2021-10-27"},{"lineNumber":71,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":72,"author":{"gitId":"houtenteo"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-10-27"},{"lineNumber":73,"author":{"gitId":"houtenteo"},"content":"        assertFalse(findFirstCommand.equals(null));","lastModifiedDate":"2021-10-27"},{"lineNumber":74,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":75,"author":{"gitId":"houtenteo"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2021-10-27"},{"lineNumber":76,"author":{"gitId":"houtenteo"},"content":"        assertFalse(findFirstCommand.equals(findSecondCommand));","lastModifiedDate":"2021-10-27"},{"lineNumber":77,"author":{"gitId":"houtenteo"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":78,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":79,"author":{"gitId":"houtenteo"},"content":"    @Test","lastModifiedDate":"2021-10-27"},{"lineNumber":80,"author":{"gitId":"houtenteo"},"content":"    public void execute_multipleKeywords_noPersonFound() {","lastModifiedDate":"2021-10-27"},{"lineNumber":81,"author":{"gitId":"houtenteo"},"content":"        // No one has all three of kurz elle and knuz in their name","lastModifiedDate":"2021-10-27"},{"lineNumber":82,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":83,"author":{"gitId":"houtenteo"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 0);","lastModifiedDate":"2021-10-27"},{"lineNumber":84,"author":{"gitId":"houtenteo"},"content":"        NameContainsKeywordsPredicate predicate \u003d prepareNamePredicate(\"Kurz Elle Kunz\");","lastModifiedDate":"2021-10-27"},{"lineNumber":85,"author":{"gitId":"houtenteo"},"content":"        FindAnyCommand command \u003d new FindAnyCommand(predicate);","lastModifiedDate":"2021-10-28"},{"lineNumber":86,"author":{"gitId":"houtenteo"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2021-10-27"},{"lineNumber":87,"author":{"gitId":"houtenteo"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-10-27"},{"lineNumber":88,"author":{"gitId":"houtenteo"},"content":"        assertEquals(List.of(), model.getFilteredPersonList());","lastModifiedDate":"2021-10-27"},{"lineNumber":89,"author":{"gitId":"houtenteo"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":90,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":91,"author":{"gitId":"houtenteo"},"content":"    @Test","lastModifiedDate":"2021-10-27"},{"lineNumber":92,"author":{"gitId":"houtenteo"},"content":"    public void execute_multipleFields_onePersonFound() {","lastModifiedDate":"2021-10-27"},{"lineNumber":93,"author":{"gitId":"pranav-ganesh"},"content":"        // finding all with isCalled as false as the more generic field,","lastModifiedDate":"2021-11-04"},{"lineNumber":94,"author":{"gitId":"houtenteo"},"content":"        // then finding the name \u0027ben\u0027 to show only Benson since the only contact that has not been called","lastModifiedDate":"2021-10-27"},{"lineNumber":95,"author":{"gitId":"houtenteo"},"content":"        // and has a ben substring in the name is Benson","lastModifiedDate":"2021-10-27"},{"lineNumber":96,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":97,"author":{"gitId":"houtenteo"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 1);","lastModifiedDate":"2021-10-27"},{"lineNumber":98,"author":{"gitId":"houtenteo"},"content":"        NameContainsKeywordsPredicate namePredicate \u003d prepareNamePredicate(\"ben\");","lastModifiedDate":"2021-10-27"},{"lineNumber":99,"author":{"gitId":"pranav-ganesh"},"content":"        CalledPredicate calledPredicate \u003d prepareCalledPredicate(\"false\");","lastModifiedDate":"2021-11-04"},{"lineNumber":100,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":101,"author":{"gitId":"houtenteo"},"content":"        ArrayList\u003cPredicate\u003cPerson\u003e\u003e predicateList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-27"},{"lineNumber":102,"author":{"gitId":"pranav-ganesh"},"content":"        predicateList.add(calledPredicate);","lastModifiedDate":"2021-11-04"},{"lineNumber":103,"author":{"gitId":"houtenteo"},"content":"        predicateList.add(namePredicate);","lastModifiedDate":"2021-10-27"},{"lineNumber":104,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":105,"author":{"gitId":"houtenteo"},"content":"        CombinedPredicate predicate \u003d new CombinedPredicate(predicateList, true);","lastModifiedDate":"2021-10-27"},{"lineNumber":106,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":107,"author":{"gitId":"houtenteo"},"content":"        FindAllCommand command \u003d new FindAllCommand(predicate);","lastModifiedDate":"2021-10-27"},{"lineNumber":108,"author":{"gitId":"houtenteo"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2021-10-27"},{"lineNumber":109,"author":{"gitId":"houtenteo"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-10-27"},{"lineNumber":110,"author":{"gitId":"houtenteo"},"content":"        assertEquals(List.of(BENSON), model.getFilteredPersonList());","lastModifiedDate":"2021-10-27"},{"lineNumber":111,"author":{"gitId":"houtenteo"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":112,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":113,"author":{"gitId":"houtenteo"},"content":"    /**","lastModifiedDate":"2021-10-27"},{"lineNumber":114,"author":{"gitId":"houtenteo"},"content":"     * Parses {@code userInput} into a {@code NameContainsKeywordsPredicate}.","lastModifiedDate":"2021-10-27"},{"lineNumber":115,"author":{"gitId":"houtenteo"},"content":"     */","lastModifiedDate":"2021-10-27"},{"lineNumber":116,"author":{"gitId":"houtenteo"},"content":"    private NameContainsKeywordsPredicate prepareNamePredicate(String userInput) {","lastModifiedDate":"2021-10-27"},{"lineNumber":117,"author":{"gitId":"houtenteo"},"content":"        return new NameContainsKeywordsPredicate(Arrays.asList(userInput.split(\"\\\\s+\")), true);","lastModifiedDate":"2021-10-27"},{"lineNumber":118,"author":{"gitId":"houtenteo"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":119,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":120,"author":{"gitId":"houtenteo"},"content":"    /**","lastModifiedDate":"2021-10-27"},{"lineNumber":121,"author":{"gitId":"houtenteo"},"content":"     * Parses {@code userInput} into a {@code EmailContainsKeywordsPredicate}.","lastModifiedDate":"2021-10-27"},{"lineNumber":122,"author":{"gitId":"houtenteo"},"content":"     */","lastModifiedDate":"2021-10-27"},{"lineNumber":123,"author":{"gitId":"pranav-ganesh"},"content":"    private CalledPredicate prepareCalledPredicate(String userInput) {","lastModifiedDate":"2021-11-04"},{"lineNumber":124,"author":{"gitId":"pranav-ganesh"},"content":"        return new CalledPredicate(Arrays.asList(userInput.split(\"\\\\s+\")), true);","lastModifiedDate":"2021-11-04"},{"lineNumber":125,"author":{"gitId":"houtenteo"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":126,"author":{"gitId":"houtenteo"},"content":"}","lastModifiedDate":"2021-10-27"}],"authorContributionMap":{"houtenteo":120,"pranav-ganesh":6}},{"path":"src/test/java/seedu/address/logic/commands/FindAnyCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_PERSONS_LISTED_OVERVIEW;","lastModifiedDate":"2017-06-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2018-08-08"},{"lineNumber":8,"author":{"gitId":"houtenteo"},"content":"import static seedu.address.testutil.TypicalPersons.BENSON;","lastModifiedDate":"2021-10-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.CARL;","lastModifiedDate":"2017-07-19"},{"lineNumber":10,"author":{"gitId":"houtenteo"},"content":"import static seedu.address.testutil.TypicalPersons.DANIEL;","lastModifiedDate":"2021-10-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ELLE;","lastModifiedDate":"2017-07-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.FIONA;","lastModifiedDate":"2017-07-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"houtenteo"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"houtenteo"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2021-10-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"houtenteo"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2021-10-27"},{"lineNumber":26,"author":{"gitId":"houtenteo"},"content":"import seedu.address.model.person.predicates.CombinedPredicate;","lastModifiedDate":"2021-10-27"},{"lineNumber":27,"author":{"gitId":"houtenteo"},"content":"import seedu.address.model.person.predicates.EmailContainsKeywordsPredicate;","lastModifiedDate":"2021-10-27"},{"lineNumber":28,"author":{"gitId":"houtenteo"},"content":"import seedu.address.model.person.predicates.NameContainsKeywordsPredicate;","lastModifiedDate":"2021-10-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) for {@code FindCommand}.","lastModifiedDate":"2017-06-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":33,"author":{"gitId":"houtenteo"},"content":"public class FindAnyCommandTest {","lastModifiedDate":"2021-10-28"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private Model expectedModel \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2018-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-06-27"},{"lineNumber":39,"author":{"gitId":"houtenteo"},"content":"        NameContainsKeywordsPredicate firstNamePredicate \u003d","lastModifiedDate":"2021-10-27"},{"lineNumber":40,"author":{"gitId":"houtenteo"},"content":"                new NameContainsKeywordsPredicate(Collections.singletonList(\"first name\"), false);","lastModifiedDate":"2021-10-27"},{"lineNumber":41,"author":{"gitId":"houtenteo"},"content":"        NameContainsKeywordsPredicate secondNamePredicate \u003d","lastModifiedDate":"2021-10-27"},{"lineNumber":42,"author":{"gitId":"houtenteo"},"content":"                new NameContainsKeywordsPredicate(Collections.singletonList(\"second name\"), false);","lastModifiedDate":"2021-10-27"},{"lineNumber":43,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":44,"author":{"gitId":"houtenteo"},"content":"        EmailContainsKeywordsPredicate firstEmailPredicate \u003d","lastModifiedDate":"2021-10-27"},{"lineNumber":45,"author":{"gitId":"houtenteo"},"content":"                new EmailContainsKeywordsPredicate(Collections.singletonList(\"first email\"), false);","lastModifiedDate":"2021-10-27"},{"lineNumber":46,"author":{"gitId":"houtenteo"},"content":"        EmailContainsKeywordsPredicate secondEmailPredicate \u003d","lastModifiedDate":"2021-10-27"},{"lineNumber":47,"author":{"gitId":"houtenteo"},"content":"                new EmailContainsKeywordsPredicate(Collections.singletonList(\"second email\"), false);","lastModifiedDate":"2021-10-27"},{"lineNumber":48,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":49,"author":{"gitId":"houtenteo"},"content":"        ArrayList\u003cPredicate\u003cPerson\u003e\u003e firstPredicateList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-27"},{"lineNumber":50,"author":{"gitId":"houtenteo"},"content":"        ArrayList\u003cPredicate\u003cPerson\u003e\u003e secondPredicateList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-27"},{"lineNumber":51,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":52,"author":{"gitId":"houtenteo"},"content":"        firstPredicateList.add(firstNamePredicate);","lastModifiedDate":"2021-10-27"},{"lineNumber":53,"author":{"gitId":"houtenteo"},"content":"        firstPredicateList.add(firstEmailPredicate);","lastModifiedDate":"2021-10-27"},{"lineNumber":54,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":55,"author":{"gitId":"houtenteo"},"content":"        secondPredicateList.add(secondNamePredicate);","lastModifiedDate":"2021-10-27"},{"lineNumber":56,"author":{"gitId":"houtenteo"},"content":"        secondPredicateList.add(secondEmailPredicate);","lastModifiedDate":"2021-10-27"},{"lineNumber":57,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":58,"author":{"gitId":"houtenteo"},"content":"        CombinedPredicate firstPredicate \u003d new CombinedPredicate(firstPredicateList, false);","lastModifiedDate":"2021-10-27"},{"lineNumber":59,"author":{"gitId":"houtenteo"},"content":"        CombinedPredicate secondPredicate \u003d new CombinedPredicate(secondPredicateList, false);","lastModifiedDate":"2021-10-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":61,"author":{"gitId":"houtenteo"},"content":"        FindAnyCommand findFirstCommand \u003d new FindAnyCommand(firstPredicate);","lastModifiedDate":"2021-10-28"},{"lineNumber":62,"author":{"gitId":"houtenteo"},"content":"        FindAnyCommand findSecondCommand \u003d new FindAnyCommand(secondPredicate);","lastModifiedDate":"2021-10-28"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":68,"author":{"gitId":"houtenteo"},"content":"        FindAnyCommand findFirstCommandCopy \u003d new FindAnyCommand(firstPredicate);","lastModifiedDate":"2021-10-28"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommandCopy));","lastModifiedDate":"2017-06-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(1));","lastModifiedDate":"2017-06-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(null));","lastModifiedDate":"2017-06-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(findSecondCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public void execute_zeroKeywords_noPersonFound() {","lastModifiedDate":"2017-08-15"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 0);","lastModifiedDate":"2017-06-12"},{"lineNumber":84,"author":{"gitId":"houtenteo"},"content":"        NameContainsKeywordsPredicate predicate \u003d prepareNamePredicate(\" \");","lastModifiedDate":"2021-10-27"},{"lineNumber":85,"author":{"gitId":"houtenteo"},"content":"        FindAnyCommand command \u003d new FindAnyCommand(predicate);","lastModifiedDate":"2021-10-28"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertEquals(Collections.emptyList(), model.getFilteredPersonList());","lastModifiedDate":"2018-08-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public void execute_multipleKeywords_multiplePersonsFound() {","lastModifiedDate":"2017-08-15"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 3);","lastModifiedDate":"2017-06-12"},{"lineNumber":94,"author":{"gitId":"houtenteo"},"content":"        NameContainsKeywordsPredicate predicate \u003d prepareNamePredicate(\"Kurz Elle Kunz\");","lastModifiedDate":"2021-10-27"},{"lineNumber":95,"author":{"gitId":"houtenteo"},"content":"        FindAnyCommand command \u003d new FindAnyCommand(predicate);","lastModifiedDate":"2021-10-28"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertEquals(Arrays.asList(CARL, ELLE, FIONA), model.getFilteredPersonList());","lastModifiedDate":"2018-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":101,"author":{"gitId":"houtenteo"},"content":"    @Test","lastModifiedDate":"2021-10-27"},{"lineNumber":102,"author":{"gitId":"houtenteo"},"content":"    public void execute_multipleKeywordsMultipleFields_multiplePersonsFound() {","lastModifiedDate":"2021-10-27"},{"lineNumber":103,"author":{"gitId":"houtenteo"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 5);","lastModifiedDate":"2021-10-27"},{"lineNumber":104,"author":{"gitId":"houtenteo"},"content":"        NameContainsKeywordsPredicate namePredicate \u003d prepareNamePredicate(\"Kurz Elle Kunz\");","lastModifiedDate":"2021-10-27"},{"lineNumber":105,"author":{"gitId":"houtenteo"},"content":"        EmailContainsKeywordsPredicate emailPredicate \u003d prepareEmailPredicate(\"cornel john\");","lastModifiedDate":"2021-10-27"},{"lineNumber":106,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":107,"author":{"gitId":"houtenteo"},"content":"        ArrayList\u003cPredicate\u003cPerson\u003e\u003e predicateList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-27"},{"lineNumber":108,"author":{"gitId":"houtenteo"},"content":"        predicateList.add(namePredicate);","lastModifiedDate":"2021-10-27"},{"lineNumber":109,"author":{"gitId":"houtenteo"},"content":"        predicateList.add(emailPredicate);","lastModifiedDate":"2021-10-27"},{"lineNumber":110,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":111,"author":{"gitId":"houtenteo"},"content":"        CombinedPredicate predicate \u003d new CombinedPredicate(predicateList, false);","lastModifiedDate":"2021-10-27"},{"lineNumber":112,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":113,"author":{"gitId":"houtenteo"},"content":"        FindAnyCommand command \u003d new FindAnyCommand(predicate);","lastModifiedDate":"2021-10-28"},{"lineNumber":114,"author":{"gitId":"houtenteo"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2021-10-27"},{"lineNumber":115,"author":{"gitId":"houtenteo"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-10-27"},{"lineNumber":116,"author":{"gitId":"houtenteo"},"content":"        assertEquals(Arrays.asList(BENSON, CARL, DANIEL, ELLE, FIONA), model.getFilteredPersonList());","lastModifiedDate":"2021-10-27"},{"lineNumber":117,"author":{"gitId":"houtenteo"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":118,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-12"},{"lineNumber":120,"author":{"gitId":"-"},"content":"     * Parses {@code userInput} into a {@code NameContainsKeywordsPredicate}.","lastModifiedDate":"2018-08-08"},{"lineNumber":121,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-12"},{"lineNumber":122,"author":{"gitId":"houtenteo"},"content":"    private NameContainsKeywordsPredicate prepareNamePredicate(String userInput) {","lastModifiedDate":"2021-10-27"},{"lineNumber":123,"author":{"gitId":"houtenteo"},"content":"        return new NameContainsKeywordsPredicate(Arrays.asList(userInput.split(\"\\\\s+\")), false);","lastModifiedDate":"2021-10-26"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":125,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":126,"author":{"gitId":"houtenteo"},"content":"    /**","lastModifiedDate":"2021-10-27"},{"lineNumber":127,"author":{"gitId":"houtenteo"},"content":"     * Parses {@code userInput} into a {@code EmailContainsKeywordsPredicate}.","lastModifiedDate":"2021-10-27"},{"lineNumber":128,"author":{"gitId":"houtenteo"},"content":"     */","lastModifiedDate":"2021-10-27"},{"lineNumber":129,"author":{"gitId":"houtenteo"},"content":"    private EmailContainsKeywordsPredicate prepareEmailPredicate(String userInput) {","lastModifiedDate":"2021-10-27"},{"lineNumber":130,"author":{"gitId":"houtenteo"},"content":"        return new EmailContainsKeywordsPredicate(Arrays.asList(userInput.split(\"\\\\s+\")), false);","lastModifiedDate":"2021-10-27"},{"lineNumber":131,"author":{"gitId":"houtenteo"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":132,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"houtenteo":64,"-":68}},{"path":"src/test/java/seedu/address/logic/comparators/CalledComparatorTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Kangxun"},"content":"package seedu.address.logic.comparators;","lastModifiedDate":"2021-10-25"},{"lineNumber":2,"author":{"gitId":"Kangxun"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":3,"author":{"gitId":"Kangxun"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-25"},{"lineNumber":4,"author":{"gitId":"Kangxun"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-25"},{"lineNumber":5,"author":{"gitId":"Kangxun"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-25"},{"lineNumber":6,"author":{"gitId":"Kangxun"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-25"},{"lineNumber":7,"author":{"gitId":"Kangxun"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":8,"author":{"gitId":"Kangxun"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-25"},{"lineNumber":9,"author":{"gitId":"Kangxun"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":10,"author":{"gitId":"Kangxun"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2021-10-25"},{"lineNumber":11,"author":{"gitId":"Kangxun"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2021-10-25"},{"lineNumber":12,"author":{"gitId":"Kangxun"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":13,"author":{"gitId":"Kangxun"},"content":"/**","lastModifiedDate":"2021-10-25"},{"lineNumber":14,"author":{"gitId":"Kangxun"},"content":" * Test for PersonComparator which is used to compare whether a Person is called.","lastModifiedDate":"2021-10-25"},{"lineNumber":15,"author":{"gitId":"Kangxun"},"content":" */","lastModifiedDate":"2021-10-25"},{"lineNumber":16,"author":{"gitId":"Kangxun"},"content":"class CalledComparatorTest {","lastModifiedDate":"2021-10-25"},{"lineNumber":17,"author":{"gitId":"Kangxun"},"content":"    @Test","lastModifiedDate":"2021-10-25"},{"lineNumber":18,"author":{"gitId":"Kangxun"},"content":"    public void compare_sameCalled_returnsZero() {","lastModifiedDate":"2021-10-25"},{"lineNumber":19,"author":{"gitId":"pranav-ganesh"},"content":"        Person a \u003d new PersonBuilder().withName(\"Kent\").withCalled(\"true\")","lastModifiedDate":"2021-11-04"},{"lineNumber":20,"author":{"gitId":"Kangxun"},"content":"                .withPhone(\"88886666\").withEmail(\"nameComparator@test.com\").build();","lastModifiedDate":"2021-10-25"},{"lineNumber":21,"author":{"gitId":"pranav-ganesh"},"content":"        Person b \u003d new PersonBuilder().withName(\"Mike\").withCalled(\"true\")","lastModifiedDate":"2021-11-04"},{"lineNumber":22,"author":{"gitId":"Kangxun"},"content":"                .withPhone(\"99997777\").withEmail(\"nameComparator@test.org\").build();","lastModifiedDate":"2021-10-25"},{"lineNumber":23,"author":{"gitId":"Kangxun"},"content":"        assertEquals(0, new CalledComparator().compare(a, b));","lastModifiedDate":"2021-10-25"},{"lineNumber":24,"author":{"gitId":"Kangxun"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":25,"author":{"gitId":"Kangxun"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":26,"author":{"gitId":"Kangxun"},"content":"    @Test","lastModifiedDate":"2021-10-25"},{"lineNumber":27,"author":{"gitId":"Kangxun"},"content":"    public void compare_differentCalled_success() {","lastModifiedDate":"2021-10-25"},{"lineNumber":28,"author":{"gitId":"Kangxun"},"content":"        // Persons will be shown in this order: false, true","lastModifiedDate":"2021-10-25"},{"lineNumber":29,"author":{"gitId":"Kangxun"},"content":"        // Person a is not called","lastModifiedDate":"2021-10-25"},{"lineNumber":30,"author":{"gitId":"pranav-ganesh"},"content":"        Person a \u003d new PersonBuilder().withName(\"Acorn\").withCalled(\"false\")","lastModifiedDate":"2021-11-04"},{"lineNumber":31,"author":{"gitId":"Kangxun"},"content":"                .withPhone(\"88886666\").withEmail(\"nameComparator@test.com\").build();","lastModifiedDate":"2021-10-25"},{"lineNumber":32,"author":{"gitId":"pranav-ganesh"},"content":"        Person b \u003d new PersonBuilder().withName(\"Kent\").withCalled(\"true\")","lastModifiedDate":"2021-11-04"},{"lineNumber":33,"author":{"gitId":"Kangxun"},"content":"                .withPhone(\"99997777\").withEmail(\"nameComparator@test.org\").build();","lastModifiedDate":"2021-10-25"},{"lineNumber":34,"author":{"gitId":"Kangxun"},"content":"        assertTrue(new CalledComparator().compare(a, b) \u003c 0);","lastModifiedDate":"2021-10-25"},{"lineNumber":35,"author":{"gitId":"Kangxun"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":36,"author":{"gitId":"Kangxun"},"content":"        // Person b is not called","lastModifiedDate":"2021-10-25"},{"lineNumber":37,"author":{"gitId":"pranav-ganesh"},"content":"        a \u003d new PersonBuilder().withName(\"Kent\").withCalled(\"true\")","lastModifiedDate":"2021-11-04"},{"lineNumber":38,"author":{"gitId":"Kangxun"},"content":"                .withPhone(\"88886666\").withEmail(\"nameComparator@test.com\").build();","lastModifiedDate":"2021-10-25"},{"lineNumber":39,"author":{"gitId":"pranav-ganesh"},"content":"        b \u003d new PersonBuilder().withName(\"Acorn\").withCalled(\"false\")","lastModifiedDate":"2021-11-04"},{"lineNumber":40,"author":{"gitId":"Kangxun"},"content":"                .withPhone(\"99997777\").withEmail(\"nameComparator@test.org\").build();","lastModifiedDate":"2021-10-25"},{"lineNumber":41,"author":{"gitId":"Kangxun"},"content":"        assertTrue(new CalledComparator().compare(a, b) \u003e 0);","lastModifiedDate":"2021-10-25"},{"lineNumber":42,"author":{"gitId":"Kangxun"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":43,"author":{"gitId":"Kangxun"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":44,"author":{"gitId":"Kangxun"},"content":"    @Test","lastModifiedDate":"2021-10-25"},{"lineNumber":45,"author":{"gitId":"Kangxun"},"content":"    public void compare_nullPerson_throwNullPointerException() {","lastModifiedDate":"2021-10-25"},{"lineNumber":46,"author":{"gitId":"pranav-ganesh"},"content":"        Person a \u003d new PersonBuilder().withName(\"Acorn\").withCalled(\"true\")","lastModifiedDate":"2021-11-04"},{"lineNumber":47,"author":{"gitId":"Kangxun"},"content":"                .withPhone(\"88886666\").withEmail(\"nameComparator@test.com\").build();","lastModifiedDate":"2021-10-25"},{"lineNumber":48,"author":{"gitId":"pranav-ganesh"},"content":"        Person b \u003d new PersonBuilder().withName(\"Kent\").withCalled(\"true\")","lastModifiedDate":"2021-11-04"},{"lineNumber":49,"author":{"gitId":"Kangxun"},"content":"                .withPhone(\"99997777\").withEmail(\"nameComparator@test.org\").build();","lastModifiedDate":"2021-10-25"},{"lineNumber":50,"author":{"gitId":"Kangxun"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":51,"author":{"gitId":"Kangxun"},"content":"        assertThrows(NullPointerException.class, () -\u003e new CalledComparator().compare(null, b));","lastModifiedDate":"2021-10-25"},{"lineNumber":52,"author":{"gitId":"Kangxun"},"content":"        assertThrows(NullPointerException.class, () -\u003e new CalledComparator().compare(a, null));","lastModifiedDate":"2021-10-25"},{"lineNumber":53,"author":{"gitId":"Kangxun"},"content":"        assertThrows(NullPointerException.class, () -\u003e new CalledComparator().compare(null, null));","lastModifiedDate":"2021-10-25"},{"lineNumber":54,"author":{"gitId":"Kangxun"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":55,"author":{"gitId":"Kangxun"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":56,"author":{"gitId":"Kangxun"},"content":"    @Test","lastModifiedDate":"2021-10-25"},{"lineNumber":57,"author":{"gitId":"Kangxun"},"content":"    public void equals() {","lastModifiedDate":"2021-10-25"},{"lineNumber":58,"author":{"gitId":"Kangxun"},"content":"        final CalledComparator standardComparator \u003d new CalledComparator();","lastModifiedDate":"2021-10-25"},{"lineNumber":59,"author":{"gitId":"Kangxun"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":60,"author":{"gitId":"Kangxun"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-10-25"},{"lineNumber":61,"author":{"gitId":"Kangxun"},"content":"        assertTrue(standardComparator.equals(standardComparator));","lastModifiedDate":"2021-10-25"},{"lineNumber":62,"author":{"gitId":"Kangxun"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":63,"author":{"gitId":"Kangxun"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-10-25"},{"lineNumber":64,"author":{"gitId":"Kangxun"},"content":"        assertFalse(standardComparator.equals(null));","lastModifiedDate":"2021-10-25"},{"lineNumber":65,"author":{"gitId":"Kangxun"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":66,"author":{"gitId":"Kangxun"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2021-10-25"},{"lineNumber":67,"author":{"gitId":"Kangxun"},"content":"        assertFalse(standardComparator.equals(new NameComparator()));","lastModifiedDate":"2021-10-25"},{"lineNumber":68,"author":{"gitId":"Kangxun"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":69,"author":{"gitId":"Kangxun"},"content":"}","lastModifiedDate":"2021-10-25"}],"authorContributionMap":{"pranav-ganesh":8,"Kangxun":61}},{"path":"src/test/java/seedu/address/logic/comparators/GenderComparatorTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Kangxun"},"content":"package seedu.address.logic.comparators;","lastModifiedDate":"2021-10-25"},{"lineNumber":2,"author":{"gitId":"Kangxun"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":3,"author":{"gitId":"Kangxun"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-25"},{"lineNumber":4,"author":{"gitId":"Kangxun"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-25"},{"lineNumber":5,"author":{"gitId":"Kangxun"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-25"},{"lineNumber":6,"author":{"gitId":"Kangxun"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-25"},{"lineNumber":7,"author":{"gitId":"Kangxun"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":8,"author":{"gitId":"Kangxun"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-25"},{"lineNumber":9,"author":{"gitId":"Kangxun"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":10,"author":{"gitId":"Kangxun"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2021-10-25"},{"lineNumber":11,"author":{"gitId":"Kangxun"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2021-10-25"},{"lineNumber":12,"author":{"gitId":"Kangxun"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":13,"author":{"gitId":"Kangxun"},"content":"/**","lastModifiedDate":"2021-10-25"},{"lineNumber":14,"author":{"gitId":"Kangxun"},"content":" * Test for PersonComparator which is used to compare Persons\u0027 gender.","lastModifiedDate":"2021-10-25"},{"lineNumber":15,"author":{"gitId":"Kangxun"},"content":" */","lastModifiedDate":"2021-10-25"},{"lineNumber":16,"author":{"gitId":"Kangxun"},"content":"class GenderComparatorTest {","lastModifiedDate":"2021-10-25"},{"lineNumber":17,"author":{"gitId":"Kangxun"},"content":"    @Test","lastModifiedDate":"2021-10-25"},{"lineNumber":18,"author":{"gitId":"Kangxun"},"content":"    public void compare_sameGender_returnsZero() {","lastModifiedDate":"2021-10-25"},{"lineNumber":19,"author":{"gitId":"Kangxun"},"content":"        Person a \u003d new PersonBuilder().withName(\"Kent\").withGender(\"M\")","lastModifiedDate":"2021-10-25"},{"lineNumber":20,"author":{"gitId":"Kangxun"},"content":"                .withPhone(\"88886666\").withEmail(\"nameComparator@test.com\").build();","lastModifiedDate":"2021-10-25"},{"lineNumber":21,"author":{"gitId":"Kangxun"},"content":"        Person b \u003d new PersonBuilder().withName(\"Mike\").withGender(\"M\")","lastModifiedDate":"2021-10-25"},{"lineNumber":22,"author":{"gitId":"Kangxun"},"content":"                .withPhone(\"99997777\").withEmail(\"nameComparator@test.org\").build();","lastModifiedDate":"2021-10-25"},{"lineNumber":23,"author":{"gitId":"Kangxun"},"content":"        assertEquals(0, new GenderComparator().compare(a, b));","lastModifiedDate":"2021-10-25"},{"lineNumber":24,"author":{"gitId":"Kangxun"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":25,"author":{"gitId":"Kangxun"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":26,"author":{"gitId":"Kangxun"},"content":"    @Test","lastModifiedDate":"2021-10-25"},{"lineNumber":27,"author":{"gitId":"Kangxun"},"content":"    public void compare_differentGender_success() {","lastModifiedDate":"2021-10-25"},{"lineNumber":28,"author":{"gitId":"Kangxun"},"content":"        // Persons will be shown in this order: Female, Male, N.A","lastModifiedDate":"2021-10-25"},{"lineNumber":29,"author":{"gitId":"Kangxun"},"content":"        // Person a is Female","lastModifiedDate":"2021-10-25"},{"lineNumber":30,"author":{"gitId":"Kangxun"},"content":"        Person a \u003d new PersonBuilder().withName(\"Acorn\").withGender(\"F\")","lastModifiedDate":"2021-10-25"},{"lineNumber":31,"author":{"gitId":"Kangxun"},"content":"                .withPhone(\"88886666\").withEmail(\"nameComparator@test.com\").build();","lastModifiedDate":"2021-10-25"},{"lineNumber":32,"author":{"gitId":"Kangxun"},"content":"        Person b \u003d new PersonBuilder().withName(\"Kent\").withGender(\"M\")","lastModifiedDate":"2021-10-25"},{"lineNumber":33,"author":{"gitId":"Kangxun"},"content":"                .withPhone(\"99997777\").withEmail(\"nameComparator@test.org\").build();","lastModifiedDate":"2021-10-25"},{"lineNumber":34,"author":{"gitId":"Kangxun"},"content":"        assertTrue(new GenderComparator().compare(a, b) \u003c 0);","lastModifiedDate":"2021-10-25"},{"lineNumber":35,"author":{"gitId":"Kangxun"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":36,"author":{"gitId":"Kangxun"},"content":"        // Person b is Female","lastModifiedDate":"2021-10-25"},{"lineNumber":37,"author":{"gitId":"Kangxun"},"content":"        a \u003d new PersonBuilder().withName(\"Kent\").withGender(\"M\")","lastModifiedDate":"2021-10-25"},{"lineNumber":38,"author":{"gitId":"Kangxun"},"content":"                .withPhone(\"88886666\").withEmail(\"nameComparator@test.com\").build();","lastModifiedDate":"2021-10-25"},{"lineNumber":39,"author":{"gitId":"Kangxun"},"content":"        b \u003d new PersonBuilder().withName(\"Acorn\").withGender(\"F\")","lastModifiedDate":"2021-10-25"},{"lineNumber":40,"author":{"gitId":"Kangxun"},"content":"                .withPhone(\"99997777\").withEmail(\"nameComparator@test.org\").build();","lastModifiedDate":"2021-10-25"},{"lineNumber":41,"author":{"gitId":"Kangxun"},"content":"        assertTrue(new GenderComparator().compare(a, b) \u003e 0);","lastModifiedDate":"2021-10-25"},{"lineNumber":42,"author":{"gitId":"Kangxun"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":43,"author":{"gitId":"Kangxun"},"content":"        // Person a is N.A","lastModifiedDate":"2021-10-25"},{"lineNumber":44,"author":{"gitId":"Kangxun"},"content":"        a \u003d new PersonBuilder().withName(\"Kent\").withGender(\"N.A\")","lastModifiedDate":"2021-10-25"},{"lineNumber":45,"author":{"gitId":"Kangxun"},"content":"                .withPhone(\"88886666\").withEmail(\"nameComparator@test.com\").build();","lastModifiedDate":"2021-10-25"},{"lineNumber":46,"author":{"gitId":"Kangxun"},"content":"        b \u003d new PersonBuilder().withName(\"Acorn\").withGender(\"F\")","lastModifiedDate":"2021-10-25"},{"lineNumber":47,"author":{"gitId":"Kangxun"},"content":"                .withPhone(\"99997777\").withEmail(\"nameComparator@test.org\").build();","lastModifiedDate":"2021-10-25"},{"lineNumber":48,"author":{"gitId":"Kangxun"},"content":"        assertTrue(new GenderComparator().compare(a, b) \u003e 0);","lastModifiedDate":"2021-10-25"},{"lineNumber":49,"author":{"gitId":"Kangxun"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":50,"author":{"gitId":"Kangxun"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":51,"author":{"gitId":"Kangxun"},"content":"    @Test","lastModifiedDate":"2021-10-25"},{"lineNumber":52,"author":{"gitId":"Kangxun"},"content":"    public void compare_nullPerson_throwNullPointerException() {","lastModifiedDate":"2021-10-25"},{"lineNumber":53,"author":{"gitId":"Kangxun"},"content":"        Person a \u003d new PersonBuilder().withName(\"Acorn\").withGender(\"F\")","lastModifiedDate":"2021-10-25"},{"lineNumber":54,"author":{"gitId":"Kangxun"},"content":"                .withPhone(\"88886666\").withEmail(\"nameComparator@test.com\").build();","lastModifiedDate":"2021-10-25"},{"lineNumber":55,"author":{"gitId":"Kangxun"},"content":"        Person b \u003d new PersonBuilder().withName(\"Kent\").withGender(\"M\")","lastModifiedDate":"2021-10-25"},{"lineNumber":56,"author":{"gitId":"Kangxun"},"content":"                .withPhone(\"99997777\").withEmail(\"nameComparator@test.org\").build();","lastModifiedDate":"2021-10-25"},{"lineNumber":57,"author":{"gitId":"Kangxun"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":58,"author":{"gitId":"Kangxun"},"content":"        assertThrows(NullPointerException.class, () -\u003e new GenderComparator().compare(null, b));","lastModifiedDate":"2021-10-25"},{"lineNumber":59,"author":{"gitId":"Kangxun"},"content":"        assertThrows(NullPointerException.class, () -\u003e new GenderComparator().compare(a, null));","lastModifiedDate":"2021-10-25"},{"lineNumber":60,"author":{"gitId":"Kangxun"},"content":"        assertThrows(NullPointerException.class, () -\u003e new GenderComparator().compare(null, null));","lastModifiedDate":"2021-10-25"},{"lineNumber":61,"author":{"gitId":"Kangxun"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":62,"author":{"gitId":"Kangxun"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":63,"author":{"gitId":"Kangxun"},"content":"    @Test","lastModifiedDate":"2021-10-25"},{"lineNumber":64,"author":{"gitId":"Kangxun"},"content":"    public void equals() {","lastModifiedDate":"2021-10-25"},{"lineNumber":65,"author":{"gitId":"Kangxun"},"content":"        final GenderComparator standardComparator \u003d new GenderComparator();","lastModifiedDate":"2021-10-25"},{"lineNumber":66,"author":{"gitId":"Kangxun"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":67,"author":{"gitId":"Kangxun"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-10-25"},{"lineNumber":68,"author":{"gitId":"Kangxun"},"content":"        assertTrue(standardComparator.equals(standardComparator));","lastModifiedDate":"2021-10-25"},{"lineNumber":69,"author":{"gitId":"Kangxun"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":70,"author":{"gitId":"Kangxun"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-10-25"},{"lineNumber":71,"author":{"gitId":"Kangxun"},"content":"        assertFalse(standardComparator.equals(null));","lastModifiedDate":"2021-10-25"},{"lineNumber":72,"author":{"gitId":"Kangxun"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":73,"author":{"gitId":"Kangxun"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2021-10-25"},{"lineNumber":74,"author":{"gitId":"Kangxun"},"content":"        assertFalse(standardComparator.equals(new CalledComparator()));","lastModifiedDate":"2021-10-25"},{"lineNumber":75,"author":{"gitId":"Kangxun"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":76,"author":{"gitId":"Kangxun"},"content":"}","lastModifiedDate":"2021-10-25"}],"authorContributionMap":{"Kangxun":76}},{"path":"src/test/java/seedu/address/logic/comparators/NameComparatorTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Kangxun"},"content":"package seedu.address.logic.comparators;","lastModifiedDate":"2021-10-25"},{"lineNumber":2,"author":{"gitId":"Kangxun"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":3,"author":{"gitId":"Kangxun"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-25"},{"lineNumber":4,"author":{"gitId":"Kangxun"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-25"},{"lineNumber":5,"author":{"gitId":"Kangxun"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-25"},{"lineNumber":6,"author":{"gitId":"Kangxun"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-25"},{"lineNumber":7,"author":{"gitId":"Kangxun"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":8,"author":{"gitId":"Kangxun"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-25"},{"lineNumber":9,"author":{"gitId":"Kangxun"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":10,"author":{"gitId":"Kangxun"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2021-10-25"},{"lineNumber":11,"author":{"gitId":"Kangxun"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2021-10-25"},{"lineNumber":12,"author":{"gitId":"Kangxun"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":13,"author":{"gitId":"Kangxun"},"content":"/**","lastModifiedDate":"2021-10-25"},{"lineNumber":14,"author":{"gitId":"Kangxun"},"content":" * Test for PersonComparator which is used to compare Persons\u0027 names.","lastModifiedDate":"2021-10-25"},{"lineNumber":15,"author":{"gitId":"Kangxun"},"content":" */","lastModifiedDate":"2021-10-25"},{"lineNumber":16,"author":{"gitId":"Kangxun"},"content":"class NameComparatorTest {","lastModifiedDate":"2021-10-25"},{"lineNumber":17,"author":{"gitId":"Kangxun"},"content":"    @Test","lastModifiedDate":"2021-10-25"},{"lineNumber":18,"author":{"gitId":"Kangxun"},"content":"    public void compare_sameName_returnsZero() {","lastModifiedDate":"2021-10-25"},{"lineNumber":19,"author":{"gitId":"Kangxun"},"content":"        Person a \u003d new PersonBuilder().withName(\"Kent\")","lastModifiedDate":"2021-10-25"},{"lineNumber":20,"author":{"gitId":"Kangxun"},"content":"                .withPhone(\"88886666\").withEmail(\"nameComparator@test.com\").build();","lastModifiedDate":"2021-10-25"},{"lineNumber":21,"author":{"gitId":"Kangxun"},"content":"        Person b \u003d new PersonBuilder().withName(\"Kent\")","lastModifiedDate":"2021-10-25"},{"lineNumber":22,"author":{"gitId":"Kangxun"},"content":"                .withPhone(\"99997777\").withEmail(\"nameComparator@test.org\").build();","lastModifiedDate":"2021-10-25"},{"lineNumber":23,"author":{"gitId":"Kangxun"},"content":"        assertEquals(0, new NameComparator().compare(a, b));","lastModifiedDate":"2021-10-25"},{"lineNumber":24,"author":{"gitId":"Kangxun"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":25,"author":{"gitId":"Kangxun"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":26,"author":{"gitId":"Kangxun"},"content":"    @Test","lastModifiedDate":"2021-10-25"},{"lineNumber":27,"author":{"gitId":"Kangxun"},"content":"    public void compare_differentName_success() {","lastModifiedDate":"2021-10-25"},{"lineNumber":28,"author":{"gitId":"Kangxun"},"content":"        // Person a\u0027s name appears first","lastModifiedDate":"2021-10-25"},{"lineNumber":29,"author":{"gitId":"Kangxun"},"content":"        Person a \u003d new PersonBuilder().withName(\"Acorn\")","lastModifiedDate":"2021-10-25"},{"lineNumber":30,"author":{"gitId":"Kangxun"},"content":"                .withPhone(\"88886666\").withEmail(\"nameComparator@test.com\").build();","lastModifiedDate":"2021-10-25"},{"lineNumber":31,"author":{"gitId":"Kangxun"},"content":"        Person b \u003d new PersonBuilder().withName(\"Kent\")","lastModifiedDate":"2021-10-25"},{"lineNumber":32,"author":{"gitId":"Kangxun"},"content":"                .withPhone(\"99997777\").withEmail(\"nameComparator@test.org\").build();","lastModifiedDate":"2021-10-25"},{"lineNumber":33,"author":{"gitId":"Kangxun"},"content":"        assertTrue(new NameComparator().compare(a, b) \u003c 0);","lastModifiedDate":"2021-10-25"},{"lineNumber":34,"author":{"gitId":"Kangxun"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":35,"author":{"gitId":"Kangxun"},"content":"        // Person b\u0027s name appears first","lastModifiedDate":"2021-10-25"},{"lineNumber":36,"author":{"gitId":"Kangxun"},"content":"        a \u003d new PersonBuilder().withName(\"Kent\")","lastModifiedDate":"2021-10-25"},{"lineNumber":37,"author":{"gitId":"Kangxun"},"content":"                .withPhone(\"88886666\").withEmail(\"nameComparator@test.com\").build();","lastModifiedDate":"2021-10-25"},{"lineNumber":38,"author":{"gitId":"Kangxun"},"content":"        b \u003d new PersonBuilder().withName(\"Acorn\")","lastModifiedDate":"2021-10-25"},{"lineNumber":39,"author":{"gitId":"Kangxun"},"content":"                .withPhone(\"99997777\").withEmail(\"nameComparator@test.org\").build();","lastModifiedDate":"2021-10-25"},{"lineNumber":40,"author":{"gitId":"Kangxun"},"content":"        assertTrue(new NameComparator().compare(a, b) \u003e 0);","lastModifiedDate":"2021-10-25"},{"lineNumber":41,"author":{"gitId":"Kangxun"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":42,"author":{"gitId":"Kangxun"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":43,"author":{"gitId":"Kangxun"},"content":"    @Test","lastModifiedDate":"2021-10-25"},{"lineNumber":44,"author":{"gitId":"Kangxun"},"content":"    public void compare_nullPerson_throwNullPointerException() {","lastModifiedDate":"2021-10-25"},{"lineNumber":45,"author":{"gitId":"Kangxun"},"content":"        Person a \u003d new PersonBuilder().withName(\"Acorn\")","lastModifiedDate":"2021-10-25"},{"lineNumber":46,"author":{"gitId":"Kangxun"},"content":"                .withPhone(\"88886666\").withEmail(\"nameComparator@test.com\").build();","lastModifiedDate":"2021-10-25"},{"lineNumber":47,"author":{"gitId":"Kangxun"},"content":"        Person b \u003d new PersonBuilder().withName(\"Kent\")","lastModifiedDate":"2021-10-25"},{"lineNumber":48,"author":{"gitId":"Kangxun"},"content":"                .withPhone(\"99997777\").withEmail(\"nameComparator@test.org\").build();","lastModifiedDate":"2021-10-25"},{"lineNumber":49,"author":{"gitId":"Kangxun"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":50,"author":{"gitId":"Kangxun"},"content":"        assertThrows(NullPointerException.class, () -\u003e new NameComparator().compare(null, b));","lastModifiedDate":"2021-10-25"},{"lineNumber":51,"author":{"gitId":"Kangxun"},"content":"        assertThrows(NullPointerException.class, () -\u003e new NameComparator().compare(a, null));","lastModifiedDate":"2021-10-25"},{"lineNumber":52,"author":{"gitId":"Kangxun"},"content":"        assertThrows(NullPointerException.class, () -\u003e new NameComparator().compare(null, null));","lastModifiedDate":"2021-10-25"},{"lineNumber":53,"author":{"gitId":"Kangxun"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":54,"author":{"gitId":"Kangxun"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":55,"author":{"gitId":"Kangxun"},"content":"    @Test","lastModifiedDate":"2021-10-25"},{"lineNumber":56,"author":{"gitId":"Kangxun"},"content":"    public void equals() {","lastModifiedDate":"2021-10-25"},{"lineNumber":57,"author":{"gitId":"Kangxun"},"content":"        final NameComparator standardComparator \u003d new NameComparator();","lastModifiedDate":"2021-10-25"},{"lineNumber":58,"author":{"gitId":"Kangxun"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":59,"author":{"gitId":"Kangxun"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-10-25"},{"lineNumber":60,"author":{"gitId":"Kangxun"},"content":"        assertTrue(standardComparator.equals(standardComparator));","lastModifiedDate":"2021-10-25"},{"lineNumber":61,"author":{"gitId":"Kangxun"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":62,"author":{"gitId":"Kangxun"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-10-25"},{"lineNumber":63,"author":{"gitId":"Kangxun"},"content":"        assertFalse(standardComparator.equals(null));","lastModifiedDate":"2021-10-25"},{"lineNumber":64,"author":{"gitId":"Kangxun"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":65,"author":{"gitId":"Kangxun"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2021-10-25"},{"lineNumber":66,"author":{"gitId":"Kangxun"},"content":"        assertFalse(standardComparator.equals(new GenderComparator()));","lastModifiedDate":"2021-10-25"},{"lineNumber":67,"author":{"gitId":"Kangxun"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":68,"author":{"gitId":"Kangxun"},"content":"}","lastModifiedDate":"2021-10-25"}],"authorContributionMap":{"Kangxun":68}},{"path":"src/test/java/seedu/address/logic/comparators/PersonComparatorTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Kangxun"},"content":"package seedu.address.logic.comparators;","lastModifiedDate":"2021-10-25"},{"lineNumber":2,"author":{"gitId":"Kangxun"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":3,"author":{"gitId":"Kangxun"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-25"},{"lineNumber":4,"author":{"gitId":"Kangxun"},"content":"import static seedu.address.logic.comparators.PersonComparator.MESSAGE_INVALID_CATEGORY;","lastModifiedDate":"2021-10-25"},{"lineNumber":5,"author":{"gitId":"Kangxun"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-25"},{"lineNumber":6,"author":{"gitId":"Kangxun"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":7,"author":{"gitId":"Kangxun"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-25"},{"lineNumber":8,"author":{"gitId":"Kangxun"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":9,"author":{"gitId":"Kangxun"},"content":"import seedu.address.logic.comparators.exceptions.ComparatorException;","lastModifiedDate":"2021-10-25"},{"lineNumber":10,"author":{"gitId":"Kangxun"},"content":"import seedu.address.model.category.Category;","lastModifiedDate":"2021-10-25"},{"lineNumber":11,"author":{"gitId":"Kangxun"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":12,"author":{"gitId":"Kangxun"},"content":"/**","lastModifiedDate":"2021-10-25"},{"lineNumber":13,"author":{"gitId":"Kangxun"},"content":" * Test for PersonComparator which is used to compare Persons.","lastModifiedDate":"2021-10-25"},{"lineNumber":14,"author":{"gitId":"Kangxun"},"content":" */","lastModifiedDate":"2021-10-25"},{"lineNumber":15,"author":{"gitId":"Kangxun"},"content":"class PersonComparatorTest {","lastModifiedDate":"2021-10-25"},{"lineNumber":16,"author":{"gitId":"Kangxun"},"content":"    private static final String VALID_CATEGORY_CALLED \u003d \"Called\";","lastModifiedDate":"2021-10-25"},{"lineNumber":17,"author":{"gitId":"Kangxun"},"content":"    private static final String VALID_CATEGORY_GENDER \u003d \"Gender\";","lastModifiedDate":"2021-10-25"},{"lineNumber":18,"author":{"gitId":"Kangxun"},"content":"    private static final String INVALID_COMPARATOR_CATEGORY \u003d \"Address\";","lastModifiedDate":"2021-10-25"},{"lineNumber":19,"author":{"gitId":"Kangxun"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":20,"author":{"gitId":"Kangxun"},"content":"    private Category validCategoryCalled \u003d new Category(VALID_CATEGORY_CALLED);","lastModifiedDate":"2021-10-25"},{"lineNumber":21,"author":{"gitId":"Kangxun"},"content":"    private Category validCategoryGender \u003d new Category(VALID_CATEGORY_GENDER);","lastModifiedDate":"2021-10-25"},{"lineNumber":22,"author":{"gitId":"Kangxun"},"content":"    private Category invalidCategory \u003d new Category(INVALID_COMPARATOR_CATEGORY);","lastModifiedDate":"2021-10-25"},{"lineNumber":23,"author":{"gitId":"Kangxun"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":24,"author":{"gitId":"Kangxun"},"content":"    @Test","lastModifiedDate":"2021-10-25"},{"lineNumber":25,"author":{"gitId":"Kangxun"},"content":"    public void getComparator_invalidCategory_throwsComparatorException() {","lastModifiedDate":"2021-10-25"},{"lineNumber":26,"author":{"gitId":"Kangxun"},"content":"        assertThrows(ComparatorException.class, MESSAGE_INVALID_CATEGORY, () -\u003e","lastModifiedDate":"2021-10-25"},{"lineNumber":27,"author":{"gitId":"Kangxun"},"content":"            PersonComparator.getComparator(invalidCategory));","lastModifiedDate":"2021-10-25"},{"lineNumber":28,"author":{"gitId":"Kangxun"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":29,"author":{"gitId":"Kangxun"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":30,"author":{"gitId":"Kangxun"},"content":"    @Test","lastModifiedDate":"2021-10-25"},{"lineNumber":31,"author":{"gitId":"Kangxun"},"content":"    public void getComparator_validCategoryCalled_success() throws ComparatorException {","lastModifiedDate":"2021-10-25"},{"lineNumber":32,"author":{"gitId":"Kangxun"},"content":"        CalledComparator calledComparator \u003d new CalledComparator();","lastModifiedDate":"2021-10-25"},{"lineNumber":33,"author":{"gitId":"Kangxun"},"content":"        assertEquals(calledComparator, PersonComparator.getComparator(validCategoryCalled));","lastModifiedDate":"2021-10-25"},{"lineNumber":34,"author":{"gitId":"Kangxun"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":35,"author":{"gitId":"Kangxun"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":36,"author":{"gitId":"Kangxun"},"content":"    @Test","lastModifiedDate":"2021-10-25"},{"lineNumber":37,"author":{"gitId":"Kangxun"},"content":"    public void getComparator_validCategoryGender_success() throws ComparatorException {","lastModifiedDate":"2021-10-25"},{"lineNumber":38,"author":{"gitId":"Kangxun"},"content":"        GenderComparator genderComparator \u003d new GenderComparator();","lastModifiedDate":"2021-10-25"},{"lineNumber":39,"author":{"gitId":"Kangxun"},"content":"        assertEquals(genderComparator, PersonComparator.getComparator(validCategoryGender));","lastModifiedDate":"2021-10-25"},{"lineNumber":40,"author":{"gitId":"Kangxun"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":41,"author":{"gitId":"Kangxun"},"content":"}","lastModifiedDate":"2021-10-25"}],"authorContributionMap":{"Kangxun":41}},{"path":"src/test/java/seedu/address/logic/parser/AddCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-09-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2021-10-18"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_BOB;","lastModifiedDate":"2021-10-18"},{"lineNumber":6,"author":{"gitId":"houtenteo"},"content":"import static seedu.address.logic.commands.CommandTestUtil.AGE_DESC_AMY;","lastModifiedDate":"2021-10-18"},{"lineNumber":7,"author":{"gitId":"houtenteo"},"content":"import static seedu.address.logic.commands.CommandTestUtil.AGE_DESC_BOB;","lastModifiedDate":"2021-10-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2021-09-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_BOB;","lastModifiedDate":"2021-09-21"},{"lineNumber":10,"author":{"gitId":"houtenteo"},"content":"import static seedu.address.logic.commands.CommandTestUtil.GENDER_DESC_AMY;","lastModifiedDate":"2021-10-18"},{"lineNumber":11,"author":{"gitId":"houtenteo"},"content":"import static seedu.address.logic.commands.CommandTestUtil.GENDER_DESC_BOB;","lastModifiedDate":"2021-10-18"},{"lineNumber":12,"author":{"gitId":"houtenteo"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INTEREST_DESC_BOB;","lastModifiedDate":"2021-10-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_ADDRESS_DESC;","lastModifiedDate":"2021-10-18"},{"lineNumber":14,"author":{"gitId":"houtenteo"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_AGE_DESC;","lastModifiedDate":"2021-10-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_EMAIL_DESC;","lastModifiedDate":"2021-09-21"},{"lineNumber":16,"author":{"gitId":"houtenteo"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_GENDER_DESC;","lastModifiedDate":"2021-10-18"},{"lineNumber":17,"author":{"gitId":"houtenteo"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_INTEREST_DESC;","lastModifiedDate":"2021-10-18"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2021-09-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_PHONE_DESC;","lastModifiedDate":"2021-09-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2021-09-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_BOB;","lastModifiedDate":"2021-09-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2021-09-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_BOB;","lastModifiedDate":"2021-09-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PREAMBLE_WHITESPACE;","lastModifiedDate":"2021-09-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2021-09-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2021-09-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2021-09-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2021-09-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2021-09-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.AMY;","lastModifiedDate":"2021-09-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BOB;","lastModifiedDate":"2021-09-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-09-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2021-09-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2021-10-18"},{"lineNumber":37,"author":{"gitId":"houtenteo"},"content":"import seedu.address.model.person.Age;","lastModifiedDate":"2021-10-18"},{"lineNumber":38,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2021-09-21"},{"lineNumber":39,"author":{"gitId":"houtenteo"},"content":"import seedu.address.model.person.Gender;","lastModifiedDate":"2021-10-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2021-09-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2021-09-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2021-09-21"},{"lineNumber":43,"author":{"gitId":"houtenteo"},"content":"import seedu.address.model.person.interests.Interest;","lastModifiedDate":"2021-10-18"},{"lineNumber":44,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2021-09-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"public class AddCommandParserTest {","lastModifiedDate":"2021-09-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    private AddCommandParser parser \u003d new AddCommandParser();","lastModifiedDate":"2021-09-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-09-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void parse_allFieldsPresent_success() {","lastModifiedDate":"2021-09-21"},{"lineNumber":51,"author":{"gitId":"houtenteo"},"content":"        Person expectedPerson \u003d new PersonBuilder(BOB).build();","lastModifiedDate":"2021-09-22"},{"lineNumber":52,"author":{"gitId":"houtenteo"},"content":"        String userInput \u003d PREAMBLE_WHITESPACE + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2021-10-18"},{"lineNumber":53,"author":{"gitId":"houtenteo"},"content":"                + ADDRESS_DESC_BOB + GENDER_DESC_BOB + AGE_DESC_BOB + INTEREST_DESC_BOB;","lastModifiedDate":"2021-10-18"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        // whitespace only preamble","lastModifiedDate":"2021-09-21"},{"lineNumber":55,"author":{"gitId":"houtenteo"},"content":"        assertParseSuccess(parser, userInput, new AddCommand(expectedPerson));","lastModifiedDate":"2021-10-18"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        // multiple names - last name accepted","lastModifiedDate":"2021-09-21"},{"lineNumber":58,"author":{"gitId":"houtenteo"},"content":"        userInput \u003d NAME_DESC_AMY + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2021-10-18"},{"lineNumber":59,"author":{"gitId":"houtenteo"},"content":"                + ADDRESS_DESC_BOB + GENDER_DESC_BOB + AGE_DESC_BOB + INTEREST_DESC_BOB;","lastModifiedDate":"2021-10-18"},{"lineNumber":60,"author":{"gitId":"houtenteo"},"content":"        assertParseSuccess(parser, userInput, new AddCommand(expectedPerson));","lastModifiedDate":"2021-10-18"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        // multiple phones - last phone accepted","lastModifiedDate":"2021-09-21"},{"lineNumber":63,"author":{"gitId":"houtenteo"},"content":"        userInput \u003d NAME_DESC_BOB + PHONE_DESC_AMY + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2021-10-18"},{"lineNumber":64,"author":{"gitId":"houtenteo"},"content":"                + ADDRESS_DESC_BOB + GENDER_DESC_BOB + AGE_DESC_BOB + INTEREST_DESC_BOB;","lastModifiedDate":"2021-10-18"},{"lineNumber":65,"author":{"gitId":"houtenteo"},"content":"        assertParseSuccess(parser, userInput, new AddCommand(expectedPerson));","lastModifiedDate":"2021-10-18"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // multiple emails - last email accepted","lastModifiedDate":"2021-09-21"},{"lineNumber":68,"author":{"gitId":"houtenteo"},"content":"        userInput \u003d NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_AMY + EMAIL_DESC_BOB","lastModifiedDate":"2021-10-18"},{"lineNumber":69,"author":{"gitId":"houtenteo"},"content":"                + ADDRESS_DESC_BOB + GENDER_DESC_BOB + AGE_DESC_BOB + INTEREST_DESC_BOB;","lastModifiedDate":"2021-10-18"},{"lineNumber":70,"author":{"gitId":"houtenteo"},"content":"        assertParseSuccess(parser, userInput, new AddCommand(expectedPerson));","lastModifiedDate":"2021-10-18"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        // multiple addresses - last address accepted","lastModifiedDate":"2021-10-18"},{"lineNumber":73,"author":{"gitId":"houtenteo"},"content":"        userInput \u003d NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_AMY","lastModifiedDate":"2021-10-18"},{"lineNumber":74,"author":{"gitId":"houtenteo"},"content":"                + ADDRESS_DESC_BOB + GENDER_DESC_BOB + AGE_DESC_BOB + INTEREST_DESC_BOB;","lastModifiedDate":"2021-10-18"},{"lineNumber":75,"author":{"gitId":"houtenteo"},"content":"        assertParseSuccess(parser, userInput, new AddCommand(expectedPerson));","lastModifiedDate":"2021-10-18"},{"lineNumber":76,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":77,"author":{"gitId":"houtenteo"},"content":"        // multiple genders - last gender accepted","lastModifiedDate":"2021-10-18"},{"lineNumber":78,"author":{"gitId":"houtenteo"},"content":"        userInput \u003d NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2021-10-18"},{"lineNumber":79,"author":{"gitId":"houtenteo"},"content":"                + GENDER_DESC_AMY + GENDER_DESC_BOB + AGE_DESC_BOB + INTEREST_DESC_BOB;","lastModifiedDate":"2021-10-18"},{"lineNumber":80,"author":{"gitId":"houtenteo"},"content":"        assertParseSuccess(parser, userInput, new AddCommand(expectedPerson));","lastModifiedDate":"2021-10-18"},{"lineNumber":81,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":82,"author":{"gitId":"houtenteo"},"content":"        // multiple ages - last age accepted","lastModifiedDate":"2021-10-18"},{"lineNumber":83,"author":{"gitId":"houtenteo"},"content":"        userInput \u003d NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2021-10-18"},{"lineNumber":84,"author":{"gitId":"houtenteo"},"content":"                + GENDER_DESC_BOB + AGE_DESC_AMY + AGE_DESC_BOB + INTEREST_DESC_BOB;","lastModifiedDate":"2021-10-18"},{"lineNumber":85,"author":{"gitId":"houtenteo"},"content":"        assertParseSuccess(parser, userInput, new AddCommand(expectedPerson));","lastModifiedDate":"2021-10-18"},{"lineNumber":86,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-21"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-09-21"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    public void parse_optionalFieldsMissing_success() {","lastModifiedDate":"2021-09-21"},{"lineNumber":91,"author":{"gitId":"houtenteo"},"content":"        // zero address, gender, age, interests","lastModifiedDate":"2021-10-18"},{"lineNumber":92,"author":{"gitId":"houtenteo"},"content":"        Person expectedPerson \u003d new PersonBuilder(AMY).build();","lastModifiedDate":"2021-09-22"},{"lineNumber":93,"author":{"gitId":"loose-bus-change"},"content":"        assertParseSuccess(parser, NAME_DESC_AMY + PHONE_DESC_AMY + EMAIL_DESC_AMY,","lastModifiedDate":"2021-09-25"},{"lineNumber":94,"author":{"gitId":"-"},"content":"                new AddCommand(expectedPerson));","lastModifiedDate":"2021-09-21"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-21"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-09-21"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    public void parse_compulsoryFieldMissing_failure() {","lastModifiedDate":"2021-09-21"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE);","lastModifiedDate":"2021-09-21"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        // missing name prefix","lastModifiedDate":"2021-09-21"},{"lineNumber":102,"author":{"gitId":"loose-bus-change"},"content":"        assertParseFailure(parser, VALID_NAME_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB,","lastModifiedDate":"2021-09-25"},{"lineNumber":103,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2021-09-21"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        // missing phone prefix","lastModifiedDate":"2021-09-21"},{"lineNumber":106,"author":{"gitId":"loose-bus-change"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + VALID_PHONE_BOB + EMAIL_DESC_BOB,","lastModifiedDate":"2021-09-25"},{"lineNumber":107,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2021-09-21"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        // missing email prefix","lastModifiedDate":"2021-09-21"},{"lineNumber":110,"author":{"gitId":"loose-bus-change"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + VALID_EMAIL_BOB,","lastModifiedDate":"2021-09-25"},{"lineNumber":111,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2021-09-21"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-21"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-09-21"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2021-09-21"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        // invalid name","lastModifiedDate":"2021-09-21"},{"lineNumber":117,"author":{"gitId":"loose-bus-change"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + PHONE_DESC_BOB + EMAIL_DESC_BOB,","lastModifiedDate":"2021-09-25"},{"lineNumber":118,"author":{"gitId":"houtenteo"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, Name.MESSAGE_CONSTRAINTS));","lastModifiedDate":"2021-11-06"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        // invalid phone","lastModifiedDate":"2021-09-21"},{"lineNumber":121,"author":{"gitId":"loose-bus-change"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + INVALID_PHONE_DESC + EMAIL_DESC_BOB,","lastModifiedDate":"2021-09-25"},{"lineNumber":122,"author":{"gitId":"houtenteo"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, Phone.MESSAGE_CONSTRAINTS));","lastModifiedDate":"2021-11-06"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        // invalid email","lastModifiedDate":"2021-09-21"},{"lineNumber":125,"author":{"gitId":"loose-bus-change"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + INVALID_EMAIL_DESC,","lastModifiedDate":"2021-09-25"},{"lineNumber":126,"author":{"gitId":"houtenteo"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, Email.MESSAGE_CONSTRAINTS));","lastModifiedDate":"2021-11-06"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        // invalid address","lastModifiedDate":"2021-10-18"},{"lineNumber":129,"author":{"gitId":"houtenteo"},"content":"        assertParseFailure(parser,","lastModifiedDate":"2021-10-18"},{"lineNumber":130,"author":{"gitId":"houtenteo"},"content":"                NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + INVALID_ADDRESS_DESC,","lastModifiedDate":"2021-10-18"},{"lineNumber":131,"author":{"gitId":"houtenteo"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, Address.MESSAGE_CONSTRAINTS));","lastModifiedDate":"2021-11-06"},{"lineNumber":132,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":133,"author":{"gitId":"houtenteo"},"content":"        // invalid gender","lastModifiedDate":"2021-10-18"},{"lineNumber":134,"author":{"gitId":"houtenteo"},"content":"        assertParseFailure(parser,","lastModifiedDate":"2021-10-18"},{"lineNumber":135,"author":{"gitId":"houtenteo"},"content":"                NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + INVALID_GENDER_DESC,","lastModifiedDate":"2021-10-18"},{"lineNumber":136,"author":{"gitId":"houtenteo"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, Gender.MESSAGE_CONSTRAINTS));","lastModifiedDate":"2021-11-06"},{"lineNumber":137,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":138,"author":{"gitId":"houtenteo"},"content":"        // invalid age","lastModifiedDate":"2021-10-18"},{"lineNumber":139,"author":{"gitId":"houtenteo"},"content":"        assertParseFailure(parser,","lastModifiedDate":"2021-10-18"},{"lineNumber":140,"author":{"gitId":"houtenteo"},"content":"                NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + INVALID_AGE_DESC,","lastModifiedDate":"2021-10-18"},{"lineNumber":141,"author":{"gitId":"houtenteo"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, Age.MESSAGE_CONSTRAINTS));","lastModifiedDate":"2021-11-06"},{"lineNumber":142,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":143,"author":{"gitId":"houtenteo"},"content":"        // invalid interests","lastModifiedDate":"2021-10-18"},{"lineNumber":144,"author":{"gitId":"houtenteo"},"content":"        assertParseFailure(parser,","lastModifiedDate":"2021-10-18"},{"lineNumber":145,"author":{"gitId":"houtenteo"},"content":"                NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + INVALID_INTEREST_DESC,","lastModifiedDate":"2021-10-18"},{"lineNumber":146,"author":{"gitId":"houtenteo"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, Interest.MESSAGE_CONSTRAINTS));","lastModifiedDate":"2021-11-06"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-21"},{"lineNumber":148,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-09-21"}],"authorContributionMap":{"houtenteo":61,"loose-bus-change":7,"-":80}},{"path":"src/test/java/seedu/address/logic/parser/AddressBookParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-09-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-09-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-09-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2021-09-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2021-09-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2021-09-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":10,"author":{"gitId":"houtenteo"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-09-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2021-09-21"},{"lineNumber":13,"author":{"gitId":"houtenteo"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2021-10-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-09-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2021-10-25"},{"lineNumber":18,"author":{"gitId":"pranav-ganesh"},"content":"import seedu.address.logic.commands.CalledCommand;","lastModifiedDate":"2021-11-04"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ClearCommand;","lastModifiedDate":"2021-09-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2021-09-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ExitCommand;","lastModifiedDate":"2021-09-21"},{"lineNumber":22,"author":{"gitId":"Kangxun"},"content":"import seedu.address.logic.commands.FilterCommand;","lastModifiedDate":"2021-10-08"},{"lineNumber":23,"author":{"gitId":"houtenteo"},"content":"import seedu.address.logic.commands.FindAllCommand;","lastModifiedDate":"2021-10-27"},{"lineNumber":24,"author":{"gitId":"houtenteo"},"content":"import seedu.address.logic.commands.FindAnyCommand;","lastModifiedDate":"2021-10-28"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.HelpCommand;","lastModifiedDate":"2021-09-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2021-09-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-09-21"},{"lineNumber":28,"author":{"gitId":"Kangxun"},"content":"import seedu.address.model.category.Category;","lastModifiedDate":"2021-10-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2021-10-25"},{"lineNumber":30,"author":{"gitId":"houtenteo"},"content":"import seedu.address.model.person.predicates.CombinedPredicate;","lastModifiedDate":"2021-10-26"},{"lineNumber":31,"author":{"gitId":"houtenteo"},"content":"import seedu.address.model.person.predicates.NameContainsKeywordsPredicate;","lastModifiedDate":"2021-10-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2021-10-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonUtil;","lastModifiedDate":"2021-10-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"public class AddressBookParserTest {","lastModifiedDate":"2021-09-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private final AddressBookParser parser \u003d new AddressBookParser();","lastModifiedDate":"2021-09-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-10-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public void parseCommand_add() throws Exception {","lastModifiedDate":"2021-10-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2021-10-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        AddCommand command \u003d (AddCommand) parser.parseCommand(PersonUtil.getAddCommand(person));","lastModifiedDate":"2021-10-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertEquals(new AddCommand(person), command);","lastModifiedDate":"2021-10-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-09-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public void parseCommand_clear() throws Exception {","lastModifiedDate":"2021-09-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD) instanceof ClearCommand);","lastModifiedDate":"2021-09-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD + \" 3\") instanceof ClearCommand);","lastModifiedDate":"2021-09-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-09-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void parseCommand_delete() throws Exception {","lastModifiedDate":"2021-09-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        DeleteCommand command \u003d (DeleteCommand) parser.parseCommand(","lastModifiedDate":"2021-09-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"                DeleteCommand.COMMAND_WORD + \" \" + INDEX_FIRST_PERSON.getOneBased());","lastModifiedDate":"2021-09-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertEquals(new DeleteCommand(INDEX_FIRST_PERSON), command);","lastModifiedDate":"2021-09-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":59,"author":{"gitId":"houtenteo"},"content":"    //    @Test","lastModifiedDate":"2021-09-22"},{"lineNumber":60,"author":{"gitId":"houtenteo"},"content":"    //    public void parseCommand_edit() throws Exception {","lastModifiedDate":"2021-09-22"},{"lineNumber":61,"author":{"gitId":"houtenteo"},"content":"    //        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2021-09-22"},{"lineNumber":62,"author":{"gitId":"houtenteo"},"content":"    //        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(person).build();","lastModifiedDate":"2021-09-22"},{"lineNumber":63,"author":{"gitId":"houtenteo"},"content":"    //        EditCommand command \u003d (EditCommand) parser.parseCommand(EditCommand.COMMAND_WORD + \" \"","lastModifiedDate":"2021-09-22"},{"lineNumber":64,"author":{"gitId":"houtenteo"},"content":"    //                + INDEX_FIRST_PERSON.getOneBased() + \" \" + PersonUtil.getEditPersonDescriptorDetails(descriptor));","lastModifiedDate":"2021-09-22"},{"lineNumber":65,"author":{"gitId":"houtenteo"},"content":"    //        assertEquals(new EditCommand(INDEX_FIRST_PERSON, descriptor), command);","lastModifiedDate":"2021-09-22"},{"lineNumber":66,"author":{"gitId":"houtenteo"},"content":"    //    }","lastModifiedDate":"2021-09-22"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-09-21"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void parseCommand_exit() throws Exception {","lastModifiedDate":"2021-09-21"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD) instanceof ExitCommand);","lastModifiedDate":"2021-09-21"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD + \" 3\") instanceof ExitCommand);","lastModifiedDate":"2021-09-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-09-21"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public void parseCommand_find() throws Exception {","lastModifiedDate":"2021-09-21"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        List\u003cString\u003e keywords \u003d Arrays.asList(\"foo\", \"bar\", \"baz\");","lastModifiedDate":"2021-09-21"},{"lineNumber":77,"author":{"gitId":"houtenteo"},"content":"        FindAnyCommand command \u003d (FindAnyCommand) parser.parseCommand(","lastModifiedDate":"2021-10-28"},{"lineNumber":78,"author":{"gitId":"houtenteo"},"content":"                FindAnyCommand.COMMAND_WORD + \" n/foo bar baz\");","lastModifiedDate":"2021-10-28"},{"lineNumber":79,"author":{"gitId":"houtenteo"},"content":"        ArrayList\u003cPredicate\u003cPerson\u003e\u003e predicates \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-26"},{"lineNumber":80,"author":{"gitId":"houtenteo"},"content":"        predicates.add(new NameContainsKeywordsPredicate(keywords, false));","lastModifiedDate":"2021-10-26"},{"lineNumber":81,"author":{"gitId":"houtenteo"},"content":"        CombinedPredicate predicate \u003d new CombinedPredicate(predicates, false);","lastModifiedDate":"2021-10-26"},{"lineNumber":82,"author":{"gitId":"houtenteo"},"content":"        assertEquals(new FindAnyCommand(predicate), command);","lastModifiedDate":"2021-10-28"},{"lineNumber":83,"author":{"gitId":"houtenteo"},"content":"    }","lastModifiedDate":"2021-09-21"},{"lineNumber":84,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":85,"author":{"gitId":"houtenteo"},"content":"    @Test","lastModifiedDate":"2021-10-27"},{"lineNumber":86,"author":{"gitId":"houtenteo"},"content":"    public void parseCommand_findAll() throws Exception {","lastModifiedDate":"2021-10-27"},{"lineNumber":87,"author":{"gitId":"houtenteo"},"content":"        List\u003cString\u003e keywords \u003d Arrays.asList(\"foo\", \"bar\", \"baz\");","lastModifiedDate":"2021-10-27"},{"lineNumber":88,"author":{"gitId":"houtenteo"},"content":"        FindAllCommand command \u003d (FindAllCommand) parser.parseCommand(","lastModifiedDate":"2021-10-27"},{"lineNumber":89,"author":{"gitId":"houtenteo"},"content":"                FindAllCommand.COMMAND_WORD + \" n/foo bar baz\");","lastModifiedDate":"2021-10-27"},{"lineNumber":90,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":91,"author":{"gitId":"houtenteo"},"content":"        ArrayList\u003cPredicate\u003cPerson\u003e\u003e predicates \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-27"},{"lineNumber":92,"author":{"gitId":"houtenteo"},"content":"        predicates.add(new NameContainsKeywordsPredicate(keywords, true));","lastModifiedDate":"2021-10-27"},{"lineNumber":93,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":94,"author":{"gitId":"houtenteo"},"content":"        CombinedPredicate predicate \u003d new CombinedPredicate(predicates, true);","lastModifiedDate":"2021-10-27"},{"lineNumber":95,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":96,"author":{"gitId":"houtenteo"},"content":"        assertEquals(new FindAllCommand(predicate), command);","lastModifiedDate":"2021-10-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-09-21"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    public void parseCommand_help() throws Exception {","lastModifiedDate":"2021-09-21"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD) instanceof HelpCommand);","lastModifiedDate":"2021-09-21"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD + \" 3\") instanceof HelpCommand);","lastModifiedDate":"2021-09-21"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-21"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-09-21"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    public void parseCommand_list() throws Exception {","lastModifiedDate":"2021-09-21"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD) instanceof ListCommand);","lastModifiedDate":"2021-09-21"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD + \" 3\") instanceof ListCommand);","lastModifiedDate":"2021-09-21"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-21"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":111,"author":{"gitId":"Kangxun"},"content":"    @Test","lastModifiedDate":"2021-09-23"},{"lineNumber":112,"author":{"gitId":"pranav-ganesh"},"content":"    public void parseCommand_called() {","lastModifiedDate":"2021-11-04"},{"lineNumber":113,"author":{"gitId":"pranav-ganesh"},"content":"        assertThrows(ParseException.class, String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2021-11-04"},{"lineNumber":114,"author":{"gitId":"pranav-ganesh"},"content":"                CalledCommand.MESSAGE_USAGE), () -\u003e parser.parseCommand(CalledCommand.COMMAND_WORD));","lastModifiedDate":"2021-11-04"},{"lineNumber":115,"author":{"gitId":"Kangxun"},"content":"    }","lastModifiedDate":"2021-09-23"},{"lineNumber":116,"author":{"gitId":"Kangxun"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":117,"author":{"gitId":"Kangxun"},"content":"    @Test","lastModifiedDate":"2021-10-08"},{"lineNumber":118,"author":{"gitId":"Kangxun"},"content":"    public void parseCommand_filter() throws Exception {","lastModifiedDate":"2021-10-08"},{"lineNumber":119,"author":{"gitId":"Kangxun"},"content":"        final String categoryString \u003d \"called\";","lastModifiedDate":"2021-10-25"},{"lineNumber":120,"author":{"gitId":"Kangxun"},"content":"        final String countString \u003d \"2\";","lastModifiedDate":"2021-10-09"},{"lineNumber":121,"author":{"gitId":"Kangxun"},"content":"        final Category category \u003d new Category(\"called\");","lastModifiedDate":"2021-10-25"},{"lineNumber":122,"author":{"gitId":"Kangxun"},"content":"        final Integer count \u003d 2;","lastModifiedDate":"2021-10-09"},{"lineNumber":123,"author":{"gitId":"Kangxun"},"content":"        FilterCommand command \u003d (FilterCommand) parser.parseCommand(FilterCommand.COMMAND_WORD + \" \"","lastModifiedDate":"2021-10-09"},{"lineNumber":124,"author":{"gitId":"Kangxun"},"content":"                + categoryString + \" \" + countString);","lastModifiedDate":"2021-10-09"},{"lineNumber":125,"author":{"gitId":"Kangxun"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":126,"author":{"gitId":"Kangxun"},"content":"        assertEquals(new FilterCommand(category, count), command);","lastModifiedDate":"2021-10-09"},{"lineNumber":127,"author":{"gitId":"Kangxun"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":128,"author":{"gitId":"Kangxun"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-09-21"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    public void parseCommand_unrecognisedInput_throwsParseException() {","lastModifiedDate":"2021-09-21"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE), ()","lastModifiedDate":"2021-09-21"},{"lineNumber":132,"author":{"gitId":"-"},"content":"            -\u003e parser.parseCommand(\"\"));","lastModifiedDate":"2021-09-21"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-21"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-09-21"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    public void parseCommand_unknownCommand_throwsParseException() {","lastModifiedDate":"2021-09-21"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, MESSAGE_UNKNOWN_COMMAND, () -\u003e parser.parseCommand(\"unknownCommand\"));","lastModifiedDate":"2021-09-21"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-21"},{"lineNumber":139,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-09-21"}],"authorContributionMap":{"houtenteo":34,"pranav-ganesh":4,"-":84,"Kangxun":17}},{"path":"src/test/java/seedu/address/logic/parser/CalledCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"pranav-ganesh"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-10-02"},{"lineNumber":2,"author":{"gitId":"pranav-ganesh"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":3,"author":{"gitId":"pranav-ganesh"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-02"},{"lineNumber":4,"author":{"gitId":"pranav-ganesh"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2021-10-02"},{"lineNumber":5,"author":{"gitId":"pranav-ganesh"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2021-10-02"},{"lineNumber":6,"author":{"gitId":"pranav-ganesh"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2021-10-02"},{"lineNumber":7,"author":{"gitId":"pranav-ganesh"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":8,"author":{"gitId":"pranav-ganesh"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-02"},{"lineNumber":9,"author":{"gitId":"pranav-ganesh"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":10,"author":{"gitId":"pranav-ganesh"},"content":"import seedu.address.logic.commands.CalledCommand;","lastModifiedDate":"2021-11-04"},{"lineNumber":11,"author":{"gitId":"pranav-ganesh"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":12,"author":{"gitId":"pranav-ganesh"},"content":"public class CalledCommandParserTest {","lastModifiedDate":"2021-11-04"},{"lineNumber":13,"author":{"gitId":"pranav-ganesh"},"content":"    private CalledCommandParser parser \u003d new CalledCommandParser();","lastModifiedDate":"2021-11-04"},{"lineNumber":14,"author":{"gitId":"pranav-ganesh"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":15,"author":{"gitId":"pranav-ganesh"},"content":"    @Test","lastModifiedDate":"2021-10-02"},{"lineNumber":16,"author":{"gitId":"pranav-ganesh"},"content":"    public void parse_validArgs_returnsCalledCommand() {","lastModifiedDate":"2021-11-04"},{"lineNumber":17,"author":{"gitId":"pranav-ganesh"},"content":"        assertParseSuccess(parser, \"2\", new CalledCommand(INDEX_SECOND_PERSON));","lastModifiedDate":"2021-11-04"},{"lineNumber":18,"author":{"gitId":"pranav-ganesh"},"content":"    }","lastModifiedDate":"2021-10-02"},{"lineNumber":19,"author":{"gitId":"pranav-ganesh"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":20,"author":{"gitId":"pranav-ganesh"},"content":"    @Test","lastModifiedDate":"2021-10-02"},{"lineNumber":21,"author":{"gitId":"pranav-ganesh"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2021-10-02"},{"lineNumber":22,"author":{"gitId":"pranav-ganesh"},"content":"        assertParseFailure(parser, \"*\", String.format(MESSAGE_INVALID_COMMAND_FORMAT, CalledCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-11-04"},{"lineNumber":23,"author":{"gitId":"pranav-ganesh"},"content":"        assertParseFailure(parser, \"c\", String.format(MESSAGE_INVALID_COMMAND_FORMAT, CalledCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-11-04"},{"lineNumber":24,"author":{"gitId":"pranav-ganesh"},"content":"    }","lastModifiedDate":"2021-10-02"},{"lineNumber":25,"author":{"gitId":"pranav-ganesh"},"content":"}","lastModifiedDate":"2021-10-02"}],"authorContributionMap":{"pranav-ganesh":25}},{"path":"src/test/java/seedu/address/logic/parser/DisplayCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"loose-bus-change"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-10-21"},{"lineNumber":2,"author":{"gitId":"loose-bus-change"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":3,"author":{"gitId":"loose-bus-change"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INDEX_NOT_PARSED;","lastModifiedDate":"2021-11-07"},{"lineNumber":4,"author":{"gitId":"loose-bus-change"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-21"},{"lineNumber":5,"author":{"gitId":"loose-bus-change"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2021-10-21"},{"lineNumber":6,"author":{"gitId":"loose-bus-change"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2021-10-21"},{"lineNumber":7,"author":{"gitId":"loose-bus-change"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2021-10-21"},{"lineNumber":8,"author":{"gitId":"loose-bus-change"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":9,"author":{"gitId":"loose-bus-change"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-21"},{"lineNumber":10,"author":{"gitId":"loose-bus-change"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":11,"author":{"gitId":"loose-bus-change"},"content":"import seedu.address.logic.commands.DisplayCommand;","lastModifiedDate":"2021-10-21"},{"lineNumber":12,"author":{"gitId":"loose-bus-change"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":13,"author":{"gitId":"loose-bus-change"},"content":"public class DisplayCommandParserTest {","lastModifiedDate":"2021-10-21"},{"lineNumber":14,"author":{"gitId":"loose-bus-change"},"content":"    private DisplayCommandParser parser \u003d new DisplayCommandParser();","lastModifiedDate":"2021-10-21"},{"lineNumber":15,"author":{"gitId":"loose-bus-change"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":16,"author":{"gitId":"loose-bus-change"},"content":"    @Test","lastModifiedDate":"2021-10-21"},{"lineNumber":17,"author":{"gitId":"loose-bus-change"},"content":"    public void parse_validArgs_returnsDisplayCommand() {","lastModifiedDate":"2021-11-04"},{"lineNumber":18,"author":{"gitId":"loose-bus-change"},"content":"        assertParseSuccess(parser, \"2\", new DisplayCommand(INDEX_SECOND_PERSON));","lastModifiedDate":"2021-10-21"},{"lineNumber":19,"author":{"gitId":"loose-bus-change"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":20,"author":{"gitId":"loose-bus-change"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":21,"author":{"gitId":"loose-bus-change"},"content":"    @Test","lastModifiedDate":"2021-10-21"},{"lineNumber":22,"author":{"gitId":"loose-bus-change"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2021-10-21"},{"lineNumber":23,"author":{"gitId":"loose-bus-change"},"content":"        assertParseFailure(parser, \"*\", String.format(MESSAGE_INVALID_COMMAND_FORMAT, DisplayCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-21"},{"lineNumber":24,"author":{"gitId":"loose-bus-change"},"content":"        assertParseFailure(parser, \"c\", String.format(MESSAGE_INVALID_COMMAND_FORMAT, DisplayCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-21"},{"lineNumber":25,"author":{"gitId":"loose-bus-change"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":26,"author":{"gitId":"loose-bus-change"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":27,"author":{"gitId":"loose-bus-change"},"content":"    @Test","lastModifiedDate":"2021-11-04"},{"lineNumber":28,"author":{"gitId":"loose-bus-change"},"content":"    public void parse_tooBigInt_throwsParseException() {","lastModifiedDate":"2021-11-04"},{"lineNumber":29,"author":{"gitId":"loose-bus-change"},"content":"        long l \u003d 23423498233L;","lastModifiedDate":"2021-11-04"},{"lineNumber":30,"author":{"gitId":"loose-bus-change"},"content":"        String input \u003d String.valueOf(l);","lastModifiedDate":"2021-11-04"},{"lineNumber":31,"author":{"gitId":"loose-bus-change"},"content":"        assertParseFailure(parser, input, String.format(MESSAGE_INDEX_NOT_PARSED));","lastModifiedDate":"2021-11-07"},{"lineNumber":32,"author":{"gitId":"loose-bus-change"},"content":"    }","lastModifiedDate":"2021-11-04"},{"lineNumber":33,"author":{"gitId":"loose-bus-change"},"content":"}","lastModifiedDate":"2021-10-21"}],"authorContributionMap":{"loose-bus-change":33}},{"path":"src/test/java/seedu/address/logic/parser/EditCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-09-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2021-10-23"},{"lineNumber":5,"author":{"gitId":"pranav-ganesh"},"content":"import static seedu.address.logic.commands.CommandTestUtil.AGE_DESC_AMY;","lastModifiedDate":"2021-10-23"},{"lineNumber":6,"author":{"gitId":"pranav-ganesh"},"content":"import static seedu.address.logic.commands.CommandTestUtil.CALLED_DESC_AMY;","lastModifiedDate":"2021-11-04"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2021-10-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_BOB;","lastModifiedDate":"2021-10-23"},{"lineNumber":9,"author":{"gitId":"pranav-ganesh"},"content":"import static seedu.address.logic.commands.CommandTestUtil.GENDER_DESC_AMY;","lastModifiedDate":"2021-10-23"},{"lineNumber":10,"author":{"gitId":"pranav-ganesh"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INTEREST_DESC_AMY;","lastModifiedDate":"2021-10-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_EMAIL_DESC;","lastModifiedDate":"2021-10-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2021-10-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_PHONE_DESC;","lastModifiedDate":"2021-10-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2021-10-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2021-10-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_BOB;","lastModifiedDate":"2021-10-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_AMY;","lastModifiedDate":"2021-10-23"},{"lineNumber":18,"author":{"gitId":"pranav-ganesh"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_AGE_AMY;","lastModifiedDate":"2021-10-23"},{"lineNumber":19,"author":{"gitId":"pranav-ganesh"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_CALLED_AMY;","lastModifiedDate":"2021-11-04"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;","lastModifiedDate":"2021-10-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2021-10-23"},{"lineNumber":22,"author":{"gitId":"pranav-ganesh"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_GENDER_AMY;","lastModifiedDate":"2021-10-23"},{"lineNumber":23,"author":{"gitId":"pranav-ganesh"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_INTEREST_AMY;","lastModifiedDate":"2021-10-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2021-10-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2021-10-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2021-10-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2021-09-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2021-09-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2021-09-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2021-09-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2021-09-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_THIRD_PERSON;","lastModifiedDate":"2021-09-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-09-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-09-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2021-09-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2021-09-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2021-09-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2021-09-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2021-09-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2021-09-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"public class EditCommandParserTest {","lastModifiedDate":"2021-09-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    private static final String TAG_EMPTY \u003d \" \" + PREFIX_TAG;","lastModifiedDate":"2021-09-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    private static final String MESSAGE_INVALID_FORMAT \u003d","lastModifiedDate":"2021-09-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditCommand.MESSAGE_USAGE);","lastModifiedDate":"2021-09-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    private EditCommandParser parser \u003d new EditCommandParser();","lastModifiedDate":"2021-09-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-09-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void parse_missingParts_failure() {","lastModifiedDate":"2021-09-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // no index specified","lastModifiedDate":"2021-09-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, VALID_NAME_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2021-09-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        // no field specified","lastModifiedDate":"2021-09-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\", EditCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2021-09-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        // no index and no field specified","lastModifiedDate":"2021-09-21"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2021-09-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-09-21"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public void parse_invalidPreamble_failure() {","lastModifiedDate":"2021-09-21"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // negative index","lastModifiedDate":"2021-09-21"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"-5\" + NAME_DESC_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2021-09-21"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        // zero index","lastModifiedDate":"2021-09-21"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"0\" + NAME_DESC_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2021-09-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        // invalid arguments being parsed as preamble","lastModifiedDate":"2021-09-21"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1 some random string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2021-09-21"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        // invalid prefix being parsed as preamble","lastModifiedDate":"2021-09-21"},{"lineNumber":77,"author":{"gitId":"pranav-ganesh"},"content":"        assertParseFailure(parser, \"1 u/ string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2021-10-22"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-21"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-09-21"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2021-09-21"},{"lineNumber":82,"author":{"gitId":"houtenteo"},"content":"        assertParseFailure(parser, \"1\" + INVALID_NAME_DESC, // invalid name","lastModifiedDate":"2021-11-06"},{"lineNumber":83,"author":{"gitId":"houtenteo"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, Name.MESSAGE_CONSTRAINTS)","lastModifiedDate":"2021-11-06"},{"lineNumber":84,"author":{"gitId":"houtenteo"},"content":"        );","lastModifiedDate":"2021-11-06"},{"lineNumber":85,"author":{"gitId":"houtenteo"},"content":"        assertParseFailure(parser, \"1\" + INVALID_PHONE_DESC, // invalid phone","lastModifiedDate":"2021-11-06"},{"lineNumber":86,"author":{"gitId":"houtenteo"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, Phone.MESSAGE_CONSTRAINTS)","lastModifiedDate":"2021-11-06"},{"lineNumber":87,"author":{"gitId":"houtenteo"},"content":"        );","lastModifiedDate":"2021-11-06"},{"lineNumber":88,"author":{"gitId":"houtenteo"},"content":"        assertParseFailure(parser, \"1\" + INVALID_EMAIL_DESC, // invalid email","lastModifiedDate":"2021-11-06"},{"lineNumber":89,"author":{"gitId":"houtenteo"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, Email.MESSAGE_CONSTRAINTS));","lastModifiedDate":"2021-11-06"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        // invalid phone followed by valid email","lastModifiedDate":"2021-09-21"},{"lineNumber":92,"author":{"gitId":"houtenteo"},"content":"        assertParseFailure(parser, \"1\" + INVALID_PHONE_DESC + EMAIL_DESC_AMY,","lastModifiedDate":"2021-11-06"},{"lineNumber":93,"author":{"gitId":"houtenteo"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, Phone.MESSAGE_CONSTRAINTS));","lastModifiedDate":"2021-11-06"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        // valid phone followed by invalid phone. The test case for invalid phone followed by valid phone","lastModifiedDate":"2021-09-21"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        // is tested at {@code parse_invalidValueFollowedByValidValue_success()}","lastModifiedDate":"2021-09-21"},{"lineNumber":97,"author":{"gitId":"houtenteo"},"content":"        assertParseFailure(parser, \"1\" + PHONE_DESC_BOB + INVALID_PHONE_DESC,","lastModifiedDate":"2021-11-06"},{"lineNumber":98,"author":{"gitId":"houtenteo"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, Phone.MESSAGE_CONSTRAINTS));","lastModifiedDate":"2021-11-06"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        // multiple invalid values, but only the first invalid value is captured","lastModifiedDate":"2021-09-21"},{"lineNumber":101,"author":{"gitId":"houtenteo"},"content":"        assertParseFailure(parser, \"1\" + INVALID_NAME_DESC + INVALID_EMAIL_DESC + VALID_PHONE_AMY,","lastModifiedDate":"2021-09-22"},{"lineNumber":102,"author":{"gitId":"houtenteo"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, Name.MESSAGE_CONSTRAINTS));","lastModifiedDate":"2021-11-06"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-21"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-09-21"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    public void parse_allFieldsSpecified_success() {","lastModifiedDate":"2021-09-21"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2021-09-21"},{"lineNumber":108,"author":{"gitId":"pranav-ganesh"},"content":"        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_BOB + EMAIL_DESC_AMY + NAME_DESC_AMY + AGE_DESC_AMY","lastModifiedDate":"2021-10-22"},{"lineNumber":109,"author":{"gitId":"pranav-ganesh"},"content":"                + ADDRESS_DESC_AMY + CALLED_DESC_AMY + GENDER_DESC_AMY + INTEREST_DESC_AMY;","lastModifiedDate":"2021-11-04"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2021-09-21"},{"lineNumber":112,"author":{"gitId":"pranav-ganesh"},"content":"                .withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_AMY).withAge(VALID_AGE_AMY)","lastModifiedDate":"2021-10-23"},{"lineNumber":113,"author":{"gitId":"pranav-ganesh"},"content":"                .withGender(VALID_GENDER_AMY).withAddress(VALID_ADDRESS_AMY).withCalled(VALID_CALLED_AMY)","lastModifiedDate":"2021-11-04"},{"lineNumber":114,"author":{"gitId":"pranav-ganesh"},"content":"                .withInterests(VALID_INTEREST_AMY).build();","lastModifiedDate":"2021-10-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2021-09-21"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2021-09-21"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-21"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-09-21"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    public void parse_someFieldsSpecified_success() {","lastModifiedDate":"2021-09-21"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2021-09-21"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_BOB + EMAIL_DESC_AMY;","lastModifiedDate":"2021-09-21"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2021-09-21"},{"lineNumber":126,"author":{"gitId":"-"},"content":"                .withEmail(VALID_EMAIL_AMY).build();","lastModifiedDate":"2021-09-21"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2021-09-21"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2021-09-21"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-21"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-09-21"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    public void parse_oneFieldSpecified_success() {","lastModifiedDate":"2021-09-21"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        // name","lastModifiedDate":"2021-09-21"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_THIRD_PERSON;","lastModifiedDate":"2021-09-21"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + NAME_DESC_AMY;","lastModifiedDate":"2021-09-21"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY).build();","lastModifiedDate":"2021-09-21"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2021-09-21"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2021-09-21"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        // phone","lastModifiedDate":"2021-09-21"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + PHONE_DESC_AMY;","lastModifiedDate":"2021-09-21"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_AMY).build();","lastModifiedDate":"2021-09-21"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2021-09-21"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2021-09-21"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        // email","lastModifiedDate":"2021-09-21"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + EMAIL_DESC_AMY;","lastModifiedDate":"2021-09-21"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withEmail(VALID_EMAIL_AMY).build();","lastModifiedDate":"2021-09-21"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2021-09-21"},{"lineNumber":151,"author":{"gitId":"pranav-ganesh"},"content":"        System.out.println(userInput);","lastModifiedDate":"2021-10-22"},{"lineNumber":152,"author":{"gitId":"pranav-ganesh"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2021-10-22"},{"lineNumber":153,"author":{"gitId":"pranav-ganesh"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":154,"author":{"gitId":"pranav-ganesh"},"content":"        // gender","lastModifiedDate":"2021-10-22"},{"lineNumber":155,"author":{"gitId":"pranav-ganesh"},"content":"        userInput \u003d targetIndex.getOneBased() + GENDER_DESC_AMY;","lastModifiedDate":"2021-10-22"},{"lineNumber":156,"author":{"gitId":"pranav-ganesh"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withGender(VALID_GENDER_AMY).build();","lastModifiedDate":"2021-10-22"},{"lineNumber":157,"author":{"gitId":"pranav-ganesh"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2021-10-22"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2021-10-22"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        // address","lastModifiedDate":"2021-10-22"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + ADDRESS_DESC_AMY;","lastModifiedDate":"2021-10-22"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withAddress(VALID_ADDRESS_AMY).build();","lastModifiedDate":"2021-10-22"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2021-10-22"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2021-10-22"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":166,"author":{"gitId":"pranav-ganesh"},"content":"        // isCalled","lastModifiedDate":"2021-11-04"},{"lineNumber":167,"author":{"gitId":"pranav-ganesh"},"content":"        userInput \u003d targetIndex.getOneBased() + CALLED_DESC_AMY;","lastModifiedDate":"2021-11-04"},{"lineNumber":168,"author":{"gitId":"pranav-ganesh"},"content":"        System.out.println(userInput);","lastModifiedDate":"2021-10-22"},{"lineNumber":169,"author":{"gitId":"pranav-ganesh"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withCalled(VALID_CALLED_AMY).build();","lastModifiedDate":"2021-11-04"},{"lineNumber":170,"author":{"gitId":"pranav-ganesh"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2021-10-22"},{"lineNumber":171,"author":{"gitId":"pranav-ganesh"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2021-10-22"},{"lineNumber":172,"author":{"gitId":"pranav-ganesh"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":173,"author":{"gitId":"pranav-ganesh"},"content":"        // age","lastModifiedDate":"2021-10-22"},{"lineNumber":174,"author":{"gitId":"pranav-ganesh"},"content":"        userInput \u003d targetIndex.getOneBased() + AGE_DESC_AMY;","lastModifiedDate":"2021-10-22"},{"lineNumber":175,"author":{"gitId":"pranav-ganesh"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withAge(VALID_AGE_AMY).build();","lastModifiedDate":"2021-10-22"},{"lineNumber":176,"author":{"gitId":"pranav-ganesh"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2021-10-22"},{"lineNumber":177,"author":{"gitId":"pranav-ganesh"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2021-10-22"},{"lineNumber":178,"author":{"gitId":"pranav-ganesh"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":179,"author":{"gitId":"pranav-ganesh"},"content":"        // interests","lastModifiedDate":"2021-10-22"},{"lineNumber":180,"author":{"gitId":"pranav-ganesh"},"content":"        userInput \u003d targetIndex.getOneBased() + INTEREST_DESC_AMY;","lastModifiedDate":"2021-10-22"},{"lineNumber":181,"author":{"gitId":"pranav-ganesh"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withInterests(VALID_INTEREST_AMY).build();","lastModifiedDate":"2021-10-22"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2021-10-22"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2021-09-21"},{"lineNumber":184,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-21"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":186,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-09-21"},{"lineNumber":187,"author":{"gitId":"-"},"content":"    public void parse_multipleRepeatedFields_acceptsLast() {","lastModifiedDate":"2021-09-21"},{"lineNumber":188,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2021-09-21"},{"lineNumber":189,"author":{"gitId":"houtenteo"},"content":"        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_AMY + EMAIL_DESC_AMY","lastModifiedDate":"2021-09-22"},{"lineNumber":190,"author":{"gitId":"houtenteo"},"content":"                + PHONE_DESC_AMY + EMAIL_DESC_AMY","lastModifiedDate":"2021-09-22"},{"lineNumber":191,"author":{"gitId":"houtenteo"},"content":"                + PHONE_DESC_BOB + EMAIL_DESC_BOB;","lastModifiedDate":"2021-09-22"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":193,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2021-09-21"},{"lineNumber":194,"author":{"gitId":"houtenteo"},"content":"                .withEmail(VALID_EMAIL_BOB)","lastModifiedDate":"2021-09-22"},{"lineNumber":195,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2021-09-21"},{"lineNumber":196,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2021-09-21"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":198,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2021-09-21"},{"lineNumber":199,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-21"},{"lineNumber":200,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":201,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-09-21"},{"lineNumber":202,"author":{"gitId":"-"},"content":"    public void parse_invalidValueFollowedByValidValue_success() {","lastModifiedDate":"2021-09-21"},{"lineNumber":203,"author":{"gitId":"-"},"content":"        // no other valid values specified","lastModifiedDate":"2021-09-21"},{"lineNumber":204,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2021-09-21"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + INVALID_PHONE_DESC + PHONE_DESC_BOB;","lastModifiedDate":"2021-09-21"},{"lineNumber":206,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2021-09-21"},{"lineNumber":207,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2021-09-21"},{"lineNumber":208,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2021-09-21"},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":210,"author":{"gitId":"-"},"content":"        // other valid values specified","lastModifiedDate":"2021-09-21"},{"lineNumber":211,"author":{"gitId":"houtenteo"},"content":"        userInput \u003d targetIndex.getOneBased() + EMAIL_DESC_BOB + INVALID_PHONE_DESC","lastModifiedDate":"2021-09-22"},{"lineNumber":212,"author":{"gitId":"-"},"content":"                + PHONE_DESC_BOB;","lastModifiedDate":"2021-09-21"},{"lineNumber":213,"author":{"gitId":"houtenteo"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB).build();","lastModifiedDate":"2021-09-22"},{"lineNumber":214,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2021-09-21"},{"lineNumber":215,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2021-09-21"},{"lineNumber":216,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-21"},{"lineNumber":217,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-09-21"}],"authorContributionMap":{"houtenteo":20,"pranav-ganesh":37,"-":160}},{"path":"src/test/java/seedu/address/logic/parser/FilterCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Kangxun"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-10-09"},{"lineNumber":2,"author":{"gitId":"Kangxun"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":3,"author":{"gitId":"Kangxun"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-11-07"},{"lineNumber":4,"author":{"gitId":"Kangxun"},"content":"import static seedu.address.logic.comparators.PersonComparator.MESSAGE_INVALID_CATEGORY;","lastModifiedDate":"2021-10-25"},{"lineNumber":5,"author":{"gitId":"Kangxun"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2021-10-09"},{"lineNumber":6,"author":{"gitId":"Kangxun"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2021-10-09"},{"lineNumber":7,"author":{"gitId":"Kangxun"},"content":"import static seedu.address.logic.parser.ParserUtil.MESSAGE_INVALID_COUNT;","lastModifiedDate":"2021-10-25"},{"lineNumber":8,"author":{"gitId":"Kangxun"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-25"},{"lineNumber":9,"author":{"gitId":"Kangxun"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":10,"author":{"gitId":"Kangxun"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-09"},{"lineNumber":11,"author":{"gitId":"Kangxun"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":12,"author":{"gitId":"Kangxun"},"content":"import seedu.address.logic.commands.FilterCommand;","lastModifiedDate":"2021-10-09"},{"lineNumber":13,"author":{"gitId":"Kangxun"},"content":"import seedu.address.model.category.Category;","lastModifiedDate":"2021-10-09"},{"lineNumber":14,"author":{"gitId":"Kangxun"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":15,"author":{"gitId":"Kangxun"},"content":"public class FilterCommandParserTest {","lastModifiedDate":"2021-10-09"},{"lineNumber":16,"author":{"gitId":"Kangxun"},"content":"    private static final String INVALID_CATEGORY \u003d \"phone\";","lastModifiedDate":"2021-10-25"},{"lineNumber":17,"author":{"gitId":"Kangxun"},"content":"    private static final String INVALID_COUNT \u003d \"-2\";","lastModifiedDate":"2021-10-25"},{"lineNumber":18,"author":{"gitId":"Kangxun"},"content":"    private static final String NON_EMPTY_CATEGORY \u003d \"called\";","lastModifiedDate":"2021-10-25"},{"lineNumber":19,"author":{"gitId":"Kangxun"},"content":"    private static final String NON_ZERO_COUNT \u003d \"4\";","lastModifiedDate":"2021-10-25"},{"lineNumber":20,"author":{"gitId":"Kangxun"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":21,"author":{"gitId":"Kangxun"},"content":"    private final Category nonEmptyCategory \u003d new Category(\"called\");","lastModifiedDate":"2021-10-25"},{"lineNumber":22,"author":{"gitId":"Kangxun"},"content":"    private final Integer nonZeroCount \u003d 4;","lastModifiedDate":"2021-10-09"},{"lineNumber":23,"author":{"gitId":"Kangxun"},"content":"    private FilterCommandParser parser \u003d new FilterCommandParser();","lastModifiedDate":"2021-10-09"},{"lineNumber":24,"author":{"gitId":"Kangxun"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":25,"author":{"gitId":"Kangxun"},"content":"    @Test","lastModifiedDate":"2021-10-09"},{"lineNumber":26,"author":{"gitId":"Kangxun"},"content":"    public void parse_categorySpecified_success() {","lastModifiedDate":"2021-10-09"},{"lineNumber":27,"author":{"gitId":"Kangxun"},"content":"        // have count","lastModifiedDate":"2021-10-09"},{"lineNumber":28,"author":{"gitId":"Kangxun"},"content":"        String userInput \u003d NON_EMPTY_CATEGORY + \" \" + NON_ZERO_COUNT;","lastModifiedDate":"2021-10-09"},{"lineNumber":29,"author":{"gitId":"Kangxun"},"content":"        FilterCommand expectedCommand \u003d new FilterCommand(nonEmptyCategory, nonZeroCount);","lastModifiedDate":"2021-10-09"},{"lineNumber":30,"author":{"gitId":"Kangxun"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2021-10-09"},{"lineNumber":31,"author":{"gitId":"Kangxun"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":32,"author":{"gitId":"Kangxun"},"content":"        // no count","lastModifiedDate":"2021-10-09"},{"lineNumber":33,"author":{"gitId":"Kangxun"},"content":"        userInput \u003d NON_EMPTY_CATEGORY + \" \" + \"\";","lastModifiedDate":"2021-10-09"},{"lineNumber":34,"author":{"gitId":"Kangxun"},"content":"        expectedCommand \u003d new FilterCommand(nonEmptyCategory, Integer.MAX_VALUE);","lastModifiedDate":"2021-10-09"},{"lineNumber":35,"author":{"gitId":"Kangxun"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2021-10-09"},{"lineNumber":36,"author":{"gitId":"Kangxun"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":37,"author":{"gitId":"Kangxun"},"content":"        // no count","lastModifiedDate":"2021-10-25"},{"lineNumber":38,"author":{"gitId":"Kangxun"},"content":"        userInput \u003d NON_EMPTY_CATEGORY + \" \";","lastModifiedDate":"2021-10-25"},{"lineNumber":39,"author":{"gitId":"Kangxun"},"content":"        expectedCommand \u003d new FilterCommand(nonEmptyCategory, Integer.MAX_VALUE);","lastModifiedDate":"2021-10-25"},{"lineNumber":40,"author":{"gitId":"Kangxun"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2021-10-25"},{"lineNumber":41,"author":{"gitId":"Kangxun"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":42,"author":{"gitId":"Kangxun"},"content":"        // multiple parameters, last parameter is count","lastModifiedDate":"2021-10-25"},{"lineNumber":43,"author":{"gitId":"Kangxun"},"content":"        userInput \u003d NON_ZERO_COUNT + \" \" + NON_EMPTY_CATEGORY + \" \" + NON_ZERO_COUNT;","lastModifiedDate":"2021-10-25"},{"lineNumber":44,"author":{"gitId":"Kangxun"},"content":"        expectedCommand \u003d new FilterCommand(nonEmptyCategory, nonZeroCount);","lastModifiedDate":"2021-10-25"},{"lineNumber":45,"author":{"gitId":"Kangxun"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2021-10-25"},{"lineNumber":46,"author":{"gitId":"Kangxun"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":47,"author":{"gitId":"Kangxun"},"content":"        // multiple parameters, last parameter is category","lastModifiedDate":"2021-10-25"},{"lineNumber":48,"author":{"gitId":"Kangxun"},"content":"        userInput \u003d NON_ZERO_COUNT + \" \" + NON_ZERO_COUNT + \" \" + NON_EMPTY_CATEGORY;","lastModifiedDate":"2021-10-25"},{"lineNumber":49,"author":{"gitId":"Kangxun"},"content":"        expectedCommand \u003d new FilterCommand(nonEmptyCategory, Integer.MAX_VALUE);","lastModifiedDate":"2021-10-25"},{"lineNumber":50,"author":{"gitId":"Kangxun"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2021-10-25"},{"lineNumber":51,"author":{"gitId":"Kangxun"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":52,"author":{"gitId":"Kangxun"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":53,"author":{"gitId":"Kangxun"},"content":"    @Test","lastModifiedDate":"2021-10-09"},{"lineNumber":54,"author":{"gitId":"Kangxun"},"content":"    public void parse_missingCompulsoryField_failure() {","lastModifiedDate":"2021-10-09"},{"lineNumber":55,"author":{"gitId":"Kangxun"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2021-11-07"},{"lineNumber":56,"author":{"gitId":"Kangxun"},"content":"                MESSAGE_INVALID_CATEGORY + FilterCommand.MESSAGE_USAGE);","lastModifiedDate":"2021-11-07"},{"lineNumber":57,"author":{"gitId":"Kangxun"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":58,"author":{"gitId":"Kangxun"},"content":"        // no parameters","lastModifiedDate":"2021-10-09"},{"lineNumber":59,"author":{"gitId":"Kangxun"},"content":"        assertParseFailure(parser, \"\",","lastModifiedDate":"2021-11-07"},{"lineNumber":60,"author":{"gitId":"Kangxun"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, FilterCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-11-07"},{"lineNumber":61,"author":{"gitId":"Kangxun"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":62,"author":{"gitId":"Kangxun"},"content":"        // null input","lastModifiedDate":"2021-10-25"},{"lineNumber":63,"author":{"gitId":"Kangxun"},"content":"        assertThrows(NullPointerException.class, () -\u003e parser.parse(null));","lastModifiedDate":"2021-10-25"},{"lineNumber":64,"author":{"gitId":"Kangxun"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":65,"author":{"gitId":"Kangxun"},"content":"        // wrong category","lastModifiedDate":"2021-10-25"},{"lineNumber":66,"author":{"gitId":"Kangxun"},"content":"        assertParseFailure(parser, NON_ZERO_COUNT, expectedMessage);","lastModifiedDate":"2021-10-09"},{"lineNumber":67,"author":{"gitId":"Kangxun"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":68,"author":{"gitId":"Kangxun"},"content":"        // no category","lastModifiedDate":"2021-10-25"},{"lineNumber":69,"author":{"gitId":"Kangxun"},"content":"        String userInput \u003d \" \" + NON_ZERO_COUNT;","lastModifiedDate":"2021-10-25"},{"lineNumber":70,"author":{"gitId":"Kangxun"},"content":"        assertParseFailure(parser, userInput, expectedMessage);","lastModifiedDate":"2021-10-25"},{"lineNumber":71,"author":{"gitId":"Kangxun"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":72,"author":{"gitId":"Kangxun"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":73,"author":{"gitId":"Kangxun"},"content":"    @Test","lastModifiedDate":"2021-10-25"},{"lineNumber":74,"author":{"gitId":"Kangxun"},"content":"    public void parse_invalidCount_failure() {","lastModifiedDate":"2021-10-25"},{"lineNumber":75,"author":{"gitId":"Kangxun"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2021-11-07"},{"lineNumber":76,"author":{"gitId":"Kangxun"},"content":"                MESSAGE_INVALID_COUNT + FilterCommand.MESSAGE_USAGE);","lastModifiedDate":"2021-11-07"},{"lineNumber":77,"author":{"gitId":"Kangxun"},"content":"        String userInput \u003d NON_EMPTY_CATEGORY + \" \" + INVALID_COUNT;","lastModifiedDate":"2021-10-25"},{"lineNumber":78,"author":{"gitId":"Kangxun"},"content":"        assertParseFailure(parser, userInput, expectedMessage);","lastModifiedDate":"2021-10-25"},{"lineNumber":79,"author":{"gitId":"Kangxun"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":80,"author":{"gitId":"Kangxun"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":81,"author":{"gitId":"Kangxun"},"content":"    @Test","lastModifiedDate":"2021-10-25"},{"lineNumber":82,"author":{"gitId":"Kangxun"},"content":"    public void parse_invalidCategory_failure() {","lastModifiedDate":"2021-10-25"},{"lineNumber":83,"author":{"gitId":"Kangxun"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2021-11-07"},{"lineNumber":84,"author":{"gitId":"Kangxun"},"content":"                MESSAGE_INVALID_CATEGORY + FilterCommand.MESSAGE_USAGE);","lastModifiedDate":"2021-11-07"},{"lineNumber":85,"author":{"gitId":"Kangxun"},"content":"        String userInput \u003d INVALID_CATEGORY + \" \" + NON_ZERO_COUNT;","lastModifiedDate":"2021-10-25"},{"lineNumber":86,"author":{"gitId":"Kangxun"},"content":"        assertParseFailure(parser, userInput, expectedMessage);","lastModifiedDate":"2021-10-25"},{"lineNumber":87,"author":{"gitId":"Kangxun"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":88,"author":{"gitId":"Kangxun"},"content":"}","lastModifiedDate":"2021-10-09"}],"authorContributionMap":{"Kangxun":88}},{"path":"src/test/java/seedu/address/logic/parser/FindAllCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"houtenteo"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-10-27"},{"lineNumber":2,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":3,"author":{"gitId":"houtenteo"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-27"},{"lineNumber":4,"author":{"gitId":"houtenteo"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2021-10-27"},{"lineNumber":5,"author":{"gitId":"houtenteo"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2021-10-27"},{"lineNumber":6,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":7,"author":{"gitId":"houtenteo"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-27"},{"lineNumber":8,"author":{"gitId":"houtenteo"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-10-27"},{"lineNumber":9,"author":{"gitId":"houtenteo"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2021-10-27"},{"lineNumber":10,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":11,"author":{"gitId":"houtenteo"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-27"},{"lineNumber":12,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":13,"author":{"gitId":"houtenteo"},"content":"import seedu.address.logic.commands.FindAllCommand;","lastModifiedDate":"2021-10-27"},{"lineNumber":14,"author":{"gitId":"houtenteo"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2021-10-27"},{"lineNumber":15,"author":{"gitId":"houtenteo"},"content":"import seedu.address.model.person.predicates.CombinedPredicate;","lastModifiedDate":"2021-10-27"},{"lineNumber":16,"author":{"gitId":"houtenteo"},"content":"import seedu.address.model.person.predicates.EmailContainsKeywordsPredicate;","lastModifiedDate":"2021-10-27"},{"lineNumber":17,"author":{"gitId":"houtenteo"},"content":"import seedu.address.model.person.predicates.NameContainsKeywordsPredicate;","lastModifiedDate":"2021-10-27"},{"lineNumber":18,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":19,"author":{"gitId":"houtenteo"},"content":"public class FindAllCommandParserTest {","lastModifiedDate":"2021-10-27"},{"lineNumber":20,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":21,"author":{"gitId":"houtenteo"},"content":"    private FindAllCommandParser parser \u003d new FindAllCommandParser();","lastModifiedDate":"2021-10-27"},{"lineNumber":22,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":23,"author":{"gitId":"houtenteo"},"content":"    @Test","lastModifiedDate":"2021-10-27"},{"lineNumber":24,"author":{"gitId":"houtenteo"},"content":"    public void parse_emptyArg_throwsParseException() {","lastModifiedDate":"2021-10-27"},{"lineNumber":25,"author":{"gitId":"houtenteo"},"content":"        assertParseFailure(parser, \"     \",","lastModifiedDate":"2021-10-27"},{"lineNumber":26,"author":{"gitId":"houtenteo"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindAllCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-11-01"},{"lineNumber":27,"author":{"gitId":"houtenteo"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":28,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":29,"author":{"gitId":"houtenteo"},"content":"    @Test","lastModifiedDate":"2021-10-27"},{"lineNumber":30,"author":{"gitId":"houtenteo"},"content":"    public void parse_oneInvalidField_throwsParseException() {","lastModifiedDate":"2021-10-27"},{"lineNumber":31,"author":{"gitId":"houtenteo"},"content":"        assertParseFailure(parser, \"  nn/test\",","lastModifiedDate":"2021-10-27"},{"lineNumber":32,"author":{"gitId":"houtenteo"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindAllCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-11-01"},{"lineNumber":33,"author":{"gitId":"houtenteo"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":34,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":35,"author":{"gitId":"houtenteo"},"content":"    @Test","lastModifiedDate":"2021-10-27"},{"lineNumber":36,"author":{"gitId":"houtenteo"},"content":"    public void parse_emptyField_throwsParseException() {","lastModifiedDate":"2021-10-27"},{"lineNumber":37,"author":{"gitId":"houtenteo"},"content":"        assertParseFailure(parser, \" g/\",","lastModifiedDate":"2021-10-27"},{"lineNumber":38,"author":{"gitId":"houtenteo"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindAllCommandParser.EMPTY_FIELD_MESSAGE + \"g/\"));","lastModifiedDate":"2021-11-01"},{"lineNumber":39,"author":{"gitId":"houtenteo"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":40,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":41,"author":{"gitId":"houtenteo"},"content":"    @Test","lastModifiedDate":"2021-10-27"},{"lineNumber":42,"author":{"gitId":"houtenteo"},"content":"    public void parse_oneValidField_returnsFindAllCommand() {","lastModifiedDate":"2021-10-27"},{"lineNumber":43,"author":{"gitId":"houtenteo"},"content":"        // no leading and trailing whitespaces","lastModifiedDate":"2021-10-27"},{"lineNumber":44,"author":{"gitId":"houtenteo"},"content":"        ArrayList\u003cPredicate\u003cPerson\u003e\u003e predicates \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-27"},{"lineNumber":45,"author":{"gitId":"houtenteo"},"content":"        predicates.add(new NameContainsKeywordsPredicate(Arrays.asList(\"Alice\", \"Bob\"), true));","lastModifiedDate":"2021-10-27"},{"lineNumber":46,"author":{"gitId":"houtenteo"},"content":"        CombinedPredicate predicate \u003d new CombinedPredicate(predicates, true);","lastModifiedDate":"2021-10-27"},{"lineNumber":47,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":48,"author":{"gitId":"houtenteo"},"content":"        FindAllCommand expectedFindAllCommand \u003d","lastModifiedDate":"2021-10-27"},{"lineNumber":49,"author":{"gitId":"houtenteo"},"content":"                new FindAllCommand(predicate);","lastModifiedDate":"2021-10-27"},{"lineNumber":50,"author":{"gitId":"houtenteo"},"content":"        assertParseSuccess(parser, \" n/Alice Bob\", expectedFindAllCommand);","lastModifiedDate":"2021-10-27"},{"lineNumber":51,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":52,"author":{"gitId":"houtenteo"},"content":"        // multiple whitespaces between keywords","lastModifiedDate":"2021-10-27"},{"lineNumber":53,"author":{"gitId":"houtenteo"},"content":"        assertParseSuccess(parser, \" n/\\n Alice \\n \\t Bob  \\t\", expectedFindAllCommand);","lastModifiedDate":"2021-10-27"},{"lineNumber":54,"author":{"gitId":"houtenteo"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":55,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":56,"author":{"gitId":"houtenteo"},"content":"    @Test","lastModifiedDate":"2021-10-27"},{"lineNumber":57,"author":{"gitId":"houtenteo"},"content":"    public void parse_multipleValidFields_returnsFindCommand() {","lastModifiedDate":"2021-10-27"},{"lineNumber":58,"author":{"gitId":"houtenteo"},"content":"        // no leading and trailing whitespaces","lastModifiedDate":"2021-10-27"},{"lineNumber":59,"author":{"gitId":"houtenteo"},"content":"        ArrayList\u003cPredicate\u003cPerson\u003e\u003e predicates \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-27"},{"lineNumber":60,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":61,"author":{"gitId":"houtenteo"},"content":"        predicates.add(new NameContainsKeywordsPredicate(Arrays.asList(\"Alice\", \"Bob\"), true));","lastModifiedDate":"2021-10-27"},{"lineNumber":62,"author":{"gitId":"houtenteo"},"content":"        predicates.add(new EmailContainsKeywordsPredicate(Arrays.asList(\"gmail\", \"yahoo\"), true));","lastModifiedDate":"2021-10-27"},{"lineNumber":63,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":64,"author":{"gitId":"houtenteo"},"content":"        CombinedPredicate predicate \u003d new CombinedPredicate(predicates, true);","lastModifiedDate":"2021-10-27"},{"lineNumber":65,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":66,"author":{"gitId":"houtenteo"},"content":"        FindAllCommand expectedFindAllCommand \u003d new FindAllCommand(predicate);","lastModifiedDate":"2021-10-27"},{"lineNumber":67,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":68,"author":{"gitId":"houtenteo"},"content":"        assertParseSuccess(parser, \" n/Alice Bob e/gmail yahoo\", expectedFindAllCommand);","lastModifiedDate":"2021-10-27"},{"lineNumber":69,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":70,"author":{"gitId":"houtenteo"},"content":"        // multiple whitespaces between keywords","lastModifiedDate":"2021-10-27"},{"lineNumber":71,"author":{"gitId":"houtenteo"},"content":"        assertParseSuccess(parser, \" n/\\n Alice \\n \\t Bob  \\t e/\\n gmail \\t yahoo\", expectedFindAllCommand);","lastModifiedDate":"2021-10-27"},{"lineNumber":72,"author":{"gitId":"houtenteo"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":73,"author":{"gitId":"houtenteo"},"content":"}","lastModifiedDate":"2021-10-27"}],"authorContributionMap":{"houtenteo":73}},{"path":"src/test/java/seedu/address/logic/parser/FindAnyCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-06-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-06-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":7,"author":{"gitId":"houtenteo"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-26"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-27"},{"lineNumber":9,"author":{"gitId":"houtenteo"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2021-10-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":13,"author":{"gitId":"houtenteo"},"content":"import seedu.address.logic.commands.FindAnyCommand;","lastModifiedDate":"2021-10-28"},{"lineNumber":14,"author":{"gitId":"houtenteo"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2021-10-26"},{"lineNumber":15,"author":{"gitId":"houtenteo"},"content":"import seedu.address.model.person.predicates.CombinedPredicate;","lastModifiedDate":"2021-10-26"},{"lineNumber":16,"author":{"gitId":"houtenteo"},"content":"import seedu.address.model.person.predicates.EmailContainsKeywordsPredicate;","lastModifiedDate":"2021-10-27"},{"lineNumber":17,"author":{"gitId":"houtenteo"},"content":"import seedu.address.model.person.predicates.NameContainsKeywordsPredicate;","lastModifiedDate":"2021-10-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":19,"author":{"gitId":"houtenteo"},"content":"public class FindAnyCommandParserTest {","lastModifiedDate":"2021-10-28"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":21,"author":{"gitId":"houtenteo"},"content":"    private FindAnyCommandParser parser \u003d new FindAnyCommandParser();","lastModifiedDate":"2021-10-28"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void parse_emptyArg_throwsParseException() {","lastModifiedDate":"2017-06-27"},{"lineNumber":25,"author":{"gitId":"houtenteo"},"content":"        assertParseFailure(parser, \"     \",","lastModifiedDate":"2021-10-26"},{"lineNumber":26,"author":{"gitId":"houtenteo"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindAnyCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-28"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":30,"author":{"gitId":"houtenteo"},"content":"    public void parse_oneInvalidField_throwsParseException() {","lastModifiedDate":"2021-10-27"},{"lineNumber":31,"author":{"gitId":"houtenteo"},"content":"        assertParseFailure(parser, \"  nn/test\",","lastModifiedDate":"2021-10-27"},{"lineNumber":32,"author":{"gitId":"houtenteo"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindAnyCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-28"},{"lineNumber":33,"author":{"gitId":"houtenteo"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":34,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":35,"author":{"gitId":"houtenteo"},"content":"    @Test","lastModifiedDate":"2021-10-27"},{"lineNumber":36,"author":{"gitId":"houtenteo"},"content":"    public void parse_emptyField_throwsParseException() {","lastModifiedDate":"2021-10-27"},{"lineNumber":37,"author":{"gitId":"houtenteo"},"content":"        assertParseFailure(parser, \" g/\",","lastModifiedDate":"2021-10-27"},{"lineNumber":38,"author":{"gitId":"houtenteo"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindAnyCommandParser.EMPTY_FIELD_MESSAGE + \"g/\"));","lastModifiedDate":"2021-10-28"},{"lineNumber":39,"author":{"gitId":"houtenteo"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":40,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":41,"author":{"gitId":"houtenteo"},"content":"    @Test","lastModifiedDate":"2021-10-27"},{"lineNumber":42,"author":{"gitId":"houtenteo"},"content":"    public void parse_oneValidField_returnsFindCommand() {","lastModifiedDate":"2021-10-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // no leading and trailing whitespaces","lastModifiedDate":"2017-06-27"},{"lineNumber":44,"author":{"gitId":"houtenteo"},"content":"        ArrayList\u003cPredicate\u003cPerson\u003e\u003e predicates \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-26"},{"lineNumber":45,"author":{"gitId":"houtenteo"},"content":"        predicates.add(new NameContainsKeywordsPredicate(Arrays.asList(\"Alice\", \"Bob\"), false));","lastModifiedDate":"2021-10-27"},{"lineNumber":46,"author":{"gitId":"houtenteo"},"content":"        CombinedPredicate predicate \u003d new CombinedPredicate(predicates, false);","lastModifiedDate":"2021-10-26"},{"lineNumber":47,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":48,"author":{"gitId":"houtenteo"},"content":"        FindAnyCommand expectedFindAnyCommand \u003d","lastModifiedDate":"2021-10-28"},{"lineNumber":49,"author":{"gitId":"houtenteo"},"content":"                new FindAnyCommand(predicate);","lastModifiedDate":"2021-10-28"},{"lineNumber":50,"author":{"gitId":"houtenteo"},"content":"        assertParseSuccess(parser, \" n/Alice Bob\", expectedFindAnyCommand);","lastModifiedDate":"2021-10-28"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        // multiple whitespaces between keywords","lastModifiedDate":"2017-06-27"},{"lineNumber":53,"author":{"gitId":"houtenteo"},"content":"        assertParseSuccess(parser, \" n/\\n Alice \\n \\t Bob  \\t\", expectedFindAnyCommand);","lastModifiedDate":"2021-10-28"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":55,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":56,"author":{"gitId":"houtenteo"},"content":"    @Test","lastModifiedDate":"2021-10-27"},{"lineNumber":57,"author":{"gitId":"houtenteo"},"content":"    public void parse_multipleValidFields_returnsFindCommand() {","lastModifiedDate":"2021-10-27"},{"lineNumber":58,"author":{"gitId":"houtenteo"},"content":"        // no leading and trailing whitespaces","lastModifiedDate":"2021-10-27"},{"lineNumber":59,"author":{"gitId":"houtenteo"},"content":"        ArrayList\u003cPredicate\u003cPerson\u003e\u003e predicates \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-27"},{"lineNumber":60,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":61,"author":{"gitId":"houtenteo"},"content":"        predicates.add(new NameContainsKeywordsPredicate(Arrays.asList(\"Alice\", \"Bob\"), false));","lastModifiedDate":"2021-10-27"},{"lineNumber":62,"author":{"gitId":"houtenteo"},"content":"        predicates.add(new EmailContainsKeywordsPredicate(Arrays.asList(\"gmail\", \"yahoo\"), false));","lastModifiedDate":"2021-10-27"},{"lineNumber":63,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":64,"author":{"gitId":"houtenteo"},"content":"        CombinedPredicate predicate \u003d new CombinedPredicate(predicates, false);","lastModifiedDate":"2021-10-27"},{"lineNumber":65,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":66,"author":{"gitId":"houtenteo"},"content":"        FindAnyCommand expectedFindAnyCommand \u003d new FindAnyCommand(predicate);","lastModifiedDate":"2021-10-28"},{"lineNumber":67,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":68,"author":{"gitId":"houtenteo"},"content":"        assertParseSuccess(parser, \" n/Alice Bob e/gmail yahoo\", expectedFindAnyCommand);","lastModifiedDate":"2021-10-28"},{"lineNumber":69,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":70,"author":{"gitId":"houtenteo"},"content":"        // multiple whitespaces between keywords","lastModifiedDate":"2021-10-27"},{"lineNumber":71,"author":{"gitId":"houtenteo"},"content":"        assertParseSuccess(parser, \" n/\\n Alice \\n \\t Bob  \\t e/\\n gmail \\t yahoo\", expectedFindAnyCommand);","lastModifiedDate":"2021-10-28"},{"lineNumber":72,"author":{"gitId":"houtenteo"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-27"}],"authorContributionMap":{"houtenteo":50,"-":23}},{"path":"src/test/java/seedu/address/logic/parser/ParserUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"houtenteo"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-11-02"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"loose-bus-change"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INDEX_NOT_PARSED;","lastModifiedDate":"2021-11-07"},{"lineNumber":7,"author":{"gitId":"loose-bus-change"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-11-07"},{"lineNumber":8,"author":{"gitId":"houtenteo"},"content":"import static seedu.address.logic.parser.ParserUtil.areAnyPrefixesPresent;","lastModifiedDate":"2021-11-02"},{"lineNumber":9,"author":{"gitId":"houtenteo"},"content":"import static seedu.address.logic.parser.ParserUtil.checkEmptyString;","lastModifiedDate":"2021-11-02"},{"lineNumber":10,"author":{"gitId":"houtenteo"},"content":"import static seedu.address.logic.parser.ParserUtil.checkMaleOrFemale;","lastModifiedDate":"2021-11-02"},{"lineNumber":11,"author":{"gitId":"houtenteo"},"content":"import static seedu.address.logic.parser.ParserUtil.checkTrueOrFalse;","lastModifiedDate":"2021-11-02"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-05-22"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":20,"author":{"gitId":"loose-bus-change"},"content":"import seedu.address.logic.commands.CalledCommand;","lastModifiedDate":"2021-11-07"},{"lineNumber":21,"author":{"gitId":"loose-bus-change"},"content":"import seedu.address.logic.commands.DisplayCommand;","lastModifiedDate":"2021-11-07"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-07-10"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-05-22"},{"lineNumber":24,"author":{"gitId":"houtenteo"},"content":"import seedu.address.model.person.Age;","lastModifiedDate":"2021-10-18"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-05-22"},{"lineNumber":26,"author":{"gitId":"houtenteo"},"content":"import seedu.address.model.person.Gender;","lastModifiedDate":"2021-10-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-05-22"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-05-22"},{"lineNumber":29,"author":{"gitId":"houtenteo"},"content":"import seedu.address.model.person.interests.Interest;","lastModifiedDate":"2021-10-18"},{"lineNumber":30,"author":{"gitId":"houtenteo"},"content":"import seedu.address.model.person.interests.InterestsList;","lastModifiedDate":"2021-10-18"},{"lineNumber":31,"author":{"gitId":"houtenteo"},"content":"import seedu.address.model.person.predicates.AddressContainsKeywordsPredicate;","lastModifiedDate":"2021-11-02"},{"lineNumber":32,"author":{"gitId":"houtenteo"},"content":"import seedu.address.model.person.predicates.AgeContainsValuePredicate;","lastModifiedDate":"2021-11-02"},{"lineNumber":33,"author":{"gitId":"pranav-ganesh"},"content":"import seedu.address.model.person.predicates.CalledPredicate;","lastModifiedDate":"2021-11-04"},{"lineNumber":34,"author":{"gitId":"houtenteo"},"content":"import seedu.address.model.person.predicates.EmailContainsKeywordsPredicate;","lastModifiedDate":"2021-11-02"},{"lineNumber":35,"author":{"gitId":"houtenteo"},"content":"import seedu.address.model.person.predicates.GenderContainsKeywordPredicate;","lastModifiedDate":"2021-11-02"},{"lineNumber":36,"author":{"gitId":"houtenteo"},"content":"import seedu.address.model.person.predicates.InterestContainsKeywordsPredicate;","lastModifiedDate":"2021-11-02"},{"lineNumber":37,"author":{"gitId":"houtenteo"},"content":"import seedu.address.model.person.predicates.NameContainsKeywordsPredicate;","lastModifiedDate":"2021-11-02"},{"lineNumber":38,"author":{"gitId":"houtenteo"},"content":"import seedu.address.model.person.predicates.PhoneContainsNumberPredicate;","lastModifiedDate":"2021-11-02"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":40,"author":{"gitId":"-"},"content":"public class ParserUtilTest {","lastModifiedDate":"2017-05-22"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2017-05-22"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private static final String INVALID_PHONE \u003d \"+651234\";","lastModifiedDate":"2017-05-22"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    private static final String INVALID_ADDRESS \u003d \" \";","lastModifiedDate":"2017-05-22"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    private static final String INVALID_EMAIL \u003d \"example.com\";","lastModifiedDate":"2017-05-22"},{"lineNumber":45,"author":{"gitId":"houtenteo"},"content":"    private static final String INVALID_GENDER \u003d \"Cheetah\";","lastModifiedDate":"2021-10-18"},{"lineNumber":46,"author":{"gitId":"houtenteo"},"content":"    private static final String INVALID_AGE \u003d \"22.5\";","lastModifiedDate":"2021-10-18"},{"lineNumber":47,"author":{"gitId":"houtenteo"},"content":"    private static final String INVALID_INTEREST \u003d \"\";","lastModifiedDate":"2021-10-18"},{"lineNumber":48,"author":{"gitId":"houtenteo"},"content":"    private static final String INVALID_TEST_STRING \u003d \"\";","lastModifiedDate":"2021-11-02"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    private static final String VALID_NAME \u003d \"Rachel Walker\";","lastModifiedDate":"2017-05-22"},{"lineNumber":51,"author":{"gitId":"houtenteo"},"content":"    private static final String VALID_PHONE \u003d \"87654321\";","lastModifiedDate":"2021-11-02"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    private static final String VALID_ADDRESS \u003d \"123 Main Street #0505\";","lastModifiedDate":"2017-05-22"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    private static final String VALID_EMAIL \u003d \"rachel@example.com\";","lastModifiedDate":"2017-05-22"},{"lineNumber":54,"author":{"gitId":"houtenteo"},"content":"    private static final String VALID_GENDER \u003d \"M\";","lastModifiedDate":"2021-10-18"},{"lineNumber":55,"author":{"gitId":"houtenteo"},"content":"    private static final String VALID_AGE \u003d \"22\";","lastModifiedDate":"2021-10-18"},{"lineNumber":56,"author":{"gitId":"houtenteo"},"content":"    private static final String VALID_INTEREST_1 \u003d \"Running\";","lastModifiedDate":"2021-10-18"},{"lineNumber":57,"author":{"gitId":"houtenteo"},"content":"    private static final String VALID_INTEREST_2 \u003d \"Rolling\";","lastModifiedDate":"2021-10-18"},{"lineNumber":58,"author":{"gitId":"houtenteo"},"content":"    private static final String VALID_PREFIX_1 \u003d \"n/\";","lastModifiedDate":"2021-11-02"},{"lineNumber":59,"author":{"gitId":"houtenteo"},"content":"    private static final String VALID_PREFIX_2 \u003d \"a/\";","lastModifiedDate":"2021-11-02"},{"lineNumber":60,"author":{"gitId":"houtenteo"},"content":"    private static final String VALID_TEST_STRING \u003d \"THIS IS A VALID STRING\";","lastModifiedDate":"2021-11-02"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    private static final String WHITESPACE \u003d \" \\t\\r\\n\";","lastModifiedDate":"2017-05-29"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":64,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public void parseIndex_invalidInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":67,"author":{"gitId":"loose-bus-change"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseIndex(\"10 a\", MESSAGE_INVALID_COMMAND_FORMAT));","lastModifiedDate":"2021-11-07"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public void parseIndex_outOfRangeInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":72,"author":{"gitId":"loose-bus-change"},"content":"        assertThrows(ParseException.class, String.format(MESSAGE_INVALID_COMMAND_FORMAT, MESSAGE_INDEX_NOT_PARSED), ()","lastModifiedDate":"2021-11-07"},{"lineNumber":73,"author":{"gitId":"loose-bus-change"},"content":"            -\u003e ParserUtil.parseIndex(Long.toString(Integer.MAX_VALUE + 1), MESSAGE_INDEX_NOT_PARSED));","lastModifiedDate":"2021-11-07"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void parseIndex_validInput_success() throws Exception {","lastModifiedDate":"2017-05-26"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        // No whitespaces","lastModifiedDate":"2017-05-26"},{"lineNumber":79,"author":{"gitId":"loose-bus-change"},"content":"        assertEquals(INDEX_FIRST_PERSON, ParserUtil.parseIndex(\"1\", DisplayCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-11-07"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        // Leading and trailing whitespaces","lastModifiedDate":"2017-05-26"},{"lineNumber":82,"author":{"gitId":"loose-bus-change"},"content":"        assertEquals(INDEX_FIRST_PERSON, ParserUtil.parseIndex(\"  1  \", CalledCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-11-07"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void parseName_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-29"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseName((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    public void parseName_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseName(INVALID_NAME));","lastModifiedDate":"2019-03-14"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    public void parseName_validValueWithoutWhitespace_returnsName() throws Exception {","lastModifiedDate":"2017-05-29"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        Name expectedName \u003d new Name(VALID_NAME);","lastModifiedDate":"2017-05-22"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertEquals(expectedName, ParserUtil.parseName(VALID_NAME));","lastModifiedDate":"2017-05-29"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-29"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    public void parseName_validValueWithWhitespace_returnsTrimmedName() throws Exception {","lastModifiedDate":"2017-05-29"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        String nameWithWhitespace \u003d WHITESPACE + VALID_NAME + WHITESPACE;","lastModifiedDate":"2017-05-29"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        Name expectedName \u003d new Name(VALID_NAME);","lastModifiedDate":"2017-05-29"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        assertEquals(expectedName, ParserUtil.parseName(nameWithWhitespace));","lastModifiedDate":"2017-05-29"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public void parsePhone_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parsePhone((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    public void parsePhone_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parsePhone(INVALID_PHONE));","lastModifiedDate":"2019-03-14"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    public void parsePhone_validValueWithoutWhitespace_returnsPhone() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        Phone expectedPhone \u003d new Phone(VALID_PHONE);","lastModifiedDate":"2017-05-22"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        assertEquals(expectedPhone, ParserUtil.parsePhone(VALID_PHONE));","lastModifiedDate":"2017-05-30"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    public void parsePhone_validValueWithWhitespace_returnsTrimmedPhone() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        String phoneWithWhitespace \u003d WHITESPACE + VALID_PHONE + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        Phone expectedPhone \u003d new Phone(VALID_PHONE);","lastModifiedDate":"2017-05-30"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        assertEquals(expectedPhone, ParserUtil.parsePhone(phoneWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":132,"author":{"gitId":"houtenteo"},"content":"    public void parseEmail_null_throwsNullPointerException() {","lastModifiedDate":"2021-10-18"},{"lineNumber":133,"author":{"gitId":"houtenteo"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseEmail((String) null));","lastModifiedDate":"2021-10-18"},{"lineNumber":134,"author":{"gitId":"houtenteo"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":135,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":136,"author":{"gitId":"houtenteo"},"content":"    @Test","lastModifiedDate":"2021-10-18"},{"lineNumber":137,"author":{"gitId":"houtenteo"},"content":"    public void parseEmail_invalidValue_throwsParseException() {","lastModifiedDate":"2021-10-18"},{"lineNumber":138,"author":{"gitId":"houtenteo"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseEmail(INVALID_EMAIL));","lastModifiedDate":"2021-10-18"},{"lineNumber":139,"author":{"gitId":"houtenteo"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":140,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":141,"author":{"gitId":"houtenteo"},"content":"    @Test","lastModifiedDate":"2021-10-18"},{"lineNumber":142,"author":{"gitId":"houtenteo"},"content":"    public void parseEmail_validValueWithoutWhitespace_returnsEmail() throws Exception {","lastModifiedDate":"2021-10-18"},{"lineNumber":143,"author":{"gitId":"houtenteo"},"content":"        Email expectedEmail \u003d new Email(VALID_EMAIL);","lastModifiedDate":"2021-10-18"},{"lineNumber":144,"author":{"gitId":"houtenteo"},"content":"        assertEquals(expectedEmail, ParserUtil.parseEmail(VALID_EMAIL));","lastModifiedDate":"2021-10-18"},{"lineNumber":145,"author":{"gitId":"houtenteo"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":146,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":147,"author":{"gitId":"houtenteo"},"content":"    @Test","lastModifiedDate":"2021-10-18"},{"lineNumber":148,"author":{"gitId":"houtenteo"},"content":"    public void parseEmail_validValueWithWhitespace_returnsTrimmedEmail() throws Exception {","lastModifiedDate":"2021-10-18"},{"lineNumber":149,"author":{"gitId":"houtenteo"},"content":"        String emailWithWhitespace \u003d WHITESPACE + VALID_EMAIL + WHITESPACE;","lastModifiedDate":"2021-10-18"},{"lineNumber":150,"author":{"gitId":"houtenteo"},"content":"        Email expectedEmail \u003d new Email(VALID_EMAIL);","lastModifiedDate":"2021-10-18"},{"lineNumber":151,"author":{"gitId":"houtenteo"},"content":"        assertEquals(expectedEmail, ParserUtil.parseEmail(emailWithWhitespace));","lastModifiedDate":"2021-10-18"},{"lineNumber":152,"author":{"gitId":"houtenteo"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":153,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":154,"author":{"gitId":"houtenteo"},"content":"    @Test","lastModifiedDate":"2021-10-18"},{"lineNumber":155,"author":{"gitId":"houtenteo"},"content":"    public void parseAddress_null_returnsEmptyAddress() throws Exception {","lastModifiedDate":"2021-10-18"},{"lineNumber":156,"author":{"gitId":"houtenteo"},"content":"        Address expectedAddress \u003d new Address(null);","lastModifiedDate":"2021-10-18"},{"lineNumber":157,"author":{"gitId":"houtenteo"},"content":"        assertEquals(expectedAddress, ParserUtil.parseAddress(null));","lastModifiedDate":"2021-10-18"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    public void parseAddress_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseAddress(INVALID_ADDRESS));","lastModifiedDate":"2019-03-14"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    public void parseAddress_validValueWithoutWhitespace_returnsAddress() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        Address expectedAddress \u003d new Address(VALID_ADDRESS);","lastModifiedDate":"2017-05-22"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddress, ParserUtil.parseAddress(VALID_ADDRESS));","lastModifiedDate":"2017-05-30"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    public void parseAddress_validValueWithWhitespace_returnsTrimmedAddress() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        String addressWithWhitespace \u003d WHITESPACE + VALID_ADDRESS + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        Address expectedAddress \u003d new Address(VALID_ADDRESS);","lastModifiedDate":"2017-05-30"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddress, ParserUtil.parseAddress(addressWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":179,"author":{"gitId":"houtenteo"},"content":"    public void parseGender_null_returnsEmptyGender() throws Exception {","lastModifiedDate":"2021-10-18"},{"lineNumber":180,"author":{"gitId":"houtenteo"},"content":"        Gender expectedGender \u003d new Gender(null);","lastModifiedDate":"2021-10-18"},{"lineNumber":181,"author":{"gitId":"houtenteo"},"content":"        assertEquals(expectedGender, ParserUtil.parseGender(null));","lastModifiedDate":"2021-10-18"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":184,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-10-11"},{"lineNumber":185,"author":{"gitId":"houtenteo"},"content":"    public void parseGender_invalidValue_throwsParseException() {","lastModifiedDate":"2021-10-18"},{"lineNumber":186,"author":{"gitId":"houtenteo"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseGender(INVALID_GENDER));","lastModifiedDate":"2021-10-18"},{"lineNumber":187,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":189,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-10-11"},{"lineNumber":190,"author":{"gitId":"houtenteo"},"content":"    public void parseGender_validValueWithoutWhitespace_returnsGender() throws Exception {","lastModifiedDate":"2021-10-18"},{"lineNumber":191,"author":{"gitId":"houtenteo"},"content":"        Gender expectedGender \u003d new Gender(VALID_GENDER);","lastModifiedDate":"2021-10-18"},{"lineNumber":192,"author":{"gitId":"houtenteo"},"content":"        assertEquals(expectedGender, ParserUtil.parseGender(VALID_GENDER));","lastModifiedDate":"2021-10-18"},{"lineNumber":193,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":195,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-10-11"},{"lineNumber":196,"author":{"gitId":"houtenteo"},"content":"    public void parseGender_validValueWithWhitespace_returnsTrimmedGender() throws Exception {","lastModifiedDate":"2021-10-18"},{"lineNumber":197,"author":{"gitId":"houtenteo"},"content":"        String genderWithWhitespace \u003d WHITESPACE + VALID_GENDER + WHITESPACE;","lastModifiedDate":"2021-10-18"},{"lineNumber":198,"author":{"gitId":"houtenteo"},"content":"        Gender expectedGender \u003d new Gender(VALID_GENDER);","lastModifiedDate":"2021-10-18"},{"lineNumber":199,"author":{"gitId":"houtenteo"},"content":"        assertEquals(expectedGender, ParserUtil.parseGender(genderWithWhitespace));","lastModifiedDate":"2021-10-18"},{"lineNumber":200,"author":{"gitId":"houtenteo"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":201,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":202,"author":{"gitId":"houtenteo"},"content":"    @Test","lastModifiedDate":"2021-10-18"},{"lineNumber":203,"author":{"gitId":"houtenteo"},"content":"    public void parseAge_null_returnsEmptyAge() throws Exception {","lastModifiedDate":"2021-10-18"},{"lineNumber":204,"author":{"gitId":"houtenteo"},"content":"        Age expectedAge \u003d new Age(null);","lastModifiedDate":"2021-10-18"},{"lineNumber":205,"author":{"gitId":"houtenteo"},"content":"        assertEquals(expectedAge, ParserUtil.parseAge(null));","lastModifiedDate":"2021-10-18"},{"lineNumber":206,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":208,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-10-18"},{"lineNumber":209,"author":{"gitId":"houtenteo"},"content":"    public void parseAge_invalidValue_throwsParseException() {","lastModifiedDate":"2021-10-18"},{"lineNumber":210,"author":{"gitId":"houtenteo"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseAge(INVALID_AGE));","lastModifiedDate":"2021-10-18"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":212,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":213,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-10-18"},{"lineNumber":214,"author":{"gitId":"houtenteo"},"content":"    public void parseAge_validValueWithoutWhitespace_returnsAge() throws Exception {","lastModifiedDate":"2021-10-18"},{"lineNumber":215,"author":{"gitId":"houtenteo"},"content":"        Age expectedAge \u003d new Age(VALID_AGE);","lastModifiedDate":"2021-10-18"},{"lineNumber":216,"author":{"gitId":"houtenteo"},"content":"        assertEquals(expectedAge, ParserUtil.parseAge(VALID_AGE));","lastModifiedDate":"2021-10-18"},{"lineNumber":217,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":218,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":219,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-10-18"},{"lineNumber":220,"author":{"gitId":"houtenteo"},"content":"    public void parseAge_validValueWithWhitespace_returnsTrimmedAge() throws Exception {","lastModifiedDate":"2021-10-18"},{"lineNumber":221,"author":{"gitId":"houtenteo"},"content":"        String ageWithWhitespace \u003d WHITESPACE + VALID_AGE + WHITESPACE;","lastModifiedDate":"2021-10-18"},{"lineNumber":222,"author":{"gitId":"houtenteo"},"content":"        Age expectedAge \u003d new Age(VALID_AGE);","lastModifiedDate":"2021-10-18"},{"lineNumber":223,"author":{"gitId":"houtenteo"},"content":"        assertEquals(expectedAge, ParserUtil.parseAge(ageWithWhitespace));","lastModifiedDate":"2021-10-18"},{"lineNumber":224,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":226,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-10-18"},{"lineNumber":227,"author":{"gitId":"houtenteo"},"content":"    public void parseInterest_null_throwsNullPointerException() {","lastModifiedDate":"2021-10-18"},{"lineNumber":228,"author":{"gitId":"houtenteo"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseInterest(null));","lastModifiedDate":"2021-11-02"},{"lineNumber":229,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":230,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":231,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-10-18"},{"lineNumber":232,"author":{"gitId":"houtenteo"},"content":"    public void parseInterest_invalidValue_throwsParseException() {","lastModifiedDate":"2021-10-18"},{"lineNumber":233,"author":{"gitId":"houtenteo"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseInterest(INVALID_INTEREST));","lastModifiedDate":"2021-11-02"},{"lineNumber":234,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":236,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-10-18"},{"lineNumber":237,"author":{"gitId":"houtenteo"},"content":"    public void parseInterest_validValueWithoutWhitespace_returnsInterest() throws Exception {","lastModifiedDate":"2021-10-18"},{"lineNumber":238,"author":{"gitId":"houtenteo"},"content":"        Interest expectedInterest \u003d new Interest(VALID_INTEREST_1);","lastModifiedDate":"2021-10-18"},{"lineNumber":239,"author":{"gitId":"houtenteo"},"content":"        assertEquals(expectedInterest, ParserUtil.parseInterest(VALID_INTEREST_1));","lastModifiedDate":"2021-10-18"},{"lineNumber":240,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":241,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":242,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-10-18"},{"lineNumber":243,"author":{"gitId":"houtenteo"},"content":"    public void parseInterest_validValueWithWhitespace_returnsTrimmedInterest() throws Exception {","lastModifiedDate":"2021-10-18"},{"lineNumber":244,"author":{"gitId":"houtenteo"},"content":"        String interestWithWhitespace \u003d WHITESPACE + VALID_INTEREST_1 + WHITESPACE;","lastModifiedDate":"2021-10-18"},{"lineNumber":245,"author":{"gitId":"houtenteo"},"content":"        Interest expectedInterest \u003d new Interest(VALID_INTEREST_1);","lastModifiedDate":"2021-10-18"},{"lineNumber":246,"author":{"gitId":"houtenteo"},"content":"        assertEquals(expectedInterest, ParserUtil.parseInterest(interestWithWhitespace));","lastModifiedDate":"2021-10-18"},{"lineNumber":247,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":248,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":249,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-10-18"},{"lineNumber":250,"author":{"gitId":"houtenteo"},"content":"    public void parseInterests_null_throwsNullPointerException() {","lastModifiedDate":"2021-10-18"},{"lineNumber":251,"author":{"gitId":"houtenteo"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseInterest(null));","lastModifiedDate":"2021-11-02"},{"lineNumber":252,"author":{"gitId":"houtenteo"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":253,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":254,"author":{"gitId":"houtenteo"},"content":"    @Test","lastModifiedDate":"2021-10-18"},{"lineNumber":255,"author":{"gitId":"houtenteo"},"content":"    public void parseInterests_collectionWithInvalidInterests_throwsParseException() {","lastModifiedDate":"2021-11-02"},{"lineNumber":256,"author":{"gitId":"houtenteo"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseInterests(","lastModifiedDate":"2021-11-02"},{"lineNumber":257,"author":{"gitId":"houtenteo"},"content":"                Arrays.asList(VALID_INTEREST_1, INVALID_INTEREST)","lastModifiedDate":"2021-10-18"},{"lineNumber":258,"author":{"gitId":"houtenteo"},"content":"        ));","lastModifiedDate":"2021-10-18"},{"lineNumber":259,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":260,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":261,"author":{"gitId":"houtenteo"},"content":"    @Test","lastModifiedDate":"2021-10-18"},{"lineNumber":262,"author":{"gitId":"houtenteo"},"content":"    public void parseInterests_emptyCollection_returnsEmptyInterestsList() throws Exception {","lastModifiedDate":"2021-10-18"},{"lineNumber":263,"author":{"gitId":"houtenteo"},"content":"        assertTrue(ParserUtil.parseInterests(Collections.emptyList()).isEmpty());","lastModifiedDate":"2021-10-18"},{"lineNumber":264,"author":{"gitId":"houtenteo"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":265,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":266,"author":{"gitId":"houtenteo"},"content":"    @Test","lastModifiedDate":"2021-10-18"},{"lineNumber":267,"author":{"gitId":"houtenteo"},"content":"    public void parseInterests_collectionWithValidInterests_returnsInterestsList() throws Exception {","lastModifiedDate":"2021-10-18"},{"lineNumber":268,"author":{"gitId":"houtenteo"},"content":"        InterestsList actualInterestsList \u003d ParserUtil.parseInterests(","lastModifiedDate":"2021-10-18"},{"lineNumber":269,"author":{"gitId":"houtenteo"},"content":"                Arrays.asList(VALID_INTEREST_1, VALID_INTEREST_2)","lastModifiedDate":"2021-10-18"},{"lineNumber":270,"author":{"gitId":"houtenteo"},"content":"        );","lastModifiedDate":"2021-10-18"},{"lineNumber":271,"author":{"gitId":"houtenteo"},"content":"        InterestsList expectedInterestsList \u003d new InterestsList();","lastModifiedDate":"2021-10-18"},{"lineNumber":272,"author":{"gitId":"houtenteo"},"content":"        expectedInterestsList.addInterest(new Interest(VALID_INTEREST_1));","lastModifiedDate":"2021-10-18"},{"lineNumber":273,"author":{"gitId":"houtenteo"},"content":"        expectedInterestsList.addInterest(new Interest(VALID_INTEREST_2));","lastModifiedDate":"2021-10-18"},{"lineNumber":274,"author":{"gitId":"houtenteo"},"content":"        assertEquals(expectedInterestsList, actualInterestsList);","lastModifiedDate":"2021-10-18"},{"lineNumber":275,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":276,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":277,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":278,"author":{"gitId":"houtenteo"},"content":"    public void checkEmptyString_nullTest_throwsNullPointerException() {","lastModifiedDate":"2021-11-02"},{"lineNumber":279,"author":{"gitId":"houtenteo"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.checkEmptyString(null, new Prefix(VALID_PREFIX_1)));","lastModifiedDate":"2021-11-02"},{"lineNumber":280,"author":{"gitId":"houtenteo"},"content":"    }","lastModifiedDate":"2021-11-02"},{"lineNumber":281,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":282,"author":{"gitId":"houtenteo"},"content":"    @Test","lastModifiedDate":"2021-11-02"},{"lineNumber":283,"author":{"gitId":"houtenteo"},"content":"    public void checkEmptyString_nullPrefix_throwsNullPointerException() {","lastModifiedDate":"2021-11-02"},{"lineNumber":284,"author":{"gitId":"houtenteo"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.checkEmptyString(","lastModifiedDate":"2021-11-02"},{"lineNumber":285,"author":{"gitId":"houtenteo"},"content":"                VALID_TEST_STRING, null)","lastModifiedDate":"2021-11-02"},{"lineNumber":286,"author":{"gitId":"houtenteo"},"content":"        );","lastModifiedDate":"2021-11-02"},{"lineNumber":287,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":288,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":289,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":290,"author":{"gitId":"houtenteo"},"content":"    public void checkEmptyString_invalidTest_throwsParseException() {","lastModifiedDate":"2021-11-02"},{"lineNumber":291,"author":{"gitId":"houtenteo"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.checkEmptyString(","lastModifiedDate":"2021-11-02"},{"lineNumber":292,"author":{"gitId":"houtenteo"},"content":"                INVALID_TEST_STRING, new Prefix(VALID_PREFIX_2)","lastModifiedDate":"2021-11-02"},{"lineNumber":293,"author":{"gitId":"houtenteo"},"content":"        ));","lastModifiedDate":"2021-11-02"},{"lineNumber":294,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":295,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":296,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":297,"author":{"gitId":"houtenteo"},"content":"    public void checkEmptyString_validTestAndValidPrefix_returnsTrue() throws ParseException {","lastModifiedDate":"2021-11-02"},{"lineNumber":298,"author":{"gitId":"houtenteo"},"content":"        assertTrue(checkEmptyString(VALID_TEST_STRING, new Prefix(VALID_PREFIX_1)));","lastModifiedDate":"2021-11-02"},{"lineNumber":299,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":300,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":301,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":302,"author":{"gitId":"houtenteo"},"content":"    public void checkTrueOrFalse_nullTest_throwsNullPointerException() {","lastModifiedDate":"2021-11-02"},{"lineNumber":303,"author":{"gitId":"houtenteo"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.checkTrueOrFalse(null));","lastModifiedDate":"2021-11-02"},{"lineNumber":304,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":305,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":306,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":307,"author":{"gitId":"houtenteo"},"content":"    public void checkTrueOrFalse_invalidTest_throwsParseException() {","lastModifiedDate":"2021-11-02"},{"lineNumber":308,"author":{"gitId":"houtenteo"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.checkTrueOrFalse(\"n\"));","lastModifiedDate":"2021-11-02"},{"lineNumber":309,"author":{"gitId":"houtenteo"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.checkTrueOrFalse(\"mm\"));","lastModifiedDate":"2021-11-02"},{"lineNumber":310,"author":{"gitId":"houtenteo"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.checkTrueOrFalse(\"ff\"));","lastModifiedDate":"2021-11-02"},{"lineNumber":311,"author":{"gitId":"houtenteo"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.checkTrueOrFalse(\"trues\"));","lastModifiedDate":"2021-11-02"},{"lineNumber":312,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":313,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":314,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":315,"author":{"gitId":"houtenteo"},"content":"    public void checkTrueOrFalse_validTest_returnsTrue() throws ParseException {","lastModifiedDate":"2021-11-02"},{"lineNumber":316,"author":{"gitId":"houtenteo"},"content":"        assertTrue(checkTrueOrFalse(\"t\"));","lastModifiedDate":"2021-11-02"},{"lineNumber":317,"author":{"gitId":"houtenteo"},"content":"        assertTrue(checkTrueOrFalse(\"f\"));","lastModifiedDate":"2021-11-02"},{"lineNumber":318,"author":{"gitId":"houtenteo"},"content":"        assertTrue(checkTrueOrFalse(\"true\"));","lastModifiedDate":"2021-11-02"},{"lineNumber":319,"author":{"gitId":"houtenteo"},"content":"        assertTrue(checkTrueOrFalse(\"false\"));","lastModifiedDate":"2021-11-02"},{"lineNumber":320,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":321,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":322,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":323,"author":{"gitId":"houtenteo"},"content":"    public void checkMaleOrFemale_nullTest_throwsNullPointerException() {","lastModifiedDate":"2021-11-02"},{"lineNumber":324,"author":{"gitId":"houtenteo"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.checkMaleOrFemale(null));","lastModifiedDate":"2021-11-02"},{"lineNumber":325,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":326,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":327,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":328,"author":{"gitId":"houtenteo"},"content":"    public void checkMaleOrFemale_invalidTest_throwsParseException() {","lastModifiedDate":"2021-11-02"},{"lineNumber":329,"author":{"gitId":"houtenteo"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.checkMaleOrFemale(\"n\"));","lastModifiedDate":"2021-11-02"},{"lineNumber":330,"author":{"gitId":"houtenteo"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.checkMaleOrFemale(\"mm\"));","lastModifiedDate":"2021-11-02"},{"lineNumber":331,"author":{"gitId":"houtenteo"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.checkMaleOrFemale(\"9238\"));","lastModifiedDate":"2021-11-02"},{"lineNumber":332,"author":{"gitId":"houtenteo"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.checkMaleOrFemale(\"males\"));","lastModifiedDate":"2021-11-02"},{"lineNumber":333,"author":{"gitId":"houtenteo"},"content":"    }","lastModifiedDate":"2021-11-02"},{"lineNumber":334,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":335,"author":{"gitId":"houtenteo"},"content":"    @Test","lastModifiedDate":"2021-11-02"},{"lineNumber":336,"author":{"gitId":"houtenteo"},"content":"    public void checkMaleOrFemale_validTest_returnsTrue() throws ParseException {","lastModifiedDate":"2021-11-02"},{"lineNumber":337,"author":{"gitId":"houtenteo"},"content":"        assertTrue(checkMaleOrFemale(\"m\"));","lastModifiedDate":"2021-11-02"},{"lineNumber":338,"author":{"gitId":"houtenteo"},"content":"        assertTrue(checkMaleOrFemale(\"f\"));","lastModifiedDate":"2021-11-02"},{"lineNumber":339,"author":{"gitId":"houtenteo"},"content":"        assertTrue(checkMaleOrFemale(\"male\"));","lastModifiedDate":"2021-11-02"},{"lineNumber":340,"author":{"gitId":"houtenteo"},"content":"        assertTrue(checkMaleOrFemale(\"female\"));","lastModifiedDate":"2021-11-02"},{"lineNumber":341,"author":{"gitId":"houtenteo"},"content":"        assertTrue(checkMaleOrFemale(\"n.a\"));","lastModifiedDate":"2021-11-02"},{"lineNumber":342,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":343,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":344,"author":{"gitId":"houtenteo"},"content":"    @Test","lastModifiedDate":"2021-11-02"},{"lineNumber":345,"author":{"gitId":"houtenteo"},"content":"    public void areAnyPrefixesPresent_nullArgMultiMap_throwsNullPointerException() {","lastModifiedDate":"2021-11-02"},{"lineNumber":346,"author":{"gitId":"houtenteo"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.areAnyPrefixesPresent(null));","lastModifiedDate":"2021-11-02"},{"lineNumber":347,"author":{"gitId":"houtenteo"},"content":"    }","lastModifiedDate":"2021-11-02"},{"lineNumber":348,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":349,"author":{"gitId":"houtenteo"},"content":"    @Test","lastModifiedDate":"2021-11-02"},{"lineNumber":350,"author":{"gitId":"houtenteo"},"content":"    public void areAnyPrefixesPresent_emptyArgMultiMap_returnsFalse() {","lastModifiedDate":"2021-11-02"},{"lineNumber":351,"author":{"gitId":"houtenteo"},"content":"        ArgumentMultimap emptyMap \u003d new ArgumentMultimap();","lastModifiedDate":"2021-11-02"},{"lineNumber":352,"author":{"gitId":"houtenteo"},"content":"        assertFalse(areAnyPrefixesPresent(emptyMap));","lastModifiedDate":"2021-11-02"},{"lineNumber":353,"author":{"gitId":"houtenteo"},"content":"    }","lastModifiedDate":"2021-11-02"},{"lineNumber":354,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":355,"author":{"gitId":"houtenteo"},"content":"    @Test","lastModifiedDate":"2021-11-02"},{"lineNumber":356,"author":{"gitId":"houtenteo"},"content":"    public void areAnyPrefixesPresent_argMultiMapWithEmptyPrefixValue_returnsTrue() {","lastModifiedDate":"2021-11-02"},{"lineNumber":357,"author":{"gitId":"houtenteo"},"content":"        ArgumentMultimap testMap \u003d new ArgumentMultimap();","lastModifiedDate":"2021-11-02"},{"lineNumber":358,"author":{"gitId":"houtenteo"},"content":"        testMap.put(new Prefix(VALID_PREFIX_1), \"\");","lastModifiedDate":"2021-11-02"},{"lineNumber":359,"author":{"gitId":"houtenteo"},"content":"        assertTrue(areAnyPrefixesPresent(testMap));","lastModifiedDate":"2021-11-02"},{"lineNumber":360,"author":{"gitId":"houtenteo"},"content":"    }","lastModifiedDate":"2021-11-02"},{"lineNumber":361,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":362,"author":{"gitId":"houtenteo"},"content":"    @Test","lastModifiedDate":"2021-11-02"},{"lineNumber":363,"author":{"gitId":"houtenteo"},"content":"    public void areAnyPrefixesPresent_argMultiMapWithNonEmptyPrefixValue_returnsTrue() {","lastModifiedDate":"2021-11-02"},{"lineNumber":364,"author":{"gitId":"houtenteo"},"content":"        ArgumentMultimap testMap \u003d new ArgumentMultimap();","lastModifiedDate":"2021-11-02"},{"lineNumber":365,"author":{"gitId":"houtenteo"},"content":"        testMap.put(new Prefix(VALID_PREFIX_1), \"non empty string\");","lastModifiedDate":"2021-11-02"},{"lineNumber":366,"author":{"gitId":"houtenteo"},"content":"        assertTrue(areAnyPrefixesPresent(testMap));","lastModifiedDate":"2021-11-02"},{"lineNumber":367,"author":{"gitId":"houtenteo"},"content":"    }","lastModifiedDate":"2021-11-02"},{"lineNumber":368,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":369,"author":{"gitId":"houtenteo"},"content":"    @Test","lastModifiedDate":"2021-11-02"},{"lineNumber":370,"author":{"gitId":"houtenteo"},"content":"    public void areAnyPrefixesPresent_argMultiMapWithMultipleNonEmptyPrefixValue_returnsTrue() {","lastModifiedDate":"2021-11-02"},{"lineNumber":371,"author":{"gitId":"houtenteo"},"content":"        ArgumentMultimap testMap \u003d new ArgumentMultimap();","lastModifiedDate":"2021-11-02"},{"lineNumber":372,"author":{"gitId":"houtenteo"},"content":"        testMap.put(new Prefix(VALID_PREFIX_1), \"non empty string\");","lastModifiedDate":"2021-11-02"},{"lineNumber":373,"author":{"gitId":"houtenteo"},"content":"        testMap.put(new Prefix(VALID_PREFIX_2), \"another non empty string\");","lastModifiedDate":"2021-11-02"},{"lineNumber":374,"author":{"gitId":"houtenteo"},"content":"        assertTrue(areAnyPrefixesPresent(testMap));","lastModifiedDate":"2021-11-02"},{"lineNumber":375,"author":{"gitId":"houtenteo"},"content":"    }","lastModifiedDate":"2021-11-02"},{"lineNumber":376,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":377,"author":{"gitId":"houtenteo"},"content":"    @Test","lastModifiedDate":"2021-11-02"},{"lineNumber":378,"author":{"gitId":"houtenteo"},"content":"    public void getNamePredicate_nullKeywords_throwsNullPointerException() {","lastModifiedDate":"2021-11-02"},{"lineNumber":379,"author":{"gitId":"houtenteo"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.getNamePredicate(null, true));","lastModifiedDate":"2021-11-02"},{"lineNumber":380,"author":{"gitId":"houtenteo"},"content":"    }","lastModifiedDate":"2021-11-02"},{"lineNumber":381,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":382,"author":{"gitId":"houtenteo"},"content":"    @Test","lastModifiedDate":"2021-11-02"},{"lineNumber":383,"author":{"gitId":"houtenteo"},"content":"    public void getNamePredicate_emptyKeywords_returnsNameContainsKeywordsPredicate() {","lastModifiedDate":"2021-11-02"},{"lineNumber":384,"author":{"gitId":"houtenteo"},"content":"        NameContainsKeywordsPredicate expectedPredicate \u003d new NameContainsKeywordsPredicate(","lastModifiedDate":"2021-11-02"},{"lineNumber":385,"author":{"gitId":"houtenteo"},"content":"                Arrays.asList(\"\"), true","lastModifiedDate":"2021-11-02"},{"lineNumber":386,"author":{"gitId":"houtenteo"},"content":"        );","lastModifiedDate":"2021-11-02"},{"lineNumber":387,"author":{"gitId":"houtenteo"},"content":"        assertEquals(ParserUtil.getNamePredicate(\"\", true), expectedPredicate);","lastModifiedDate":"2021-11-02"},{"lineNumber":388,"author":{"gitId":"houtenteo"},"content":"    }","lastModifiedDate":"2021-11-02"},{"lineNumber":389,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":390,"author":{"gitId":"houtenteo"},"content":"    @Test","lastModifiedDate":"2021-11-02"},{"lineNumber":391,"author":{"gitId":"houtenteo"},"content":"    public void getNamePredicate_nonEmptyKeywords_returnsNameContainsKeywordsPredicate() {","lastModifiedDate":"2021-11-02"},{"lineNumber":392,"author":{"gitId":"houtenteo"},"content":"        NameContainsKeywordsPredicate expectedPredicate \u003d new NameContainsKeywordsPredicate(","lastModifiedDate":"2021-11-02"},{"lineNumber":393,"author":{"gitId":"houtenteo"},"content":"                Arrays.asList(\"name1\", \"name2\"), true","lastModifiedDate":"2021-11-02"},{"lineNumber":394,"author":{"gitId":"houtenteo"},"content":"        );","lastModifiedDate":"2021-11-02"},{"lineNumber":395,"author":{"gitId":"houtenteo"},"content":"        assertEquals(ParserUtil.getNamePredicate(\"name1 name2\", true), expectedPredicate);","lastModifiedDate":"2021-11-02"},{"lineNumber":396,"author":{"gitId":"houtenteo"},"content":"    }","lastModifiedDate":"2021-11-02"},{"lineNumber":397,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":398,"author":{"gitId":"houtenteo"},"content":"    @Test","lastModifiedDate":"2021-11-02"},{"lineNumber":399,"author":{"gitId":"houtenteo"},"content":"    public void getPhonePredicate_nullKeywords_throwsNullPointerException() {","lastModifiedDate":"2021-11-02"},{"lineNumber":400,"author":{"gitId":"houtenteo"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.getPhonePredicate(null, true));","lastModifiedDate":"2021-11-02"},{"lineNumber":401,"author":{"gitId":"houtenteo"},"content":"    }","lastModifiedDate":"2021-11-02"},{"lineNumber":402,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":403,"author":{"gitId":"houtenteo"},"content":"    @Test","lastModifiedDate":"2021-11-02"},{"lineNumber":404,"author":{"gitId":"houtenteo"},"content":"    public void getPhonePredicate_emptyKeywords_returnsNameContainsKeywordsPredicate() {","lastModifiedDate":"2021-11-02"},{"lineNumber":405,"author":{"gitId":"houtenteo"},"content":"        PhoneContainsNumberPredicate expectedPredicate \u003d new PhoneContainsNumberPredicate(","lastModifiedDate":"2021-11-02"},{"lineNumber":406,"author":{"gitId":"houtenteo"},"content":"                Arrays.asList(\"\"), true","lastModifiedDate":"2021-11-02"},{"lineNumber":407,"author":{"gitId":"houtenteo"},"content":"        );","lastModifiedDate":"2021-11-02"},{"lineNumber":408,"author":{"gitId":"houtenteo"},"content":"        assertEquals(ParserUtil.getPhonePredicate(\"\", true), expectedPredicate);","lastModifiedDate":"2021-11-02"},{"lineNumber":409,"author":{"gitId":"houtenteo"},"content":"    }","lastModifiedDate":"2021-11-02"},{"lineNumber":410,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":411,"author":{"gitId":"houtenteo"},"content":"    @Test","lastModifiedDate":"2021-11-02"},{"lineNumber":412,"author":{"gitId":"houtenteo"},"content":"    public void getPhonePredicate_nonEmptyKeywords_returnsNameContainsKeywordsPredicate() {","lastModifiedDate":"2021-11-02"},{"lineNumber":413,"author":{"gitId":"houtenteo"},"content":"        PhoneContainsNumberPredicate expectedPredicate \u003d new PhoneContainsNumberPredicate(","lastModifiedDate":"2021-11-02"},{"lineNumber":414,"author":{"gitId":"houtenteo"},"content":"                Arrays.asList(\"98765432\", \"67253827\"), true","lastModifiedDate":"2021-11-02"},{"lineNumber":415,"author":{"gitId":"houtenteo"},"content":"        );","lastModifiedDate":"2021-11-02"},{"lineNumber":416,"author":{"gitId":"houtenteo"},"content":"        assertEquals(ParserUtil.getPhonePredicate(\"98765432 67253827\", true), expectedPredicate);","lastModifiedDate":"2021-11-02"},{"lineNumber":417,"author":{"gitId":"houtenteo"},"content":"    }","lastModifiedDate":"2021-11-02"},{"lineNumber":418,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":419,"author":{"gitId":"houtenteo"},"content":"    @Test","lastModifiedDate":"2021-11-02"},{"lineNumber":420,"author":{"gitId":"houtenteo"},"content":"    public void getEmailPredicate_nullKeywords_throwsNullPointerException() {","lastModifiedDate":"2021-11-02"},{"lineNumber":421,"author":{"gitId":"houtenteo"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.getEmailPredicate(null, true));","lastModifiedDate":"2021-11-02"},{"lineNumber":422,"author":{"gitId":"houtenteo"},"content":"    }","lastModifiedDate":"2021-11-02"},{"lineNumber":423,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":424,"author":{"gitId":"houtenteo"},"content":"    @Test","lastModifiedDate":"2021-11-02"},{"lineNumber":425,"author":{"gitId":"houtenteo"},"content":"    public void getEmailPredicate_emptyKeywords_returnsNameContainsKeywordsPredicate() {","lastModifiedDate":"2021-11-02"},{"lineNumber":426,"author":{"gitId":"houtenteo"},"content":"        EmailContainsKeywordsPredicate expectedPredicate \u003d new EmailContainsKeywordsPredicate(","lastModifiedDate":"2021-11-02"},{"lineNumber":427,"author":{"gitId":"houtenteo"},"content":"                Arrays.asList(\"\"), true","lastModifiedDate":"2021-11-02"},{"lineNumber":428,"author":{"gitId":"houtenteo"},"content":"        );","lastModifiedDate":"2021-11-02"},{"lineNumber":429,"author":{"gitId":"houtenteo"},"content":"        assertEquals(ParserUtil.getEmailPredicate(\"\", true), expectedPredicate);","lastModifiedDate":"2021-11-02"},{"lineNumber":430,"author":{"gitId":"houtenteo"},"content":"    }","lastModifiedDate":"2021-11-02"},{"lineNumber":431,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":432,"author":{"gitId":"houtenteo"},"content":"    @Test","lastModifiedDate":"2021-11-02"},{"lineNumber":433,"author":{"gitId":"houtenteo"},"content":"    public void getEmailPredicate_nonEmptyKeywords_returnsNameContainsKeywordsPredicate() {","lastModifiedDate":"2021-11-02"},{"lineNumber":434,"author":{"gitId":"houtenteo"},"content":"        EmailContainsKeywordsPredicate expectedPredicate \u003d new EmailContainsKeywordsPredicate(","lastModifiedDate":"2021-11-02"},{"lineNumber":435,"author":{"gitId":"houtenteo"},"content":"                Arrays.asList(\"email1\", \"email2\"), true","lastModifiedDate":"2021-11-02"},{"lineNumber":436,"author":{"gitId":"houtenteo"},"content":"        );","lastModifiedDate":"2021-11-02"},{"lineNumber":437,"author":{"gitId":"houtenteo"},"content":"        assertEquals(ParserUtil.getEmailPredicate(\"email1 email2\", true), expectedPredicate);","lastModifiedDate":"2021-11-02"},{"lineNumber":438,"author":{"gitId":"houtenteo"},"content":"    }","lastModifiedDate":"2021-11-02"},{"lineNumber":439,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":440,"author":{"gitId":"houtenteo"},"content":"    @Test","lastModifiedDate":"2021-11-02"},{"lineNumber":441,"author":{"gitId":"pranav-ganesh"},"content":"    public void getCalledPredicate_nullKeywords_throwsNullPointerException() {","lastModifiedDate":"2021-11-04"},{"lineNumber":442,"author":{"gitId":"pranav-ganesh"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.getCalledPredicate(null, true));","lastModifiedDate":"2021-11-04"},{"lineNumber":443,"author":{"gitId":"houtenteo"},"content":"    }","lastModifiedDate":"2021-11-02"},{"lineNumber":444,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":445,"author":{"gitId":"houtenteo"},"content":"    @Test","lastModifiedDate":"2021-11-02"},{"lineNumber":446,"author":{"gitId":"pranav-ganesh"},"content":"    public void getCalledPredicate_emptyKeywords_returnsNameContainsKeywordsPredicate() {","lastModifiedDate":"2021-11-04"},{"lineNumber":447,"author":{"gitId":"pranav-ganesh"},"content":"        CalledPredicate expectedPredicate \u003d new CalledPredicate(","lastModifiedDate":"2021-11-04"},{"lineNumber":448,"author":{"gitId":"houtenteo"},"content":"                Arrays.asList(\"\"), true","lastModifiedDate":"2021-11-02"},{"lineNumber":449,"author":{"gitId":"houtenteo"},"content":"        );","lastModifiedDate":"2021-11-02"},{"lineNumber":450,"author":{"gitId":"pranav-ganesh"},"content":"        assertEquals(ParserUtil.getCalledPredicate(\"\", true), expectedPredicate);","lastModifiedDate":"2021-11-04"},{"lineNumber":451,"author":{"gitId":"houtenteo"},"content":"    }","lastModifiedDate":"2021-11-02"},{"lineNumber":452,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":453,"author":{"gitId":"houtenteo"},"content":"    @Test","lastModifiedDate":"2021-11-02"},{"lineNumber":454,"author":{"gitId":"pranav-ganesh"},"content":"    public void getCalledPredicate_nonEmptyKeywords_returnsNameContainsKeywordsPredicate() {","lastModifiedDate":"2021-11-04"},{"lineNumber":455,"author":{"gitId":"pranav-ganesh"},"content":"        CalledPredicate expectedPredicate \u003d new CalledPredicate(","lastModifiedDate":"2021-11-04"},{"lineNumber":456,"author":{"gitId":"houtenteo"},"content":"                Arrays.asList(\"true\", \"false\"), true","lastModifiedDate":"2021-11-02"},{"lineNumber":457,"author":{"gitId":"houtenteo"},"content":"        );","lastModifiedDate":"2021-11-02"},{"lineNumber":458,"author":{"gitId":"pranav-ganesh"},"content":"        assertEquals(ParserUtil.getCalledPredicate(\"true false\", true), expectedPredicate);","lastModifiedDate":"2021-11-04"},{"lineNumber":459,"author":{"gitId":"houtenteo"},"content":"    }","lastModifiedDate":"2021-11-02"},{"lineNumber":460,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":461,"author":{"gitId":"houtenteo"},"content":"    @Test","lastModifiedDate":"2021-11-02"},{"lineNumber":462,"author":{"gitId":"houtenteo"},"content":"    public void getAddressPredicate_nullKeywords_throwsNullPointerException() {","lastModifiedDate":"2021-11-02"},{"lineNumber":463,"author":{"gitId":"houtenteo"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.getAddressPredicate(null, true));","lastModifiedDate":"2021-11-02"},{"lineNumber":464,"author":{"gitId":"houtenteo"},"content":"    }","lastModifiedDate":"2021-11-02"},{"lineNumber":465,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":466,"author":{"gitId":"houtenteo"},"content":"    @Test","lastModifiedDate":"2021-11-02"},{"lineNumber":467,"author":{"gitId":"houtenteo"},"content":"    public void getAddressPredicate_emptyKeywords_returnsNameContainsKeywordsPredicate() {","lastModifiedDate":"2021-11-02"},{"lineNumber":468,"author":{"gitId":"houtenteo"},"content":"        AddressContainsKeywordsPredicate expectedPredicate \u003d new AddressContainsKeywordsPredicate(","lastModifiedDate":"2021-11-02"},{"lineNumber":469,"author":{"gitId":"houtenteo"},"content":"                Arrays.asList(\"\"), true","lastModifiedDate":"2021-11-02"},{"lineNumber":470,"author":{"gitId":"houtenteo"},"content":"        );","lastModifiedDate":"2021-11-02"},{"lineNumber":471,"author":{"gitId":"houtenteo"},"content":"        assertEquals(ParserUtil.getAddressPredicate(\"\", true), expectedPredicate);","lastModifiedDate":"2021-11-02"},{"lineNumber":472,"author":{"gitId":"houtenteo"},"content":"    }","lastModifiedDate":"2021-11-02"},{"lineNumber":473,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":474,"author":{"gitId":"houtenteo"},"content":"    @Test","lastModifiedDate":"2021-11-02"},{"lineNumber":475,"author":{"gitId":"houtenteo"},"content":"    public void getAddressPredicate_nonEmptyKeywords_returnsNameContainsKeywordsPredicate() {","lastModifiedDate":"2021-11-02"},{"lineNumber":476,"author":{"gitId":"houtenteo"},"content":"        AddressContainsKeywordsPredicate expectedPredicate \u003d new AddressContainsKeywordsPredicate(","lastModifiedDate":"2021-11-02"},{"lineNumber":477,"author":{"gitId":"houtenteo"},"content":"                Arrays.asList(\"address1\", \"address2\"), true","lastModifiedDate":"2021-11-02"},{"lineNumber":478,"author":{"gitId":"houtenteo"},"content":"        );","lastModifiedDate":"2021-11-02"},{"lineNumber":479,"author":{"gitId":"houtenteo"},"content":"        assertEquals(ParserUtil.getAddressPredicate(\"address1 address2\", true), expectedPredicate);","lastModifiedDate":"2021-11-02"},{"lineNumber":480,"author":{"gitId":"houtenteo"},"content":"    }","lastModifiedDate":"2021-11-02"},{"lineNumber":481,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":482,"author":{"gitId":"houtenteo"},"content":"    @Test","lastModifiedDate":"2021-11-02"},{"lineNumber":483,"author":{"gitId":"houtenteo"},"content":"    public void getGenderPredicate_nullKeywords_throwsNullPointerException() {","lastModifiedDate":"2021-11-02"},{"lineNumber":484,"author":{"gitId":"houtenteo"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.getGenderPredicate(null, true));","lastModifiedDate":"2021-11-02"},{"lineNumber":485,"author":{"gitId":"houtenteo"},"content":"    }","lastModifiedDate":"2021-11-02"},{"lineNumber":486,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":487,"author":{"gitId":"houtenteo"},"content":"    @Test","lastModifiedDate":"2021-11-02"},{"lineNumber":488,"author":{"gitId":"houtenteo"},"content":"    public void getGenderPredicate_emptyKeywords_returnsNameContainsKeywordsPredicate() {","lastModifiedDate":"2021-11-02"},{"lineNumber":489,"author":{"gitId":"houtenteo"},"content":"        GenderContainsKeywordPredicate expectedPredicate \u003d new GenderContainsKeywordPredicate(","lastModifiedDate":"2021-11-02"},{"lineNumber":490,"author":{"gitId":"houtenteo"},"content":"                Arrays.asList(\"\"), true","lastModifiedDate":"2021-11-02"},{"lineNumber":491,"author":{"gitId":"houtenteo"},"content":"        );","lastModifiedDate":"2021-11-02"},{"lineNumber":492,"author":{"gitId":"houtenteo"},"content":"        assertEquals(ParserUtil.getGenderPredicate(\"\", true), expectedPredicate);","lastModifiedDate":"2021-11-02"},{"lineNumber":493,"author":{"gitId":"houtenteo"},"content":"    }","lastModifiedDate":"2021-11-02"},{"lineNumber":494,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":495,"author":{"gitId":"houtenteo"},"content":"    @Test","lastModifiedDate":"2021-11-02"},{"lineNumber":496,"author":{"gitId":"houtenteo"},"content":"    public void getGenderPredicate_nonEmptyKeywords_returnsNameContainsKeywordsPredicate() {","lastModifiedDate":"2021-11-02"},{"lineNumber":497,"author":{"gitId":"houtenteo"},"content":"        GenderContainsKeywordPredicate expectedPredicate \u003d new GenderContainsKeywordPredicate(","lastModifiedDate":"2021-11-02"},{"lineNumber":498,"author":{"gitId":"houtenteo"},"content":"                Arrays.asList(\"male\", \"female\"), true","lastModifiedDate":"2021-11-02"},{"lineNumber":499,"author":{"gitId":"houtenteo"},"content":"        );","lastModifiedDate":"2021-11-02"},{"lineNumber":500,"author":{"gitId":"houtenteo"},"content":"        assertEquals(ParserUtil.getGenderPredicate(\"male female\", true), expectedPredicate);","lastModifiedDate":"2021-11-02"},{"lineNumber":501,"author":{"gitId":"houtenteo"},"content":"    }","lastModifiedDate":"2021-11-02"},{"lineNumber":502,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":503,"author":{"gitId":"houtenteo"},"content":"    @Test","lastModifiedDate":"2021-11-02"},{"lineNumber":504,"author":{"gitId":"houtenteo"},"content":"    public void getAgePredicate_nullKeywords_throwsNullPointerException() {","lastModifiedDate":"2021-11-02"},{"lineNumber":505,"author":{"gitId":"houtenteo"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.getAgePredicate(null, true));","lastModifiedDate":"2021-11-02"},{"lineNumber":506,"author":{"gitId":"houtenteo"},"content":"    }","lastModifiedDate":"2021-11-02"},{"lineNumber":507,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":508,"author":{"gitId":"houtenteo"},"content":"    @Test","lastModifiedDate":"2021-11-02"},{"lineNumber":509,"author":{"gitId":"houtenteo"},"content":"    public void getAgePredicate_emptyKeywords_returnsNameContainsKeywordsPredicate() {","lastModifiedDate":"2021-11-02"},{"lineNumber":510,"author":{"gitId":"houtenteo"},"content":"        AgeContainsValuePredicate expectedPredicate \u003d new AgeContainsValuePredicate(","lastModifiedDate":"2021-11-02"},{"lineNumber":511,"author":{"gitId":"houtenteo"},"content":"                Arrays.asList(\"\"), true","lastModifiedDate":"2021-11-02"},{"lineNumber":512,"author":{"gitId":"houtenteo"},"content":"        );","lastModifiedDate":"2021-11-02"},{"lineNumber":513,"author":{"gitId":"houtenteo"},"content":"        assertEquals(ParserUtil.getAgePredicate(\"\", true), expectedPredicate);","lastModifiedDate":"2021-11-02"},{"lineNumber":514,"author":{"gitId":"houtenteo"},"content":"    }","lastModifiedDate":"2021-11-02"},{"lineNumber":515,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":516,"author":{"gitId":"houtenteo"},"content":"    @Test","lastModifiedDate":"2021-11-02"},{"lineNumber":517,"author":{"gitId":"houtenteo"},"content":"    public void getAgePredicate_nonEmptyKeywords_returnsNameContainsKeywordsPredicate() {","lastModifiedDate":"2021-11-02"},{"lineNumber":518,"author":{"gitId":"houtenteo"},"content":"        AgeContainsValuePredicate expectedPredicate \u003d new AgeContainsValuePredicate(","lastModifiedDate":"2021-11-02"},{"lineNumber":519,"author":{"gitId":"houtenteo"},"content":"                Arrays.asList(\"11\", \"22\"), true","lastModifiedDate":"2021-11-02"},{"lineNumber":520,"author":{"gitId":"houtenteo"},"content":"        );","lastModifiedDate":"2021-11-02"},{"lineNumber":521,"author":{"gitId":"houtenteo"},"content":"        assertEquals(ParserUtil.getAgePredicate(\"11 22\", true), expectedPredicate);","lastModifiedDate":"2021-11-02"},{"lineNumber":522,"author":{"gitId":"houtenteo"},"content":"    }","lastModifiedDate":"2021-11-02"},{"lineNumber":523,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":524,"author":{"gitId":"houtenteo"},"content":"    @Test","lastModifiedDate":"2021-11-02"},{"lineNumber":525,"author":{"gitId":"houtenteo"},"content":"    public void getInterestPredicate_nullKeywords_throwsNullPointerException() {","lastModifiedDate":"2021-11-02"},{"lineNumber":526,"author":{"gitId":"houtenteo"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.getInterestPredicate(null, true));","lastModifiedDate":"2021-11-02"},{"lineNumber":527,"author":{"gitId":"houtenteo"},"content":"    }","lastModifiedDate":"2021-11-02"},{"lineNumber":528,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":529,"author":{"gitId":"houtenteo"},"content":"    @Test","lastModifiedDate":"2021-11-02"},{"lineNumber":530,"author":{"gitId":"houtenteo"},"content":"    public void getInterestPredicate_emptyKeywords_returnsNameContainsKeywordsPredicate() {","lastModifiedDate":"2021-11-02"},{"lineNumber":531,"author":{"gitId":"houtenteo"},"content":"        InterestContainsKeywordsPredicate expectedPredicate \u003d new InterestContainsKeywordsPredicate(","lastModifiedDate":"2021-11-02"},{"lineNumber":532,"author":{"gitId":"houtenteo"},"content":"                Arrays.asList(\"\"), true","lastModifiedDate":"2021-11-02"},{"lineNumber":533,"author":{"gitId":"houtenteo"},"content":"        );","lastModifiedDate":"2021-11-02"},{"lineNumber":534,"author":{"gitId":"houtenteo"},"content":"        assertEquals(ParserUtil.getInterestPredicate(\"\", true), expectedPredicate);","lastModifiedDate":"2021-11-02"},{"lineNumber":535,"author":{"gitId":"houtenteo"},"content":"    }","lastModifiedDate":"2021-11-02"},{"lineNumber":536,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":537,"author":{"gitId":"houtenteo"},"content":"    @Test","lastModifiedDate":"2021-11-02"},{"lineNumber":538,"author":{"gitId":"houtenteo"},"content":"    public void getInterestPredicate_nonEmptyKeywords_returnsNameContainsKeywordsPredicate() {","lastModifiedDate":"2021-11-02"},{"lineNumber":539,"author":{"gitId":"houtenteo"},"content":"        InterestContainsKeywordsPredicate expectedPredicate \u003d new InterestContainsKeywordsPredicate(","lastModifiedDate":"2021-11-02"},{"lineNumber":540,"author":{"gitId":"houtenteo"},"content":"                Arrays.asList(\"male\", \"female\"), true","lastModifiedDate":"2021-11-02"},{"lineNumber":541,"author":{"gitId":"houtenteo"},"content":"        );","lastModifiedDate":"2021-11-02"},{"lineNumber":542,"author":{"gitId":"houtenteo"},"content":"        assertEquals(ParserUtil.getInterestPredicate(\"male female\", true), expectedPredicate);","lastModifiedDate":"2021-11-02"},{"lineNumber":543,"author":{"gitId":"houtenteo"},"content":"    }","lastModifiedDate":"2021-11-02"},{"lineNumber":544,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":545,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":546,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-22"}],"authorContributionMap":{"houtenteo":353,"loose-bus-change":9,"pranav-ganesh":9,"-":175}},{"path":"src/test/java/seedu/address/model/AddressBookTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2021-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-09-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-09-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-09-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2021-09-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2021-09-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2021-09-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-09-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2021-09-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2021-09-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2021-09-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-09-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2021-09-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-09-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2021-09-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.DuplicatePersonException;","lastModifiedDate":"2021-09-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2021-09-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"public class AddressBookTest {","lastModifiedDate":"2021-09-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private final AddressBook addressBook \u003d new AddressBook();","lastModifiedDate":"2021-09-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-09-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public void constructor() {","lastModifiedDate":"2021-09-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertEquals(Collections.emptyList(), addressBook.getPersonList());","lastModifiedDate":"2021-09-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-09-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public void resetData_null_throwsNullPointerException() {","lastModifiedDate":"2021-09-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e addressBook.resetData(null));","lastModifiedDate":"2021-09-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-09-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public void resetData_withValidReadOnlyAddressBook_replacesData() {","lastModifiedDate":"2021-09-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        AddressBook newData \u003d getTypicalAddressBook();","lastModifiedDate":"2021-09-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        addressBook.resetData(newData);","lastModifiedDate":"2021-09-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertEquals(newData, addressBook);","lastModifiedDate":"2021-09-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-09-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void resetData_withDuplicatePersons_throwsDuplicatePersonException() {","lastModifiedDate":"2021-09-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        // Two persons with the same identity fields","lastModifiedDate":"2021-09-21"},{"lineNumber":47,"author":{"gitId":"houtenteo"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).build();","lastModifiedDate":"2021-09-22"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e newPersons \u003d Arrays.asList(ALICE, editedAlice);","lastModifiedDate":"2021-09-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        AddressBookStub newData \u003d new AddressBookStub(newPersons);","lastModifiedDate":"2021-09-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e addressBook.resetData(newData));","lastModifiedDate":"2021-09-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-09-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public void hasPerson_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2021-09-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e addressBook.hasPerson(null));","lastModifiedDate":"2021-09-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-09-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void hasPerson_personNotInAddressBook_returnsFalse() {","lastModifiedDate":"2021-09-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertFalse(addressBook.hasPerson(ALICE));","lastModifiedDate":"2021-09-21"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-09-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void hasPerson_personInAddressBook_returnsTrue() {","lastModifiedDate":"2021-09-21"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        addressBook.addPerson(ALICE);","lastModifiedDate":"2021-09-21"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertTrue(addressBook.hasPerson(ALICE));","lastModifiedDate":"2021-09-21"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-21"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-09-21"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public void hasPerson_personWithSameIdentityFieldsInAddressBook_returnsTrue() {","lastModifiedDate":"2021-09-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        addressBook.addPerson(ALICE);","lastModifiedDate":"2021-09-21"},{"lineNumber":73,"author":{"gitId":"houtenteo"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).build();","lastModifiedDate":"2021-09-22"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertTrue(addressBook.hasPerson(editedAlice));","lastModifiedDate":"2021-09-21"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-21"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-09-21"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public void getPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2021-09-21"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e addressBook.getPersonList().remove(0));","lastModifiedDate":"2021-09-21"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-21"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-09-21"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * A stub ReadOnlyAddressBook whose persons list can violate interface constraints.","lastModifiedDate":"2021-09-21"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-09-21"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    private static class AddressBookStub implements ReadOnlyAddressBook {","lastModifiedDate":"2021-09-21"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        private final ObservableList\u003cPerson\u003e persons \u003d FXCollections.observableArrayList();","lastModifiedDate":"2021-09-21"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        AddressBookStub(Collection\u003cPerson\u003e persons) {","lastModifiedDate":"2021-09-21"},{"lineNumber":89,"author":{"gitId":"-"},"content":"            this.persons.setAll(persons);","lastModifiedDate":"2021-09-21"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-09-21"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2021-09-21"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        public ObservableList\u003cPerson\u003e getPersonList() {","lastModifiedDate":"2021-09-21"},{"lineNumber":94,"author":{"gitId":"-"},"content":"            return persons;","lastModifiedDate":"2021-09-21"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-09-21"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-21"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":98,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-09-21"}],"authorContributionMap":{"houtenteo":2,"-":96}},{"path":"src/test/java/seedu/address/model/ModelManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2017-05-31"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2017-08-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2017-07-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BENSON;","lastModifiedDate":"2017-07-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-31"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":18,"author":{"gitId":"houtenteo"},"content":"import seedu.address.model.person.predicates.NameContainsKeywordsPredicate;","lastModifiedDate":"2021-10-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.testutil.AddressBookBuilder;","lastModifiedDate":"2017-05-31"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class ModelManagerTest {","lastModifiedDate":"2017-05-31"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private ModelManager modelManager \u003d new ModelManager();","lastModifiedDate":"2018-08-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public void constructor() {","lastModifiedDate":"2018-11-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertEquals(new UserPrefs(), modelManager.getUserPrefs());","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertEquals(new GuiSettings(), modelManager.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertEquals(new AddressBook(), new AddressBook(modelManager.getAddressBook()));","lastModifiedDate":"2018-11-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public void setUserPrefs_nullUserPrefs_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setUserPrefs(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public void setUserPrefs_validUserPrefs_copiesUserPrefs() {","lastModifiedDate":"2018-12-06"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(Paths.get(\"address/book/file/path\"));","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(new GuiSettings(1, 2, 3, 4));","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        modelManager.setUserPrefs(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertEquals(userPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        // Modifying userPrefs should not modify modelManager\u0027s userPrefs","lastModifiedDate":"2018-12-06"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        UserPrefs oldUserPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(Paths.get(\"new/address/book/file/path\"));","lastModifiedDate":"2018-12-06"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertEquals(oldUserPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2018-12-06"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public void setGuiSettings_nullGuiSettings_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setGuiSettings(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void setGuiSettings_validGuiSettings_setsGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(1, 2, 3, 4);","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        modelManager.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertEquals(guiSettings, modelManager.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath_nullPath_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setAddressBookFilePath(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath_validPath_setsAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        Path path \u003d Paths.get(\"address/book/file/path\");","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        modelManager.setAddressBookFilePath(path);","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertEquals(path, modelManager.getAddressBookFilePath());","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public void hasPerson_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-06"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.hasPerson(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void hasPerson_personNotInAddressBook_returnsFalse() {","lastModifiedDate":"2018-08-06"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void hasPerson_personInAddressBook_returnsTrue() {","lastModifiedDate":"2018-08-07"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        modelManager.addPerson(ALICE);","lastModifiedDate":"2018-08-06"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public void getFilteredPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e modelManager.getFilteredPersonList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-31"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        AddressBook addressBook \u003d new AddressBookBuilder().withPerson(ALICE).withPerson(BENSON).build();","lastModifiedDate":"2017-07-19"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        AddressBook differentAddressBook \u003d new AddressBook();","lastModifiedDate":"2017-05-31"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-05-31"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-31"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        modelManager \u003d new ModelManager(addressBook, userPrefs);","lastModifiedDate":"2018-08-06"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        ModelManager modelManagerCopy \u003d new ModelManager(addressBook, userPrefs);","lastModifiedDate":"2017-05-31"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.equals(modelManagerCopy));","lastModifiedDate":"2017-05-31"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-31"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.equals(modelManager));","lastModifiedDate":"2017-05-31"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(null));","lastModifiedDate":"2017-05-31"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(5));","lastModifiedDate":"2017-05-31"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        // different addressBook -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(new ModelManager(differentAddressBook, userPrefs)));","lastModifiedDate":"2017-05-31"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        // different filteredList -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        String[] keywords \u003d ALICE.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2017-07-19"},{"lineNumber":121,"author":{"gitId":"houtenteo"},"content":"        modelManager.updateFilteredPersonList(new NameContainsKeywordsPredicate(Arrays.asList(keywords), false));","lastModifiedDate":"2021-10-26"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(new ModelManager(addressBook, userPrefs)));","lastModifiedDate":"2017-05-31"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        // resets modelManager to initial state for upcoming tests","lastModifiedDate":"2017-08-05"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        modelManager.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        // different userPrefs -\u003e returns false","lastModifiedDate":"2018-11-27"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        UserPrefs differentUserPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-05-31"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        differentUserPrefs.setAddressBookFilePath(Paths.get(\"differentFilePath\"));","lastModifiedDate":"2018-08-09"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(new ModelManager(addressBook, differentUserPrefs)));","lastModifiedDate":"2018-11-27"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":132,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-31"}],"authorContributionMap":{"houtenteo":2,"-":130}},{"path":"src/test/java/seedu/address/model/category/CategoryTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Kangxun"},"content":"package seedu.address.model.category;","lastModifiedDate":"2021-10-10"},{"lineNumber":2,"author":{"gitId":"Kangxun"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":3,"author":{"gitId":"Kangxun"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-10"},{"lineNumber":4,"author":{"gitId":"Kangxun"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-10"},{"lineNumber":5,"author":{"gitId":"Kangxun"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":6,"author":{"gitId":"Kangxun"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-10"},{"lineNumber":7,"author":{"gitId":"Kangxun"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":8,"author":{"gitId":"Kangxun"},"content":"public class CategoryTest {","lastModifiedDate":"2021-10-10"},{"lineNumber":9,"author":{"gitId":"Kangxun"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":10,"author":{"gitId":"Kangxun"},"content":"    @Test","lastModifiedDate":"2021-10-10"},{"lineNumber":11,"author":{"gitId":"Kangxun"},"content":"    public void equals() {","lastModifiedDate":"2021-10-10"},{"lineNumber":12,"author":{"gitId":"Kangxun"},"content":"        Category category \u003d new Category(\"name\");","lastModifiedDate":"2021-10-10"},{"lineNumber":13,"author":{"gitId":"Kangxun"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":14,"author":{"gitId":"Kangxun"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-10-10"},{"lineNumber":15,"author":{"gitId":"Kangxun"},"content":"        assertTrue(category.equals(category));","lastModifiedDate":"2021-10-10"},{"lineNumber":16,"author":{"gitId":"Kangxun"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":17,"author":{"gitId":"Kangxun"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2021-10-10"},{"lineNumber":18,"author":{"gitId":"Kangxun"},"content":"        Category categoryCopy \u003d new Category(\"name\");","lastModifiedDate":"2021-10-10"},{"lineNumber":19,"author":{"gitId":"Kangxun"},"content":"        assertTrue(category.equals(categoryCopy));","lastModifiedDate":"2021-10-10"},{"lineNumber":20,"author":{"gitId":"Kangxun"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":21,"author":{"gitId":"Kangxun"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2021-10-10"},{"lineNumber":22,"author":{"gitId":"Kangxun"},"content":"        assertFalse(category.equals(1));","lastModifiedDate":"2021-10-10"},{"lineNumber":23,"author":{"gitId":"Kangxun"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":24,"author":{"gitId":"Kangxun"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-10-10"},{"lineNumber":25,"author":{"gitId":"Kangxun"},"content":"        assertFalse(category.equals(null));","lastModifiedDate":"2021-10-10"},{"lineNumber":26,"author":{"gitId":"Kangxun"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":27,"author":{"gitId":"Kangxun"},"content":"        // different category -\u003e returns false","lastModifiedDate":"2021-10-10"},{"lineNumber":28,"author":{"gitId":"Kangxun"},"content":"        Category differentCategory \u003d new Category(\"phone\");","lastModifiedDate":"2021-10-10"},{"lineNumber":29,"author":{"gitId":"Kangxun"},"content":"        assertFalse(category.equals(differentCategory));","lastModifiedDate":"2021-10-10"},{"lineNumber":30,"author":{"gitId":"Kangxun"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":31,"author":{"gitId":"Kangxun"},"content":"}","lastModifiedDate":"2021-10-10"}],"authorContributionMap":{"Kangxun":31}},{"path":"src/test/java/seedu/address/model/person/AddressTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2017-01-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":3,"author":{"gitId":"houtenteo"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":10,"author":{"gitId":"houtenteo"},"content":"import seedu.address.testutil.TypicalPersons;","lastModifiedDate":"2021-11-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class AddressTest {","lastModifiedDate":"2017-01-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":15,"author":{"gitId":"houtenteo"},"content":"    public void constructor_null_createsDefaultAddress() {","lastModifiedDate":"2021-10-18"},{"lineNumber":16,"author":{"gitId":"houtenteo"},"content":"        String noAddress \u003d \"N.A\";","lastModifiedDate":"2021-10-18"},{"lineNumber":17,"author":{"gitId":"houtenteo"},"content":"        assertEquals(new Address(null).value, noAddress);","lastModifiedDate":"2021-10-18"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void constructor_invalidAddress_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        String invalidAddress \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Address(invalidAddress));","lastModifiedDate":"2019-03-14"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-11-05"},{"lineNumber":27,"author":{"gitId":"houtenteo"},"content":"    public void constructor_validAddress_createsAddress() {","lastModifiedDate":"2021-11-05"},{"lineNumber":28,"author":{"gitId":"houtenteo"},"content":"        String addressString \u003d TypicalPersons.AMY.getAddress().value;","lastModifiedDate":"2021-11-05"},{"lineNumber":29,"author":{"gitId":"houtenteo"},"content":"        Address address \u003d new Address(addressString);","lastModifiedDate":"2021-11-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":31,"author":{"gitId":"houtenteo"},"content":"        Address expectedAddress \u003d TypicalPersons.AMY.getAddress();","lastModifiedDate":"2021-11-05"},{"lineNumber":32,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":33,"author":{"gitId":"houtenteo"},"content":"        assertEquals(address, expectedAddress);","lastModifiedDate":"2021-11-05"},{"lineNumber":34,"author":{"gitId":"houtenteo"},"content":"    }","lastModifiedDate":"2021-11-05"},{"lineNumber":35,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void isValidAddress() {","lastModifiedDate":"2017-01-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        // invalid addresses","lastModifiedDate":"2017-01-16"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertFalse(Address.isValidAddress(\"\")); // empty string","lastModifiedDate":"2017-01-16"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertFalse(Address.isValidAddress(\" \")); // spaces only","lastModifiedDate":"2017-01-16"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        // valid addresses","lastModifiedDate":"2017-01-16"},{"lineNumber":43,"author":{"gitId":"houtenteo"},"content":"        assertTrue(Address.isValidAddress(null));","lastModifiedDate":"2021-11-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertTrue(Address.isValidAddress(\"Blk 456, Den Road, #01-355\"));","lastModifiedDate":"2017-01-16"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertTrue(Address.isValidAddress(\"-\")); // one character","lastModifiedDate":"2017-01-16"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertTrue(Address.isValidAddress(\"Leng Inc; 1234 Market St; San Francisco CA 2349879; USA\")); // long address","lastModifiedDate":"2017-01-16"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":48,"author":{"gitId":"houtenteo"},"content":"    @Test","lastModifiedDate":"2021-11-02"},{"lineNumber":49,"author":{"gitId":"houtenteo"},"content":"    public void equals() {","lastModifiedDate":"2021-11-02"},{"lineNumber":50,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":51,"author":{"gitId":"houtenteo"},"content":"        Address address \u003d new Address(\"my house\");","lastModifiedDate":"2021-11-02"},{"lineNumber":52,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":53,"author":{"gitId":"houtenteo"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-11-02"},{"lineNumber":54,"author":{"gitId":"houtenteo"},"content":"        assertTrue(address.equals(address));","lastModifiedDate":"2021-11-02"},{"lineNumber":55,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":56,"author":{"gitId":"houtenteo"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2021-11-02"},{"lineNumber":57,"author":{"gitId":"houtenteo"},"content":"        Address remarkCopy \u003d new Address(\"my house\");","lastModifiedDate":"2021-11-02"},{"lineNumber":58,"author":{"gitId":"houtenteo"},"content":"        assertTrue(address.equals(remarkCopy));","lastModifiedDate":"2021-11-02"},{"lineNumber":59,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":60,"author":{"gitId":"houtenteo"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2021-11-02"},{"lineNumber":61,"author":{"gitId":"houtenteo"},"content":"        assertFalse(address.equals(1));","lastModifiedDate":"2021-11-02"},{"lineNumber":62,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":63,"author":{"gitId":"houtenteo"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-11-02"},{"lineNumber":64,"author":{"gitId":"houtenteo"},"content":"        assertFalse(address.equals(null));","lastModifiedDate":"2021-11-02"},{"lineNumber":65,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":66,"author":{"gitId":"houtenteo"},"content":"        // different value -\u003e returns false","lastModifiedDate":"2021-11-02"},{"lineNumber":67,"author":{"gitId":"houtenteo"},"content":"        Address differentAddress \u003d new Address(\"His house\");","lastModifiedDate":"2021-11-02"},{"lineNumber":68,"author":{"gitId":"houtenteo"},"content":"        assertFalse(address.equals(differentAddress));","lastModifiedDate":"2021-11-02"},{"lineNumber":69,"author":{"gitId":"houtenteo"},"content":"    }","lastModifiedDate":"2021-11-02"},{"lineNumber":70,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":71,"author":{"gitId":"houtenteo"},"content":"    @Test","lastModifiedDate":"2021-11-02"},{"lineNumber":72,"author":{"gitId":"houtenteo"},"content":"    public void isEmpty() {","lastModifiedDate":"2021-11-02"},{"lineNumber":73,"author":{"gitId":"houtenteo"},"content":"        Address test \u003d new Address(null);","lastModifiedDate":"2021-11-02"},{"lineNumber":74,"author":{"gitId":"houtenteo"},"content":"        assertTrue(test.isEmpty());","lastModifiedDate":"2021-11-02"},{"lineNumber":75,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":76,"author":{"gitId":"houtenteo"},"content":"        test \u003d new Address(\"N.A\");","lastModifiedDate":"2021-11-02"},{"lineNumber":77,"author":{"gitId":"houtenteo"},"content":"        assertTrue(test.isEmpty());","lastModifiedDate":"2021-11-02"},{"lineNumber":78,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":79,"author":{"gitId":"houtenteo"},"content":"        test \u003d new Address(\"ANYTHING\");","lastModifiedDate":"2021-11-02"},{"lineNumber":80,"author":{"gitId":"houtenteo"},"content":"        assertFalse(test.isEmpty());","lastModifiedDate":"2021-11-02"},{"lineNumber":81,"author":{"gitId":"houtenteo"},"content":"    }","lastModifiedDate":"2021-11-02"},{"lineNumber":82,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":83,"author":{"gitId":"houtenteo"},"content":"    @Test","lastModifiedDate":"2021-11-05"},{"lineNumber":84,"author":{"gitId":"houtenteo"},"content":"    public void toStringTest() {","lastModifiedDate":"2021-11-05"},{"lineNumber":85,"author":{"gitId":"houtenteo"},"content":"        String expectedString \u003d \"Block 123, Bobby Street 3\";","lastModifiedDate":"2021-11-05"},{"lineNumber":86,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":87,"author":{"gitId":"houtenteo"},"content":"        String test \u003d TypicalPersons.BOB.getAddress().toString();","lastModifiedDate":"2021-11-05"},{"lineNumber":88,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":89,"author":{"gitId":"houtenteo"},"content":"        assertEquals(test, expectedString);","lastModifiedDate":"2021-11-05"},{"lineNumber":90,"author":{"gitId":"houtenteo"},"content":"    }","lastModifiedDate":"2021-11-05"},{"lineNumber":91,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":92,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-16"}],"authorContributionMap":{"houtenteo":58,"-":34}},{"path":"src/test/java/seedu/address/model/person/AgeTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"houtenteo"},"content":"package seedu.address.model.person;","lastModifiedDate":"2021-10-18"},{"lineNumber":2,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":3,"author":{"gitId":"houtenteo"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-18"},{"lineNumber":4,"author":{"gitId":"houtenteo"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-18"},{"lineNumber":5,"author":{"gitId":"houtenteo"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-18"},{"lineNumber":6,"author":{"gitId":"houtenteo"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-18"},{"lineNumber":7,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":8,"author":{"gitId":"houtenteo"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-18"},{"lineNumber":9,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":10,"author":{"gitId":"houtenteo"},"content":"public class AgeTest {","lastModifiedDate":"2021-10-18"},{"lineNumber":11,"author":{"gitId":"houtenteo"},"content":"    @Test","lastModifiedDate":"2021-10-18"},{"lineNumber":12,"author":{"gitId":"houtenteo"},"content":"    public void constructor_null_createsDefaultAge() {","lastModifiedDate":"2021-10-18"},{"lineNumber":13,"author":{"gitId":"houtenteo"},"content":"        String noAge \u003d \"N.A\";","lastModifiedDate":"2021-10-18"},{"lineNumber":14,"author":{"gitId":"houtenteo"},"content":"        assertEquals(new Age(null).value, noAge);","lastModifiedDate":"2021-10-18"},{"lineNumber":15,"author":{"gitId":"houtenteo"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":16,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":17,"author":{"gitId":"houtenteo"},"content":"    @Test","lastModifiedDate":"2021-10-18"},{"lineNumber":18,"author":{"gitId":"houtenteo"},"content":"    public void constructor_invalidAge_throwsIllegalArgumentException() {","lastModifiedDate":"2021-10-18"},{"lineNumber":19,"author":{"gitId":"houtenteo"},"content":"        String invalidAge \u003d \"Dinosaur\";","lastModifiedDate":"2021-10-18"},{"lineNumber":20,"author":{"gitId":"houtenteo"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Age(invalidAge));","lastModifiedDate":"2021-10-18"},{"lineNumber":21,"author":{"gitId":"houtenteo"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":22,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":23,"author":{"gitId":"houtenteo"},"content":"    @Test","lastModifiedDate":"2021-10-18"},{"lineNumber":24,"author":{"gitId":"houtenteo"},"content":"    public void isValidAge() {","lastModifiedDate":"2021-10-18"},{"lineNumber":25,"author":{"gitId":"houtenteo"},"content":"        // invalid ages","lastModifiedDate":"2021-10-18"},{"lineNumber":26,"author":{"gitId":"houtenteo"},"content":"        assertFalse(Age.isValidAge(\"\")); // empty string","lastModifiedDate":"2021-10-18"},{"lineNumber":27,"author":{"gitId":"houtenteo"},"content":"        assertFalse(Age.isValidAge(\" \")); // spaces only","lastModifiedDate":"2021-10-18"},{"lineNumber":28,"author":{"gitId":"houtenteo"},"content":"        assertFalse(Age.isValidAge(\"ME\")); // Contains non numbers","lastModifiedDate":"2021-10-18"},{"lineNumber":29,"author":{"gitId":"houtenteo"},"content":"        assertFalse(Age.isValidAge(\"2one3\")); // Contains non numbers","lastModifiedDate":"2021-10-18"},{"lineNumber":30,"author":{"gitId":"houtenteo"},"content":"        assertFalse(Age.isValidAge(\"12.5\")); // Contains decimal point","lastModifiedDate":"2021-10-18"},{"lineNumber":31,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":32,"author":{"gitId":"houtenteo"},"content":"        // valid ages","lastModifiedDate":"2021-10-18"},{"lineNumber":33,"author":{"gitId":"houtenteo"},"content":"        assertTrue(Age.isValidAge(\"10\"));","lastModifiedDate":"2021-10-18"},{"lineNumber":34,"author":{"gitId":"houtenteo"},"content":"        assertTrue(Age.isValidAge(\"2000\"));","lastModifiedDate":"2021-10-18"},{"lineNumber":35,"author":{"gitId":"houtenteo"},"content":"        assertTrue(Age.isValidAge(\"N.A\"));","lastModifiedDate":"2021-10-18"},{"lineNumber":36,"author":{"gitId":"houtenteo"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":37,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":38,"author":{"gitId":"houtenteo"},"content":"    @Test","lastModifiedDate":"2021-11-02"},{"lineNumber":39,"author":{"gitId":"houtenteo"},"content":"    public void equals() {","lastModifiedDate":"2021-11-02"},{"lineNumber":40,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":41,"author":{"gitId":"houtenteo"},"content":"        Age age \u003d new Age(\"10\");","lastModifiedDate":"2021-11-02"},{"lineNumber":42,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":43,"author":{"gitId":"houtenteo"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-11-02"},{"lineNumber":44,"author":{"gitId":"houtenteo"},"content":"        assertTrue(age.equals(age));","lastModifiedDate":"2021-11-02"},{"lineNumber":45,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":46,"author":{"gitId":"houtenteo"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2021-11-02"},{"lineNumber":47,"author":{"gitId":"houtenteo"},"content":"        Age remarkCopy \u003d new Age(\"10\");","lastModifiedDate":"2021-11-02"},{"lineNumber":48,"author":{"gitId":"houtenteo"},"content":"        assertTrue(age.equals(remarkCopy));","lastModifiedDate":"2021-11-02"},{"lineNumber":49,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":50,"author":{"gitId":"houtenteo"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2021-11-02"},{"lineNumber":51,"author":{"gitId":"houtenteo"},"content":"        assertFalse(age.equals(1));","lastModifiedDate":"2021-11-02"},{"lineNumber":52,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":53,"author":{"gitId":"houtenteo"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-11-02"},{"lineNumber":54,"author":{"gitId":"houtenteo"},"content":"        assertFalse(age.equals(null));","lastModifiedDate":"2021-11-02"},{"lineNumber":55,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":56,"author":{"gitId":"houtenteo"},"content":"        // different value -\u003e returns false","lastModifiedDate":"2021-11-02"},{"lineNumber":57,"author":{"gitId":"houtenteo"},"content":"        Age differentAge \u003d new Age(\"11\");","lastModifiedDate":"2021-11-02"},{"lineNumber":58,"author":{"gitId":"houtenteo"},"content":"        assertFalse(age.equals(differentAge));","lastModifiedDate":"2021-11-02"},{"lineNumber":59,"author":{"gitId":"houtenteo"},"content":"    }","lastModifiedDate":"2021-11-02"},{"lineNumber":60,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":61,"author":{"gitId":"houtenteo"},"content":"    @Test","lastModifiedDate":"2021-11-02"},{"lineNumber":62,"author":{"gitId":"houtenteo"},"content":"    public void isEmpty() {","lastModifiedDate":"2021-11-02"},{"lineNumber":63,"author":{"gitId":"houtenteo"},"content":"        Age test \u003d new Age(null);","lastModifiedDate":"2021-11-02"},{"lineNumber":64,"author":{"gitId":"houtenteo"},"content":"        assertTrue(test.isEmpty());","lastModifiedDate":"2021-11-02"},{"lineNumber":65,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":66,"author":{"gitId":"houtenteo"},"content":"        test \u003d new Age(\"N.A\");","lastModifiedDate":"2021-11-02"},{"lineNumber":67,"author":{"gitId":"houtenteo"},"content":"        assertTrue(test.isEmpty());","lastModifiedDate":"2021-11-02"},{"lineNumber":68,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":69,"author":{"gitId":"houtenteo"},"content":"        test \u003d new Age(\"10101\");","lastModifiedDate":"2021-11-02"},{"lineNumber":70,"author":{"gitId":"houtenteo"},"content":"        assertFalse(test.isEmpty());","lastModifiedDate":"2021-11-02"},{"lineNumber":71,"author":{"gitId":"houtenteo"},"content":"    }","lastModifiedDate":"2021-11-02"},{"lineNumber":72,"author":{"gitId":"houtenteo"},"content":"}","lastModifiedDate":"2021-10-18"}],"authorContributionMap":{"houtenteo":72}},{"path":"src/test/java/seedu/address/model/person/GenderTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"houtenteo"},"content":"package seedu.address.model.person;","lastModifiedDate":"2021-10-18"},{"lineNumber":2,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":3,"author":{"gitId":"houtenteo"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-18"},{"lineNumber":4,"author":{"gitId":"houtenteo"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-18"},{"lineNumber":5,"author":{"gitId":"houtenteo"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-18"},{"lineNumber":6,"author":{"gitId":"houtenteo"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-18"},{"lineNumber":7,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":8,"author":{"gitId":"houtenteo"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-18"},{"lineNumber":9,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":10,"author":{"gitId":"houtenteo"},"content":"public class GenderTest {","lastModifiedDate":"2021-10-18"},{"lineNumber":11,"author":{"gitId":"houtenteo"},"content":"    @Test","lastModifiedDate":"2021-10-18"},{"lineNumber":12,"author":{"gitId":"houtenteo"},"content":"    public void constructor_null_createsDefaultGender() {","lastModifiedDate":"2021-10-18"},{"lineNumber":13,"author":{"gitId":"houtenteo"},"content":"        String noGender \u003d \"N.A\";","lastModifiedDate":"2021-10-18"},{"lineNumber":14,"author":{"gitId":"houtenteo"},"content":"        assertEquals(new Gender(null).value, noGender);","lastModifiedDate":"2021-10-18"},{"lineNumber":15,"author":{"gitId":"houtenteo"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":16,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":17,"author":{"gitId":"houtenteo"},"content":"    @Test","lastModifiedDate":"2021-10-18"},{"lineNumber":18,"author":{"gitId":"houtenteo"},"content":"    public void constructor_invalidGender_throwsIllegalArgumentException() {","lastModifiedDate":"2021-10-18"},{"lineNumber":19,"author":{"gitId":"houtenteo"},"content":"        String invalidGender \u003d \"Dinosaur\";","lastModifiedDate":"2021-10-18"},{"lineNumber":20,"author":{"gitId":"houtenteo"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Gender(invalidGender));","lastModifiedDate":"2021-10-18"},{"lineNumber":21,"author":{"gitId":"houtenteo"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":22,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":23,"author":{"gitId":"houtenteo"},"content":"    @Test","lastModifiedDate":"2021-10-18"},{"lineNumber":24,"author":{"gitId":"houtenteo"},"content":"    public void isValidAddress() {","lastModifiedDate":"2021-10-18"},{"lineNumber":25,"author":{"gitId":"houtenteo"},"content":"        // invalid genders","lastModifiedDate":"2021-10-18"},{"lineNumber":26,"author":{"gitId":"houtenteo"},"content":"        assertFalse(Gender.isValidGender(\"\")); // empty string","lastModifiedDate":"2021-10-18"},{"lineNumber":27,"author":{"gitId":"houtenteo"},"content":"        assertFalse(Gender.isValidGender(\" \")); // spaces only","lastModifiedDate":"2021-10-18"},{"lineNumber":28,"author":{"gitId":"houtenteo"},"content":"        assertFalse(Gender.isValidGender(\"ME\")); // Anything other than \u0027M\u0027, \u0027F\u0027 or \u0027N.A\u0027","lastModifiedDate":"2021-10-18"},{"lineNumber":29,"author":{"gitId":"houtenteo"},"content":"        assertFalse(Gender.isValidGender(\"123\")); // Anything other than \u0027M\u0027, \u0027F\u0027 or \u0027N.A\u0027","lastModifiedDate":"2021-10-18"},{"lineNumber":30,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":31,"author":{"gitId":"houtenteo"},"content":"        // valid genders","lastModifiedDate":"2021-10-18"},{"lineNumber":32,"author":{"gitId":"houtenteo"},"content":"        assertTrue(Gender.isValidGender(\"M\"));","lastModifiedDate":"2021-10-18"},{"lineNumber":33,"author":{"gitId":"houtenteo"},"content":"        assertTrue(Gender.isValidGender(\"F\"));","lastModifiedDate":"2021-10-18"},{"lineNumber":34,"author":{"gitId":"houtenteo"},"content":"        assertTrue(Gender.isValidGender(\"m\")); // lower case","lastModifiedDate":"2021-10-18"},{"lineNumber":35,"author":{"gitId":"houtenteo"},"content":"        assertTrue(Gender.isValidGender(\"f\")); // lower case","lastModifiedDate":"2021-10-18"},{"lineNumber":36,"author":{"gitId":"houtenteo"},"content":"        assertTrue(Gender.isValidGender(\"N.A\"));","lastModifiedDate":"2021-10-18"},{"lineNumber":37,"author":{"gitId":"houtenteo"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":38,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":39,"author":{"gitId":"houtenteo"},"content":"    @Test","lastModifiedDate":"2021-11-02"},{"lineNumber":40,"author":{"gitId":"houtenteo"},"content":"    public void isEmpty() {","lastModifiedDate":"2021-11-02"},{"lineNumber":41,"author":{"gitId":"houtenteo"},"content":"        //true only when null or \"N.A\" is passed into constructor, case-insensitive","lastModifiedDate":"2021-11-02"},{"lineNumber":42,"author":{"gitId":"houtenteo"},"content":"        Gender test \u003d new Gender(null);","lastModifiedDate":"2021-11-02"},{"lineNumber":43,"author":{"gitId":"houtenteo"},"content":"        assertTrue(test.isEmpty());","lastModifiedDate":"2021-11-02"},{"lineNumber":44,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":45,"author":{"gitId":"houtenteo"},"content":"        test \u003d new Gender(\"N.A\");","lastModifiedDate":"2021-11-02"},{"lineNumber":46,"author":{"gitId":"houtenteo"},"content":"        assertTrue(test.isEmpty());","lastModifiedDate":"2021-11-02"},{"lineNumber":47,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":48,"author":{"gitId":"houtenteo"},"content":"        test \u003d new Gender(\"n.A\");","lastModifiedDate":"2021-11-02"},{"lineNumber":49,"author":{"gitId":"houtenteo"},"content":"        assertTrue(test.isEmpty());","lastModifiedDate":"2021-11-02"},{"lineNumber":50,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":51,"author":{"gitId":"houtenteo"},"content":"        //False either m or f","lastModifiedDate":"2021-11-02"},{"lineNumber":52,"author":{"gitId":"houtenteo"},"content":"        test \u003d new Gender(\"f\");","lastModifiedDate":"2021-11-02"},{"lineNumber":53,"author":{"gitId":"houtenteo"},"content":"        assertFalse(test.isEmpty());","lastModifiedDate":"2021-11-02"},{"lineNumber":54,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":55,"author":{"gitId":"houtenteo"},"content":"        test \u003d new Gender(\"m\");","lastModifiedDate":"2021-11-02"},{"lineNumber":56,"author":{"gitId":"houtenteo"},"content":"        assertFalse(test.isEmpty());","lastModifiedDate":"2021-11-02"},{"lineNumber":57,"author":{"gitId":"houtenteo"},"content":"    }","lastModifiedDate":"2021-11-02"},{"lineNumber":58,"author":{"gitId":"houtenteo"},"content":"}","lastModifiedDate":"2021-10-18"}],"authorContributionMap":{"houtenteo":58}},{"path":"src/test/java/seedu/address/model/person/IsCalledTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"pranav-ganesh"},"content":"package seedu.address.model.person;","lastModifiedDate":"2021-11-04"},{"lineNumber":2,"author":{"gitId":"pranav-ganesh"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":3,"author":{"gitId":"pranav-ganesh"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-11-04"},{"lineNumber":4,"author":{"gitId":"pranav-ganesh"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-11-04"},{"lineNumber":5,"author":{"gitId":"pranav-ganesh"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":6,"author":{"gitId":"pranav-ganesh"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-11-04"},{"lineNumber":7,"author":{"gitId":"pranav-ganesh"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":8,"author":{"gitId":"pranav-ganesh"},"content":"public class IsCalledTest {","lastModifiedDate":"2021-11-04"},{"lineNumber":9,"author":{"gitId":"pranav-ganesh"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":10,"author":{"gitId":"pranav-ganesh"},"content":"    @Test","lastModifiedDate":"2021-11-04"},{"lineNumber":11,"author":{"gitId":"pranav-ganesh"},"content":"    public void equals() {","lastModifiedDate":"2021-11-04"},{"lineNumber":12,"author":{"gitId":"pranav-ganesh"},"content":"        IsCalled isCalled \u003d new IsCalled(\"false\");","lastModifiedDate":"2021-11-04"},{"lineNumber":13,"author":{"gitId":"pranav-ganesh"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":14,"author":{"gitId":"pranav-ganesh"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-11-04"},{"lineNumber":15,"author":{"gitId":"pranav-ganesh"},"content":"        assertTrue(isCalled.equals(isCalled));","lastModifiedDate":"2021-11-04"},{"lineNumber":16,"author":{"gitId":"pranav-ganesh"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":17,"author":{"gitId":"pranav-ganesh"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2021-11-04"},{"lineNumber":18,"author":{"gitId":"pranav-ganesh"},"content":"        IsCalled remarkCopy \u003d new IsCalled(isCalled.value ? \"TRUE\" : \"FALSE\");","lastModifiedDate":"2021-11-04"},{"lineNumber":19,"author":{"gitId":"pranav-ganesh"},"content":"        assertTrue(isCalled.equals(remarkCopy));","lastModifiedDate":"2021-11-04"},{"lineNumber":20,"author":{"gitId":"pranav-ganesh"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":21,"author":{"gitId":"pranav-ganesh"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2021-11-04"},{"lineNumber":22,"author":{"gitId":"pranav-ganesh"},"content":"        assertFalse(isCalled.equals(1));","lastModifiedDate":"2021-11-04"},{"lineNumber":23,"author":{"gitId":"pranav-ganesh"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":24,"author":{"gitId":"pranav-ganesh"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-11-04"},{"lineNumber":25,"author":{"gitId":"pranav-ganesh"},"content":"        assertFalse(isCalled.equals(null));","lastModifiedDate":"2021-11-04"},{"lineNumber":26,"author":{"gitId":"pranav-ganesh"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":27,"author":{"gitId":"pranav-ganesh"},"content":"        // different remark -\u003e returns false","lastModifiedDate":"2021-11-04"},{"lineNumber":28,"author":{"gitId":"pranav-ganesh"},"content":"        IsCalled differentIsCalled \u003d new IsCalled(\"true\");","lastModifiedDate":"2021-11-04"},{"lineNumber":29,"author":{"gitId":"pranav-ganesh"},"content":"        assertFalse(isCalled.equals(differentIsCalled));","lastModifiedDate":"2021-11-04"},{"lineNumber":30,"author":{"gitId":"pranav-ganesh"},"content":"    }","lastModifiedDate":"2021-11-04"},{"lineNumber":31,"author":{"gitId":"pranav-ganesh"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":32,"author":{"gitId":"pranav-ganesh"},"content":"    @Test","lastModifiedDate":"2021-11-04"},{"lineNumber":33,"author":{"gitId":"pranav-ganesh"},"content":"    public void isValidIsCalled() {","lastModifiedDate":"2021-11-04"},{"lineNumber":34,"author":{"gitId":"pranav-ganesh"},"content":"        //true","lastModifiedDate":"2021-11-04"},{"lineNumber":35,"author":{"gitId":"pranav-ganesh"},"content":"        assertTrue(IsCalled.isValidIsCalled(\"\"));","lastModifiedDate":"2021-11-04"},{"lineNumber":36,"author":{"gitId":"pranav-ganesh"},"content":"        assertTrue(IsCalled.isValidIsCalled(\"true\"));","lastModifiedDate":"2021-11-04"},{"lineNumber":37,"author":{"gitId":"pranav-ganesh"},"content":"        assertTrue(IsCalled.isValidIsCalled(\"false\"));","lastModifiedDate":"2021-11-04"},{"lineNumber":38,"author":{"gitId":"pranav-ganesh"},"content":"        assertTrue(IsCalled.isValidIsCalled(\"tRuE\"));","lastModifiedDate":"2021-11-04"},{"lineNumber":39,"author":{"gitId":"pranav-ganesh"},"content":"        assertTrue(IsCalled.isValidIsCalled(\"FaLsE\"));","lastModifiedDate":"2021-11-04"},{"lineNumber":40,"author":{"gitId":"pranav-ganesh"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":41,"author":{"gitId":"pranav-ganesh"},"content":"        //false","lastModifiedDate":"2021-11-04"},{"lineNumber":42,"author":{"gitId":"pranav-ganesh"},"content":"        assertFalse(IsCalled.isValidIsCalled(\"this is not valid\"));","lastModifiedDate":"2021-11-04"},{"lineNumber":43,"author":{"gitId":"pranav-ganesh"},"content":"        assertFalse(IsCalled.isValidIsCalled(\"1\"));","lastModifiedDate":"2021-11-04"},{"lineNumber":44,"author":{"gitId":"pranav-ganesh"},"content":"        assertFalse(IsCalled.isValidIsCalled(\"f\"));","lastModifiedDate":"2021-11-04"},{"lineNumber":45,"author":{"gitId":"pranav-ganesh"},"content":"        assertFalse(IsCalled.isValidIsCalled(\"t\"));","lastModifiedDate":"2021-11-04"},{"lineNumber":46,"author":{"gitId":"pranav-ganesh"},"content":"    }","lastModifiedDate":"2021-11-04"},{"lineNumber":47,"author":{"gitId":"pranav-ganesh"},"content":"}","lastModifiedDate":"2021-11-04"}],"authorContributionMap":{"pranav-ganesh":47}},{"path":"src/test/java/seedu/address/model/person/PersonTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2021-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":3,"author":{"gitId":"houtenteo"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-11-02"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-09-22"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-09-22"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2021-09-22"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2021-09-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2021-09-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2021-11-02"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2021-09-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BOB;","lastModifiedDate":"2021-09-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":15,"author":{"gitId":"houtenteo"},"content":"import seedu.address.model.person.interests.InterestsList;","lastModifiedDate":"2021-11-02"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2021-09-22"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class PersonTest {","lastModifiedDate":"2021-09-22"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-11-02"},{"lineNumber":21,"author":{"gitId":"houtenteo"},"content":"    public void constructor_anyNull_throwsNullPointerException() {","lastModifiedDate":"2021-11-02"},{"lineNumber":22,"author":{"gitId":"houtenteo"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Person(","lastModifiedDate":"2021-11-02"},{"lineNumber":23,"author":{"gitId":"houtenteo"},"content":"                new Name(VALID_NAME_BOB), new Phone(VALID_PHONE_BOB), new Email(VALID_EMAIL_BOB),","lastModifiedDate":"2021-11-02"},{"lineNumber":24,"author":{"gitId":"pranav-ganesh"},"content":"                new IsCalled(\"true\"), new Address(\"VALID ADDRESS\"), new Gender(\"F\"), new Age(\"22\"),","lastModifiedDate":"2021-11-04"},{"lineNumber":25,"author":{"gitId":"houtenteo"},"content":"                null","lastModifiedDate":"2021-11-02"},{"lineNumber":26,"author":{"gitId":"houtenteo"},"content":"        ));","lastModifiedDate":"2021-11-02"},{"lineNumber":27,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":28,"author":{"gitId":"houtenteo"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Person(","lastModifiedDate":"2021-11-02"},{"lineNumber":29,"author":{"gitId":"houtenteo"},"content":"                new Name(VALID_NAME_BOB), new Phone(VALID_PHONE_BOB), new Email(VALID_EMAIL_BOB),","lastModifiedDate":"2021-11-02"},{"lineNumber":30,"author":{"gitId":"pranav-ganesh"},"content":"                new IsCalled(\"true\"), new Address(\"VALID ADDRESS\"), new Gender(\"F\"), null,","lastModifiedDate":"2021-11-04"},{"lineNumber":31,"author":{"gitId":"houtenteo"},"content":"                new InterestsList()","lastModifiedDate":"2021-11-02"},{"lineNumber":32,"author":{"gitId":"houtenteo"},"content":"        ));","lastModifiedDate":"2021-11-02"},{"lineNumber":33,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":34,"author":{"gitId":"houtenteo"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Person(","lastModifiedDate":"2021-11-02"},{"lineNumber":35,"author":{"gitId":"houtenteo"},"content":"                new Name(VALID_NAME_BOB), new Phone(VALID_PHONE_BOB), new Email(VALID_EMAIL_BOB),","lastModifiedDate":"2021-11-02"},{"lineNumber":36,"author":{"gitId":"pranav-ganesh"},"content":"                new IsCalled(\"true\"), new Address(\"VALID ADDRESS\"), null, new Age(\"22\"),","lastModifiedDate":"2021-11-04"},{"lineNumber":37,"author":{"gitId":"houtenteo"},"content":"                new InterestsList()","lastModifiedDate":"2021-11-02"},{"lineNumber":38,"author":{"gitId":"houtenteo"},"content":"        ));","lastModifiedDate":"2021-11-02"},{"lineNumber":39,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":40,"author":{"gitId":"houtenteo"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Person(","lastModifiedDate":"2021-11-02"},{"lineNumber":41,"author":{"gitId":"houtenteo"},"content":"                new Name(VALID_NAME_BOB), new Phone(VALID_PHONE_BOB), new Email(VALID_EMAIL_BOB),","lastModifiedDate":"2021-11-02"},{"lineNumber":42,"author":{"gitId":"pranav-ganesh"},"content":"                new IsCalled(\"true\"), null, new Gender(\"F\"), new Age(\"22\"),","lastModifiedDate":"2021-11-04"},{"lineNumber":43,"author":{"gitId":"houtenteo"},"content":"                new InterestsList()","lastModifiedDate":"2021-11-02"},{"lineNumber":44,"author":{"gitId":"houtenteo"},"content":"        ));","lastModifiedDate":"2021-11-02"},{"lineNumber":45,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":46,"author":{"gitId":"houtenteo"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Person(","lastModifiedDate":"2021-11-02"},{"lineNumber":47,"author":{"gitId":"houtenteo"},"content":"                new Name(VALID_NAME_BOB), new Phone(VALID_PHONE_BOB), new Email(VALID_EMAIL_BOB),","lastModifiedDate":"2021-11-02"},{"lineNumber":48,"author":{"gitId":"houtenteo"},"content":"                null, new Address(\"VALID ADDRESS\"), new Gender(\"F\"), new Age(\"22\"),","lastModifiedDate":"2021-11-02"},{"lineNumber":49,"author":{"gitId":"houtenteo"},"content":"                new InterestsList()","lastModifiedDate":"2021-11-02"},{"lineNumber":50,"author":{"gitId":"houtenteo"},"content":"        ));","lastModifiedDate":"2021-11-02"},{"lineNumber":51,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":52,"author":{"gitId":"houtenteo"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Person(","lastModifiedDate":"2021-11-02"},{"lineNumber":53,"author":{"gitId":"houtenteo"},"content":"                new Name(VALID_NAME_BOB), new Phone(VALID_PHONE_BOB), null,","lastModifiedDate":"2021-11-02"},{"lineNumber":54,"author":{"gitId":"pranav-ganesh"},"content":"                new IsCalled(\"true\"), new Address(\"VALID ADDRESS\"), new Gender(\"F\"), new Age(\"22\"),","lastModifiedDate":"2021-11-04"},{"lineNumber":55,"author":{"gitId":"houtenteo"},"content":"                new InterestsList()","lastModifiedDate":"2021-11-02"},{"lineNumber":56,"author":{"gitId":"houtenteo"},"content":"        ));","lastModifiedDate":"2021-11-02"},{"lineNumber":57,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":58,"author":{"gitId":"houtenteo"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Person(","lastModifiedDate":"2021-11-02"},{"lineNumber":59,"author":{"gitId":"houtenteo"},"content":"                new Name(VALID_NAME_BOB), null, new Email(VALID_EMAIL_BOB),","lastModifiedDate":"2021-11-02"},{"lineNumber":60,"author":{"gitId":"pranav-ganesh"},"content":"                new IsCalled(\"true\"), new Address(\"VALID ADDRESS\"), new Gender(\"F\"), new Age(\"22\"),","lastModifiedDate":"2021-11-04"},{"lineNumber":61,"author":{"gitId":"houtenteo"},"content":"                new InterestsList()","lastModifiedDate":"2021-11-02"},{"lineNumber":62,"author":{"gitId":"houtenteo"},"content":"        ));","lastModifiedDate":"2021-11-02"},{"lineNumber":63,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":64,"author":{"gitId":"houtenteo"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Person(","lastModifiedDate":"2021-11-02"},{"lineNumber":65,"author":{"gitId":"houtenteo"},"content":"                null, new Phone(VALID_PHONE_BOB), new Email(VALID_EMAIL_BOB),","lastModifiedDate":"2021-11-02"},{"lineNumber":66,"author":{"gitId":"pranav-ganesh"},"content":"                new IsCalled(\"true\"), new Address(\"VALID ADDRESS\"), new Gender(\"F\"), new Age(\"22\"),","lastModifiedDate":"2021-11-04"},{"lineNumber":67,"author":{"gitId":"houtenteo"},"content":"                new InterestsList()","lastModifiedDate":"2021-11-02"},{"lineNumber":68,"author":{"gitId":"houtenteo"},"content":"        ));","lastModifiedDate":"2021-11-02"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-11-02"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-09-22"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public void isSamePerson() {","lastModifiedDate":"2021-09-22"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-09-22"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.isSamePerson(ALICE));","lastModifiedDate":"2021-09-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-09-22"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.isSamePerson(null));","lastModifiedDate":"2021-09-22"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        // same name, all other attributes different -\u003e returns true","lastModifiedDate":"2021-09-22"},{"lineNumber":80,"author":{"gitId":"houtenteo"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB).build();","lastModifiedDate":"2021-09-22"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.isSamePerson(editedAlice));","lastModifiedDate":"2021-09-22"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        // different name, all other attributes same -\u003e returns false","lastModifiedDate":"2021-09-22"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2021-09-22"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.isSamePerson(editedAlice));","lastModifiedDate":"2021-09-22"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":87,"author":{"gitId":"houtenteo"},"content":"        // name differs in case, all other attributes same -\u003e returns true","lastModifiedDate":"2021-11-08"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        Person editedBob \u003d new PersonBuilder(BOB).withName(VALID_NAME_BOB.toLowerCase()).build();","lastModifiedDate":"2021-09-22"},{"lineNumber":89,"author":{"gitId":"houtenteo"},"content":"        assertTrue(BOB.isSamePerson(editedBob));","lastModifiedDate":"2021-11-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        // name has trailing spaces, all other attributes same -\u003e returns false","lastModifiedDate":"2021-09-22"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        String nameWithTrailingSpaces \u003d VALID_NAME_BOB + \" \";","lastModifiedDate":"2021-09-22"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        editedBob \u003d new PersonBuilder(BOB).withName(nameWithTrailingSpaces).build();","lastModifiedDate":"2021-09-22"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        assertFalse(BOB.isSamePerson(editedBob));","lastModifiedDate":"2021-09-22"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-09-22"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2021-09-22"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2021-09-22"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        Person aliceCopy \u003d new PersonBuilder(ALICE).build();","lastModifiedDate":"2021-09-22"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.equals(aliceCopy));","lastModifiedDate":"2021-09-22"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-09-22"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.equals(ALICE));","lastModifiedDate":"2021-09-22"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-09-22"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(null));","lastModifiedDate":"2021-09-22"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        // different type -\u003e returns false","lastModifiedDate":"2021-09-22"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(5));","lastModifiedDate":"2021-09-22"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2021-09-22"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(BOB));","lastModifiedDate":"2021-09-22"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2021-09-22"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2021-09-22"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2021-09-22"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        // different phone -\u003e returns false","lastModifiedDate":"2021-09-22"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2021-09-22"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2021-09-22"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        // different email -\u003e returns false","lastModifiedDate":"2021-09-22"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withEmail(VALID_EMAIL_BOB).build();","lastModifiedDate":"2021-09-22"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2021-09-22"},{"lineNumber":126,"author":{"gitId":"houtenteo"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":128,"author":{"gitId":"houtenteo"},"content":"    @Test","lastModifiedDate":"2021-11-02"},{"lineNumber":129,"author":{"gitId":"houtenteo"},"content":"    public void toStringNoHeaders() {","lastModifiedDate":"2021-11-02"},{"lineNumber":130,"author":{"gitId":"houtenteo"},"content":"        Person test \u003d new PersonBuilder().build();","lastModifiedDate":"2021-11-02"},{"lineNumber":131,"author":{"gitId":"houtenteo"},"content":"        String expectedString \u003d new StringBuilder().append(\"Amy Bee;\").append(\"85355255;\")","lastModifiedDate":"2021-11-02"},{"lineNumber":132,"author":{"gitId":"houtenteo"},"content":"                .append(\"amy@gmail.com;\").append(\"False;\").toString();","lastModifiedDate":"2021-11-02"},{"lineNumber":133,"author":{"gitId":"houtenteo"},"content":"        assertEquals(test.toStringNoHeaders(), expectedString);","lastModifiedDate":"2021-11-02"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-11-02"},{"lineNumber":135,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-09-22"}],"authorContributionMap":{"houtenteo":53,"pranav-ganesh":7,"-":75}},{"path":"src/test/java/seedu/address/model/person/PhoneTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2017-01-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class PhoneTest {","lastModifiedDate":"2017-01-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Phone(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void constructor_invalidPhone_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        String invalidPhone \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Phone(invalidPhone));","lastModifiedDate":"2019-03-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void isValidPhone() {","lastModifiedDate":"2017-01-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // null phone number","lastModifiedDate":"2017-12-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Phone.isValidPhone(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // invalid phone numbers","lastModifiedDate":"2017-01-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"\")); // empty string","lastModifiedDate":"2017-01-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\" \")); // spaces only","lastModifiedDate":"2017-01-16"},{"lineNumber":30,"author":{"gitId":"houtenteo"},"content":"        assertFalse(Phone.isValidPhone(\"91\")); // less than 8 numbers","lastModifiedDate":"2021-11-01"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"phone\")); // non-numeric","lastModifiedDate":"2017-01-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"9011p041\")); // alphabets within digits","lastModifiedDate":"2017-01-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"9312 1534\")); // spaces within digits","lastModifiedDate":"2017-01-16"},{"lineNumber":34,"author":{"gitId":"houtenteo"},"content":"        assertFalse(Phone.isValidPhone(\"124293842033123\")); // long phone numbers","lastModifiedDate":"2021-11-02"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        // valid phone numbers","lastModifiedDate":"2017-01-16"},{"lineNumber":37,"author":{"gitId":"houtenteo"},"content":"        assertTrue(Phone.isValidPhone(\"67654321\")); // exactly 8 numbers beginning with 6","lastModifiedDate":"2021-11-02"},{"lineNumber":38,"author":{"gitId":"houtenteo"},"content":"        assertTrue(Phone.isValidPhone(\"87654321\")); // exactly 8 numbers beginning with 8","lastModifiedDate":"2021-11-02"},{"lineNumber":39,"author":{"gitId":"houtenteo"},"content":"        assertTrue(Phone.isValidPhone(\"93121534\")); // exactly 8 numbers beginning with 9","lastModifiedDate":"2021-11-02"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":41,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":42,"author":{"gitId":"houtenteo"},"content":"    @Test","lastModifiedDate":"2021-11-02"},{"lineNumber":43,"author":{"gitId":"houtenteo"},"content":"    public void equals() {","lastModifiedDate":"2021-11-02"},{"lineNumber":44,"author":{"gitId":"houtenteo"},"content":"        Phone phone \u003d new Phone(\"98765432\");","lastModifiedDate":"2021-11-02"},{"lineNumber":45,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":46,"author":{"gitId":"houtenteo"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-11-02"},{"lineNumber":47,"author":{"gitId":"houtenteo"},"content":"        assertTrue(phone.equals(phone));","lastModifiedDate":"2021-11-02"},{"lineNumber":48,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":49,"author":{"gitId":"houtenteo"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2021-11-02"},{"lineNumber":50,"author":{"gitId":"houtenteo"},"content":"        Phone remarkCopy \u003d new Phone(\"98765432\");","lastModifiedDate":"2021-11-02"},{"lineNumber":51,"author":{"gitId":"houtenteo"},"content":"        assertTrue(phone.equals(remarkCopy));","lastModifiedDate":"2021-11-02"},{"lineNumber":52,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":53,"author":{"gitId":"houtenteo"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2021-11-02"},{"lineNumber":54,"author":{"gitId":"houtenteo"},"content":"        assertFalse(phone.equals(1));","lastModifiedDate":"2021-11-02"},{"lineNumber":55,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":56,"author":{"gitId":"houtenteo"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-11-02"},{"lineNumber":57,"author":{"gitId":"houtenteo"},"content":"        assertFalse(phone.equals(null));","lastModifiedDate":"2021-11-02"},{"lineNumber":58,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":59,"author":{"gitId":"houtenteo"},"content":"        // different remark -\u003e returns false","lastModifiedDate":"2021-11-02"},{"lineNumber":60,"author":{"gitId":"houtenteo"},"content":"        Phone differentPhone \u003d new Phone(\"62353535\");","lastModifiedDate":"2021-11-02"},{"lineNumber":61,"author":{"gitId":"houtenteo"},"content":"        assertFalse(phone.equals(differentPhone));","lastModifiedDate":"2021-11-02"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-11-02"},{"lineNumber":63,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-16"}],"authorContributionMap":{"houtenteo":26,"-":37}},{"path":"src/test/java/seedu/address/model/person/UniquePersonListTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2021-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-09-22"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-09-22"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-09-22"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2021-09-22"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2021-09-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BOB;","lastModifiedDate":"2021-09-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-09-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2021-09-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2021-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-09-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.DuplicatePersonException;","lastModifiedDate":"2021-09-22"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.PersonNotFoundException;","lastModifiedDate":"2021-09-22"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2021-09-22"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class UniquePersonListTest {","lastModifiedDate":"2021-09-22"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private final UniquePersonList uniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2021-09-22"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-09-22"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public void contains_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2021-09-22"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.contains(null));","lastModifiedDate":"2021-09-22"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-09-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void contains_personNotInList_returnsFalse() {","lastModifiedDate":"2021-09-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertFalse(uniquePersonList.contains(ALICE));","lastModifiedDate":"2021-09-22"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-09-22"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public void contains_personInList_returnsTrue() {","lastModifiedDate":"2021-09-22"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2021-09-22"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertTrue(uniquePersonList.contains(ALICE));","lastModifiedDate":"2021-09-22"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-09-22"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public void contains_personWithSameIdentityFieldsInList_returnsTrue() {","lastModifiedDate":"2021-09-22"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2021-09-22"},{"lineNumber":43,"author":{"gitId":"houtenteo"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).build();","lastModifiedDate":"2021-09-22"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertTrue(uniquePersonList.contains(editedAlice));","lastModifiedDate":"2021-09-22"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-09-22"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public void add_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2021-09-22"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.add(null));","lastModifiedDate":"2021-09-22"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-09-22"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void add_duplicatePerson_throwsDuplicatePersonException() {","lastModifiedDate":"2021-09-22"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2021-09-22"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e uniquePersonList.add(ALICE));","lastModifiedDate":"2021-09-22"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-09-22"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public void setPerson_nullTargetPerson_throwsNullPointerException() {","lastModifiedDate":"2021-09-22"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPerson(null, ALICE));","lastModifiedDate":"2021-09-22"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-09-22"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public void setPerson_nullEditedPerson_throwsNullPointerException() {","lastModifiedDate":"2021-09-22"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPerson(ALICE, null));","lastModifiedDate":"2021-09-22"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-09-22"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void setPerson_targetPersonNotInList_throwsPersonNotFoundException() {","lastModifiedDate":"2021-09-22"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertThrows(PersonNotFoundException.class, () -\u003e uniquePersonList.setPerson(ALICE, ALICE));","lastModifiedDate":"2021-09-22"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-09-22"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonIsSamePerson_success() {","lastModifiedDate":"2021-09-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2021-09-22"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        uniquePersonList.setPerson(ALICE, ALICE);","lastModifiedDate":"2021-09-22"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2021-09-22"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(ALICE);","lastModifiedDate":"2021-09-22"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2021-09-22"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-09-22"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonHasSameIdentity_success() {","lastModifiedDate":"2021-09-22"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2021-09-22"},{"lineNumber":85,"author":{"gitId":"houtenteo"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).build();","lastModifiedDate":"2021-09-22"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        uniquePersonList.setPerson(ALICE, editedAlice);","lastModifiedDate":"2021-09-22"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2021-09-22"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(editedAlice);","lastModifiedDate":"2021-09-22"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2021-09-22"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-09-22"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonHasDifferentIdentity_success() {","lastModifiedDate":"2021-09-22"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2021-09-22"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        uniquePersonList.setPerson(ALICE, BOB);","lastModifiedDate":"2021-09-22"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2021-09-22"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(BOB);","lastModifiedDate":"2021-09-22"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2021-09-22"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-09-22"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonHasNonUniqueIdentity_throwsDuplicatePersonException() {","lastModifiedDate":"2021-09-22"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2021-09-22"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        uniquePersonList.add(BOB);","lastModifiedDate":"2021-09-22"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e uniquePersonList.setPerson(ALICE, BOB));","lastModifiedDate":"2021-09-22"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-09-22"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public void remove_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2021-09-22"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.remove(null));","lastModifiedDate":"2021-09-22"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-09-22"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    public void remove_personDoesNotExist_throwsPersonNotFoundException() {","lastModifiedDate":"2021-09-22"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        assertThrows(PersonNotFoundException.class, () -\u003e uniquePersonList.remove(ALICE));","lastModifiedDate":"2021-09-22"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-09-22"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    public void remove_existingPerson_removesPerson() {","lastModifiedDate":"2021-09-22"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2021-09-22"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        uniquePersonList.remove(ALICE);","lastModifiedDate":"2021-09-22"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2021-09-22"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2021-09-22"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-09-22"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    public void setPersons_nullUniquePersonList_throwsNullPointerException() {","lastModifiedDate":"2021-09-22"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPersons((UniquePersonList) null));","lastModifiedDate":"2021-09-22"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-09-22"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    public void setPersons_uniquePersonList_replacesOwnListWithProvidedUniquePersonList() {","lastModifiedDate":"2021-09-22"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2021-09-22"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2021-09-22"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(BOB);","lastModifiedDate":"2021-09-22"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        uniquePersonList.setPersons(expectedUniquePersonList);","lastModifiedDate":"2021-09-22"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2021-09-22"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-09-22"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    public void setPersons_nullList_throwsNullPointerException() {","lastModifiedDate":"2021-09-22"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPersons((List\u003cPerson\u003e) null));","lastModifiedDate":"2021-09-22"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-09-22"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    public void setPersons_list_replacesOwnListWithProvidedList() {","lastModifiedDate":"2021-09-22"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2021-09-22"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e personList \u003d Collections.singletonList(BOB);","lastModifiedDate":"2021-09-22"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        uniquePersonList.setPersons(personList);","lastModifiedDate":"2021-09-22"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2021-09-22"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(BOB);","lastModifiedDate":"2021-09-22"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2021-09-22"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-09-22"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    public void setPersons_listWithDuplicatePersons_throwsDuplicatePersonException() {","lastModifiedDate":"2021-09-22"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e listWithDuplicatePersons \u003d Arrays.asList(ALICE, ALICE);","lastModifiedDate":"2021-09-22"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e uniquePersonList.setPersons(listWithDuplicatePersons));","lastModifiedDate":"2021-09-22"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-09-22"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    public void asUnmodifiableObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2021-09-22"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, ()","lastModifiedDate":"2021-09-22"},{"lineNumber":164,"author":{"gitId":"-"},"content":"            -\u003e uniquePersonList.asUnmodifiableObservableList().remove(0));","lastModifiedDate":"2021-09-22"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":166,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-09-22"}],"authorContributionMap":{"houtenteo":2,"-":164}},{"path":"src/test/java/seedu/address/model/person/interests/InterestTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"houtenteo"},"content":"package seedu.address.model.person.interests;","lastModifiedDate":"2021-10-18"},{"lineNumber":2,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":3,"author":{"gitId":"houtenteo"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-11-02"},{"lineNumber":4,"author":{"gitId":"houtenteo"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-11-02"},{"lineNumber":5,"author":{"gitId":"houtenteo"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-18"},{"lineNumber":6,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":7,"author":{"gitId":"houtenteo"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-18"},{"lineNumber":8,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":9,"author":{"gitId":"houtenteo"},"content":"public class InterestTest {","lastModifiedDate":"2021-10-18"},{"lineNumber":10,"author":{"gitId":"houtenteo"},"content":"    @Test","lastModifiedDate":"2021-10-18"},{"lineNumber":11,"author":{"gitId":"houtenteo"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2021-10-18"},{"lineNumber":12,"author":{"gitId":"houtenteo"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Interest(null));","lastModifiedDate":"2021-10-18"},{"lineNumber":13,"author":{"gitId":"houtenteo"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":14,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":15,"author":{"gitId":"houtenteo"},"content":"    @Test","lastModifiedDate":"2021-10-18"},{"lineNumber":16,"author":{"gitId":"houtenteo"},"content":"    public void constructor_invalidTagName_throwsIllegalArgumentException1() {","lastModifiedDate":"2021-10-18"},{"lineNumber":17,"author":{"gitId":"houtenteo"},"content":"        String invalidInterest \u003d \"\";","lastModifiedDate":"2021-11-02"},{"lineNumber":18,"author":{"gitId":"houtenteo"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Interest(invalidInterest));","lastModifiedDate":"2021-11-02"},{"lineNumber":19,"author":{"gitId":"houtenteo"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":20,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":21,"author":{"gitId":"houtenteo"},"content":"    @Test","lastModifiedDate":"2021-10-18"},{"lineNumber":22,"author":{"gitId":"houtenteo"},"content":"    public void constructor_invalidTagName_throwsIllegalArgumentException2() {","lastModifiedDate":"2021-10-18"},{"lineNumber":23,"author":{"gitId":"houtenteo"},"content":"        String invalidInterest \u003d \" \";","lastModifiedDate":"2021-11-02"},{"lineNumber":24,"author":{"gitId":"houtenteo"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Interest(invalidInterest));","lastModifiedDate":"2021-11-02"},{"lineNumber":25,"author":{"gitId":"houtenteo"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":26,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":27,"author":{"gitId":"houtenteo"},"content":"    @Test","lastModifiedDate":"2021-10-18"},{"lineNumber":28,"author":{"gitId":"houtenteo"},"content":"    public void isValidInterest() {","lastModifiedDate":"2021-10-18"},{"lineNumber":29,"author":{"gitId":"houtenteo"},"content":"        // null Interest","lastModifiedDate":"2021-10-18"},{"lineNumber":30,"author":{"gitId":"houtenteo"},"content":"        assertThrows(NullPointerException.class, () -\u003e Interest.isValidInterest(null));","lastModifiedDate":"2021-10-18"},{"lineNumber":31,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":32,"author":{"gitId":"houtenteo"},"content":"        //invalid Interest","lastModifiedDate":"2021-11-02"},{"lineNumber":33,"author":{"gitId":"houtenteo"},"content":"        assertFalse(Interest.isValidInterest(\"\")); //empty string","lastModifiedDate":"2021-11-02"},{"lineNumber":34,"author":{"gitId":"houtenteo"},"content":"        assertFalse(Interest.isValidInterest(\"   \")); //spaces","lastModifiedDate":"2021-11-02"},{"lineNumber":35,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":36,"author":{"gitId":"houtenteo"},"content":"        //valid Interest","lastModifiedDate":"2021-11-02"},{"lineNumber":37,"author":{"gitId":"houtenteo"},"content":"        assertTrue(Interest.isValidInterest(\"this is valid\"));","lastModifiedDate":"2021-11-02"},{"lineNumber":38,"author":{"gitId":"houtenteo"},"content":"        assertTrue(Interest.isValidInterest(\"12873\"));","lastModifiedDate":"2021-11-02"},{"lineNumber":39,"author":{"gitId":"houtenteo"},"content":"    }","lastModifiedDate":"2021-11-02"},{"lineNumber":40,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":41,"author":{"gitId":"houtenteo"},"content":"    @Test","lastModifiedDate":"2021-11-02"},{"lineNumber":42,"author":{"gitId":"houtenteo"},"content":"    public void equals() {","lastModifiedDate":"2021-11-02"},{"lineNumber":43,"author":{"gitId":"houtenteo"},"content":"        Interest interest \u003d new Interest(\"My interest\");","lastModifiedDate":"2021-11-02"},{"lineNumber":44,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":45,"author":{"gitId":"houtenteo"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-11-02"},{"lineNumber":46,"author":{"gitId":"houtenteo"},"content":"        assertTrue(interest.equals(interest));","lastModifiedDate":"2021-11-02"},{"lineNumber":47,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":48,"author":{"gitId":"houtenteo"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2021-11-02"},{"lineNumber":49,"author":{"gitId":"houtenteo"},"content":"        Interest interestCopy \u003d new Interest(\"My interest\");","lastModifiedDate":"2021-11-02"},{"lineNumber":50,"author":{"gitId":"houtenteo"},"content":"        assertTrue(interest.equals(interestCopy));","lastModifiedDate":"2021-11-02"},{"lineNumber":51,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":52,"author":{"gitId":"houtenteo"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2021-11-02"},{"lineNumber":53,"author":{"gitId":"houtenteo"},"content":"        assertFalse(interest.equals(1));","lastModifiedDate":"2021-11-02"},{"lineNumber":54,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":55,"author":{"gitId":"houtenteo"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-11-02"},{"lineNumber":56,"author":{"gitId":"houtenteo"},"content":"        assertFalse(interest.equals(null));","lastModifiedDate":"2021-11-02"},{"lineNumber":57,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":58,"author":{"gitId":"houtenteo"},"content":"        // different remark -\u003e returns false","lastModifiedDate":"2021-11-02"},{"lineNumber":59,"author":{"gitId":"houtenteo"},"content":"        Interest differentInterest \u003d new Interest(\"different interest\");","lastModifiedDate":"2021-11-02"},{"lineNumber":60,"author":{"gitId":"houtenteo"},"content":"        assertFalse(interest.equals(differentInterest));","lastModifiedDate":"2021-11-02"},{"lineNumber":61,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":62,"author":{"gitId":"houtenteo"},"content":"        // different capitalisation -\u003e returns true","lastModifiedDate":"2021-11-05"},{"lineNumber":63,"author":{"gitId":"houtenteo"},"content":"        Interest differentCapsInterest \u003d new Interest(\"mY InTeReSt\");","lastModifiedDate":"2021-11-05"},{"lineNumber":64,"author":{"gitId":"houtenteo"},"content":"        assertTrue(interest.equals(differentCapsInterest));","lastModifiedDate":"2021-11-05"},{"lineNumber":65,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":66,"author":{"gitId":"houtenteo"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":67,"author":{"gitId":"houtenteo"},"content":"}","lastModifiedDate":"2021-10-18"}],"authorContributionMap":{"houtenteo":67}},{"path":"src/test/java/seedu/address/model/person/interests/InterestsListTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"houtenteo"},"content":"package seedu.address.model.person.interests;","lastModifiedDate":"2021-10-18"},{"lineNumber":2,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":3,"author":{"gitId":"houtenteo"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-18"},{"lineNumber":4,"author":{"gitId":"houtenteo"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-11-02"},{"lineNumber":5,"author":{"gitId":"houtenteo"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-11-02"},{"lineNumber":6,"author":{"gitId":"houtenteo"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-18"},{"lineNumber":7,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":8,"author":{"gitId":"houtenteo"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-11-02"},{"lineNumber":9,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":10,"author":{"gitId":"houtenteo"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-18"},{"lineNumber":11,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":12,"author":{"gitId":"houtenteo"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-10-18"},{"lineNumber":13,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":14,"author":{"gitId":"houtenteo"},"content":"public class InterestsListTest {","lastModifiedDate":"2021-10-18"},{"lineNumber":15,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":16,"author":{"gitId":"houtenteo"},"content":"    private InterestsList interestsList \u003d new InterestsList();","lastModifiedDate":"2021-10-18"},{"lineNumber":17,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":18,"author":{"gitId":"houtenteo"},"content":"    @Test","lastModifiedDate":"2021-11-02"},{"lineNumber":19,"author":{"gitId":"houtenteo"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2021-11-02"},{"lineNumber":20,"author":{"gitId":"houtenteo"},"content":"        assertThrows(NullPointerException.class, () -\u003e new InterestsList(null));","lastModifiedDate":"2021-11-02"},{"lineNumber":21,"author":{"gitId":"houtenteo"},"content":"    }","lastModifiedDate":"2021-11-02"},{"lineNumber":22,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":23,"author":{"gitId":"houtenteo"},"content":"    @Test","lastModifiedDate":"2021-10-18"},{"lineNumber":24,"author":{"gitId":"houtenteo"},"content":"    public void addInterest_null_throwsNullPointerException() {","lastModifiedDate":"2021-10-18"},{"lineNumber":25,"author":{"gitId":"houtenteo"},"content":"        assertThrows(NullPointerException.class, () -\u003e interestsList.addInterest(null));","lastModifiedDate":"2021-10-18"},{"lineNumber":26,"author":{"gitId":"houtenteo"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":27,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":28,"author":{"gitId":"houtenteo"},"content":"    @Test","lastModifiedDate":"2021-11-02"},{"lineNumber":29,"author":{"gitId":"houtenteo"},"content":"    public void addUniqueInterest_success() {","lastModifiedDate":"2021-11-05"},{"lineNumber":30,"author":{"gitId":"houtenteo"},"content":"        Interest i1 \u003d new Interest(\"Watching anime\");","lastModifiedDate":"2021-11-02"},{"lineNumber":31,"author":{"gitId":"houtenteo"},"content":"        Interest i2 \u003d new Interest(\"Reading manga\");","lastModifiedDate":"2021-11-02"},{"lineNumber":32,"author":{"gitId":"houtenteo"},"content":"        Interest i3 \u003d new Interest(\"getting drunk\");","lastModifiedDate":"2021-11-02"},{"lineNumber":33,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":34,"author":{"gitId":"houtenteo"},"content":"        ArrayList\u003cInterest\u003e expectedList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-11-02"},{"lineNumber":35,"author":{"gitId":"houtenteo"},"content":"        expectedList.add(i1);","lastModifiedDate":"2021-11-02"},{"lineNumber":36,"author":{"gitId":"houtenteo"},"content":"        expectedList.add(i2);","lastModifiedDate":"2021-11-02"},{"lineNumber":37,"author":{"gitId":"houtenteo"},"content":"        expectedList.add(i3);","lastModifiedDate":"2021-11-02"},{"lineNumber":38,"author":{"gitId":"houtenteo"},"content":"        InterestsList expectedInterestsList \u003d new InterestsList(expectedList);","lastModifiedDate":"2021-11-02"},{"lineNumber":39,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":40,"author":{"gitId":"houtenteo"},"content":"        InterestsList test \u003d new InterestsList();","lastModifiedDate":"2021-11-02"},{"lineNumber":41,"author":{"gitId":"houtenteo"},"content":"        test.addInterest(i1);","lastModifiedDate":"2021-11-02"},{"lineNumber":42,"author":{"gitId":"houtenteo"},"content":"        test.addInterest(i2);","lastModifiedDate":"2021-11-02"},{"lineNumber":43,"author":{"gitId":"houtenteo"},"content":"        test.addInterest(i3);","lastModifiedDate":"2021-11-02"},{"lineNumber":44,"author":{"gitId":"houtenteo"},"content":"        assertEquals(test, expectedInterestsList);","lastModifiedDate":"2021-11-02"},{"lineNumber":45,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":46,"author":{"gitId":"houtenteo"},"content":"    }","lastModifiedDate":"2021-11-02"},{"lineNumber":47,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":48,"author":{"gitId":"houtenteo"},"content":"    @Test","lastModifiedDate":"2021-11-05"},{"lineNumber":49,"author":{"gitId":"houtenteo"},"content":"    public void addDuplicateInterest_throwsIllegalArgumentException() {","lastModifiedDate":"2021-11-05"},{"lineNumber":50,"author":{"gitId":"houtenteo"},"content":"        Interest i1 \u003d new Interest(\"Watching anime\");","lastModifiedDate":"2021-11-05"},{"lineNumber":51,"author":{"gitId":"houtenteo"},"content":"        Interest i2 \u003d new Interest(\"Reading manga\");","lastModifiedDate":"2021-11-05"},{"lineNumber":52,"author":{"gitId":"houtenteo"},"content":"        Interest i3 \u003d new Interest(\"getting drunk\");","lastModifiedDate":"2021-11-05"},{"lineNumber":53,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":54,"author":{"gitId":"houtenteo"},"content":"        InterestsList test \u003d new InterestsList();","lastModifiedDate":"2021-11-05"},{"lineNumber":55,"author":{"gitId":"houtenteo"},"content":"        test.addInterest(i1);","lastModifiedDate":"2021-11-05"},{"lineNumber":56,"author":{"gitId":"houtenteo"},"content":"        test.addInterest(i2);","lastModifiedDate":"2021-11-05"},{"lineNumber":57,"author":{"gitId":"houtenteo"},"content":"        test.addInterest(i3);","lastModifiedDate":"2021-11-05"},{"lineNumber":58,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":59,"author":{"gitId":"houtenteo"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e test.addInterest(i2));","lastModifiedDate":"2021-11-05"},{"lineNumber":60,"author":{"gitId":"houtenteo"},"content":"    }","lastModifiedDate":"2021-11-05"},{"lineNumber":61,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":62,"author":{"gitId":"houtenteo"},"content":"    @Test","lastModifiedDate":"2021-11-02"},{"lineNumber":63,"author":{"gitId":"houtenteo"},"content":"    public void setInterest() {","lastModifiedDate":"2021-11-02"},{"lineNumber":64,"author":{"gitId":"houtenteo"},"content":"        Interest i1 \u003d new Interest(\"Watching anime\");","lastModifiedDate":"2021-11-02"},{"lineNumber":65,"author":{"gitId":"houtenteo"},"content":"        Interest i2 \u003d new Interest(\"Reading manga\");","lastModifiedDate":"2021-11-02"},{"lineNumber":66,"author":{"gitId":"houtenteo"},"content":"        Interest i3 \u003d new Interest(\"getting drunk\");","lastModifiedDate":"2021-11-02"},{"lineNumber":67,"author":{"gitId":"houtenteo"},"content":"        Interest i4 \u003d new Interest(\"Having a life\");","lastModifiedDate":"2021-11-02"},{"lineNumber":68,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":69,"author":{"gitId":"houtenteo"},"content":"        ArrayList\u003cInterest\u003e expectedList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-11-02"},{"lineNumber":70,"author":{"gitId":"houtenteo"},"content":"        expectedList.add(i1);","lastModifiedDate":"2021-11-02"},{"lineNumber":71,"author":{"gitId":"houtenteo"},"content":"        expectedList.add(i2);","lastModifiedDate":"2021-11-02"},{"lineNumber":72,"author":{"gitId":"houtenteo"},"content":"        expectedList.add(i4);","lastModifiedDate":"2021-11-02"},{"lineNumber":73,"author":{"gitId":"houtenteo"},"content":"        InterestsList expectedInterestsList \u003d new InterestsList(expectedList);","lastModifiedDate":"2021-11-02"},{"lineNumber":74,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":75,"author":{"gitId":"houtenteo"},"content":"        InterestsList updatedInterestsList \u003d new InterestsList();","lastModifiedDate":"2021-11-02"},{"lineNumber":76,"author":{"gitId":"houtenteo"},"content":"        updatedInterestsList.addInterest(i1);","lastModifiedDate":"2021-11-02"},{"lineNumber":77,"author":{"gitId":"houtenteo"},"content":"        updatedInterestsList.addInterest(i2);","lastModifiedDate":"2021-11-02"},{"lineNumber":78,"author":{"gitId":"houtenteo"},"content":"        updatedInterestsList.addInterest(i3);","lastModifiedDate":"2021-11-02"},{"lineNumber":79,"author":{"gitId":"houtenteo"},"content":"        updatedInterestsList.setInterest(i4, 2);","lastModifiedDate":"2021-11-02"},{"lineNumber":80,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":81,"author":{"gitId":"houtenteo"},"content":"        assertEquals(updatedInterestsList, expectedInterestsList);","lastModifiedDate":"2021-11-02"},{"lineNumber":82,"author":{"gitId":"houtenteo"},"content":"    }","lastModifiedDate":"2021-11-05"},{"lineNumber":83,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":84,"author":{"gitId":"houtenteo"},"content":"    @Test","lastModifiedDate":"2021-11-05"},{"lineNumber":85,"author":{"gitId":"houtenteo"},"content":"    public void setDuplicateInterest_throwsIllegalArgumentException() {","lastModifiedDate":"2021-11-05"},{"lineNumber":86,"author":{"gitId":"houtenteo"},"content":"        Interest i1 \u003d new Interest(\"Watching anime\");","lastModifiedDate":"2021-11-05"},{"lineNumber":87,"author":{"gitId":"houtenteo"},"content":"        Interest i2 \u003d new Interest(\"Reading manga\");","lastModifiedDate":"2021-11-05"},{"lineNumber":88,"author":{"gitId":"houtenteo"},"content":"        Interest i3 \u003d new Interest(\"getting drunk\");","lastModifiedDate":"2021-11-05"},{"lineNumber":89,"author":{"gitId":"houtenteo"},"content":"        Interest i4 \u003d new Interest(\"Having a life\");","lastModifiedDate":"2021-11-05"},{"lineNumber":90,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":91,"author":{"gitId":"houtenteo"},"content":"        InterestsList test \u003d new InterestsList();","lastModifiedDate":"2021-11-05"},{"lineNumber":92,"author":{"gitId":"houtenteo"},"content":"        test.addInterest(i1);","lastModifiedDate":"2021-11-05"},{"lineNumber":93,"author":{"gitId":"houtenteo"},"content":"        test.addInterest(i2);","lastModifiedDate":"2021-11-05"},{"lineNumber":94,"author":{"gitId":"houtenteo"},"content":"        test.addInterest(i3);","lastModifiedDate":"2021-11-05"},{"lineNumber":95,"author":{"gitId":"houtenteo"},"content":"        test.addInterest(i4);","lastModifiedDate":"2021-11-05"},{"lineNumber":96,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":97,"author":{"gitId":"houtenteo"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e test.setInterest(i4, 3));","lastModifiedDate":"2021-11-05"},{"lineNumber":98,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":99,"author":{"gitId":"houtenteo"},"content":"    }","lastModifiedDate":"2021-11-02"},{"lineNumber":100,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":101,"author":{"gitId":"houtenteo"},"content":"    @Test","lastModifiedDate":"2021-11-02"},{"lineNumber":102,"author":{"gitId":"houtenteo"},"content":"    public void checkDuplicate() {","lastModifiedDate":"2021-11-02"},{"lineNumber":103,"author":{"gitId":"houtenteo"},"content":"        Interest i1 \u003d new Interest(\"Watching anime\");","lastModifiedDate":"2021-11-02"},{"lineNumber":104,"author":{"gitId":"houtenteo"},"content":"        Interest i2 \u003d new Interest(\"Reading manga\");","lastModifiedDate":"2021-11-02"},{"lineNumber":105,"author":{"gitId":"houtenteo"},"content":"        Interest i3 \u003d new Interest(\"getting drunk\");","lastModifiedDate":"2021-11-02"},{"lineNumber":106,"author":{"gitId":"houtenteo"},"content":"        Interest i4 \u003d new Interest(\"Having a life\");","lastModifiedDate":"2021-11-02"},{"lineNumber":107,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":108,"author":{"gitId":"houtenteo"},"content":"        InterestsList interestsList \u003d new InterestsList();","lastModifiedDate":"2021-11-02"},{"lineNumber":109,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":110,"author":{"gitId":"houtenteo"},"content":"        assertFalse(interestsList.checkDuplicate(i4)); // nothing in the list to begin with","lastModifiedDate":"2021-11-02"},{"lineNumber":111,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":112,"author":{"gitId":"houtenteo"},"content":"        interestsList.addInterest(i1);","lastModifiedDate":"2021-11-02"},{"lineNumber":113,"author":{"gitId":"houtenteo"},"content":"        interestsList.addInterest(i2);","lastModifiedDate":"2021-11-02"},{"lineNumber":114,"author":{"gitId":"houtenteo"},"content":"        interestsList.addInterest(i3);","lastModifiedDate":"2021-11-02"},{"lineNumber":115,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":116,"author":{"gitId":"houtenteo"},"content":"        assertFalse(interestsList.checkDuplicate(i4)); // different interest","lastModifiedDate":"2021-11-02"},{"lineNumber":117,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":118,"author":{"gitId":"houtenteo"},"content":"        assertTrue(interestsList.checkDuplicate(i3)); // same interest","lastModifiedDate":"2021-11-02"},{"lineNumber":119,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":120,"author":{"gitId":"houtenteo"},"content":"    }","lastModifiedDate":"2021-11-02"},{"lineNumber":121,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":122,"author":{"gitId":"houtenteo"},"content":"    @Test","lastModifiedDate":"2021-10-18"},{"lineNumber":123,"author":{"gitId":"houtenteo"},"content":"    public void getInterestTest() {","lastModifiedDate":"2021-10-18"},{"lineNumber":124,"author":{"gitId":"houtenteo"},"content":"        Interest i \u003d new Interest(\"Flying\");","lastModifiedDate":"2021-10-18"},{"lineNumber":125,"author":{"gitId":"houtenteo"},"content":"        interestsList.addInterest(i);","lastModifiedDate":"2021-10-18"},{"lineNumber":126,"author":{"gitId":"houtenteo"},"content":"        assertEquals(i, interestsList.getInterest(Index.fromZeroBased(0)));","lastModifiedDate":"2021-10-18"},{"lineNumber":127,"author":{"gitId":"houtenteo"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":128,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":129,"author":{"gitId":"houtenteo"},"content":"    @Test","lastModifiedDate":"2021-10-18"},{"lineNumber":130,"author":{"gitId":"houtenteo"},"content":"    public void equalsTest() {","lastModifiedDate":"2021-10-18"},{"lineNumber":131,"author":{"gitId":"houtenteo"},"content":"        Interest i1 \u003d new Interest(\"Watching anime\");","lastModifiedDate":"2021-10-18"},{"lineNumber":132,"author":{"gitId":"houtenteo"},"content":"        Interest i2 \u003d new Interest(\"Reading manga\");","lastModifiedDate":"2021-10-18"},{"lineNumber":133,"author":{"gitId":"houtenteo"},"content":"        Interest i3 \u003d new Interest(\"getting drunk\");","lastModifiedDate":"2021-10-18"},{"lineNumber":134,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":135,"author":{"gitId":"houtenteo"},"content":"        interestsList.addInterest(i1);","lastModifiedDate":"2021-10-18"},{"lineNumber":136,"author":{"gitId":"houtenteo"},"content":"        interestsList.addInterest(i2);","lastModifiedDate":"2021-10-18"},{"lineNumber":137,"author":{"gitId":"houtenteo"},"content":"        interestsList.addInterest(i3);","lastModifiedDate":"2021-10-18"},{"lineNumber":138,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":139,"author":{"gitId":"houtenteo"},"content":"        InterestsList otherList \u003d new InterestsList();","lastModifiedDate":"2021-10-18"},{"lineNumber":140,"author":{"gitId":"houtenteo"},"content":"        otherList.addInterest(i1);","lastModifiedDate":"2021-10-18"},{"lineNumber":141,"author":{"gitId":"houtenteo"},"content":"        otherList.addInterest(i2);","lastModifiedDate":"2021-10-18"},{"lineNumber":142,"author":{"gitId":"houtenteo"},"content":"        otherList.addInterest(i3);","lastModifiedDate":"2021-10-18"},{"lineNumber":143,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":144,"author":{"gitId":"houtenteo"},"content":"        assertEquals(interestsList, otherList);","lastModifiedDate":"2021-10-18"},{"lineNumber":145,"author":{"gitId":"houtenteo"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":146,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":147,"author":{"gitId":"houtenteo"},"content":"    @Test","lastModifiedDate":"2021-11-05"},{"lineNumber":148,"author":{"gitId":"houtenteo"},"content":"    public void toStringNoNumberingTest() {","lastModifiedDate":"2021-11-05"},{"lineNumber":149,"author":{"gitId":"houtenteo"},"content":"        Interest i1 \u003d new Interest(\"Watching anime\");","lastModifiedDate":"2021-11-05"},{"lineNumber":150,"author":{"gitId":"houtenteo"},"content":"        Interest i2 \u003d new Interest(\"Reading manga\");","lastModifiedDate":"2021-11-05"},{"lineNumber":151,"author":{"gitId":"houtenteo"},"content":"        Interest i3 \u003d new Interest(\"getting drunk\");","lastModifiedDate":"2021-11-05"},{"lineNumber":152,"author":{"gitId":"houtenteo"},"content":"        Interest i4 \u003d new Interest(\"Having a life\");","lastModifiedDate":"2021-11-05"},{"lineNumber":153,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":154,"author":{"gitId":"houtenteo"},"content":"        InterestsList test \u003d new InterestsList();","lastModifiedDate":"2021-11-05"},{"lineNumber":155,"author":{"gitId":"houtenteo"},"content":"        String expectedStringEmpty \u003d \"\";","lastModifiedDate":"2021-11-05"},{"lineNumber":156,"author":{"gitId":"houtenteo"},"content":"        String actualStringEmpty \u003d test.toStringNoNumbering();","lastModifiedDate":"2021-11-05"},{"lineNumber":157,"author":{"gitId":"houtenteo"},"content":"        assertEquals(actualStringEmpty, expectedStringEmpty); //empty interestsList","lastModifiedDate":"2021-11-05"},{"lineNumber":158,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":159,"author":{"gitId":"houtenteo"},"content":"        test.addInterest(i1);","lastModifiedDate":"2021-11-05"},{"lineNumber":160,"author":{"gitId":"houtenteo"},"content":"        test.addInterest(i2);","lastModifiedDate":"2021-11-05"},{"lineNumber":161,"author":{"gitId":"houtenteo"},"content":"        test.addInterest(i3);","lastModifiedDate":"2021-11-05"},{"lineNumber":162,"author":{"gitId":"houtenteo"},"content":"        test.addInterest(i4);","lastModifiedDate":"2021-11-05"},{"lineNumber":163,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":164,"author":{"gitId":"houtenteo"},"content":"        String expectedString \u003d \"Watching anime, Reading manga, getting drunk, Having a life\";","lastModifiedDate":"2021-11-05"},{"lineNumber":165,"author":{"gitId":"houtenteo"},"content":"        String actualString \u003d test.toStringNoNumbering();","lastModifiedDate":"2021-11-05"},{"lineNumber":166,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":167,"author":{"gitId":"houtenteo"},"content":"        assertEquals(expectedString, actualString);","lastModifiedDate":"2021-11-05"},{"lineNumber":168,"author":{"gitId":"houtenteo"},"content":"    }","lastModifiedDate":"2021-11-05"},{"lineNumber":169,"author":{"gitId":"houtenteo"},"content":"}","lastModifiedDate":"2021-10-18"}],"authorContributionMap":{"houtenteo":169}},{"path":"src/test/java/seedu/address/model/person/predicates/AddressContainsKeywordsPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"houtenteo"},"content":"package seedu.address.model.person.predicates;","lastModifiedDate":"2021-10-27"},{"lineNumber":2,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":3,"author":{"gitId":"houtenteo"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-09-22"},{"lineNumber":4,"author":{"gitId":"houtenteo"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-09-22"},{"lineNumber":5,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":6,"author":{"gitId":"houtenteo"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-09-22"},{"lineNumber":7,"author":{"gitId":"houtenteo"},"content":"import java.util.Collections;","lastModifiedDate":"2021-09-22"},{"lineNumber":8,"author":{"gitId":"houtenteo"},"content":"import java.util.List;","lastModifiedDate":"2021-09-22"},{"lineNumber":9,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":10,"author":{"gitId":"houtenteo"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-09-22"},{"lineNumber":11,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":12,"author":{"gitId":"houtenteo"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2021-09-22"},{"lineNumber":13,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":14,"author":{"gitId":"houtenteo"},"content":"public class AddressContainsKeywordsPredicateTest {","lastModifiedDate":"2021-10-27"},{"lineNumber":15,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":16,"author":{"gitId":"houtenteo"},"content":"    @Test","lastModifiedDate":"2021-09-22"},{"lineNumber":17,"author":{"gitId":"houtenteo"},"content":"    public void equals() {","lastModifiedDate":"2021-09-22"},{"lineNumber":18,"author":{"gitId":"houtenteo"},"content":"        List\u003cString\u003e firstPredicateKeywordList \u003d Collections.singletonList(\"first\");","lastModifiedDate":"2021-09-22"},{"lineNumber":19,"author":{"gitId":"houtenteo"},"content":"        List\u003cString\u003e secondPredicateKeywordList \u003d Arrays.asList(\"first\", \"second\");","lastModifiedDate":"2021-09-22"},{"lineNumber":20,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":21,"author":{"gitId":"houtenteo"},"content":"        AddressContainsKeywordsPredicate firstPredicate \u003d new AddressContainsKeywordsPredicate(","lastModifiedDate":"2021-10-27"},{"lineNumber":22,"author":{"gitId":"houtenteo"},"content":"                firstPredicateKeywordList, false","lastModifiedDate":"2021-10-26"},{"lineNumber":23,"author":{"gitId":"houtenteo"},"content":"        );","lastModifiedDate":"2021-10-26"},{"lineNumber":24,"author":{"gitId":"houtenteo"},"content":"        AddressContainsKeywordsPredicate secondPredicate \u003d new AddressContainsKeywordsPredicate(","lastModifiedDate":"2021-10-27"},{"lineNumber":25,"author":{"gitId":"houtenteo"},"content":"                secondPredicateKeywordList, false","lastModifiedDate":"2021-10-26"},{"lineNumber":26,"author":{"gitId":"houtenteo"},"content":"        );","lastModifiedDate":"2021-10-26"},{"lineNumber":27,"author":{"gitId":"houtenteo"},"content":"        AddressContainsKeywordsPredicate thirdPredicate \u003d new AddressContainsKeywordsPredicate(","lastModifiedDate":"2021-10-27"},{"lineNumber":28,"author":{"gitId":"houtenteo"},"content":"                secondPredicateKeywordList, true","lastModifiedDate":"2021-10-27"},{"lineNumber":29,"author":{"gitId":"houtenteo"},"content":"        );","lastModifiedDate":"2021-10-27"},{"lineNumber":30,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":31,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":32,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":33,"author":{"gitId":"houtenteo"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-09-22"},{"lineNumber":34,"author":{"gitId":"houtenteo"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));","lastModifiedDate":"2021-09-22"},{"lineNumber":35,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":36,"author":{"gitId":"houtenteo"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2021-09-22"},{"lineNumber":37,"author":{"gitId":"houtenteo"},"content":"        AddressContainsKeywordsPredicate firstPredicateCopy \u003d new AddressContainsKeywordsPredicate(","lastModifiedDate":"2021-10-27"},{"lineNumber":38,"author":{"gitId":"houtenteo"},"content":"                firstPredicateKeywordList, false","lastModifiedDate":"2021-10-26"},{"lineNumber":39,"author":{"gitId":"houtenteo"},"content":"        );","lastModifiedDate":"2021-10-26"},{"lineNumber":40,"author":{"gitId":"houtenteo"},"content":"        assertTrue(firstPredicate.equals(firstPredicateCopy));","lastModifiedDate":"2021-09-22"},{"lineNumber":41,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":42,"author":{"gitId":"houtenteo"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2021-09-22"},{"lineNumber":43,"author":{"gitId":"houtenteo"},"content":"        assertFalse(firstPredicate.equals(1));","lastModifiedDate":"2021-09-22"},{"lineNumber":44,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":45,"author":{"gitId":"houtenteo"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-09-22"},{"lineNumber":46,"author":{"gitId":"houtenteo"},"content":"        assertFalse(firstPredicate.equals(null));","lastModifiedDate":"2021-09-22"},{"lineNumber":47,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":48,"author":{"gitId":"houtenteo"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2021-09-22"},{"lineNumber":49,"author":{"gitId":"houtenteo"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));","lastModifiedDate":"2021-09-22"},{"lineNumber":50,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":51,"author":{"gitId":"houtenteo"},"content":"        // different isFindAll -\u003e returns false","lastModifiedDate":"2021-10-27"},{"lineNumber":52,"author":{"gitId":"houtenteo"},"content":"        assertFalse(secondPredicate.equals(thirdPredicate));","lastModifiedDate":"2021-10-27"},{"lineNumber":53,"author":{"gitId":"houtenteo"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":54,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":55,"author":{"gitId":"houtenteo"},"content":"    @Test","lastModifiedDate":"2021-09-22"},{"lineNumber":56,"author":{"gitId":"houtenteo"},"content":"    public void test_addressContainsKeywords_returnsTrue() {","lastModifiedDate":"2021-10-27"},{"lineNumber":57,"author":{"gitId":"houtenteo"},"content":"        // One keyword","lastModifiedDate":"2021-09-22"},{"lineNumber":58,"author":{"gitId":"houtenteo"},"content":"        AddressContainsKeywordsPredicate predicate \u003d new AddressContainsKeywordsPredicate(","lastModifiedDate":"2021-10-27"},{"lineNumber":59,"author":{"gitId":"houtenteo"},"content":"                Collections.singletonList(\"Alice\"), false","lastModifiedDate":"2021-10-26"},{"lineNumber":60,"author":{"gitId":"houtenteo"},"content":"        );","lastModifiedDate":"2021-10-26"},{"lineNumber":61,"author":{"gitId":"houtenteo"},"content":"        assertTrue(predicate.test(new PersonBuilder().withAddress(\"Alice house\").build()));","lastModifiedDate":"2021-10-27"},{"lineNumber":62,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":63,"author":{"gitId":"houtenteo"},"content":"        // Multiple keywords","lastModifiedDate":"2021-09-22"},{"lineNumber":64,"author":{"gitId":"houtenteo"},"content":"        predicate \u003d new AddressContainsKeywordsPredicate(Arrays.asList(\"Alice\", \"house\"), false);","lastModifiedDate":"2021-10-27"},{"lineNumber":65,"author":{"gitId":"houtenteo"},"content":"        assertTrue(predicate.test(new PersonBuilder().withAddress(\"Alice house\").build()));","lastModifiedDate":"2021-10-27"},{"lineNumber":66,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":67,"author":{"gitId":"houtenteo"},"content":"        // Only one matching keyword","lastModifiedDate":"2021-09-22"},{"lineNumber":68,"author":{"gitId":"houtenteo"},"content":"        predicate \u003d new AddressContainsKeywordsPredicate(Arrays.asList(\"Bob\", \"house\"), false);","lastModifiedDate":"2021-10-27"},{"lineNumber":69,"author":{"gitId":"houtenteo"},"content":"        assertTrue(predicate.test(new PersonBuilder().withAddress(\"Alice house\").build()));","lastModifiedDate":"2021-10-27"},{"lineNumber":70,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":71,"author":{"gitId":"houtenteo"},"content":"        // Mixed-case keywords","lastModifiedDate":"2021-09-22"},{"lineNumber":72,"author":{"gitId":"houtenteo"},"content":"        predicate \u003d new AddressContainsKeywordsPredicate(Arrays.asList(\"aLIce\", \"hOuSe\"), false);","lastModifiedDate":"2021-10-27"},{"lineNumber":73,"author":{"gitId":"houtenteo"},"content":"        assertTrue(predicate.test(new PersonBuilder().withAddress(\"Alice house\").build()));","lastModifiedDate":"2021-10-27"},{"lineNumber":74,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":75,"author":{"gitId":"houtenteo"},"content":"        // Substring keyword","lastModifiedDate":"2021-10-27"},{"lineNumber":76,"author":{"gitId":"houtenteo"},"content":"        predicate \u003d new AddressContainsKeywordsPredicate(Collections.singletonList(\"aLi\"), false);","lastModifiedDate":"2021-10-27"},{"lineNumber":77,"author":{"gitId":"houtenteo"},"content":"        assertTrue(predicate.test(new PersonBuilder().withAddress(\"Alice house\").build()));","lastModifiedDate":"2021-10-27"},{"lineNumber":78,"author":{"gitId":"houtenteo"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":79,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":80,"author":{"gitId":"houtenteo"},"content":"    @Test","lastModifiedDate":"2021-09-22"},{"lineNumber":81,"author":{"gitId":"houtenteo"},"content":"    public void test_addressDoesNotContainKeywords_returnsFalse() {","lastModifiedDate":"2021-10-27"},{"lineNumber":82,"author":{"gitId":"houtenteo"},"content":"        // Zero keywords","lastModifiedDate":"2021-09-22"},{"lineNumber":83,"author":{"gitId":"houtenteo"},"content":"        AddressContainsKeywordsPredicate predicate \u003d new AddressContainsKeywordsPredicate(","lastModifiedDate":"2021-10-27"},{"lineNumber":84,"author":{"gitId":"houtenteo"},"content":"                Collections.emptyList(), false","lastModifiedDate":"2021-10-27"},{"lineNumber":85,"author":{"gitId":"houtenteo"},"content":"        );","lastModifiedDate":"2021-10-27"},{"lineNumber":86,"author":{"gitId":"houtenteo"},"content":"        assertFalse(predicate.test(new PersonBuilder().withAddress(\"Alice house\").build()));","lastModifiedDate":"2021-10-27"},{"lineNumber":87,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":88,"author":{"gitId":"houtenteo"},"content":"        // Non-matching keyword","lastModifiedDate":"2021-09-22"},{"lineNumber":89,"author":{"gitId":"houtenteo"},"content":"        predicate \u003d new AddressContainsKeywordsPredicate(Arrays.asList(\"Carol\"), false);","lastModifiedDate":"2021-10-27"},{"lineNumber":90,"author":{"gitId":"houtenteo"},"content":"        assertFalse(predicate.test(new PersonBuilder().withAddress(\"Alice house\").build()));","lastModifiedDate":"2021-10-27"},{"lineNumber":91,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":92,"author":{"gitId":"houtenteo"},"content":"        // Keywords match name, phone, email, but does not match address","lastModifiedDate":"2021-10-27"},{"lineNumber":93,"author":{"gitId":"houtenteo"},"content":"        predicate \u003d new AddressContainsKeywordsPredicate(Arrays.asList(","lastModifiedDate":"2021-10-27"},{"lineNumber":94,"author":{"gitId":"houtenteo"},"content":"                \"Alice\", \"87654321\", \"alice@email.com\"","lastModifiedDate":"2021-11-02"},{"lineNumber":95,"author":{"gitId":"houtenteo"},"content":"        ), false);","lastModifiedDate":"2021-10-26"},{"lineNumber":96,"author":{"gitId":"houtenteo"},"content":"        assertFalse(predicate.test(new PersonBuilder().withName(\"ALice\").withPhone(\"87654321\")","lastModifiedDate":"2021-11-02"},{"lineNumber":97,"author":{"gitId":"houtenteo"},"content":"                .withEmail(\"alice@email.com\").withAddress(\"her house\").build()));","lastModifiedDate":"2021-10-27"},{"lineNumber":98,"author":{"gitId":"houtenteo"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":99,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":100,"author":{"gitId":"houtenteo"},"content":"    @Test","lastModifiedDate":"2021-10-27"},{"lineNumber":101,"author":{"gitId":"houtenteo"},"content":"    public void test_addressContainsKeywordsIsFindAll() {","lastModifiedDate":"2021-10-27"},{"lineNumber":102,"author":{"gitId":"houtenteo"},"content":"        // One keyword match -\u003e true","lastModifiedDate":"2021-10-27"},{"lineNumber":103,"author":{"gitId":"houtenteo"},"content":"        AddressContainsKeywordsPredicate predicate \u003d new AddressContainsKeywordsPredicate(","lastModifiedDate":"2021-10-27"},{"lineNumber":104,"author":{"gitId":"houtenteo"},"content":"                Collections.singletonList(\"Alice\"), true","lastModifiedDate":"2021-10-27"},{"lineNumber":105,"author":{"gitId":"houtenteo"},"content":"        );","lastModifiedDate":"2021-10-27"},{"lineNumber":106,"author":{"gitId":"houtenteo"},"content":"        assertTrue(predicate.test(new PersonBuilder().withAddress(\"Alice house\").build()));","lastModifiedDate":"2021-10-27"},{"lineNumber":107,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":108,"author":{"gitId":"houtenteo"},"content":"        // One keyword no match -\u003e false","lastModifiedDate":"2021-10-27"},{"lineNumber":109,"author":{"gitId":"houtenteo"},"content":"        predicate \u003d new AddressContainsKeywordsPredicate(","lastModifiedDate":"2021-10-27"},{"lineNumber":110,"author":{"gitId":"houtenteo"},"content":"                Collections.singletonList(\"haha\"), true","lastModifiedDate":"2021-10-27"},{"lineNumber":111,"author":{"gitId":"houtenteo"},"content":"        );","lastModifiedDate":"2021-10-27"},{"lineNumber":112,"author":{"gitId":"houtenteo"},"content":"        assertFalse(predicate.test(new PersonBuilder().withAddress(\"Alice house\").build()));","lastModifiedDate":"2021-10-27"},{"lineNumber":113,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":114,"author":{"gitId":"houtenteo"},"content":"        // Multiple keywords all match -\u003e true","lastModifiedDate":"2021-10-27"},{"lineNumber":115,"author":{"gitId":"houtenteo"},"content":"        predicate \u003d new AddressContainsKeywordsPredicate(Arrays.asList(\"Alice\", \"Bob\"), true);","lastModifiedDate":"2021-10-27"},{"lineNumber":116,"author":{"gitId":"houtenteo"},"content":"        assertTrue(predicate.test(new PersonBuilder().withAddress(\"Alice and Bob house\").build()));","lastModifiedDate":"2021-10-27"},{"lineNumber":117,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":118,"author":{"gitId":"houtenteo"},"content":"        // Only one matching keyword -\u003e false","lastModifiedDate":"2021-10-27"},{"lineNumber":119,"author":{"gitId":"houtenteo"},"content":"        predicate \u003d new AddressContainsKeywordsPredicate(Arrays.asList(\"Bob\", \"Carol\"), true);","lastModifiedDate":"2021-10-27"},{"lineNumber":120,"author":{"gitId":"houtenteo"},"content":"        assertFalse(predicate.test(new PersonBuilder().withAddress(\"Alice Carol house\").build()));","lastModifiedDate":"2021-10-27"},{"lineNumber":121,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":122,"author":{"gitId":"houtenteo"},"content":"        // Mixed-case keywords all match -\u003e true","lastModifiedDate":"2021-10-27"},{"lineNumber":123,"author":{"gitId":"houtenteo"},"content":"        predicate \u003d new AddressContainsKeywordsPredicate(Arrays.asList(\"aLIce\", \"bOB\"), true);","lastModifiedDate":"2021-10-27"},{"lineNumber":124,"author":{"gitId":"houtenteo"},"content":"        assertTrue(predicate.test(new PersonBuilder().withAddress(\"Alice Bob house\").build()));","lastModifiedDate":"2021-10-27"},{"lineNumber":125,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":126,"author":{"gitId":"houtenteo"},"content":"        // Mixed-case keywords not all match -\u003e false","lastModifiedDate":"2021-10-27"},{"lineNumber":127,"author":{"gitId":"houtenteo"},"content":"        predicate \u003d new AddressContainsKeywordsPredicate(Arrays.asList(\"aLIce\", \"bOB\"), true);","lastModifiedDate":"2021-10-27"},{"lineNumber":128,"author":{"gitId":"houtenteo"},"content":"        assertFalse(predicate.test(new PersonBuilder().withAddress(\"Alice carol house\").build()));","lastModifiedDate":"2021-10-27"},{"lineNumber":129,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":130,"author":{"gitId":"houtenteo"},"content":"        // Keywords match name, phone, email, but does not match address -\u003e false","lastModifiedDate":"2021-10-27"},{"lineNumber":131,"author":{"gitId":"houtenteo"},"content":"        predicate \u003d new AddressContainsKeywordsPredicate(Arrays.asList(","lastModifiedDate":"2021-10-27"},{"lineNumber":132,"author":{"gitId":"houtenteo"},"content":"                \"Alice\", \"87654321\", \"alice@email.com\"","lastModifiedDate":"2021-11-02"},{"lineNumber":133,"author":{"gitId":"houtenteo"},"content":"        ), true);","lastModifiedDate":"2021-10-27"},{"lineNumber":134,"author":{"gitId":"houtenteo"},"content":"        assertFalse(predicate.test(new PersonBuilder().withName(\"ALice\").withPhone(\"87654321\")","lastModifiedDate":"2021-11-02"},{"lineNumber":135,"author":{"gitId":"houtenteo"},"content":"                .withEmail(\"alice@email.com\").withAddress(\"Alice house\").build()));","lastModifiedDate":"2021-10-27"},{"lineNumber":136,"author":{"gitId":"houtenteo"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":137,"author":{"gitId":"houtenteo"},"content":"}","lastModifiedDate":"2021-09-22"}],"authorContributionMap":{"houtenteo":137}},{"path":"src/test/java/seedu/address/model/person/predicates/AgeContainsValuePredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"houtenteo"},"content":"package seedu.address.model.person.predicates;","lastModifiedDate":"2021-10-27"},{"lineNumber":2,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":3,"author":{"gitId":"houtenteo"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-27"},{"lineNumber":4,"author":{"gitId":"houtenteo"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-27"},{"lineNumber":5,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":6,"author":{"gitId":"houtenteo"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-10-27"},{"lineNumber":7,"author":{"gitId":"houtenteo"},"content":"import java.util.Collections;","lastModifiedDate":"2021-10-27"},{"lineNumber":8,"author":{"gitId":"houtenteo"},"content":"import java.util.List;","lastModifiedDate":"2021-10-27"},{"lineNumber":9,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":10,"author":{"gitId":"houtenteo"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-27"},{"lineNumber":11,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":12,"author":{"gitId":"houtenteo"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2021-10-27"},{"lineNumber":13,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":14,"author":{"gitId":"houtenteo"},"content":"public class AgeContainsValuePredicateTest {","lastModifiedDate":"2021-10-27"},{"lineNumber":15,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":16,"author":{"gitId":"houtenteo"},"content":"    @Test","lastModifiedDate":"2021-10-27"},{"lineNumber":17,"author":{"gitId":"houtenteo"},"content":"    public void equals() {","lastModifiedDate":"2021-10-27"},{"lineNumber":18,"author":{"gitId":"houtenteo"},"content":"        List\u003cString\u003e firstPredicateKeywordList \u003d Collections.singletonList(\"first\");","lastModifiedDate":"2021-10-27"},{"lineNumber":19,"author":{"gitId":"houtenteo"},"content":"        List\u003cString\u003e secondPredicateKeywordList \u003d Arrays.asList(\"first\", \"second\");","lastModifiedDate":"2021-10-27"},{"lineNumber":20,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":21,"author":{"gitId":"houtenteo"},"content":"        AgeContainsValuePredicate firstPredicate \u003d new AgeContainsValuePredicate(","lastModifiedDate":"2021-10-27"},{"lineNumber":22,"author":{"gitId":"houtenteo"},"content":"                firstPredicateKeywordList, false","lastModifiedDate":"2021-10-27"},{"lineNumber":23,"author":{"gitId":"houtenteo"},"content":"        );","lastModifiedDate":"2021-10-27"},{"lineNumber":24,"author":{"gitId":"houtenteo"},"content":"        AgeContainsValuePredicate secondPredicate \u003d new AgeContainsValuePredicate(","lastModifiedDate":"2021-10-27"},{"lineNumber":25,"author":{"gitId":"houtenteo"},"content":"                secondPredicateKeywordList, false","lastModifiedDate":"2021-10-27"},{"lineNumber":26,"author":{"gitId":"houtenteo"},"content":"        );","lastModifiedDate":"2021-10-27"},{"lineNumber":27,"author":{"gitId":"houtenteo"},"content":"        AgeContainsValuePredicate thirdPredicate \u003d new AgeContainsValuePredicate(","lastModifiedDate":"2021-10-27"},{"lineNumber":28,"author":{"gitId":"houtenteo"},"content":"                secondPredicateKeywordList, true","lastModifiedDate":"2021-10-27"},{"lineNumber":29,"author":{"gitId":"houtenteo"},"content":"        );","lastModifiedDate":"2021-10-27"},{"lineNumber":30,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":31,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":32,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":33,"author":{"gitId":"houtenteo"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-10-27"},{"lineNumber":34,"author":{"gitId":"houtenteo"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));","lastModifiedDate":"2021-10-27"},{"lineNumber":35,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":36,"author":{"gitId":"houtenteo"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2021-10-27"},{"lineNumber":37,"author":{"gitId":"houtenteo"},"content":"        AgeContainsValuePredicate firstPredicateCopy \u003d new AgeContainsValuePredicate(","lastModifiedDate":"2021-10-27"},{"lineNumber":38,"author":{"gitId":"houtenteo"},"content":"                firstPredicateKeywordList, false","lastModifiedDate":"2021-10-27"},{"lineNumber":39,"author":{"gitId":"houtenteo"},"content":"        );","lastModifiedDate":"2021-10-27"},{"lineNumber":40,"author":{"gitId":"houtenteo"},"content":"        assertTrue(firstPredicate.equals(firstPredicateCopy));","lastModifiedDate":"2021-10-27"},{"lineNumber":41,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":42,"author":{"gitId":"houtenteo"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2021-10-27"},{"lineNumber":43,"author":{"gitId":"houtenteo"},"content":"        assertFalse(firstPredicate.equals(1));","lastModifiedDate":"2021-10-27"},{"lineNumber":44,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":45,"author":{"gitId":"houtenteo"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-10-27"},{"lineNumber":46,"author":{"gitId":"houtenteo"},"content":"        assertFalse(firstPredicate.equals(null));","lastModifiedDate":"2021-10-27"},{"lineNumber":47,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":48,"author":{"gitId":"houtenteo"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2021-10-27"},{"lineNumber":49,"author":{"gitId":"houtenteo"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));","lastModifiedDate":"2021-10-27"},{"lineNumber":50,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":51,"author":{"gitId":"houtenteo"},"content":"        // different isFindAll -\u003e returns false","lastModifiedDate":"2021-10-27"},{"lineNumber":52,"author":{"gitId":"houtenteo"},"content":"        assertFalse(secondPredicate.equals(thirdPredicate));","lastModifiedDate":"2021-10-27"},{"lineNumber":53,"author":{"gitId":"houtenteo"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":54,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":55,"author":{"gitId":"houtenteo"},"content":"    @Test","lastModifiedDate":"2021-10-27"},{"lineNumber":56,"author":{"gitId":"houtenteo"},"content":"    public void test_addressContainsKeywords_returnsTrue() {","lastModifiedDate":"2021-10-27"},{"lineNumber":57,"author":{"gitId":"houtenteo"},"content":"        // One keyword","lastModifiedDate":"2021-10-27"},{"lineNumber":58,"author":{"gitId":"houtenteo"},"content":"        AgeContainsValuePredicate predicate \u003d new AgeContainsValuePredicate(","lastModifiedDate":"2021-10-27"},{"lineNumber":59,"author":{"gitId":"houtenteo"},"content":"                Collections.singletonList(\"11\"), false","lastModifiedDate":"2021-10-27"},{"lineNumber":60,"author":{"gitId":"houtenteo"},"content":"        );","lastModifiedDate":"2021-10-27"},{"lineNumber":61,"author":{"gitId":"houtenteo"},"content":"        assertTrue(predicate.test(new PersonBuilder().withAge(\"11\").build()));","lastModifiedDate":"2021-10-27"},{"lineNumber":62,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":63,"author":{"gitId":"houtenteo"},"content":"        // Multiple keywords","lastModifiedDate":"2021-10-27"},{"lineNumber":64,"author":{"gitId":"houtenteo"},"content":"        predicate \u003d new AgeContainsValuePredicate(Arrays.asList(\"11\", \"22\"), false);","lastModifiedDate":"2021-10-27"},{"lineNumber":65,"author":{"gitId":"houtenteo"},"content":"        assertTrue(predicate.test(new PersonBuilder().withAge(\"11\").build()));","lastModifiedDate":"2021-10-27"},{"lineNumber":66,"author":{"gitId":"houtenteo"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":67,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":68,"author":{"gitId":"houtenteo"},"content":"    @Test","lastModifiedDate":"2021-10-27"},{"lineNumber":69,"author":{"gitId":"houtenteo"},"content":"    public void test_addressDoesNotContainKeywords_returnsFalse() {","lastModifiedDate":"2021-10-27"},{"lineNumber":70,"author":{"gitId":"houtenteo"},"content":"        // Zero keywords","lastModifiedDate":"2021-10-27"},{"lineNumber":71,"author":{"gitId":"houtenteo"},"content":"        AgeContainsValuePredicate predicate \u003d new AgeContainsValuePredicate(","lastModifiedDate":"2021-10-27"},{"lineNumber":72,"author":{"gitId":"houtenteo"},"content":"                Collections.emptyList(), false","lastModifiedDate":"2021-10-27"},{"lineNumber":73,"author":{"gitId":"houtenteo"},"content":"        );","lastModifiedDate":"2021-10-27"},{"lineNumber":74,"author":{"gitId":"houtenteo"},"content":"        assertFalse(predicate.test(new PersonBuilder().withAge(\"11\").build()));","lastModifiedDate":"2021-10-27"},{"lineNumber":75,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":76,"author":{"gitId":"houtenteo"},"content":"        // Non-matching keyword","lastModifiedDate":"2021-10-27"},{"lineNumber":77,"author":{"gitId":"houtenteo"},"content":"        predicate \u003d new AgeContainsValuePredicate(Arrays.asList(\"12\"), false);","lastModifiedDate":"2021-10-27"},{"lineNumber":78,"author":{"gitId":"houtenteo"},"content":"        assertFalse(predicate.test(new PersonBuilder().withAge(\"11\").build()));","lastModifiedDate":"2021-10-27"},{"lineNumber":79,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":80,"author":{"gitId":"houtenteo"},"content":"        // Keywords match name, phone, email, but does not match age","lastModifiedDate":"2021-10-27"},{"lineNumber":81,"author":{"gitId":"houtenteo"},"content":"        predicate \u003d new AgeContainsValuePredicate(Arrays.asList(","lastModifiedDate":"2021-10-27"},{"lineNumber":82,"author":{"gitId":"houtenteo"},"content":"                \"Alice\", \"87654321\", \"alice@email.com\"","lastModifiedDate":"2021-11-02"},{"lineNumber":83,"author":{"gitId":"houtenteo"},"content":"        ), false);","lastModifiedDate":"2021-10-27"},{"lineNumber":84,"author":{"gitId":"houtenteo"},"content":"        assertFalse(predicate.test(new PersonBuilder().withName(\"ALice\").withPhone(\"87654321\")","lastModifiedDate":"2021-11-02"},{"lineNumber":85,"author":{"gitId":"houtenteo"},"content":"                .withEmail(\"alice@email.com\").withAge(\"11\").build()));","lastModifiedDate":"2021-10-27"},{"lineNumber":86,"author":{"gitId":"houtenteo"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":87,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":88,"author":{"gitId":"houtenteo"},"content":"    @Test","lastModifiedDate":"2021-10-27"},{"lineNumber":89,"author":{"gitId":"houtenteo"},"content":"    public void test_addressContainsKeywordsIsFindAll() {","lastModifiedDate":"2021-10-27"},{"lineNumber":90,"author":{"gitId":"houtenteo"},"content":"        // One keyword match -\u003e true","lastModifiedDate":"2021-10-27"},{"lineNumber":91,"author":{"gitId":"houtenteo"},"content":"        AgeContainsValuePredicate predicate \u003d new AgeContainsValuePredicate(","lastModifiedDate":"2021-10-27"},{"lineNumber":92,"author":{"gitId":"houtenteo"},"content":"                Collections.singletonList(\"11\"), true","lastModifiedDate":"2021-10-27"},{"lineNumber":93,"author":{"gitId":"houtenteo"},"content":"        );","lastModifiedDate":"2021-10-27"},{"lineNumber":94,"author":{"gitId":"houtenteo"},"content":"        assertTrue(predicate.test(new PersonBuilder().withAge(\"11\").build()));","lastModifiedDate":"2021-10-27"},{"lineNumber":95,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":96,"author":{"gitId":"houtenteo"},"content":"        // One keyword no match -\u003e false","lastModifiedDate":"2021-10-27"},{"lineNumber":97,"author":{"gitId":"houtenteo"},"content":"        predicate \u003d new AgeContainsValuePredicate(","lastModifiedDate":"2021-10-27"},{"lineNumber":98,"author":{"gitId":"houtenteo"},"content":"                Collections.singletonList(\"12\"), true","lastModifiedDate":"2021-10-27"},{"lineNumber":99,"author":{"gitId":"houtenteo"},"content":"        );","lastModifiedDate":"2021-10-27"},{"lineNumber":100,"author":{"gitId":"houtenteo"},"content":"        assertFalse(predicate.test(new PersonBuilder().withAge(\"11\").build()));","lastModifiedDate":"2021-10-27"},{"lineNumber":101,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":102,"author":{"gitId":"houtenteo"},"content":"        // Only one matching keyword -\u003e false","lastModifiedDate":"2021-10-27"},{"lineNumber":103,"author":{"gitId":"houtenteo"},"content":"        predicate \u003d new AgeContainsValuePredicate(Arrays.asList(\"22\", \"11\"), true);","lastModifiedDate":"2021-10-27"},{"lineNumber":104,"author":{"gitId":"houtenteo"},"content":"        assertFalse(predicate.test(new PersonBuilder().withAge(\"22\").build()));","lastModifiedDate":"2021-10-27"},{"lineNumber":105,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":106,"author":{"gitId":"houtenteo"},"content":"        // Keywords match name, phone, email, but does not match age -\u003e false","lastModifiedDate":"2021-10-27"},{"lineNumber":107,"author":{"gitId":"houtenteo"},"content":"        predicate \u003d new AgeContainsValuePredicate(Arrays.asList(","lastModifiedDate":"2021-10-27"},{"lineNumber":108,"author":{"gitId":"houtenteo"},"content":"                \"Alice\", \"87654321\", \"alice@email.com\"","lastModifiedDate":"2021-11-02"},{"lineNumber":109,"author":{"gitId":"houtenteo"},"content":"        ), true);","lastModifiedDate":"2021-10-27"},{"lineNumber":110,"author":{"gitId":"houtenteo"},"content":"        assertFalse(predicate.test(new PersonBuilder().withName(\"ALice\").withPhone(\"87654321\")","lastModifiedDate":"2021-11-02"},{"lineNumber":111,"author":{"gitId":"houtenteo"},"content":"                .withEmail(\"alice@email.com\").withAge(\"11\").build()));","lastModifiedDate":"2021-10-27"},{"lineNumber":112,"author":{"gitId":"houtenteo"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":113,"author":{"gitId":"houtenteo"},"content":"}","lastModifiedDate":"2021-10-27"}],"authorContributionMap":{"houtenteo":113}},{"path":"src/test/java/seedu/address/model/person/predicates/CalledPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"houtenteo"},"content":"package seedu.address.model.person.predicates;","lastModifiedDate":"2021-10-27"},{"lineNumber":2,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":3,"author":{"gitId":"houtenteo"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-27"},{"lineNumber":4,"author":{"gitId":"houtenteo"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-27"},{"lineNumber":5,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":6,"author":{"gitId":"houtenteo"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-10-27"},{"lineNumber":7,"author":{"gitId":"houtenteo"},"content":"import java.util.Collections;","lastModifiedDate":"2021-10-27"},{"lineNumber":8,"author":{"gitId":"houtenteo"},"content":"import java.util.List;","lastModifiedDate":"2021-10-27"},{"lineNumber":9,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":10,"author":{"gitId":"houtenteo"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-27"},{"lineNumber":11,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":12,"author":{"gitId":"houtenteo"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2021-10-27"},{"lineNumber":13,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":14,"author":{"gitId":"pranav-ganesh"},"content":"public class CalledPredicateTest {","lastModifiedDate":"2021-11-04"},{"lineNumber":15,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":16,"author":{"gitId":"houtenteo"},"content":"    @Test","lastModifiedDate":"2021-10-27"},{"lineNumber":17,"author":{"gitId":"houtenteo"},"content":"    public void equals() {","lastModifiedDate":"2021-10-27"},{"lineNumber":18,"author":{"gitId":"houtenteo"},"content":"        List\u003cString\u003e firstPredicateKeywordList \u003d Collections.singletonList(\"first\");","lastModifiedDate":"2021-10-27"},{"lineNumber":19,"author":{"gitId":"houtenteo"},"content":"        List\u003cString\u003e secondPredicateKeywordList \u003d Arrays.asList(\"first\", \"second\");","lastModifiedDate":"2021-10-27"},{"lineNumber":20,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":21,"author":{"gitId":"pranav-ganesh"},"content":"        CalledPredicate firstPredicate \u003d new CalledPredicate(","lastModifiedDate":"2021-11-04"},{"lineNumber":22,"author":{"gitId":"houtenteo"},"content":"                firstPredicateKeywordList, false","lastModifiedDate":"2021-10-27"},{"lineNumber":23,"author":{"gitId":"houtenteo"},"content":"        );","lastModifiedDate":"2021-10-27"},{"lineNumber":24,"author":{"gitId":"pranav-ganesh"},"content":"        CalledPredicate secondPredicate \u003d new CalledPredicate(","lastModifiedDate":"2021-11-04"},{"lineNumber":25,"author":{"gitId":"houtenteo"},"content":"                secondPredicateKeywordList, false","lastModifiedDate":"2021-10-27"},{"lineNumber":26,"author":{"gitId":"houtenteo"},"content":"        );","lastModifiedDate":"2021-10-27"},{"lineNumber":27,"author":{"gitId":"pranav-ganesh"},"content":"        CalledPredicate thirdPredicate \u003d new CalledPredicate(","lastModifiedDate":"2021-11-04"},{"lineNumber":28,"author":{"gitId":"houtenteo"},"content":"                secondPredicateKeywordList, true","lastModifiedDate":"2021-10-27"},{"lineNumber":29,"author":{"gitId":"houtenteo"},"content":"        );","lastModifiedDate":"2021-10-27"},{"lineNumber":30,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":31,"author":{"gitId":"houtenteo"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-10-27"},{"lineNumber":32,"author":{"gitId":"houtenteo"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));","lastModifiedDate":"2021-10-27"},{"lineNumber":33,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":34,"author":{"gitId":"houtenteo"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2021-10-27"},{"lineNumber":35,"author":{"gitId":"pranav-ganesh"},"content":"        CalledPredicate firstPredicateCopy \u003d new CalledPredicate(","lastModifiedDate":"2021-11-04"},{"lineNumber":36,"author":{"gitId":"houtenteo"},"content":"                firstPredicateKeywordList, false","lastModifiedDate":"2021-10-27"},{"lineNumber":37,"author":{"gitId":"houtenteo"},"content":"        );","lastModifiedDate":"2021-10-27"},{"lineNumber":38,"author":{"gitId":"houtenteo"},"content":"        assertTrue(firstPredicate.equals(firstPredicateCopy));","lastModifiedDate":"2021-10-27"},{"lineNumber":39,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":40,"author":{"gitId":"houtenteo"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2021-10-27"},{"lineNumber":41,"author":{"gitId":"houtenteo"},"content":"        assertFalse(firstPredicate.equals(1));","lastModifiedDate":"2021-10-27"},{"lineNumber":42,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":43,"author":{"gitId":"houtenteo"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-10-27"},{"lineNumber":44,"author":{"gitId":"houtenteo"},"content":"        assertFalse(firstPredicate.equals(null));","lastModifiedDate":"2021-10-27"},{"lineNumber":45,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":46,"author":{"gitId":"houtenteo"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2021-10-27"},{"lineNumber":47,"author":{"gitId":"houtenteo"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));","lastModifiedDate":"2021-10-27"},{"lineNumber":48,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":49,"author":{"gitId":"houtenteo"},"content":"        // different isFindAll -\u003e returns false","lastModifiedDate":"2021-10-27"},{"lineNumber":50,"author":{"gitId":"houtenteo"},"content":"        assertFalse(secondPredicate.equals(thirdPredicate));","lastModifiedDate":"2021-10-27"},{"lineNumber":51,"author":{"gitId":"houtenteo"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":52,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":53,"author":{"gitId":"houtenteo"},"content":"    @Test","lastModifiedDate":"2021-10-27"},{"lineNumber":54,"author":{"gitId":"houtenteo"},"content":"    public void test_addressContainsKeywords_returnsTrue() {","lastModifiedDate":"2021-10-27"},{"lineNumber":55,"author":{"gitId":"houtenteo"},"content":"        // One keyword","lastModifiedDate":"2021-10-27"},{"lineNumber":56,"author":{"gitId":"pranav-ganesh"},"content":"        CalledPredicate predicate \u003d new CalledPredicate(","lastModifiedDate":"2021-11-04"},{"lineNumber":57,"author":{"gitId":"houtenteo"},"content":"                Collections.singletonList(\"false\"), false","lastModifiedDate":"2021-10-27"},{"lineNumber":58,"author":{"gitId":"houtenteo"},"content":"        );","lastModifiedDate":"2021-10-27"},{"lineNumber":59,"author":{"gitId":"pranav-ganesh"},"content":"        assertTrue(predicate.test(new PersonBuilder().withCalled(\"false\").build()));","lastModifiedDate":"2021-11-04"},{"lineNumber":60,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":61,"author":{"gitId":"pranav-ganesh"},"content":"        predicate \u003d new CalledPredicate(","lastModifiedDate":"2021-11-04"},{"lineNumber":62,"author":{"gitId":"houtenteo"},"content":"                Collections.singletonList(\"f\"), false","lastModifiedDate":"2021-10-27"},{"lineNumber":63,"author":{"gitId":"houtenteo"},"content":"        );","lastModifiedDate":"2021-10-27"},{"lineNumber":64,"author":{"gitId":"pranav-ganesh"},"content":"        assertTrue(predicate.test(new PersonBuilder().withCalled(\"false\").build()));","lastModifiedDate":"2021-11-04"},{"lineNumber":65,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":66,"author":{"gitId":"pranav-ganesh"},"content":"        predicate \u003d new CalledPredicate(","lastModifiedDate":"2021-11-04"},{"lineNumber":67,"author":{"gitId":"houtenteo"},"content":"                Collections.singletonList(\"true\"), false","lastModifiedDate":"2021-10-27"},{"lineNumber":68,"author":{"gitId":"houtenteo"},"content":"        );","lastModifiedDate":"2021-10-27"},{"lineNumber":69,"author":{"gitId":"pranav-ganesh"},"content":"        assertTrue(predicate.test(new PersonBuilder().withCalled(\"true\").build()));","lastModifiedDate":"2021-11-04"},{"lineNumber":70,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":71,"author":{"gitId":"pranav-ganesh"},"content":"        predicate \u003d new CalledPredicate(","lastModifiedDate":"2021-11-04"},{"lineNumber":72,"author":{"gitId":"houtenteo"},"content":"                Collections.singletonList(\"t\"), false","lastModifiedDate":"2021-10-27"},{"lineNumber":73,"author":{"gitId":"houtenteo"},"content":"        );","lastModifiedDate":"2021-10-27"},{"lineNumber":74,"author":{"gitId":"pranav-ganesh"},"content":"        assertTrue(predicate.test(new PersonBuilder().withCalled(\"true\").build()));","lastModifiedDate":"2021-11-04"},{"lineNumber":75,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":76,"author":{"gitId":"houtenteo"},"content":"        // Multiple keywords","lastModifiedDate":"2021-10-27"},{"lineNumber":77,"author":{"gitId":"pranav-ganesh"},"content":"        predicate \u003d new CalledPredicate(Arrays.asList(\"t\", \"f\"), false);","lastModifiedDate":"2021-11-04"},{"lineNumber":78,"author":{"gitId":"pranav-ganesh"},"content":"        assertTrue(predicate.test(new PersonBuilder().withCalled(\"false\").build()));","lastModifiedDate":"2021-11-04"},{"lineNumber":79,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":80,"author":{"gitId":"houtenteo"},"content":"        // Mixed-case keywords","lastModifiedDate":"2021-10-27"},{"lineNumber":81,"author":{"gitId":"pranav-ganesh"},"content":"        predicate \u003d new CalledPredicate(Arrays.asList(\"tRuE\", \"fAlSe\"), false);","lastModifiedDate":"2021-11-04"},{"lineNumber":82,"author":{"gitId":"pranav-ganesh"},"content":"        assertTrue(predicate.test(new PersonBuilder().withCalled(\"false\").build()));","lastModifiedDate":"2021-11-04"},{"lineNumber":83,"author":{"gitId":"houtenteo"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":84,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":85,"author":{"gitId":"houtenteo"},"content":"    @Test","lastModifiedDate":"2021-10-27"},{"lineNumber":86,"author":{"gitId":"houtenteo"},"content":"    public void test_addressDoesNotContainKeywords_returnsFalse() {","lastModifiedDate":"2021-10-27"},{"lineNumber":87,"author":{"gitId":"houtenteo"},"content":"        // Zero keywords","lastModifiedDate":"2021-10-27"},{"lineNumber":88,"author":{"gitId":"pranav-ganesh"},"content":"        CalledPredicate predicate \u003d new CalledPredicate(","lastModifiedDate":"2021-11-04"},{"lineNumber":89,"author":{"gitId":"houtenteo"},"content":"                Collections.emptyList(), false","lastModifiedDate":"2021-10-27"},{"lineNumber":90,"author":{"gitId":"houtenteo"},"content":"        );","lastModifiedDate":"2021-10-27"},{"lineNumber":91,"author":{"gitId":"pranav-ganesh"},"content":"        assertFalse(predicate.test(new PersonBuilder().withCalled(\"true\").build()));","lastModifiedDate":"2021-11-04"},{"lineNumber":92,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":93,"author":{"gitId":"houtenteo"},"content":"        // Non-matching keyword","lastModifiedDate":"2021-10-27"},{"lineNumber":94,"author":{"gitId":"pranav-ganesh"},"content":"        predicate \u003d new CalledPredicate(Arrays.asList(\"Carol\"), false);","lastModifiedDate":"2021-11-04"},{"lineNumber":95,"author":{"gitId":"pranav-ganesh"},"content":"        assertFalse(predicate.test(new PersonBuilder().withCalled(\"false\").build()));","lastModifiedDate":"2021-11-04"},{"lineNumber":96,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":97,"author":{"gitId":"pranav-ganesh"},"content":"        // Keywords match name, phone, email, but does not match isCalled","lastModifiedDate":"2021-11-04"},{"lineNumber":98,"author":{"gitId":"pranav-ganesh"},"content":"        predicate \u003d new CalledPredicate(Arrays.asList(","lastModifiedDate":"2021-11-04"},{"lineNumber":99,"author":{"gitId":"houtenteo"},"content":"                \"Alice\", \"87654321\", \"alice@email.com\"","lastModifiedDate":"2021-11-02"},{"lineNumber":100,"author":{"gitId":"houtenteo"},"content":"        ), false);","lastModifiedDate":"2021-10-27"},{"lineNumber":101,"author":{"gitId":"houtenteo"},"content":"        assertFalse(predicate.test(new PersonBuilder().withName(\"ALice\").withPhone(\"87654321\")","lastModifiedDate":"2021-11-02"},{"lineNumber":102,"author":{"gitId":"pranav-ganesh"},"content":"                .withEmail(\"alice@email.com\").withCalled(\"true\").build()));","lastModifiedDate":"2021-11-04"},{"lineNumber":103,"author":{"gitId":"houtenteo"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":104,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":105,"author":{"gitId":"houtenteo"},"content":"    @Test","lastModifiedDate":"2021-10-27"},{"lineNumber":106,"author":{"gitId":"houtenteo"},"content":"    public void test_addressContainsKeywordsIsFindAll() {","lastModifiedDate":"2021-10-27"},{"lineNumber":107,"author":{"gitId":"houtenteo"},"content":"        // One keyword match -\u003e true","lastModifiedDate":"2021-10-27"},{"lineNumber":108,"author":{"gitId":"pranav-ganesh"},"content":"        CalledPredicate predicate \u003d new CalledPredicate(","lastModifiedDate":"2021-11-04"},{"lineNumber":109,"author":{"gitId":"houtenteo"},"content":"                Collections.singletonList(\"f\"), true","lastModifiedDate":"2021-10-27"},{"lineNumber":110,"author":{"gitId":"houtenteo"},"content":"        );","lastModifiedDate":"2021-10-27"},{"lineNumber":111,"author":{"gitId":"pranav-ganesh"},"content":"        assertTrue(predicate.test(new PersonBuilder().withCalled(\"false\").build()));","lastModifiedDate":"2021-11-04"},{"lineNumber":112,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":113,"author":{"gitId":"pranav-ganesh"},"content":"        predicate \u003d new CalledPredicate(","lastModifiedDate":"2021-11-04"},{"lineNumber":114,"author":{"gitId":"houtenteo"},"content":"                Collections.singletonList(\"t\"), true","lastModifiedDate":"2021-10-27"},{"lineNumber":115,"author":{"gitId":"houtenteo"},"content":"        );","lastModifiedDate":"2021-10-27"},{"lineNumber":116,"author":{"gitId":"pranav-ganesh"},"content":"        assertTrue(predicate.test(new PersonBuilder().withCalled(\"true\").build()));","lastModifiedDate":"2021-11-04"},{"lineNumber":117,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":118,"author":{"gitId":"houtenteo"},"content":"        // One keyword no match -\u003e false","lastModifiedDate":"2021-10-27"},{"lineNumber":119,"author":{"gitId":"pranav-ganesh"},"content":"        predicate \u003d new CalledPredicate(","lastModifiedDate":"2021-11-04"},{"lineNumber":120,"author":{"gitId":"houtenteo"},"content":"                Collections.singletonList(\"haha\"), true","lastModifiedDate":"2021-10-27"},{"lineNumber":121,"author":{"gitId":"houtenteo"},"content":"        );","lastModifiedDate":"2021-10-27"},{"lineNumber":122,"author":{"gitId":"pranav-ganesh"},"content":"        assertFalse(predicate.test(new PersonBuilder().withCalled(\"false\").build()));","lastModifiedDate":"2021-11-04"},{"lineNumber":123,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":124,"author":{"gitId":"houtenteo"},"content":"        // Only one matching keyword -\u003e false","lastModifiedDate":"2021-10-27"},{"lineNumber":125,"author":{"gitId":"pranav-ganesh"},"content":"        predicate \u003d new CalledPredicate(Arrays.asList(\"t\", \"f\"), true);","lastModifiedDate":"2021-11-04"},{"lineNumber":126,"author":{"gitId":"pranav-ganesh"},"content":"        assertFalse(predicate.test(new PersonBuilder().withCalled(\"false\").build()));","lastModifiedDate":"2021-11-04"},{"lineNumber":127,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":128,"author":{"gitId":"pranav-ganesh"},"content":"        // Keywords match name, phone, email, but does not match isCalled -\u003e false","lastModifiedDate":"2021-11-04"},{"lineNumber":129,"author":{"gitId":"pranav-ganesh"},"content":"        predicate \u003d new CalledPredicate(Arrays.asList(","lastModifiedDate":"2021-11-04"},{"lineNumber":130,"author":{"gitId":"houtenteo"},"content":"                \"Alice\", \"87654321\", \"alice@email.com\"","lastModifiedDate":"2021-11-02"},{"lineNumber":131,"author":{"gitId":"houtenteo"},"content":"        ), true);","lastModifiedDate":"2021-10-27"},{"lineNumber":132,"author":{"gitId":"houtenteo"},"content":"        assertFalse(predicate.test(new PersonBuilder().withName(\"ALice\").withPhone(\"87654321\")","lastModifiedDate":"2021-11-02"},{"lineNumber":133,"author":{"gitId":"pranav-ganesh"},"content":"                .withEmail(\"alice@email.com\").withCalled(\"false\").build()));","lastModifiedDate":"2021-11-04"},{"lineNumber":134,"author":{"gitId":"houtenteo"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":135,"author":{"gitId":"houtenteo"},"content":"}","lastModifiedDate":"2021-10-27"}],"authorContributionMap":{"houtenteo":100,"pranav-ganesh":35}},{"path":"src/test/java/seedu/address/model/person/predicates/CombinedPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"houtenteo"},"content":"package seedu.address.model.person.predicates;","lastModifiedDate":"2021-10-27"},{"lineNumber":2,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":3,"author":{"gitId":"houtenteo"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-27"},{"lineNumber":4,"author":{"gitId":"houtenteo"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-27"},{"lineNumber":5,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":6,"author":{"gitId":"houtenteo"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-27"},{"lineNumber":7,"author":{"gitId":"houtenteo"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-10-27"},{"lineNumber":8,"author":{"gitId":"houtenteo"},"content":"import java.util.Collections;","lastModifiedDate":"2021-10-27"},{"lineNumber":9,"author":{"gitId":"houtenteo"},"content":"import java.util.List;","lastModifiedDate":"2021-10-27"},{"lineNumber":10,"author":{"gitId":"houtenteo"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2021-10-27"},{"lineNumber":11,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":12,"author":{"gitId":"houtenteo"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-27"},{"lineNumber":13,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":14,"author":{"gitId":"houtenteo"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2021-10-27"},{"lineNumber":15,"author":{"gitId":"houtenteo"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2021-10-27"},{"lineNumber":16,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":17,"author":{"gitId":"houtenteo"},"content":"public class CombinedPredicateTest {","lastModifiedDate":"2021-10-27"},{"lineNumber":18,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":19,"author":{"gitId":"houtenteo"},"content":"    @Test","lastModifiedDate":"2021-10-27"},{"lineNumber":20,"author":{"gitId":"houtenteo"},"content":"    public void equals() {","lastModifiedDate":"2021-10-27"},{"lineNumber":21,"author":{"gitId":"houtenteo"},"content":"        List\u003cString\u003e firstPredicateKeywordList \u003d Collections.singletonList(\"first\");","lastModifiedDate":"2021-10-27"},{"lineNumber":22,"author":{"gitId":"houtenteo"},"content":"        List\u003cString\u003e secondPredicateKeywordList \u003d Arrays.asList(\"first\", \"second\");","lastModifiedDate":"2021-10-27"},{"lineNumber":23,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":24,"author":{"gitId":"houtenteo"},"content":"        AddressContainsKeywordsPredicate firstaddressPredicate \u003d new AddressContainsKeywordsPredicate(","lastModifiedDate":"2021-10-27"},{"lineNumber":25,"author":{"gitId":"houtenteo"},"content":"                firstPredicateKeywordList, false","lastModifiedDate":"2021-10-27"},{"lineNumber":26,"author":{"gitId":"houtenteo"},"content":"        );","lastModifiedDate":"2021-10-27"},{"lineNumber":27,"author":{"gitId":"houtenteo"},"content":"        AddressContainsKeywordsPredicate secondAddressPredicate \u003d new AddressContainsKeywordsPredicate(","lastModifiedDate":"2021-10-27"},{"lineNumber":28,"author":{"gitId":"houtenteo"},"content":"                secondPredicateKeywordList, false","lastModifiedDate":"2021-10-27"},{"lineNumber":29,"author":{"gitId":"houtenteo"},"content":"        );","lastModifiedDate":"2021-10-27"},{"lineNumber":30,"author":{"gitId":"houtenteo"},"content":"        EmailContainsKeywordsPredicate emailPredicate \u003d new EmailContainsKeywordsPredicate(","lastModifiedDate":"2021-10-27"},{"lineNumber":31,"author":{"gitId":"houtenteo"},"content":"                secondPredicateKeywordList, true","lastModifiedDate":"2021-10-27"},{"lineNumber":32,"author":{"gitId":"houtenteo"},"content":"        );","lastModifiedDate":"2021-10-27"},{"lineNumber":33,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":34,"author":{"gitId":"houtenteo"},"content":"        ArrayList\u003cPredicate\u003cPerson\u003e\u003e firstPredicateList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-27"},{"lineNumber":35,"author":{"gitId":"houtenteo"},"content":"        firstPredicateList.add(firstaddressPredicate);","lastModifiedDate":"2021-10-27"},{"lineNumber":36,"author":{"gitId":"houtenteo"},"content":"        firstPredicateList.add(emailPredicate);","lastModifiedDate":"2021-10-27"},{"lineNumber":37,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":38,"author":{"gitId":"houtenteo"},"content":"        ArrayList\u003cPredicate\u003cPerson\u003e\u003e secondPredicateList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-27"},{"lineNumber":39,"author":{"gitId":"houtenteo"},"content":"        secondPredicateList.add(secondAddressPredicate);","lastModifiedDate":"2021-10-27"},{"lineNumber":40,"author":{"gitId":"houtenteo"},"content":"        secondPredicateList.add(emailPredicate);","lastModifiedDate":"2021-10-27"},{"lineNumber":41,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":42,"author":{"gitId":"houtenteo"},"content":"        CombinedPredicate firstPredicate \u003d new CombinedPredicate(firstPredicateList, false);","lastModifiedDate":"2021-10-27"},{"lineNumber":43,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":44,"author":{"gitId":"houtenteo"},"content":"        CombinedPredicate secondPredicate \u003d new CombinedPredicate(secondPredicateList, false);","lastModifiedDate":"2021-10-27"},{"lineNumber":45,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":46,"author":{"gitId":"houtenteo"},"content":"        CombinedPredicate thirdPredicate \u003d new CombinedPredicate(secondPredicateList, true);","lastModifiedDate":"2021-10-27"},{"lineNumber":47,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":48,"author":{"gitId":"houtenteo"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-10-27"},{"lineNumber":49,"author":{"gitId":"houtenteo"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));","lastModifiedDate":"2021-10-27"},{"lineNumber":50,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":51,"author":{"gitId":"houtenteo"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2021-10-27"},{"lineNumber":52,"author":{"gitId":"houtenteo"},"content":"        CombinedPredicate firstPredicateCopy \u003d new CombinedPredicate(","lastModifiedDate":"2021-10-27"},{"lineNumber":53,"author":{"gitId":"houtenteo"},"content":"                firstPredicateList, false","lastModifiedDate":"2021-10-27"},{"lineNumber":54,"author":{"gitId":"houtenteo"},"content":"        );","lastModifiedDate":"2021-10-27"},{"lineNumber":55,"author":{"gitId":"houtenteo"},"content":"        assertTrue(firstPredicate.equals(firstPredicateCopy));","lastModifiedDate":"2021-10-27"},{"lineNumber":56,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":57,"author":{"gitId":"houtenteo"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2021-10-27"},{"lineNumber":58,"author":{"gitId":"houtenteo"},"content":"        assertFalse(firstPredicate.equals(1));","lastModifiedDate":"2021-10-27"},{"lineNumber":59,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":60,"author":{"gitId":"houtenteo"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-10-27"},{"lineNumber":61,"author":{"gitId":"houtenteo"},"content":"        assertFalse(firstPredicate.equals(null));","lastModifiedDate":"2021-10-27"},{"lineNumber":62,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":63,"author":{"gitId":"houtenteo"},"content":"        // different predicates -\u003e returns false","lastModifiedDate":"2021-10-27"},{"lineNumber":64,"author":{"gitId":"houtenteo"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));","lastModifiedDate":"2021-10-27"},{"lineNumber":65,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":66,"author":{"gitId":"houtenteo"},"content":"        // different isFindAll -\u003e returns false","lastModifiedDate":"2021-10-27"},{"lineNumber":67,"author":{"gitId":"houtenteo"},"content":"        assertFalse(secondPredicate.equals(thirdPredicate));","lastModifiedDate":"2021-10-27"},{"lineNumber":68,"author":{"gitId":"houtenteo"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":69,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":70,"author":{"gitId":"houtenteo"},"content":"    @Test","lastModifiedDate":"2021-10-27"},{"lineNumber":71,"author":{"gitId":"houtenteo"},"content":"    public void test_addressContainsKeywords_returnsTrue() {","lastModifiedDate":"2021-10-27"},{"lineNumber":72,"author":{"gitId":"houtenteo"},"content":"        ArrayList\u003cPredicate\u003cPerson\u003e\u003e predicateList;","lastModifiedDate":"2021-10-27"},{"lineNumber":73,"author":{"gitId":"houtenteo"},"content":"        CombinedPredicate combinedPredicate;","lastModifiedDate":"2021-10-27"},{"lineNumber":74,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":75,"author":{"gitId":"houtenteo"},"content":"        // One predicate","lastModifiedDate":"2021-10-27"},{"lineNumber":76,"author":{"gitId":"houtenteo"},"content":"        AddressContainsKeywordsPredicate predicate \u003d new AddressContainsKeywordsPredicate(","lastModifiedDate":"2021-10-27"},{"lineNumber":77,"author":{"gitId":"houtenteo"},"content":"                Collections.singletonList(\"Alice\"), false","lastModifiedDate":"2021-10-27"},{"lineNumber":78,"author":{"gitId":"houtenteo"},"content":"        );","lastModifiedDate":"2021-10-27"},{"lineNumber":79,"author":{"gitId":"houtenteo"},"content":"        predicateList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-27"},{"lineNumber":80,"author":{"gitId":"houtenteo"},"content":"        predicateList.add(predicate);","lastModifiedDate":"2021-10-27"},{"lineNumber":81,"author":{"gitId":"houtenteo"},"content":"        combinedPredicate \u003d new CombinedPredicate(predicateList, false);","lastModifiedDate":"2021-10-27"},{"lineNumber":82,"author":{"gitId":"houtenteo"},"content":"        assertTrue(combinedPredicate.test(new PersonBuilder().withAddress(\"Alice house\").build()));","lastModifiedDate":"2021-10-27"},{"lineNumber":83,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":84,"author":{"gitId":"houtenteo"},"content":"        // Multiple predicates","lastModifiedDate":"2021-10-27"},{"lineNumber":85,"author":{"gitId":"houtenteo"},"content":"        predicate \u003d new AddressContainsKeywordsPredicate(","lastModifiedDate":"2021-10-27"},{"lineNumber":86,"author":{"gitId":"houtenteo"},"content":"                Collections.singletonList(\"Alice\"), false","lastModifiedDate":"2021-10-27"},{"lineNumber":87,"author":{"gitId":"houtenteo"},"content":"        );","lastModifiedDate":"2021-10-27"},{"lineNumber":88,"author":{"gitId":"houtenteo"},"content":"        EmailContainsKeywordsPredicate predicate2 \u003d new EmailContainsKeywordsPredicate(","lastModifiedDate":"2021-10-27"},{"lineNumber":89,"author":{"gitId":"houtenteo"},"content":"                Arrays.asList(\"al\", \"@\"), false","lastModifiedDate":"2021-10-27"},{"lineNumber":90,"author":{"gitId":"houtenteo"},"content":"        );","lastModifiedDate":"2021-10-27"},{"lineNumber":91,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":92,"author":{"gitId":"houtenteo"},"content":"        predicateList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-27"},{"lineNumber":93,"author":{"gitId":"houtenteo"},"content":"        predicateList.add(predicate);","lastModifiedDate":"2021-10-27"},{"lineNumber":94,"author":{"gitId":"houtenteo"},"content":"        predicateList.add(predicate2);","lastModifiedDate":"2021-10-27"},{"lineNumber":95,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":96,"author":{"gitId":"houtenteo"},"content":"        combinedPredicate \u003d new CombinedPredicate(predicateList, false);","lastModifiedDate":"2021-10-27"},{"lineNumber":97,"author":{"gitId":"houtenteo"},"content":"        assertTrue(combinedPredicate.test(new PersonBuilder().withAddress(\"Alice house\")","lastModifiedDate":"2021-10-27"},{"lineNumber":98,"author":{"gitId":"houtenteo"},"content":"                .withEmail(\"al@email.com\").build()));","lastModifiedDate":"2021-10-27"},{"lineNumber":99,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":100,"author":{"gitId":"houtenteo"},"content":"        // Only one matching predicate","lastModifiedDate":"2021-10-27"},{"lineNumber":101,"author":{"gitId":"houtenteo"},"content":"        predicate \u003d new AddressContainsKeywordsPredicate(","lastModifiedDate":"2021-10-27"},{"lineNumber":102,"author":{"gitId":"houtenteo"},"content":"                Collections.singletonList(\"Alice\"), false","lastModifiedDate":"2021-10-27"},{"lineNumber":103,"author":{"gitId":"houtenteo"},"content":"        );","lastModifiedDate":"2021-10-27"},{"lineNumber":104,"author":{"gitId":"houtenteo"},"content":"        predicate2 \u003d new EmailContainsKeywordsPredicate(","lastModifiedDate":"2021-10-27"},{"lineNumber":105,"author":{"gitId":"houtenteo"},"content":"                Arrays.asList(\"bob, example\"), false","lastModifiedDate":"2021-10-27"},{"lineNumber":106,"author":{"gitId":"houtenteo"},"content":"        );","lastModifiedDate":"2021-10-27"},{"lineNumber":107,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":108,"author":{"gitId":"houtenteo"},"content":"        predicateList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-27"},{"lineNumber":109,"author":{"gitId":"houtenteo"},"content":"        predicateList.add(predicate);","lastModifiedDate":"2021-10-27"},{"lineNumber":110,"author":{"gitId":"houtenteo"},"content":"        predicateList.add(predicate2);","lastModifiedDate":"2021-10-27"},{"lineNumber":111,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":112,"author":{"gitId":"houtenteo"},"content":"        combinedPredicate \u003d new CombinedPredicate(predicateList, false);","lastModifiedDate":"2021-10-27"},{"lineNumber":113,"author":{"gitId":"houtenteo"},"content":"        assertTrue(combinedPredicate.test(new PersonBuilder().withAddress(\"Alice house\")","lastModifiedDate":"2021-10-27"},{"lineNumber":114,"author":{"gitId":"houtenteo"},"content":"                .withEmail(\"al@email.com\").build()));","lastModifiedDate":"2021-10-27"},{"lineNumber":115,"author":{"gitId":"houtenteo"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":116,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":117,"author":{"gitId":"houtenteo"},"content":"    @Test","lastModifiedDate":"2021-10-27"},{"lineNumber":118,"author":{"gitId":"houtenteo"},"content":"    public void test_addressDoesNotContainKeywords_returnsFalse() {","lastModifiedDate":"2021-10-27"},{"lineNumber":119,"author":{"gitId":"houtenteo"},"content":"        ArrayList\u003cPredicate\u003cPerson\u003e\u003e predicateList;","lastModifiedDate":"2021-10-27"},{"lineNumber":120,"author":{"gitId":"houtenteo"},"content":"        CombinedPredicate combinedPredicate;","lastModifiedDate":"2021-10-27"},{"lineNumber":121,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":122,"author":{"gitId":"houtenteo"},"content":"        // Zero predicates","lastModifiedDate":"2021-10-27"},{"lineNumber":123,"author":{"gitId":"houtenteo"},"content":"        predicateList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-27"},{"lineNumber":124,"author":{"gitId":"houtenteo"},"content":"        combinedPredicate \u003d new CombinedPredicate(predicateList, false);","lastModifiedDate":"2021-10-27"},{"lineNumber":125,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":126,"author":{"gitId":"houtenteo"},"content":"        assertFalse(combinedPredicate.test(new PersonBuilder().withAddress(\"Alice house\").build()));","lastModifiedDate":"2021-10-27"},{"lineNumber":127,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":128,"author":{"gitId":"houtenteo"},"content":"        // Non-matching predicate","lastModifiedDate":"2021-10-27"},{"lineNumber":129,"author":{"gitId":"houtenteo"},"content":"        AddressContainsKeywordsPredicate predicate \u003d new AddressContainsKeywordsPredicate(","lastModifiedDate":"2021-10-27"},{"lineNumber":130,"author":{"gitId":"houtenteo"},"content":"                Arrays.asList(\"Carol\"), false","lastModifiedDate":"2021-10-27"},{"lineNumber":131,"author":{"gitId":"houtenteo"},"content":"        );","lastModifiedDate":"2021-10-27"},{"lineNumber":132,"author":{"gitId":"houtenteo"},"content":"        assertFalse(predicate.test(new PersonBuilder().withAddress(\"Alice house\").build()));","lastModifiedDate":"2021-10-27"},{"lineNumber":133,"author":{"gitId":"houtenteo"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":134,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":135,"author":{"gitId":"houtenteo"},"content":"    @Test","lastModifiedDate":"2021-10-27"},{"lineNumber":136,"author":{"gitId":"houtenteo"},"content":"    public void test_addressContainsKeywordsIsFindAll() {","lastModifiedDate":"2021-10-27"},{"lineNumber":137,"author":{"gitId":"houtenteo"},"content":"        ArrayList\u003cPredicate\u003cPerson\u003e\u003e predicateList;","lastModifiedDate":"2021-10-27"},{"lineNumber":138,"author":{"gitId":"houtenteo"},"content":"        CombinedPredicate combinedPredicate;","lastModifiedDate":"2021-10-27"},{"lineNumber":139,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":140,"author":{"gitId":"houtenteo"},"content":"        // One predicate match -\u003e true","lastModifiedDate":"2021-10-27"},{"lineNumber":141,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":142,"author":{"gitId":"houtenteo"},"content":"        AddressContainsKeywordsPredicate predicate \u003d new AddressContainsKeywordsPredicate(","lastModifiedDate":"2021-10-27"},{"lineNumber":143,"author":{"gitId":"houtenteo"},"content":"                Collections.singletonList(\"Alice\"), false","lastModifiedDate":"2021-10-27"},{"lineNumber":144,"author":{"gitId":"houtenteo"},"content":"        );","lastModifiedDate":"2021-10-27"},{"lineNumber":145,"author":{"gitId":"houtenteo"},"content":"        predicateList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-27"},{"lineNumber":146,"author":{"gitId":"houtenteo"},"content":"        predicateList.add(predicate);","lastModifiedDate":"2021-10-27"},{"lineNumber":147,"author":{"gitId":"houtenteo"},"content":"        combinedPredicate \u003d new CombinedPredicate(predicateList, true);","lastModifiedDate":"2021-10-27"},{"lineNumber":148,"author":{"gitId":"houtenteo"},"content":"        assertTrue(combinedPredicate.test(new PersonBuilder().withAddress(\"Alice house\").build()));","lastModifiedDate":"2021-10-27"},{"lineNumber":149,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":150,"author":{"gitId":"houtenteo"},"content":"        // One predicate no match -\u003e false","lastModifiedDate":"2021-10-27"},{"lineNumber":151,"author":{"gitId":"houtenteo"},"content":"        predicate \u003d new AddressContainsKeywordsPredicate(","lastModifiedDate":"2021-10-27"},{"lineNumber":152,"author":{"gitId":"houtenteo"},"content":"                Collections.singletonList(\"bob\"), false","lastModifiedDate":"2021-10-27"},{"lineNumber":153,"author":{"gitId":"houtenteo"},"content":"        );","lastModifiedDate":"2021-10-27"},{"lineNumber":154,"author":{"gitId":"houtenteo"},"content":"        predicateList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-27"},{"lineNumber":155,"author":{"gitId":"houtenteo"},"content":"        predicateList.add(predicate);","lastModifiedDate":"2021-10-27"},{"lineNumber":156,"author":{"gitId":"houtenteo"},"content":"        combinedPredicate \u003d new CombinedPredicate(predicateList, true);","lastModifiedDate":"2021-10-27"},{"lineNumber":157,"author":{"gitId":"houtenteo"},"content":"        assertFalse(combinedPredicate.test(new PersonBuilder().withAddress(\"Alice house\").build()));","lastModifiedDate":"2021-10-27"},{"lineNumber":158,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":159,"author":{"gitId":"houtenteo"},"content":"        // Multiple predicates all match -\u003e true","lastModifiedDate":"2021-10-27"},{"lineNumber":160,"author":{"gitId":"houtenteo"},"content":"        predicate \u003d new AddressContainsKeywordsPredicate(","lastModifiedDate":"2021-10-27"},{"lineNumber":161,"author":{"gitId":"houtenteo"},"content":"                Collections.singletonList(\"Alice\"), false","lastModifiedDate":"2021-10-27"},{"lineNumber":162,"author":{"gitId":"houtenteo"},"content":"        );","lastModifiedDate":"2021-10-27"},{"lineNumber":163,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":164,"author":{"gitId":"houtenteo"},"content":"        EmailContainsKeywordsPredicate predicate2 \u003d new EmailContainsKeywordsPredicate(","lastModifiedDate":"2021-10-27"},{"lineNumber":165,"author":{"gitId":"houtenteo"},"content":"                Arrays.asList(\"al\", \"@\"), true","lastModifiedDate":"2021-10-27"},{"lineNumber":166,"author":{"gitId":"houtenteo"},"content":"        );","lastModifiedDate":"2021-10-27"},{"lineNumber":167,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":168,"author":{"gitId":"houtenteo"},"content":"        predicateList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-27"},{"lineNumber":169,"author":{"gitId":"houtenteo"},"content":"        predicateList.add(predicate);","lastModifiedDate":"2021-10-27"},{"lineNumber":170,"author":{"gitId":"houtenteo"},"content":"        predicateList.add(predicate2);","lastModifiedDate":"2021-10-27"},{"lineNumber":171,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":172,"author":{"gitId":"houtenteo"},"content":"        combinedPredicate \u003d new CombinedPredicate(predicateList, true);","lastModifiedDate":"2021-10-27"},{"lineNumber":173,"author":{"gitId":"houtenteo"},"content":"        assertTrue(combinedPredicate.test(new PersonBuilder().withAddress(\"Alice house\")","lastModifiedDate":"2021-10-27"},{"lineNumber":174,"author":{"gitId":"houtenteo"},"content":"                .withEmail(\"al@email.com\").build()));","lastModifiedDate":"2021-10-27"},{"lineNumber":175,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":176,"author":{"gitId":"houtenteo"},"content":"        // Only one matching keyword -\u003e false","lastModifiedDate":"2021-10-27"},{"lineNumber":177,"author":{"gitId":"houtenteo"},"content":"        predicate \u003d new AddressContainsKeywordsPredicate(","lastModifiedDate":"2021-10-27"},{"lineNumber":178,"author":{"gitId":"houtenteo"},"content":"                Collections.singletonList(\"Alice\"), false","lastModifiedDate":"2021-10-27"},{"lineNumber":179,"author":{"gitId":"houtenteo"},"content":"        );","lastModifiedDate":"2021-10-27"},{"lineNumber":180,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":181,"author":{"gitId":"houtenteo"},"content":"        predicate2 \u003d new EmailContainsKeywordsPredicate(//Email predicate doesnt match","lastModifiedDate":"2021-10-27"},{"lineNumber":182,"author":{"gitId":"houtenteo"},"content":"                Arrays.asList(\"aliii, @\"), true","lastModifiedDate":"2021-10-27"},{"lineNumber":183,"author":{"gitId":"houtenteo"},"content":"        );","lastModifiedDate":"2021-10-27"},{"lineNumber":184,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":185,"author":{"gitId":"houtenteo"},"content":"        predicateList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-27"},{"lineNumber":186,"author":{"gitId":"houtenteo"},"content":"        predicateList.add(predicate);","lastModifiedDate":"2021-10-27"},{"lineNumber":187,"author":{"gitId":"houtenteo"},"content":"        predicateList.add(predicate2);","lastModifiedDate":"2021-10-27"},{"lineNumber":188,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":189,"author":{"gitId":"houtenteo"},"content":"        combinedPredicate \u003d new CombinedPredicate(predicateList, true);","lastModifiedDate":"2021-10-27"},{"lineNumber":190,"author":{"gitId":"houtenteo"},"content":"        assertFalse(combinedPredicate.test(new PersonBuilder().withAddress(\"Alice house\")","lastModifiedDate":"2021-10-27"},{"lineNumber":191,"author":{"gitId":"houtenteo"},"content":"                .withEmail(\"al@email.com\").build()));","lastModifiedDate":"2021-10-27"},{"lineNumber":192,"author":{"gitId":"houtenteo"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":193,"author":{"gitId":"houtenteo"},"content":"}","lastModifiedDate":"2021-10-27"},{"lineNumber":194,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-27"}],"authorContributionMap":{"houtenteo":194}},{"path":"src/test/java/seedu/address/model/person/predicates/EmailContainsKeywordsPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"houtenteo"},"content":"package seedu.address.model.person.predicates;","lastModifiedDate":"2021-10-27"},{"lineNumber":2,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":3,"author":{"gitId":"houtenteo"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-27"},{"lineNumber":4,"author":{"gitId":"houtenteo"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-27"},{"lineNumber":5,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":6,"author":{"gitId":"houtenteo"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-10-27"},{"lineNumber":7,"author":{"gitId":"houtenteo"},"content":"import java.util.Collections;","lastModifiedDate":"2021-10-27"},{"lineNumber":8,"author":{"gitId":"houtenteo"},"content":"import java.util.List;","lastModifiedDate":"2021-10-27"},{"lineNumber":9,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":10,"author":{"gitId":"houtenteo"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-27"},{"lineNumber":11,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":12,"author":{"gitId":"houtenteo"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2021-10-27"},{"lineNumber":13,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":14,"author":{"gitId":"houtenteo"},"content":"public class EmailContainsKeywordsPredicateTest {","lastModifiedDate":"2021-10-27"},{"lineNumber":15,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":16,"author":{"gitId":"houtenteo"},"content":"    @Test","lastModifiedDate":"2021-10-27"},{"lineNumber":17,"author":{"gitId":"houtenteo"},"content":"    public void equals() {","lastModifiedDate":"2021-10-27"},{"lineNumber":18,"author":{"gitId":"houtenteo"},"content":"        List\u003cString\u003e firstPredicateKeywordList \u003d Collections.singletonList(\"first\");","lastModifiedDate":"2021-10-27"},{"lineNumber":19,"author":{"gitId":"houtenteo"},"content":"        List\u003cString\u003e secondPredicateKeywordList \u003d Arrays.asList(\"first\", \"second\");","lastModifiedDate":"2021-10-27"},{"lineNumber":20,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":21,"author":{"gitId":"houtenteo"},"content":"        EmailContainsKeywordsPredicate firstPredicate \u003d new EmailContainsKeywordsPredicate(","lastModifiedDate":"2021-10-27"},{"lineNumber":22,"author":{"gitId":"houtenteo"},"content":"                firstPredicateKeywordList, false","lastModifiedDate":"2021-10-27"},{"lineNumber":23,"author":{"gitId":"houtenteo"},"content":"        );","lastModifiedDate":"2021-10-27"},{"lineNumber":24,"author":{"gitId":"houtenteo"},"content":"        EmailContainsKeywordsPredicate secondPredicate \u003d new EmailContainsKeywordsPredicate(","lastModifiedDate":"2021-10-27"},{"lineNumber":25,"author":{"gitId":"houtenteo"},"content":"                secondPredicateKeywordList, false","lastModifiedDate":"2021-10-27"},{"lineNumber":26,"author":{"gitId":"houtenteo"},"content":"        );","lastModifiedDate":"2021-10-27"},{"lineNumber":27,"author":{"gitId":"houtenteo"},"content":"        EmailContainsKeywordsPredicate thirdPredicate \u003d new EmailContainsKeywordsPredicate(","lastModifiedDate":"2021-10-27"},{"lineNumber":28,"author":{"gitId":"houtenteo"},"content":"                secondPredicateKeywordList, true","lastModifiedDate":"2021-10-27"},{"lineNumber":29,"author":{"gitId":"houtenteo"},"content":"        );","lastModifiedDate":"2021-10-27"},{"lineNumber":30,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":31,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":32,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":33,"author":{"gitId":"houtenteo"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-10-27"},{"lineNumber":34,"author":{"gitId":"houtenteo"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));","lastModifiedDate":"2021-10-27"},{"lineNumber":35,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":36,"author":{"gitId":"houtenteo"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2021-10-27"},{"lineNumber":37,"author":{"gitId":"houtenteo"},"content":"        EmailContainsKeywordsPredicate firstPredicateCopy \u003d new EmailContainsKeywordsPredicate(","lastModifiedDate":"2021-10-27"},{"lineNumber":38,"author":{"gitId":"houtenteo"},"content":"                firstPredicateKeywordList, false","lastModifiedDate":"2021-10-27"},{"lineNumber":39,"author":{"gitId":"houtenteo"},"content":"        );","lastModifiedDate":"2021-10-27"},{"lineNumber":40,"author":{"gitId":"houtenteo"},"content":"        assertTrue(firstPredicate.equals(firstPredicateCopy));","lastModifiedDate":"2021-10-27"},{"lineNumber":41,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":42,"author":{"gitId":"houtenteo"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2021-10-27"},{"lineNumber":43,"author":{"gitId":"houtenteo"},"content":"        assertFalse(firstPredicate.equals(1));","lastModifiedDate":"2021-10-27"},{"lineNumber":44,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":45,"author":{"gitId":"houtenteo"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-10-27"},{"lineNumber":46,"author":{"gitId":"houtenteo"},"content":"        assertFalse(firstPredicate.equals(null));","lastModifiedDate":"2021-10-27"},{"lineNumber":47,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":48,"author":{"gitId":"houtenteo"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2021-10-27"},{"lineNumber":49,"author":{"gitId":"houtenteo"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));","lastModifiedDate":"2021-10-27"},{"lineNumber":50,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":51,"author":{"gitId":"houtenteo"},"content":"        // different isFindAll -\u003e returns false","lastModifiedDate":"2021-10-27"},{"lineNumber":52,"author":{"gitId":"houtenteo"},"content":"        assertFalse(secondPredicate.equals(thirdPredicate));","lastModifiedDate":"2021-10-27"},{"lineNumber":53,"author":{"gitId":"houtenteo"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":54,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":55,"author":{"gitId":"houtenteo"},"content":"    @Test","lastModifiedDate":"2021-10-27"},{"lineNumber":56,"author":{"gitId":"houtenteo"},"content":"    public void test_addressContainsKeywords_returnsTrue() {","lastModifiedDate":"2021-10-27"},{"lineNumber":57,"author":{"gitId":"houtenteo"},"content":"        // One keyword","lastModifiedDate":"2021-10-27"},{"lineNumber":58,"author":{"gitId":"houtenteo"},"content":"        EmailContainsKeywordsPredicate predicate \u003d new EmailContainsKeywordsPredicate(","lastModifiedDate":"2021-10-27"},{"lineNumber":59,"author":{"gitId":"houtenteo"},"content":"                Collections.singletonList(\"Alice\"), false","lastModifiedDate":"2021-10-27"},{"lineNumber":60,"author":{"gitId":"houtenteo"},"content":"        );","lastModifiedDate":"2021-10-27"},{"lineNumber":61,"author":{"gitId":"houtenteo"},"content":"        assertTrue(predicate.test(new PersonBuilder().withEmail(\"Alice@email.com\").build()));","lastModifiedDate":"2021-10-27"},{"lineNumber":62,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":63,"author":{"gitId":"houtenteo"},"content":"        // Multiple keywords","lastModifiedDate":"2021-10-27"},{"lineNumber":64,"author":{"gitId":"houtenteo"},"content":"        predicate \u003d new EmailContainsKeywordsPredicate(Arrays.asList(\"Alice\", \"email\"), false);","lastModifiedDate":"2021-10-27"},{"lineNumber":65,"author":{"gitId":"houtenteo"},"content":"        assertTrue(predicate.test(new PersonBuilder().withEmail(\"Alice@email.com\").build()));","lastModifiedDate":"2021-10-27"},{"lineNumber":66,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":67,"author":{"gitId":"houtenteo"},"content":"        // Only one matching keyword","lastModifiedDate":"2021-10-27"},{"lineNumber":68,"author":{"gitId":"houtenteo"},"content":"        predicate \u003d new EmailContainsKeywordsPredicate(Arrays.asList(\"alice\", \"house\"), false);","lastModifiedDate":"2021-10-27"},{"lineNumber":69,"author":{"gitId":"houtenteo"},"content":"        assertTrue(predicate.test(new PersonBuilder().withEmail(\"Alice@email.com\").build()));","lastModifiedDate":"2021-10-27"},{"lineNumber":70,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":71,"author":{"gitId":"houtenteo"},"content":"        // Mixed-case keywords","lastModifiedDate":"2021-10-27"},{"lineNumber":72,"author":{"gitId":"houtenteo"},"content":"        predicate \u003d new EmailContainsKeywordsPredicate(Arrays.asList(\"aLIce\", \"eMaiL\"), false);","lastModifiedDate":"2021-10-27"},{"lineNumber":73,"author":{"gitId":"houtenteo"},"content":"        assertTrue(predicate.test(new PersonBuilder().withEmail(\"Alice@email.com\").build()));","lastModifiedDate":"2021-10-27"},{"lineNumber":74,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":75,"author":{"gitId":"houtenteo"},"content":"        // Substring keyword","lastModifiedDate":"2021-10-27"},{"lineNumber":76,"author":{"gitId":"houtenteo"},"content":"        predicate \u003d new EmailContainsKeywordsPredicate(Collections.singletonList(\"aLi\"), false);","lastModifiedDate":"2021-10-27"},{"lineNumber":77,"author":{"gitId":"houtenteo"},"content":"        assertTrue(predicate.test(new PersonBuilder().withEmail(\"Alice@email.com\").build()));","lastModifiedDate":"2021-10-27"},{"lineNumber":78,"author":{"gitId":"houtenteo"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":79,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":80,"author":{"gitId":"houtenteo"},"content":"    @Test","lastModifiedDate":"2021-10-27"},{"lineNumber":81,"author":{"gitId":"houtenteo"},"content":"    public void test_addressDoesNotContainKeywords_returnsFalse() {","lastModifiedDate":"2021-10-27"},{"lineNumber":82,"author":{"gitId":"houtenteo"},"content":"        // Zero keywords","lastModifiedDate":"2021-10-27"},{"lineNumber":83,"author":{"gitId":"houtenteo"},"content":"        EmailContainsKeywordsPredicate predicate \u003d new EmailContainsKeywordsPredicate(","lastModifiedDate":"2021-10-27"},{"lineNumber":84,"author":{"gitId":"houtenteo"},"content":"                Collections.emptyList(), false","lastModifiedDate":"2021-10-27"},{"lineNumber":85,"author":{"gitId":"houtenteo"},"content":"        );","lastModifiedDate":"2021-10-27"},{"lineNumber":86,"author":{"gitId":"houtenteo"},"content":"        assertFalse(predicate.test(new PersonBuilder().withEmail(\"Alice@email.com\").build()));","lastModifiedDate":"2021-10-27"},{"lineNumber":87,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":88,"author":{"gitId":"houtenteo"},"content":"        // Non-matching keyword","lastModifiedDate":"2021-10-27"},{"lineNumber":89,"author":{"gitId":"houtenteo"},"content":"        predicate \u003d new EmailContainsKeywordsPredicate(Arrays.asList(\"Carol\"), false);","lastModifiedDate":"2021-10-27"},{"lineNumber":90,"author":{"gitId":"houtenteo"},"content":"        assertFalse(predicate.test(new PersonBuilder().withEmail(\"Alice@email.com\").build()));","lastModifiedDate":"2021-10-27"},{"lineNumber":91,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":92,"author":{"gitId":"houtenteo"},"content":"        // Keywords match name, phone, but does not match email","lastModifiedDate":"2021-10-27"},{"lineNumber":93,"author":{"gitId":"houtenteo"},"content":"        predicate \u003d new EmailContainsKeywordsPredicate(Arrays.asList(","lastModifiedDate":"2021-10-27"},{"lineNumber":94,"author":{"gitId":"houtenteo"},"content":"                \"Alice\", \"87654321\"","lastModifiedDate":"2021-11-02"},{"lineNumber":95,"author":{"gitId":"houtenteo"},"content":"        ), false);","lastModifiedDate":"2021-10-27"},{"lineNumber":96,"author":{"gitId":"houtenteo"},"content":"        assertFalse(predicate.test(new PersonBuilder().withName(\"ALice\").withPhone(\"87654321\")","lastModifiedDate":"2021-11-02"},{"lineNumber":97,"author":{"gitId":"houtenteo"},"content":"                .withEmail(\"al@email.com\").build()));","lastModifiedDate":"2021-10-27"},{"lineNumber":98,"author":{"gitId":"houtenteo"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":99,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":100,"author":{"gitId":"houtenteo"},"content":"    @Test","lastModifiedDate":"2021-10-27"},{"lineNumber":101,"author":{"gitId":"houtenteo"},"content":"    public void test_addressContainsKeywordsIsFindAll() {","lastModifiedDate":"2021-10-27"},{"lineNumber":102,"author":{"gitId":"houtenteo"},"content":"        // One keyword match -\u003e true","lastModifiedDate":"2021-10-27"},{"lineNumber":103,"author":{"gitId":"houtenteo"},"content":"        EmailContainsKeywordsPredicate predicate \u003d new EmailContainsKeywordsPredicate(","lastModifiedDate":"2021-10-27"},{"lineNumber":104,"author":{"gitId":"houtenteo"},"content":"                Collections.singletonList(\"Alice\"), true","lastModifiedDate":"2021-10-27"},{"lineNumber":105,"author":{"gitId":"houtenteo"},"content":"        );","lastModifiedDate":"2021-10-27"},{"lineNumber":106,"author":{"gitId":"houtenteo"},"content":"        assertTrue(predicate.test(new PersonBuilder().withEmail(\"Alice@email.com\").build()));","lastModifiedDate":"2021-10-27"},{"lineNumber":107,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":108,"author":{"gitId":"houtenteo"},"content":"        // One keyword no match -\u003e false","lastModifiedDate":"2021-10-27"},{"lineNumber":109,"author":{"gitId":"houtenteo"},"content":"        predicate \u003d new EmailContainsKeywordsPredicate(","lastModifiedDate":"2021-10-27"},{"lineNumber":110,"author":{"gitId":"houtenteo"},"content":"                Collections.singletonList(\"haha\"), true","lastModifiedDate":"2021-10-27"},{"lineNumber":111,"author":{"gitId":"houtenteo"},"content":"        );","lastModifiedDate":"2021-10-27"},{"lineNumber":112,"author":{"gitId":"houtenteo"},"content":"        assertFalse(predicate.test(new PersonBuilder().withEmail(\"Alice@email.com\").build()));","lastModifiedDate":"2021-10-27"},{"lineNumber":113,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":114,"author":{"gitId":"houtenteo"},"content":"        // Multiple keywords all match -\u003e true","lastModifiedDate":"2021-10-27"},{"lineNumber":115,"author":{"gitId":"houtenteo"},"content":"        predicate \u003d new EmailContainsKeywordsPredicate(Arrays.asList(\"Alice\", \"email\"), true);","lastModifiedDate":"2021-10-27"},{"lineNumber":116,"author":{"gitId":"houtenteo"},"content":"        assertTrue(predicate.test(new PersonBuilder().withEmail(\"Alice@email.com\").build()));","lastModifiedDate":"2021-10-27"},{"lineNumber":117,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":118,"author":{"gitId":"houtenteo"},"content":"        // Only one matching keyword -\u003e false","lastModifiedDate":"2021-10-27"},{"lineNumber":119,"author":{"gitId":"houtenteo"},"content":"        predicate \u003d new EmailContainsKeywordsPredicate(Arrays.asList(\"alice\", \"Carol\"), true);","lastModifiedDate":"2021-10-27"},{"lineNumber":120,"author":{"gitId":"houtenteo"},"content":"        assertFalse(predicate.test(new PersonBuilder().withEmail(\"Alice@email.com\").build()));","lastModifiedDate":"2021-10-27"},{"lineNumber":121,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":122,"author":{"gitId":"houtenteo"},"content":"        // Mixed-case keywords all match -\u003e true","lastModifiedDate":"2021-10-27"},{"lineNumber":123,"author":{"gitId":"houtenteo"},"content":"        predicate \u003d new EmailContainsKeywordsPredicate(Arrays.asList(\"aLIce\", \"eMAil\"), true);","lastModifiedDate":"2021-10-27"},{"lineNumber":124,"author":{"gitId":"houtenteo"},"content":"        assertTrue(predicate.test(new PersonBuilder().withEmail(\"Alice@email.com\").build()));","lastModifiedDate":"2021-10-27"},{"lineNumber":125,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":126,"author":{"gitId":"houtenteo"},"content":"        // Mixed-case keywords not all match -\u003e false","lastModifiedDate":"2021-10-27"},{"lineNumber":127,"author":{"gitId":"houtenteo"},"content":"        predicate \u003d new EmailContainsKeywordsPredicate(Arrays.asList(\"aLIce\", \"bOB\"), true);","lastModifiedDate":"2021-10-27"},{"lineNumber":128,"author":{"gitId":"houtenteo"},"content":"        assertFalse(predicate.test(new PersonBuilder().withEmail(\"Alice@email.com\").build()));","lastModifiedDate":"2021-10-27"},{"lineNumber":129,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":130,"author":{"gitId":"houtenteo"},"content":"        // Keywords match name, phone, but does not match enail -\u003e false","lastModifiedDate":"2021-10-27"},{"lineNumber":131,"author":{"gitId":"houtenteo"},"content":"        predicate \u003d new EmailContainsKeywordsPredicate(Arrays.asList(","lastModifiedDate":"2021-10-27"},{"lineNumber":132,"author":{"gitId":"houtenteo"},"content":"                \"Alice\", \"87654321\"","lastModifiedDate":"2021-11-02"},{"lineNumber":133,"author":{"gitId":"houtenteo"},"content":"        ), true);","lastModifiedDate":"2021-10-27"},{"lineNumber":134,"author":{"gitId":"houtenteo"},"content":"        assertFalse(predicate.test(new PersonBuilder().withName(\"ALice\").withPhone(\"87654321\")","lastModifiedDate":"2021-11-02"},{"lineNumber":135,"author":{"gitId":"houtenteo"},"content":"                .withEmail(\"al@email.com\").build()));","lastModifiedDate":"2021-10-27"},{"lineNumber":136,"author":{"gitId":"houtenteo"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":137,"author":{"gitId":"houtenteo"},"content":"}","lastModifiedDate":"2021-10-27"}],"authorContributionMap":{"houtenteo":137}},{"path":"src/test/java/seedu/address/model/person/predicates/GenderContainsKeywordPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"houtenteo"},"content":"package seedu.address.model.person.predicates;","lastModifiedDate":"2021-10-27"},{"lineNumber":2,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":3,"author":{"gitId":"houtenteo"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-27"},{"lineNumber":4,"author":{"gitId":"houtenteo"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-27"},{"lineNumber":5,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":6,"author":{"gitId":"houtenteo"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-10-27"},{"lineNumber":7,"author":{"gitId":"houtenteo"},"content":"import java.util.Collections;","lastModifiedDate":"2021-10-27"},{"lineNumber":8,"author":{"gitId":"houtenteo"},"content":"import java.util.List;","lastModifiedDate":"2021-10-27"},{"lineNumber":9,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":10,"author":{"gitId":"houtenteo"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-27"},{"lineNumber":11,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":12,"author":{"gitId":"houtenteo"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2021-10-27"},{"lineNumber":13,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":14,"author":{"gitId":"houtenteo"},"content":"public class GenderContainsKeywordPredicateTest {","lastModifiedDate":"2021-10-27"},{"lineNumber":15,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":16,"author":{"gitId":"houtenteo"},"content":"    @Test","lastModifiedDate":"2021-10-27"},{"lineNumber":17,"author":{"gitId":"houtenteo"},"content":"    public void equals() {","lastModifiedDate":"2021-10-27"},{"lineNumber":18,"author":{"gitId":"houtenteo"},"content":"        List\u003cString\u003e firstPredicateKeywordList \u003d Collections.singletonList(\"first\");","lastModifiedDate":"2021-10-27"},{"lineNumber":19,"author":{"gitId":"houtenteo"},"content":"        List\u003cString\u003e secondPredicateKeywordList \u003d Arrays.asList(\"first\", \"second\");","lastModifiedDate":"2021-10-27"},{"lineNumber":20,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":21,"author":{"gitId":"houtenteo"},"content":"        GenderContainsKeywordPredicate firstPredicate \u003d new GenderContainsKeywordPredicate(","lastModifiedDate":"2021-10-27"},{"lineNumber":22,"author":{"gitId":"houtenteo"},"content":"                firstPredicateKeywordList, false","lastModifiedDate":"2021-10-27"},{"lineNumber":23,"author":{"gitId":"houtenteo"},"content":"        );","lastModifiedDate":"2021-10-27"},{"lineNumber":24,"author":{"gitId":"houtenteo"},"content":"        GenderContainsKeywordPredicate secondPredicate \u003d new GenderContainsKeywordPredicate(","lastModifiedDate":"2021-10-27"},{"lineNumber":25,"author":{"gitId":"houtenteo"},"content":"                secondPredicateKeywordList, false","lastModifiedDate":"2021-10-27"},{"lineNumber":26,"author":{"gitId":"houtenteo"},"content":"        );","lastModifiedDate":"2021-10-27"},{"lineNumber":27,"author":{"gitId":"houtenteo"},"content":"        GenderContainsKeywordPredicate thirdPredicate \u003d new GenderContainsKeywordPredicate(","lastModifiedDate":"2021-10-27"},{"lineNumber":28,"author":{"gitId":"houtenteo"},"content":"                secondPredicateKeywordList, true","lastModifiedDate":"2021-10-27"},{"lineNumber":29,"author":{"gitId":"houtenteo"},"content":"        );","lastModifiedDate":"2021-10-27"},{"lineNumber":30,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":31,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":32,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":33,"author":{"gitId":"houtenteo"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-10-27"},{"lineNumber":34,"author":{"gitId":"houtenteo"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));","lastModifiedDate":"2021-10-27"},{"lineNumber":35,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":36,"author":{"gitId":"houtenteo"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2021-10-27"},{"lineNumber":37,"author":{"gitId":"houtenteo"},"content":"        GenderContainsKeywordPredicate firstPredicateCopy \u003d new GenderContainsKeywordPredicate(","lastModifiedDate":"2021-10-27"},{"lineNumber":38,"author":{"gitId":"houtenteo"},"content":"                firstPredicateKeywordList, false","lastModifiedDate":"2021-10-27"},{"lineNumber":39,"author":{"gitId":"houtenteo"},"content":"        );","lastModifiedDate":"2021-10-27"},{"lineNumber":40,"author":{"gitId":"houtenteo"},"content":"        assertTrue(firstPredicate.equals(firstPredicateCopy));","lastModifiedDate":"2021-10-27"},{"lineNumber":41,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":42,"author":{"gitId":"houtenteo"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2021-10-27"},{"lineNumber":43,"author":{"gitId":"houtenteo"},"content":"        assertFalse(firstPredicate.equals(1));","lastModifiedDate":"2021-10-27"},{"lineNumber":44,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":45,"author":{"gitId":"houtenteo"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-10-27"},{"lineNumber":46,"author":{"gitId":"houtenteo"},"content":"        assertFalse(firstPredicate.equals(null));","lastModifiedDate":"2021-10-27"},{"lineNumber":47,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":48,"author":{"gitId":"houtenteo"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2021-10-27"},{"lineNumber":49,"author":{"gitId":"houtenteo"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));","lastModifiedDate":"2021-10-27"},{"lineNumber":50,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":51,"author":{"gitId":"houtenteo"},"content":"        // different isFindAll -\u003e returns false","lastModifiedDate":"2021-10-27"},{"lineNumber":52,"author":{"gitId":"houtenteo"},"content":"        assertFalse(secondPredicate.equals(thirdPredicate));","lastModifiedDate":"2021-10-27"},{"lineNumber":53,"author":{"gitId":"houtenteo"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":54,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":55,"author":{"gitId":"houtenteo"},"content":"    @Test","lastModifiedDate":"2021-10-27"},{"lineNumber":56,"author":{"gitId":"houtenteo"},"content":"    public void test_addressContainsKeywords_returnsTrue() {","lastModifiedDate":"2021-10-27"},{"lineNumber":57,"author":{"gitId":"houtenteo"},"content":"        // One keyword","lastModifiedDate":"2021-10-27"},{"lineNumber":58,"author":{"gitId":"houtenteo"},"content":"        GenderContainsKeywordPredicate predicate \u003d new GenderContainsKeywordPredicate(","lastModifiedDate":"2021-10-27"},{"lineNumber":59,"author":{"gitId":"houtenteo"},"content":"                Collections.singletonList(\"female\"), false","lastModifiedDate":"2021-10-27"},{"lineNumber":60,"author":{"gitId":"houtenteo"},"content":"        );","lastModifiedDate":"2021-10-27"},{"lineNumber":61,"author":{"gitId":"houtenteo"},"content":"        assertTrue(predicate.test(new PersonBuilder().withGender(\"f\").build()));","lastModifiedDate":"2021-10-27"},{"lineNumber":62,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":63,"author":{"gitId":"houtenteo"},"content":"        predicate \u003d new GenderContainsKeywordPredicate(","lastModifiedDate":"2021-10-27"},{"lineNumber":64,"author":{"gitId":"houtenteo"},"content":"                Collections.singletonList(\"f\"), false","lastModifiedDate":"2021-10-27"},{"lineNumber":65,"author":{"gitId":"houtenteo"},"content":"        );","lastModifiedDate":"2021-10-27"},{"lineNumber":66,"author":{"gitId":"houtenteo"},"content":"        assertTrue(predicate.test(new PersonBuilder().withGender(\"f\").build()));","lastModifiedDate":"2021-10-27"},{"lineNumber":67,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":68,"author":{"gitId":"houtenteo"},"content":"        predicate \u003d new GenderContainsKeywordPredicate(","lastModifiedDate":"2021-10-27"},{"lineNumber":69,"author":{"gitId":"houtenteo"},"content":"                Collections.singletonList(\"male\"), false","lastModifiedDate":"2021-10-27"},{"lineNumber":70,"author":{"gitId":"houtenteo"},"content":"        );","lastModifiedDate":"2021-10-27"},{"lineNumber":71,"author":{"gitId":"houtenteo"},"content":"        assertTrue(predicate.test(new PersonBuilder().withGender(\"m\").build()));","lastModifiedDate":"2021-10-27"},{"lineNumber":72,"author":{"gitId":"houtenteo"},"content":"        predicate \u003d new GenderContainsKeywordPredicate(","lastModifiedDate":"2021-10-27"},{"lineNumber":73,"author":{"gitId":"houtenteo"},"content":"                Collections.singletonList(\"m\"), false","lastModifiedDate":"2021-10-27"},{"lineNumber":74,"author":{"gitId":"houtenteo"},"content":"        );","lastModifiedDate":"2021-10-27"},{"lineNumber":75,"author":{"gitId":"houtenteo"},"content":"        assertTrue(predicate.test(new PersonBuilder().withGender(\"m\").build()));","lastModifiedDate":"2021-10-27"},{"lineNumber":76,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":77,"author":{"gitId":"houtenteo"},"content":"        predicate \u003d new GenderContainsKeywordPredicate(","lastModifiedDate":"2021-10-27"},{"lineNumber":78,"author":{"gitId":"houtenteo"},"content":"                Collections.singletonList(\"N.A\"), false","lastModifiedDate":"2021-10-27"},{"lineNumber":79,"author":{"gitId":"houtenteo"},"content":"        );","lastModifiedDate":"2021-10-27"},{"lineNumber":80,"author":{"gitId":"houtenteo"},"content":"        assertTrue(predicate.test(new PersonBuilder().build()));","lastModifiedDate":"2021-10-27"},{"lineNumber":81,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":82,"author":{"gitId":"houtenteo"},"content":"        // Only one matching keyword","lastModifiedDate":"2021-10-27"},{"lineNumber":83,"author":{"gitId":"houtenteo"},"content":"        predicate \u003d new GenderContainsKeywordPredicate(Arrays.asList(\"Bob\", \"f\"), false);","lastModifiedDate":"2021-10-27"},{"lineNumber":84,"author":{"gitId":"houtenteo"},"content":"        assertTrue(predicate.test(new PersonBuilder().withGender(\"f\").build()));","lastModifiedDate":"2021-10-27"},{"lineNumber":85,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":86,"author":{"gitId":"houtenteo"},"content":"        // Mixed-case keywords","lastModifiedDate":"2021-10-27"},{"lineNumber":87,"author":{"gitId":"houtenteo"},"content":"        predicate \u003d new GenderContainsKeywordPredicate(Arrays.asList(\"aLIce\", \"F\"), false);","lastModifiedDate":"2021-10-27"},{"lineNumber":88,"author":{"gitId":"houtenteo"},"content":"        assertTrue(predicate.test(new PersonBuilder().withGender(\"f\").build()));","lastModifiedDate":"2021-10-27"},{"lineNumber":89,"author":{"gitId":"houtenteo"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":90,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":91,"author":{"gitId":"houtenteo"},"content":"    @Test","lastModifiedDate":"2021-10-27"},{"lineNumber":92,"author":{"gitId":"houtenteo"},"content":"    public void test_addressDoesNotContainKeywords_returnsFalse() {","lastModifiedDate":"2021-10-27"},{"lineNumber":93,"author":{"gitId":"houtenteo"},"content":"        // Zero keywords","lastModifiedDate":"2021-10-27"},{"lineNumber":94,"author":{"gitId":"houtenteo"},"content":"        GenderContainsKeywordPredicate predicate \u003d new GenderContainsKeywordPredicate(","lastModifiedDate":"2021-10-27"},{"lineNumber":95,"author":{"gitId":"houtenteo"},"content":"                Collections.emptyList(), false","lastModifiedDate":"2021-10-27"},{"lineNumber":96,"author":{"gitId":"houtenteo"},"content":"        );","lastModifiedDate":"2021-10-27"},{"lineNumber":97,"author":{"gitId":"houtenteo"},"content":"        assertFalse(predicate.test(new PersonBuilder().withGender(\"f\").build()));","lastModifiedDate":"2021-10-27"},{"lineNumber":98,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":99,"author":{"gitId":"houtenteo"},"content":"        // Non-matching keyword","lastModifiedDate":"2021-10-27"},{"lineNumber":100,"author":{"gitId":"houtenteo"},"content":"        predicate \u003d new GenderContainsKeywordPredicate(Arrays.asList(\"Carol\"), false);","lastModifiedDate":"2021-10-27"},{"lineNumber":101,"author":{"gitId":"houtenteo"},"content":"        assertFalse(predicate.test(new PersonBuilder().withGender(\"f\").build()));","lastModifiedDate":"2021-10-27"},{"lineNumber":102,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":103,"author":{"gitId":"houtenteo"},"content":"        // Keywords match name, phone, email, but does not match gender","lastModifiedDate":"2021-10-27"},{"lineNumber":104,"author":{"gitId":"houtenteo"},"content":"        predicate \u003d new GenderContainsKeywordPredicate(Arrays.asList(","lastModifiedDate":"2021-10-27"},{"lineNumber":105,"author":{"gitId":"houtenteo"},"content":"                \"Alice\", \"87654321\", \"alice@email.com\"","lastModifiedDate":"2021-11-02"},{"lineNumber":106,"author":{"gitId":"houtenteo"},"content":"        ), false);","lastModifiedDate":"2021-10-27"},{"lineNumber":107,"author":{"gitId":"houtenteo"},"content":"        assertFalse(predicate.test(new PersonBuilder().withName(\"ALice\").withPhone(\"87654321\")","lastModifiedDate":"2021-11-02"},{"lineNumber":108,"author":{"gitId":"houtenteo"},"content":"                .withEmail(\"alice@email.com\").withGender(\"f\").build()));","lastModifiedDate":"2021-10-27"},{"lineNumber":109,"author":{"gitId":"houtenteo"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":110,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":111,"author":{"gitId":"houtenteo"},"content":"    @Test","lastModifiedDate":"2021-10-27"},{"lineNumber":112,"author":{"gitId":"houtenteo"},"content":"    public void test_addressContainsKeywordsIsFindAll() {","lastModifiedDate":"2021-10-27"},{"lineNumber":113,"author":{"gitId":"houtenteo"},"content":"        // One keyword match -\u003e true","lastModifiedDate":"2021-10-27"},{"lineNumber":114,"author":{"gitId":"houtenteo"},"content":"        GenderContainsKeywordPredicate predicate \u003d new GenderContainsKeywordPredicate(","lastModifiedDate":"2021-10-27"},{"lineNumber":115,"author":{"gitId":"houtenteo"},"content":"                Collections.singletonList(\"f\"), true","lastModifiedDate":"2021-10-27"},{"lineNumber":116,"author":{"gitId":"houtenteo"},"content":"        );","lastModifiedDate":"2021-10-27"},{"lineNumber":117,"author":{"gitId":"houtenteo"},"content":"        assertTrue(predicate.test(new PersonBuilder().withGender(\"f\").build()));","lastModifiedDate":"2021-10-27"},{"lineNumber":118,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":119,"author":{"gitId":"houtenteo"},"content":"        // One keyword no match -\u003e false","lastModifiedDate":"2021-10-27"},{"lineNumber":120,"author":{"gitId":"houtenteo"},"content":"        predicate \u003d new GenderContainsKeywordPredicate(","lastModifiedDate":"2021-10-27"},{"lineNumber":121,"author":{"gitId":"houtenteo"},"content":"                Collections.singletonList(\"m\"), true","lastModifiedDate":"2021-10-27"},{"lineNumber":122,"author":{"gitId":"houtenteo"},"content":"        );","lastModifiedDate":"2021-10-27"},{"lineNumber":123,"author":{"gitId":"houtenteo"},"content":"        assertFalse(predicate.test(new PersonBuilder().withGender(\"f\").build()));","lastModifiedDate":"2021-10-27"},{"lineNumber":124,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":125,"author":{"gitId":"houtenteo"},"content":"        // Multiple keywords all match -\u003e true","lastModifiedDate":"2021-10-27"},{"lineNumber":126,"author":{"gitId":"houtenteo"},"content":"        predicate \u003d new GenderContainsKeywordPredicate(Arrays.asList(\"f\", \"f\"), true);","lastModifiedDate":"2021-10-27"},{"lineNumber":127,"author":{"gitId":"houtenteo"},"content":"        assertTrue(predicate.test(new PersonBuilder().withGender(\"f\").build()));","lastModifiedDate":"2021-10-27"},{"lineNumber":128,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":129,"author":{"gitId":"houtenteo"},"content":"        // Only one matching keyword -\u003e false","lastModifiedDate":"2021-10-27"},{"lineNumber":130,"author":{"gitId":"houtenteo"},"content":"        predicate \u003d new GenderContainsKeywordPredicate(Arrays.asList(\"f\", \"m\"), true);","lastModifiedDate":"2021-10-27"},{"lineNumber":131,"author":{"gitId":"houtenteo"},"content":"        assertFalse(predicate.test(new PersonBuilder().withGender(\"m\").build()));","lastModifiedDate":"2021-10-27"},{"lineNumber":132,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":133,"author":{"gitId":"houtenteo"},"content":"        // Mixed-case keywords all match -\u003e true","lastModifiedDate":"2021-10-27"},{"lineNumber":134,"author":{"gitId":"houtenteo"},"content":"        predicate \u003d new GenderContainsKeywordPredicate(Arrays.asList(\"m\", \"MaLe\", \"M\"), true);","lastModifiedDate":"2021-10-27"},{"lineNumber":135,"author":{"gitId":"houtenteo"},"content":"        assertTrue(predicate.test(new PersonBuilder().withGender(\"m\").build()));","lastModifiedDate":"2021-10-27"},{"lineNumber":136,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":137,"author":{"gitId":"houtenteo"},"content":"        // Mixed-case keywords not all match -\u003e false","lastModifiedDate":"2021-10-27"},{"lineNumber":138,"author":{"gitId":"houtenteo"},"content":"        predicate \u003d new GenderContainsKeywordPredicate(Arrays.asList(\"m\", \"MaLe\", \"f\"), true);","lastModifiedDate":"2021-10-27"},{"lineNumber":139,"author":{"gitId":"houtenteo"},"content":"        assertFalse(predicate.test(new PersonBuilder().withGender(\"m\").build()));","lastModifiedDate":"2021-10-27"},{"lineNumber":140,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":141,"author":{"gitId":"houtenteo"},"content":"        // Keywords match name, phone, email, but does not match address -\u003e false","lastModifiedDate":"2021-10-27"},{"lineNumber":142,"author":{"gitId":"houtenteo"},"content":"        predicate \u003d new GenderContainsKeywordPredicate(Arrays.asList(","lastModifiedDate":"2021-10-27"},{"lineNumber":143,"author":{"gitId":"houtenteo"},"content":"                \"Alice\", \"87654321\", \"alice@email.com\"","lastModifiedDate":"2021-11-02"},{"lineNumber":144,"author":{"gitId":"houtenteo"},"content":"        ), true);","lastModifiedDate":"2021-10-27"},{"lineNumber":145,"author":{"gitId":"houtenteo"},"content":"        assertFalse(predicate.test(new PersonBuilder().withName(\"ALice\").withPhone(\"87654321\")","lastModifiedDate":"2021-11-02"},{"lineNumber":146,"author":{"gitId":"houtenteo"},"content":"                .withEmail(\"alice@email.com\").withGender(\"f\").build()));","lastModifiedDate":"2021-10-27"},{"lineNumber":147,"author":{"gitId":"houtenteo"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":148,"author":{"gitId":"houtenteo"},"content":"}","lastModifiedDate":"2021-10-27"},{"lineNumber":149,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-27"}],"authorContributionMap":{"houtenteo":149}},{"path":"src/test/java/seedu/address/model/person/predicates/InterestsContainsKeywordsPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"houtenteo"},"content":"package seedu.address.model.person.predicates;","lastModifiedDate":"2021-10-27"},{"lineNumber":2,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":3,"author":{"gitId":"houtenteo"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-27"},{"lineNumber":4,"author":{"gitId":"houtenteo"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-27"},{"lineNumber":5,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":6,"author":{"gitId":"houtenteo"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-10-27"},{"lineNumber":7,"author":{"gitId":"houtenteo"},"content":"import java.util.Collections;","lastModifiedDate":"2021-10-27"},{"lineNumber":8,"author":{"gitId":"houtenteo"},"content":"import java.util.List;","lastModifiedDate":"2021-10-27"},{"lineNumber":9,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":10,"author":{"gitId":"houtenteo"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-27"},{"lineNumber":11,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":12,"author":{"gitId":"houtenteo"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2021-10-27"},{"lineNumber":13,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":14,"author":{"gitId":"houtenteo"},"content":"public class InterestsContainsKeywordsPredicateTest {","lastModifiedDate":"2021-10-27"},{"lineNumber":15,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":16,"author":{"gitId":"houtenteo"},"content":"    @Test","lastModifiedDate":"2021-10-27"},{"lineNumber":17,"author":{"gitId":"houtenteo"},"content":"    public void equals() {","lastModifiedDate":"2021-10-27"},{"lineNumber":18,"author":{"gitId":"houtenteo"},"content":"        List\u003cString\u003e firstPredicateKeywordList \u003d Collections.singletonList(\"first\");","lastModifiedDate":"2021-10-27"},{"lineNumber":19,"author":{"gitId":"houtenteo"},"content":"        List\u003cString\u003e secondPredicateKeywordList \u003d Arrays.asList(\"first\", \"second\");","lastModifiedDate":"2021-10-27"},{"lineNumber":20,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":21,"author":{"gitId":"houtenteo"},"content":"        InterestContainsKeywordsPredicate firstPredicate \u003d new InterestContainsKeywordsPredicate(","lastModifiedDate":"2021-10-27"},{"lineNumber":22,"author":{"gitId":"houtenteo"},"content":"                firstPredicateKeywordList, false","lastModifiedDate":"2021-10-27"},{"lineNumber":23,"author":{"gitId":"houtenteo"},"content":"        );","lastModifiedDate":"2021-10-27"},{"lineNumber":24,"author":{"gitId":"houtenteo"},"content":"        InterestContainsKeywordsPredicate secondPredicate \u003d new InterestContainsKeywordsPredicate(","lastModifiedDate":"2021-10-27"},{"lineNumber":25,"author":{"gitId":"houtenteo"},"content":"                secondPredicateKeywordList, false","lastModifiedDate":"2021-10-27"},{"lineNumber":26,"author":{"gitId":"houtenteo"},"content":"        );","lastModifiedDate":"2021-10-27"},{"lineNumber":27,"author":{"gitId":"houtenteo"},"content":"        InterestContainsKeywordsPredicate thirdPredicate \u003d new InterestContainsKeywordsPredicate(","lastModifiedDate":"2021-10-27"},{"lineNumber":28,"author":{"gitId":"houtenteo"},"content":"                secondPredicateKeywordList, true","lastModifiedDate":"2021-10-27"},{"lineNumber":29,"author":{"gitId":"houtenteo"},"content":"        );","lastModifiedDate":"2021-10-27"},{"lineNumber":30,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":31,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":32,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":33,"author":{"gitId":"houtenteo"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-10-27"},{"lineNumber":34,"author":{"gitId":"houtenteo"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));","lastModifiedDate":"2021-10-27"},{"lineNumber":35,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":36,"author":{"gitId":"houtenteo"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2021-10-27"},{"lineNumber":37,"author":{"gitId":"houtenteo"},"content":"        InterestContainsKeywordsPredicate firstPredicateCopy \u003d new InterestContainsKeywordsPredicate(","lastModifiedDate":"2021-10-27"},{"lineNumber":38,"author":{"gitId":"houtenteo"},"content":"                firstPredicateKeywordList, false","lastModifiedDate":"2021-10-27"},{"lineNumber":39,"author":{"gitId":"houtenteo"},"content":"        );","lastModifiedDate":"2021-10-27"},{"lineNumber":40,"author":{"gitId":"houtenteo"},"content":"        assertTrue(firstPredicate.equals(firstPredicateCopy));","lastModifiedDate":"2021-10-27"},{"lineNumber":41,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":42,"author":{"gitId":"houtenteo"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2021-10-27"},{"lineNumber":43,"author":{"gitId":"houtenteo"},"content":"        assertFalse(firstPredicate.equals(1));","lastModifiedDate":"2021-10-27"},{"lineNumber":44,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":45,"author":{"gitId":"houtenteo"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-10-27"},{"lineNumber":46,"author":{"gitId":"houtenteo"},"content":"        assertFalse(firstPredicate.equals(null));","lastModifiedDate":"2021-10-27"},{"lineNumber":47,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":48,"author":{"gitId":"houtenteo"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2021-10-27"},{"lineNumber":49,"author":{"gitId":"houtenteo"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));","lastModifiedDate":"2021-10-27"},{"lineNumber":50,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":51,"author":{"gitId":"houtenteo"},"content":"        // different isFindAll -\u003e returns false","lastModifiedDate":"2021-10-27"},{"lineNumber":52,"author":{"gitId":"houtenteo"},"content":"        assertFalse(secondPredicate.equals(thirdPredicate));","lastModifiedDate":"2021-10-27"},{"lineNumber":53,"author":{"gitId":"houtenteo"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":54,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":55,"author":{"gitId":"houtenteo"},"content":"    @Test","lastModifiedDate":"2021-10-27"},{"lineNumber":56,"author":{"gitId":"houtenteo"},"content":"    public void test_addressContainsKeywords_returnsTrue() {","lastModifiedDate":"2021-10-27"},{"lineNumber":57,"author":{"gitId":"houtenteo"},"content":"        // One keyword","lastModifiedDate":"2021-10-27"},{"lineNumber":58,"author":{"gitId":"houtenteo"},"content":"        InterestContainsKeywordsPredicate predicate \u003d new InterestContainsKeywordsPredicate(","lastModifiedDate":"2021-10-27"},{"lineNumber":59,"author":{"gitId":"houtenteo"},"content":"                Collections.singletonList(\"Alice\"), false","lastModifiedDate":"2021-10-27"},{"lineNumber":60,"author":{"gitId":"houtenteo"},"content":"        );","lastModifiedDate":"2021-10-27"},{"lineNumber":61,"author":{"gitId":"houtenteo"},"content":"        assertTrue(predicate.test(new PersonBuilder().withInterest(\"Alice\").build()));","lastModifiedDate":"2021-10-27"},{"lineNumber":62,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":63,"author":{"gitId":"houtenteo"},"content":"        // Multiple keywords","lastModifiedDate":"2021-10-27"},{"lineNumber":64,"author":{"gitId":"houtenteo"},"content":"        predicate \u003d new InterestContainsKeywordsPredicate(Arrays.asList(\"Alice\", \"house\", \"run\"), false);","lastModifiedDate":"2021-10-27"},{"lineNumber":65,"author":{"gitId":"houtenteo"},"content":"        assertTrue(predicate.test(new PersonBuilder().withInterest(\"Alice house\", \"running\").build()));","lastModifiedDate":"2021-10-27"},{"lineNumber":66,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":67,"author":{"gitId":"houtenteo"},"content":"        // Only one matching keyword","lastModifiedDate":"2021-10-27"},{"lineNumber":68,"author":{"gitId":"houtenteo"},"content":"        predicate \u003d new InterestContainsKeywordsPredicate(Arrays.asList(\"eat\", \"house\"), false);","lastModifiedDate":"2021-10-27"},{"lineNumber":69,"author":{"gitId":"houtenteo"},"content":"        assertTrue(predicate.test(new PersonBuilder().withInterest(\"eating\", \"sleeping\").build()));","lastModifiedDate":"2021-10-27"},{"lineNumber":70,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":71,"author":{"gitId":"houtenteo"},"content":"        // Mixed-case keywords","lastModifiedDate":"2021-10-27"},{"lineNumber":72,"author":{"gitId":"houtenteo"},"content":"        predicate \u003d new InterestContainsKeywordsPredicate(Arrays.asList(\"eaTInG\", \"sLeEpIng\"), false);","lastModifiedDate":"2021-10-27"},{"lineNumber":73,"author":{"gitId":"houtenteo"},"content":"        assertTrue(predicate.test(new PersonBuilder().withInterest(\"eating\", \"sleeping\").build()));","lastModifiedDate":"2021-10-27"},{"lineNumber":74,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":75,"author":{"gitId":"houtenteo"},"content":"        // Substring keyword","lastModifiedDate":"2021-10-27"},{"lineNumber":76,"author":{"gitId":"houtenteo"},"content":"        predicate \u003d new InterestContainsKeywordsPredicate(Collections.singletonList(\"eep\"), false);","lastModifiedDate":"2021-10-27"},{"lineNumber":77,"author":{"gitId":"houtenteo"},"content":"        assertTrue(predicate.test(new PersonBuilder().withInterest(\"eating\", \"sleeping\").build()));","lastModifiedDate":"2021-10-27"},{"lineNumber":78,"author":{"gitId":"houtenteo"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":79,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":80,"author":{"gitId":"houtenteo"},"content":"    @Test","lastModifiedDate":"2021-10-27"},{"lineNumber":81,"author":{"gitId":"houtenteo"},"content":"    public void test_addressDoesNotContainKeywords_returnsFalse() {","lastModifiedDate":"2021-10-27"},{"lineNumber":82,"author":{"gitId":"houtenteo"},"content":"        // Zero keywords","lastModifiedDate":"2021-10-27"},{"lineNumber":83,"author":{"gitId":"houtenteo"},"content":"        InterestContainsKeywordsPredicate predicate \u003d new InterestContainsKeywordsPredicate(","lastModifiedDate":"2021-10-27"},{"lineNumber":84,"author":{"gitId":"houtenteo"},"content":"                Collections.emptyList(), false","lastModifiedDate":"2021-10-27"},{"lineNumber":85,"author":{"gitId":"houtenteo"},"content":"        );","lastModifiedDate":"2021-10-27"},{"lineNumber":86,"author":{"gitId":"houtenteo"},"content":"        assertFalse(predicate.test(new PersonBuilder().withInterest(\"eating\", \"sleeping\").build()));","lastModifiedDate":"2021-10-27"},{"lineNumber":87,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":88,"author":{"gitId":"houtenteo"},"content":"        // Non-matching keyword","lastModifiedDate":"2021-10-27"},{"lineNumber":89,"author":{"gitId":"houtenteo"},"content":"        predicate \u003d new InterestContainsKeywordsPredicate(Arrays.asList(\"Carol\"), false);","lastModifiedDate":"2021-10-27"},{"lineNumber":90,"author":{"gitId":"houtenteo"},"content":"        assertFalse(predicate.test(new PersonBuilder().withInterest(\"eating\", \"sleeping\").build()));","lastModifiedDate":"2021-10-27"},{"lineNumber":91,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":92,"author":{"gitId":"houtenteo"},"content":"        // Keywords match name, phone, email, but does not match interest","lastModifiedDate":"2021-10-27"},{"lineNumber":93,"author":{"gitId":"houtenteo"},"content":"        predicate \u003d new InterestContainsKeywordsPredicate(Arrays.asList(","lastModifiedDate":"2021-10-27"},{"lineNumber":94,"author":{"gitId":"houtenteo"},"content":"                \"Alice\", \"87654321\", \"alice@email.com\"","lastModifiedDate":"2021-11-02"},{"lineNumber":95,"author":{"gitId":"houtenteo"},"content":"        ), false);","lastModifiedDate":"2021-10-27"},{"lineNumber":96,"author":{"gitId":"houtenteo"},"content":"        assertFalse(predicate.test(new PersonBuilder().withName(\"ALice\").withPhone(\"87654321\")","lastModifiedDate":"2021-11-02"},{"lineNumber":97,"author":{"gitId":"houtenteo"},"content":"                .withEmail(\"alice@email.com\").withInterest(\"eating\", \"sleeping\").build()));","lastModifiedDate":"2021-10-27"},{"lineNumber":98,"author":{"gitId":"houtenteo"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":99,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":100,"author":{"gitId":"houtenteo"},"content":"    @Test","lastModifiedDate":"2021-10-27"},{"lineNumber":101,"author":{"gitId":"houtenteo"},"content":"    public void test_addressContainsKeywordsIsFindAll() {","lastModifiedDate":"2021-10-27"},{"lineNumber":102,"author":{"gitId":"houtenteo"},"content":"        // One keyword match -\u003e true","lastModifiedDate":"2021-10-27"},{"lineNumber":103,"author":{"gitId":"houtenteo"},"content":"        InterestContainsKeywordsPredicate predicate \u003d new InterestContainsKeywordsPredicate(","lastModifiedDate":"2021-10-27"},{"lineNumber":104,"author":{"gitId":"houtenteo"},"content":"                Collections.singletonList(\"eating\"), true","lastModifiedDate":"2021-10-27"},{"lineNumber":105,"author":{"gitId":"houtenteo"},"content":"        );","lastModifiedDate":"2021-10-27"},{"lineNumber":106,"author":{"gitId":"houtenteo"},"content":"        assertTrue(predicate.test(new PersonBuilder().withInterest(\"eating\", \"sleeping\").build()));","lastModifiedDate":"2021-10-27"},{"lineNumber":107,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":108,"author":{"gitId":"houtenteo"},"content":"        // One keyword no match -\u003e false","lastModifiedDate":"2021-10-27"},{"lineNumber":109,"author":{"gitId":"houtenteo"},"content":"        predicate \u003d new InterestContainsKeywordsPredicate(","lastModifiedDate":"2021-10-27"},{"lineNumber":110,"author":{"gitId":"houtenteo"},"content":"                Collections.singletonList(\"haha\"), true","lastModifiedDate":"2021-10-27"},{"lineNumber":111,"author":{"gitId":"houtenteo"},"content":"        );","lastModifiedDate":"2021-10-27"},{"lineNumber":112,"author":{"gitId":"houtenteo"},"content":"        assertFalse(predicate.test(new PersonBuilder().withInterest(\"eating\", \"sleeping\").build()));","lastModifiedDate":"2021-10-27"},{"lineNumber":113,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":114,"author":{"gitId":"houtenteo"},"content":"        // Multiple keywords all match -\u003e true","lastModifiedDate":"2021-10-27"},{"lineNumber":115,"author":{"gitId":"houtenteo"},"content":"        predicate \u003d new InterestContainsKeywordsPredicate(Arrays.asList(\"eat\", \"sleep\"), true);","lastModifiedDate":"2021-10-27"},{"lineNumber":116,"author":{"gitId":"houtenteo"},"content":"        assertTrue(predicate.test(new PersonBuilder().withInterest(\"eating\", \"sleeping\").build()));","lastModifiedDate":"2021-10-27"},{"lineNumber":117,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":118,"author":{"gitId":"houtenteo"},"content":"        // Only one matching keyword -\u003e false","lastModifiedDate":"2021-10-27"},{"lineNumber":119,"author":{"gitId":"houtenteo"},"content":"        predicate \u003d new InterestContainsKeywordsPredicate(Arrays.asList(\"eat\", \"Carol\"), true);","lastModifiedDate":"2021-10-27"},{"lineNumber":120,"author":{"gitId":"houtenteo"},"content":"        assertFalse(predicate.test(new PersonBuilder().withInterest(\"eating\", \"sleeping\").build()));","lastModifiedDate":"2021-10-27"},{"lineNumber":121,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":122,"author":{"gitId":"houtenteo"},"content":"        // Mixed-case keywords all match -\u003e true","lastModifiedDate":"2021-10-27"},{"lineNumber":123,"author":{"gitId":"houtenteo"},"content":"        predicate \u003d new InterestContainsKeywordsPredicate(Arrays.asList(\"eaTINg\", \"sLeEpInG\"), true);","lastModifiedDate":"2021-10-27"},{"lineNumber":124,"author":{"gitId":"houtenteo"},"content":"        assertTrue(predicate.test(new PersonBuilder().withInterest(\"eating\", \"sleeping\").build()));","lastModifiedDate":"2021-10-27"},{"lineNumber":125,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":126,"author":{"gitId":"houtenteo"},"content":"        // Mixed-case keywords not all match -\u003e false","lastModifiedDate":"2021-10-27"},{"lineNumber":127,"author":{"gitId":"houtenteo"},"content":"        predicate \u003d new InterestContainsKeywordsPredicate(Arrays.asList(\"sLeEpInG\", \"bOB\"), true);","lastModifiedDate":"2021-10-27"},{"lineNumber":128,"author":{"gitId":"houtenteo"},"content":"        assertFalse(predicate.test(new PersonBuilder().withInterest(\"eating\", \"sleeping\").build()));","lastModifiedDate":"2021-10-27"},{"lineNumber":129,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":130,"author":{"gitId":"houtenteo"},"content":"        // Keywords match name, phone, email, but does not match interests -\u003e false","lastModifiedDate":"2021-10-27"},{"lineNumber":131,"author":{"gitId":"houtenteo"},"content":"        predicate \u003d new InterestContainsKeywordsPredicate(Arrays.asList(","lastModifiedDate":"2021-10-27"},{"lineNumber":132,"author":{"gitId":"houtenteo"},"content":"                \"Alice\", \"87654321\", \"alice@email.com\"","lastModifiedDate":"2021-11-02"},{"lineNumber":133,"author":{"gitId":"houtenteo"},"content":"        ), true);","lastModifiedDate":"2021-10-27"},{"lineNumber":134,"author":{"gitId":"houtenteo"},"content":"        assertFalse(predicate.test(new PersonBuilder().withName(\"ALice\").withPhone(\"87654321\")","lastModifiedDate":"2021-11-02"},{"lineNumber":135,"author":{"gitId":"houtenteo"},"content":"                .withEmail(\"alice@email.com\").withInterest(\"eating\", \"sleeping\").build()));","lastModifiedDate":"2021-10-27"},{"lineNumber":136,"author":{"gitId":"houtenteo"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":137,"author":{"gitId":"houtenteo"},"content":"}","lastModifiedDate":"2021-10-27"},{"lineNumber":138,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-27"}],"authorContributionMap":{"houtenteo":138}},{"path":"src/test/java/seedu/address/model/person/predicates/NameContainsKeywordsPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"houtenteo"},"content":"package seedu.address.model.person.predicates;","lastModifiedDate":"2021-10-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-09-22"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-09-22"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-09-22"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2021-09-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2021-09-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-09-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2021-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class NameContainsKeywordsPredicateTest {","lastModifiedDate":"2021-09-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-09-22"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2021-09-22"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        List\u003cString\u003e firstPredicateKeywordList \u003d Collections.singletonList(\"first\");","lastModifiedDate":"2021-09-22"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        List\u003cString\u003e secondPredicateKeywordList \u003d Arrays.asList(\"first\", \"second\");","lastModifiedDate":"2021-09-22"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":21,"author":{"gitId":"houtenteo"},"content":"        NameContainsKeywordsPredicate firstPredicate \u003d new NameContainsKeywordsPredicate(","lastModifiedDate":"2021-10-26"},{"lineNumber":22,"author":{"gitId":"houtenteo"},"content":"                firstPredicateKeywordList, false","lastModifiedDate":"2021-10-26"},{"lineNumber":23,"author":{"gitId":"houtenteo"},"content":"        );","lastModifiedDate":"2021-10-26"},{"lineNumber":24,"author":{"gitId":"houtenteo"},"content":"        NameContainsKeywordsPredicate secondPredicate \u003d new NameContainsKeywordsPredicate(","lastModifiedDate":"2021-10-26"},{"lineNumber":25,"author":{"gitId":"houtenteo"},"content":"                secondPredicateKeywordList, false","lastModifiedDate":"2021-10-26"},{"lineNumber":26,"author":{"gitId":"houtenteo"},"content":"        );","lastModifiedDate":"2021-10-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-09-22"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));","lastModifiedDate":"2021-09-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2021-09-22"},{"lineNumber":32,"author":{"gitId":"houtenteo"},"content":"        NameContainsKeywordsPredicate firstPredicateCopy \u003d new NameContainsKeywordsPredicate(","lastModifiedDate":"2021-10-26"},{"lineNumber":33,"author":{"gitId":"houtenteo"},"content":"                firstPredicateKeywordList, false","lastModifiedDate":"2021-10-26"},{"lineNumber":34,"author":{"gitId":"houtenteo"},"content":"        );","lastModifiedDate":"2021-10-26"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertTrue(firstPredicate.equals(firstPredicateCopy));","lastModifiedDate":"2021-09-22"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2021-09-22"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(1));","lastModifiedDate":"2021-09-22"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-09-22"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(null));","lastModifiedDate":"2021-09-22"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2021-09-22"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));","lastModifiedDate":"2021-09-22"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-09-22"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public void test_nameContainsKeywords_returnsTrue() {","lastModifiedDate":"2021-09-22"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        // One keyword","lastModifiedDate":"2021-09-22"},{"lineNumber":50,"author":{"gitId":"houtenteo"},"content":"        NameContainsKeywordsPredicate predicate \u003d new NameContainsKeywordsPredicate(","lastModifiedDate":"2021-10-26"},{"lineNumber":51,"author":{"gitId":"houtenteo"},"content":"                Collections.singletonList(\"Alice\"), false","lastModifiedDate":"2021-10-26"},{"lineNumber":52,"author":{"gitId":"houtenteo"},"content":"        );","lastModifiedDate":"2021-10-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertTrue(predicate.test(new PersonBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2021-09-22"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // Multiple keywords","lastModifiedDate":"2021-09-22"},{"lineNumber":56,"author":{"gitId":"houtenteo"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Alice\", \"Bob\"), false);","lastModifiedDate":"2021-10-26"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertTrue(predicate.test(new PersonBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2021-09-22"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        // Only one matching keyword","lastModifiedDate":"2021-09-22"},{"lineNumber":60,"author":{"gitId":"houtenteo"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Bob\", \"Carol\"), false);","lastModifiedDate":"2021-10-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertTrue(predicate.test(new PersonBuilder().withName(\"Alice Carol\").build()));","lastModifiedDate":"2021-09-22"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        // Mixed-case keywords","lastModifiedDate":"2021-09-22"},{"lineNumber":64,"author":{"gitId":"houtenteo"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"aLIce\", \"bOB\"), false);","lastModifiedDate":"2021-10-26"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertTrue(predicate.test(new PersonBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2021-09-22"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-09-22"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void test_nameDoesNotContainKeywords_returnsFalse() {","lastModifiedDate":"2021-09-22"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        // Zero keywords","lastModifiedDate":"2021-09-22"},{"lineNumber":71,"author":{"gitId":"houtenteo"},"content":"        NameContainsKeywordsPredicate predicate \u003d new NameContainsKeywordsPredicate(Collections.emptyList(), false);","lastModifiedDate":"2021-10-26"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertFalse(predicate.test(new PersonBuilder().withName(\"Alice\").build()));","lastModifiedDate":"2021-09-22"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        // Non-matching keyword","lastModifiedDate":"2021-09-22"},{"lineNumber":75,"author":{"gitId":"houtenteo"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Carol\"), false);","lastModifiedDate":"2021-10-26"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertFalse(predicate.test(new PersonBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2021-09-22"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        // Keywords match phone, email and address, but does not match name","lastModifiedDate":"2021-09-22"},{"lineNumber":79,"author":{"gitId":"houtenteo"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(","lastModifiedDate":"2021-10-26"},{"lineNumber":80,"author":{"gitId":"houtenteo"},"content":"                \"87654321\", \"alice@email.com\", \"Main\", \"Street\"","lastModifiedDate":"2021-11-02"},{"lineNumber":81,"author":{"gitId":"houtenteo"},"content":"        ), false);","lastModifiedDate":"2021-10-26"},{"lineNumber":82,"author":{"gitId":"houtenteo"},"content":"        assertFalse(predicate.test(new PersonBuilder().withName(\"Alice\").withPhone(\"87654321\")","lastModifiedDate":"2021-11-02"},{"lineNumber":83,"author":{"gitId":"houtenteo"},"content":"                .withEmail(\"alice@email.com\").build()));","lastModifiedDate":"2021-09-22"},{"lineNumber":84,"author":{"gitId":"houtenteo"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":85,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":86,"author":{"gitId":"houtenteo"},"content":"    @Test","lastModifiedDate":"2021-10-27"},{"lineNumber":87,"author":{"gitId":"houtenteo"},"content":"    public void test_addressContainsKeywordsIsFindAll() {","lastModifiedDate":"2021-10-27"},{"lineNumber":88,"author":{"gitId":"houtenteo"},"content":"        // One keyword match -\u003e true","lastModifiedDate":"2021-10-27"},{"lineNumber":89,"author":{"gitId":"houtenteo"},"content":"        NameContainsKeywordsPredicate predicate \u003d new NameContainsKeywordsPredicate(","lastModifiedDate":"2021-10-27"},{"lineNumber":90,"author":{"gitId":"houtenteo"},"content":"                Collections.singletonList(\"Alice\"), true","lastModifiedDate":"2021-10-27"},{"lineNumber":91,"author":{"gitId":"houtenteo"},"content":"        );","lastModifiedDate":"2021-10-27"},{"lineNumber":92,"author":{"gitId":"houtenteo"},"content":"        assertTrue(predicate.test(new PersonBuilder().withName(\"Alice\").build()));","lastModifiedDate":"2021-10-27"},{"lineNumber":93,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":94,"author":{"gitId":"houtenteo"},"content":"        // One keyword no match -\u003e false","lastModifiedDate":"2021-10-27"},{"lineNumber":95,"author":{"gitId":"houtenteo"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(","lastModifiedDate":"2021-10-27"},{"lineNumber":96,"author":{"gitId":"houtenteo"},"content":"                Collections.singletonList(\"haha\"), true","lastModifiedDate":"2021-10-27"},{"lineNumber":97,"author":{"gitId":"houtenteo"},"content":"        );","lastModifiedDate":"2021-10-27"},{"lineNumber":98,"author":{"gitId":"houtenteo"},"content":"        assertFalse(predicate.test(new PersonBuilder().withName(\"Alice\").build()));","lastModifiedDate":"2021-10-27"},{"lineNumber":99,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":100,"author":{"gitId":"houtenteo"},"content":"        // Multiple keywords all match -\u003e true","lastModifiedDate":"2021-10-27"},{"lineNumber":101,"author":{"gitId":"houtenteo"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Alice\", \"27\"), true);","lastModifiedDate":"2021-10-27"},{"lineNumber":102,"author":{"gitId":"houtenteo"},"content":"        assertTrue(predicate.test(new PersonBuilder().withName(\"Alice the Legend27\").build()));","lastModifiedDate":"2021-10-27"},{"lineNumber":103,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":104,"author":{"gitId":"houtenteo"},"content":"        // Only one matching keyword -\u003e false","lastModifiedDate":"2021-10-27"},{"lineNumber":105,"author":{"gitId":"houtenteo"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"the\", \"Carol\"), true);","lastModifiedDate":"2021-10-27"},{"lineNumber":106,"author":{"gitId":"houtenteo"},"content":"        assertFalse(predicate.test(new PersonBuilder().withName(\"Alice the Legend27\").build()));","lastModifiedDate":"2021-10-27"},{"lineNumber":107,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":108,"author":{"gitId":"houtenteo"},"content":"        // Mixed-case keywords all match -\u003e true","lastModifiedDate":"2021-10-27"},{"lineNumber":109,"author":{"gitId":"houtenteo"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"aLIce\", \"LeGeNd27\"), true);","lastModifiedDate":"2021-10-27"},{"lineNumber":110,"author":{"gitId":"houtenteo"},"content":"        assertTrue(predicate.test(new PersonBuilder().withName(\"Alice the Legend27\").build()));","lastModifiedDate":"2021-10-27"},{"lineNumber":111,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":112,"author":{"gitId":"houtenteo"},"content":"        // Mixed-case keywords not all match -\u003e false","lastModifiedDate":"2021-10-27"},{"lineNumber":113,"author":{"gitId":"houtenteo"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"LeGeNd28\", \"bOB\"), true);","lastModifiedDate":"2021-10-27"},{"lineNumber":114,"author":{"gitId":"houtenteo"},"content":"        assertFalse(predicate.test(new PersonBuilder().withName(\"Alice the Legend27\").build()));","lastModifiedDate":"2021-10-27"},{"lineNumber":115,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":116,"author":{"gitId":"houtenteo"},"content":"        // Keywords match phone, email, but does not match name -\u003e false","lastModifiedDate":"2021-10-27"},{"lineNumber":117,"author":{"gitId":"houtenteo"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(","lastModifiedDate":"2021-10-27"},{"lineNumber":118,"author":{"gitId":"houtenteo"},"content":"                \"87654321\", \"alice@email.com\"","lastModifiedDate":"2021-11-02"},{"lineNumber":119,"author":{"gitId":"houtenteo"},"content":"        ), true);","lastModifiedDate":"2021-10-27"},{"lineNumber":120,"author":{"gitId":"houtenteo"},"content":"        assertFalse(predicate.test(new PersonBuilder().withName(\"Alice the Legend27\").withPhone(\"87654321\")","lastModifiedDate":"2021-11-02"},{"lineNumber":121,"author":{"gitId":"houtenteo"},"content":"                .withEmail(\"alice@email.com\").build()));","lastModifiedDate":"2021-10-27"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":123,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-09-22"}],"authorContributionMap":{"houtenteo":61,"-":62}},{"path":"src/test/java/seedu/address/model/person/predicates/PhoneContainsNumberPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"houtenteo"},"content":"package seedu.address.model.person.predicates;","lastModifiedDate":"2021-10-27"},{"lineNumber":2,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":3,"author":{"gitId":"houtenteo"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-27"},{"lineNumber":4,"author":{"gitId":"houtenteo"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-27"},{"lineNumber":5,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":6,"author":{"gitId":"houtenteo"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-10-27"},{"lineNumber":7,"author":{"gitId":"houtenteo"},"content":"import java.util.Collections;","lastModifiedDate":"2021-10-27"},{"lineNumber":8,"author":{"gitId":"houtenteo"},"content":"import java.util.List;","lastModifiedDate":"2021-10-27"},{"lineNumber":9,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":10,"author":{"gitId":"houtenteo"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-27"},{"lineNumber":11,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":12,"author":{"gitId":"houtenteo"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2021-10-27"},{"lineNumber":13,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":14,"author":{"gitId":"houtenteo"},"content":"public class PhoneContainsNumberPredicateTest {","lastModifiedDate":"2021-10-27"},{"lineNumber":15,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":16,"author":{"gitId":"houtenteo"},"content":"    @Test","lastModifiedDate":"2021-10-27"},{"lineNumber":17,"author":{"gitId":"houtenteo"},"content":"    public void equals() {","lastModifiedDate":"2021-10-27"},{"lineNumber":18,"author":{"gitId":"houtenteo"},"content":"        List\u003cString\u003e firstPredicateKeywordList \u003d Collections.singletonList(\"first\");","lastModifiedDate":"2021-10-27"},{"lineNumber":19,"author":{"gitId":"houtenteo"},"content":"        List\u003cString\u003e secondPredicateKeywordList \u003d Arrays.asList(\"first\", \"second\");","lastModifiedDate":"2021-10-27"},{"lineNumber":20,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":21,"author":{"gitId":"houtenteo"},"content":"        PhoneContainsNumberPredicate firstPredicate \u003d new PhoneContainsNumberPredicate(","lastModifiedDate":"2021-10-27"},{"lineNumber":22,"author":{"gitId":"houtenteo"},"content":"                firstPredicateKeywordList, false","lastModifiedDate":"2021-10-27"},{"lineNumber":23,"author":{"gitId":"houtenteo"},"content":"        );","lastModifiedDate":"2021-10-27"},{"lineNumber":24,"author":{"gitId":"houtenteo"},"content":"        PhoneContainsNumberPredicate secondPredicate \u003d new PhoneContainsNumberPredicate(","lastModifiedDate":"2021-10-27"},{"lineNumber":25,"author":{"gitId":"houtenteo"},"content":"                secondPredicateKeywordList, false","lastModifiedDate":"2021-10-27"},{"lineNumber":26,"author":{"gitId":"houtenteo"},"content":"        );","lastModifiedDate":"2021-10-27"},{"lineNumber":27,"author":{"gitId":"houtenteo"},"content":"        PhoneContainsNumberPredicate thirdPredicate \u003d new PhoneContainsNumberPredicate(","lastModifiedDate":"2021-10-27"},{"lineNumber":28,"author":{"gitId":"houtenteo"},"content":"                secondPredicateKeywordList, true","lastModifiedDate":"2021-10-27"},{"lineNumber":29,"author":{"gitId":"houtenteo"},"content":"        );","lastModifiedDate":"2021-10-27"},{"lineNumber":30,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":31,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":32,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":33,"author":{"gitId":"houtenteo"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-10-27"},{"lineNumber":34,"author":{"gitId":"houtenteo"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));","lastModifiedDate":"2021-10-27"},{"lineNumber":35,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":36,"author":{"gitId":"houtenteo"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2021-10-27"},{"lineNumber":37,"author":{"gitId":"houtenteo"},"content":"        PhoneContainsNumberPredicate firstPredicateCopy \u003d new PhoneContainsNumberPredicate(","lastModifiedDate":"2021-10-27"},{"lineNumber":38,"author":{"gitId":"houtenteo"},"content":"                firstPredicateKeywordList, false","lastModifiedDate":"2021-10-27"},{"lineNumber":39,"author":{"gitId":"houtenteo"},"content":"        );","lastModifiedDate":"2021-10-27"},{"lineNumber":40,"author":{"gitId":"houtenteo"},"content":"        assertTrue(firstPredicate.equals(firstPredicateCopy));","lastModifiedDate":"2021-10-27"},{"lineNumber":41,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":42,"author":{"gitId":"houtenteo"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2021-10-27"},{"lineNumber":43,"author":{"gitId":"houtenteo"},"content":"        assertFalse(firstPredicate.equals(1));","lastModifiedDate":"2021-10-27"},{"lineNumber":44,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":45,"author":{"gitId":"houtenteo"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-10-27"},{"lineNumber":46,"author":{"gitId":"houtenteo"},"content":"        assertFalse(firstPredicate.equals(null));","lastModifiedDate":"2021-10-27"},{"lineNumber":47,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":48,"author":{"gitId":"houtenteo"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2021-10-27"},{"lineNumber":49,"author":{"gitId":"houtenteo"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));","lastModifiedDate":"2021-10-27"},{"lineNumber":50,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":51,"author":{"gitId":"houtenteo"},"content":"        // different isFindAll -\u003e returns false","lastModifiedDate":"2021-10-27"},{"lineNumber":52,"author":{"gitId":"houtenteo"},"content":"        assertFalse(secondPredicate.equals(thirdPredicate));","lastModifiedDate":"2021-10-27"},{"lineNumber":53,"author":{"gitId":"houtenteo"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":54,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":55,"author":{"gitId":"houtenteo"},"content":"    @Test","lastModifiedDate":"2021-10-27"},{"lineNumber":56,"author":{"gitId":"houtenteo"},"content":"    public void test_addressContainsKeywords_returnsTrue() {","lastModifiedDate":"2021-10-27"},{"lineNumber":57,"author":{"gitId":"houtenteo"},"content":"        // One keyword","lastModifiedDate":"2021-10-27"},{"lineNumber":58,"author":{"gitId":"houtenteo"},"content":"        PhoneContainsNumberPredicate predicate \u003d new PhoneContainsNumberPredicate(","lastModifiedDate":"2021-10-27"},{"lineNumber":59,"author":{"gitId":"houtenteo"},"content":"                Collections.singletonList(\"62353535\"), false","lastModifiedDate":"2021-10-27"},{"lineNumber":60,"author":{"gitId":"houtenteo"},"content":"        );","lastModifiedDate":"2021-10-27"},{"lineNumber":61,"author":{"gitId":"houtenteo"},"content":"        assertTrue(predicate.test(new PersonBuilder().withPhone(\"62353535\").build()));","lastModifiedDate":"2021-10-27"},{"lineNumber":62,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":63,"author":{"gitId":"houtenteo"},"content":"        // Multiple keywords","lastModifiedDate":"2021-10-27"},{"lineNumber":64,"author":{"gitId":"houtenteo"},"content":"        predicate \u003d new PhoneContainsNumberPredicate(Arrays.asList(\"623535\", \"62353535\"), false);","lastModifiedDate":"2021-10-27"},{"lineNumber":65,"author":{"gitId":"houtenteo"},"content":"        assertTrue(predicate.test(new PersonBuilder().withPhone(\"62353535\").build()));","lastModifiedDate":"2021-10-27"},{"lineNumber":66,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":67,"author":{"gitId":"houtenteo"},"content":"        // Only one matching keyword","lastModifiedDate":"2021-10-27"},{"lineNumber":68,"author":{"gitId":"houtenteo"},"content":"        predicate \u003d new PhoneContainsNumberPredicate(Arrays.asList(\"62353535\", \"999\"), false);","lastModifiedDate":"2021-10-27"},{"lineNumber":69,"author":{"gitId":"houtenteo"},"content":"        assertTrue(predicate.test(new PersonBuilder().withPhone(\"62353535\").build()));","lastModifiedDate":"2021-10-27"},{"lineNumber":70,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":71,"author":{"gitId":"houtenteo"},"content":"        // Substring keyword","lastModifiedDate":"2021-10-27"},{"lineNumber":72,"author":{"gitId":"houtenteo"},"content":"        predicate \u003d new PhoneContainsNumberPredicate(Collections.singletonList(\"235\"), false);","lastModifiedDate":"2021-10-27"},{"lineNumber":73,"author":{"gitId":"houtenteo"},"content":"        assertTrue(predicate.test(new PersonBuilder().withPhone(\"62353535\").build()));","lastModifiedDate":"2021-10-27"},{"lineNumber":74,"author":{"gitId":"houtenteo"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":75,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":76,"author":{"gitId":"houtenteo"},"content":"    @Test","lastModifiedDate":"2021-10-27"},{"lineNumber":77,"author":{"gitId":"houtenteo"},"content":"    public void test_addressDoesNotContainKeywords_returnsFalse() {","lastModifiedDate":"2021-10-27"},{"lineNumber":78,"author":{"gitId":"houtenteo"},"content":"        // Zero keywords","lastModifiedDate":"2021-10-27"},{"lineNumber":79,"author":{"gitId":"houtenteo"},"content":"        PhoneContainsNumberPredicate predicate \u003d new PhoneContainsNumberPredicate(","lastModifiedDate":"2021-10-27"},{"lineNumber":80,"author":{"gitId":"houtenteo"},"content":"                Collections.emptyList(), false","lastModifiedDate":"2021-10-27"},{"lineNumber":81,"author":{"gitId":"houtenteo"},"content":"        );","lastModifiedDate":"2021-10-27"},{"lineNumber":82,"author":{"gitId":"houtenteo"},"content":"        assertFalse(predicate.test(new PersonBuilder().withPhone(\"62353535\").build()));","lastModifiedDate":"2021-10-27"},{"lineNumber":83,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":84,"author":{"gitId":"houtenteo"},"content":"        // Non-matching keyword","lastModifiedDate":"2021-10-27"},{"lineNumber":85,"author":{"gitId":"houtenteo"},"content":"        predicate \u003d new PhoneContainsNumberPredicate(Arrays.asList(\"Carol\"), false);","lastModifiedDate":"2021-10-27"},{"lineNumber":86,"author":{"gitId":"houtenteo"},"content":"        assertFalse(predicate.test(new PersonBuilder().withPhone(\"62353535\").build()));","lastModifiedDate":"2021-10-27"},{"lineNumber":87,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":88,"author":{"gitId":"houtenteo"},"content":"        // Keywords match name,email, but does not match phone","lastModifiedDate":"2021-10-27"},{"lineNumber":89,"author":{"gitId":"houtenteo"},"content":"        predicate \u003d new PhoneContainsNumberPredicate(Arrays.asList(","lastModifiedDate":"2021-10-27"},{"lineNumber":90,"author":{"gitId":"houtenteo"},"content":"                \"Alice\", \"alice@email.com\"","lastModifiedDate":"2021-10-27"},{"lineNumber":91,"author":{"gitId":"houtenteo"},"content":"        ), false);","lastModifiedDate":"2021-10-27"},{"lineNumber":92,"author":{"gitId":"houtenteo"},"content":"        assertFalse(predicate.test(new PersonBuilder().withName(\"ALice\").withPhone(\"62353535\")","lastModifiedDate":"2021-10-27"},{"lineNumber":93,"author":{"gitId":"houtenteo"},"content":"                .withEmail(\"alice@email.com\").build()));","lastModifiedDate":"2021-10-27"},{"lineNumber":94,"author":{"gitId":"houtenteo"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":95,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":96,"author":{"gitId":"houtenteo"},"content":"    @Test","lastModifiedDate":"2021-10-27"},{"lineNumber":97,"author":{"gitId":"houtenteo"},"content":"    public void test_addressContainsKeywordsIsFindAll() {","lastModifiedDate":"2021-10-27"},{"lineNumber":98,"author":{"gitId":"houtenteo"},"content":"        // One keyword match -\u003e true","lastModifiedDate":"2021-10-27"},{"lineNumber":99,"author":{"gitId":"houtenteo"},"content":"        PhoneContainsNumberPredicate predicate \u003d new PhoneContainsNumberPredicate(","lastModifiedDate":"2021-10-27"},{"lineNumber":100,"author":{"gitId":"houtenteo"},"content":"                Collections.singletonList(\"62353535\"), true","lastModifiedDate":"2021-10-27"},{"lineNumber":101,"author":{"gitId":"houtenteo"},"content":"        );","lastModifiedDate":"2021-10-27"},{"lineNumber":102,"author":{"gitId":"houtenteo"},"content":"        assertTrue(predicate.test(new PersonBuilder().withPhone(\"62353535\").build()));","lastModifiedDate":"2021-10-27"},{"lineNumber":103,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":104,"author":{"gitId":"houtenteo"},"content":"        // One keyword no match -\u003e false","lastModifiedDate":"2021-10-27"},{"lineNumber":105,"author":{"gitId":"houtenteo"},"content":"        predicate \u003d new PhoneContainsNumberPredicate(","lastModifiedDate":"2021-10-27"},{"lineNumber":106,"author":{"gitId":"houtenteo"},"content":"                Collections.singletonList(\"haha\"), true","lastModifiedDate":"2021-10-27"},{"lineNumber":107,"author":{"gitId":"houtenteo"},"content":"        );","lastModifiedDate":"2021-10-27"},{"lineNumber":108,"author":{"gitId":"houtenteo"},"content":"        assertFalse(predicate.test(new PersonBuilder().withPhone(\"62353535\").build()));","lastModifiedDate":"2021-10-27"},{"lineNumber":109,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":110,"author":{"gitId":"houtenteo"},"content":"        // Multiple keywords all match -\u003e true","lastModifiedDate":"2021-10-27"},{"lineNumber":111,"author":{"gitId":"houtenteo"},"content":"        predicate \u003d new PhoneContainsNumberPredicate(Arrays.asList(\"62353535\", \"3535\"), true);","lastModifiedDate":"2021-10-27"},{"lineNumber":112,"author":{"gitId":"houtenteo"},"content":"        assertTrue(predicate.test(new PersonBuilder().withPhone(\"62353535\").build()));","lastModifiedDate":"2021-10-27"},{"lineNumber":113,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":114,"author":{"gitId":"houtenteo"},"content":"        // Only one matching keyword -\u003e false","lastModifiedDate":"2021-10-27"},{"lineNumber":115,"author":{"gitId":"houtenteo"},"content":"        predicate \u003d new PhoneContainsNumberPredicate(Arrays.asList(\"3535\", \"number\"), true);","lastModifiedDate":"2021-10-27"},{"lineNumber":116,"author":{"gitId":"houtenteo"},"content":"        assertFalse(predicate.test(new PersonBuilder().withPhone(\"62353535\").build()));","lastModifiedDate":"2021-10-27"},{"lineNumber":117,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":118,"author":{"gitId":"houtenteo"},"content":"        // Mixed-case keywords not all match -\u003e false","lastModifiedDate":"2021-10-27"},{"lineNumber":119,"author":{"gitId":"houtenteo"},"content":"        predicate \u003d new PhoneContainsNumberPredicate(Arrays.asList(\"62353535\", \"bOB\"), true);","lastModifiedDate":"2021-10-27"},{"lineNumber":120,"author":{"gitId":"houtenteo"},"content":"        assertFalse(predicate.test(new PersonBuilder().withPhone(\"62353535\").build()));","lastModifiedDate":"2021-10-27"},{"lineNumber":121,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":122,"author":{"gitId":"houtenteo"},"content":"        // Keywords match name,email, but does not match phone -\u003e false","lastModifiedDate":"2021-10-27"},{"lineNumber":123,"author":{"gitId":"houtenteo"},"content":"        predicate \u003d new PhoneContainsNumberPredicate(Arrays.asList(","lastModifiedDate":"2021-10-27"},{"lineNumber":124,"author":{"gitId":"houtenteo"},"content":"                \"Alice\", \"alice@email.com\"","lastModifiedDate":"2021-10-27"},{"lineNumber":125,"author":{"gitId":"houtenteo"},"content":"        ), true);","lastModifiedDate":"2021-10-27"},{"lineNumber":126,"author":{"gitId":"houtenteo"},"content":"        assertFalse(predicate.test(new PersonBuilder().withName(\"ALice\").withPhone(\"62353535\")","lastModifiedDate":"2021-10-27"},{"lineNumber":127,"author":{"gitId":"houtenteo"},"content":"                .withEmail(\"alice@email.com\").build()));","lastModifiedDate":"2021-10-27"},{"lineNumber":128,"author":{"gitId":"houtenteo"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":129,"author":{"gitId":"houtenteo"},"content":"}","lastModifiedDate":"2021-10-27"},{"lineNumber":130,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-27"}],"authorContributionMap":{"houtenteo":130}},{"path":"src/test/java/seedu/address/storage/CsvAdaptedPersonTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"idgrr"},"content":"package seedu.address.storage;","lastModifiedDate":"2021-09-29"},{"lineNumber":2,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":3,"author":{"gitId":"idgrr"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-09-29"},{"lineNumber":4,"author":{"gitId":"idgrr"},"content":"import static seedu.address.storage.CsvAdaptedPerson.MISSING_FIELD_MESSAGE_FORMAT;","lastModifiedDate":"2021-09-29"},{"lineNumber":5,"author":{"gitId":"idgrr"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2021-09-29"},{"lineNumber":6,"author":{"gitId":"idgrr"},"content":"import static seedu.address.testutil.TypicalPersons.BENSON;","lastModifiedDate":"2021-09-29"},{"lineNumber":7,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":8,"author":{"gitId":"idgrr"},"content":"import java.util.List;","lastModifiedDate":"2021-10-19"},{"lineNumber":9,"author":{"gitId":"idgrr"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2021-10-19"},{"lineNumber":10,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":11,"author":{"gitId":"idgrr"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-09-29"},{"lineNumber":12,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":13,"author":{"gitId":"idgrr"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2021-09-29"},{"lineNumber":14,"author":{"gitId":"idgrr"},"content":"import seedu.address.model.person.Age;","lastModifiedDate":"2021-10-19"},{"lineNumber":15,"author":{"gitId":"idgrr"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2021-09-29"},{"lineNumber":16,"author":{"gitId":"idgrr"},"content":"import seedu.address.model.person.Gender;","lastModifiedDate":"2021-10-19"},{"lineNumber":17,"author":{"gitId":"pranav-ganesh"},"content":"import seedu.address.model.person.IsCalled;","lastModifiedDate":"2021-11-04"},{"lineNumber":18,"author":{"gitId":"idgrr"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2021-09-29"},{"lineNumber":19,"author":{"gitId":"idgrr"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2021-09-29"},{"lineNumber":20,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":21,"author":{"gitId":"idgrr"},"content":"class CsvAdaptedPersonTest {","lastModifiedDate":"2021-09-29"},{"lineNumber":22,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":23,"author":{"gitId":"idgrr"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2021-09-29"},{"lineNumber":24,"author":{"gitId":"idgrr"},"content":"    private static final String INVALID_PHONE \u003d \"+651234\";","lastModifiedDate":"2021-09-29"},{"lineNumber":25,"author":{"gitId":"idgrr"},"content":"    private static final String INVALID_EMAIL \u003d \"example.com\";","lastModifiedDate":"2021-09-29"},{"lineNumber":26,"author":{"gitId":"idgrr"},"content":"    private static final String INVALID_GENDER \u003d \"APACHE HELICOPTER\";","lastModifiedDate":"2021-10-19"},{"lineNumber":27,"author":{"gitId":"idgrr"},"content":"    private static final String INVALID_AGE \u003d \"Eighteen\";","lastModifiedDate":"2021-10-19"},{"lineNumber":28,"author":{"gitId":"pranav-ganesh"},"content":"    private static final String INVALID_ISCALLED \u003d \"notCalled\";","lastModifiedDate":"2021-11-04"},{"lineNumber":29,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":30,"author":{"gitId":"idgrr"},"content":"    private static final String VALID_NAME \u003d BENSON.getName().toString();","lastModifiedDate":"2021-09-29"},{"lineNumber":31,"author":{"gitId":"idgrr"},"content":"    private static final String VALID_PHONE \u003d BENSON.getPhone().toString();","lastModifiedDate":"2021-09-29"},{"lineNumber":32,"author":{"gitId":"idgrr"},"content":"    private static final String VALID_EMAIL \u003d BENSON.getEmail().toString();","lastModifiedDate":"2021-09-29"},{"lineNumber":33,"author":{"gitId":"pranav-ganesh"},"content":"    private static final String VALID_ISCALLED \u003d BENSON.getIsCalled().toString();","lastModifiedDate":"2021-11-04"},{"lineNumber":34,"author":{"gitId":"idgrr"},"content":"    private static final String VALID_ADDRESS \u003d BENSON.getAddress().toString();","lastModifiedDate":"2021-10-19"},{"lineNumber":35,"author":{"gitId":"idgrr"},"content":"    private static final String VALID_GENDER \u003d BENSON.getGender().toString();","lastModifiedDate":"2021-10-19"},{"lineNumber":36,"author":{"gitId":"idgrr"},"content":"    private static final String VALID_AGE \u003d BENSON.getAge().toString();","lastModifiedDate":"2021-10-19"},{"lineNumber":37,"author":{"gitId":"idgrr"},"content":"    private static final List\u003cJsonAdaptedInterest\u003e VALID_INTERESTS \u003d BENSON.getInterests().getAllInterests().stream()","lastModifiedDate":"2021-10-19"},{"lineNumber":38,"author":{"gitId":"idgrr"},"content":"            .map(JsonAdaptedInterest::new)","lastModifiedDate":"2021-10-19"},{"lineNumber":39,"author":{"gitId":"idgrr"},"content":"            .collect(Collectors.toList());","lastModifiedDate":"2021-10-19"},{"lineNumber":40,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":41,"author":{"gitId":"idgrr"},"content":"    @Test","lastModifiedDate":"2021-09-29"},{"lineNumber":42,"author":{"gitId":"idgrr"},"content":"    public void toModelType_validPersonDetails_returnsPerson() throws Exception {","lastModifiedDate":"2021-09-29"},{"lineNumber":43,"author":{"gitId":"idgrr"},"content":"        CsvAdaptedPerson person \u003d new CsvAdaptedPerson(BENSON);","lastModifiedDate":"2021-09-29"},{"lineNumber":44,"author":{"gitId":"idgrr"},"content":"        assertEquals(BENSON, person.toModelType());","lastModifiedDate":"2021-09-29"},{"lineNumber":45,"author":{"gitId":"idgrr"},"content":"    }","lastModifiedDate":"2021-09-29"},{"lineNumber":46,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":47,"author":{"gitId":"idgrr"},"content":"    @Test","lastModifiedDate":"2021-09-29"},{"lineNumber":48,"author":{"gitId":"idgrr"},"content":"    public void toModelType_invalidName_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2021-10-06"},{"lineNumber":49,"author":{"gitId":"idgrr"},"content":"        String csvString \u003d INVALID_NAME + \";\" + VALID_PHONE + \";\" + VALID_EMAIL + \";\" + VALID_ADDRESS","lastModifiedDate":"2021-10-19"},{"lineNumber":50,"author":{"gitId":"pranav-ganesh"},"content":"                + \";\" + VALID_GENDER + \";\" + VALID_AGE + \";\" + VALID_INTERESTS + \";\" + VALID_ISCALLED;","lastModifiedDate":"2021-11-04"},{"lineNumber":51,"author":{"gitId":"idgrr"},"content":"        CsvAdaptedPerson person \u003d new CsvAdaptedPerson(csvString);","lastModifiedDate":"2021-09-29"},{"lineNumber":52,"author":{"gitId":"idgrr"},"content":"        String expectedMessage \u003d Name.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2021-09-29"},{"lineNumber":53,"author":{"gitId":"idgrr"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2021-09-29"},{"lineNumber":54,"author":{"gitId":"idgrr"},"content":"    }","lastModifiedDate":"2021-09-29"},{"lineNumber":55,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":56,"author":{"gitId":"idgrr"},"content":"    @Test","lastModifiedDate":"2021-09-29"},{"lineNumber":57,"author":{"gitId":"idgrr"},"content":"    public void toModelType_emptyName_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2021-10-06"},{"lineNumber":58,"author":{"gitId":"idgrr"},"content":"        String csvString \u003d \";\" + VALID_PHONE + \";\" + VALID_EMAIL + \";\" + VALID_ADDRESS","lastModifiedDate":"2021-10-19"},{"lineNumber":59,"author":{"gitId":"pranav-ganesh"},"content":"                        + \";\" + VALID_GENDER + \";\" + VALID_AGE + \";\" + VALID_INTERESTS + \";\" + VALID_ISCALLED;","lastModifiedDate":"2021-11-04"},{"lineNumber":60,"author":{"gitId":"idgrr"},"content":"        CsvAdaptedPerson person \u003d new CsvAdaptedPerson(csvString);","lastModifiedDate":"2021-09-29"},{"lineNumber":61,"author":{"gitId":"idgrr"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName());","lastModifiedDate":"2021-09-29"},{"lineNumber":62,"author":{"gitId":"idgrr"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2021-09-29"},{"lineNumber":63,"author":{"gitId":"idgrr"},"content":"    }","lastModifiedDate":"2021-09-29"},{"lineNumber":64,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":65,"author":{"gitId":"idgrr"},"content":"    @Test","lastModifiedDate":"2021-09-29"},{"lineNumber":66,"author":{"gitId":"idgrr"},"content":"    public void toModelType_invalidPhone_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2021-10-06"},{"lineNumber":67,"author":{"gitId":"idgrr"},"content":"        String csvString \u003d VALID_NAME + \";\" + INVALID_PHONE + \";\" + VALID_EMAIL + \";\" + VALID_ADDRESS","lastModifiedDate":"2021-10-19"},{"lineNumber":68,"author":{"gitId":"pranav-ganesh"},"content":"                + \";\" + VALID_GENDER + \";\" + VALID_AGE + \";\" + VALID_INTERESTS + \";\" + VALID_ISCALLED;","lastModifiedDate":"2021-11-04"},{"lineNumber":69,"author":{"gitId":"idgrr"},"content":"        CsvAdaptedPerson person \u003d new CsvAdaptedPerson(csvString);","lastModifiedDate":"2021-09-29"},{"lineNumber":70,"author":{"gitId":"idgrr"},"content":"        String expectedMessage \u003d Phone.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2021-09-29"},{"lineNumber":71,"author":{"gitId":"idgrr"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2021-09-29"},{"lineNumber":72,"author":{"gitId":"idgrr"},"content":"    }","lastModifiedDate":"2021-09-29"},{"lineNumber":73,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":74,"author":{"gitId":"idgrr"},"content":"    @Test","lastModifiedDate":"2021-09-29"},{"lineNumber":75,"author":{"gitId":"idgrr"},"content":"    public void toModelType_emptyPhone_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2021-10-06"},{"lineNumber":76,"author":{"gitId":"idgrr"},"content":"        String csvString \u003d VALID_NAME + \";;\" + VALID_EMAIL + \";\" + VALID_ADDRESS","lastModifiedDate":"2021-10-19"},{"lineNumber":77,"author":{"gitId":"pranav-ganesh"},"content":"                + \";\" + VALID_GENDER + \";\" + VALID_AGE + \";\" + VALID_INTERESTS + \";\" + VALID_ISCALLED;","lastModifiedDate":"2021-11-04"},{"lineNumber":78,"author":{"gitId":"idgrr"},"content":"        CsvAdaptedPerson person \u003d new CsvAdaptedPerson(csvString);","lastModifiedDate":"2021-09-29"},{"lineNumber":79,"author":{"gitId":"idgrr"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName());","lastModifiedDate":"2021-09-29"},{"lineNumber":80,"author":{"gitId":"idgrr"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2021-09-29"},{"lineNumber":81,"author":{"gitId":"idgrr"},"content":"    }","lastModifiedDate":"2021-09-29"},{"lineNumber":82,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":83,"author":{"gitId":"idgrr"},"content":"    @Test","lastModifiedDate":"2021-09-29"},{"lineNumber":84,"author":{"gitId":"idgrr"},"content":"    public void toModelType_invalidEmail_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2021-10-06"},{"lineNumber":85,"author":{"gitId":"idgrr"},"content":"        String csvString \u003d VALID_NAME + \";\" + VALID_PHONE + \";\" + INVALID_EMAIL + \";\" + VALID_ADDRESS","lastModifiedDate":"2021-10-19"},{"lineNumber":86,"author":{"gitId":"pranav-ganesh"},"content":"                + \";\" + VALID_GENDER + \";\" + VALID_AGE + \";\" + VALID_INTERESTS + \";\" + VALID_ISCALLED;","lastModifiedDate":"2021-11-04"},{"lineNumber":87,"author":{"gitId":"idgrr"},"content":"        CsvAdaptedPerson person \u003d new CsvAdaptedPerson(csvString);","lastModifiedDate":"2021-09-29"},{"lineNumber":88,"author":{"gitId":"idgrr"},"content":"        String expectedMessage \u003d Email.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2021-09-29"},{"lineNumber":89,"author":{"gitId":"idgrr"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2021-09-29"},{"lineNumber":90,"author":{"gitId":"idgrr"},"content":"    }","lastModifiedDate":"2021-09-29"},{"lineNumber":91,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":92,"author":{"gitId":"idgrr"},"content":"    @Test","lastModifiedDate":"2021-09-29"},{"lineNumber":93,"author":{"gitId":"idgrr"},"content":"    public void toModelType_emptyEmail_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2021-10-06"},{"lineNumber":94,"author":{"gitId":"idgrr"},"content":"        String csvString \u003d VALID_NAME + \";\" + VALID_PHONE + \";;\" + VALID_ADDRESS","lastModifiedDate":"2021-10-19"},{"lineNumber":95,"author":{"gitId":"pranav-ganesh"},"content":"                + \";\" + VALID_GENDER + \";\" + VALID_AGE + \";\" + VALID_INTERESTS + \";\" + VALID_ISCALLED;","lastModifiedDate":"2021-11-04"},{"lineNumber":96,"author":{"gitId":"idgrr"},"content":"        CsvAdaptedPerson person \u003d new CsvAdaptedPerson(csvString);","lastModifiedDate":"2021-09-29"},{"lineNumber":97,"author":{"gitId":"idgrr"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName());","lastModifiedDate":"2021-09-29"},{"lineNumber":98,"author":{"gitId":"idgrr"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2021-09-29"},{"lineNumber":99,"author":{"gitId":"idgrr"},"content":"    }","lastModifiedDate":"2021-09-29"},{"lineNumber":100,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":101,"author":{"gitId":"idgrr"},"content":"    @Test","lastModifiedDate":"2021-10-19"},{"lineNumber":102,"author":{"gitId":"idgrr"},"content":"    public void toModelType_invalidGender_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2021-10-19"},{"lineNumber":103,"author":{"gitId":"idgrr"},"content":"        String csvString \u003d VALID_NAME + \";\" + VALID_PHONE + \";\" + VALID_EMAIL + \";\" + VALID_ADDRESS","lastModifiedDate":"2021-10-19"},{"lineNumber":104,"author":{"gitId":"pranav-ganesh"},"content":"                + \";\" + INVALID_GENDER + \";\" + VALID_AGE + \";\" + VALID_INTERESTS + \";\" + VALID_ISCALLED;","lastModifiedDate":"2021-11-04"},{"lineNumber":105,"author":{"gitId":"idgrr"},"content":"        CsvAdaptedPerson person \u003d new CsvAdaptedPerson(csvString);","lastModifiedDate":"2021-10-19"},{"lineNumber":106,"author":{"gitId":"idgrr"},"content":"        String expectedMessage \u003d Gender.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2021-10-19"},{"lineNumber":107,"author":{"gitId":"idgrr"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2021-10-19"},{"lineNumber":108,"author":{"gitId":"idgrr"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":109,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":110,"author":{"gitId":"idgrr"},"content":"    @Test","lastModifiedDate":"2021-10-19"},{"lineNumber":111,"author":{"gitId":"idgrr"},"content":"    public void toModelType_invalidAge_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2021-10-19"},{"lineNumber":112,"author":{"gitId":"idgrr"},"content":"        String csvString \u003d VALID_NAME + \";\" + VALID_PHONE + \";\" + VALID_EMAIL + \";\" + VALID_ADDRESS","lastModifiedDate":"2021-10-19"},{"lineNumber":113,"author":{"gitId":"pranav-ganesh"},"content":"                + \";\" + VALID_GENDER + \";\" + INVALID_AGE + \";\" + VALID_INTERESTS + \";\" + VALID_ISCALLED;","lastModifiedDate":"2021-11-04"},{"lineNumber":114,"author":{"gitId":"idgrr"},"content":"        CsvAdaptedPerson person \u003d new CsvAdaptedPerson(csvString);","lastModifiedDate":"2021-10-19"},{"lineNumber":115,"author":{"gitId":"idgrr"},"content":"        String expectedMessage \u003d Age.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2021-10-19"},{"lineNumber":116,"author":{"gitId":"idgrr"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2021-10-19"},{"lineNumber":117,"author":{"gitId":"idgrr"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":118,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":119,"author":{"gitId":"idgrr"},"content":"    @Test","lastModifiedDate":"2021-09-29"},{"lineNumber":120,"author":{"gitId":"pranav-ganesh"},"content":"    public void toModelType_invalidIsCalled_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2021-11-04"},{"lineNumber":121,"author":{"gitId":"idgrr"},"content":"        String csvString \u003d VALID_NAME + \";\" + VALID_PHONE + \";\" + VALID_EMAIL + \";\" + VALID_ADDRESS","lastModifiedDate":"2021-10-19"},{"lineNumber":122,"author":{"gitId":"pranav-ganesh"},"content":"                + \";\" + VALID_GENDER + \";\" + VALID_AGE + \";\" + VALID_INTERESTS + \";\" + INVALID_ISCALLED;","lastModifiedDate":"2021-11-04"},{"lineNumber":123,"author":{"gitId":"idgrr"},"content":"        CsvAdaptedPerson person \u003d new CsvAdaptedPerson(csvString);","lastModifiedDate":"2021-09-29"},{"lineNumber":124,"author":{"gitId":"pranav-ganesh"},"content":"        String expectedMessage \u003d IsCalled.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2021-11-04"},{"lineNumber":125,"author":{"gitId":"idgrr"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2021-09-29"},{"lineNumber":126,"author":{"gitId":"idgrr"},"content":"    }","lastModifiedDate":"2021-09-29"},{"lineNumber":127,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":128,"author":{"gitId":"idgrr"},"content":"}","lastModifiedDate":"2021-09-29"}],"authorContributionMap":{"idgrr":114,"pranav-ganesh":14}},{"path":"src/test/java/seedu/address/storage/CsvAddressBookImportExportTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"idgrr"},"content":"package seedu.address.storage;","lastModifiedDate":"2021-10-13"},{"lineNumber":2,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":3,"author":{"gitId":"idgrr"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-24"},{"lineNumber":4,"author":{"gitId":"idgrr"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-24"},{"lineNumber":5,"author":{"gitId":"idgrr"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-24"},{"lineNumber":6,"author":{"gitId":"idgrr"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-13"},{"lineNumber":7,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":8,"author":{"gitId":"idgrr"},"content":"import java.nio.file.Path;","lastModifiedDate":"2021-10-13"},{"lineNumber":9,"author":{"gitId":"idgrr"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2021-10-13"},{"lineNumber":10,"author":{"gitId":"idgrr"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-10-24"},{"lineNumber":11,"author":{"gitId":"idgrr"},"content":"import java.util.List;","lastModifiedDate":"2021-10-24"},{"lineNumber":12,"author":{"gitId":"idgrr"},"content":"import java.util.Optional;","lastModifiedDate":"2021-10-24"},{"lineNumber":13,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":14,"author":{"gitId":"idgrr"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-13"},{"lineNumber":15,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":16,"author":{"gitId":"idgrr"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2021-10-24"},{"lineNumber":17,"author":{"gitId":"idgrr"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-10-24"},{"lineNumber":18,"author":{"gitId":"idgrr"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2021-10-24"},{"lineNumber":19,"author":{"gitId":"idgrr"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-10-24"},{"lineNumber":20,"author":{"gitId":"idgrr"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2021-10-24"},{"lineNumber":21,"author":{"gitId":"idgrr"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2021-10-24"},{"lineNumber":22,"author":{"gitId":"idgrr"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2021-10-24"},{"lineNumber":23,"author":{"gitId":"idgrr"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2021-10-24"},{"lineNumber":24,"author":{"gitId":"idgrr"},"content":"import seedu.address.testutil.TestUtil;","lastModifiedDate":"2021-10-24"},{"lineNumber":25,"author":{"gitId":"idgrr"},"content":"import seedu.address.testutil.TypicalPersons;","lastModifiedDate":"2021-10-24"},{"lineNumber":26,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":27,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":28,"author":{"gitId":"idgrr"},"content":"class CsvAddressBookImportExportTest {","lastModifiedDate":"2021-10-13"},{"lineNumber":29,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":30,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":31,"author":{"gitId":"idgrr"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\",","lastModifiedDate":"2021-10-24"},{"lineNumber":32,"author":{"gitId":"idgrr"},"content":"            \"data\", \"CsvAddressBookImportExport\");","lastModifiedDate":"2021-10-24"},{"lineNumber":33,"author":{"gitId":"idgrr"},"content":"    private static final Path EMPTY_IMPORT \u003d TEST_DATA_FOLDER.resolve(\"emptyAddressBook.csv\");","lastModifiedDate":"2021-10-13"},{"lineNumber":34,"author":{"gitId":"idgrr"},"content":"    private static final Path TWO_DUPLICATE \u003d TEST_DATA_FOLDER.resolve(\"twoDuplicatePerson.csv\");","lastModifiedDate":"2021-10-24"},{"lineNumber":35,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":36,"author":{"gitId":"idgrr"},"content":"    // Misc","lastModifiedDate":"2021-10-24"},{"lineNumber":37,"author":{"gitId":"idgrr"},"content":"    @Test","lastModifiedDate":"2021-10-13"},{"lineNumber":38,"author":{"gitId":"idgrr"},"content":"    public void readAddressBook_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2021-10-13"},{"lineNumber":39,"author":{"gitId":"idgrr"},"content":"        assertThrows(NullPointerException.class, () -\u003e new CsvAddressBookImportExport(","lastModifiedDate":"2021-10-24"},{"lineNumber":40,"author":{"gitId":"idgrr"},"content":"                null, TEST_DATA_FOLDER));","lastModifiedDate":"2021-10-24"},{"lineNumber":41,"author":{"gitId":"idgrr"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":42,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":43,"author":{"gitId":"idgrr"},"content":"    @Test","lastModifiedDate":"2021-10-24"},{"lineNumber":44,"author":{"gitId":"idgrr"},"content":"    public void getImportExportPath_path_path() {","lastModifiedDate":"2021-10-24"},{"lineNumber":45,"author":{"gitId":"idgrr"},"content":"        ImportExport importExport \u003d new CsvAddressBookImportExport(EMPTY_IMPORT, TEST_DATA_FOLDER);","lastModifiedDate":"2021-10-24"},{"lineNumber":46,"author":{"gitId":"idgrr"},"content":"        assertEquals(EMPTY_IMPORT, importExport.getImportExportPath());","lastModifiedDate":"2021-10-24"},{"lineNumber":47,"author":{"gitId":"idgrr"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":48,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":49,"author":{"gitId":"idgrr"},"content":"    @Test","lastModifiedDate":"2021-10-24"},{"lineNumber":50,"author":{"gitId":"idgrr"},"content":"    public void importIntoAddressBook_missingImportFile_emptyOptional() throws DataConversionException {","lastModifiedDate":"2021-10-24"},{"lineNumber":51,"author":{"gitId":"idgrr"},"content":"        ImportExport importExport \u003d new CsvAddressBookImportExport(","lastModifiedDate":"2021-10-24"},{"lineNumber":52,"author":{"gitId":"idgrr"},"content":"                TestUtil.getFilePathInSandboxFolder(\"doesNotExist.csv\"), TEST_DATA_FOLDER);","lastModifiedDate":"2021-10-24"},{"lineNumber":53,"author":{"gitId":"idgrr"},"content":"        Model model \u003d new ModelManager(new AddressBookStub(), new UserPrefs());","lastModifiedDate":"2021-10-24"},{"lineNumber":54,"author":{"gitId":"idgrr"},"content":"        assertEquals(Optional.empty(), importExport.importIntoAddressBook(model));","lastModifiedDate":"2021-10-24"},{"lineNumber":55,"author":{"gitId":"idgrr"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":56,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":57,"author":{"gitId":"idgrr"},"content":"    @Test","lastModifiedDate":"2021-10-24"},{"lineNumber":58,"author":{"gitId":"idgrr"},"content":"    public void importIntoAddressBook_duplicateUpdateBenson_emptyOptional() throws DataConversionException {","lastModifiedDate":"2021-10-24"},{"lineNumber":59,"author":{"gitId":"idgrr"},"content":"        ImportExport importExport \u003d new CsvAddressBookImportExport(TWO_DUPLICATE, TEST_DATA_FOLDER);","lastModifiedDate":"2021-10-24"},{"lineNumber":60,"author":{"gitId":"idgrr"},"content":"        // setup","lastModifiedDate":"2021-10-24"},{"lineNumber":61,"author":{"gitId":"idgrr"},"content":"        // Benson was previously not called. import called","lastModifiedDate":"2021-10-24"},{"lineNumber":62,"author":{"gitId":"houtenteo"},"content":"        // Alice was previously not called. import not called","lastModifiedDate":"2021-11-01"},{"lineNumber":63,"author":{"gitId":"pranav-ganesh"},"content":"        assertFalse(TypicalPersons.ALICE.getIsCalled().value);","lastModifiedDate":"2021-11-04"},{"lineNumber":64,"author":{"gitId":"pranav-ganesh"},"content":"        assertFalse(TypicalPersons.BENSON.getIsCalled().value);","lastModifiedDate":"2021-11-04"},{"lineNumber":65,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":66,"author":{"gitId":"idgrr"},"content":"        List\u003cPerson\u003e peopleAlreadyInDatabase \u003d Arrays.asList(TypicalPersons.ALICE, TypicalPersons.BENSON);","lastModifiedDate":"2021-10-24"},{"lineNumber":67,"author":{"gitId":"idgrr"},"content":"        AddressBookStub database \u003d new AddressBookStub();","lastModifiedDate":"2021-10-24"},{"lineNumber":68,"author":{"gitId":"idgrr"},"content":"        database.setPersons(peopleAlreadyInDatabase);","lastModifiedDate":"2021-10-24"},{"lineNumber":69,"author":{"gitId":"idgrr"},"content":"        Model model \u003d new ModelManager(database, new UserPrefs());","lastModifiedDate":"2021-10-24"},{"lineNumber":70,"author":{"gitId":"idgrr"},"content":"        importExport.importIntoAddressBook(model);","lastModifiedDate":"2021-10-24"},{"lineNumber":71,"author":{"gitId":"idgrr"},"content":"        ObservableList\u003cPerson\u003e updated \u003d model.getFilteredPersonList();","lastModifiedDate":"2021-10-24"},{"lineNumber":72,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":73,"author":{"gitId":"idgrr"},"content":"        assert(updated.size() \u003d\u003d 3);","lastModifiedDate":"2021-10-24"},{"lineNumber":74,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":75,"author":{"gitId":"idgrr"},"content":"        Person updatedAlice \u003d updated.get(0);","lastModifiedDate":"2021-10-24"},{"lineNumber":76,"author":{"gitId":"idgrr"},"content":"        Person updatedBenson \u003d updated.get(1);","lastModifiedDate":"2021-10-24"},{"lineNumber":77,"author":{"gitId":"idgrr"},"content":"        Person addedIda \u003d updated.get(2);","lastModifiedDate":"2021-10-24"},{"lineNumber":78,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":79,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":80,"author":{"gitId":"idgrr"},"content":"        // Since import called, benson updated call status","lastModifiedDate":"2021-10-24"},{"lineNumber":81,"author":{"gitId":"idgrr"},"content":"        // Since import not called, alice not updated","lastModifiedDate":"2021-10-24"},{"lineNumber":82,"author":{"gitId":"pranav-ganesh"},"content":"        assertFalse(updatedAlice.getIsCalled().value);","lastModifiedDate":"2021-11-04"},{"lineNumber":83,"author":{"gitId":"pranav-ganesh"},"content":"        assertTrue(updatedBenson.getIsCalled().value);","lastModifiedDate":"2021-11-04"},{"lineNumber":84,"author":{"gitId":"idgrr"},"content":"        assertTrue(addedIda.getName().toString().equals(\"Ida Mueller\"));","lastModifiedDate":"2021-10-24"},{"lineNumber":85,"author":{"gitId":"idgrr"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":86,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":87,"author":{"gitId":"idgrr"},"content":"    @Test","lastModifiedDate":"2021-10-24"},{"lineNumber":88,"author":{"gitId":"idgrr"},"content":"    public void importIntoAddressBook_emptyImports_emptyOptional() throws DataConversionException {","lastModifiedDate":"2021-10-24"},{"lineNumber":89,"author":{"gitId":"idgrr"},"content":"        ImportExport importExport \u003d new CsvAddressBookImportExport(EMPTY_IMPORT, TEST_DATA_FOLDER);","lastModifiedDate":"2021-10-24"},{"lineNumber":90,"author":{"gitId":"idgrr"},"content":"        Model model \u003d new ModelManager(new AddressBookStub(), new UserPrefs());","lastModifiedDate":"2021-10-24"},{"lineNumber":91,"author":{"gitId":"idgrr"},"content":"        assertEquals(0, importExport.importIntoAddressBook(model).get().size());","lastModifiedDate":"2021-10-24"},{"lineNumber":92,"author":{"gitId":"idgrr"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":93,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":94,"author":{"gitId":"idgrr"},"content":"    private static class AddressBookStub implements ReadOnlyAddressBook {","lastModifiedDate":"2021-10-24"},{"lineNumber":95,"author":{"gitId":"idgrr"},"content":"        private final ObservableList\u003cPerson\u003e persons \u003d FXCollections.observableArrayList();","lastModifiedDate":"2021-10-24"},{"lineNumber":96,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":97,"author":{"gitId":"idgrr"},"content":"        public void setPersons(List\u003cPerson\u003e persons) {","lastModifiedDate":"2021-10-24"},{"lineNumber":98,"author":{"gitId":"idgrr"},"content":"            this.persons.setAll(persons);","lastModifiedDate":"2021-10-24"},{"lineNumber":99,"author":{"gitId":"idgrr"},"content":"        }","lastModifiedDate":"2021-10-24"},{"lineNumber":100,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":101,"author":{"gitId":"idgrr"},"content":"        @Override","lastModifiedDate":"2021-10-24"},{"lineNumber":102,"author":{"gitId":"idgrr"},"content":"        public ObservableList\u003cPerson\u003e getPersonList() {","lastModifiedDate":"2021-10-24"},{"lineNumber":103,"author":{"gitId":"idgrr"},"content":"            return persons;","lastModifiedDate":"2021-10-24"},{"lineNumber":104,"author":{"gitId":"idgrr"},"content":"        }","lastModifiedDate":"2021-10-24"},{"lineNumber":105,"author":{"gitId":"idgrr"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":106,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":107,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":108,"author":{"gitId":"idgrr"},"content":"}","lastModifiedDate":"2021-10-13"}],"authorContributionMap":{"houtenteo":1,"idgrr":103,"pranav-ganesh":4}},{"path":"src/test/java/seedu/address/storage/JsonAdaptedPersonTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2021-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-09-22"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.storage.JsonAdaptedPerson.MISSING_FIELD_MESSAGE_FORMAT;","lastModifiedDate":"2021-09-22"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2021-09-22"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BENSON;","lastModifiedDate":"2021-09-22"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2021-10-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2021-10-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":14,"author":{"gitId":"houtenteo"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-10-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2021-09-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2021-10-18"},{"lineNumber":17,"author":{"gitId":"houtenteo"},"content":"import seedu.address.model.person.Age;","lastModifiedDate":"2021-10-18"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2021-09-22"},{"lineNumber":19,"author":{"gitId":"houtenteo"},"content":"import seedu.address.model.person.Gender;","lastModifiedDate":"2021-10-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2021-09-22"},{"lineNumber":21,"author":{"gitId":"houtenteo"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2021-10-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2021-09-22"},{"lineNumber":23,"author":{"gitId":"houtenteo"},"content":"import seedu.address.model.person.interests.Interest;","lastModifiedDate":"2021-10-18"},{"lineNumber":24,"author":{"gitId":"houtenteo"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2021-10-18"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class JsonAdaptedPersonTest {","lastModifiedDate":"2021-09-22"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2021-09-22"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final String INVALID_PHONE \u003d \"+651234\";","lastModifiedDate":"2021-09-22"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private static final String INVALID_EMAIL \u003d \"example.com\";","lastModifiedDate":"2021-09-22"},{"lineNumber":30,"author":{"gitId":"houtenteo"},"content":"    private static final String INVALID_ADDRESS \u003d \"\";","lastModifiedDate":"2021-10-18"},{"lineNumber":31,"author":{"gitId":"houtenteo"},"content":"    private static final String INVALID_GENDER \u003d \"APACHE HELICOPTER\";","lastModifiedDate":"2021-10-18"},{"lineNumber":32,"author":{"gitId":"houtenteo"},"content":"    private static final String INVALID_AGE \u003d \"Eighteen\";","lastModifiedDate":"2021-10-18"},{"lineNumber":33,"author":{"gitId":"houtenteo"},"content":"    private static final String INVALID_INTEREST \u003d \"\";","lastModifiedDate":"2021-10-18"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private static final String VALID_NAME \u003d BENSON.getName().toString();","lastModifiedDate":"2021-09-22"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private static final String VALID_PHONE \u003d BENSON.getPhone().toString();","lastModifiedDate":"2021-09-22"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private static final String VALID_EMAIL \u003d BENSON.getEmail().toString();","lastModifiedDate":"2021-09-22"},{"lineNumber":38,"author":{"gitId":"pranav-ganesh"},"content":"    private static final String VALID_ISCALLED \u003d BENSON.getIsCalled().toString();","lastModifiedDate":"2021-11-04"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private static final String VALID_ADDRESS \u003d BENSON.getAddress().toString();","lastModifiedDate":"2021-10-18"},{"lineNumber":40,"author":{"gitId":"houtenteo"},"content":"    private static final String VALID_GENDER \u003d BENSON.getGender().toString();","lastModifiedDate":"2021-10-18"},{"lineNumber":41,"author":{"gitId":"houtenteo"},"content":"    private static final String VALID_AGE \u003d BENSON.getAge().toString();","lastModifiedDate":"2021-10-18"},{"lineNumber":42,"author":{"gitId":"houtenteo"},"content":"    private static final String VALID_INTEREST_1 \u003d BENSON.getInterests().getInterest(Index.fromZeroBased(0)).value;","lastModifiedDate":"2021-10-18"},{"lineNumber":43,"author":{"gitId":"houtenteo"},"content":"    private static final String VALID_INTEREST_2 \u003d BENSON.getInterests().getInterest(Index.fromZeroBased(1)).value;","lastModifiedDate":"2021-10-18"},{"lineNumber":44,"author":{"gitId":"houtenteo"},"content":"    private static final List\u003cJsonAdaptedInterest\u003e VALID_INTERESTS \u003d BENSON.getInterests().getAllInterests().stream()","lastModifiedDate":"2021-10-18"},{"lineNumber":45,"author":{"gitId":"houtenteo"},"content":"            .map(JsonAdaptedInterest::new)","lastModifiedDate":"2021-10-18"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            .collect(Collectors.toList());","lastModifiedDate":"2021-10-18"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-09-22"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public void toModelType_validPersonDetails_returnsPerson() throws Exception {","lastModifiedDate":"2021-09-22"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(BENSON);","lastModifiedDate":"2021-09-22"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertEquals(BENSON, person.toModelType());","lastModifiedDate":"2021-09-22"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-09-22"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public void toModelType_invalidName_throwsIllegalValueException() {","lastModifiedDate":"2021-09-22"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2021-09-22"},{"lineNumber":57,"author":{"gitId":"pranav-ganesh"},"content":"                new JsonAdaptedPerson(INVALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ISCALLED,","lastModifiedDate":"2021-11-04"},{"lineNumber":58,"author":{"gitId":"houtenteo"},"content":"                        VALID_ADDRESS, VALID_GENDER, VALID_AGE, VALID_INTERESTS);","lastModifiedDate":"2021-10-18"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Name.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2021-09-22"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2021-09-22"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-09-22"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public void toModelType_nullName_throwsIllegalValueException() {","lastModifiedDate":"2021-09-22"},{"lineNumber":65,"author":{"gitId":"pranav-ganesh"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(null, VALID_PHONE, VALID_EMAIL, VALID_ISCALLED,","lastModifiedDate":"2021-11-04"},{"lineNumber":66,"author":{"gitId":"houtenteo"},"content":"                VALID_ADDRESS, VALID_GENDER, VALID_AGE, VALID_INTERESTS);","lastModifiedDate":"2021-10-18"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName());","lastModifiedDate":"2021-09-22"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2021-09-22"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-09-22"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public void toModelType_invalidPhone_throwsIllegalValueException() {","lastModifiedDate":"2021-09-22"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2021-09-22"},{"lineNumber":74,"author":{"gitId":"pranav-ganesh"},"content":"                new JsonAdaptedPerson(VALID_NAME, INVALID_PHONE, VALID_EMAIL, VALID_ISCALLED,","lastModifiedDate":"2021-11-04"},{"lineNumber":75,"author":{"gitId":"houtenteo"},"content":"                        VALID_ADDRESS, VALID_GENDER, VALID_AGE, VALID_INTERESTS);","lastModifiedDate":"2021-10-18"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Phone.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2021-09-22"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2021-09-22"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-09-22"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void toModelType_nullPhone_throwsIllegalValueException() {","lastModifiedDate":"2021-09-22"},{"lineNumber":82,"author":{"gitId":"pranav-ganesh"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, null, VALID_EMAIL, VALID_ISCALLED,","lastModifiedDate":"2021-11-04"},{"lineNumber":83,"author":{"gitId":"houtenteo"},"content":"                VALID_ADDRESS, VALID_GENDER, VALID_AGE, VALID_INTERESTS);","lastModifiedDate":"2021-10-18"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName());","lastModifiedDate":"2021-09-22"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2021-09-22"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-09-22"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    public void toModelType_invalidEmail_throwsIllegalValueException() {","lastModifiedDate":"2021-09-22"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2021-09-22"},{"lineNumber":91,"author":{"gitId":"pranav-ganesh"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, INVALID_EMAIL, VALID_ISCALLED,","lastModifiedDate":"2021-11-04"},{"lineNumber":92,"author":{"gitId":"houtenteo"},"content":"                        VALID_ADDRESS, VALID_GENDER, VALID_AGE, VALID_INTERESTS);","lastModifiedDate":"2021-10-18"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Email.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2021-09-22"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2021-09-22"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-09-22"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    public void toModelType_nullEmail_throwsIllegalValueException() {","lastModifiedDate":"2021-09-22"},{"lineNumber":99,"author":{"gitId":"pranav-ganesh"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, null, VALID_ISCALLED,","lastModifiedDate":"2021-11-04"},{"lineNumber":100,"author":{"gitId":"houtenteo"},"content":"                VALID_ADDRESS, VALID_GENDER, VALID_AGE, VALID_INTERESTS);","lastModifiedDate":"2021-10-18"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName());","lastModifiedDate":"2021-09-22"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2021-09-22"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-10-18"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    public void toModelType_invalidAddress_throwsIllegalValueException() {","lastModifiedDate":"2021-10-18"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2021-10-18"},{"lineNumber":108,"author":{"gitId":"pranav-ganesh"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ISCALLED,","lastModifiedDate":"2021-11-04"},{"lineNumber":109,"author":{"gitId":"houtenteo"},"content":"                        INVALID_ADDRESS, VALID_GENDER, VALID_AGE, VALID_INTERESTS);","lastModifiedDate":"2021-10-18"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Address.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2021-10-18"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2021-10-18"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-10-18"},{"lineNumber":115,"author":{"gitId":"houtenteo"},"content":"    public void toModelType_nullAddress_isValid() throws Exception {","lastModifiedDate":"2021-10-18"},{"lineNumber":116,"author":{"gitId":"pranav-ganesh"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ISCALLED,","lastModifiedDate":"2021-11-04"},{"lineNumber":117,"author":{"gitId":"houtenteo"},"content":"                null, VALID_GENDER, VALID_AGE, VALID_INTERESTS);","lastModifiedDate":"2021-10-18"},{"lineNumber":118,"author":{"gitId":"houtenteo"},"content":"        Person personWithNullAddress \u003d new PersonBuilder().withName(VALID_NAME).withPhone(VALID_PHONE)","lastModifiedDate":"2021-10-18"},{"lineNumber":119,"author":{"gitId":"pranav-ganesh"},"content":"                .withEmail(VALID_EMAIL).withCalled(VALID_ISCALLED).withAddress(null).withGender(VALID_GENDER)","lastModifiedDate":"2021-11-04"},{"lineNumber":120,"author":{"gitId":"houtenteo"},"content":"                .withAge(VALID_AGE).withInterest(VALID_INTEREST_1, VALID_INTEREST_2).build();","lastModifiedDate":"2021-10-18"},{"lineNumber":121,"author":{"gitId":"houtenteo"},"content":"        assertEquals(person.toModelType(), personWithNullAddress);","lastModifiedDate":"2021-10-18"},{"lineNumber":122,"author":{"gitId":"houtenteo"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":123,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":124,"author":{"gitId":"houtenteo"},"content":"    @Test","lastModifiedDate":"2021-10-18"},{"lineNumber":125,"author":{"gitId":"houtenteo"},"content":"    public void toModelType_invalidGender_throwsIllegalValueException() {","lastModifiedDate":"2021-10-18"},{"lineNumber":126,"author":{"gitId":"houtenteo"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2021-10-18"},{"lineNumber":127,"author":{"gitId":"pranav-ganesh"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ISCALLED,","lastModifiedDate":"2021-11-04"},{"lineNumber":128,"author":{"gitId":"houtenteo"},"content":"                        VALID_ADDRESS, INVALID_GENDER, VALID_AGE, VALID_INTERESTS);","lastModifiedDate":"2021-10-18"},{"lineNumber":129,"author":{"gitId":"houtenteo"},"content":"        String expectedMessage \u003d Gender.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2021-10-18"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2021-10-18"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-10-18"},{"lineNumber":134,"author":{"gitId":"houtenteo"},"content":"    public void toModelType_nullGender_isValid() throws Exception {","lastModifiedDate":"2021-10-18"},{"lineNumber":135,"author":{"gitId":"pranav-ganesh"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ISCALLED,","lastModifiedDate":"2021-11-04"},{"lineNumber":136,"author":{"gitId":"houtenteo"},"content":"                VALID_ADDRESS, null, VALID_AGE, VALID_INTERESTS);","lastModifiedDate":"2021-10-18"},{"lineNumber":137,"author":{"gitId":"houtenteo"},"content":"        Person personWithNullGender \u003d new PersonBuilder().withName(VALID_NAME).withPhone(VALID_PHONE)","lastModifiedDate":"2021-10-18"},{"lineNumber":138,"author":{"gitId":"pranav-ganesh"},"content":"                .withEmail(VALID_EMAIL).withCalled(VALID_ISCALLED).withAddress(VALID_ADDRESS).withGender(null)","lastModifiedDate":"2021-11-04"},{"lineNumber":139,"author":{"gitId":"houtenteo"},"content":"                .withAge(VALID_AGE).withInterest(VALID_INTEREST_1, VALID_INTEREST_2).build();","lastModifiedDate":"2021-10-18"},{"lineNumber":140,"author":{"gitId":"houtenteo"},"content":"        assertEquals(person.toModelType(), personWithNullGender);","lastModifiedDate":"2021-10-18"},{"lineNumber":141,"author":{"gitId":"houtenteo"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":142,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":143,"author":{"gitId":"houtenteo"},"content":"    @Test","lastModifiedDate":"2021-10-18"},{"lineNumber":144,"author":{"gitId":"houtenteo"},"content":"    public void toModelType_invalidAge_throwsIllegalValueException() {","lastModifiedDate":"2021-10-18"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2021-10-18"},{"lineNumber":146,"author":{"gitId":"pranav-ganesh"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ISCALLED,","lastModifiedDate":"2021-11-04"},{"lineNumber":147,"author":{"gitId":"houtenteo"},"content":"                        VALID_ADDRESS, VALID_GENDER, INVALID_AGE, VALID_INTERESTS);","lastModifiedDate":"2021-10-18"},{"lineNumber":148,"author":{"gitId":"houtenteo"},"content":"        String expectedMessage \u003d Age.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2021-10-18"},{"lineNumber":149,"author":{"gitId":"houtenteo"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2021-10-18"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":152,"author":{"gitId":"houtenteo"},"content":"    @Test","lastModifiedDate":"2021-10-18"},{"lineNumber":153,"author":{"gitId":"houtenteo"},"content":"    public void toModelType_nullAge_isValid() throws Exception {","lastModifiedDate":"2021-10-18"},{"lineNumber":154,"author":{"gitId":"pranav-ganesh"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ISCALLED,","lastModifiedDate":"2021-11-04"},{"lineNumber":155,"author":{"gitId":"houtenteo"},"content":"                VALID_ADDRESS, VALID_GENDER, null, VALID_INTERESTS);","lastModifiedDate":"2021-10-18"},{"lineNumber":156,"author":{"gitId":"houtenteo"},"content":"        Person personWithNullAge \u003d new PersonBuilder().withName(VALID_NAME).withPhone(VALID_PHONE)","lastModifiedDate":"2021-10-18"},{"lineNumber":157,"author":{"gitId":"pranav-ganesh"},"content":"                .withEmail(VALID_EMAIL).withCalled(VALID_ISCALLED).withAddress(VALID_ADDRESS).withGender(VALID_GENDER)","lastModifiedDate":"2021-11-04"},{"lineNumber":158,"author":{"gitId":"houtenteo"},"content":"                .withAge(null).withInterest(VALID_INTEREST_1, VALID_INTEREST_2).build();","lastModifiedDate":"2021-10-18"},{"lineNumber":159,"author":{"gitId":"houtenteo"},"content":"        assertEquals(person.toModelType(), personWithNullAge);","lastModifiedDate":"2021-10-18"},{"lineNumber":160,"author":{"gitId":"houtenteo"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":161,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":162,"author":{"gitId":"houtenteo"},"content":"    @Test","lastModifiedDate":"2021-10-18"},{"lineNumber":163,"author":{"gitId":"houtenteo"},"content":"    public void toModelType_invalidInterest_throwsIllegalValueException() {","lastModifiedDate":"2021-10-18"},{"lineNumber":164,"author":{"gitId":"houtenteo"},"content":"        List\u003cJsonAdaptedInterest\u003e invalidInterests \u003d new ArrayList\u003c\u003e(VALID_INTERESTS);","lastModifiedDate":"2021-10-18"},{"lineNumber":165,"author":{"gitId":"houtenteo"},"content":"        invalidInterests.add(new JsonAdaptedInterest(INVALID_INTEREST));","lastModifiedDate":"2021-10-18"},{"lineNumber":166,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":167,"author":{"gitId":"houtenteo"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2021-10-18"},{"lineNumber":168,"author":{"gitId":"pranav-ganesh"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ISCALLED,","lastModifiedDate":"2021-11-04"},{"lineNumber":169,"author":{"gitId":"houtenteo"},"content":"                        VALID_ADDRESS, VALID_GENDER, VALID_AGE, invalidInterests);","lastModifiedDate":"2021-10-18"},{"lineNumber":170,"author":{"gitId":"houtenteo"},"content":"        String expectedMessage \u003d Interest.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2021-10-18"},{"lineNumber":171,"author":{"gitId":"houtenteo"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2021-10-18"},{"lineNumber":172,"author":{"gitId":"houtenteo"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":173,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":174,"author":{"gitId":"houtenteo"},"content":"    @Test","lastModifiedDate":"2021-10-18"},{"lineNumber":175,"author":{"gitId":"houtenteo"},"content":"    public void toModelType_nullInterests_isValid() throws Exception {","lastModifiedDate":"2021-10-18"},{"lineNumber":176,"author":{"gitId":"pranav-ganesh"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ISCALLED,","lastModifiedDate":"2021-11-04"},{"lineNumber":177,"author":{"gitId":"houtenteo"},"content":"                VALID_ADDRESS, VALID_GENDER, VALID_AGE, null);","lastModifiedDate":"2021-10-18"},{"lineNumber":178,"author":{"gitId":"houtenteo"},"content":"        Person personWithNullInterests \u003d new PersonBuilder().withName(VALID_NAME).withPhone(VALID_PHONE)","lastModifiedDate":"2021-10-18"},{"lineNumber":179,"author":{"gitId":"pranav-ganesh"},"content":"                .withEmail(VALID_EMAIL).withCalled(VALID_ISCALLED).withAddress(VALID_ADDRESS).withGender(VALID_GENDER)","lastModifiedDate":"2021-11-04"},{"lineNumber":180,"author":{"gitId":"houtenteo"},"content":"                .withAge(VALID_AGE).build();","lastModifiedDate":"2021-10-18"},{"lineNumber":181,"author":{"gitId":"houtenteo"},"content":"        assertEquals(person.toModelType(), personWithNullInterests);","lastModifiedDate":"2021-10-18"},{"lineNumber":182,"author":{"gitId":"houtenteo"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":183,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-09-22"}],"authorContributionMap":{"houtenteo":73,"pranav-ganesh":19,"-":91}},{"path":"src/test/java/seedu/address/storage/StorageManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-09-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2016-09-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class StorageManagerTest {","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private StorageManager storageManager;","lastModifiedDate":"2017-04-01"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2016-10-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d new JsonAddressBookStorage(getTempFilePath(\"ab\"));","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(getTempFilePath(\"prefs\"));","lastModifiedDate":"2017-02-25"},{"lineNumber":29,"author":{"gitId":"idgrr"},"content":"        ImportExport importExport \u003d new CsvAddressBookImportExport(testFolder.resolve(\"importAddressBook.csv\"),","lastModifiedDate":"2021-10-25"},{"lineNumber":30,"author":{"gitId":"idgrr"},"content":"                testFolder.resolve(\"data\"));","lastModifiedDate":"2021-10-25"},{"lineNumber":31,"author":{"gitId":"idgrr"},"content":"        storageManager \u003d new StorageManager(addressBookStorage, userPrefsStorage, importExport);","lastModifiedDate":"2021-10-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private Path getTempFilePath(String fileName) {","lastModifiedDate":"2018-04-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        return testFolder.resolve(fileName);","lastModifiedDate":"2019-04-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public void prefsReadSave() throws Exception {","lastModifiedDate":"2016-10-16"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-09-28"},{"lineNumber":41,"author":{"gitId":"-"},"content":"         * Note: This is an integration test that verifies the StorageManager is properly wired to the","lastModifiedDate":"2016-09-28"},{"lineNumber":42,"author":{"gitId":"-"},"content":"         * {@link JsonUserPrefsStorage} class.","lastModifiedDate":"2016-10-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"         * More extensive testing of UserPref saving/reading is done in {@link JsonUserPrefsStorageTest} class.","lastModifiedDate":"2016-10-01"},{"lineNumber":44,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-09-28"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        UserPrefs original \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        original.setGuiSettings(new GuiSettings(300, 600, 4, 6));","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        storageManager.saveUserPrefs(original);","lastModifiedDate":"2016-09-28"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        UserPrefs retrieved \u003d storageManager.readUserPrefs().get();","lastModifiedDate":"2016-09-28"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertEquals(original, retrieved);","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void addressBookReadSave() throws Exception {","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-10-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"         * Note: This is an integration test that verifies the StorageManager is properly wired to the","lastModifiedDate":"2016-10-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"         * {@link JsonAddressBookStorage} class.","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"         * More extensive testing of UserPref saving/reading is done in {@link JsonAddressBookStorageTest} class.","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-10-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        AddressBook original \u003d getTypicalAddressBook();","lastModifiedDate":"2017-07-19"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        storageManager.saveAddressBook(original);","lastModifiedDate":"2016-09-28"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        ReadOnlyAddressBook retrieved \u003d storageManager.readAddressBook().get();","lastModifiedDate":"2016-09-28"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertEquals(original, new AddressBook(retrieved));","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-01"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public void getAddressBookFilePath() {","lastModifiedDate":"2016-10-01"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertNotNull(storageManager.getAddressBookFilePath());","lastModifiedDate":"2016-10-01"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":70,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"idgrr":3,"-":67}},{"path":"src/test/java/seedu/address/testutil/EditPersonDescriptorBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2021-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2021-09-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2021-10-23"},{"lineNumber":5,"author":{"gitId":"pranav-ganesh"},"content":"import seedu.address.model.person.Age;","lastModifiedDate":"2021-10-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2021-10-23"},{"lineNumber":7,"author":{"gitId":"pranav-ganesh"},"content":"import seedu.address.model.person.Gender;","lastModifiedDate":"2021-10-23"},{"lineNumber":8,"author":{"gitId":"pranav-ganesh"},"content":"import seedu.address.model.person.IsCalled;","lastModifiedDate":"2021-11-04"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2021-10-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2021-10-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2021-10-23"},{"lineNumber":12,"author":{"gitId":"pranav-ganesh"},"content":"import seedu.address.model.person.interests.Interest;","lastModifiedDate":"2021-10-22"},{"lineNumber":13,"author":{"gitId":"pranav-ganesh"},"content":"import seedu.address.model.person.interests.InterestsList;","lastModifiedDate":"2021-10-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2021-09-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * A utility class to help with building EditPersonDescriptor objects.","lastModifiedDate":"2021-09-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2021-09-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class EditPersonDescriptorBuilder {","lastModifiedDate":"2021-09-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private EditPersonDescriptor descriptor;","lastModifiedDate":"2021-09-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder() {","lastModifiedDate":"2021-09-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2021-09-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder(EditPersonDescriptor descriptor) {","lastModifiedDate":"2021-09-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        this.descriptor \u003d new EditPersonDescriptor(descriptor);","lastModifiedDate":"2021-09-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-09-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Returns an {@code EditPersonDescriptor} with fields containing {@code person}\u0027s details","lastModifiedDate":"2021-09-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-09-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder(Person person) {","lastModifiedDate":"2021-09-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2021-09-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        descriptor.setName(person.getName());","lastModifiedDate":"2021-09-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        descriptor.setPhone(person.getPhone());","lastModifiedDate":"2021-09-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        descriptor.setEmail(person.getEmail());","lastModifiedDate":"2021-09-21"},{"lineNumber":38,"author":{"gitId":"pranav-ganesh"},"content":"        descriptor.setIsCalled(person.getIsCalled());","lastModifiedDate":"2021-11-04"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        descriptor.setAddress(person.getAddress());","lastModifiedDate":"2021-10-18"},{"lineNumber":40,"author":{"gitId":"houtenteo"},"content":"        descriptor.setGender(person.getGender());","lastModifiedDate":"2021-10-18"},{"lineNumber":41,"author":{"gitId":"houtenteo"},"content":"        descriptor.setAge(person.getAge());","lastModifiedDate":"2021-10-18"},{"lineNumber":42,"author":{"gitId":"houtenteo"},"content":"        descriptor.setInterests(person.getInterests());","lastModifiedDate":"2021-10-18"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-09-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * Sets the {@code Name} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2021-09-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-09-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withName(String name) {","lastModifiedDate":"2021-09-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        descriptor.setName(new Name(name));","lastModifiedDate":"2021-09-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2021-09-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-09-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * Sets the {@code Phone} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2021-09-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-09-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withPhone(String phone) {","lastModifiedDate":"2021-09-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        descriptor.setPhone(new Phone(phone));","lastModifiedDate":"2021-09-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2021-09-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":61,"author":{"gitId":"pranav-ganesh"},"content":"    /**","lastModifiedDate":"2021-10-22"},{"lineNumber":62,"author":{"gitId":"pranav-ganesh"},"content":"     * Sets the {@code Age} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2021-10-22"},{"lineNumber":63,"author":{"gitId":"pranav-ganesh"},"content":"     */","lastModifiedDate":"2021-10-22"},{"lineNumber":64,"author":{"gitId":"pranav-ganesh"},"content":"    public EditPersonDescriptorBuilder withAge(String age) {","lastModifiedDate":"2021-10-22"},{"lineNumber":65,"author":{"gitId":"pranav-ganesh"},"content":"        descriptor.setAge(new Age(age));","lastModifiedDate":"2021-10-22"},{"lineNumber":66,"author":{"gitId":"pranav-ganesh"},"content":"        return this;","lastModifiedDate":"2021-10-22"},{"lineNumber":67,"author":{"gitId":"pranav-ganesh"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":68,"author":{"gitId":"pranav-ganesh"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-09-21"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * Sets the {@code Email} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2021-09-21"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-09-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withEmail(String email) {","lastModifiedDate":"2021-09-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        descriptor.setEmail(new Email(email));","lastModifiedDate":"2021-09-21"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2021-09-21"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-21"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-09-21"},{"lineNumber":78,"author":{"gitId":"pranav-ganesh"},"content":"     * Sets the {@code isCalled} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2021-11-04"},{"lineNumber":79,"author":{"gitId":"houtenteo"},"content":"     */","lastModifiedDate":"2021-09-21"},{"lineNumber":80,"author":{"gitId":"pranav-ganesh"},"content":"    public EditPersonDescriptorBuilder withCalled(String isCalled) {","lastModifiedDate":"2021-11-04"},{"lineNumber":81,"author":{"gitId":"pranav-ganesh"},"content":"        descriptor.setIsCalled(new IsCalled(isCalled));","lastModifiedDate":"2021-11-04"},{"lineNumber":82,"author":{"gitId":"houtenteo"},"content":"        return this;","lastModifiedDate":"2021-09-21"},{"lineNumber":83,"author":{"gitId":"houtenteo"},"content":"    }","lastModifiedDate":"2021-09-21"},{"lineNumber":84,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":85,"author":{"gitId":"houtenteo"},"content":"    /**","lastModifiedDate":"2021-10-18"},{"lineNumber":86,"author":{"gitId":"houtenteo"},"content":"     * Sets the {@code address} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2021-10-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-10-18"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withAddress(String address) {","lastModifiedDate":"2021-10-18"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        descriptor.setAddress(new Address(address));","lastModifiedDate":"2021-10-18"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2021-10-18"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-10-18"},{"lineNumber":94,"author":{"gitId":"houtenteo"},"content":"     * Sets the {@code gender} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2021-10-18"},{"lineNumber":95,"author":{"gitId":"houtenteo"},"content":"     */","lastModifiedDate":"2021-10-18"},{"lineNumber":96,"author":{"gitId":"houtenteo"},"content":"    public EditPersonDescriptorBuilder withGender(String gender) {","lastModifiedDate":"2021-10-18"},{"lineNumber":97,"author":{"gitId":"houtenteo"},"content":"        descriptor.setGender(new Gender(gender));","lastModifiedDate":"2021-10-18"},{"lineNumber":98,"author":{"gitId":"houtenteo"},"content":"        return this;","lastModifiedDate":"2021-10-18"},{"lineNumber":99,"author":{"gitId":"houtenteo"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":100,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":101,"author":{"gitId":"pranav-ganesh"},"content":"    /**","lastModifiedDate":"2021-10-22"},{"lineNumber":102,"author":{"gitId":"pranav-ganesh"},"content":"     * Sets the {@code Interest} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2021-10-22"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-10-22"},{"lineNumber":104,"author":{"gitId":"pranav-ganesh"},"content":"    public EditPersonDescriptorBuilder withInterests(String ...interestList) {","lastModifiedDate":"2021-10-22"},{"lineNumber":105,"author":{"gitId":"pranav-ganesh"},"content":"        InterestsList listOfInterests \u003d new InterestsList();","lastModifiedDate":"2021-10-22"},{"lineNumber":106,"author":{"gitId":"pranav-ganesh"},"content":"        for (String interest : interestList) {","lastModifiedDate":"2021-10-22"},{"lineNumber":107,"author":{"gitId":"pranav-ganesh"},"content":"            Interest i \u003d new Interest(interest);","lastModifiedDate":"2021-10-22"},{"lineNumber":108,"author":{"gitId":"pranav-ganesh"},"content":"            listOfInterests.addInterest(i);","lastModifiedDate":"2021-10-22"},{"lineNumber":109,"author":{"gitId":"pranav-ganesh"},"content":"        }","lastModifiedDate":"2021-10-22"},{"lineNumber":110,"author":{"gitId":"pranav-ganesh"},"content":"        descriptor.setInterests(listOfInterests);","lastModifiedDate":"2021-10-22"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2021-10-22"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    public EditPersonDescriptor build() {","lastModifiedDate":"2021-09-21"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        return descriptor;","lastModifiedDate":"2021-09-21"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-21"},{"lineNumber":117,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-09-21"}],"authorContributionMap":{"houtenteo":16,"pranav-ganesh":26,"-":75}},{"path":"src/test/java/seedu/address/testutil/PersonBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2021-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2021-10-18"},{"lineNumber":4,"author":{"gitId":"houtenteo"},"content":"import seedu.address.model.person.Age;","lastModifiedDate":"2021-10-18"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2021-09-21"},{"lineNumber":6,"author":{"gitId":"houtenteo"},"content":"import seedu.address.model.person.Gender;","lastModifiedDate":"2021-10-18"},{"lineNumber":7,"author":{"gitId":"pranav-ganesh"},"content":"import seedu.address.model.person.IsCalled;","lastModifiedDate":"2021-11-04"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2021-09-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2021-09-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2021-09-21"},{"lineNumber":11,"author":{"gitId":"houtenteo"},"content":"import seedu.address.model.person.interests.Interest;","lastModifiedDate":"2021-10-18"},{"lineNumber":12,"author":{"gitId":"houtenteo"},"content":"import seedu.address.model.person.interests.InterestsList;","lastModifiedDate":"2021-10-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2021-09-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * A utility class to help with building Person objects.","lastModifiedDate":"2021-09-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2021-09-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class PersonBuilder {","lastModifiedDate":"2021-09-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_NAME \u003d \"Amy Bee\";","lastModifiedDate":"2021-09-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_PHONE \u003d \"85355255\";","lastModifiedDate":"2021-09-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_EMAIL \u003d \"amy@gmail.com\";","lastModifiedDate":"2021-09-21"},{"lineNumber":22,"author":{"gitId":"pranav-ganesh"},"content":"    public static final String DEFAULT_CALLED \u003d \"false\";","lastModifiedDate":"2021-11-04"},{"lineNumber":23,"author":{"gitId":"houtenteo"},"content":"    public static final String DEFAULT_ADDRESS \u003d null;","lastModifiedDate":"2021-10-18"},{"lineNumber":24,"author":{"gitId":"houtenteo"},"content":"    public static final String DEFAULT_GENDER \u003d null;","lastModifiedDate":"2021-10-18"},{"lineNumber":25,"author":{"gitId":"houtenteo"},"content":"    public static final String DEFAULT_AGE \u003d null;","lastModifiedDate":"2021-10-18"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private Name name;","lastModifiedDate":"2021-09-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private Phone phone;","lastModifiedDate":"2021-09-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private Email email;","lastModifiedDate":"2021-09-21"},{"lineNumber":30,"author":{"gitId":"pranav-ganesh"},"content":"    private IsCalled isCalled;","lastModifiedDate":"2021-11-04"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private Address address;","lastModifiedDate":"2021-10-18"},{"lineNumber":32,"author":{"gitId":"houtenteo"},"content":"    private Gender gender;","lastModifiedDate":"2021-10-18"},{"lineNumber":33,"author":{"gitId":"houtenteo"},"content":"    private Age age;","lastModifiedDate":"2021-10-18"},{"lineNumber":34,"author":{"gitId":"houtenteo"},"content":"    private InterestsList interests;","lastModifiedDate":"2021-10-18"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-09-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Creates a {@code PersonBuilder} with the default details.","lastModifiedDate":"2021-09-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-09-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public PersonBuilder() {","lastModifiedDate":"2021-09-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        name \u003d new Name(DEFAULT_NAME);","lastModifiedDate":"2021-09-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        phone \u003d new Phone(DEFAULT_PHONE);","lastModifiedDate":"2021-09-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        email \u003d new Email(DEFAULT_EMAIL);","lastModifiedDate":"2021-09-21"},{"lineNumber":43,"author":{"gitId":"pranav-ganesh"},"content":"        isCalled \u003d new IsCalled(DEFAULT_CALLED);","lastModifiedDate":"2021-11-04"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        address \u003d new Address(DEFAULT_ADDRESS);","lastModifiedDate":"2021-10-18"},{"lineNumber":45,"author":{"gitId":"houtenteo"},"content":"        gender \u003d new Gender(DEFAULT_GENDER);","lastModifiedDate":"2021-10-18"},{"lineNumber":46,"author":{"gitId":"houtenteo"},"content":"        age \u003d new Age(DEFAULT_AGE);","lastModifiedDate":"2021-10-18"},{"lineNumber":47,"author":{"gitId":"houtenteo"},"content":"        interests \u003d new InterestsList();","lastModifiedDate":"2021-10-18"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-09-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     * Initializes the PersonBuilder with the data of {@code personToCopy}.","lastModifiedDate":"2021-09-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-09-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public PersonBuilder(Person personToCopy) {","lastModifiedDate":"2021-09-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        name \u003d personToCopy.getName();","lastModifiedDate":"2021-09-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        phone \u003d personToCopy.getPhone();","lastModifiedDate":"2021-09-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        email \u003d personToCopy.getEmail();","lastModifiedDate":"2021-09-21"},{"lineNumber":57,"author":{"gitId":"pranav-ganesh"},"content":"        isCalled \u003d personToCopy.getIsCalled();","lastModifiedDate":"2021-11-04"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        address \u003d personToCopy.getAddress();","lastModifiedDate":"2021-10-18"},{"lineNumber":59,"author":{"gitId":"houtenteo"},"content":"        gender \u003d personToCopy.getGender();","lastModifiedDate":"2021-10-18"},{"lineNumber":60,"author":{"gitId":"houtenteo"},"content":"        age \u003d personToCopy.getAge();","lastModifiedDate":"2021-10-18"},{"lineNumber":61,"author":{"gitId":"houtenteo"},"content":"        interests \u003d personToCopy.getInterests();","lastModifiedDate":"2021-10-18"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-09-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     * Sets the {@code Name} of the {@code Person} that we are building.","lastModifiedDate":"2021-09-21"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-09-21"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public PersonBuilder withName(String name) {","lastModifiedDate":"2021-09-21"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        this.name \u003d new Name(name);","lastModifiedDate":"2021-09-21"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2021-09-21"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-21"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-09-21"},{"lineNumber":73,"author":{"gitId":"houtenteo"},"content":"     * Sets the {@code Phone} of the {@code Person} that we are building.","lastModifiedDate":"2021-09-21"},{"lineNumber":74,"author":{"gitId":"houtenteo"},"content":"     */","lastModifiedDate":"2021-09-21"},{"lineNumber":75,"author":{"gitId":"houtenteo"},"content":"    public PersonBuilder withPhone(String phone) {","lastModifiedDate":"2021-09-21"},{"lineNumber":76,"author":{"gitId":"houtenteo"},"content":"        this.phone \u003d new Phone(phone);","lastModifiedDate":"2021-09-21"},{"lineNumber":77,"author":{"gitId":"houtenteo"},"content":"        return this;","lastModifiedDate":"2021-09-21"},{"lineNumber":78,"author":{"gitId":"houtenteo"},"content":"    }","lastModifiedDate":"2021-09-21"},{"lineNumber":79,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":80,"author":{"gitId":"houtenteo"},"content":"    /**","lastModifiedDate":"2021-09-21"},{"lineNumber":81,"author":{"gitId":"houtenteo"},"content":"     * Sets the {@code Email} of the {@code Person} that we are building.","lastModifiedDate":"2021-09-21"},{"lineNumber":82,"author":{"gitId":"houtenteo"},"content":"     */","lastModifiedDate":"2021-09-21"},{"lineNumber":83,"author":{"gitId":"houtenteo"},"content":"    public PersonBuilder withEmail(String email) {","lastModifiedDate":"2021-09-21"},{"lineNumber":84,"author":{"gitId":"houtenteo"},"content":"        this.email \u003d new Email(email);","lastModifiedDate":"2021-09-21"},{"lineNumber":85,"author":{"gitId":"houtenteo"},"content":"        return this;","lastModifiedDate":"2021-09-21"},{"lineNumber":86,"author":{"gitId":"houtenteo"},"content":"    }","lastModifiedDate":"2021-09-21"},{"lineNumber":87,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":88,"author":{"gitId":"houtenteo"},"content":"    /**","lastModifiedDate":"2021-09-22"},{"lineNumber":89,"author":{"gitId":"pranav-ganesh"},"content":"     * Sets the {@code isCalled} of the {@code Person} that we are building.","lastModifiedDate":"2021-11-04"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-09-22"},{"lineNumber":91,"author":{"gitId":"pranav-ganesh"},"content":"    public PersonBuilder withCalled(String isCalled) {","lastModifiedDate":"2021-11-04"},{"lineNumber":92,"author":{"gitId":"pranav-ganesh"},"content":"        this.isCalled \u003d new IsCalled(isCalled);","lastModifiedDate":"2021-11-04"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2021-09-22"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-10-18"},{"lineNumber":97,"author":{"gitId":"houtenteo"},"content":"     * Sets the {@code address} of the {@code Person} that we are building.","lastModifiedDate":"2021-10-18"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-10-18"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    public PersonBuilder withAddress(String address) {","lastModifiedDate":"2021-10-18"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        this.address \u003d new Address(address);","lastModifiedDate":"2021-10-18"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2021-10-18"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-10-18"},{"lineNumber":105,"author":{"gitId":"houtenteo"},"content":"     * Sets the {@code gender} of the {@code Person} that we are building.","lastModifiedDate":"2021-10-18"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-10-18"},{"lineNumber":107,"author":{"gitId":"houtenteo"},"content":"    public PersonBuilder withGender(String gender) {","lastModifiedDate":"2021-10-18"},{"lineNumber":108,"author":{"gitId":"houtenteo"},"content":"        this.gender \u003d new Gender(gender);","lastModifiedDate":"2021-10-18"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2021-10-18"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-10-18"},{"lineNumber":113,"author":{"gitId":"houtenteo"},"content":"     * Sets the {@code age} of the {@code Person} that we are building.","lastModifiedDate":"2021-10-18"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-10-18"},{"lineNumber":115,"author":{"gitId":"houtenteo"},"content":"    public PersonBuilder withAge(String age) {","lastModifiedDate":"2021-10-18"},{"lineNumber":116,"author":{"gitId":"houtenteo"},"content":"        this.age \u003d new Age(age);","lastModifiedDate":"2021-10-18"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2021-10-18"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":120,"author":{"gitId":"houtenteo"},"content":"    /**","lastModifiedDate":"2021-10-18"},{"lineNumber":121,"author":{"gitId":"houtenteo"},"content":"     * Sets the {@code interest} of the {@code Person} that we are building.","lastModifiedDate":"2021-10-18"},{"lineNumber":122,"author":{"gitId":"houtenteo"},"content":"     */","lastModifiedDate":"2021-10-18"},{"lineNumber":123,"author":{"gitId":"houtenteo"},"content":"    public PersonBuilder withInterest(String ...interestList) {","lastModifiedDate":"2021-10-18"},{"lineNumber":124,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":125,"author":{"gitId":"houtenteo"},"content":"        if (interestList \u003d\u003d null) {","lastModifiedDate":"2021-10-20"},{"lineNumber":126,"author":{"gitId":"houtenteo"},"content":"            return this;","lastModifiedDate":"2021-10-20"},{"lineNumber":127,"author":{"gitId":"houtenteo"},"content":"        }","lastModifiedDate":"2021-10-20"},{"lineNumber":128,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":129,"author":{"gitId":"houtenteo"},"content":"        InterestsList newInterestList \u003d new InterestsList();","lastModifiedDate":"2021-10-20"},{"lineNumber":130,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":131,"author":{"gitId":"houtenteo"},"content":"        for (String interest : interestList) {","lastModifiedDate":"2021-10-18"},{"lineNumber":132,"author":{"gitId":"houtenteo"},"content":"            Interest i \u003d new Interest(interest);","lastModifiedDate":"2021-10-18"},{"lineNumber":133,"author":{"gitId":"houtenteo"},"content":"            newInterestList.addInterest(i);","lastModifiedDate":"2021-10-20"},{"lineNumber":134,"author":{"gitId":"houtenteo"},"content":"        }","lastModifiedDate":"2021-10-18"},{"lineNumber":135,"author":{"gitId":"houtenteo"},"content":"        interests \u003d newInterestList;","lastModifiedDate":"2021-10-20"},{"lineNumber":136,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":137,"author":{"gitId":"houtenteo"},"content":"        return this;","lastModifiedDate":"2021-10-18"},{"lineNumber":138,"author":{"gitId":"houtenteo"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":139,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":140,"author":{"gitId":"houtenteo"},"content":"    /**","lastModifiedDate":"2021-09-21"},{"lineNumber":141,"author":{"gitId":"houtenteo"},"content":"     * Builds person","lastModifiedDate":"2021-09-21"},{"lineNumber":142,"author":{"gitId":"houtenteo"},"content":"     * @return the person","lastModifiedDate":"2021-09-21"},{"lineNumber":143,"author":{"gitId":"houtenteo"},"content":"     */","lastModifiedDate":"2021-09-21"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    public Person build() {","lastModifiedDate":"2021-09-21"},{"lineNumber":145,"author":{"gitId":"pranav-ganesh"},"content":"        return new Person(name, phone, email, isCalled, address, gender, age, interests);","lastModifiedDate":"2021-11-04"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-21"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":148,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-09-21"}],"authorContributionMap":{"houtenteo":63,"pranav-ganesh":9,"-":76}},{"path":"src/test/java/seedu/address/testutil/PersonUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2021-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2021-10-25"},{"lineNumber":4,"author":{"gitId":"houtenteo"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_AGE;","lastModifiedDate":"2021-10-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2021-09-21"},{"lineNumber":6,"author":{"gitId":"houtenteo"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_GENDER;","lastModifiedDate":"2021-10-25"},{"lineNumber":7,"author":{"gitId":"houtenteo"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_INTEREST;","lastModifiedDate":"2021-10-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2021-09-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2021-09-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":11,"author":{"gitId":"houtenteo"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2021-09-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2021-09-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2021-09-21"},{"lineNumber":16,"author":{"gitId":"houtenteo"},"content":"import seedu.address.model.person.interests.Interest;","lastModifiedDate":"2021-10-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2021-09-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * A utility class for Person.","lastModifiedDate":"2021-09-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2021-09-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class PersonUtil {","lastModifiedDate":"2021-09-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-09-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Returns an add command string for adding the {@code person}.","lastModifiedDate":"2021-09-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-09-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static String getAddCommand(Person person) {","lastModifiedDate":"2021-09-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        return AddCommand.COMMAND_WORD + \" \" + getPersonDetails(person);","lastModifiedDate":"2021-09-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-09-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Returns the part of command string for the given {@code person}\u0027s details.","lastModifiedDate":"2021-09-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-09-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public static String getPersonDetails(Person person) {","lastModifiedDate":"2021-09-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2021-09-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_NAME + person.getName().fullName + \" \");","lastModifiedDate":"2021-09-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_PHONE + person.getPhone().value + \" \");","lastModifiedDate":"2021-09-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_EMAIL + person.getEmail().value + \" \");","lastModifiedDate":"2021-09-21"},{"lineNumber":38,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":39,"author":{"gitId":"houtenteo"},"content":"        if (!person.getAddress().isEmpty()) {","lastModifiedDate":"2021-10-25"},{"lineNumber":40,"author":{"gitId":"houtenteo"},"content":"            sb.append(PREFIX_ADDRESS + person.getAddress().value);","lastModifiedDate":"2021-10-25"},{"lineNumber":41,"author":{"gitId":"houtenteo"},"content":"        }","lastModifiedDate":"2021-10-25"},{"lineNumber":42,"author":{"gitId":"houtenteo"},"content":"        if (!person.getGender().isEmpty()) {","lastModifiedDate":"2021-10-25"},{"lineNumber":43,"author":{"gitId":"houtenteo"},"content":"            sb.append(PREFIX_GENDER + person.getGender().value);","lastModifiedDate":"2021-10-25"},{"lineNumber":44,"author":{"gitId":"houtenteo"},"content":"        }","lastModifiedDate":"2021-10-25"},{"lineNumber":45,"author":{"gitId":"houtenteo"},"content":"        if (!person.getAge().isEmpty()) {","lastModifiedDate":"2021-10-25"},{"lineNumber":46,"author":{"gitId":"houtenteo"},"content":"            sb.append(PREFIX_AGE + person.getAge().value);","lastModifiedDate":"2021-10-25"},{"lineNumber":47,"author":{"gitId":"houtenteo"},"content":"        }","lastModifiedDate":"2021-10-25"},{"lineNumber":48,"author":{"gitId":"houtenteo"},"content":"        if (!person.getInterests().isEmpty()) {","lastModifiedDate":"2021-10-25"},{"lineNumber":49,"author":{"gitId":"houtenteo"},"content":"            ArrayList\u003cInterest\u003e interests \u003d person.getInterests().getAllInterests();","lastModifiedDate":"2021-10-25"},{"lineNumber":50,"author":{"gitId":"houtenteo"},"content":"            for (Interest i : interests) {","lastModifiedDate":"2021-10-25"},{"lineNumber":51,"author":{"gitId":"houtenteo"},"content":"                sb.append(PREFIX_INTEREST + \"i\");","lastModifiedDate":"2021-10-25"},{"lineNumber":52,"author":{"gitId":"houtenteo"},"content":"            }","lastModifiedDate":"2021-10-25"},{"lineNumber":53,"author":{"gitId":"houtenteo"},"content":"        }","lastModifiedDate":"2021-09-22"},{"lineNumber":54,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2021-09-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-09-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     * Returns the part of command string for the given {@code EditPersonDescriptor}\u0027s details.","lastModifiedDate":"2021-09-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-09-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public static String getEditPersonDescriptorDetails(EditPersonDescriptor descriptor) {","lastModifiedDate":"2021-09-21"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2021-09-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        descriptor.getName().ifPresent(name -\u003e sb.append(PREFIX_NAME).append(name.fullName).append(\" \"));","lastModifiedDate":"2021-09-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        descriptor.getPhone().ifPresent(phone -\u003e sb.append(PREFIX_PHONE).append(phone.value).append(\" \"));","lastModifiedDate":"2021-09-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        descriptor.getEmail().ifPresent(email -\u003e sb.append(PREFIX_EMAIL).append(email.value).append(\" \"));","lastModifiedDate":"2021-09-21"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2021-09-21"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-21"},{"lineNumber":68,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-09-21"}],"authorContributionMap":{"houtenteo":22,"-":46}},{"path":"src/test/java/seedu/address/testutil/TypicalPersons.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2021-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2021-10-18"},{"lineNumber":4,"author":{"gitId":"houtenteo"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_AGE_BOB;","lastModifiedDate":"2021-10-18"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;","lastModifiedDate":"2021-09-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2021-09-21"},{"lineNumber":7,"author":{"gitId":"houtenteo"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_GENDER_BOB;","lastModifiedDate":"2021-10-18"},{"lineNumber":8,"author":{"gitId":"houtenteo"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_INTEREST_BOB;","lastModifiedDate":"2021-10-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2021-09-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2021-09-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2021-09-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2021-09-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-09-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-09-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2021-09-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2021-09-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2021-09-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2021-09-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * A utility class containing a list of {@code Person} objects to be used in tests.","lastModifiedDate":"2021-09-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2021-09-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class TypicalPersons {","lastModifiedDate":"2021-09-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static final Person ALICE \u003d new PersonBuilder().withName(\"Alice Pauline\")","lastModifiedDate":"2021-09-21"},{"lineNumber":27,"author":{"gitId":"pranav-ganesh"},"content":"            .withEmail(\"alice@example.com\").withPhone(\"94351253\").withCalled(\"false\").withAddress(\"MY HOUSE\")","lastModifiedDate":"2021-11-04"},{"lineNumber":28,"author":{"gitId":"houtenteo"},"content":"            .withGender(\"F\").withAge(\"22\").withInterest(\"Running\").build();","lastModifiedDate":"2021-10-18"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public static final Person BENSON \u003d new PersonBuilder().withName(\"Benson Meier\")","lastModifiedDate":"2021-09-21"},{"lineNumber":30,"author":{"gitId":"pranav-ganesh"},"content":"            .withEmail(\"johnd@example.com\").withPhone(\"98765432\").withCalled(\"false\").withAddress(\"HIS HOUSE\")","lastModifiedDate":"2021-11-04"},{"lineNumber":31,"author":{"gitId":"pranav-ganesh"},"content":"            .withCalled(\"false\").withGender(\"M\").withAge(\"18\").withInterest(\"Eating\", \"Sleeping\").build();","lastModifiedDate":"2021-11-04"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static final Person CARL \u003d new PersonBuilder().withName(\"Carl Kurz\").withPhone(\"95352563\")","lastModifiedDate":"2021-09-21"},{"lineNumber":33,"author":{"gitId":"pranav-ganesh"},"content":"            .withEmail(\"heinz@example.com\").withCalled(\"false\").build();","lastModifiedDate":"2021-11-04"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public static final Person DANIEL \u003d new PersonBuilder().withName(\"Daniel Meier\").withPhone(\"87652533\")","lastModifiedDate":"2021-09-21"},{"lineNumber":35,"author":{"gitId":"pranav-ganesh"},"content":"            .withEmail(\"cornelia@example.com\").withCalled(\"false\").build();","lastModifiedDate":"2021-11-04"},{"lineNumber":36,"author":{"gitId":"houtenteo"},"content":"    public static final Person ELLE \u003d new PersonBuilder().withName(\"Elle Meyer\").withPhone(\"94822248\")","lastModifiedDate":"2021-11-01"},{"lineNumber":37,"author":{"gitId":"pranav-ganesh"},"content":"            .withEmail(\"werner@example.com\").withCalled(\"false\").build();","lastModifiedDate":"2021-11-04"},{"lineNumber":38,"author":{"gitId":"houtenteo"},"content":"    public static final Person FIONA \u003d new PersonBuilder().withName(\"Fiona Kunz\").withPhone(\"94824278\")","lastModifiedDate":"2021-11-01"},{"lineNumber":39,"author":{"gitId":"pranav-ganesh"},"content":"            .withEmail(\"lydia@example.com\").withCalled(\"false\").build();","lastModifiedDate":"2021-11-04"},{"lineNumber":40,"author":{"gitId":"houtenteo"},"content":"    public static final Person GEORGE \u003d new PersonBuilder().withName(\"George Best\").withPhone(\"94824428\")","lastModifiedDate":"2021-11-01"},{"lineNumber":41,"author":{"gitId":"pranav-ganesh"},"content":"            .withEmail(\"anna@example.com\").withCalled(\"false\").build();","lastModifiedDate":"2021-11-04"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    // Manually added","lastModifiedDate":"2021-09-21"},{"lineNumber":44,"author":{"gitId":"houtenteo"},"content":"    public static final Person HOON \u003d new PersonBuilder().withName(\"Hoon Meier\").withPhone(\"84824248\")","lastModifiedDate":"2021-11-01"},{"lineNumber":45,"author":{"gitId":"pranav-ganesh"},"content":"            .withEmail(\"stefan@example.com\").withCalled(\"false\").build();","lastModifiedDate":"2021-11-04"},{"lineNumber":46,"author":{"gitId":"houtenteo"},"content":"    public static final Person IDA \u003d new PersonBuilder().withName(\"Ida Mueller\").withPhone(\"84821318\")","lastModifiedDate":"2021-11-01"},{"lineNumber":47,"author":{"gitId":"pranav-ganesh"},"content":"            .withEmail(\"hans@example.com\").withCalled(\"false\").build();","lastModifiedDate":"2021-11-04"},{"lineNumber":48,"author":{"gitId":"pranav-ganesh"},"content":"    public static final Person BRADY \u003d new PersonBuilder().withName(\"Brady Harrison\").withPhone(\"96664428\")","lastModifiedDate":"2021-11-06"},{"lineNumber":49,"author":{"gitId":"pranav-ganesh"},"content":"            .withEmail(\"brady@example.com\").withAddress(\"HOME\").withGender(\"M\").withAge(\"45\")","lastModifiedDate":"2021-11-06"},{"lineNumber":50,"author":{"gitId":"pranav-ganesh"},"content":"            .withCalled(\"false\").withInterest(\"Cooking\", \"Tutoring\").build();","lastModifiedDate":"2021-11-06"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    // Manually added - Person\u0027s details found in {@code CommandTestUtil}","lastModifiedDate":"2021-09-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public static final Person AMY \u003d new PersonBuilder().withName(VALID_NAME_AMY).withPhone(VALID_PHONE_AMY)","lastModifiedDate":"2021-09-21"},{"lineNumber":54,"author":{"gitId":"pranav-ganesh"},"content":"            .withEmail(VALID_EMAIL_AMY).withCalled(\"false\").build();","lastModifiedDate":"2021-11-04"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public static final Person BOB \u003d new PersonBuilder().withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2021-09-21"},{"lineNumber":56,"author":{"gitId":"pranav-ganesh"},"content":"            .withEmail(VALID_EMAIL_BOB).withCalled(\"false\").withAddress(VALID_ADDRESS_BOB)","lastModifiedDate":"2021-11-04"},{"lineNumber":57,"author":{"gitId":"houtenteo"},"content":"            .withGender(VALID_GENDER_BOB).withAge(VALID_AGE_BOB).withInterest(VALID_INTEREST_BOB).build();","lastModifiedDate":"2021-10-18"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public static final String KEYWORD_MATCHING_MEIER \u003d \"Meier\"; // A keyword that matches MEIER","lastModifiedDate":"2021-09-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    private TypicalPersons() {} // prevents instantiation","lastModifiedDate":"2021-09-21"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-09-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * Returns an {@code AddressBook} with all the typical persons.","lastModifiedDate":"2021-09-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-09-21"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public static AddressBook getTypicalAddressBook() {","lastModifiedDate":"2021-09-21"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        AddressBook ab \u003d new AddressBook();","lastModifiedDate":"2021-09-21"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        for (Person person : getTypicalPersons()) {","lastModifiedDate":"2021-09-21"},{"lineNumber":69,"author":{"gitId":"-"},"content":"            ab.addPerson(person);","lastModifiedDate":"2021-09-21"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-09-21"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        return ab;","lastModifiedDate":"2021-09-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public static List\u003cPerson\u003e getTypicalPersons() {","lastModifiedDate":"2021-09-21"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(ALICE, BENSON, CARL, DANIEL, ELLE, FIONA, GEORGE));","lastModifiedDate":"2021-09-21"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-21"},{"lineNumber":77,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-09-21"}],"authorContributionMap":{"houtenteo":10,"pranav-ganesh":15,"-":52}}]
