[{"path":"README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Moley456"},"content":"[![CI Status](https://github.com/AY2122S1-CS2103T-W12-1/tp/actions/workflows/gradle.yml/badge.svg)](https://github.com/AY2122S1-CS2103T-W12-1/tp/actions/workflows/gradle.yml)","lastModifiedDate":"2021-09-27"},{"lineNumber":2,"author":{"gitId":"YoYoCiti"},"content":"[![codecov](https://codecov.io/gh/AY2122S1-CS2103T-W12-1/tp/branch/master/graph/badge.svg?token\u003dW77BXICS47)](https://codecov.io/gh/AY2122S1-CS2103T-W12-1/tp)","lastModifiedDate":"2021-11-01"},{"lineNumber":3,"author":{"gitId":"Moley456"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":4,"author":{"gitId":"Moley456"},"content":"# SportsPA","lastModifiedDate":"2021-09-27"},{"lineNumber":5,"author":{"gitId":"Moley456"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":6,"author":{"gitId":"Moley456"},"content":"SportsPA is a desktop application used to manage membership and training sessions of NUS sports CCAs.","lastModifiedDate":"2021-09-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"![Ui](docs/images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"Moley456"},"content":"SportsPA is","lastModifiedDate":"2021-09-27"},{"lineNumber":11,"author":{"gitId":"Moley456"},"content":"* text-based","lastModifiedDate":"2021-09-27"},{"lineNumber":12,"author":{"gitId":"Moley456"},"content":"* Easy to use","lastModifiedDate":"2021-09-27"},{"lineNumber":13,"author":{"gitId":"Moley456"},"content":"* Simple UI","lastModifiedDate":"2021-09-27"},{"lineNumber":14,"author":{"gitId":"Moley456"},"content":"* Fast to use","lastModifiedDate":"2021-09-27"},{"lineNumber":15,"author":{"gitId":"Moley456"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":16,"author":{"gitId":"Moley456"},"content":"Use SportsPA to","lastModifiedDate":"2021-09-27"},{"lineNumber":17,"author":{"gitId":"Moley456"},"content":"* track member contact information, attendance and availability","lastModifiedDate":"2021-09-27"},{"lineNumber":18,"author":{"gitId":"Moley456"},"content":"* track booked facilities","lastModifiedDate":"2021-09-27"},{"lineNumber":19,"author":{"gitId":"Moley456"},"content":"* allocate members to different locations for training sessions","lastModifiedDate":"2021-09-27"},{"lineNumber":20,"author":{"gitId":"Moley456"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":21,"author":{"gitId":"Moley456"},"content":"View detailed documentation of SportsPA [here](https://ay2122s1-cs2103t-w12-1.github.io/tp/)","lastModifiedDate":"2021-09-27"},{"lineNumber":22,"author":{"gitId":"Moley456"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":23,"author":{"gitId":"Moley456"},"content":"This project is based on the AddressBook-Level3 project created by the [SE-EDU initiative](https://se-education.org).","lastModifiedDate":"2021-09-27"}],"authorContributionMap":{"YoYoCiti":1,"Moley456":19,"-":3}},{"path":"build.gradle","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2016-08-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00274.0.4\u0027","lastModifiedDate":"2019-02-28"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2016-12-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    id \u0027jacoco\u0027","lastModifiedDate":"2020-08-07"},{"lineNumber":7,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":9,"author":{"gitId":"-"},"content":"mainClassName \u003d \u0027seedu.address.Main\u0027","lastModifiedDate":"2019-02-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"sourceCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":12,"author":{"gitId":"-"},"content":"targetCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    maven { url \u0027https://oss.sonatype.org/content/repositories/snapshots/\u0027 }","lastModifiedDate":"2018-04-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2016-10-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.29\u0027","lastModifiedDate":"2020-05-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-10-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2018-03-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2018-03-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    finalizedBy jacocoTestReport","lastModifiedDate":"2020-08-07"},{"lineNumber":26,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-08-07"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-08-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"task coverage(type: JacocoReport) {","lastModifiedDate":"2020-08-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    sourceDirectories.from files(sourceSets.main.allSource.srcDirs)","lastModifiedDate":"2020-08-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    classDirectories.from files(sourceSets.main.output)","lastModifiedDate":"2020-08-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    executionData.from files(jacocoTestReport.executionData)","lastModifiedDate":"2020-08-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    afterEvaluate {","lastModifiedDate":"2020-08-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        classDirectories.from files(classDirectories.files.collect {","lastModifiedDate":"2020-08-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            fileTree(dir: it, exclude: [\u0027**/*.jar\u0027])","lastModifiedDate":"2020-08-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        })","lastModifiedDate":"2020-08-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    reports {","lastModifiedDate":"2020-08-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        html.enabled \u003d true","lastModifiedDate":"2020-08-07"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        xml.enabled \u003d true","lastModifiedDate":"2020-08-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-03-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    String jUnitVersion \u003d \u00275.4.0\u0027","lastModifiedDate":"2019-02-10"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2019-02-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.core\u0027, name: \u0027jackson-databind\u0027, version: \u00272.7.0\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.datatype\u0027, name: \u0027jackson-datatype-jsr310\u0027, version: \u00272.7.4\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":68,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2016-08-29"},{"lineNumber":69,"author":{"gitId":"Moley456"},"content":"    archiveName \u003d \u0027SportsPA.jar\u0027","lastModifiedDate":"2021-10-12"},{"lineNumber":70,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"YoYoCiti"},"content":"run {","lastModifiedDate":"2021-10-17"},{"lineNumber":73,"author":{"gitId":"YoYoCiti"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2021-10-17"},{"lineNumber":74,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-10-17"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":76,"author":{"gitId":"-"},"content":"defaultTasks \u0027clean\u0027, \u0027test\u0027","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"YoYoCiti":2,"Moley456":1,"-":73}},{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: About Us","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"We are a team based in the [School of Computing, National University of Singapore](http://www.comp.nus.edu.sg).","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"You can reach us at the email `seer[at]comp.nus.edu.sg`","lastModifiedDate":"2020-06-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"## Project team","lastModifiedDate":"2020-06-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"Shruthi0310"},"content":"### Shruthi","lastModifiedDate":"2021-09-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"Shruthi0310"},"content":"\u003cimg src\u003d\"images/shruthi0310.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2021-09-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"Shruthi0310"},"content":"[[github](https://github.com/shruthi0310)]","lastModifiedDate":"2021-09-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"[[portfolio](team/johndoe.md)]","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"* Role: Project Advisor","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"felix-ong"},"content":"### Felix Ong","lastModifiedDate":"2021-09-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"felix-ong"},"content":"\u003cimg src\u003d\"images/felix-ong.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2021-09-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"felix-ong"},"content":"[[github](http://github.com/felix-ong)]","lastModifiedDate":"2021-09-27"},{"lineNumber":26,"author":{"gitId":"felix-ong"},"content":"[[portfolio](team/felix-ong.md)]","lastModifiedDate":"2021-09-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"* Role: Team Lead","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"* Responsibilities: UI","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"Moley456"},"content":"### Xing Wei","lastModifiedDate":"2021-09-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"Moley456"},"content":"\u003cimg src\u003d\"images/moley456.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2021-09-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"Moley456"},"content":"[[github](http://github.com/Moley456)]","lastModifiedDate":"2021-09-27"},{"lineNumber":36,"author":{"gitId":"Moley456"},"content":"[[portfolio](team/Moley456.md)]","lastModifiedDate":"2021-09-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"* Responsibilities: Data","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"YoYoCiti"},"content":"### Seow Xiu Wen","lastModifiedDate":"2021-09-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"YoYoCiti"},"content":"\u003cimg src\u003d\"images/yoyociti.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2021-09-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"YoYoCiti"},"content":"[[github](http://github.com/YoYoCiti)]","lastModifiedDate":"2021-09-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"[[portfolio](team/johndoe.md)]","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"YoYoCiti"},"content":"* Responsibilities: Dev Ops + Documentation","lastModifiedDate":"2021-11-01"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"tsinyee"},"content":"### Teo Sin Yee","lastModifiedDate":"2021-09-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"tsinyee"},"content":"\u003cimg src\u003d\"images/tsinyee.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2021-09-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"tsinyee"},"content":"[[github](http://github.com/tsinyee)]","lastModifiedDate":"2021-09-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"[[portfolio](team/johndoe.md)]","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"* Responsibilities: UI","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"YoYoCiti":4,"Shruthi0310":3,"Moley456":4,"-":41,"felix-ong":4,"tsinyee":3}},{"path":"docs/DeveloperGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2021-10-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: Developer Guide","lastModifiedDate":"2021-10-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":6,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2021-10-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2021-10-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"## **Acknowledgements**","lastModifiedDate":"2021-07-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":13,"author":{"gitId":"YoYoCiti"},"content":"* {list here sources of all reused/adapted ideas, code, documentation, and third-party libraries -- include links to the","lastModifiedDate":"2021-10-22"},{"lineNumber":14,"author":{"gitId":"YoYoCiti"},"content":"  original source as well}","lastModifiedDate":"2021-10-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":16,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-07-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"## **Setting up, getting started**","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"Refer to the guide [_Setting up and getting started_](SettingUp.md).","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"## **Design**","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"YoYoCiti"},"content":":bulb: **Tip:** The `.puml` files used to create diagrams in this document can be found in","lastModifiedDate":"2021-10-22"},{"lineNumber":29,"author":{"gitId":"YoYoCiti"},"content":"the [diagrams](https://github.com/se-edu/addressbook-level3/tree/master/docs/diagrams/) folder. Refer to the [_PlantUML","lastModifiedDate":"2021-10-22"},{"lineNumber":30,"author":{"gitId":"YoYoCiti"},"content":"Tutorial_ at se-edu/guides](https://se-education.org/guides/tutorials/plantUml.html) to learn how to create and edit","lastModifiedDate":"2021-10-22"},{"lineNumber":31,"author":{"gitId":"YoYoCiti"},"content":"diagrams.","lastModifiedDate":"2021-10-22"},{"lineNumber":32,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"### Architecture","lastModifiedDate":"2021-07-31"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureDiagram.png\" width\u003d\"280\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"The ***Architecture Diagram*** given above explains the high-level design of the App.","lastModifiedDate":"2021-07-31"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"Given below is a quick overview of main components and how they interact with each other.","lastModifiedDate":"2021-07-31"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":42,"author":{"gitId":"-"},"content":"**Main components of the architecture**","lastModifiedDate":"2021-07-31"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"YoYoCiti"},"content":"**`Main`** has two classes","lastModifiedDate":"2021-10-22"},{"lineNumber":45,"author":{"gitId":"YoYoCiti"},"content":"called [`Main`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/Main.java)","lastModifiedDate":"2021-10-22"},{"lineNumber":46,"author":{"gitId":"YoYoCiti"},"content":"and [`MainApp`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/MainApp.java). It","lastModifiedDate":"2021-10-22"},{"lineNumber":47,"author":{"gitId":"YoYoCiti"},"content":"is responsible for,","lastModifiedDate":"2021-10-22"},{"lineNumber":48,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":49,"author":{"gitId":"-"},"content":"* At app launch: Initializes the components in the correct sequence, and connects them up with each other.","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"* At shut down: Shuts down the components and invokes cleanup methods where necessary.","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"[**`Commons`**](#common-classes) represents a collection of classes used by multiple other components.","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"The rest of the App consists of four components.","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"* [**`UI`**](#ui-component): The UI of the App.","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"* [**`Logic`**](#logic-component): The command executor.","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"* [**`Model`**](#model-component): Holds the data of the App in memory.","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"* [**`Storage`**](#storage-component): Reads data from, and writes data to, the hard disk.","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"**How the architecture components interact with each other**","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"YoYoCiti"},"content":"The *Sequence Diagram* below shows how the components interact with each other for the scenario where the user issues","lastModifiedDate":"2021-10-22"},{"lineNumber":64,"author":{"gitId":"YoYoCiti"},"content":"the command `delete 1`.","lastModifiedDate":"2021-10-22"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureSequenceDiagram.png\" width\u003d\"574\" /\u003e","lastModifiedDate":"2020-06-07"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"Each of the four main components (also shown in the diagram above),","lastModifiedDate":"2021-07-31"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":70,"author":{"gitId":"-"},"content":"* defines its *API* in an `interface` with the same name as the Component.","lastModifiedDate":"2021-07-31"},{"lineNumber":71,"author":{"gitId":"YoYoCiti"},"content":"* implements its functionality using a concrete `{Component Name}Manager` class (which follows the corresponding","lastModifiedDate":"2021-10-22"},{"lineNumber":72,"author":{"gitId":"YoYoCiti"},"content":"  API `interface` mentioned in the previous point.","lastModifiedDate":"2021-10-22"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":74,"author":{"gitId":"YoYoCiti"},"content":"For example, the `Logic` component defines its API in the `Logic.java` interface and implements its functionality using","lastModifiedDate":"2021-10-22"},{"lineNumber":75,"author":{"gitId":"YoYoCiti"},"content":"the `LogicManager.java` class which follows the `Logic` interface. Other components interact with a given component","lastModifiedDate":"2021-10-22"},{"lineNumber":76,"author":{"gitId":"YoYoCiti"},"content":"through its interface rather than the concrete class (reason: to prevent outside component\u0027s being coupled to the","lastModifiedDate":"2021-10-22"},{"lineNumber":77,"author":{"gitId":"YoYoCiti"},"content":"implementation of a component), as illustrated in the (partial) class diagram below.","lastModifiedDate":"2021-10-22"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":79,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ComponentManagers.png\" width\u003d\"300\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":81,"author":{"gitId":"-"},"content":"The sections below give more details of each component.","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"### UI component","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"YoYoCiti"},"content":"The **API** of this component is specified","lastModifiedDate":"2021-10-22"},{"lineNumber":86,"author":{"gitId":"YoYoCiti"},"content":"in [`Ui.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/Ui.java)","lastModifiedDate":"2021-10-22"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"![Structure of the UI Component](images/UiClassDiagram.png)","lastModifiedDate":"2021-07-31"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"YoYoCiti"},"content":"The UI consists of a `MainWindow` that is made up of parts e.g.`CommandBox`, `ResultDisplay`, `PersonListPanel`","lastModifiedDate":"2021-10-22"},{"lineNumber":91,"author":{"gitId":"YoYoCiti"},"content":", `StatusBarFooter` etc. All these, including the `MainWindow`, inherit from the abstract `UiPart` class which captures","lastModifiedDate":"2021-10-22"},{"lineNumber":92,"author":{"gitId":"YoYoCiti"},"content":"the commonalities between classes that represent parts of the visible GUI.","lastModifiedDate":"2021-10-22"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"YoYoCiti"},"content":"The `UI` component uses the JavaFx UI framework. The layout of these UI parts are defined in matching `.fxml` files that","lastModifiedDate":"2021-10-22"},{"lineNumber":95,"author":{"gitId":"YoYoCiti"},"content":"are in the `src/main/resources/view` folder. For example, the layout of","lastModifiedDate":"2021-10-22"},{"lineNumber":96,"author":{"gitId":"YoYoCiti"},"content":"the [`MainWindow`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/MainWindow.java)","lastModifiedDate":"2021-10-22"},{"lineNumber":97,"author":{"gitId":"YoYoCiti"},"content":"is specified","lastModifiedDate":"2021-10-22"},{"lineNumber":98,"author":{"gitId":"YoYoCiti"},"content":"in [`MainWindow.fxml`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/resources/view/MainWindow.fxml)","lastModifiedDate":"2021-10-22"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"The `UI` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"* executes user commands using the `Logic` component.","lastModifiedDate":"2021-07-31"},{"lineNumber":103,"author":{"gitId":"-"},"content":"* listens for changes to `Model` data so that the UI can be updated with the modified data.","lastModifiedDate":"2021-07-31"},{"lineNumber":104,"author":{"gitId":"-"},"content":"* keeps a reference to the `Logic` component, because the `UI` relies on the `Logic` to execute commands.","lastModifiedDate":"2021-07-31"},{"lineNumber":105,"author":{"gitId":"Moley456"},"content":"* depends on some classes in the `Model` component, as it displays `Person` and `Facility` object residing in the `Model`.","lastModifiedDate":"2021-10-28"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"### Logic component","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"**API** : [`Logic.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/logic/Logic.java)","lastModifiedDate":"2021-10-28"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"Here\u0027s a (partial) class diagram of the `Logic` component:","lastModifiedDate":"2021-07-31"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/LogicClassDiagram.png\" width\u003d\"550\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"How the `Logic` component works:","lastModifiedDate":"2021-07-31"},{"lineNumber":116,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":117,"author":{"gitId":"-"},"content":"1. When `Logic` is called upon to execute a command, it uses the `AddressBookParser` class to parse the user command.","lastModifiedDate":"2021-07-31"},{"lineNumber":118,"author":{"gitId":"YoYoCiti"},"content":"1. This results in a `Command` object (more precisely, an object of one of its subclasses e.g., `AddMemberCommand`)","lastModifiedDate":"2021-10-22"},{"lineNumber":119,"author":{"gitId":"YoYoCiti"},"content":"   which is executed by the `LogicManager`.","lastModifiedDate":"2021-10-22"},{"lineNumber":120,"author":{"gitId":"-"},"content":"1. The command can communicate with the `Model` when it is executed (e.g. to add a person).","lastModifiedDate":"2021-07-31"},{"lineNumber":121,"author":{"gitId":"-"},"content":"1. The result of the command execution is encapsulated as a `CommandResult` object which is returned back from `Logic`.","lastModifiedDate":"2021-07-31"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":123,"author":{"gitId":"YoYoCiti"},"content":"The Sequence Diagram below illustrates the interactions within the `Logic` component for the `execute(\"delete 1\")` API","lastModifiedDate":"2021-10-22"},{"lineNumber":124,"author":{"gitId":"YoYoCiti"},"content":"call.","lastModifiedDate":"2021-10-22"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"![Interactions Inside the Logic Component for the `delete 1` Command](images/DeleteSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `DeleteCommandParser` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2020-05-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"Here are the other classes in `Logic` (omitted from the class diagram above) that are used for parsing a user command:","lastModifiedDate":"2021-07-31"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":133,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ParserClasses.png\" width\u003d\"600\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"How the parsing works:","lastModifiedDate":"2021-07-31"},{"lineNumber":136,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":137,"author":{"gitId":"YoYoCiti"},"content":"* When called upon to parse a user command, the `AddressBookParser` class creates an `XYZCommandParser` (`XYZ` is a","lastModifiedDate":"2021-10-22"},{"lineNumber":138,"author":{"gitId":"YoYoCiti"},"content":"  placeholder for the specific command name e.g., `AddMemberCommandParser`) which uses the other classes shown above to","lastModifiedDate":"2021-10-22"},{"lineNumber":139,"author":{"gitId":"YoYoCiti"},"content":"  parse the user command and create a `XYZCommand` object (e.g., `AddMemberCommand`) which the `AddressBookParser`","lastModifiedDate":"2021-10-22"},{"lineNumber":140,"author":{"gitId":"YoYoCiti"},"content":"  returns back as a `Command` object.","lastModifiedDate":"2021-10-22"},{"lineNumber":141,"author":{"gitId":"YoYoCiti"},"content":"* All `XYZCommandParser` classes (e.g., `AddMemberCommandParser`, `DeleteCommandParser`, ...) inherit from the `Parser`","lastModifiedDate":"2021-10-22"},{"lineNumber":142,"author":{"gitId":"YoYoCiti"},"content":"  interface so that they can be treated similarly where possible e.g, during testing.","lastModifiedDate":"2021-10-22"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"-"},"content":"### Model component","lastModifiedDate":"2021-07-31"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":146,"author":{"gitId":"YoYoCiti"},"content":"**","lastModifiedDate":"2021-10-22"},{"lineNumber":147,"author":{"gitId":"YoYoCiti"},"content":"API** : [`Model.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/model/Model.java)","lastModifiedDate":"2021-10-22"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"felix-ong"},"content":"\u003cimg src\u003d\"images/ModelClassDiagramUpdated.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2021-10-20"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"The `Model` component,","lastModifiedDate":"2021-07-31"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"Moley456"},"content":"* stores the address book data i.e., all `Person` and `Facility` objects (which are contained in a `UniquePersonList`","lastModifiedDate":"2021-10-28"},{"lineNumber":155,"author":{"gitId":"Moley456"},"content":"and a `UniqueFacilityList` object respectively).","lastModifiedDate":"2021-10-28"},{"lineNumber":156,"author":{"gitId":"Moley456"},"content":"* stores the currently \u0027selected\u0027 `Person` and `Facility` objects (e.g., results of a search query) as a separate _filtered_ list which","lastModifiedDate":"2021-10-28"},{"lineNumber":157,"author":{"gitId":"Moley456"},"content":"  is exposed to outsiders as unmodifiable `ObservableList\u003cPerson\u003e` and `ObservableList\u003cFacility\u003e` respectively which can be \u0027observed\u0027 e.g. the UI can be bound to","lastModifiedDate":"2021-10-28"},{"lineNumber":158,"author":{"gitId":"YoYoCiti"},"content":"  this list so that the UI automatically updates when the data in the list change.","lastModifiedDate":"2021-10-22"},{"lineNumber":159,"author":{"gitId":"YoYoCiti"},"content":"* stores a `UserPref` object that represents the user’s preferences. This is exposed to the outside as","lastModifiedDate":"2021-10-22"},{"lineNumber":160,"author":{"gitId":"YoYoCiti"},"content":"  a `ReadOnlyUserPref` objects.","lastModifiedDate":"2021-10-22"},{"lineNumber":161,"author":{"gitId":"YoYoCiti"},"content":"* does not depend on any of the other three components (as the `Model` represents data entities of the domain, they","lastModifiedDate":"2021-10-22"},{"lineNumber":162,"author":{"gitId":"YoYoCiti"},"content":"  should make sense on their own without depending on other components)","lastModifiedDate":"2021-10-22"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":164,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** An alternative (arguably, a more OOP) model is given below. It has a `Tag` list in the `AddressBook`, which `Person` references. This allows `AddressBook` to only require one `Tag` object per unique tag, instead of each `Person` needing their own `Tag` objects.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":166,"author":{"gitId":"felix-ong"},"content":"\u003cimg src\u003d\"images/BetterModelClassDiagramUpdated.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2021-10-20"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"### Storage component","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"YoYoCiti"},"content":"**","lastModifiedDate":"2021-10-22"},{"lineNumber":173,"author":{"gitId":"YoYoCiti"},"content":"API** : [`Storage.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/storage/Storage.java)","lastModifiedDate":"2021-10-22"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":175,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/StorageClassDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":177,"author":{"gitId":"-"},"content":"The `Storage` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":178,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":179,"author":{"gitId":"YoYoCiti"},"content":"* can save both address book data and user preference data in json format, and read them back into corresponding","lastModifiedDate":"2021-10-22"},{"lineNumber":180,"author":{"gitId":"YoYoCiti"},"content":"  objects.","lastModifiedDate":"2021-10-22"},{"lineNumber":181,"author":{"gitId":"YoYoCiti"},"content":"* inherits from both `AddressBookStorage` and `UserPrefStorage`, which means it can be treated as either one (if only","lastModifiedDate":"2021-10-22"},{"lineNumber":182,"author":{"gitId":"YoYoCiti"},"content":"  the functionality of only one is needed).","lastModifiedDate":"2021-10-22"},{"lineNumber":183,"author":{"gitId":"YoYoCiti"},"content":"* depends on some classes in the `Model` component (because the `Storage` component\u0027s job is to save/retrieve objects","lastModifiedDate":"2021-10-22"},{"lineNumber":184,"author":{"gitId":"YoYoCiti"},"content":"  that belong to the `Model`)","lastModifiedDate":"2021-10-22"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":186,"author":{"gitId":"-"},"content":"### Common classes","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":188,"author":{"gitId":"-"},"content":"Classes used by multiple components are in the `seedu.addressbook.commons` package.","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"## **Implementation**","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"This section describes some noteworthy details on how certain features are implemented.","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"Shruthi0310"},"content":"### Mark/unmark attendance feature","lastModifiedDate":"2021-10-21"},{"lineNumber":197,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":198,"author":{"gitId":"Shruthi0310"},"content":"### Implementation","lastModifiedDate":"2021-10-21"},{"lineNumber":199,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":200,"author":{"gitId":"Shruthi0310"},"content":"The proposed mark/unmark attendance mechanism is facilitated by `ModelManager`. ModelManager contains the","lastModifiedDate":"2021-10-21"},{"lineNumber":201,"author":{"gitId":"YoYoCiti"},"content":"`filteredPersons` and attendance will be updated based on members index in this list. Additionally, it implements the","lastModifiedDate":"2021-10-22"},{"lineNumber":202,"author":{"gitId":"YoYoCiti"},"content":"following operations:","lastModifiedDate":"2021-10-22"},{"lineNumber":203,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":204,"author":{"gitId":"Shruthi0310"},"content":"* details to be added later","lastModifiedDate":"2021-10-21"},{"lineNumber":205,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":206,"author":{"gitId":"Shruthi0310"},"content":"Given below is an example usage scenario and how the mark/unmark attendance feature behaves at each step.","lastModifiedDate":"2021-10-21"},{"lineNumber":207,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":208,"author":{"gitId":"Shruthi0310"},"content":"Step 1. The user launches the application and adds members to the list. The `totalAttendance` and `todayAttendance`","lastModifiedDate":"2021-10-21"},{"lineNumber":209,"author":{"gitId":"Shruthi0310"},"content":"of the members added will be initialised to `0` and `false` respectively.","lastModifiedDate":"2021-10-21"},{"lineNumber":210,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":211,"author":{"gitId":"Shruthi0310"},"content":"Step 2. The user executes `mark 1` command to mark the 1st person as present.","lastModifiedDate":"2021-10-21"},{"lineNumber":212,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":213,"author":{"gitId":"Shruthi0310"},"content":"(more details to be added later)","lastModifiedDate":"2021-10-21"},{"lineNumber":214,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":215,"author":{"gitId":"Shruthi0310"},"content":"#### Design considerations:","lastModifiedDate":"2021-10-21"},{"lineNumber":216,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":217,"author":{"gitId":"Shruthi0310"},"content":"**Aspect: How mark \u0026 unmark executes:**","lastModifiedDate":"2021-10-21"},{"lineNumber":218,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":219,"author":{"gitId":"Shruthi0310"},"content":"* **Alternative 1 (current choice):** Uses index to mark attendance.","lastModifiedDate":"2021-10-21"},{"lineNumber":220,"author":{"gitId":"YoYoCiti"},"content":"    * Pros: Easy to implement (e.g there will be no two members with the same index in list, so there will be no","lastModifiedDate":"2021-10-22"},{"lineNumber":221,"author":{"gitId":"YoYoCiti"},"content":"      ambiguity)","lastModifiedDate":"2021-10-22"},{"lineNumber":222,"author":{"gitId":"YoYoCiti"},"content":"    * Cons: May require additional step of finding members\u0027 index using findm command then marking attendance.","lastModifiedDate":"2021-10-22"},{"lineNumber":223,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":224,"author":{"gitId":"Shruthi0310"},"content":"* **Alternative 2:** Uses names of members to mark attendance.","lastModifiedDate":"2021-10-21"},{"lineNumber":225,"author":{"gitId":"Shruthi0310"},"content":"    * Pros: Requires one less step of finding members.","lastModifiedDate":"2021-10-21"},{"lineNumber":226,"author":{"gitId":"YoYoCiti"},"content":"    * Cons: There may be two members with same name, so when marking using names, it might result in ambiguity of whose","lastModifiedDate":"2021-10-22"},{"lineNumber":227,"author":{"gitId":"YoYoCiti"},"content":"      attendance to mark.","lastModifiedDate":"2021-10-22"},{"lineNumber":228,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":229,"author":{"gitId":"YoYoCiti"},"content":"### Alias feature","lastModifiedDate":"2021-10-19"},{"lineNumber":230,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":231,"author":{"gitId":"YoYoCiti"},"content":"#### Implementation","lastModifiedDate":"2021-10-19"},{"lineNumber":232,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":233,"author":{"gitId":"YoYoCiti"},"content":"The aliases mechanism is facilitated by `AddressBookParser`. Aliases are stored in `AliasMap`, which keeps the mappings","lastModifiedDate":"2021-10-22"},{"lineNumber":234,"author":{"gitId":"YoYoCiti"},"content":"between `Shortcut` and `CommandWord`, and is stored in `UserPrefs`. The association between `Shortcut` and `CommandWord`","lastModifiedDate":"2021-10-22"},{"lineNumber":235,"author":{"gitId":"YoYoCiti"},"content":"is represented as `Alias`. `AliasMap` implements the following operations:","lastModifiedDate":"2021-10-22"},{"lineNumber":236,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":237,"author":{"gitId":"YoYoCiti"},"content":"* `AliasMap#add(Alias)` — Adds an alias to the mapping.","lastModifiedDate":"2021-10-19"},{"lineNumber":238,"author":{"gitId":"YoYoCiti"},"content":"* `AliasMap#remove(Shortcut)` — Removes an alias from the mapping.","lastModifiedDate":"2021-10-19"},{"lineNumber":239,"author":{"gitId":"YoYoCiti"},"content":"* `AliasMap#convertAliasIfPresent(String)` — Replaces the input string with the command if it is an alias.","lastModifiedDate":"2021-10-19"},{"lineNumber":240,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":241,"author":{"gitId":"YoYoCiti"},"content":"The first two operations are exposed in the `Model` interface as `Model#addAlias(Alias)`","lastModifiedDate":"2021-10-22"},{"lineNumber":242,"author":{"gitId":"YoYoCiti"},"content":"and `Model#removeAlias(Shortcut)` respectively.","lastModifiedDate":"2021-10-22"},{"lineNumber":243,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":244,"author":{"gitId":"YoYoCiti"},"content":"Given below is an example usage scenario and how the aliases mechanism behaves.","lastModifiedDate":"2021-10-19"},{"lineNumber":245,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":246,"author":{"gitId":"YoYoCiti"},"content":"Step 1. The user launches the application for the first time. `UserPrefs` is initialised and `AliasMap` is created with","lastModifiedDate":"2021-10-22"},{"lineNumber":247,"author":{"gitId":"YoYoCiti"},"content":"empty mappings.","lastModifiedDate":"2021-10-22"},{"lineNumber":248,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":249,"author":{"gitId":"YoYoCiti"},"content":"![AliasState0](images/AliasState0.png)","lastModifiedDate":"2021-10-19"},{"lineNumber":250,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":251,"author":{"gitId":"YoYoCiti"},"content":"Step 2. The user executes the `alias s/l cw/listf` command to create a shortcut `l` for the `listf` command. The `alias`","lastModifiedDate":"2021-10-22"},{"lineNumber":252,"author":{"gitId":"YoYoCiti"},"content":"command calls `Model#addAlias(Alias)`, causing a mapping between `l` and `listf` to be stored in `AliasMap`.","lastModifiedDate":"2021-10-22"},{"lineNumber":253,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":254,"author":{"gitId":"YoYoCiti"},"content":"![AliasState1](images/AliasState1.png)","lastModifiedDate":"2021-10-19"},{"lineNumber":255,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":256,"author":{"gitId":"YoYoCiti"},"content":"Step 3. The user now wants to use the shortcut `l` for a different command, `listm`, instead. The user","lastModifiedDate":"2021-10-22"},{"lineNumber":257,"author":{"gitId":"YoYoCiti"},"content":"executes `alias s/l cw/listm`. `Model#addAlias(Alias)` is called again and the mapping from `l` to `listf` is replaced","lastModifiedDate":"2021-10-22"},{"lineNumber":258,"author":{"gitId":"YoYoCiti"},"content":"with `l` to `listm` in `AliasMap`.","lastModifiedDate":"2021-10-22"},{"lineNumber":259,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":260,"author":{"gitId":"YoYoCiti"},"content":"![AliasState2](images/AliasState2.png)","lastModifiedDate":"2021-10-19"},{"lineNumber":261,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":262,"author":{"gitId":"YoYoCiti"},"content":"Step 4. The user enters `l`, which the system understands as `listm` and executes the `listm` command, displaying all","lastModifiedDate":"2021-10-22"},{"lineNumber":263,"author":{"gitId":"YoYoCiti"},"content":"members in the member list.","lastModifiedDate":"2021-10-22"},{"lineNumber":264,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":265,"author":{"gitId":"YoYoCiti"},"content":"The following sequence diagram shows how the system understands aliases:","lastModifiedDate":"2021-10-19"},{"lineNumber":266,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":267,"author":{"gitId":"YoYoCiti"},"content":"![AliasSequenceDiagram](images/AliasSequenceDiagram.png)","lastModifiedDate":"2021-10-19"},{"lineNumber":268,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":269,"author":{"gitId":"YoYoCiti"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `ListMembersCommand` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2021-10-19"},{"lineNumber":270,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":271,"author":{"gitId":"YoYoCiti"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":272,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":273,"author":{"gitId":"YoYoCiti"},"content":"Step 5. The user then realises that the shortcut `l` was not to their liking and deletes the alias by","lastModifiedDate":"2021-10-22"},{"lineNumber":274,"author":{"gitId":"YoYoCiti"},"content":"executing `unalias l`. The `unalias` command calls `Model#removeAlias(Shortcut)` and removes the mapping from `AliasMap`","lastModifiedDate":"2021-10-22"},{"lineNumber":275,"author":{"gitId":"YoYoCiti"},"content":".","lastModifiedDate":"2021-10-22"},{"lineNumber":276,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":277,"author":{"gitId":"YoYoCiti"},"content":"![AliasState3](images/AliasState3.png)","lastModifiedDate":"2021-10-19"},{"lineNumber":278,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":279,"author":{"gitId":"YoYoCiti"},"content":"Step 6. The user finally decides to use the shortcut `lm` for `listm` and executes `alias s/lm cw/lsitm`. The user","lastModifiedDate":"2021-10-22"},{"lineNumber":280,"author":{"gitId":"YoYoCiti"},"content":"closes the application and the alias defined are saved into `UserPrefStorage`, available for use at the next launch.","lastModifiedDate":"2021-10-22"},{"lineNumber":281,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":282,"author":{"gitId":"YoYoCiti"},"content":"The following activity diagram summarizes what happens when a user enters and executes a command:","lastModifiedDate":"2021-10-19"},{"lineNumber":283,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":284,"author":{"gitId":"YoYoCiti"},"content":"\u003cimg src\u003d\"images/AliasActivityDiagram.png\" width\u003d\"250\" /\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":285,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":286,"author":{"gitId":"YoYoCiti"},"content":"#### Design considerations:","lastModifiedDate":"2021-10-19"},{"lineNumber":287,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":288,"author":{"gitId":"YoYoCiti"},"content":"**Aspect: What the user can create shortcuts for**","lastModifiedDate":"2021-10-19"},{"lineNumber":289,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":290,"author":{"gitId":"YoYoCiti"},"content":"* **Alternative 1 (current choice):** Valid commands only.","lastModifiedDate":"2021-10-19"},{"lineNumber":291,"author":{"gitId":"YoYoCiti"},"content":"    * Pros: Easy to implement in parser.","lastModifiedDate":"2021-10-19"},{"lineNumber":292,"author":{"gitId":"YoYoCiti"},"content":"    * Cons: Less flexibility for user.","lastModifiedDate":"2021-10-19"},{"lineNumber":293,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":294,"author":{"gitId":"YoYoCiti"},"content":"* **Alternative 2:** Any defined text.","lastModifiedDate":"2021-10-19"},{"lineNumber":295,"author":{"gitId":"YoYoCiti"},"content":"    * Pros: Very flexible, no validation required.","lastModifiedDate":"2021-10-19"},{"lineNumber":296,"author":{"gitId":"YoYoCiti"},"content":"    * Cons: Difficult to parse user input as would need to scan exhaustively for aliases.","lastModifiedDate":"2021-10-19"},{"lineNumber":297,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":298,"author":{"gitId":"YoYoCiti"},"content":"In modern CLI applications, an alias is mainly used for abbreviating system commands or adding default arguments to","lastModifiedDate":"2021-10-22"},{"lineNumber":299,"author":{"gitId":"YoYoCiti"},"content":"regularly used commands. Considering the target use of SportsPA and time constraints, since command arguments are not","lastModifiedDate":"2021-10-22"},{"lineNumber":300,"author":{"gitId":"YoYoCiti"},"content":"likely to be repeated, we decided that it was sufficient to allow users to create shortcuts for commands only.","lastModifiedDate":"2021-10-22"},{"lineNumber":301,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":302,"author":{"gitId":"felix-ong"},"content":"### Split feature","lastModifiedDate":"2021-10-20"},{"lineNumber":303,"author":{"gitId":"felix-ong"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":304,"author":{"gitId":"felix-ong"},"content":"#### Implementation","lastModifiedDate":"2021-10-20"},{"lineNumber":305,"author":{"gitId":"felix-ong"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":306,"author":{"gitId":"felix-ong"},"content":"The split mechanism is facilitated by `AddressBookParser`. More details to be added.","lastModifiedDate":"2021-10-20"},{"lineNumber":307,"author":{"gitId":"felix-ong"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":308,"author":{"gitId":"felix-ong"},"content":"#### Design considerations:","lastModifiedDate":"2021-10-20"},{"lineNumber":309,"author":{"gitId":"felix-ong"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":310,"author":{"gitId":"felix-ong"},"content":"**Aspect: Format of values in `Availability`**","lastModifiedDate":"2021-10-20"},{"lineNumber":311,"author":{"gitId":"felix-ong"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":312,"author":{"gitId":"felix-ong"},"content":"* **Alternative 1 (current choice):** Stores values as a `List\u003cDayOfWeek\u003e`.","lastModifiedDate":"2021-10-20"},{"lineNumber":313,"author":{"gitId":"felix-ong"},"content":"    * Pros: Easy to implement in parser, increases user-friendliness by allowing users to just type in numbers to","lastModifiedDate":"2021-10-20"},{"lineNumber":314,"author":{"gitId":"YoYoCiti"},"content":"      represent days of a week instead of the names. Numbers can then be easily converted into DayOfWeek, and sorted,","lastModifiedDate":"2021-10-22"},{"lineNumber":315,"author":{"gitId":"YoYoCiti"},"content":"      ensuring uniformity.","lastModifiedDate":"2021-10-22"},{"lineNumber":316,"author":{"gitId":"felix-ong"},"content":"    * Cons: May not be intuitive to some users that 1 represents Monday and 7 represents Sunday.","lastModifiedDate":"2021-10-20"},{"lineNumber":317,"author":{"gitId":"felix-ong"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":318,"author":{"gitId":"felix-ong"},"content":"* **Alternative 2:** Stores values as a `String`","lastModifiedDate":"2021-10-20"},{"lineNumber":319,"author":{"gitId":"felix-ong"},"content":"    * Pros: Intuitive for users to type in the names of the days","lastModifiedDate":"2021-10-20"},{"lineNumber":320,"author":{"gitId":"YoYoCiti"},"content":"    * Cons: Difficult to parse user input as a complicated regular expression is needed to ensure names of days are in","lastModifiedDate":"2021-10-22"},{"lineNumber":321,"author":{"gitId":"YoYoCiti"},"content":"      the correct format. Less user-friendly due to need to type out the names of the days. More difficult to sort.","lastModifiedDate":"2021-10-22"},{"lineNumber":322,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":323,"author":{"gitId":"tsinyee"},"content":"### Find member feature","lastModifiedDate":"2021-10-28"},{"lineNumber":324,"author":{"gitId":"tsinyee"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":325,"author":{"gitId":"tsinyee"},"content":"#### Implementation","lastModifiedDate":"2021-10-28"},{"lineNumber":326,"author":{"gitId":"tsinyee"},"content":"The `findm` command filters the member list by the keywords specified.","lastModifiedDate":"2021-10-28"},{"lineNumber":327,"author":{"gitId":"tsinyee"},"content":"We extended the functionality of the `FindCommand` from the standard AB3, the `FindMemberCommand` in SportsPA can now find members with multiple attributes.","lastModifiedDate":"2021-10-28"},{"lineNumber":328,"author":{"gitId":"tsinyee"},"content":"Each attribute has its own predicate class to generate a unique predicate, which is then chained together in the new `PersonMatchesKeywordsPredicate` using the `Predicate#and` method.","lastModifiedDate":"2021-10-28"},{"lineNumber":329,"author":{"gitId":"tsinyee"},"content":"The final predicate is stored in `PersonMatchesKeywordPredicate` and then passed to the `FindMemberCommand` class to filter the member list with.","lastModifiedDate":"2021-10-28"},{"lineNumber":330,"author":{"gitId":"tsinyee"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":331,"author":{"gitId":"tsinyee"},"content":"* More details and diagrams to be added later","lastModifiedDate":"2021-10-28"},{"lineNumber":332,"author":{"gitId":"tsinyee"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":333,"author":{"gitId":"tsinyee"},"content":"#### Design considerations","lastModifiedDate":"2021-10-28"},{"lineNumber":334,"author":{"gitId":"tsinyee"},"content":"**Aspect: Implementation of `findm`**","lastModifiedDate":"2021-10-28"},{"lineNumber":335,"author":{"gitId":"tsinyee"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":336,"author":{"gitId":"tsinyee"},"content":"* **Alternative 1 (current choice):** User is able to `findm` by multiple attribute keywords","lastModifiedDate":"2021-10-28"},{"lineNumber":337,"author":{"gitId":"tsinyee"},"content":"    * Pros: Allows users to find members in a more precise manner e.g. Users can find members who are available on Monday and are EXCO members.","lastModifiedDate":"2021-10-28"},{"lineNumber":338,"author":{"gitId":"tsinyee"},"content":"    * Cons: More complex implementation due to parsing of multiple prefixes and chaining predicates, this alternative is more prone to bugs.","lastModifiedDate":"2021-10-28"},{"lineNumber":339,"author":{"gitId":"tsinyee"},"content":"* ** Alternative 2: User can only `findm` by specifying one attribute","lastModifiedDate":"2021-10-28"},{"lineNumber":340,"author":{"gitId":"tsinyee"},"content":"    * Pros: Simpler to parse a single prefix and thus less prone to bugs","lastModifiedDate":"2021-10-28"},{"lineNumber":341,"author":{"gitId":"tsinyee"},"content":"    * Cons: Not maximising user experience as finding a member with only one attribute may generate a large list if there are many matching members.","lastModifiedDate":"2021-10-28"},{"lineNumber":342,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Undo/redo feature","lastModifiedDate":"2020-06-07"},{"lineNumber":343,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":344,"author":{"gitId":"-"},"content":"#### Proposed Implementation","lastModifiedDate":"2020-05-23"},{"lineNumber":345,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":346,"author":{"gitId":"YoYoCiti"},"content":"The proposed undo/redo mechanism is facilitated by `VersionedAddressBook`. It extends `AddressBook` with an undo/redo","lastModifiedDate":"2021-10-22"},{"lineNumber":347,"author":{"gitId":"YoYoCiti"},"content":"history, stored internally as an `addressBookStateList` and `currentStatePointer`. Additionally, it implements the","lastModifiedDate":"2021-10-22"},{"lineNumber":348,"author":{"gitId":"YoYoCiti"},"content":"following operations:","lastModifiedDate":"2021-10-22"},{"lineNumber":349,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":350,"author":{"gitId":"YoYoCiti"},"content":"* `VersionedAddressBook#commit()` — Saves the current address book state in its history.","lastModifiedDate":"2021-10-22"},{"lineNumber":351,"author":{"gitId":"YoYoCiti"},"content":"* `VersionedAddressBook#undo()` — Restores the previous address book state from its history.","lastModifiedDate":"2021-10-22"},{"lineNumber":352,"author":{"gitId":"YoYoCiti"},"content":"* `VersionedAddressBook#redo()` — Restores a previously undone address book state from its history.","lastModifiedDate":"2021-10-22"},{"lineNumber":353,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":354,"author":{"gitId":"YoYoCiti"},"content":"These operations are exposed in the `Model` interface as `Model#commitAddressBook()`, `Model#undoAddressBook()`","lastModifiedDate":"2021-10-22"},{"lineNumber":355,"author":{"gitId":"YoYoCiti"},"content":"and `Model#redoAddressBook()` respectively.","lastModifiedDate":"2021-10-22"},{"lineNumber":356,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":357,"author":{"gitId":"-"},"content":"Given below is an example usage scenario and how the undo/redo mechanism behaves at each step.","lastModifiedDate":"2020-05-23"},{"lineNumber":358,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":359,"author":{"gitId":"YoYoCiti"},"content":"Step 1. The user launches the application for the first time. The `VersionedAddressBook` will be initialized with the","lastModifiedDate":"2021-10-22"},{"lineNumber":360,"author":{"gitId":"YoYoCiti"},"content":"initial address book state, and the `currentStatePointer` pointing to that single address book state.","lastModifiedDate":"2021-10-22"},{"lineNumber":361,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":362,"author":{"gitId":"-"},"content":"![UndoRedoState0](images/UndoRedoState0.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":363,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":364,"author":{"gitId":"YoYoCiti"},"content":"Step 2. The user executes `delete 5` command to delete the 5th person in the address book. The `delete` command","lastModifiedDate":"2021-10-22"},{"lineNumber":365,"author":{"gitId":"YoYoCiti"},"content":"calls `Model#commitAddressBook()`, causing the modified state of the address book after the `delete 5` command executes","lastModifiedDate":"2021-10-22"},{"lineNumber":366,"author":{"gitId":"YoYoCiti"},"content":"to be saved in the `addressBookStateList`, and the `currentStatePointer` is shifted to the newly inserted address book","lastModifiedDate":"2021-10-22"},{"lineNumber":367,"author":{"gitId":"YoYoCiti"},"content":"state.","lastModifiedDate":"2021-10-22"},{"lineNumber":368,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":369,"author":{"gitId":"-"},"content":"![UndoRedoState1](images/UndoRedoState1.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":370,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":371,"author":{"gitId":"YoYoCiti"},"content":"Step 3. The user executes `add n/David …​` to add a new person. The `add` command also calls `Model#commitAddressBook()`","lastModifiedDate":"2021-10-22"},{"lineNumber":372,"author":{"gitId":"YoYoCiti"},"content":", causing another modified address book state to be saved into the `addressBookStateList`.","lastModifiedDate":"2021-10-22"},{"lineNumber":373,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":374,"author":{"gitId":"-"},"content":"![UndoRedoState2](images/UndoRedoState2.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":375,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":376,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If a command fails its execution, it will not call `Model#commitAddressBook()`, so the address book state will not be saved into the `addressBookStateList`.","lastModifiedDate":"2020-05-23"},{"lineNumber":377,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":378,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":379,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":380,"author":{"gitId":"YoYoCiti"},"content":"Step 4. The user now decides that adding the person was a mistake, and decides to undo that action by executing","lastModifiedDate":"2021-10-22"},{"lineNumber":381,"author":{"gitId":"YoYoCiti"},"content":"the `undo` command. The `undo` command will call `Model#undoAddressBook()`, which will shift the `currentStatePointer`","lastModifiedDate":"2021-10-22"},{"lineNumber":382,"author":{"gitId":"YoYoCiti"},"content":"once to the left, pointing it to the previous address book state, and restores the address book to that state.","lastModifiedDate":"2021-10-22"},{"lineNumber":383,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":384,"author":{"gitId":"-"},"content":"![UndoRedoState3](images/UndoRedoState3.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":385,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":386,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currentStatePointer` is at index 0, pointing to the initial AddressBook state, then there are no previous AddressBook states to restore. The `undo` command uses `Model#canUndoAddressBook()` to check if this is the case. If so, it will return an error to the user rather","lastModifiedDate":"2020-05-23"},{"lineNumber":387,"author":{"gitId":"-"},"content":"than attempting to perform the undo.","lastModifiedDate":"2020-05-23"},{"lineNumber":388,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":389,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":390,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":391,"author":{"gitId":"-"},"content":"The following sequence diagram shows how the undo operation works:","lastModifiedDate":"2020-05-23"},{"lineNumber":392,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":393,"author":{"gitId":"-"},"content":"![UndoSequenceDiagram](images/UndoSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":394,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":395,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `UndoCommand` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2020-05-23"},{"lineNumber":396,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":397,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":398,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":399,"author":{"gitId":"YoYoCiti"},"content":"The `redo` command does the opposite — it calls `Model#redoAddressBook()`, which shifts the `currentStatePointer` once","lastModifiedDate":"2021-10-22"},{"lineNumber":400,"author":{"gitId":"YoYoCiti"},"content":"to the right, pointing to the previously undone state, and restores the address book to that state.","lastModifiedDate":"2021-10-22"},{"lineNumber":401,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":402,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currentStatePointer` is at index `addressBookStateList.size() - 1`, pointing to the latest address book state, then there are no undone AddressBook states to restore. The `redo` command uses `Model#canRedoAddressBook()` to check if this is the case. If so, it will return an error to the user rather than attempting to perform the redo.","lastModifiedDate":"2020-05-23"},{"lineNumber":403,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":404,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":405,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":406,"author":{"gitId":"YoYoCiti"},"content":"Step 5. The user then decides to execute the command `list`. Commands that do not modify the address book, such","lastModifiedDate":"2021-10-22"},{"lineNumber":407,"author":{"gitId":"YoYoCiti"},"content":"as `list`, will usually not call `Model#commitAddressBook()`, `Model#undoAddressBook()` or `Model#redoAddressBook()`.","lastModifiedDate":"2021-10-22"},{"lineNumber":408,"author":{"gitId":"YoYoCiti"},"content":"Thus, the `addressBookStateList` remains unchanged.","lastModifiedDate":"2021-10-22"},{"lineNumber":409,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":410,"author":{"gitId":"-"},"content":"![UndoRedoState4](images/UndoRedoState4.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":411,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":412,"author":{"gitId":"YoYoCiti"},"content":"Step 6. The user executes `clear`, which calls `Model#commitAddressBook()`. Since the `currentStatePointer` is not","lastModifiedDate":"2021-10-22"},{"lineNumber":413,"author":{"gitId":"YoYoCiti"},"content":"pointing at the end of the `addressBookStateList`, all address book states after the `currentStatePointer` will be","lastModifiedDate":"2021-10-22"},{"lineNumber":414,"author":{"gitId":"YoYoCiti"},"content":"purged. Reason: It no longer makes sense to redo the `add n/David …​` command. This is the behavior that most modern","lastModifiedDate":"2021-10-22"},{"lineNumber":415,"author":{"gitId":"YoYoCiti"},"content":"desktop applications follow.","lastModifiedDate":"2021-10-22"},{"lineNumber":416,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":417,"author":{"gitId":"-"},"content":"![UndoRedoState5](images/UndoRedoState5.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":418,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":419,"author":{"gitId":"-"},"content":"The following activity diagram summarizes what happens when a user executes a new command:","lastModifiedDate":"2020-05-23"},{"lineNumber":420,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":421,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/CommitActivityDiagram.png\" width\u003d\"250\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":422,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":423,"author":{"gitId":"-"},"content":"#### Design considerations:","lastModifiedDate":"2021-07-31"},{"lineNumber":424,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":425,"author":{"gitId":"-"},"content":"**Aspect: How undo \u0026 redo executes:**","lastModifiedDate":"2021-07-31"},{"lineNumber":426,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":427,"author":{"gitId":"-"},"content":"* **Alternative 1 (current choice):** Saves the entire address book.","lastModifiedDate":"2020-05-23"},{"lineNumber":428,"author":{"gitId":"-"},"content":"    * Pros: Easy to implement.","lastModifiedDate":"2020-05-23"},{"lineNumber":429,"author":{"gitId":"-"},"content":"    * Cons: May have performance issues in terms of memory usage.","lastModifiedDate":"2020-05-23"},{"lineNumber":430,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":431,"author":{"gitId":"YoYoCiti"},"content":"* **Alternative 2:** Individual command knows how to undo/redo by itself.","lastModifiedDate":"2021-10-22"},{"lineNumber":432,"author":{"gitId":"-"},"content":"    * Pros: Will use less memory (e.g. for `delete`, just save the person being deleted).","lastModifiedDate":"2020-05-23"},{"lineNumber":433,"author":{"gitId":"-"},"content":"    * Cons: We must ensure that the implementation of each individual command are correct.","lastModifiedDate":"2020-05-23"},{"lineNumber":434,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":435,"author":{"gitId":"-"},"content":"_{more aspects and alternatives to be added}_","lastModifiedDate":"2020-05-23"},{"lineNumber":436,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":437,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Data archiving","lastModifiedDate":"2020-05-23"},{"lineNumber":438,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":439,"author":{"gitId":"-"},"content":"_{Explain here how the data archiving feature will be implemented}_","lastModifiedDate":"2020-05-23"},{"lineNumber":440,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":441,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":442,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":443,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":444,"author":{"gitId":"-"},"content":"## **Documentation, logging, testing, configuration, dev-ops**","lastModifiedDate":"2020-06-07"},{"lineNumber":445,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":446,"author":{"gitId":"-"},"content":"* [Documentation guide](Documentation.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":447,"author":{"gitId":"-"},"content":"* [Testing guide](Testing.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":448,"author":{"gitId":"-"},"content":"* [Logging guide](Logging.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":449,"author":{"gitId":"-"},"content":"* [Configuration guide](Configuration.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":450,"author":{"gitId":"-"},"content":"* [DevOps guide](DevOps.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":451,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":452,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":453,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":454,"author":{"gitId":"-"},"content":"## **Appendix: Requirements**","lastModifiedDate":"2020-05-23"},{"lineNumber":455,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":456,"author":{"gitId":"-"},"content":"### Product scope","lastModifiedDate":"2020-05-23"},{"lineNumber":457,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":458,"author":{"gitId":"-"},"content":"**Target user profile**:","lastModifiedDate":"2020-05-23"},{"lineNumber":459,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":460,"author":{"gitId":"Shruthi0310"},"content":"* a NUS Sports CCA leader","lastModifiedDate":"2021-09-28"},{"lineNumber":461,"author":{"gitId":"Shruthi0310"},"content":"* has a need to manage a significant number of member’s contacts","lastModifiedDate":"2021-09-28"},{"lineNumber":462,"author":{"gitId":"Shruthi0310"},"content":"* has a need to organise training sessions in multiple facilities amidst changing COVID restrictions","lastModifiedDate":"2021-09-28"},{"lineNumber":463,"author":{"gitId":"Shruthi0310"},"content":"* can type faster than average","lastModifiedDate":"2021-09-28"},{"lineNumber":464,"author":{"gitId":"-"},"content":"* is reasonably comfortable using CLI apps","lastModifiedDate":"2020-05-23"},{"lineNumber":465,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":466,"author":{"gitId":"Shruthi0310"},"content":"**Value proposition**:","lastModifiedDate":"2021-09-28"},{"lineNumber":467,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":468,"author":{"gitId":"YoYoCiti"},"content":"* Sports CCAs have many members and it can be hard for the leaders to keep track of everyone’s information and","lastModifiedDate":"2021-10-22"},{"lineNumber":469,"author":{"gitId":"YoYoCiti"},"content":"  availability to organise training sessions, especially with COVID restrictions.","lastModifiedDate":"2021-10-22"},{"lineNumber":470,"author":{"gitId":"YoYoCiti"},"content":"* SportsPA will help NUS Sports CCA leaders to be able to better manage their members’ contacts and attendance as well","lastModifiedDate":"2021-10-22"},{"lineNumber":471,"author":{"gitId":"YoYoCiti"},"content":"  as training facilities to better organise CCA sessions.","lastModifiedDate":"2021-10-22"},{"lineNumber":472,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":473,"author":{"gitId":"-"},"content":"### User stories","lastModifiedDate":"2020-06-07"},{"lineNumber":474,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":475,"author":{"gitId":"-"},"content":"Priorities: High (must have) - `* * *`, Medium (nice to have) - `* *`, Low (unlikely to have) - `*`","lastModifiedDate":"2020-05-23"},{"lineNumber":476,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":477,"author":{"gitId":"-"},"content":"| Priority | As a …​                                    | I want to …​                     | So that I can…​                                                        |","lastModifiedDate":"2020-05-23"},{"lineNumber":478,"author":{"gitId":"-"},"content":"| -------- | ------------------------------------------ | ------------------------------ | ---------------------------------------------------------------------- |","lastModifiedDate":"2020-05-23"},{"lineNumber":479,"author":{"gitId":"Shruthi0310"},"content":"| `* * *`  | user                                       | add a new person        | keep track of them in the club                 | |","lastModifiedDate":"2021-09-28"},{"lineNumber":480,"author":{"gitId":"-"},"content":"| `* * *`  | user                                       | delete a person                | remove entries that I no longer need                                   |","lastModifiedDate":"2020-05-23"},{"lineNumber":481,"author":{"gitId":"Shruthi0310"},"content":"| `* * *`  | user                                       | add a facility          | facilitate planning of training sessions |","lastModifiedDate":"2021-09-28"},{"lineNumber":482,"author":{"gitId":"Shruthi0310"},"content":"| `* * *`  | user                                       | add the available time slots of the facilities   | allocate members to train there               |","lastModifiedDate":"2021-09-28"},{"lineNumber":483,"author":{"gitId":"Shruthi0310"},"content":"| `* * *`  | user                                       | delete a facility          | remove facilities that are no longer relevant                                                 |","lastModifiedDate":"2021-09-28"},{"lineNumber":484,"author":{"gitId":"Shruthi0310"},"content":"| `* * *`  | user                                       | add a maximum capacity to each facility          | check whether we are complying with the group size regulations                                                 |","lastModifiedDate":"2021-09-28"},{"lineNumber":485,"author":{"gitId":"Shruthi0310"},"content":"| `* * *`  | user                                       | update the members\u0027 availability weekly           | regularly organise the next training session                                                 |","lastModifiedDate":"2021-09-28"},{"lineNumber":486,"author":{"gitId":"Shruthi0310"},"content":"| `* * *`  | user                                       | split the members into groups based on their availability         | allocate them to different facilities adhering to the group size regulations                                               |","lastModifiedDate":"2021-09-28"},{"lineNumber":487,"author":{"gitId":"felix-ong"},"content":"| `* * *`  | user                                       | view all the members           | so that I can see the list of members in the club                      |","lastModifiedDate":"2021-09-28"},{"lineNumber":488,"author":{"gitId":"felix-ong"},"content":"| `* * *`  | user                                       | view all the facilities        | so that I can see the list of facilities available                     |","lastModifiedDate":"2021-09-28"},{"lineNumber":489,"author":{"gitId":"felix-ong"},"content":"| `* *`    | potential user exploring the app           | see the app populated with user data | see how the app works when its in use                            |","lastModifiedDate":"2021-09-28"},{"lineNumber":490,"author":{"gitId":"felix-ong"},"content":"| `* *`    | new user                                   | see usage instructions         | refer to instructions when i forget how to use the app                 |","lastModifiedDate":"2021-09-28"},{"lineNumber":491,"author":{"gitId":"felix-ong"},"content":"| `* *`    | new user                                   | purge all current data         | get rid of sample/experimental data I used when exploring the app and start entering my required data      |","lastModifiedDate":"2021-09-28"},{"lineNumber":492,"author":{"gitId":"felix-ong"},"content":"| `* *`    | user                                       | edit a person\u0027s details        | have an updated version of their contact                               |","lastModifiedDate":"2021-09-28"},{"lineNumber":493,"author":{"gitId":"felix-ong"},"content":"| `* *`    | user                                       | find a person by name          | locate details of persons without having to go through the entire list |","lastModifiedDate":"2021-09-28"},{"lineNumber":494,"author":{"gitId":"felix-ong"},"content":"| `* *`    | user                                       | find a facility by name        | locate details of facility without having to go through the entire list|","lastModifiedDate":"2021-09-28"},{"lineNumber":495,"author":{"gitId":"felix-ong"},"content":"| `* *`    | user                                       | edit a facility\u0027s data         | update the maximum capacity of each facility when group size regulations have shifted                        |","lastModifiedDate":"2021-09-28"},{"lineNumber":496,"author":{"gitId":"felix-ong"},"content":"| `* *`    | user                                       | quickly key in attendance data | save time compared to adding them individually                         |","lastModifiedDate":"2021-09-28"},{"lineNumber":497,"author":{"gitId":"felix-ong"},"content":"| `* *`    | user                                       | see the total attendance of each member| assess the level of commitment of members                      |","lastModifiedDate":"2021-09-28"},{"lineNumber":498,"author":{"gitId":"felix-ong"},"content":"| `* *`    | user                                       | manually edit member\u0027s allocation to facilities | accomodate to last minute changes or requests made by members|","lastModifiedDate":"2021-09-28"},{"lineNumber":499,"author":{"gitId":"felix-ong"},"content":"| `* *`    | user                                       | see all the dates              | know when are the days of training                                     |","lastModifiedDate":"2021-09-28"},{"lineNumber":500,"author":{"gitId":"tsinyee"},"content":"| `* *`    | user                                       | add tags for members | sort the members by tags |","lastModifiedDate":"2021-10-22"},{"lineNumber":501,"author":{"gitId":"felix-ong"},"content":"| `* *`    | lazy user                                  | add a list of people\u0027s contacts into the application| I don\u0027t have to individually add them manually     |","lastModifiedDate":"2021-09-28"},{"lineNumber":502,"author":{"gitId":"tsinyee"},"content":"| `* *`    | user with many members added into the app  | sort persons by name           | locate a person easily       |","lastModifiedDate":"2021-09-28"},{"lineNumber":503,"author":{"gitId":"tsinyee"},"content":"| `* * `    | expert user | create shortcut for tasks | save time on frequently performed tasks","lastModifiedDate":"2021-09-28"},{"lineNumber":504,"author":{"gitId":"tsinyee"},"content":"| `* *` | long time user | add groups of people | quickly add in new members","lastModifiedDate":"2021-09-28"},{"lineNumber":505,"author":{"gitId":"tsinyee"},"content":"| `*`      | user | hide private contact details | minimise chance of someone else seeing them by accident","lastModifiedDate":"2021-09-28"},{"lineNumber":506,"author":{"gitId":"tsinyee"},"content":"| `*` | user | transfer my app\u0027s data to someone else | access accurate and updated data |                                             |","lastModifiedDate":"2021-09-28"},{"lineNumber":507,"author":{"gitId":"tsinyee"},"content":"| `*` | user |archive/hide temporary data | not get distracted by irrelevant data","lastModifiedDate":"2021-09-28"},{"lineNumber":508,"author":{"gitId":"tsinyee"},"content":"| `*` | user | unarchive archived data | view the neccessary data again","lastModifiedDate":"2021-09-28"},{"lineNumber":509,"author":{"gitId":"tsinyee"},"content":"| `*` | user | export allocations into a readable format | share with club members\u0027 their allocated training session and venue","lastModifiedDate":"2021-09-28"},{"lineNumber":510,"author":{"gitId":"tsinyee"},"content":"| `*` | user | recover data | retrieve the data I accidentally deleted","lastModifiedDate":"2021-09-28"},{"lineNumber":511,"author":{"gitId":"tsinyee"},"content":"| `*` | long time user | delete data associated with a particular club | minimize exposure of confidential data I no longer need","lastModifiedDate":"2021-09-28"},{"lineNumber":512,"author":{"gitId":"tsinyee"},"content":"| `*` | long time user | delete groups of people | remove graduating members","lastModifiedDate":"2021-09-28"},{"lineNumber":513,"author":{"gitId":"tsinyee"},"content":"| `*` | long time user | keep track of people from different clubs | allocate members at one go regardless of what club they are from","lastModifiedDate":"2021-09-28"},{"lineNumber":514,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":515,"author":{"gitId":"-"},"content":"### Use cases","lastModifiedDate":"2020-06-07"},{"lineNumber":516,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":517,"author":{"gitId":"YoYoCiti"},"content":"(For all use cases below, the **System** is `SportsPA` and the **Actor** is the `user`, unless specified otherwise)","lastModifiedDate":"2021-09-29"},{"lineNumber":518,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":519,"author":{"gitId":"YoYoCiti"},"content":"**Use case: UC01 - Get help**","lastModifiedDate":"2021-09-28"},{"lineNumber":520,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":521,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2020-05-23"},{"lineNumber":522,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":523,"author":{"gitId":"YoYoCiti"},"content":"1. User requests for help","lastModifiedDate":"2021-09-28"},{"lineNumber":524,"author":{"gitId":"YoYoCiti"},"content":"2. SportsPA shows a pop-up message on accessing the help page","lastModifiedDate":"2021-09-28"},{"lineNumber":525,"author":{"gitId":"YoYoCiti"},"content":"3. User navigates to the help page","lastModifiedDate":"2021-09-28"},{"lineNumber":526,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":527,"author":{"gitId":"YoYoCiti"},"content":"   Use case ends.","lastModifiedDate":"2021-09-28"},{"lineNumber":528,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":529,"author":{"gitId":"YoYoCiti"},"content":"**Use case: UC02 - Add a facility**","lastModifiedDate":"2021-09-28"},{"lineNumber":530,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":531,"author":{"gitId":"YoYoCiti"},"content":"**MSS**","lastModifiedDate":"2021-09-28"},{"lineNumber":532,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":533,"author":{"gitId":"YoYoCiti"},"content":"1. User requests to add a facility to the list","lastModifiedDate":"2021-09-28"},{"lineNumber":534,"author":{"gitId":"YoYoCiti"},"content":"2. SportsPA adds the facility to the list","lastModifiedDate":"2021-09-28"},{"lineNumber":535,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":536,"author":{"gitId":"-"},"content":"   Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":537,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":538,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2020-05-23"},{"lineNumber":539,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":540,"author":{"gitId":"YoYoCiti"},"content":"* 1a. SportsPA detects missing field(s).","lastModifiedDate":"2021-09-28"},{"lineNumber":541,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":542,"author":{"gitId":"YoYoCiti"},"content":"    * 1a1. SportsPA shows an error message.","lastModifiedDate":"2021-09-28"},{"lineNumber":543,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":544,"author":{"gitId":"YoYoCiti"},"content":"      Use case resumes from step 1.","lastModifiedDate":"2021-09-29"},{"lineNumber":545,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":546,"author":{"gitId":"YoYoCiti"},"content":"**Use case: UC03 - List all facilities**","lastModifiedDate":"2021-09-28"},{"lineNumber":547,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":548,"author":{"gitId":"YoYoCiti"},"content":"**MSS**","lastModifiedDate":"2021-09-28"},{"lineNumber":549,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":550,"author":{"gitId":"YoYoCiti"},"content":"1. User requests to list all facilities","lastModifiedDate":"2021-09-28"},{"lineNumber":551,"author":{"gitId":"YoYoCiti"},"content":"2. SportsPA shows the list of all facilities to the user","lastModifiedDate":"2021-09-28"},{"lineNumber":552,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":553,"author":{"gitId":"YoYoCiti"},"content":"   Use case ends.","lastModifiedDate":"2021-09-28"},{"lineNumber":554,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":555,"author":{"gitId":"YoYoCiti"},"content":"**Use case: UC04 - Find facilities using keyword(s)**","lastModifiedDate":"2021-09-28"},{"lineNumber":556,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":557,"author":{"gitId":"YoYoCiti"},"content":"**MSS**","lastModifiedDate":"2021-09-28"},{"lineNumber":558,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":559,"author":{"gitId":"YoYoCiti"},"content":"1. User enters keyword or multiple keywords","lastModifiedDate":"2021-09-28"},{"lineNumber":560,"author":{"gitId":"YoYoCiti"},"content":"2. SportsPA shows the list of facilities whose locations matches given keyword(s)","lastModifiedDate":"2021-09-28"},{"lineNumber":561,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":562,"author":{"gitId":"-"},"content":"   Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":563,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":564,"author":{"gitId":"YoYoCiti"},"content":"**Extensions**","lastModifiedDate":"2021-09-28"},{"lineNumber":565,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":566,"author":{"gitId":"YoYoCiti"},"content":"* 1a. SportsPA detects missing field(s).","lastModifiedDate":"2021-09-28"},{"lineNumber":567,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":568,"author":{"gitId":"YoYoCiti"},"content":"    * 1a1. SportsPA shows an error message.","lastModifiedDate":"2021-09-28"},{"lineNumber":569,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":570,"author":{"gitId":"YoYoCiti"},"content":"      Use case resumes from step 1.","lastModifiedDate":"2021-09-29"},{"lineNumber":571,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":572,"author":{"gitId":"YoYoCiti"},"content":"* 1a. No facilities have locations matching the given keyword(s)","lastModifiedDate":"2021-09-28"},{"lineNumber":573,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":574,"author":{"gitId":"YoYoCiti"},"content":"    * 1a1. SportsPA informs user","lastModifiedDate":"2021-09-28"},{"lineNumber":575,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":576,"author":{"gitId":"YoYoCiti"},"content":"      Use case ends.","lastModifiedDate":"2021-09-28"},{"lineNumber":577,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":578,"author":{"gitId":"YoYoCiti"},"content":"**Use case: UC05 - Delete a facility**","lastModifiedDate":"2021-09-28"},{"lineNumber":579,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":580,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2020-05-23"},{"lineNumber":581,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":582,"author":{"gitId":"YoYoCiti"},"content":"1. User requests to \u003cspan style\u003d\"text-decoration: underline\"\u003elist facilities (UC03)\u003c/span\u003e","lastModifiedDate":"2021-10-22"},{"lineNumber":583,"author":{"gitId":"YoYoCiti"},"content":"   or \u003cspan style\u003d\"text-decoration: underline\"\u003efind facilities using keyword(s) (UC04)\u003c/span\u003e","lastModifiedDate":"2021-10-22"},{"lineNumber":584,"author":{"gitId":"YoYoCiti"},"content":"2. SportsPA shows the list of facilities","lastModifiedDate":"2021-09-28"},{"lineNumber":585,"author":{"gitId":"YoYoCiti"},"content":"3. User requests to delete a specific facility in the list","lastModifiedDate":"2021-09-28"},{"lineNumber":586,"author":{"gitId":"YoYoCiti"},"content":"4. SportsPA deletes the facility from the list","lastModifiedDate":"2021-09-28"},{"lineNumber":587,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":588,"author":{"gitId":"-"},"content":"   Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":589,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":590,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2020-05-23"},{"lineNumber":591,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":592,"author":{"gitId":"YoYoCiti"},"content":"* 2a. The list is empty","lastModifiedDate":"2021-09-28"},{"lineNumber":593,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":594,"author":{"gitId":"-"},"content":"  Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":595,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":596,"author":{"gitId":"YoYoCiti"},"content":"* 3a. User inputs an invalid index","lastModifiedDate":"2021-09-28"},{"lineNumber":597,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":598,"author":{"gitId":"YoYoCiti"},"content":"    * 3a1. SportsPA shows an error message","lastModifiedDate":"2021-09-28"},{"lineNumber":599,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":600,"author":{"gitId":"YoYoCiti"},"content":"      Use case resumes from step 3.","lastModifiedDate":"2021-09-29"},{"lineNumber":601,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":602,"author":{"gitId":"YoYoCiti"},"content":"**Use case: UC06 - Add a member**","lastModifiedDate":"2021-09-28"},{"lineNumber":603,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":604,"author":{"gitId":"YoYoCiti"},"content":"**MSS**","lastModifiedDate":"2021-09-28"},{"lineNumber":605,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":606,"author":{"gitId":"YoYoCiti"},"content":"1. User requests to add a member to the list","lastModifiedDate":"2021-09-28"},{"lineNumber":607,"author":{"gitId":"YoYoCiti"},"content":"2. SportsPA adds the member to the list","lastModifiedDate":"2021-09-28"},{"lineNumber":608,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":609,"author":{"gitId":"-"},"content":"   Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":610,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":611,"author":{"gitId":"YoYoCiti"},"content":"**Extensions**","lastModifiedDate":"2021-09-28"},{"lineNumber":612,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":613,"author":{"gitId":"YoYoCiti"},"content":"* 1a. SportsPA detects missing field(s).","lastModifiedDate":"2021-09-28"},{"lineNumber":614,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":615,"author":{"gitId":"YoYoCiti"},"content":"    * 1a1. SportsPA shows an error message.","lastModifiedDate":"2021-09-28"},{"lineNumber":616,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":617,"author":{"gitId":"YoYoCiti"},"content":"      Use case resumes from step 1.","lastModifiedDate":"2021-09-29"},{"lineNumber":618,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":619,"author":{"gitId":"YoYoCiti"},"content":"**Use case: UC07 - List all members**","lastModifiedDate":"2021-09-28"},{"lineNumber":620,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":621,"author":{"gitId":"YoYoCiti"},"content":"**MSS**","lastModifiedDate":"2021-09-28"},{"lineNumber":622,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":623,"author":{"gitId":"YoYoCiti"},"content":"1. User requests to list all members","lastModifiedDate":"2021-09-28"},{"lineNumber":624,"author":{"gitId":"YoYoCiti"},"content":"2. SportsPA shows the list of all members","lastModifiedDate":"2021-09-28"},{"lineNumber":625,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":626,"author":{"gitId":"YoYoCiti"},"content":"   Use case ends.","lastModifiedDate":"2021-09-28"},{"lineNumber":627,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":628,"author":{"gitId":"Moley456"},"content":"**Use case: UC08 - Find members using keyword(s)**","lastModifiedDate":"2021-09-29"},{"lineNumber":629,"author":{"gitId":"Moley456"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":630,"author":{"gitId":"Moley456"},"content":"**MSS**","lastModifiedDate":"2021-09-29"},{"lineNumber":631,"author":{"gitId":"Moley456"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":632,"author":{"gitId":"Moley456"},"content":"1. User enters a keyword or multiple keywords","lastModifiedDate":"2021-09-29"},{"lineNumber":633,"author":{"gitId":"Moley456"},"content":"2. SportsPA finds members whose names matches the keyword(s)","lastModifiedDate":"2021-09-29"},{"lineNumber":634,"author":{"gitId":"Moley456"},"content":"3. A list of members whose names matches at least one keyword will be displayed to the user","lastModifiedDate":"2021-09-29"},{"lineNumber":635,"author":{"gitId":"Moley456"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":636,"author":{"gitId":"Moley456"},"content":"   Use case ends","lastModifiedDate":"2021-09-29"},{"lineNumber":637,"author":{"gitId":"Moley456"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":638,"author":{"gitId":"Moley456"},"content":"**Extensions**","lastModifiedDate":"2021-09-29"},{"lineNumber":639,"author":{"gitId":"Moley456"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":640,"author":{"gitId":"Moley456"},"content":"* 1a. User does not provide any keyword.","lastModifiedDate":"2021-09-29"},{"lineNumber":641,"author":{"gitId":"Moley456"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":642,"author":{"gitId":"Moley456"},"content":"    * 1a1. SportsPA shows an error message","lastModifiedDate":"2021-09-29"},{"lineNumber":643,"author":{"gitId":"Moley456"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":644,"author":{"gitId":"Moley456"},"content":"      Use case resumes from step 1.","lastModifiedDate":"2021-09-29"},{"lineNumber":645,"author":{"gitId":"Moley456"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":646,"author":{"gitId":"Moley456"},"content":"* 3a. No members have names matching the keyword(s).","lastModifiedDate":"2021-09-29"},{"lineNumber":647,"author":{"gitId":"Moley456"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":648,"author":{"gitId":"Moley456"},"content":"    * 3a1. SportsPA displays message to user that no members can be found","lastModifiedDate":"2021-09-29"},{"lineNumber":649,"author":{"gitId":"Moley456"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":650,"author":{"gitId":"Moley456"},"content":"      Use case ends.","lastModifiedDate":"2021-09-29"},{"lineNumber":651,"author":{"gitId":"Moley456"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":652,"author":{"gitId":"Moley456"},"content":"**Use case: UC09 - Delete a member**","lastModifiedDate":"2021-09-29"},{"lineNumber":653,"author":{"gitId":"Moley456"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":654,"author":{"gitId":"Moley456"},"content":"**MSS**","lastModifiedDate":"2021-09-29"},{"lineNumber":655,"author":{"gitId":"Moley456"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":656,"author":{"gitId":"YoYoCiti"},"content":"1. User requests to \u003cspan style\u003d\"text-decoration: underline\"\u003elist members (UC07)\u003c/span\u003e","lastModifiedDate":"2021-10-22"},{"lineNumber":657,"author":{"gitId":"YoYoCiti"},"content":"   or \u003cspan style\u003d\"text-decoration: underline\"\u003efind members using keyword(s) (UC08)\u003c/span\u003e","lastModifiedDate":"2021-10-22"},{"lineNumber":658,"author":{"gitId":"Moley456"},"content":"2. SportsPA shows the list of members","lastModifiedDate":"2021-09-29"},{"lineNumber":659,"author":{"gitId":"Moley456"},"content":"3. User requests to delete a specific member in the list","lastModifiedDate":"2021-09-29"},{"lineNumber":660,"author":{"gitId":"Moley456"},"content":"4. SportsPA deletes the member","lastModifiedDate":"2021-09-29"},{"lineNumber":661,"author":{"gitId":"Moley456"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":662,"author":{"gitId":"Moley456"},"content":"   Use case ends.","lastModifiedDate":"2021-09-29"},{"lineNumber":663,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":664,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2021-09-29"},{"lineNumber":665,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":666,"author":{"gitId":"-"},"content":"* 2a. The list is empty.","lastModifiedDate":"2021-09-29"},{"lineNumber":667,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":668,"author":{"gitId":"-"},"content":"  Use case ends.","lastModifiedDate":"2021-09-29"},{"lineNumber":669,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":670,"author":{"gitId":"-"},"content":"* 3a. The given index is invalid.","lastModifiedDate":"2021-09-29"},{"lineNumber":671,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":672,"author":{"gitId":"Moley456"},"content":"    * 3a1. SportsPA shows an error message","lastModifiedDate":"2021-09-29"},{"lineNumber":673,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":674,"author":{"gitId":"-"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2021-09-29"},{"lineNumber":675,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":676,"author":{"gitId":"Moley456"},"content":"**Use case: UC10 - Set a member’s availability**","lastModifiedDate":"2021-09-29"},{"lineNumber":677,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":678,"author":{"gitId":"Moley456"},"content":"**MSS**","lastModifiedDate":"2021-09-29"},{"lineNumber":679,"author":{"gitId":"Moley456"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":680,"author":{"gitId":"YoYoCiti"},"content":"1. User requests to \u003cspan style\u003d\"text-decoration: underline\"\u003elist members (UC07)\u003c/span\u003e","lastModifiedDate":"2021-10-22"},{"lineNumber":681,"author":{"gitId":"YoYoCiti"},"content":"   or \u003cspan style\u003d\"text-decoration: underline\"\u003efind members using keyword(s) (UC08)\u003c/span\u003e","lastModifiedDate":"2021-10-22"},{"lineNumber":682,"author":{"gitId":"Moley456"},"content":"2. SportsPA shows the list of members","lastModifiedDate":"2021-09-29"},{"lineNumber":683,"author":{"gitId":"Moley456"},"content":"3. User requests to set availability of a specific member in the list","lastModifiedDate":"2021-09-29"},{"lineNumber":684,"author":{"gitId":"Moley456"},"content":"4. SportsPA updates the availability of the member","lastModifiedDate":"2021-09-29"},{"lineNumber":685,"author":{"gitId":"Moley456"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":686,"author":{"gitId":"Moley456"},"content":"   Use case ends.","lastModifiedDate":"2021-09-29"},{"lineNumber":687,"author":{"gitId":"Moley456"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":688,"author":{"gitId":"Moley456"},"content":"**Extensions**","lastModifiedDate":"2021-09-29"},{"lineNumber":689,"author":{"gitId":"Moley456"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":690,"author":{"gitId":"Moley456"},"content":"* 2a. The list is empty.","lastModifiedDate":"2021-09-29"},{"lineNumber":691,"author":{"gitId":"Moley456"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":692,"author":{"gitId":"Moley456"},"content":"  Use case ends.","lastModifiedDate":"2021-09-29"},{"lineNumber":693,"author":{"gitId":"Moley456"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":694,"author":{"gitId":"Moley456"},"content":"* 3a. The given index is invalid.","lastModifiedDate":"2021-09-29"},{"lineNumber":695,"author":{"gitId":"Moley456"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":696,"author":{"gitId":"Moley456"},"content":"    * 3a1. SportsPA shows an error message","lastModifiedDate":"2021-09-29"},{"lineNumber":697,"author":{"gitId":"Moley456"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":698,"author":{"gitId":"Moley456"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2021-09-29"},{"lineNumber":699,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":700,"author":{"gitId":"Moley456"},"content":"* 3b. The given availability (ie. day) is invalid.","lastModifiedDate":"2021-09-29"},{"lineNumber":701,"author":{"gitId":"Moley456"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":702,"author":{"gitId":"Moley456"},"content":"    * 3b1. SportsPA shows an error message","lastModifiedDate":"2021-09-29"},{"lineNumber":703,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":704,"author":{"gitId":"Moley456"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2021-09-29"},{"lineNumber":705,"author":{"gitId":"Moley456"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":706,"author":{"gitId":"Moley456"},"content":"**Use case: UC11 - Split members into facilities**","lastModifiedDate":"2021-09-29"},{"lineNumber":707,"author":{"gitId":"Moley456"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":708,"author":{"gitId":"Moley456"},"content":"**MSS**","lastModifiedDate":"2021-09-29"},{"lineNumber":709,"author":{"gitId":"Moley456"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":710,"author":{"gitId":"Moley456"},"content":"1. User requests to split members into the facilities","lastModifiedDate":"2021-09-29"},{"lineNumber":711,"author":{"gitId":"Moley456"},"content":"2. SportsPA shows the list of allocations","lastModifiedDate":"2021-09-29"},{"lineNumber":712,"author":{"gitId":"Moley456"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":713,"author":{"gitId":"Moley456"},"content":"   Use case ends.","lastModifiedDate":"2021-09-29"},{"lineNumber":714,"author":{"gitId":"Moley456"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":715,"author":{"gitId":"Moley456"},"content":"**Extensions**","lastModifiedDate":"2021-09-29"},{"lineNumber":716,"author":{"gitId":"Moley456"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":717,"author":{"gitId":"Moley456"},"content":"* 1a. SportsPA detects insufficient capacity to allocate all available members","lastModifiedDate":"2021-09-29"},{"lineNumber":718,"author":{"gitId":"Moley456"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":719,"author":{"gitId":"Moley456"},"content":"    * 1a1. SportsPA shows an error message.","lastModifiedDate":"2021-09-29"},{"lineNumber":720,"author":{"gitId":"Moley456"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":721,"author":{"gitId":"Moley456"},"content":"      Use case ends.","lastModifiedDate":"2021-09-29"},{"lineNumber":722,"author":{"gitId":"Moley456"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":723,"author":{"gitId":"Moley456"},"content":"**Use case: UC12 - Clear all entries in facility list**","lastModifiedDate":"2021-09-29"},{"lineNumber":724,"author":{"gitId":"Moley456"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":725,"author":{"gitId":"Moley456"},"content":"**MSS**","lastModifiedDate":"2021-09-29"},{"lineNumber":726,"author":{"gitId":"Moley456"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":727,"author":{"gitId":"Moley456"},"content":"1. User requests to clear all entries in facility list","lastModifiedDate":"2021-09-29"},{"lineNumber":728,"author":{"gitId":"Moley456"},"content":"2. SportsPA deletes all existing facilities in the facility list.","lastModifiedDate":"2021-09-29"},{"lineNumber":729,"author":{"gitId":"Moley456"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":730,"author":{"gitId":"Moley456"},"content":"   Use case ends.","lastModifiedDate":"2021-09-29"},{"lineNumber":731,"author":{"gitId":"Moley456"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":732,"author":{"gitId":"Moley456"},"content":"**Extensions**","lastModifiedDate":"2021-09-29"},{"lineNumber":733,"author":{"gitId":"Moley456"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":734,"author":{"gitId":"Moley456"},"content":"* 1a. Facility list is empty.","lastModifiedDate":"2021-09-29"},{"lineNumber":735,"author":{"gitId":"Moley456"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":736,"author":{"gitId":"Moley456"},"content":"    * 1a1. SportsPA shows an error message","lastModifiedDate":"2021-09-29"},{"lineNumber":737,"author":{"gitId":"Moley456"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":738,"author":{"gitId":"Moley456"},"content":"      Use case ends.","lastModifiedDate":"2021-09-29"},{"lineNumber":739,"author":{"gitId":"Moley456"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":740,"author":{"gitId":"Moley456"},"content":"**Use case: UC13 - Clearing all entries in member list**","lastModifiedDate":"2021-09-29"},{"lineNumber":741,"author":{"gitId":"Moley456"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":742,"author":{"gitId":"Moley456"},"content":"**MSS**","lastModifiedDate":"2021-09-29"},{"lineNumber":743,"author":{"gitId":"Moley456"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":744,"author":{"gitId":"Moley456"},"content":"1. User requests to clear all entries in member list","lastModifiedDate":"2021-09-29"},{"lineNumber":745,"author":{"gitId":"Moley456"},"content":"2. SportsPA deletes all the existing members in the member list","lastModifiedDate":"2021-09-29"},{"lineNumber":746,"author":{"gitId":"Moley456"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":747,"author":{"gitId":"Moley456"},"content":"   Use case ends.","lastModifiedDate":"2021-09-29"},{"lineNumber":748,"author":{"gitId":"Moley456"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":749,"author":{"gitId":"Moley456"},"content":"**Extensions**","lastModifiedDate":"2021-09-29"},{"lineNumber":750,"author":{"gitId":"Moley456"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":751,"author":{"gitId":"Moley456"},"content":"* 1a. Member list is empty","lastModifiedDate":"2021-09-29"},{"lineNumber":752,"author":{"gitId":"Moley456"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":753,"author":{"gitId":"Moley456"},"content":"    * 1a1. SportsPA shows an error message","lastModifiedDate":"2021-09-29"},{"lineNumber":754,"author":{"gitId":"Moley456"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":755,"author":{"gitId":"Moley456"},"content":"      Use case ends.","lastModifiedDate":"2021-09-29"},{"lineNumber":756,"author":{"gitId":"Moley456"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":757,"author":{"gitId":"Moley456"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":758,"author":{"gitId":"Moley456"},"content":"**Use case: UC14 - Importing member details from a CSV file**","lastModifiedDate":"2021-10-28"},{"lineNumber":759,"author":{"gitId":"Moley456"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":760,"author":{"gitId":"Moley456"},"content":"**MSS**","lastModifiedDate":"2021-10-28"},{"lineNumber":761,"author":{"gitId":"Moley456"},"content":"1. User requests to import member details from a CSV file","lastModifiedDate":"2021-10-28"},{"lineNumber":762,"author":{"gitId":"Moley456"},"content":"2. SportsPA imports the member details from the CSV file","lastModifiedDate":"2021-10-28"},{"lineNumber":763,"author":{"gitId":"Moley456"},"content":"    ","lastModifiedDate":"2021-10-28"},{"lineNumber":764,"author":{"gitId":"Moley456"},"content":"    Use case ends.","lastModifiedDate":"2021-10-28"},{"lineNumber":765,"author":{"gitId":"Moley456"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":766,"author":{"gitId":"Moley456"},"content":"**Extensions**","lastModifiedDate":"2021-10-28"},{"lineNumber":767,"author":{"gitId":"Moley456"},"content":"* 1a. The CSV file does not exist","lastModifiedDate":"2021-10-28"},{"lineNumber":768,"author":{"gitId":"Moley456"},"content":"  * 1a1. SportsPA shows an error message telling the user that the file cannot be found","lastModifiedDate":"2021-10-28"},{"lineNumber":769,"author":{"gitId":"Moley456"},"content":"    ","lastModifiedDate":"2021-10-28"},{"lineNumber":770,"author":{"gitId":"Moley456"},"content":"    Use case ends.","lastModifiedDate":"2021-10-28"},{"lineNumber":771,"author":{"gitId":"Moley456"},"content":"* 1b. The CSV file is not in the specified format","lastModifiedDate":"2021-10-28"},{"lineNumber":772,"author":{"gitId":"Moley456"},"content":"  * 1b1. SportsPA shows an error message informing the user why the error occurred","lastModifiedDate":"2021-10-28"},{"lineNumber":773,"author":{"gitId":"Moley456"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":774,"author":{"gitId":"Moley456"},"content":"    Use case ends.","lastModifiedDate":"2021-10-28"},{"lineNumber":775,"author":{"gitId":"Moley456"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":776,"author":{"gitId":"Moley456"},"content":"**Use case: UC15 - Exiting the program**","lastModifiedDate":"2021-10-28"},{"lineNumber":777,"author":{"gitId":"Moley456"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":778,"author":{"gitId":"Moley456"},"content":"**MSS**","lastModifiedDate":"2021-09-29"},{"lineNumber":779,"author":{"gitId":"Moley456"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":780,"author":{"gitId":"Moley456"},"content":"1. User requests to exit the program","lastModifiedDate":"2021-09-29"},{"lineNumber":781,"author":{"gitId":"Moley456"},"content":"2. SportsPA terminates","lastModifiedDate":"2021-09-29"},{"lineNumber":782,"author":{"gitId":"Moley456"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":783,"author":{"gitId":"Moley456"},"content":"   Use case ends.","lastModifiedDate":"2021-09-29"},{"lineNumber":784,"author":{"gitId":"Moley456"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":785,"author":{"gitId":"Moley456"},"content":"### Non-Functional Requirements","lastModifiedDate":"2021-09-29"},{"lineNumber":786,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":787,"author":{"gitId":"Moley456"},"content":"1. Should work on any mainstream OS as long as it has Java 11 or above installed","lastModifiedDate":"2021-09-29"},{"lineNumber":788,"author":{"gitId":"YoYoCiti"},"content":"2. Should be able to hold up to 1000 entries (members and facilities) without a noticeable sluggishness in performance","lastModifiedDate":"2021-10-22"},{"lineNumber":789,"author":{"gitId":"YoYoCiti"},"content":"   for typical usage","lastModifiedDate":"2021-10-22"},{"lineNumber":790,"author":{"gitId":"Moley456"},"content":"3. Should be able to process and execute user commands within 3 seconds","lastModifiedDate":"2021-09-29"},{"lineNumber":791,"author":{"gitId":"YoYoCiti"},"content":"4. A user with above average typing speed for regular English text (i.e. not code, not system admin commands) should be","lastModifiedDate":"2021-10-22"},{"lineNumber":792,"author":{"gitId":"YoYoCiti"},"content":"   able to accomplish most of the tasks faster using commands than using the mouse","lastModifiedDate":"2021-10-22"},{"lineNumber":793,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":794,"author":{"gitId":"-"},"content":"### Glossary","lastModifiedDate":"2020-05-23"},{"lineNumber":795,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":796,"author":{"gitId":"-"},"content":"* **Mainstream OS**: Windows, Linux, Unix, OS-X","lastModifiedDate":"2020-05-23"},{"lineNumber":797,"author":{"gitId":"YoYoCiti"},"content":"* **Graphical User Interface (GUI)**: A user interface that includes graphical representation like buttons and icons for","lastModifiedDate":"2021-10-22"},{"lineNumber":798,"author":{"gitId":"YoYoCiti"},"content":"  users to interact with","lastModifiedDate":"2021-10-22"},{"lineNumber":799,"author":{"gitId":"Moley456"},"content":"* **Command Line Interface (CLI)**: A text-based user interface that the user interacts with by typing in commands","lastModifiedDate":"2021-09-29"},{"lineNumber":800,"author":{"gitId":"Moley456"},"content":"* **Group size regulations**: Maximum allowable group size for sporting activities as specified by Covid-19 regulations","lastModifiedDate":"2021-09-29"},{"lineNumber":801,"author":{"gitId":"Moley456"},"content":"* **Above average typing speed**: faster than 40wpm (words per minute)","lastModifiedDate":"2021-09-29"},{"lineNumber":802,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":803,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":804,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":805,"author":{"gitId":"-"},"content":"## **Appendix: Instructions for manual testing**","lastModifiedDate":"2020-05-23"},{"lineNumber":806,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":807,"author":{"gitId":"-"},"content":"Given below are instructions to test the app manually.","lastModifiedDate":"2020-05-23"},{"lineNumber":808,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":809,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** These instructions only provide a starting point for testers to work on;","lastModifiedDate":"2020-05-23"},{"lineNumber":810,"author":{"gitId":"-"},"content":"testers are expected to do more *exploratory* testing.","lastModifiedDate":"2020-05-23"},{"lineNumber":811,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":812,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":813,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":814,"author":{"gitId":"-"},"content":"### Launch and shutdown","lastModifiedDate":"2020-05-23"},{"lineNumber":815,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":816,"author":{"gitId":"-"},"content":"1. Initial launch","lastModifiedDate":"2020-05-23"},{"lineNumber":817,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":818,"author":{"gitId":"-"},"content":"    1. Download the jar file and copy into an empty folder","lastModifiedDate":"2020-05-23"},{"lineNumber":819,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":820,"author":{"gitId":"YoYoCiti"},"content":"    1. Double-click the jar file Expected: Shows the GUI with a set of sample contacts. The window size may not be","lastModifiedDate":"2021-10-22"},{"lineNumber":821,"author":{"gitId":"YoYoCiti"},"content":"       optimum.","lastModifiedDate":"2021-10-22"},{"lineNumber":822,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":823,"author":{"gitId":"-"},"content":"1. Saving window preferences","lastModifiedDate":"2020-05-23"},{"lineNumber":824,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":825,"author":{"gitId":"-"},"content":"    1. Resize the window to an optimum size. Move the window to a different location. Close the window.","lastModifiedDate":"2020-05-23"},{"lineNumber":826,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":827,"author":{"gitId":"-"},"content":"    1. Re-launch the app by double-clicking the jar file.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":828,"author":{"gitId":"-"},"content":"       Expected: The most recent window size and location is retained.","lastModifiedDate":"2020-05-23"},{"lineNumber":829,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":830,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":831,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":832,"author":{"gitId":"-"},"content":"### Deleting a person","lastModifiedDate":"2020-05-23"},{"lineNumber":833,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":834,"author":{"gitId":"-"},"content":"1. Deleting a person while all persons are being shown","lastModifiedDate":"2020-05-23"},{"lineNumber":835,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":836,"author":{"gitId":"-"},"content":"    1. Prerequisites: List all persons using the `list` command. Multiple persons in the list.","lastModifiedDate":"2020-05-23"},{"lineNumber":837,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":838,"author":{"gitId":"-"},"content":"    1. Test case: `delete 1`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":839,"author":{"gitId":"YoYoCiti"},"content":"       Expected: First contact is deleted from the list. Details of the deleted contact shown in the status message.","lastModifiedDate":"2021-10-22"},{"lineNumber":840,"author":{"gitId":"YoYoCiti"},"content":"       Timestamp in the status bar is updated.","lastModifiedDate":"2021-10-22"},{"lineNumber":841,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":842,"author":{"gitId":"-"},"content":"    1. Test case: `delete 0`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":843,"author":{"gitId":"-"},"content":"       Expected: No person is deleted. Error details shown in the status message. Status bar remains the same.","lastModifiedDate":"2020-05-23"},{"lineNumber":844,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":845,"author":{"gitId":"-"},"content":"    1. Other incorrect delete commands to try: `delete`, `delete x`, `...` (where x is larger than the list size)\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":846,"author":{"gitId":"-"},"content":"       Expected: Similar to previous.","lastModifiedDate":"2020-05-23"},{"lineNumber":847,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":848,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":849,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":850,"author":{"gitId":"-"},"content":"### Saving data","lastModifiedDate":"2020-05-23"},{"lineNumber":851,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":852,"author":{"gitId":"-"},"content":"1. Dealing with missing/corrupted data files","lastModifiedDate":"2020-05-23"},{"lineNumber":853,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":854,"author":{"gitId":"-"},"content":"    1. _{explain how to simulate a missing/corrupted file, and the expected behavior}_","lastModifiedDate":"2020-05-23"},{"lineNumber":855,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":856,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"YoYoCiti":262,"Moley456":149,"Shruthi0310":40,"-":341,"felix-ong":32,"tsinyee":32}},{"path":"docs/UserGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2021-10-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: User Guide","lastModifiedDate":"2021-10-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"Moley456"},"content":"\u003cspan style \u003d \"font-size: 32px; color: #e46c0a\"\u003e","lastModifiedDate":"2021-10-26"},{"lineNumber":7,"author":{"gitId":"Moley456"},"content":"Welcome to the SportsPA User Guide!","lastModifiedDate":"2021-10-26"},{"lineNumber":8,"author":{"gitId":"Moley456"},"content":"\u003c/span\u003e","lastModifiedDate":"2021-10-26"},{"lineNumber":9,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":10,"author":{"gitId":"YoYoCiti"},"content":"SportsPA is a desktop application targeted for use among NUS sports CCA Leaders. It is used to manage membership and","lastModifiedDate":"2021-10-22"},{"lineNumber":11,"author":{"gitId":"YoYoCiti"},"content":"training sessions for NUS sports CCAs. SportsPA allows you to keep track of details of your members as well as","lastModifiedDate":"2021-10-22"},{"lineNumber":12,"author":{"gitId":"YoYoCiti"},"content":"facilities to hold training sessions at. With SportsPA, you will be able to quickly organise training sessions as we","lastModifiedDate":"2021-10-22"},{"lineNumber":13,"author":{"gitId":"YoYoCiti"},"content":"help you allocate available members into the various facilities according to their specified capacity.","lastModifiedDate":"2021-10-22"},{"lineNumber":14,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":15,"author":{"gitId":"felix-ong"},"content":"As SportsPA mainly uses a CLI (Command Line Interface), you simply have to type in commands to use it. This user","lastModifiedDate":"2021-10-26"},{"lineNumber":16,"author":{"gitId":"felix-ong"},"content":"guide provides an in-depth documentation on the all the commands available. If this is your first time using SportsPA,","lastModifiedDate":"2021-10-26"},{"lineNumber":17,"author":{"gitId":"YoYoCiti"},"content":"we also provide a [quick start guide](#quick-start) that demonstrates the end-to-end setup process to get you started.","lastModifiedDate":"2021-10-26"},{"lineNumber":18,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":19,"author":{"gitId":"YoYoCiti"},"content":"_____________________________________________________________________________________________________________","lastModifiedDate":"2021-10-22"},{"lineNumber":20,"author":{"gitId":"Moley456"},"content":"\u003ca name\u003d\"table-of-contents\"\u003e\u003c/a\u003e","lastModifiedDate":"2021-10-26"},{"lineNumber":21,"author":{"gitId":"Moley456"},"content":"\u003cspan style \u003d \"font-size: 32px; color: #e46c0a\"\u003e","lastModifiedDate":"2021-10-26"},{"lineNumber":22,"author":{"gitId":"Moley456"},"content":"Table of Contents","lastModifiedDate":"2021-10-26"},{"lineNumber":23,"author":{"gitId":"Moley456"},"content":"\u003c/span\u003e","lastModifiedDate":"2021-10-26"},{"lineNumber":24,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2021-10-26"},{"lineNumber":25,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2021-10-26"},{"lineNumber":26,"author":{"gitId":"Shruthi0310"},"content":"_____________________________________________________________________________________________________________","lastModifiedDate":"2021-09-28"},{"lineNumber":27,"author":{"gitId":"felix-ong"},"content":"## How to use the User Guide","lastModifiedDate":"2021-10-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"felix-ong"},"content":"You can click on the links in the [Table of Contents](#table-of-contents) to quickly navigate to the desired location in","lastModifiedDate":"2021-10-26"},{"lineNumber":30,"author":{"gitId":"felix-ong"},"content":"this User Guide. A link to return to the [Table of Contents](#table-of-contents) is provided at the end of every section.","lastModifiedDate":"2021-10-26"},{"lineNumber":31,"author":{"gitId":"felix-ong"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-10-26"},{"lineNumber":32,"author":{"gitId":"felix-ong"},"content":"The table below summarizes the meaning of the icons and text styles used in this User Guide.","lastModifiedDate":"2021-10-26"},{"lineNumber":33,"author":{"gitId":"felix-ong"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-10-26"},{"lineNumber":34,"author":{"gitId":"felix-ong"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":35,"author":{"gitId":"felix-ong"},"content":"Icon / Text Style | Description","lastModifiedDate":"2021-10-26"},{"lineNumber":36,"author":{"gitId":"felix-ong"},"content":"----------------- | ------------------","lastModifiedDate":"2021-10-26"},{"lineNumber":37,"author":{"gitId":"felix-ong"},"content":"**bold**        | Highlights important information such as components of SportsPA or constraints of command parameters","lastModifiedDate":"2021-10-26"},{"lineNumber":38,"author":{"gitId":"YoYoCiti"},"content":"`inline code`          | Represents commands in the format that you should follow when typing them","lastModifiedDate":"2021-10-26"},{"lineNumber":39,"author":{"gitId":"YoYoCiti"},"content":"UPPER_CASE     | Represents parameters to be supplied by you for commands","lastModifiedDate":"2021-10-26"},{"lineNumber":40,"author":{"gitId":"felix-ong"},"content":"[link](#table-of-contents) | Represents links that can be clicked on to be navigate to a different section of the User Guide or a different site","lastModifiedDate":"2021-10-26"},{"lineNumber":41,"author":{"gitId":"felix-ong"},"content":"**:information_source: Notes:** | Represents important information regarding commands such as their format and constraints","lastModifiedDate":"2021-10-26"},{"lineNumber":42,"author":{"gitId":"felix-ong"},"content":"**:exclamation: Caution:**| Represents warnings for actions that can result in the unintentional and irreversible removal of data","lastModifiedDate":"2021-10-26"},{"lineNumber":43,"author":{"gitId":"YoYoCiti"},"content":"**:bulb: Tip:**| Represents useful tips that we would like to share","lastModifiedDate":"2021-10-26"},{"lineNumber":44,"author":{"gitId":"YoYoCiti"},"content":":camera:| Signifies that a screenshot of the outcome of the command is provided below","lastModifiedDate":"2021-10-26"},{"lineNumber":45,"author":{"gitId":"felix-ong"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":46,"author":{"gitId":"felix-ong"},"content":"[Back to Table of Contents](#table-of-contents)","lastModifiedDate":"2021-10-26"},{"lineNumber":47,"author":{"gitId":"felix-ong"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":48,"author":{"gitId":"felix-ong"},"content":"_____________________________________________________________________________________________________________","lastModifiedDate":"2021-10-26"},{"lineNumber":49,"author":{"gitId":"YoYoCiti"},"content":"## Quick Start","lastModifiedDate":"2021-10-22"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"felix-ong"},"content":"1. Ensure you have Java `11` or above installed on your Computer. If you are unsure of how to do so, refer to the [FAQ](#faq).","lastModifiedDate":"2021-10-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"YoYoCiti"},"content":"2. Download the latest `SportsPA.jar` from [here](https://github.com/AY2122S1-CS2103T-W12-1/tp/releases/tag/v1.2.1).","lastModifiedDate":"2021-10-22"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"YoYoCiti"},"content":"3. Copy the file to the folder you want to use as the _home folder_ for SportsPA.","lastModifiedDate":"2021-10-22"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"YoYoCiti"},"content":"4. Double-click the file to start the app. The GUI similar to the image below should appear in a few seconds. The app","lastModifiedDate":"2021-10-22"},{"lineNumber":58,"author":{"gitId":"YoYoCiti"},"content":"   provides some sample data for you to play around with and familiarize yourself with the commands.","lastModifiedDate":"2021-10-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":60,"author":{"gitId":"YoYoCiti"},"content":"\u003cp align\u003d\"center\"\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":61,"author":{"gitId":"YoYoCiti"},"content":"   \u003cimg src\u003d\"images/FirstLook.png\" height\u003d\"400\" align\u003d\"center\"/\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":62,"author":{"gitId":"YoYoCiti"},"content":"\u003c/p\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"YoYoCiti"},"content":"[Back to Table of Contents](#table-of-contents)","lastModifiedDate":"2021-10-22"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"YoYoCiti"},"content":"_____________________________________________________________________________________________________________","lastModifiedDate":"2021-10-22"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":68,"author":{"gitId":"YoYoCiti"},"content":"## Using SportsPA\u0027s Interface","lastModifiedDate":"2021-10-22"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":70,"author":{"gitId":"felix-ong"},"content":"While SportsPA has a GUI (Graphical User Interface) to display data and messages, you interact with it mainly","lastModifiedDate":"2021-10-26"},{"lineNumber":71,"author":{"gitId":"felix-ong"},"content":"by typing. The figure below provides an overview on the key components of our interface. \u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2021-10-26"},{"lineNumber":72,"author":{"gitId":"YoYoCiti"},"content":"![Gui](images/Gui.png)","lastModifiedDate":"2021-10-22"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":74,"author":{"gitId":"YoYoCiti"},"content":"Typically, to execute a command, this is how you interact with the interface:","lastModifiedDate":"2021-10-25"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":76,"author":{"gitId":"YoYoCiti"},"content":"1. Type the relevant command into the **Command Window** and press **Enter** on your keyboard.","lastModifiedDate":"2021-10-25"},{"lineNumber":77,"author":{"gitId":"YoYoCiti"},"content":"2. The results of the command (or any warning messages generated) are displayed in the **Result Window**.","lastModifiedDate":"2021-10-25"},{"lineNumber":78,"author":{"gitId":"YoYoCiti"},"content":"3. Any changes made to the data will be reflected accordingly in the **List Window**. ","lastModifiedDate":"2021-10-25"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":80,"author":{"gitId":"YoYoCiti"},"content":"SportsPA stores two lists - **Members** and **Facilities**, which you can freely switch between by clicking on the respective **Tabs**. Alternatively, whenever you execute a member-specific or facility-specific command, SportsPA automatically switches to the relevant tab for you.","lastModifiedDate":"2021-10-25"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":82,"author":{"gitId":"YoYoCiti"},"content":"Here are some example commands you can try:","lastModifiedDate":"2021-10-22"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"YoYoCiti"},"content":"* **`help`** : Displays help window.","lastModifiedDate":"2021-10-25"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":86,"author":{"gitId":"felix-ong"},"content":"* **`listm`** : Lists all members.","lastModifiedDate":"2021-10-26"},{"lineNumber":87,"author":{"gitId":"felix-ong"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":88,"author":{"gitId":"Shruthi0310"},"content":"* **`listf`** : Lists all facilities.","lastModifiedDate":"2021-09-28"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"felix-ong"},"content":"* **`addf n/Court 1 l/University Sports Centre t/1700 c/10`** : Adds the facility named `Court 1` to the facilities","lastModifiedDate":"2021-10-26"},{"lineNumber":91,"author":{"gitId":"YoYoCiti"},"content":"  list.","lastModifiedDate":"2021-10-22"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"felix-ong"},"content":"* **`deletem 3`** : Deletes 3rd member in the members list.","lastModifiedDate":"2021-10-26"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"* **`exit`** : Exits the app.","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"YoYoCiti"},"content":"[Back to Table of Contents](#table-of-contents)","lastModifiedDate":"2021-10-22"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":99,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"## Features","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"YoYoCiti"},"content":"This section documents all the commands available in SportsPA, guiding you through its function, format, example usages","lastModifiedDate":"2021-10-22"},{"lineNumber":104,"author":{"gitId":"YoYoCiti"},"content":"and any other noteworthy tips. **Note that examples ending with :camera: means that a screenshot of the outcome is provided below.**","lastModifiedDate":"2021-10-26"},{"lineNumber":105,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":106,"author":{"gitId":"YoYoCiti"},"content":"For a summary of all the commands, refer to the [Command Summary](#command-summary). If this","lastModifiedDate":"2021-10-26"},{"lineNumber":107,"author":{"gitId":"YoYoCiti"},"content":"is your first read, do go through the following notes about the command format to help you better understand the","lastModifiedDate":"2021-10-22"},{"lineNumber":108,"author":{"gitId":"YoYoCiti"},"content":"documentation.","lastModifiedDate":"2021-10-22"},{"lineNumber":109,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":110,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"**:information_source: Notes about the command format:**\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"felix-ong"},"content":"* Characters with the slash symbols are used to indicate the type of parameter supplied by the user.","lastModifiedDate":"2021-10-26"},{"lineNumber":115,"author":{"gitId":"felix-ong"},"content":"  \u003cbr\u003e e.g. in `addm n/NAME p/PHONE_NUMBER`, `n/` and `p/` are the symbols used before entering a parameter for `NAME`","lastModifiedDate":"2021-10-26"},{"lineNumber":116,"author":{"gitId":"YoYoCiti"},"content":"  and `PHONE_NUMBER` respectively.","lastModifiedDate":"2021-10-22"},{"lineNumber":117,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":118,"author":{"gitId":"-"},"content":"* Words in `UPPER_CASE` are the parameters to be supplied by the user.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"tsinyee"},"content":"  e.g. in `deletem INDEX`, `INDEX` is a parameter which can be used as `deletem 1`.","lastModifiedDate":"2021-10-28"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"* Items in square brackets are optional.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"tsinyee"},"content":"  e.g. `n/NAME p/PHONE_NUMBER [d/DAY(S)] [t/TAG]...` can be used as `n/Ben p/91111111 d/1` or as `n/John p/91111111` or","lastModifiedDate":"2021-10-28"},{"lineNumber":123,"author":{"gitId":"YoYoCiti"},"content":"  as `n/John p/91111111 t/exco`.","lastModifiedDate":"2021-10-22"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":125,"author":{"gitId":"tsinyee"},"content":"* Items with `...` after them can be used multiple times including zero times.\u003cbr\u003e","lastModifiedDate":"2021-10-22"},{"lineNumber":126,"author":{"gitId":"tsinyee"},"content":"  e.g. `[t/TAG]...` can be used as ` `(i.e. 0 times), `t/exco`, `t/exco t/y2`etc.","lastModifiedDate":"2021-10-22"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":128,"author":{"gitId":"felix-ong"},"content":"* Parameters with the slash symbols can be in any order.\u003cbr\u003e","lastModifiedDate":"2021-10-26"},{"lineNumber":129,"author":{"gitId":"Shruthi0310"},"content":"  e.g. if the command specifies `n/NAME l/LOCATION`, `l/LOCATION n/NAME` is also acceptable.","lastModifiedDate":"2021-09-28"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":131,"author":{"gitId":"YoYoCiti"},"content":"* If a parameter is expected only once in the command but you specified it multiple times, only the last occurrence of","lastModifiedDate":"2021-10-22"},{"lineNumber":132,"author":{"gitId":"YoYoCiti"},"content":"  the parameter wll be taken.\u003cbr\u003e","lastModifiedDate":"2021-10-22"},{"lineNumber":133,"author":{"gitId":"-"},"content":"  e.g. if you specify `p/12341234 p/56785678`, only `p/56785678` will be taken.","lastModifiedDate":"2021-10-22"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":135,"author":{"gitId":"YoYoCiti"},"content":"* Extraneous parameters for commands that do not take in parameters (such as `help`, `listf`, `clearm` and `exit`) will","lastModifiedDate":"2021-10-22"},{"lineNumber":136,"author":{"gitId":"YoYoCiti"},"content":"  be ignored.\u003cbr\u003e","lastModifiedDate":"2021-10-22"},{"lineNumber":137,"author":{"gitId":"-"},"content":"  e.g. if the command specifies `help 123`, it will be interpreted as `help`.","lastModifiedDate":"2021-02-03"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-03"},{"lineNumber":139,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"YoYoCiti"},"content":"### Member-Specific Features","lastModifiedDate":"2021-10-25"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":143,"author":{"gitId":"YoYoCiti"},"content":"#### Adding a member: `addm`","lastModifiedDate":"2021-10-25"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":145,"author":{"gitId":"YoYoCiti"},"content":"Adds a member to your members list.","lastModifiedDate":"2021-10-22"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"YoYoCiti"},"content":"Format: `addm n/NAME p/PHONE_NUMBER [d/DAY(s)] [t/TAG]...`","lastModifiedDate":"2021-10-26"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"YoYoCiti"},"content":"* `DAY(s)` is an optional field indicating a list of days for which the member is available for that week","lastModifiedDate":"2021-10-26"},{"lineNumber":150,"author":{"gitId":"YoYoCiti"},"content":"* `DAY(s)` should be provided as numerical index, where `1` represents Monday, `2` represents Tuesday … and `7` represents","lastModifiedDate":"2021-10-26"},{"lineNumber":151,"author":{"gitId":"YoYoCiti"},"content":"  Sunday","lastModifiedDate":"2021-10-22"},{"lineNumber":152,"author":{"gitId":"YoYoCiti"},"content":"* Members added without `DAY(s)` will have no available days by default","lastModifiedDate":"2021-10-26"},{"lineNumber":153,"author":{"gitId":"YoYoCiti"},"content":"* `TAG` is an optional field indicating the tags associated with the member","lastModifiedDate":"2021-10-22"},{"lineNumber":154,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":155,"author":{"gitId":"YoYoCiti"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":156,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":157,"author":{"gitId":"YoYoCiti"},"content":"**:information_source: Note:** You will not be able to add members with the same `NAME` into the member list as they are","lastModifiedDate":"2021-10-22"},{"lineNumber":158,"author":{"gitId":"YoYoCiti"},"content":"considered duplicates.","lastModifiedDate":"2021-10-22"},{"lineNumber":159,"author":{"gitId":"YoYoCiti"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":160,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":161,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":163,"author":{"gitId":"YoYoCiti"},"content":"* `addm n/Bob Chia p/91228372` adds Bob Chia to the member list with zero available days by default","lastModifiedDate":"2021-10-26"},{"lineNumber":164,"author":{"gitId":"YoYoCiti"},"content":"* `addm n/John Tan p/91234567 d/1 3 5` adds John Tan to the member list and indicates his availability on Monday, Tuesday and","lastModifiedDate":"2021-10-26"},{"lineNumber":165,"author":{"gitId":"YoYoCiti"},"content":"  Friday","lastModifiedDate":"2021-10-22"},{"lineNumber":166,"author":{"gitId":"YoYoCiti"},"content":"* `addm n/Harry Li p/91234567 d/1 t/exco t/y2` adds Harry Li to the member list, indicates his availability on Monday and tags him as \u0027exco\u0027 and \u0027y2\u0027 :camera:","lastModifiedDate":"2021-10-26"},{"lineNumber":167,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":168,"author":{"gitId":"YoYoCiti"},"content":"\u003cp align\u003d\"center\"\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":169,"author":{"gitId":"YoYoCiti"},"content":"   \u003cimg src\u003d\"images/addmExample.png\" height\u003d\"400\" align\u003d\"center\"/\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":170,"author":{"gitId":"YoYoCiti"},"content":"\u003c/p\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"YoYoCiti"},"content":"[Back to Table of Contents](#table-of-contents)","lastModifiedDate":"2021-10-22"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":174,"author":{"gitId":"YoYoCiti"},"content":"#### Listing all members: `listm`","lastModifiedDate":"2021-10-25"},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"YoYoCiti"},"content":"Shows a list of your members.","lastModifiedDate":"2021-10-22"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":178,"author":{"gitId":"Moley456"},"content":"Format: `listm`","lastModifiedDate":"2021-09-28"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":180,"author":{"gitId":"YoYoCiti"},"content":"[Back to Table of Contents](#table-of-contents)","lastModifiedDate":"2021-10-22"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":182,"author":{"gitId":"tsinyee"},"content":"#### Deleting a member : `deletem`","lastModifiedDate":"2021-10-25"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"YoYoCiti"},"content":"Deletes a member from your member list","lastModifiedDate":"2021-10-22"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":186,"author":{"gitId":"YoYoCiti"},"content":"Format: `deletem INDEX`","lastModifiedDate":"2021-09-28"},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":188,"author":{"gitId":"YoYoCiti"},"content":"* Deletes the member at the specified `INDEX`.","lastModifiedDate":"2021-09-28"},{"lineNumber":189,"author":{"gitId":"YoYoCiti"},"content":"* The index refers to the index number shown in the displayed member list.","lastModifiedDate":"2021-09-28"},{"lineNumber":190,"author":{"gitId":"YoYoCiti"},"content":"* The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2021-09-28"},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":194,"author":{"gitId":"YoYoCiti"},"content":"* `listm` followed by `deletem 2` deletes the member at index 2 of the member list","lastModifiedDate":"2021-09-28"},{"lineNumber":195,"author":{"gitId":"tsinyee"},"content":"* `findm n/John` followed by `deletem 1` deletes the 1st member in the results of the `findm` command","lastModifiedDate":"2021-10-28"},{"lineNumber":196,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":197,"author":{"gitId":"YoYoCiti"},"content":"[Back to Table of Contents](#table-of-contents)","lastModifiedDate":"2021-10-22"},{"lineNumber":198,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":199,"author":{"gitId":"YoYoCiti"},"content":"#### Editing a member: `editm`","lastModifiedDate":"2021-10-25"},{"lineNumber":200,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":201,"author":{"gitId":"YoYoCiti"},"content":"Edits an existing member from your member list.","lastModifiedDate":"2021-10-22"},{"lineNumber":202,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":203,"author":{"gitId":"tsinyee"},"content":"Format: `editm INDEX [n/NAME] [p/PHONE_NUMBER] [t/TAG]...`","lastModifiedDate":"2021-10-28"},{"lineNumber":204,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":205,"author":{"gitId":"YoYoCiti"},"content":"* Edits the member at the specified `INDEX`","lastModifiedDate":"2021-10-22"},{"lineNumber":206,"author":{"gitId":"YoYoCiti"},"content":"* `INDEX` refers to the index number shown in the displayed member list","lastModifiedDate":"2021-10-22"},{"lineNumber":207,"author":{"gitId":"YoYoCiti"},"content":"* `INDEX` **must be a positive integer** 1, 2, 3…","lastModifiedDate":"2021-10-22"},{"lineNumber":208,"author":{"gitId":"YoYoCiti"},"content":"* At least one of the optional fields must be provided","lastModifiedDate":"2021-10-22"},{"lineNumber":209,"author":{"gitId":"YoYoCiti"},"content":"* Existing values will be updated to the input values","lastModifiedDate":"2021-10-22"},{"lineNumber":210,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":211,"author":{"gitId":"YoYoCiti"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2021-10-22"},{"lineNumber":212,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":213,"author":{"gitId":"YoYoCiti"},"content":"**:information_source: Note:** You will not be able to edit the member if it has the same `NAME` as another existing","lastModifiedDate":"2021-10-22"},{"lineNumber":214,"author":{"gitId":"YoYoCiti"},"content":"member as they are considered duplicates.","lastModifiedDate":"2021-10-22"},{"lineNumber":215,"author":{"gitId":"YoYoCiti"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-10-22"},{"lineNumber":216,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":217,"author":{"gitId":"YoYoCiti"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-10-26"},{"lineNumber":218,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":219,"author":{"gitId":"YoYoCiti"},"content":"**:bulb: Tip 1:** Didn\u0027t tag a member when you added them? It\u0027s not too late, just tag them using this command!","lastModifiedDate":"2021-10-26"},{"lineNumber":220,"author":{"gitId":"YoYoCiti"},"content":"Similarly, use `t/` (nothing supplied) to remove a tag from a member.","lastModifiedDate":"2021-11-01"},{"lineNumber":221,"author":{"gitId":"YoYoCiti"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-10-26"},{"lineNumber":222,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":223,"author":{"gitId":"YoYoCiti"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-10-26"},{"lineNumber":224,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":225,"author":{"gitId":"YoYoCiti"},"content":"**:bulb: Tip 2:** If you are looking to edit a member\u0027s availability, look at [Setting member availability](#setting-member-availability-setm).","lastModifiedDate":"2021-10-26"},{"lineNumber":226,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-10-26"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":228,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2021-10-22"},{"lineNumber":229,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":230,"author":{"gitId":"YoYoCiti"},"content":"* `editm 1 n/Jonathan t/` edits the name of the 1st member to be `Jonathan` and removes all its tags","lastModifiedDate":"2021-11-01"},{"lineNumber":231,"author":{"gitId":"YoYoCiti"},"content":"* `editm 2 n/Jonathan p/93837283` edits the name and phone number of the 2nd member to be `Jonathan` and `93837283`","lastModifiedDate":"2021-10-22"},{"lineNumber":232,"author":{"gitId":"YoYoCiti"},"content":"  respectively","lastModifiedDate":"2021-10-22"},{"lineNumber":233,"author":{"gitId":"YoYoCiti"},"content":"* `editm 2 t/exco t/y1` edits the 2nd member to have tags `exco` and `y1` :camera:","lastModifiedDate":"2021-10-26"},{"lineNumber":234,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":235,"author":{"gitId":"YoYoCiti"},"content":"\u003cp align\u003d\"center\"\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":236,"author":{"gitId":"YoYoCiti"},"content":"   \u003cimg src\u003d\"images/editmExample.png\" height\u003d\"400\" align\u003d\"center\"/\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":237,"author":{"gitId":"YoYoCiti"},"content":"\u003c/p\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":238,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":239,"author":{"gitId":"YoYoCiti"},"content":"[Back to Table of Contents](#table-of-contents)","lastModifiedDate":"2021-10-22"},{"lineNumber":240,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"felix-ong"},"content":"#### Finding a member: `findm`","lastModifiedDate":"2021-10-26"},{"lineNumber":242,"author":{"gitId":"tsinyee"},"content":"If you are looking for specific members,`findm` lets you find and filter members based on any of the","lastModifiedDate":"2021-10-29"},{"lineNumber":243,"author":{"gitId":"tsinyee"},"content":"specified field keywords.","lastModifiedDate":"2021-10-28"},{"lineNumber":244,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":245,"author":{"gitId":"tsinyee"},"content":"Format: `findm [n/NAME] [p/PHONE] [d/DAY(S)] [tda/TODAY_ATTENDANCE] [tta/TOTAL_ATTENDANCE] [t/TAG]...`","lastModifiedDate":"2021-10-28"},{"lineNumber":246,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":247,"author":{"gitId":"tsinyee"},"content":"* `findm` is case-insensitive. e.g. `n/john` will match `John`","lastModifiedDate":"2021-10-28"},{"lineNumber":248,"author":{"gitId":"tsinyee"},"content":"* Other than `[t/TAG]...`, only the last argument supplied is searched. \u003cbr\u003e e.g. `findm n/John n/Amy tta/0 tta/2` will list the member `Amy` with a total attendance of `2`","lastModifiedDate":"2021-10-28"},{"lineNumber":249,"author":{"gitId":"tsinyee"},"content":"* For `[t/TAG]`... , all arguments supplied will be used to find members, members with at least one matching tag will be listed. \u003cbr\u003e e.g. `findm t/exco t/y2` will list members with tags `exco` `y2`, and also members with only one matching tag `y2` or `exco`.","lastModifiedDate":"2021-10-28"},{"lineNumber":250,"author":{"gitId":"tsinyee"},"content":"* Only full words will be matched e.g. `n/Johnny` will not match `John`, and `n/John Doe` will not match `John Lim`.","lastModifiedDate":"2021-10-31"},{"lineNumber":251,"author":{"gitId":"tsinyee"},"content":"* `TODAY_ATTENDANCE` must be either `true` or `false`, true being present and false being absent.","lastModifiedDate":"2021-10-31"},{"lineNumber":252,"author":{"gitId":"tsinyee"},"content":"* `TOTAL_ATTENDANCE` must be a **non-negative integer** 0, 1, 2, 3...","lastModifiedDate":"2021-10-31"},{"lineNumber":253,"author":{"gitId":"tsinyee"},"content":"* At least one of the optional fields **must** be supplied.","lastModifiedDate":"2021-10-28"},{"lineNumber":254,"author":{"gitId":"tsinyee"},"content":"* If multiple fields are supplied, only members that match all of the given field keywords will be listed. \u003cbr\u003e","lastModifiedDate":"2021-10-28"},{"lineNumber":255,"author":{"gitId":"tsinyee"},"content":"e.g. `findm n/Amy t/exco` will match `Amy` with the tag `exco` but not `John` with the tag `exco`.","lastModifiedDate":"2021-10-28"},{"lineNumber":256,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":257,"author":{"gitId":"YoYoCiti"},"content":"Examples:","lastModifiedDate":"2021-10-25"},{"lineNumber":258,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":259,"author":{"gitId":"tsinyee"},"content":"* `findm n/Bob` returns `bob`","lastModifiedDate":"2021-10-28"},{"lineNumber":260,"author":{"gitId":"tsinyee"},"content":"* `findm t/exco t/y2` returns members with either tags `exco` `y2`, or both.","lastModifiedDate":"2021-10-28"},{"lineNumber":261,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":262,"author":{"gitId":"YoYoCiti"},"content":"\u003cp align\u003d\"center\"\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":263,"author":{"gitId":"YoYoCiti"},"content":"   \u003cimg src\u003d\"images/findmExample.png\" height\u003d\"400\" align\u003d\"center\"/\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":264,"author":{"gitId":"YoYoCiti"},"content":"\u003c/p\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":265,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":266,"author":{"gitId":"YoYoCiti"},"content":"[Back to Table of Contents](#table-of-contents)","lastModifiedDate":"2021-10-25"},{"lineNumber":267,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":268,"author":{"gitId":"YoYoCiti"},"content":"#### Sorting member list: `sortm`","lastModifiedDate":"2021-10-25"},{"lineNumber":269,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":270,"author":{"gitId":"tsinyee"},"content":"Shows a list of all members, sorted in your specified order.","lastModifiedDate":"2021-10-28"},{"lineNumber":271,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":272,"author":{"gitId":"tsinyee"},"content":"Format: `sortm by/SORT_ORDER`","lastModifiedDate":"2021-10-28"},{"lineNumber":273,"author":{"gitId":"tsinyee"},"content":"* `SORT_ORDER` is a compulsory field and must be a valid `SORT_ORDER`","lastModifiedDate":"2021-10-28"},{"lineNumber":274,"author":{"gitId":"tsinyee"},"content":"* Valid `SORT_ORDER`: `name`, `tag`","lastModifiedDate":"2021-10-28"},{"lineNumber":275,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":276,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2021-10-28"},{"lineNumber":277,"author":{"gitId":"tsinyee"},"content":"* `sortm by/name` returns a member list sorted alphabetically by their names.","lastModifiedDate":"2021-10-28"},{"lineNumber":278,"author":{"gitId":"tsinyee"},"content":"* `sortm by/tag` returns a member list sorted by tag. \u003cbr\u003e Members with more tags are displayed first.","lastModifiedDate":"2021-10-28"},{"lineNumber":279,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":280,"author":{"gitId":"YoYoCiti"},"content":"[Back to Table of Contents](#table-of-contents)","lastModifiedDate":"2021-10-25"},{"lineNumber":281,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":282,"author":{"gitId":"YoYoCiti"},"content":"#### Setting member availability: `setm`","lastModifiedDate":"2021-10-25"},{"lineNumber":283,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":284,"author":{"gitId":"YoYoCiti"},"content":"The availability of your members can change frequently. Thus, instead of having to individually edit your members\u0027 availability, use","lastModifiedDate":"2021-10-26"},{"lineNumber":285,"author":{"gitId":"YoYoCiti"},"content":"`setm` to set the availability of given member(s) at one go.","lastModifiedDate":"2021-10-22"},{"lineNumber":286,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":287,"author":{"gitId":"felix-ong"},"content":"Format: `setm INDEX/INDICES d/DAY(S)`","lastModifiedDate":"2021-10-12"},{"lineNumber":288,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":289,"author":{"gitId":"felix-ong"},"content":"* Sets the availability of the member(s) at the specified `INDEX/INDICES` to be the specified `DAY(s)`","lastModifiedDate":"2021-10-15"},{"lineNumber":290,"author":{"gitId":"YoYoCiti"},"content":"* Availability is defined as days of the week when member is free","lastModifiedDate":"2021-09-28"},{"lineNumber":291,"author":{"gitId":"felix-ong"},"content":"* `DAY` **must be a positive integer from 1 to 7**, whereby 1 represents Monday and 7 represents Sunday.","lastModifiedDate":"2021-10-15"},{"lineNumber":292,"author":{"gitId":"felix-ong"},"content":"* `DAYS` **must be separated by a single space** 1 2 3 …​","lastModifiedDate":"2021-10-19"},{"lineNumber":293,"author":{"gitId":"felix-ong"},"content":"* `INDEX` refers to the index number shown in the displayed member list","lastModifiedDate":"2021-10-12"},{"lineNumber":294,"author":{"gitId":"felix-ong"},"content":"* `INDICES` **must be positive integers** 1, 2, 3, …​","lastModifiedDate":"2021-10-12"},{"lineNumber":295,"author":{"gitId":"felix-ong"},"content":"* `INDICES` **must be separated by a single space**","lastModifiedDate":"2021-10-15"},{"lineNumber":296,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":297,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":298,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":299,"author":{"gitId":"tsinyee"},"content":"* `findm n/John` followed by `setm 2 d/1` sets the availability of the person at index 2 in the results of the `findm`","lastModifiedDate":"2021-10-31"},{"lineNumber":300,"author":{"gitId":"YoYoCiti"},"content":"  command to be Monday","lastModifiedDate":"2021-10-22"},{"lineNumber":301,"author":{"gitId":"YoYoCiti"},"content":"* `listm` followed by `setm 5 d/1 2` sets the availability of the person at index 5 in the member list to be Monday and","lastModifiedDate":"2021-10-26"},{"lineNumber":302,"author":{"gitId":"YoYoCiti"},"content":"  Tuesday","lastModifiedDate":"2021-10-26"},{"lineNumber":303,"author":{"gitId":"YoYoCiti"},"content":"* `listm` followed by `setm 1 2 3 d/3 4` sets the availability of the first three members in the member list to be Tuesday and Thursday :camera:","lastModifiedDate":"2021-10-26"},{"lineNumber":304,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":305,"author":{"gitId":"YoYoCiti"},"content":"\u003cp align\u003d\"center\"\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":306,"author":{"gitId":"YoYoCiti"},"content":"   \u003cimg src\u003d\"images/setmExample.png\" height\u003d\"400\" align\u003d\"center\"/\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":307,"author":{"gitId":"YoYoCiti"},"content":"\u003c/p\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":308,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":309,"author":{"gitId":"YoYoCiti"},"content":"[Back to Table of Contents](#table-of-contents)","lastModifiedDate":"2021-10-22"},{"lineNumber":310,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":311,"author":{"gitId":"YoYoCiti"},"content":"#### Marking attendance of members : `mark`","lastModifiedDate":"2021-10-25"},{"lineNumber":312,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":313,"author":{"gitId":"YoYoCiti"},"content":"Marks attendance of members listed as present, represented by a tick.","lastModifiedDate":"2021-10-26"},{"lineNumber":314,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":315,"author":{"gitId":"Shruthi0310"},"content":"Format: `mark INDEX/INDICES`","lastModifiedDate":"2021-10-21"},{"lineNumber":316,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":317,"author":{"gitId":"YoYoCiti"},"content":"* Marks the members at the specified `INDEX/INDICES` in the members list as present","lastModifiedDate":"2021-10-26"},{"lineNumber":318,"author":{"gitId":"YoYoCiti"},"content":"* `INDEX` refers to the index number/position of the member in the displayed members list","lastModifiedDate":"2021-10-26"},{"lineNumber":319,"author":{"gitId":"Shruthi0310"},"content":"* `INDICES` **must be positive integers** 1, 2, …​","lastModifiedDate":"2021-10-21"},{"lineNumber":320,"author":{"gitId":"Shruthi0310"},"content":"* `INDICES` **must be separated only by whitespaces** 1 2 3 …​","lastModifiedDate":"2021-10-21"},{"lineNumber":321,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":322,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2021-10-26"},{"lineNumber":323,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":324,"author":{"gitId":"YoYoCiti"},"content":"* `mark 1 2` marks the attendance of the members at indices 1 and 2 in the displayed list a present :camera:","lastModifiedDate":"2021-10-26"},{"lineNumber":325,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":326,"author":{"gitId":"YoYoCiti"},"content":"\u003cp align\u003d\"center\"\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":327,"author":{"gitId":"YoYoCiti"},"content":"   \u003cimg src\u003d\"images/markExample.png\" height\u003d\"400\" align\u003d\"center\"/\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":328,"author":{"gitId":"YoYoCiti"},"content":"\u003c/p\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":329,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":330,"author":{"gitId":"Shruthi0310"},"content":"[Back to Table of Contents](#table-of-contents)","lastModifiedDate":"2021-10-24"},{"lineNumber":331,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":332,"author":{"gitId":"YoYoCiti"},"content":"#### Unmarking attendance of members: `unmark`","lastModifiedDate":"2021-10-25"},{"lineNumber":333,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":334,"author":{"gitId":"YoYoCiti"},"content":"Unmarks attendance of members marked as present, represented by a cross.","lastModifiedDate":"2021-10-26"},{"lineNumber":335,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":336,"author":{"gitId":"Shruthi0310"},"content":"Format `unmark INDEX/INDICES`","lastModifiedDate":"2021-10-21"},{"lineNumber":337,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":338,"author":{"gitId":"YoYoCiti"},"content":"* Unmarks the members at the specified `INDEX/INDICES` in the members list as not present","lastModifiedDate":"2021-10-26"},{"lineNumber":339,"author":{"gitId":"YoYoCiti"},"content":"* `INDEX` refers to the index number/position of the member in the displayed members list","lastModifiedDate":"2021-10-26"},{"lineNumber":340,"author":{"gitId":"Shruthi0310"},"content":"* `INDICES` **must be positive integers** 1, 2, …​","lastModifiedDate":"2021-10-21"},{"lineNumber":341,"author":{"gitId":"Shruthi0310"},"content":"* `INDICES` **must be separated only by whitespaces** 1 2 3 …​","lastModifiedDate":"2021-10-21"},{"lineNumber":342,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":343,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":344,"author":{"gitId":"YoYoCiti"},"content":"* `unmark 1 2` unmarks the attendance of members at indices 1 and 2 as not present","lastModifiedDate":"2021-10-26"},{"lineNumber":345,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":346,"author":{"gitId":"Shruthi0310"},"content":"[Back to Table of Contents](#table-of-contents)","lastModifiedDate":"2021-10-24"},{"lineNumber":347,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":348,"author":{"gitId":"YoYoCiti"},"content":"#### Clearing all attendance for today: `cleara`","lastModifiedDate":"2021-10-25"},{"lineNumber":349,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":350,"author":{"gitId":"YoYoCiti"},"content":"Unmarks all member\u0027s attendance for and finalises their total attendance up till today.","lastModifiedDate":"2021-10-26"},{"lineNumber":351,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":352,"author":{"gitId":"Shruthi0310"},"content":"Format: `cleara`","lastModifiedDate":"2021-10-21"},{"lineNumber":353,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":354,"author":{"gitId":"felix-ong"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e:exclamation: **Caution:**","lastModifiedDate":"2021-10-26"},{"lineNumber":355,"author":{"gitId":"felix-ong"},"content":"All attendance data will be removed immediately after this command is executed. This action is **irreversible**.","lastModifiedDate":"2021-10-26"},{"lineNumber":356,"author":{"gitId":"YoYoCiti"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-11-01"},{"lineNumber":357,"author":{"gitId":"felix-ong"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":358,"author":{"gitId":"Shruthi0310"},"content":"[Back to Table of Contents](#table-of-contents)","lastModifiedDate":"2021-10-24"},{"lineNumber":359,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":360,"author":{"gitId":"YoYoCiti"},"content":"#### Importing multiple members using a CSV file: `import`","lastModifiedDate":"2021-10-25"},{"lineNumber":361,"author":{"gitId":"Moley456"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":362,"author":{"gitId":"YoYoCiti"},"content":"When you want to add or update the details of multiple members at once, you can import data from a comma-separated values","lastModifiedDate":"2021-10-26"},{"lineNumber":363,"author":{"gitId":"Moley456"},"content":"file using `import`.","lastModifiedDate":"2021-10-23"},{"lineNumber":364,"author":{"gitId":"Moley456"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":365,"author":{"gitId":"Moley456"},"content":"Format: `import CSV_FILE_PATH`","lastModifiedDate":"2021-10-23"},{"lineNumber":366,"author":{"gitId":"Moley456"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":367,"author":{"gitId":"Moley456"},"content":"* Data imported from the CSV file **must** have 4 headers in this order:","lastModifiedDate":"2021-10-23"},{"lineNumber":368,"author":{"gitId":"felix-ong"},"content":"  1. Name","lastModifiedDate":"2021-10-26"},{"lineNumber":369,"author":{"gitId":"felix-ong"},"content":"  2. Phone number","lastModifiedDate":"2021-10-26"},{"lineNumber":370,"author":{"gitId":"felix-ong"},"content":"  3. Availability","lastModifiedDate":"2021-10-26"},{"lineNumber":371,"author":{"gitId":"felix-ong"},"content":"  4. Tags","lastModifiedDate":"2021-10-26"},{"lineNumber":372,"author":{"gitId":"YoYoCiti"},"content":"* In the CSV file, parameters\u0027 formats follows that of [addm](#adding-a-member-addm)","lastModifiedDate":"2021-10-26"},{"lineNumber":373,"author":{"gitId":"YoYoCiti"},"content":"* `CSV_FILE_PATH` should be relative to the JAR file location","lastModifiedDate":"2021-10-26"},{"lineNumber":374,"author":{"gitId":"Moley456"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":375,"author":{"gitId":"felix-ong"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e:exclamation: **Caution:**","lastModifiedDate":"2021-10-26"},{"lineNumber":376,"author":{"gitId":"YoYoCiti"},"content":"If there is a duplicate members(same name) being imported using the","lastModifiedDate":"2021-10-26"},{"lineNumber":377,"author":{"gitId":"felix-ong"},"content":"CSV file, the details from the CSV file will overwrite the existing details, except for the attendance data. This action is **irreversible**.","lastModifiedDate":"2021-10-26"},{"lineNumber":378,"author":{"gitId":"YoYoCiti"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-11-01"},{"lineNumber":379,"author":{"gitId":"Moley456"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":380,"author":{"gitId":"Moley456"},"content":"Examples:","lastModifiedDate":"2021-10-23"},{"lineNumber":381,"author":{"gitId":"Moley456"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":382,"author":{"gitId":"YoYoCiti"},"content":"* `import myFile.csv` imports member data from the CSV file in `[JAR_file_location]/myFile.csv` :camera:","lastModifiedDate":"2021-10-26"},{"lineNumber":383,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":384,"author":{"gitId":"YoYoCiti"},"content":"![importExample](images/importExample.png)","lastModifiedDate":"2021-10-26"},{"lineNumber":385,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":386,"author":{"gitId":"YoYoCiti"},"content":"[Back to Table of Contents](#table-of-contents)","lastModifiedDate":"2021-10-22"},{"lineNumber":387,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":388,"author":{"gitId":"YoYoCiti"},"content":"#### Clearing all entries in member list: `clearm`","lastModifiedDate":"2021-10-25"},{"lineNumber":389,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":390,"author":{"gitId":"YoYoCiti"},"content":"Clears all members from your member list.","lastModifiedDate":"2021-10-25"},{"lineNumber":391,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":392,"author":{"gitId":"YoYoCiti"},"content":"Format: `clearm`","lastModifiedDate":"2021-10-25"},{"lineNumber":393,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":394,"author":{"gitId":"YoYoCiti"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e:exclamation: **Caution:**","lastModifiedDate":"2021-10-25"},{"lineNumber":395,"author":{"gitId":"felix-ong"},"content":"All member data will be removed immediately after this command is executed. This action is **irreversible**.","lastModifiedDate":"2021-10-26"},{"lineNumber":396,"author":{"gitId":"YoYoCiti"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-11-01"},{"lineNumber":397,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":398,"author":{"gitId":"YoYoCiti"},"content":"[Back to Table of Contents](#table-of-contents)","lastModifiedDate":"2021-10-25"},{"lineNumber":399,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":400,"author":{"gitId":"YoYoCiti"},"content":"### Facility-Specific Features","lastModifiedDate":"2021-10-25"},{"lineNumber":401,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":402,"author":{"gitId":"felix-ong"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2021-10-26"},{"lineNumber":403,"author":{"gitId":"felix-ong"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":404,"author":{"gitId":"felix-ong"},"content":"**:information_source: Note:** ","lastModifiedDate":"2021-10-30"},{"lineNumber":405,"author":{"gitId":"felix-ong"},"content":"* Facilities are assumed to be available on every day of the week.","lastModifiedDate":"2021-10-30"},{"lineNumber":406,"author":{"gitId":"felix-ong"},"content":"* `NAME` specifies the name of the facility.","lastModifiedDate":"2021-10-30"},{"lineNumber":407,"author":{"gitId":"felix-ong"},"content":"* `LOCATION` specifies the general location of the facility.","lastModifiedDate":"2021-10-30"},{"lineNumber":408,"author":{"gitId":"felix-ong"},"content":"* `NAME` and `LOCATION` each accept **up to 50 alphanumeric characters (including spaces)**.","lastModifiedDate":"2021-10-30"},{"lineNumber":409,"author":{"gitId":"felix-ong"},"content":"* Facilities with the same `NAME` and `LOCATION` are considered duplicates.","lastModifiedDate":"2021-10-30"},{"lineNumber":410,"author":{"gitId":"felix-ong"},"content":"* `TIME` specifies the start time of the training session at the facility and **must be in the 24-hour format** `HHmm`.","lastModifiedDate":"2021-10-30"},{"lineNumber":411,"author":{"gitId":"felix-ong"},"content":"* `CAPACITY` refers to the maximum number of people allowed at the facility and **must be a positive integer from 1 to 50**.","lastModifiedDate":"2021-10-30"},{"lineNumber":412,"author":{"gitId":"felix-ong"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-10-26"},{"lineNumber":413,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":414,"author":{"gitId":"YoYoCiti"},"content":"#### Adding a facility: `addf`","lastModifiedDate":"2021-10-25"},{"lineNumber":415,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":416,"author":{"gitId":"YoYoCiti"},"content":"Adds a facility to your facility list.","lastModifiedDate":"2021-10-25"},{"lineNumber":417,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":418,"author":{"gitId":"YoYoCiti"},"content":"Format: `addf n/NAME l/LOCATION t/TIME c/CAPACITY`","lastModifiedDate":"2021-10-25"},{"lineNumber":419,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":420,"author":{"gitId":"YoYoCiti"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2021-10-25"},{"lineNumber":421,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":422,"author":{"gitId":"YoYoCiti"},"content":"**:information_source: Note:** You will not be able to add facilities with the same `NAME` and `LOCATION` into the list","lastModifiedDate":"2021-10-25"},{"lineNumber":423,"author":{"gitId":"YoYoCiti"},"content":"as they are considered duplicates.","lastModifiedDate":"2021-10-25"},{"lineNumber":424,"author":{"gitId":"YoYoCiti"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-10-25"},{"lineNumber":425,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":426,"author":{"gitId":"YoYoCiti"},"content":"Examples:","lastModifiedDate":"2021-10-25"},{"lineNumber":427,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":428,"author":{"gitId":"YoYoCiti"},"content":"* `addf n/Court 1 l/University Sports Hall t/1500 c/5` adds Court 1 at University Sports Hall at 3pm with a capacity of","lastModifiedDate":"2021-10-26"},{"lineNumber":429,"author":{"gitId":"YoYoCiti"},"content":"  5","lastModifiedDate":"2021-10-25"},{"lineNumber":430,"author":{"gitId":"YoYoCiti"},"content":"* `addf n/Court 19 l/Tampines Hub Badminton Hall t/1700 c/5` adds Court 19 at Tampines Hub Badminton Hall at 5pm with a capacity of 5 :camera:","lastModifiedDate":"2021-10-26"},{"lineNumber":431,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":432,"author":{"gitId":"YoYoCiti"},"content":"\u003cp align\u003d\"center\"\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":433,"author":{"gitId":"YoYoCiti"},"content":"   \u003cimg src\u003d\"images/addfExample.png\" height\u003d\"400\" align\u003d\"center\"/\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":434,"author":{"gitId":"YoYoCiti"},"content":"\u003c/p\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":435,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":436,"author":{"gitId":"YoYoCiti"},"content":"[Back to Table of Contents](#table-of-contents)","lastModifiedDate":"2021-10-25"},{"lineNumber":437,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":438,"author":{"gitId":"YoYoCiti"},"content":"#### Listing all facilities : `listf`","lastModifiedDate":"2021-10-25"},{"lineNumber":439,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":440,"author":{"gitId":"YoYoCiti"},"content":"Shows a list of all your facilities.","lastModifiedDate":"2021-10-25"},{"lineNumber":441,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":442,"author":{"gitId":"YoYoCiti"},"content":"Format: `listf`","lastModifiedDate":"2021-10-25"},{"lineNumber":443,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":444,"author":{"gitId":"YoYoCiti"},"content":"[Back to Table of Contents](#table-of-contents)","lastModifiedDate":"2021-10-25"},{"lineNumber":445,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":446,"author":{"gitId":"YoYoCiti"},"content":"#### Deleting a facility : `deletef`","lastModifiedDate":"2021-10-25"},{"lineNumber":447,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":448,"author":{"gitId":"YoYoCiti"},"content":"Removes a facility from your facility list.","lastModifiedDate":"2021-10-25"},{"lineNumber":449,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":450,"author":{"gitId":"YoYoCiti"},"content":"Format: `deletef INDEX`","lastModifiedDate":"2021-10-25"},{"lineNumber":451,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":452,"author":{"gitId":"YoYoCiti"},"content":"* Deletes the facility at the specified `INDEX`","lastModifiedDate":"2021-10-25"},{"lineNumber":453,"author":{"gitId":"YoYoCiti"},"content":"* `INDEX` refers to the index number shown in the currently displayed facility list","lastModifiedDate":"2021-10-25"},{"lineNumber":454,"author":{"gitId":"YoYoCiti"},"content":"* `INDEX` **must be a positive integer** 1, 2, 3…","lastModifiedDate":"2021-10-25"},{"lineNumber":455,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":456,"author":{"gitId":"YoYoCiti"},"content":"Examples:","lastModifiedDate":"2021-10-25"},{"lineNumber":457,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":458,"author":{"gitId":"YoYoCiti"},"content":"* `listf` followed by `deletef 2` deletes the 2nd facility in the facility list","lastModifiedDate":"2021-10-25"},{"lineNumber":459,"author":{"gitId":"YoYoCiti"},"content":"* `findf Court 1` followed by `deletef 1` deletes the 1st facility in the results of the `findf` command","lastModifiedDate":"2021-10-25"},{"lineNumber":460,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":461,"author":{"gitId":"YoYoCiti"},"content":"[Back to Table of Contents](#table-of-contents)","lastModifiedDate":"2021-10-25"},{"lineNumber":462,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":463,"author":{"gitId":"YoYoCiti"},"content":"#### Editing a facility: `editf`","lastModifiedDate":"2021-10-25"},{"lineNumber":464,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":465,"author":{"gitId":"felix-ong"},"content":"Edits an existing facility in your facility list.","lastModifiedDate":"2021-10-30"},{"lineNumber":466,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":467,"author":{"gitId":"felix-ong"},"content":"Format: `editf INDEX [n/NAME] [l/LOCATION] [t/TIME] [c/CAPACITY]`","lastModifiedDate":"2021-10-26"},{"lineNumber":468,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":469,"author":{"gitId":"YoYoCiti"},"content":"* Edits the facility at the specified `INDEX`","lastModifiedDate":"2021-10-25"},{"lineNumber":470,"author":{"gitId":"YoYoCiti"},"content":"* `INDEX` refers to the index number shown in the displayed facility list","lastModifiedDate":"2021-10-25"},{"lineNumber":471,"author":{"gitId":"YoYoCiti"},"content":"* `INDEX` **must be a positive integer** 1, 2, 3…","lastModifiedDate":"2021-10-25"},{"lineNumber":472,"author":{"gitId":"YoYoCiti"},"content":"* At least one of the optional fields must be provided","lastModifiedDate":"2021-10-25"},{"lineNumber":473,"author":{"gitId":"YoYoCiti"},"content":"* Existing values will be updated to the input values","lastModifiedDate":"2021-10-25"},{"lineNumber":474,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":475,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e:exclamation: **Caution:**","lastModifiedDate":"2021-11-01"},{"lineNumber":476,"author":{"gitId":"YoYoCiti"},"content":"All members allocated to the facility (if any) will be unallocated if you edit its `CAPACITY` to be below the number of allocated","lastModifiedDate":"2021-11-01"},{"lineNumber":477,"author":{"gitId":"YoYoCiti"},"content":"members. This action is **irreversible**.","lastModifiedDate":"2021-11-01"},{"lineNumber":478,"author":{"gitId":"YoYoCiti"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-11-01"},{"lineNumber":479,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":480,"author":{"gitId":"YoYoCiti"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2021-10-25"},{"lineNumber":481,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":482,"author":{"gitId":"YoYoCiti"},"content":"**:information_source: Note:** You will not be able to edit the facility if it has the same `NAME` and `LOCATION` as","lastModifiedDate":"2021-10-25"},{"lineNumber":483,"author":{"gitId":"YoYoCiti"},"content":"another existing facility as they are considered duplicates.","lastModifiedDate":"2021-10-25"},{"lineNumber":484,"author":{"gitId":"YoYoCiti"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-10-25"},{"lineNumber":485,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":486,"author":{"gitId":"YoYoCiti"},"content":"Examples:","lastModifiedDate":"2021-10-25"},{"lineNumber":487,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":488,"author":{"gitId":"YoYoCiti"},"content":"* `editf 1 n/Court 5` edits the name of the 1st facility to be `Court 5`","lastModifiedDate":"2021-10-25"},{"lineNumber":489,"author":{"gitId":"YoYoCiti"},"content":"* `editf 2 n/Court 20 l/University Sports Hall` edits the name and location of the 2nd facility to be `Court 20`","lastModifiedDate":"2021-10-25"},{"lineNumber":490,"author":{"gitId":"YoYoCiti"},"content":"  and `University Sports Hall` respectively","lastModifiedDate":"2021-10-25"},{"lineNumber":491,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":492,"author":{"gitId":"YoYoCiti"},"content":"[Back to Table of Contents](#table-of-contents)","lastModifiedDate":"2021-10-25"},{"lineNumber":493,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":494,"author":{"gitId":"YoYoCiti"},"content":"#### Finding a facility : `findf`","lastModifiedDate":"2021-10-25"},{"lineNumber":495,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":496,"author":{"gitId":"YoYoCiti"},"content":"If you want to see specific facilities you are looking for, `findf` lets you find and filter facilities whose location contains","lastModifiedDate":"2021-10-25"},{"lineNumber":497,"author":{"gitId":"YoYoCiti"},"content":"any of the given keywords.","lastModifiedDate":"2021-10-25"},{"lineNumber":498,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":499,"author":{"gitId":"YoYoCiti"},"content":"Format: `findf KEYWORD [MORE_KEYWORDS]`","lastModifiedDate":"2021-10-25"},{"lineNumber":500,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":501,"author":{"gitId":"felix-ong"},"content":"* `KEYWORD` is case-insensitive. e.g. `Utown` will match `utown`","lastModifiedDate":"2021-10-26"},{"lineNumber":502,"author":{"gitId":"YoYoCiti"},"content":"* Only the location is searched","lastModifiedDate":"2021-10-25"},{"lineNumber":503,"author":{"gitId":"felix-ong"},"content":"* Only full words will be matched e.g. `Utown` will not match `town`","lastModifiedDate":"2021-10-26"},{"lineNumber":504,"author":{"gitId":"YoYoCiti"},"content":"* Facilities matching at least one keyword will be returned (i.e. OR search) e.g `Utown Redhill` will","lastModifiedDate":"2021-10-25"},{"lineNumber":505,"author":{"gitId":"YoYoCiti"},"content":"  return `Utown Field` and `Redhill Sports Complex`","lastModifiedDate":"2021-10-25"},{"lineNumber":506,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":507,"author":{"gitId":"YoYoCiti"},"content":"Examples:","lastModifiedDate":"2021-10-25"},{"lineNumber":508,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":509,"author":{"gitId":"YoYoCiti"},"content":"* `findf redhill` returns `Redhill Sports Complex` and `Redhill Field`","lastModifiedDate":"2021-10-25"},{"lineNumber":510,"author":{"gitId":"YoYoCiti"},"content":"* `findf utown redhill` returns `Utown Field`, `Redhill Sports Complex` and `Redhill Field`","lastModifiedDate":"2021-10-25"},{"lineNumber":511,"author":{"gitId":"YoYoCiti"},"content":"* `findf opp tampines` returns `Opp University Hall` and `Tampines Hub Badminton Hall` :camera:","lastModifiedDate":"2021-10-26"},{"lineNumber":512,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":513,"author":{"gitId":"YoYoCiti"},"content":"\u003cp align\u003d\"center\"\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":514,"author":{"gitId":"YoYoCiti"},"content":"   \u003cimg src\u003d\"images/findfExample.png\" height\u003d\"400\" align\u003d\"center\"/\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":515,"author":{"gitId":"YoYoCiti"},"content":"\u003c/p\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":516,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":517,"author":{"gitId":"YoYoCiti"},"content":"[Back to Table of Contents](#table-of-contents)","lastModifiedDate":"2021-10-25"},{"lineNumber":518,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":519,"author":{"gitId":"YoYoCiti"},"content":"#### Splitting members into facilities : `split`","lastModifiedDate":"2021-10-25"},{"lineNumber":520,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":521,"author":{"gitId":"YoYoCiti"},"content":"Organise your next training session seamlessly by splitting members into the facilities based on its capacity and","lastModifiedDate":"2021-10-25"},{"lineNumber":522,"author":{"gitId":"YoYoCiti"},"content":"members\u0027 availability using `split`.","lastModifiedDate":"2021-10-25"},{"lineNumber":523,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":524,"author":{"gitId":"YoYoCiti"},"content":"Format: `split DAY`","lastModifiedDate":"2021-10-25"},{"lineNumber":525,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":526,"author":{"gitId":"YoYoCiti"},"content":"* Allocate members available at the specified `DAY` to each facility","lastModifiedDate":"2021-10-25"},{"lineNumber":527,"author":{"gitId":"YoYoCiti"},"content":"* `DAY` **must be a positive integer from 1 to 7**, whereby 1 represents Monday and 7 represents Sunday.","lastModifiedDate":"2021-10-25"},{"lineNumber":528,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":529,"author":{"gitId":"YoYoCiti"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2021-10-26"},{"lineNumber":530,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":531,"author":{"gitId":"YoYoCiti"},"content":"**:information_source: Note:** SportsPA will warn you when there are no members available on the specified day or insufficient facilities","lastModifiedDate":"2021-10-26"},{"lineNumber":532,"author":{"gitId":"YoYoCiti"},"content":"to accommodate all available members and the allocation will not be executed.","lastModifiedDate":"2021-10-26"},{"lineNumber":533,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-10-26"},{"lineNumber":534,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":535,"author":{"gitId":"YoYoCiti"},"content":"Examples:","lastModifiedDate":"2021-10-25"},{"lineNumber":536,"author":{"gitId":"YoYoCiti"},"content":"* `split 1` splits members into groups for training on Monday of that week and displays the list of allocations to the","lastModifiedDate":"2021-10-25"},{"lineNumber":537,"author":{"gitId":"YoYoCiti"},"content":"  user :camera:","lastModifiedDate":"2021-10-26"},{"lineNumber":538,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":539,"author":{"gitId":"YoYoCiti"},"content":"\u003cp align\u003d\"center\"\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":540,"author":{"gitId":"YoYoCiti"},"content":"   \u003cimg src\u003d\"images/splitExample.png\" height\u003d\"400\" align\u003d\"center\"/\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":541,"author":{"gitId":"YoYoCiti"},"content":"\u003c/p\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":542,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":543,"author":{"gitId":"YoYoCiti"},"content":"[Back to Table of Contents](#table-of-contents)","lastModifiedDate":"2021-10-25"},{"lineNumber":544,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":545,"author":{"gitId":"YoYoCiti"},"content":"#### Deallocating a member from a facility : `deallocate`","lastModifiedDate":"2021-10-26"},{"lineNumber":546,"author":{"gitId":"felix-ong"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":547,"author":{"gitId":"YoYoCiti"},"content":"You can easily accommodate changes in member\u0027s availability by deallocating a member from a facility they were \u003cbr\u003e","lastModifiedDate":"2021-10-26"},{"lineNumber":548,"author":{"gitId":"YoYoCiti"},"content":"previously allocated to on a specified day, using `deallocate`.","lastModifiedDate":"2021-10-26"},{"lineNumber":549,"author":{"gitId":"felix-ong"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":550,"author":{"gitId":"YoYoCiti"},"content":"Format: `deallocate MEMBER_INDEX FACILITY_INDEX DAY`","lastModifiedDate":"2021-10-26"},{"lineNumber":551,"author":{"gitId":"felix-ong"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":552,"author":{"gitId":"felix-ong"},"content":"* `MEMBER_INDEX` refers to the index shown in the displayed member list.","lastModifiedDate":"2021-10-26"},{"lineNumber":553,"author":{"gitId":"felix-ong"},"content":"* `FACILITY_INDEX` refers to the index shown in the displayed facility list.","lastModifiedDate":"2021-10-26"},{"lineNumber":554,"author":{"gitId":"felix-ong"},"content":"* Both `MEMBER_INDEX` and `FACILITY_INDEX` **must be positive integers** 1, 2, 3…","lastModifiedDate":"2021-10-26"},{"lineNumber":555,"author":{"gitId":"felix-ong"},"content":"* `DAY` **must be a positive integer from 1 to 7**, whereby 1 represents Monday and 7 represents Sunday.","lastModifiedDate":"2021-10-26"},{"lineNumber":556,"author":{"gitId":"felix-ong"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":557,"author":{"gitId":"felix-ong"},"content":"Examples:","lastModifiedDate":"2021-10-26"},{"lineNumber":558,"author":{"gitId":"YoYoCiti"},"content":"* `deallocate 2 4 5` removes the member at index 2 in the displayed member list from the allocation list \u003cbr\u003e of the facility","lastModifiedDate":"2021-10-26"},{"lineNumber":559,"author":{"gitId":"YoYoCiti"},"content":"  at index 4 in the displayed facility list on Friday.","lastModifiedDate":"2021-10-26"},{"lineNumber":560,"author":{"gitId":"felix-ong"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":561,"author":{"gitId":"felix-ong"},"content":"[Back to Table of Contents](#table-of-contents)","lastModifiedDate":"2021-10-26"},{"lineNumber":562,"author":{"gitId":"felix-ong"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":563,"author":{"gitId":"YoYoCiti"},"content":"#### Allocating a member to a facility : `allocate`","lastModifiedDate":"2021-10-26"},{"lineNumber":564,"author":{"gitId":"felix-ong"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":565,"author":{"gitId":"YoYoCiti"},"content":"If the allocations of the `split` command are undesirable, you can manually allocate a member to a facility","lastModifiedDate":"2021-10-26"},{"lineNumber":566,"author":{"gitId":"YoYoCiti"},"content":"using `allocate`.","lastModifiedDate":"2021-10-26"},{"lineNumber":567,"author":{"gitId":"felix-ong"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":568,"author":{"gitId":"YoYoCiti"},"content":"Format: `allocate MEMBER_INDEX FACILITY_INDEX DAY`","lastModifiedDate":"2021-10-26"},{"lineNumber":569,"author":{"gitId":"felix-ong"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":570,"author":{"gitId":"YoYoCiti"},"content":"* `MEMBER_INDEX` refers to the index shown in the displayed member list","lastModifiedDate":"2021-10-26"},{"lineNumber":571,"author":{"gitId":"YoYoCiti"},"content":"* `FACILITY_INDEX` refers to the index shown in the displayed facility list","lastModifiedDate":"2021-10-26"},{"lineNumber":572,"author":{"gitId":"felix-ong"},"content":"* Both `MEMBER_INDEX` and `FACILITY_INDEX` **must be positive integers** 1, 2, 3…","lastModifiedDate":"2021-10-26"},{"lineNumber":573,"author":{"gitId":"YoYoCiti"},"content":"* `DAY` **must be a positive integer from 1 to 7**, whereby 1 represents Monday and 7 represents Sunday","lastModifiedDate":"2021-10-26"},{"lineNumber":574,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":575,"author":{"gitId":"YoYoCiti"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2021-10-26"},{"lineNumber":576,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":577,"author":{"gitId":"YoYoCiti"},"content":"**:information_source: Note:** Members you choose to allocate must be available on the specified day and their addition must not result in","lastModifiedDate":"2021-10-26"},{"lineNumber":578,"author":{"gitId":"YoYoCiti"},"content":"the selected facility\u0027s capacity to exceed.","lastModifiedDate":"2021-10-26"},{"lineNumber":579,"author":{"gitId":"YoYoCiti"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-10-26"},{"lineNumber":580,"author":{"gitId":"felix-ong"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":581,"author":{"gitId":"felix-ong"},"content":"Examples:","lastModifiedDate":"2021-10-26"},{"lineNumber":582,"author":{"gitId":"YoYoCiti"},"content":"* `allocate 1 2 1` adds the member at index 1 in the displayed member list to the allocation list \u003cbr\u003e of the facility","lastModifiedDate":"2021-10-26"},{"lineNumber":583,"author":{"gitId":"YoYoCiti"},"content":"  at index 2 in the displayed facility list on Monday :camera:","lastModifiedDate":"2021-10-26"},{"lineNumber":584,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":585,"author":{"gitId":"YoYoCiti"},"content":"\u003cp align\u003d\"center\"\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":586,"author":{"gitId":"YoYoCiti"},"content":"   \u003cimg src\u003d\"images/allocateExample.png\" height\u003d\"400\" align\u003d\"center\"/\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":587,"author":{"gitId":"YoYoCiti"},"content":"\u003c/p\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":588,"author":{"gitId":"felix-ong"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":589,"author":{"gitId":"felix-ong"},"content":"[Back to Table of Contents](#table-of-contents)","lastModifiedDate":"2021-10-26"},{"lineNumber":590,"author":{"gitId":"felix-ong"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":591,"author":{"gitId":"Moley456"},"content":"#### Exporting facility details and member allocation: `export`","lastModifiedDate":"2021-10-28"},{"lineNumber":592,"author":{"gitId":"Moley456"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":593,"author":{"gitId":"Moley456"},"content":"Exports facility details, and it\u0027s member allocation to a CSV file that you can share with","lastModifiedDate":"2021-10-28"},{"lineNumber":594,"author":{"gitId":"Moley456"},"content":"your CCA members.","lastModifiedDate":"2021-10-28"},{"lineNumber":595,"author":{"gitId":"Moley456"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":596,"author":{"gitId":"Moley456"},"content":"Format: `export`","lastModifiedDate":"2021-10-28"},{"lineNumber":597,"author":{"gitId":"Moley456"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":598,"author":{"gitId":"Moley456"},"content":"* The exported CSV file will be created in `[JAR file location]/data/exportedData.csv`","lastModifiedDate":"2021-10-28"},{"lineNumber":599,"author":{"gitId":"Moley456"},"content":"* The CSV file will contain 5 headers: Facility Name, Location, Time, Capacity and Member Allocation","lastModifiedDate":"2021-10-28"},{"lineNumber":600,"author":{"gitId":"Moley456"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":601,"author":{"gitId":"Moley456"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2021-10-28"},{"lineNumber":602,"author":{"gitId":"Moley456"},"content":"**:information_source: Note:** If exportedData.csv already exists and the export command is ran,","lastModifiedDate":"2021-10-28"},{"lineNumber":603,"author":{"gitId":"Moley456"},"content":"the existing CSV file will be overwritten. So, make sure to change the file name of the existing","lastModifiedDate":"2021-10-28"},{"lineNumber":604,"author":{"gitId":"Moley456"},"content":"CSV file before running the export command if you want to save it.","lastModifiedDate":"2021-10-28"},{"lineNumber":605,"author":{"gitId":"Moley456"},"content":"\u003c/div\u003e \u003cbr\u003e","lastModifiedDate":"2021-10-28"},{"lineNumber":606,"author":{"gitId":"Moley456"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":607,"author":{"gitId":"YoYoCiti"},"content":"#### Clearing all entries in facility list: `clearf`","lastModifiedDate":"2021-10-25"},{"lineNumber":608,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":609,"author":{"gitId":"YoYoCiti"},"content":"Clears all facilities from your facility list.","lastModifiedDate":"2021-10-25"},{"lineNumber":610,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":611,"author":{"gitId":"YoYoCiti"},"content":"Format: `clearf`","lastModifiedDate":"2021-10-25"},{"lineNumber":612,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":613,"author":{"gitId":"YoYoCiti"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e:exclamation: **Caution:**","lastModifiedDate":"2021-10-25"},{"lineNumber":614,"author":{"gitId":"felix-ong"},"content":"All facility data will be removed immediately after this command is executed. This action is **irreversible**.","lastModifiedDate":"2021-10-26"},{"lineNumber":615,"author":{"gitId":"YoYoCiti"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-11-01"},{"lineNumber":616,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":617,"author":{"gitId":"YoYoCiti"},"content":"[Back to Table of Contents](#table-of-contents)","lastModifiedDate":"2021-10-25"},{"lineNumber":618,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":619,"author":{"gitId":"YoYoCiti"},"content":"### General Features","lastModifiedDate":"2021-10-25"},{"lineNumber":620,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":621,"author":{"gitId":"YoYoCiti"},"content":"#### Getting help: `help`","lastModifiedDate":"2021-10-25"},{"lineNumber":622,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":623,"author":{"gitId":"felix-ong"},"content":"Shows a message explaining how you can access our help page.","lastModifiedDate":"2021-10-26"},{"lineNumber":624,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":625,"author":{"gitId":"YoYoCiti"},"content":"Format: `help`","lastModifiedDate":"2021-10-25"},{"lineNumber":626,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":627,"author":{"gitId":"YoYoCiti"},"content":"[Back to Table of Contents](#table-of-contents)","lastModifiedDate":"2021-10-25"},{"lineNumber":628,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":629,"author":{"gitId":"YoYoCiti"},"content":"#### Creating an alias: `alias`","lastModifiedDate":"2021-10-25"},{"lineNumber":630,"author":{"gitId":"tsinyee"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":631,"author":{"gitId":"YoYoCiti"},"content":"Some of our commands\u0027 names may be not be to your liking. Hence, SportsPA offers you the flexibility of personalising","lastModifiedDate":"2021-10-22"},{"lineNumber":632,"author":{"gitId":"felix-ong"},"content":"the commands you use. With `alias`, you can create a shortcut name for any command.","lastModifiedDate":"2021-10-26"},{"lineNumber":633,"author":{"gitId":"tsinyee"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":634,"author":{"gitId":"YoYoCiti"},"content":"Format: `alias s/SHORTCUT cw/COMMAND_WORD`","lastModifiedDate":"2021-10-18"},{"lineNumber":635,"author":{"gitId":"tsinyee"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":636,"author":{"gitId":"YoYoCiti"},"content":"* Creates an alias that allows the specified `COMMAND_WORD` to be executed with the specified `SHORTCUT`","lastModifiedDate":"2021-10-22"},{"lineNumber":637,"author":{"gitId":"YoYoCiti"},"content":"* `SHORTCUT` **must be one word and not an existing command**","lastModifiedDate":"2021-10-27"},{"lineNumber":638,"author":{"gitId":"YoYoCiti"},"content":"* `COMMAND_WORD` **must be an existing command**","lastModifiedDate":"2021-10-18"},{"lineNumber":639,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":640,"author":{"gitId":"YoYoCiti"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2021-10-18"},{"lineNumber":641,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":642,"author":{"gitId":"YoYoCiti"},"content":"**:information_source: Note:** If you create an alias whose given `SHORTCUT` already exists, the newly created alias","lastModifiedDate":"2021-10-22"},{"lineNumber":643,"author":{"gitId":"YoYoCiti"},"content":"will replace that existing one.","lastModifiedDate":"2021-10-22"},{"lineNumber":644,"author":{"gitId":"YoYoCiti"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-10-18"},{"lineNumber":645,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":646,"author":{"gitId":"YoYoCiti"},"content":"Examples:","lastModifiedDate":"2021-10-18"},{"lineNumber":647,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":648,"author":{"gitId":"YoYoCiti"},"content":"* `alias s/lf cw/listf` creates an alias for `listf` command. Entering `lf` will execute the `listf` command and a list","lastModifiedDate":"2021-10-22"},{"lineNumber":649,"author":{"gitId":"YoYoCiti"},"content":"  of all facilities will be shown :camera:","lastModifiedDate":"2021-10-26"},{"lineNumber":650,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":651,"author":{"gitId":"YoYoCiti"},"content":"![aliasExample](images/aliasExample.png)","lastModifiedDate":"2021-10-26"},{"lineNumber":652,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":653,"author":{"gitId":"YoYoCiti"},"content":"[Back to Table of Contents](#table-of-contents)","lastModifiedDate":"2021-10-22"},{"lineNumber":654,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":655,"author":{"gitId":"YoYoCiti"},"content":"#### Listing all aliases: `aliases`","lastModifiedDate":"2021-10-25"},{"lineNumber":656,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":657,"author":{"gitId":"felix-ong"},"content":"Shows a list of your created aliases in the Result Window.","lastModifiedDate":"2021-10-26"},{"lineNumber":658,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":659,"author":{"gitId":"YoYoCiti"},"content":"Format: `aliases`","lastModifiedDate":"2021-10-18"},{"lineNumber":660,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":661,"author":{"gitId":"YoYoCiti"},"content":"[Back to Table of Contents](#table-of-contents)","lastModifiedDate":"2021-10-22"},{"lineNumber":662,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":663,"author":{"gitId":"YoYoCiti"},"content":"#### Deleting an alias: `unalias`","lastModifiedDate":"2021-10-25"},{"lineNumber":664,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":665,"author":{"gitId":"YoYoCiti"},"content":"Deletes an alias you have created.","lastModifiedDate":"2021-10-22"},{"lineNumber":666,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":667,"author":{"gitId":"YoYoCiti"},"content":"Format: `unalias SHORTCUT`","lastModifiedDate":"2021-10-18"},{"lineNumber":668,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":669,"author":{"gitId":"YoYoCiti"},"content":"* Deletes the alias associated with the specified `SHORTCUT`","lastModifiedDate":"2021-10-18"},{"lineNumber":670,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":671,"author":{"gitId":"YoYoCiti"},"content":"Examples:","lastModifiedDate":"2021-10-18"},{"lineNumber":672,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":673,"author":{"gitId":"YoYoCiti"},"content":"* `unalias lf` deletes the alias with shortcut name `lf`","lastModifiedDate":"2021-10-22"},{"lineNumber":674,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":675,"author":{"gitId":"YoYoCiti"},"content":"[Back to Table of Contents](#table-of-contents)","lastModifiedDate":"2021-10-22"},{"lineNumber":676,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":677,"author":{"gitId":"YoYoCiti"},"content":"#### Saving the data","lastModifiedDate":"2021-10-25"},{"lineNumber":678,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":679,"author":{"gitId":"YoYoCiti"},"content":"Your SportsPA data is saved in the hard disk automatically after any command that changes the data. They are saved as a","lastModifiedDate":"2021-10-22"},{"lineNumber":680,"author":{"gitId":"YoYoCiti"},"content":"JSON file `[JAR file location]/data/sportspa.json`. Though **not recommended**, if you are familiar with JSON, you can","lastModifiedDate":"2021-10-22"},{"lineNumber":681,"author":{"gitId":"YoYoCiti"},"content":"directly change the contents, *e.g a member\u0027s name*, in the data file, which will be reflected in SportsPA.","lastModifiedDate":"2021-10-22"},{"lineNumber":682,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":683,"author":{"gitId":"YoYoCiti"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e:exclamation: **Caution:**","lastModifiedDate":"2021-09-28"},{"lineNumber":684,"author":{"gitId":"YoYoCiti"},"content":"If changes made to the data file makes its format invalid, SportsPA will discard all data and start with an empty data file at the next run.","lastModifiedDate":"2021-09-28"},{"lineNumber":685,"author":{"gitId":"YoYoCiti"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-11-01"},{"lineNumber":686,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":687,"author":{"gitId":"YoYoCiti"},"content":"[Back to Table of Contents](#table-of-contents)","lastModifiedDate":"2021-10-25"},{"lineNumber":688,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":689,"author":{"gitId":"YoYoCiti"},"content":"#### Exiting the program : `exit`","lastModifiedDate":"2021-10-25"},{"lineNumber":690,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":691,"author":{"gitId":"YoYoCiti"},"content":"Exits the program.","lastModifiedDate":"2021-10-25"},{"lineNumber":692,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":693,"author":{"gitId":"YoYoCiti"},"content":"Format: `exit`","lastModifiedDate":"2021-10-25"},{"lineNumber":694,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":695,"author":{"gitId":"YoYoCiti"},"content":"[Back to Table of Contents](#table-of-contents)","lastModifiedDate":"2021-10-22"},{"lineNumber":696,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":697,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":698,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":699,"author":{"gitId":"-"},"content":"## FAQ","lastModifiedDate":"2020-05-23"},{"lineNumber":700,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":701,"author":{"gitId":"felix-ong"},"content":"**Q**: How do I check if Java 11 is installed on my Computer?\u003cbr\u003e","lastModifiedDate":"2021-10-26"},{"lineNumber":702,"author":{"gitId":"felix-ong"},"content":"**A**: Open your Operating System\u0027s command prompt and enter `java -version`. Java 11 is installed if the output shows Java","lastModifiedDate":"2021-10-26"},{"lineNumber":703,"author":{"gitId":"YoYoCiti"},"content":"11.\u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2021-10-22"},{"lineNumber":704,"author":{"gitId":"felix-ong"},"content":"**Q**: How do I install Java 11 on my Computer?\u003cbr\u003e","lastModifiedDate":"2021-10-26"},{"lineNumber":705,"author":{"gitId":"felix-ong"},"content":"**A**: Visit [this site](https://docs.oracle.com/en/java/javase/11/install/overview-jdk-installation.html#GUID-8677A77F-231A-40F7-98B9-1FD0B48C346A)","lastModifiedDate":"2021-10-26"},{"lineNumber":706,"author":{"gitId":"felix-ong"},"content":"and follow the instructions specific to your operating system. You may have to download and run an installer to install Java 11 on your computer.\u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2021-10-26"},{"lineNumber":707,"author":{"gitId":"felix-ong"},"content":"**Q**: How do I transfer my data in SportsPA to another Computer?\u003cbr\u003e","lastModifiedDate":"2021-10-26"},{"lineNumber":708,"author":{"gitId":"YoYoCiti"},"content":"**A**:","lastModifiedDate":"2021-10-26"},{"lineNumber":709,"author":{"gitId":"YoYoCiti"},"content":"1. On your current computer, navigate to `[JAR file location]/data/sportspa.json`. Make a copy of the `sportspa.json` file and transfer it to your other computer.","lastModifiedDate":"2021-10-26"},{"lineNumber":710,"author":{"gitId":"YoYoCiti"},"content":"2. On the other computer, navigate to","lastModifiedDate":"2021-10-26"},{"lineNumber":711,"author":{"gitId":"felix-ong"},"content":"`[JAR file location]/data/sportspa.json` and replace the empty data file it creates with the data file you have just copied.","lastModifiedDate":"2021-10-26"},{"lineNumber":712,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":713,"author":{"gitId":"YoYoCiti"},"content":"[Back to Table of Contents](#table-of-contents)","lastModifiedDate":"2021-10-22"},{"lineNumber":714,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":715,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":716,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":717,"author":{"gitId":"-"},"content":"## Command summary","lastModifiedDate":"2020-05-23"},{"lineNumber":718,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":719,"author":{"gitId":"YoYoCiti"},"content":"### Member-Specific Commands","lastModifiedDate":"2021-10-25"},{"lineNumber":720,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":721,"author":{"gitId":"-"},"content":"Action | Format, Examples","lastModifiedDate":"2020-05-23"},{"lineNumber":722,"author":{"gitId":"-"},"content":"--------|------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":723,"author":{"gitId":"tsinyee"},"content":"**Add member**| `addm n/NAME p/PHONE_NUMBER [d/DAY(S)] [t/TAG]...` \u003cbr\u003e e.g. `addm n/John Doe p/91111111`, `addm n/John Doe p/91111111 d/1 3 5`, `addm n/John Doe p/91111111 d/1 3 5 t/exco`","lastModifiedDate":"2021-10-28"},{"lineNumber":724,"author":{"gitId":"YoYoCiti"},"content":"**List members**| `listm`","lastModifiedDate":"2021-10-25"},{"lineNumber":725,"author":{"gitId":"felix-ong"},"content":"**Delete member**| `deletem INDEX` \u003cbr\u003e e.g. `deletem 1`","lastModifiedDate":"2021-10-26"},{"lineNumber":726,"author":{"gitId":"felix-ong"},"content":"**Edit member**| `editm INDEX [n/NAME] [p/PHONE_NUMBER] [d/DAYS]` \u003cbr\u003e e.g. `editm 1 n/Jonathan p/93837283`","lastModifiedDate":"2021-10-26"},{"lineNumber":727,"author":{"gitId":"tsinyee"},"content":"**Find member**| `findm [n/NAME] [p/PHONE] [d/DAY(S)] [tda/TODAY_ATTENDANCE] [tta/TOTAL_ATTENDANCE] [t/TAG]...` \u003cbr\u003e e.g. `findm n/John`, `findm t/exco t/y2`","lastModifiedDate":"2021-10-28"},{"lineNumber":728,"author":{"gitId":"felix-ong"},"content":"**Sort members**| `sortm by/SORT_ORDER` \u003cbr\u003e e.g. `sortm by/name`, `sortm by/tag`","lastModifiedDate":"2021-10-26"},{"lineNumber":729,"author":{"gitId":"felix-ong"},"content":"**Mark member attendance**| `mark INDEX/INDICES` \u003cbr\u003e e.g. `mark 1 2`","lastModifiedDate":"2021-10-26"},{"lineNumber":730,"author":{"gitId":"felix-ong"},"content":"**Set member availability**| `setm INDEX/INDICES d/DAY(S)...` \u003cbr\u003e e.g.`setm 1 2 3 d/Tue Wed`","lastModifiedDate":"2021-10-26"},{"lineNumber":731,"author":{"gitId":"felix-ong"},"content":"**Unmark member attendance**| `unmark INDEX/INDICES` \u003cbr\u003e e.g. `unmark 1 2`","lastModifiedDate":"2021-10-26"},{"lineNumber":732,"author":{"gitId":"felix-ong"},"content":"**Set member availability**| `setm INDEX/INDICES d/DAY(S)...` \u003cbr\u003e e.g.`setm 1 2 3 d/2 3 5`","lastModifiedDate":"2021-10-26"},{"lineNumber":733,"author":{"gitId":"felix-ong"},"content":"**Import multiple members**| `import CSV_FILE_PATH` \u003cbr\u003e e.g.`import myFile.csv`","lastModifiedDate":"2021-10-26"},{"lineNumber":734,"author":{"gitId":"YoYoCiti"},"content":"**Clear member**| `clearm`","lastModifiedDate":"2021-10-25"},{"lineNumber":735,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":736,"author":{"gitId":"YoYoCiti"},"content":"[Back to Table of Contents](#table-of-contents)","lastModifiedDate":"2021-10-25"},{"lineNumber":737,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":738,"author":{"gitId":"YoYoCiti"},"content":"### Facility-Specific Commands","lastModifiedDate":"2021-10-25"},{"lineNumber":739,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":740,"author":{"gitId":"-"},"content":"Action | Format, Examples","lastModifiedDate":"2021-10-25"},{"lineNumber":741,"author":{"gitId":"-"},"content":"--------|------------------","lastModifiedDate":"2021-10-25"},{"lineNumber":742,"author":{"gitId":"felix-ong"},"content":"**Add facility**| `addf n/NAME l/LOCATION t/TIME c/CAPACITY` \u003cbr\u003e e.g. `addf n/Court 1 l/University Sports Hall t/1500 c/5`","lastModifiedDate":"2021-10-26"},{"lineNumber":743,"author":{"gitId":"YoYoCiti"},"content":"**List facilities**| `listf`","lastModifiedDate":"2021-10-25"},{"lineNumber":744,"author":{"gitId":"felix-ong"},"content":"**Delete facility**| `deletef INDEX` \u003cbr\u003e e.g. `deletef 4`","lastModifiedDate":"2021-10-26"},{"lineNumber":745,"author":{"gitId":"felix-ong"},"content":"**Edit facility**| `editf INDEX [n/NAME] [l/LOCATION] [t/TIME] [c/CAPACITY]` \u003cbr\u003e e.g. `editf 2 n/Court 20 l/University Sports Hall`","lastModifiedDate":"2021-10-26"},{"lineNumber":746,"author":{"gitId":"felix-ong"},"content":"**Find facility**| `findf KEYWORD` \u003cbr\u003e e.g. `findf Clementi`, `findf Utown`","lastModifiedDate":"2021-10-26"},{"lineNumber":747,"author":{"gitId":"felix-ong"},"content":"**Split members into facilities**| `split DAY` \u003cbr\u003e e.g. `split Mon`","lastModifiedDate":"2021-10-26"},{"lineNumber":748,"author":{"gitId":"felix-ong"},"content":"**Deallocate member from a facility**|`deallocate MEMBER_INDEX FACILITY_INDEX DAY` \u003cbr\u003e e.g. `deallocate 2 3 4`","lastModifiedDate":"2021-10-26"},{"lineNumber":749,"author":{"gitId":"YoYoCiti"},"content":"**Allocate member to a facility**|`allocate MEMBER_INDEX FACILITY_INDEX DAY` \u003cbr\u003e e.g. `allocate 1 2 5`","lastModifiedDate":"2021-10-26"},{"lineNumber":750,"author":{"gitId":"Moley456"},"content":"**Export facility details and\u003cbr\u003emember allocation**| `export`","lastModifiedDate":"2021-10-28"},{"lineNumber":751,"author":{"gitId":"YoYoCiti"},"content":"**Clear facilities**|`clearf`","lastModifiedDate":"2021-10-25"},{"lineNumber":752,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":753,"author":{"gitId":"YoYoCiti"},"content":"[Back to Table of Contents](#table-of-contents)","lastModifiedDate":"2021-10-25"},{"lineNumber":754,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":755,"author":{"gitId":"YoYoCiti"},"content":"### General Commands","lastModifiedDate":"2021-10-25"},{"lineNumber":756,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":757,"author":{"gitId":"YoYoCiti"},"content":"Action | Format, Examples","lastModifiedDate":"2021-10-25"},{"lineNumber":758,"author":{"gitId":"YoYoCiti"},"content":"--------|------------------","lastModifiedDate":"2021-10-25"},{"lineNumber":759,"author":{"gitId":"YoYoCiti"},"content":"**Help**| `help`","lastModifiedDate":"2021-10-25"},{"lineNumber":760,"author":{"gitId":"felix-ong"},"content":"**Creates alias**| `alias s/SHORTCUT cw/COMMAND_WORD` \u003cbr\u003e e.g. `alias s/lf cw/listf`","lastModifiedDate":"2021-10-26"},{"lineNumber":761,"author":{"gitId":"YoYoCiti"},"content":"**List aliases**| `aliases`","lastModifiedDate":"2021-10-18"},{"lineNumber":762,"author":{"gitId":"felix-ong"},"content":"**Deletes alias**| `unalias SHORTCUT` \u003cbr\u003e e.g. `unalias lf`","lastModifiedDate":"2021-10-26"},{"lineNumber":763,"author":{"gitId":"YoYoCiti"},"content":"**Exit**| `exit`","lastModifiedDate":"2021-10-25"},{"lineNumber":764,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":765,"author":{"gitId":"YoYoCiti"},"content":"[Back to Table of Contents](#table-of-contents)","lastModifiedDate":"2021-10-22"}],"authorContributionMap":{"YoYoCiti":437,"Moley456":35,"Shruthi0310":24,"-":126,"felix-ong":110,"tsinyee":33}},{"path":"docs/_sass/minima/_base.scss","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"html {","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  font-size: $base-font-size;","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Reset some basic elements","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"body, h1, h2, h3, h4, h5, h6,","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"p, blockquote, pre, hr,","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"dl, dd, ol, ul, figure {","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"  margin: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"  padding: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * Basic styling","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"body {","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"  font: $base-font-weight #{$base-font-size}/#{$base-line-height} $base-font-family;","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"  color: $text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"  background-color: $background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"  -webkit-text-size-adjust: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"  -webkit-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     -moz-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"       -o-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"          font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"  font-kerning: normal;","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"  display: flex;","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"  min-height: 100vh;","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"  flex-direction: column;","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"  overflow-wrap: break-word;","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":" * Set `margin-bottom` to maintain vertical rhythm","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"h1, h2, h3, h4, h5, h6,","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"p, blockquote, pre,","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"ul, ol, dl, figure,","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"%vertical-rhythm {","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"hr {","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"  margin-top: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":" * `main` element","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"main {","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"  display: block; /* Default value of `display` of `main` element is \u0027inline\u0027 in IE 11. */","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":" * Images","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"img {","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"  max-width: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"  vertical-align: middle;","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":" * Figures","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"figure \u003e img {","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"  display: block;","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"figcaption {","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"  font-size: $small-font-size;","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":" * Lists","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"ul, ol {","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"  margin-left: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"li {","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"  \u003e ul,","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"  \u003e ol {","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    margin-bottom: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":" * Headings","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"h1, h2, h3, h4, h5, h6 {","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"  font-weight: $base-font-weight;","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":" * Links","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"a {","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"  color: $link-base-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"  text-decoration: none;","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"  \u0026:visited {","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    color: $link-visited-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"  \u0026:hover {","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    color: $text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    text-decoration: underline;","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"  .social-media-list \u0026:hover {","lastModifiedDate":"2020-05-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    text-decoration: none;","lastModifiedDate":"2020-05-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    .username {","lastModifiedDate":"2020-05-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"      text-decoration: underline;","lastModifiedDate":"2020-05-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":" * Blockquotes","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"blockquote {","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"  color: $brand-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":142,"author":{"gitId":"-"},"content":"  border-left: 4px solid $brand-color-light;","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"  padding-left: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"-"},"content":"  @include relative-font-size(1.125);","lastModifiedDate":"2020-05-23"},{"lineNumber":145,"author":{"gitId":"-"},"content":"  font-style: italic;","lastModifiedDate":"2020-05-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"  \u003e :last-child {","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    margin-bottom: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"  i, em {","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    font-style: normal;","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":" * Code formatting","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"pre,","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"code {","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"  font-family: $code-font-family;","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"  font-size: 0.9375em;","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"  border: 1px solid $brand-color-light;","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"  border-radius: 3px;","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"  background-color: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"code {","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"  padding: 1px 5px;","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":174,"author":{"gitId":"-"},"content":"pre {","lastModifiedDate":"2020-05-23"},{"lineNumber":175,"author":{"gitId":"-"},"content":"  padding: 8px 12px;","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"  overflow-x: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":178,"author":{"gitId":"-"},"content":"  \u003e code {","lastModifiedDate":"2020-05-23"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    border: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    padding-right: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    padding-left: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":".highlight {","lastModifiedDate":"2020-05-23"},{"lineNumber":186,"author":{"gitId":"-"},"content":"  border-radius: 3px;","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"  background: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":188,"author":{"gitId":"-"},"content":"  @extend %vertical-rhythm;","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"  .highlighter-rouge \u0026 {","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    background: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":" * Wrapper","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"-"},"content":".wrapper {","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"  max-width: calc(#{$content-width} - (#{$spacing-unit}));","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"  margin-right: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"  margin-left: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":204,"author":{"gitId":"-"},"content":"  padding-right: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":205,"author":{"gitId":"-"},"content":"  padding-left: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":206,"author":{"gitId":"-"},"content":"  @extend %clearfix;","lastModifiedDate":"2020-05-23"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":208,"author":{"gitId":"-"},"content":"  @media screen and (min-width: $on-large) {","lastModifiedDate":"2020-05-23"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    max-width: calc(#{$content-width} - (#{$spacing-unit} * 2));","lastModifiedDate":"2020-05-23"},{"lineNumber":210,"author":{"gitId":"-"},"content":"    padding-right: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    padding-left: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":212,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":213,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":217,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":" * Clearfix","lastModifiedDate":"2020-05-23"},{"lineNumber":219,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":220,"author":{"gitId":"-"},"content":"%clearfix:after {","lastModifiedDate":"2020-05-23"},{"lineNumber":221,"author":{"gitId":"-"},"content":"  content: \"\";","lastModifiedDate":"2020-05-23"},{"lineNumber":222,"author":{"gitId":"-"},"content":"  display: table;","lastModifiedDate":"2020-05-23"},{"lineNumber":223,"author":{"gitId":"-"},"content":"  clear: both;","lastModifiedDate":"2020-05-23"},{"lineNumber":224,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":229,"author":{"gitId":"-"},"content":" * Icons","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":".orange {","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"-"},"content":"  color: #f66a0a;","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":".grey {","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":"  color: #828282;","lastModifiedDate":"2020-05-23"},{"lineNumber":238,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":" * Tables","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"-"},"content":"table {","lastModifiedDate":"2020-05-23"},{"lineNumber":244,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":245,"author":{"gitId":"-"},"content":"  width: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":246,"author":{"gitId":"-"},"content":"  text-align: $table-text-align;","lastModifiedDate":"2020-05-23"},{"lineNumber":247,"author":{"gitId":"-"},"content":"  color: $table-text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":248,"author":{"gitId":"-"},"content":"  border-collapse: collapse;","lastModifiedDate":"2020-05-23"},{"lineNumber":249,"author":{"gitId":"-"},"content":"  border: 1px solid $table-border-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":250,"author":{"gitId":"-"},"content":"  tr {","lastModifiedDate":"2020-05-23"},{"lineNumber":251,"author":{"gitId":"-"},"content":"    \u0026:nth-child(even) {","lastModifiedDate":"2020-05-23"},{"lineNumber":252,"author":{"gitId":"-"},"content":"      background-color: $table-zebra-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":253,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":254,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":255,"author":{"gitId":"-"},"content":"  th, td {","lastModifiedDate":"2020-05-23"},{"lineNumber":256,"author":{"gitId":"-"},"content":"    padding: ($spacing-unit / 3) ($spacing-unit / 2);","lastModifiedDate":"2020-05-23"},{"lineNumber":257,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":258,"author":{"gitId":"-"},"content":"  th {","lastModifiedDate":"2020-05-23"},{"lineNumber":259,"author":{"gitId":"-"},"content":"    background-color: $table-header-bg-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":260,"author":{"gitId":"-"},"content":"    border: 1px solid $table-header-border;","lastModifiedDate":"2020-05-23"},{"lineNumber":261,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":262,"author":{"gitId":"-"},"content":"  td {","lastModifiedDate":"2020-05-23"},{"lineNumber":263,"author":{"gitId":"-"},"content":"    border: 1px solid $table-border-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":264,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":265,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":266,"author":{"gitId":"-"},"content":"  @include media-query($on-laptop) {","lastModifiedDate":"2020-05-23"},{"lineNumber":267,"author":{"gitId":"-"},"content":"    display: block;","lastModifiedDate":"2020-05-23"},{"lineNumber":268,"author":{"gitId":"-"},"content":"    overflow-x: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":269,"author":{"gitId":"-"},"content":"    -webkit-overflow-scrolling: touch;","lastModifiedDate":"2020-05-23"},{"lineNumber":270,"author":{"gitId":"-"},"content":"            -ms-overflow-style: -ms-autohiding-scrollbar;","lastModifiedDate":"2020-05-23"},{"lineNumber":271,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":272,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":273,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-01-11"},{"lineNumber":274,"author":{"gitId":"-"},"content":"@media print {","lastModifiedDate":"2021-01-12"},{"lineNumber":275,"author":{"gitId":"-"},"content":"  /**","lastModifiedDate":"2021-01-11"},{"lineNumber":276,"author":{"gitId":"-"},"content":"  * Prevents page break from cutting through content when printing","lastModifiedDate":"2021-01-12"},{"lineNumber":277,"author":{"gitId":"-"},"content":"  */","lastModifiedDate":"2021-01-11"},{"lineNumber":278,"author":{"gitId":"-"},"content":"  body {","lastModifiedDate":"2021-01-11"},{"lineNumber":279,"author":{"gitId":"-"},"content":"    display: block;","lastModifiedDate":"2021-01-11"},{"lineNumber":280,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-11"},{"lineNumber":281,"author":{"gitId":"-"},"content":"  /**","lastModifiedDate":"2021-01-12"},{"lineNumber":282,"author":{"gitId":"-"},"content":"  * Replaces the top navigation menu with the project name when printing","lastModifiedDate":"2021-01-12"},{"lineNumber":283,"author":{"gitId":"-"},"content":"  */","lastModifiedDate":"2021-01-12"},{"lineNumber":284,"author":{"gitId":"-"},"content":"  .site-header .wrapper {","lastModifiedDate":"2021-01-12"},{"lineNumber":285,"author":{"gitId":"-"},"content":"    display: none;","lastModifiedDate":"2021-01-12"},{"lineNumber":286,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-12"},{"lineNumber":287,"author":{"gitId":"-"},"content":"  .site-header {","lastModifiedDate":"2021-01-12"},{"lineNumber":288,"author":{"gitId":"-"},"content":"    text-align: center;","lastModifiedDate":"2021-01-12"},{"lineNumber":289,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-12"},{"lineNumber":290,"author":{"gitId":"-"},"content":"  .site-header:before {","lastModifiedDate":"2021-01-12"},{"lineNumber":291,"author":{"gitId":"Moley456"},"content":"    content: \"SportsPA\";","lastModifiedDate":"2021-09-28"},{"lineNumber":292,"author":{"gitId":"-"},"content":"    font-size: 32px;","lastModifiedDate":"2021-01-12"},{"lineNumber":293,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-11"},{"lineNumber":294,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-01-12"},{"lineNumber":295,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-01-12"}],"authorContributionMap":{"Moley456":1,"-":294}},{"path":"docs/diagrams/AliasActivityDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"YoYoCiti"},"content":"@startuml","lastModifiedDate":"2021-10-19"},{"lineNumber":2,"author":{"gitId":"YoYoCiti"},"content":"start","lastModifiedDate":"2021-10-19"},{"lineNumber":3,"author":{"gitId":"YoYoCiti"},"content":":User enters command;","lastModifiedDate":"2021-10-19"},{"lineNumber":4,"author":{"gitId":"YoYoCiti"},"content":":Parse command word;","lastModifiedDate":"2021-10-19"},{"lineNumber":5,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":6,"author":{"gitId":"YoYoCiti"},"content":"\u0027Since the beta syntax does not support placing the condition outside the","lastModifiedDate":"2021-10-19"},{"lineNumber":7,"author":{"gitId":"YoYoCiti"},"content":"\u0027diamond we place it as the true branch instead.","lastModifiedDate":"2021-10-19"},{"lineNumber":8,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":9,"author":{"gitId":"YoYoCiti"},"content":"if () then ([command word is an alias])","lastModifiedDate":"2021-10-19"},{"lineNumber":10,"author":{"gitId":"YoYoCiti"},"content":"    :Replace shortcut with","lastModifiedDate":"2021-10-19"},{"lineNumber":11,"author":{"gitId":"YoYoCiti"},"content":"    actual command word;","lastModifiedDate":"2021-10-19"},{"lineNumber":12,"author":{"gitId":"YoYoCiti"},"content":"else ([else])","lastModifiedDate":"2021-10-19"},{"lineNumber":13,"author":{"gitId":"YoYoCiti"},"content":"endif","lastModifiedDate":"2021-10-19"},{"lineNumber":14,"author":{"gitId":"YoYoCiti"},"content":":Execute command;","lastModifiedDate":"2021-10-19"},{"lineNumber":15,"author":{"gitId":"YoYoCiti"},"content":"stop","lastModifiedDate":"2021-10-19"},{"lineNumber":16,"author":{"gitId":"YoYoCiti"},"content":"@enduml","lastModifiedDate":"2021-10-19"}],"authorContributionMap":{"YoYoCiti":16}},{"path":"docs/diagrams/AliasSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"YoYoCiti"},"content":"@startuml","lastModifiedDate":"2021-10-19"},{"lineNumber":2,"author":{"gitId":"YoYoCiti"},"content":"!include style.puml","lastModifiedDate":"2021-10-19"},{"lineNumber":3,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":4,"author":{"gitId":"YoYoCiti"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2021-10-19"},{"lineNumber":5,"author":{"gitId":"YoYoCiti"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2021-10-19"},{"lineNumber":6,"author":{"gitId":"YoYoCiti"},"content":"participant \":AddressBookParser\" as AddressBookParser LOGIC_COLOR","lastModifiedDate":"2021-10-19"},{"lineNumber":7,"author":{"gitId":"YoYoCiti"},"content":"participant \":ListMembersCommand\" as ListMembersCommand LOGIC_COLOR","lastModifiedDate":"2021-10-19"},{"lineNumber":8,"author":{"gitId":"YoYoCiti"},"content":"end box","lastModifiedDate":"2021-10-19"},{"lineNumber":9,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":10,"author":{"gitId":"YoYoCiti"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2021-10-19"},{"lineNumber":11,"author":{"gitId":"YoYoCiti"},"content":"participant \":AliasMap\" as AliasMap MODEL_COLOR","lastModifiedDate":"2021-10-19"},{"lineNumber":12,"author":{"gitId":"YoYoCiti"},"content":"end box","lastModifiedDate":"2021-10-19"},{"lineNumber":13,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":14,"author":{"gitId":"YoYoCiti"},"content":"[-\u003e LogicManager : execute(l)","lastModifiedDate":"2021-10-19"},{"lineNumber":15,"author":{"gitId":"YoYoCiti"},"content":"activate LogicManager","lastModifiedDate":"2021-10-19"},{"lineNumber":16,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":17,"author":{"gitId":"YoYoCiti"},"content":"LogicManager -\u003e AddressBookParser : parseCommand(l)","lastModifiedDate":"2021-10-19"},{"lineNumber":18,"author":{"gitId":"YoYoCiti"},"content":"activate AddressBookParser","lastModifiedDate":"2021-10-19"},{"lineNumber":19,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":20,"author":{"gitId":"YoYoCiti"},"content":"AddressBookParser -\u003e AliasMap : convertAliasIfPresent()","lastModifiedDate":"2021-10-19"},{"lineNumber":21,"author":{"gitId":"YoYoCiti"},"content":"activate AliasMap","lastModifiedDate":"2021-10-19"},{"lineNumber":22,"author":{"gitId":"YoYoCiti"},"content":"AliasMap --\u003e AddressBookParser","lastModifiedDate":"2021-10-19"},{"lineNumber":23,"author":{"gitId":"YoYoCiti"},"content":"deactivate AliasMap","lastModifiedDate":"2021-10-19"},{"lineNumber":24,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":25,"author":{"gitId":"YoYoCiti"},"content":"create ListMembersCommand","lastModifiedDate":"2021-10-19"},{"lineNumber":26,"author":{"gitId":"YoYoCiti"},"content":"AddressBookParser -\u003e ListMembersCommand","lastModifiedDate":"2021-10-19"},{"lineNumber":27,"author":{"gitId":"YoYoCiti"},"content":"activate ListMembersCommand","lastModifiedDate":"2021-10-19"},{"lineNumber":28,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":29,"author":{"gitId":"YoYoCiti"},"content":"ListMembersCommand --\u003e AddressBookParser","lastModifiedDate":"2021-10-19"},{"lineNumber":30,"author":{"gitId":"YoYoCiti"},"content":"deactivate ListMembersCommand","lastModifiedDate":"2021-10-19"},{"lineNumber":31,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":32,"author":{"gitId":"YoYoCiti"},"content":"AddressBookParser --\u003e LogicManager","lastModifiedDate":"2021-10-19"},{"lineNumber":33,"author":{"gitId":"YoYoCiti"},"content":"deactivate AddressBookParser","lastModifiedDate":"2021-10-19"},{"lineNumber":34,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":35,"author":{"gitId":"YoYoCiti"},"content":"LogicManager -\u003e ListMembersCommand : execute()","lastModifiedDate":"2021-10-19"},{"lineNumber":36,"author":{"gitId":"YoYoCiti"},"content":"activate ListMembersCommand","lastModifiedDate":"2021-10-19"},{"lineNumber":37,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":38,"author":{"gitId":"YoYoCiti"},"content":"ListMembersCommand --\u003e LogicManager : result","lastModifiedDate":"2021-10-19"},{"lineNumber":39,"author":{"gitId":"YoYoCiti"},"content":"deactivate ListMembersCommand","lastModifiedDate":"2021-10-19"},{"lineNumber":40,"author":{"gitId":"YoYoCiti"},"content":"ListMembersCommand -[hidden]-\u003e LogicManager : result","lastModifiedDate":"2021-10-19"},{"lineNumber":41,"author":{"gitId":"YoYoCiti"},"content":"destroy ListMembersCommand","lastModifiedDate":"2021-10-19"},{"lineNumber":42,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":43,"author":{"gitId":"YoYoCiti"},"content":"[\u003c--LogicManager","lastModifiedDate":"2021-10-19"},{"lineNumber":44,"author":{"gitId":"YoYoCiti"},"content":"deactivate LogicManager","lastModifiedDate":"2021-10-19"},{"lineNumber":45,"author":{"gitId":"YoYoCiti"},"content":"@enduml","lastModifiedDate":"2021-10-19"}],"authorContributionMap":{"YoYoCiti":45}},{"path":"docs/diagrams/AliasState0.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"YoYoCiti"},"content":"@startuml","lastModifiedDate":"2021-10-19"},{"lineNumber":2,"author":{"gitId":"YoYoCiti"},"content":"!include style.puml","lastModifiedDate":"2021-10-19"},{"lineNumber":3,"author":{"gitId":"YoYoCiti"},"content":"skinparam ClassFontColor #000000","lastModifiedDate":"2021-10-19"},{"lineNumber":4,"author":{"gitId":"YoYoCiti"},"content":"skinparam ClassBorderColor #000000","lastModifiedDate":"2021-10-19"},{"lineNumber":5,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":6,"author":{"gitId":"YoYoCiti"},"content":"title Initial State","lastModifiedDate":"2021-10-19"},{"lineNumber":7,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":8,"author":{"gitId":"YoYoCiti"},"content":"class State3 as \"__:AliasMap__\"","lastModifiedDate":"2021-10-19"},{"lineNumber":9,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":10,"author":{"gitId":"YoYoCiti"},"content":"@end","lastModifiedDate":"2021-10-19"}],"authorContributionMap":{"YoYoCiti":10}},{"path":"docs/diagrams/AliasState1.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"YoYoCiti"},"content":"@startuml","lastModifiedDate":"2021-10-19"},{"lineNumber":2,"author":{"gitId":"YoYoCiti"},"content":"!include style.puml","lastModifiedDate":"2021-10-19"},{"lineNumber":3,"author":{"gitId":"YoYoCiti"},"content":"skinparam ClassFontColor #000000","lastModifiedDate":"2021-10-19"},{"lineNumber":4,"author":{"gitId":"YoYoCiti"},"content":"skinparam ClassBorderColor #000000","lastModifiedDate":"2021-10-19"},{"lineNumber":5,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":6,"author":{"gitId":"YoYoCiti"},"content":"title After command \"alias s/l cw/listf\"","lastModifiedDate":"2021-10-19"},{"lineNumber":7,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":8,"author":{"gitId":"YoYoCiti"},"content":"object \"__:Shortcut__\" as State1 {","lastModifiedDate":"2021-10-19"},{"lineNumber":9,"author":{"gitId":"YoYoCiti"},"content":"shortcut \u003d \"l\"","lastModifiedDate":"2021-10-19"},{"lineNumber":10,"author":{"gitId":"YoYoCiti"},"content":"}","lastModifiedDate":"2021-10-19"},{"lineNumber":11,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":12,"author":{"gitId":"YoYoCiti"},"content":"object \"__:CommandWord__\" as State2 {","lastModifiedDate":"2021-10-19"},{"lineNumber":13,"author":{"gitId":"YoYoCiti"},"content":"command \u003d \"listf\"","lastModifiedDate":"2021-10-19"},{"lineNumber":14,"author":{"gitId":"YoYoCiti"},"content":"}","lastModifiedDate":"2021-10-19"},{"lineNumber":15,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":16,"author":{"gitId":"YoYoCiti"},"content":"class State3 as \"__:AliasMap__\"","lastModifiedDate":"2021-10-19"},{"lineNumber":17,"author":{"gitId":"YoYoCiti"},"content":"class State4 as \"__:Alias__\"","lastModifiedDate":"2021-10-19"},{"lineNumber":18,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":19,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":20,"author":{"gitId":"YoYoCiti"},"content":"State1 -[hidden]right-\u003e State2","lastModifiedDate":"2021-10-19"},{"lineNumber":21,"author":{"gitId":"YoYoCiti"},"content":"State2 -[hidden]right-\u003e State3","lastModifiedDate":"2021-10-19"},{"lineNumber":22,"author":{"gitId":"YoYoCiti"},"content":"State3 -[hidden]up-\u003e State4","lastModifiedDate":"2021-10-19"},{"lineNumber":23,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":24,"author":{"gitId":"YoYoCiti"},"content":"State4 -up-\u003e State2","lastModifiedDate":"2021-10-19"},{"lineNumber":25,"author":{"gitId":"YoYoCiti"},"content":"State4 -up-\u003e State1","lastModifiedDate":"2021-10-19"},{"lineNumber":26,"author":{"gitId":"YoYoCiti"},"content":"State3 --\u003e State4","lastModifiedDate":"2021-10-19"},{"lineNumber":27,"author":{"gitId":"YoYoCiti"},"content":"@end","lastModifiedDate":"2021-10-19"}],"authorContributionMap":{"YoYoCiti":27}},{"path":"docs/diagrams/AliasState2.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"YoYoCiti"},"content":"@startuml","lastModifiedDate":"2021-10-19"},{"lineNumber":2,"author":{"gitId":"YoYoCiti"},"content":"!include style.puml","lastModifiedDate":"2021-10-19"},{"lineNumber":3,"author":{"gitId":"YoYoCiti"},"content":"skinparam ClassFontColor #000000","lastModifiedDate":"2021-10-19"},{"lineNumber":4,"author":{"gitId":"YoYoCiti"},"content":"skinparam ClassBorderColor #000000","lastModifiedDate":"2021-10-19"},{"lineNumber":5,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":6,"author":{"gitId":"YoYoCiti"},"content":"title After command \"alias s/l cw/listm\"","lastModifiedDate":"2021-10-19"},{"lineNumber":7,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":8,"author":{"gitId":"YoYoCiti"},"content":"object \"__:Shortcut__\" as State1 {","lastModifiedDate":"2021-10-19"},{"lineNumber":9,"author":{"gitId":"YoYoCiti"},"content":"shortcut \u003d \"l\"","lastModifiedDate":"2021-10-19"},{"lineNumber":10,"author":{"gitId":"YoYoCiti"},"content":"}","lastModifiedDate":"2021-10-19"},{"lineNumber":11,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":12,"author":{"gitId":"YoYoCiti"},"content":"object \"__:CommandWord__\" as State2 {","lastModifiedDate":"2021-10-19"},{"lineNumber":13,"author":{"gitId":"YoYoCiti"},"content":"command \u003d \"listm\"","lastModifiedDate":"2021-10-19"},{"lineNumber":14,"author":{"gitId":"YoYoCiti"},"content":"}","lastModifiedDate":"2021-10-19"},{"lineNumber":15,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":16,"author":{"gitId":"YoYoCiti"},"content":"note \"CommandWord replaced\" as N1","lastModifiedDate":"2021-10-19"},{"lineNumber":17,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":18,"author":{"gitId":"YoYoCiti"},"content":"class State3 as \"__:AliasMap__\"","lastModifiedDate":"2021-10-19"},{"lineNumber":19,"author":{"gitId":"YoYoCiti"},"content":"class State4 as \"__:Alias__\"","lastModifiedDate":"2021-10-19"},{"lineNumber":20,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":21,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":22,"author":{"gitId":"YoYoCiti"},"content":"State1 -[hidden]right-\u003e State2","lastModifiedDate":"2021-10-19"},{"lineNumber":23,"author":{"gitId":"YoYoCiti"},"content":"State2 -[hidden]right-\u003e State3","lastModifiedDate":"2021-10-19"},{"lineNumber":24,"author":{"gitId":"YoYoCiti"},"content":"State3 -[hidden]up-\u003e State4","lastModifiedDate":"2021-10-19"},{"lineNumber":25,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":26,"author":{"gitId":"YoYoCiti"},"content":"State4 -up-\u003e State2","lastModifiedDate":"2021-10-19"},{"lineNumber":27,"author":{"gitId":"YoYoCiti"},"content":"State4 -up-\u003e State1","lastModifiedDate":"2021-10-19"},{"lineNumber":28,"author":{"gitId":"YoYoCiti"},"content":"State3 --\u003e State4","lastModifiedDate":"2021-10-19"},{"lineNumber":29,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":30,"author":{"gitId":"YoYoCiti"},"content":"@end","lastModifiedDate":"2021-10-19"}],"authorContributionMap":{"YoYoCiti":30}},{"path":"docs/diagrams/AliasState3.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"YoYoCiti"},"content":"@startuml","lastModifiedDate":"2021-10-19"},{"lineNumber":2,"author":{"gitId":"YoYoCiti"},"content":"!include style.puml","lastModifiedDate":"2021-10-19"},{"lineNumber":3,"author":{"gitId":"YoYoCiti"},"content":"skinparam ClassFontColor #000000","lastModifiedDate":"2021-10-19"},{"lineNumber":4,"author":{"gitId":"YoYoCiti"},"content":"skinparam ClassBorderColor #000000","lastModifiedDate":"2021-10-19"},{"lineNumber":5,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":6,"author":{"gitId":"YoYoCiti"},"content":"title After command unalias `l`","lastModifiedDate":"2021-10-19"},{"lineNumber":7,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":8,"author":{"gitId":"YoYoCiti"},"content":"class State3 as \"__:AliasMap__\"","lastModifiedDate":"2021-10-19"},{"lineNumber":9,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":10,"author":{"gitId":"YoYoCiti"},"content":"@end","lastModifiedDate":"2021-10-19"}],"authorContributionMap":{"YoYoCiti":10}},{"path":"docs/diagrams/BetterModelClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"AddressBook *-right-\u003e \"1\" UniquePersonList","lastModifiedDate":"2019-07-30"},{"lineNumber":8,"author":{"gitId":"-"},"content":"AddressBook *-right-\u003e \"1\" UniqueTagList","lastModifiedDate":"2019-07-30"},{"lineNumber":9,"author":{"gitId":"-"},"content":"UniqueTagList -[hidden]down- UniquePersonList","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"UniqueTagList -[hidden]down- UniquePersonList","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"UniqueTagList *-right-\u003e \"*\" Tag","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"UniquePersonList -right-\u003e Person","lastModifiedDate":"2021-07-31"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"Person -up-\u003e \"*\" Tag","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Person *--\u003e Name","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"Person *--\u003e Phone","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"felix-ong"},"content":"Person *--\u003e Availability","lastModifiedDate":"2021-10-20"},{"lineNumber":20,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"-":19,"felix-ong":1}},{"path":"docs/diagrams/LogicClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor LOGIC_COLOR_T4","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"package Logic {","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"Class AddressBookParser","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"Class XYZCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"Class CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"Class \"{abstract}\\nCommand\" as Command","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"Interface Logic \u003c\u003cInterface\u003e\u003e","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"Class LogicManager","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"package Model{","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"Class HiddenModel #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"package Storage{","lastModifiedDate":"2021-03-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-03-30"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"HiddenOutside ..\u003e Logic","lastModifiedDate":"2019-07-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"LogicManager .right.|\u003e Logic","lastModifiedDate":"2021-07-31"},{"lineNumber":30,"author":{"gitId":"-"},"content":"LogicManager -right-\u003e\"1\" AddressBookParser","lastModifiedDate":"2021-07-31"},{"lineNumber":31,"author":{"gitId":"-"},"content":"AddressBookParser ..\u003e XYZCommand : creates \u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"XYZCommand -up-|\u003e Command","lastModifiedDate":"2019-07-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"LogicManager .left.\u003e Command : executes \u003e","lastModifiedDate":"2019-07-30"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"LogicManager --\u003e Model","lastModifiedDate":"2019-07-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"LogicManager --\u003e Storage","lastModifiedDate":"2021-03-30"},{"lineNumber":38,"author":{"gitId":"-"},"content":"Storage --[hidden] Model","lastModifiedDate":"2021-03-30"},{"lineNumber":39,"author":{"gitId":"-"},"content":"Command .[hidden]up.\u003e Storage","lastModifiedDate":"2021-03-30"},{"lineNumber":40,"author":{"gitId":"-"},"content":"Command .right.\u003e Model","lastModifiedDate":"2019-07-03"},{"lineNumber":41,"author":{"gitId":"tsinyee"},"content":"note right of XYZCommand: XYZCommand \u003d AddMemberCommand, \\nFindCommand, etc","lastModifiedDate":"2021-10-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":43,"author":{"gitId":"-"},"content":"Logic ..\u003e CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":44,"author":{"gitId":"-"},"content":"LogicManager .down.\u003e CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":45,"author":{"gitId":"-"},"content":"Command .up.\u003e CommandResult : produces \u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":46,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"-":45,"tsinyee":1}},{"path":"docs/diagrams/ModelClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Package Model \u003c\u003cRectangle\u003e\u003e{","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"Interface ReadOnlyAddressBook \u003c\u003cInterface\u003e\u003e","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"Interface ReadOnlyUserPrefs \u003c\u003cInterface\u003e\u003e","lastModifiedDate":"2021-05-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"Interface Model \u003c\u003cInterface\u003e\u003e","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"Class AddressBook","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"Class ReadOnlyAddressBook","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"Class Model","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"Class ModelManager","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"Class UserPrefs","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"Class ReadOnlyUserPrefs","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Class UniquePersonList","lastModifiedDate":"2021-07-31"},{"lineNumber":20,"author":{"gitId":"-"},"content":"Class Person","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"Class Name","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"Class Phone","lastModifiedDate":"2019-07-03"},{"lineNumber":23,"author":{"gitId":"felix-ong"},"content":"Class Availability","lastModifiedDate":"2021-10-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":25,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"HiddenOutside ..\u003e Model","lastModifiedDate":"2019-07-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"AddressBook .up.|\u003e ReadOnlyAddressBook","lastModifiedDate":"2019-07-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"ModelManager .up.|\u003e Model","lastModifiedDate":"2019-07-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"Model .right.\u003e ReadOnlyUserPrefs","lastModifiedDate":"2021-07-31"},{"lineNumber":34,"author":{"gitId":"-"},"content":"Model .left.\u003e ReadOnlyAddressBook","lastModifiedDate":"2021-07-31"},{"lineNumber":35,"author":{"gitId":"-"},"content":"ModelManager -left-\u003e \"1\" AddressBook","lastModifiedDate":"2021-07-31"},{"lineNumber":36,"author":{"gitId":"-"},"content":"ModelManager -right-\u003e \"1\" UserPrefs","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"UserPrefs .up.|\u003e ReadOnlyUserPrefs","lastModifiedDate":"2019-07-03"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":39,"author":{"gitId":"-"},"content":"AddressBook *--\u003e \"1\" UniquePersonList","lastModifiedDate":"2019-07-30"},{"lineNumber":40,"author":{"gitId":"-"},"content":"UniquePersonList --\u003e \"~* all\" Person","lastModifiedDate":"2021-07-31"},{"lineNumber":41,"author":{"gitId":"-"},"content":"Person *--\u003e Name","lastModifiedDate":"2019-07-03"},{"lineNumber":42,"author":{"gitId":"-"},"content":"Person *--\u003e Phone","lastModifiedDate":"2019-07-03"},{"lineNumber":43,"author":{"gitId":"felix-ong"},"content":"Person *--\u003e Availability","lastModifiedDate":"2021-10-20"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":45,"author":{"gitId":"-"},"content":"Name -[hidden]right-\u003e Phone","lastModifiedDate":"2019-07-03"},{"lineNumber":46,"author":{"gitId":"felix-ong"},"content":"Availability -[hidden]right-\u003e Phone","lastModifiedDate":"2021-10-20"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":48,"author":{"gitId":"-"},"content":"ModelManager --\u003e\"~* filtered\" Person","lastModifiedDate":"2021-07-31"},{"lineNumber":49,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"-":46,"felix-ong":3}},{"path":"docs/diagrams/style.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"/\u0027","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":" \u0027Commonly used styles and colors across diagrams.","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":" \u0027Refer to https://plantuml-documentation.readthedocs.io/en/latest for a more","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":" \u0027comprehensive list of skinparams.","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":" \u0027/","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u0027T1 through T4 are shades of the original color from lightest to darkest","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"!define UI_COLOR #1D8900","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"!define UI_COLOR_T1 #83E769","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"!define UI_COLOR_T2 #3FC71B","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"!define UI_COLOR_T3 #166800","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"!define UI_COLOR_T4 #0E4100","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"!define LOGIC_COLOR #3333C4","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"!define LOGIC_COLOR_T1 #C8C8FA","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"!define LOGIC_COLOR_T2 #6A6ADC","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"!define LOGIC_COLOR_T3 #1616B0","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"!define LOGIC_COLOR_T4 #101086","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"!define MODEL_COLOR #9D0012","lastModifiedDate":"2019-07-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"!define MODEL_COLOR_T1 #F97181","lastModifiedDate":"2019-07-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"!define MODEL_COLOR_T2 #E41F36","lastModifiedDate":"2019-07-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"!define MODEL_COLOR_T3 #7B000E","lastModifiedDate":"2019-07-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"!define MODEL_COLOR_T4 #51000A","lastModifiedDate":"2019-07-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"!define STORAGE_COLOR #A38300","lastModifiedDate":"2019-07-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"!define STORAGE_COLOR_T1 #FFE374","lastModifiedDate":"2019-07-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"!define STORAGE_COLOR_T2 #EDC520","lastModifiedDate":"2019-07-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"!define STORAGE_COLOR_T3 #806600","lastModifiedDate":"2019-07-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"!define STORAGE_COLOR_T2 #544400","lastModifiedDate":"2019-07-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"!define USER_COLOR #000000","lastModifiedDate":"2019-07-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"skinparam BackgroundColor #FFFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":38,"author":{"gitId":"-"},"content":"skinparam Shadowing false","lastModifiedDate":"2019-07-03"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":40,"author":{"gitId":"-"},"content":"skinparam Class {","lastModifiedDate":"2019-07-03"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    FontColor #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    BorderThickness 1","lastModifiedDate":"2019-07-03"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    BorderColor #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    StereotypeFontColor #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    FontName Arial","lastModifiedDate":"2019-07-03"},{"lineNumber":46,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":48,"author":{"gitId":"-"},"content":"skinparam Actor {","lastModifiedDate":"2019-07-03"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    BorderColor USER_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    Color USER_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    FontName Arial","lastModifiedDate":"2019-07-03"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":54,"author":{"gitId":"-"},"content":"skinparam Sequence {","lastModifiedDate":"2019-07-03"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    MessageAlign center","lastModifiedDate":"2019-07-03"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    BoxFontSize 15","lastModifiedDate":"2019-07-03"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    BoxPadding 0","lastModifiedDate":"2019-07-03"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    BoxFontColor #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    FontName Arial","lastModifiedDate":"2019-07-03"},{"lineNumber":60,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":62,"author":{"gitId":"-"},"content":"skinparam Participant {","lastModifiedDate":"2019-07-03"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    FontColor #FFFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    Padding 20","lastModifiedDate":"2019-07-03"},{"lineNumber":65,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":67,"author":{"gitId":"-"},"content":"skinparam MinClassWidth 50","lastModifiedDate":"2019-07-03"},{"lineNumber":68,"author":{"gitId":"-"},"content":"skinparam ParticipantPadding 10","lastModifiedDate":"2019-07-03"},{"lineNumber":69,"author":{"gitId":"-"},"content":"skinparam Shadowing false","lastModifiedDate":"2019-07-03"},{"lineNumber":70,"author":{"gitId":"-"},"content":"skinparam DefaultTextAlignment center","lastModifiedDate":"2019-07-03"},{"lineNumber":71,"author":{"gitId":"-"},"content":"skinparam packageStyle Rectangle","lastModifiedDate":"2019-07-03"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":73,"author":{"gitId":"-"},"content":"hide footbox","lastModifiedDate":"2019-07-03"},{"lineNumber":74,"author":{"gitId":"YoYoCiti"},"content":"hide empty members","lastModifiedDate":"2021-10-19"},{"lineNumber":75,"author":{"gitId":"-"},"content":"hide circle","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"YoYoCiti":1,"-":74}},{"path":"docs/index.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"YoYoCiti"},"content":"title: SportsPA","lastModifiedDate":"2021-10-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"[![CI Status](https://github.com/se-edu/addressbook-level3/workflows/Java%20CI/badge.svg)](https://github.com/se-edu/addressbook-level3/actions)","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"[![codecov](https://codecov.io/gh/AY2122S1-CS2103T-W12-1/tp/branch/master/graph/badge.svg?token\u003dW77BXICS47)](https://codecov.io/gh/AY2122S1-CS2103T-W12-1/tp)","lastModifiedDate":"2021-09-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"![Ui](images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"YoYoCiti"},"content":"**SportsPA is a desktop application for managing membership and facilities for NUS Sports CCAs.** While it has a GUI, most of the user interactions happen using a CLI (Command Line Interface).","lastModifiedDate":"2021-10-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"YoYoCiti"},"content":"* If you are interested in using SportsPA, head over to the [_Quick Start_ section of the **User Guide**](UserGuide.html#quick-start).","lastModifiedDate":"2021-10-26"},{"lineNumber":14,"author":{"gitId":"YoYoCiti"},"content":"* If you are interested about developing SportsPA, the [**Developer Guide**](DeveloperGuide.html) is a good place to start.","lastModifiedDate":"2021-10-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"**Acknowledgements**","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"* Libraries used: [JavaFX](https://openjfx.io/), [Jackson](https://github.com/FasterXML/jackson), [JUnit5](https://github.com/junit-team/junit5)","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"YoYoCiti":4,"-":15}},{"path":"docs/tutorials/AddRemark.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-07-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-07-29"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: \"Tutorial: Adding a command\"","lastModifiedDate":"2020-07-29"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-07-29"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"Let\u0027s walk you through the implementation of a new command — `remark`.","lastModifiedDate":"2020-07-29"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"This command allows users of the AddressBook application to add optional remarks to people in their address book and edit it if required. The command should have the following format:","lastModifiedDate":"2020-07-29"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":10,"author":{"gitId":"-"},"content":"`remark INDEX r/REMARK` (e.g., `remark 2 r/Likes baseball`)","lastModifiedDate":"2020-07-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":12,"author":{"gitId":"-"},"content":"We’ll assume that you have already set up the development environment as outlined in the Developer’s Guide.","lastModifiedDate":"2020-07-29"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"## Create a new `remark` command","lastModifiedDate":"2020-07-29"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Looking in the `logic.command` package, you will notice that each existing command have their own class. All the commands inherit from the abstract class `Command` which means that they must override `execute()`. Each `Command` returns an instance of `CommandResult` upon success and `CommandResult#feedbackToUser` is printed to the `ResultDisplay`.","lastModifiedDate":"2020-07-29"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Let’s start by creating a new `RemarkCommand` class in the `src/main/java/seedu/address/logic/command` directory.","lastModifiedDate":"2020-07-29"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"For now, let’s keep `RemarkCommand` as simple as possible and print some output. We accomplish that by returning a `CommandResult` with an accompanying message.","lastModifiedDate":"2020-07-29"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":23,"author":{"gitId":"-"},"content":"**`RemarkCommand.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":25,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":26,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2020-07-29"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2020-07-29"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":30,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-07-29"},{"lineNumber":31,"author":{"gitId":"-"},"content":" * Changes the remark of an existing person in the address book.","lastModifiedDate":"2020-07-29"},{"lineNumber":32,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-07-29"},{"lineNumber":33,"author":{"gitId":"-"},"content":"public class RemarkCommand extends Command {","lastModifiedDate":"2020-07-29"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"remark\";","lastModifiedDate":"2020-07-29"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2020-07-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return new CommandResult(\"Hello from remark\");","lastModifiedDate":"2020-07-29"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":42,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"### Hook `RemarkCommand` into the application","lastModifiedDate":"2020-07-29"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":46,"author":{"gitId":"-"},"content":"Now that we have our `RemarkCommand` ready to be executed, we need to update `AddressBookParser#parseCommand()` to recognize the `remark` keyword. Add the new command to the `switch` block by creating a new `case` that returns a new instance of `RemarkCommand`.","lastModifiedDate":"2020-07-29"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"You can refer to the changes in this [diff](https://github.com/se-edu/addressbook-level3/commit/35eb7286f18a029d39cb7a29df8f172a001e4fd8#diff-34ace715a8a8d2e5a66e71289f017b47).","lastModifiedDate":"2020-07-29"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":50,"author":{"gitId":"-"},"content":"### Run the application","lastModifiedDate":"2020-07-29"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":52,"author":{"gitId":"-"},"content":"Run `Main#main` and try out your new `RemarkCommand`. If everything went well, you should see something like this:","lastModifiedDate":"2020-07-29"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"![Output displayed](../images/add-remark/RemarkHello.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":56,"author":{"gitId":"-"},"content":"## Change `RemarkCommand` to throw an exception","lastModifiedDate":"2020-07-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"While we have successfully printed a message to `ResultDisplay`, the command does not do what it is supposed to do. Let’s change the command to throw a `CommandException` to accurately reflect that our command is still a work in progress.","lastModifiedDate":"2020-12-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":60,"author":{"gitId":"-"},"content":"![The relationship between RemarkCommand and Command](../images/add-remark/CommandInterface.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"Following the convention in other commands, we add relevant messages as constants and use them.","lastModifiedDate":"2020-07-29"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":64,"author":{"gitId":"-"},"content":"**`RemarkCommand.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":66,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2021-08-01"},{"lineNumber":68,"author":{"gitId":"-"},"content":"            + \": Edits the remark of the person identified \"","lastModifiedDate":"2021-08-01"},{"lineNumber":69,"author":{"gitId":"-"},"content":"            + \"by the index number used in the last person listing. \"","lastModifiedDate":"2020-07-29"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            + \"Existing remark will be overwritten by the input.\\n\"","lastModifiedDate":"2020-07-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2020-07-29"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            + \"r/ [REMARK]\\n\"","lastModifiedDate":"2020-07-29"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2020-07-29"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            + \"r/ Likes to swim.\";","lastModifiedDate":"2020-07-29"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_NOT_IMPLEMENTED_YET \u003d","lastModifiedDate":"2021-08-01"},{"lineNumber":77,"author":{"gitId":"-"},"content":"            \"Remark command not implemented yet\";","lastModifiedDate":"2021-08-01"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-07-29"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        throw new CommandException(MESSAGE_NOT_IMPLEMENTED_YET);","lastModifiedDate":"2020-07-29"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":83,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":85,"author":{"gitId":"-"},"content":"## Enhancing `RemarkCommand`","lastModifiedDate":"2020-07-29"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":87,"author":{"gitId":"-"},"content":"Let’s change `RemarkCommand` to parse input from the user.","lastModifiedDate":"2020-07-29"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":89,"author":{"gitId":"-"},"content":"### Make the command accept parameters","lastModifiedDate":"2020-07-29"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":91,"author":{"gitId":"-"},"content":"We start by modifying the constructor of `RemarkCommand` to accept an `Index` and a `String`. While we are at it, let’s change the error message to echo the values. While this is not a replacement for tests, it is an obvious way to tell if our code is functioning as intended.","lastModifiedDate":"2020-07-29"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":93,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":94,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2020-07-29"},{"lineNumber":95,"author":{"gitId":"-"},"content":"//...","lastModifiedDate":"2020-07-29"},{"lineNumber":96,"author":{"gitId":"-"},"content":"public class RemarkCommand extends Command {","lastModifiedDate":"2020-07-29"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    //...","lastModifiedDate":"2020-07-29"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_ARGUMENTS \u003d \"Index: %1$d, Remark: %2$s\";","lastModifiedDate":"2020-07-29"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    private final Index index;","lastModifiedDate":"2020-07-29"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    private final String remark;","lastModifiedDate":"2020-07-29"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-07-29"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * @param index of the person in the filtered person list to edit the remark","lastModifiedDate":"2020-07-29"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     * @param remark of the person to be updated to","lastModifiedDate":"2020-07-29"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-07-29"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    public RemarkCommand(Index index, String remark) {","lastModifiedDate":"2020-07-29"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        requireAllNonNull(index, remark);","lastModifiedDate":"2020-07-29"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        this.index \u003d index;","lastModifiedDate":"2020-07-29"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        this.remark \u003d remark;","lastModifiedDate":"2020-07-29"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-07-29"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        throw new CommandException(","lastModifiedDate":"2021-08-01"},{"lineNumber":116,"author":{"gitId":"-"},"content":"                String.format(MESSAGE_ARGUMENTS, index.getOneBased(), remark));","lastModifiedDate":"2021-08-01"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2020-07-29"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2020-07-29"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2020-07-29"},{"lineNumber":123,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2020-07-29"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-07-29"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2020-07-29"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        if (!(other instanceof RemarkCommand)) {","lastModifiedDate":"2020-07-29"},{"lineNumber":128,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2020-07-29"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-07-29"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2020-07-29"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        RemarkCommand e \u003d (RemarkCommand) other;","lastModifiedDate":"2020-07-29"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        return index.equals(e.index)","lastModifiedDate":"2020-07-29"},{"lineNumber":134,"author":{"gitId":"-"},"content":"                \u0026\u0026 remark.equals(e.remark);","lastModifiedDate":"2020-07-29"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":136,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":137,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":139,"author":{"gitId":"-"},"content":"Your code should look something like [this](https://github.com/se-edu/addressbook-level3/commit/35eb7286f18a029d39cb7a29df8f172a001e4fd8#diff-34ace715a8a8d2e5a66e71289f017b47) after you are done.","lastModifiedDate":"2020-07-29"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":141,"author":{"gitId":"-"},"content":"### Parse user input","lastModifiedDate":"2020-07-29"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":143,"author":{"gitId":"-"},"content":"Now let’s move on to writing a parser that will extract the index and remark from the input provided by the user.","lastModifiedDate":"2020-07-29"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":145,"author":{"gitId":"-"},"content":"Create a `RemarkCommandParser` class in the `seedu.address.logic.parser` package. The class must extend the `Parser` interface.","lastModifiedDate":"2020-07-29"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":147,"author":{"gitId":"-"},"content":"![The relationship between Parser and RemarkCommandParser](../images/add-remark/ParserInterface.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":149,"author":{"gitId":"-"},"content":"Thankfully, `ArgumentTokenizer#tokenize()` makes it trivial to parse user input. Let’s take a look at the JavaDoc provided for the function to understand what it does.","lastModifiedDate":"2020-07-29"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":151,"author":{"gitId":"-"},"content":"**`ArgumentTokenizer.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":153,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":154,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-07-29"},{"lineNumber":155,"author":{"gitId":"-"},"content":" * Tokenizes an arguments string and returns an {@code ArgumentMultimap}","lastModifiedDate":"2020-07-29"},{"lineNumber":156,"author":{"gitId":"-"},"content":" * object that maps prefixes to their respective argument values. Only the","lastModifiedDate":"2020-07-29"},{"lineNumber":157,"author":{"gitId":"-"},"content":" * given prefixes will be recognized in the arguments string.","lastModifiedDate":"2020-07-29"},{"lineNumber":158,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2020-07-29"},{"lineNumber":159,"author":{"gitId":"-"},"content":" * @param argsString Arguments string of the form:","lastModifiedDate":"2020-07-29"},{"lineNumber":160,"author":{"gitId":"-"},"content":" * {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2020-07-29"},{"lineNumber":161,"author":{"gitId":"-"},"content":" * @param prefixes   Prefixes to tokenize the arguments string with","lastModifiedDate":"2020-07-29"},{"lineNumber":162,"author":{"gitId":"-"},"content":" * @return           ArgumentMultimap object that maps prefixes to their","lastModifiedDate":"2020-07-29"},{"lineNumber":163,"author":{"gitId":"-"},"content":" * arguments","lastModifiedDate":"2020-07-29"},{"lineNumber":164,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-07-29"},{"lineNumber":165,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":167,"author":{"gitId":"-"},"content":"We can tell `ArgumentTokenizer#tokenize()` to look out for our new prefix `r/` and it will return us an instance of `ArgumentMultimap`. Now let’s find out what we need to do in order to obtain the Index and String that we need. Let’s look through `ArgumentMultimap` :","lastModifiedDate":"2020-07-29"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":169,"author":{"gitId":"-"},"content":"**`ArgumentMultimap.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":171,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":172,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-07-29"},{"lineNumber":173,"author":{"gitId":"-"},"content":" * Returns the last value of {@code prefix}.","lastModifiedDate":"2020-07-29"},{"lineNumber":174,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-07-29"},{"lineNumber":175,"author":{"gitId":"-"},"content":"public Optional\u003cString\u003e getValue(Prefix prefix) {","lastModifiedDate":"2020-07-29"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    List\u003cString\u003e values \u003d getAllValues(prefix);","lastModifiedDate":"2020-07-29"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    return values.isEmpty() ? Optional.empty() :","lastModifiedDate":"2020-07-29"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        Optional.of(values.get(values.size() - 1));","lastModifiedDate":"2020-07-29"},{"lineNumber":179,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":180,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":182,"author":{"gitId":"-"},"content":"This appears to be what we need to get a String of the remark. But what about the Index? Let\u0027s take a quick peek at existing `Command` that uses an index to see how it is done.","lastModifiedDate":"2020-07-29"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":184,"author":{"gitId":"-"},"content":"**`DeleteCommandParser.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":186,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":187,"author":{"gitId":"-"},"content":"Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2020-07-29"},{"lineNumber":188,"author":{"gitId":"-"},"content":"return new DeleteCommand(index);","lastModifiedDate":"2020-07-29"},{"lineNumber":189,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":191,"author":{"gitId":"-"},"content":"There appears to be another utility class that obtains an `Index` from the input provided by the user.","lastModifiedDate":"2020-07-29"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":193,"author":{"gitId":"-"},"content":"Now that we have the know-how to extract the data that we need from the user’s input, we can parse the user command and create a new instance of `RemarkCommand`, as given below.","lastModifiedDate":"2020-07-29"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":195,"author":{"gitId":"-"},"content":"**`RemarkCommandParser.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":197,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":198,"author":{"gitId":"-"},"content":"public RemarkCommand parse(String args) throws ParseException {","lastModifiedDate":"2020-07-29"},{"lineNumber":199,"author":{"gitId":"-"},"content":"    requireNonNull(args);","lastModifiedDate":"2020-07-29"},{"lineNumber":200,"author":{"gitId":"-"},"content":"    ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args,","lastModifiedDate":"2020-07-29"},{"lineNumber":201,"author":{"gitId":"-"},"content":"        PREFIX_REMARK);","lastModifiedDate":"2020-07-29"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    Index index;","lastModifiedDate":"2020-07-29"},{"lineNumber":204,"author":{"gitId":"-"},"content":"    try {","lastModifiedDate":"2020-07-29"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2020-07-29"},{"lineNumber":206,"author":{"gitId":"-"},"content":"    } catch (IllegalValueException ive) {","lastModifiedDate":"2020-07-29"},{"lineNumber":207,"author":{"gitId":"-"},"content":"        throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2020-07-29"},{"lineNumber":208,"author":{"gitId":"-"},"content":"            RemarkCommand.MESSAGE_USAGE), ive);","lastModifiedDate":"2020-07-29"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    String remark \u003d argMultimap.getValue(PREFIX_REMARK).orElse(\"\");","lastModifiedDate":"2020-07-29"},{"lineNumber":212,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":213,"author":{"gitId":"-"},"content":"    return new RemarkCommand(index, remark);","lastModifiedDate":"2020-07-29"},{"lineNumber":214,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":215,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":217,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":218,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":219,"author":{"gitId":"-"},"content":":information_source: Don’t forget to update `AddressBookParser` to use our new `RemarkCommandParser`!","lastModifiedDate":"2020-07-29"},{"lineNumber":220,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":221,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":223,"author":{"gitId":"-"},"content":"If you are stuck, check out the sample","lastModifiedDate":"2020-07-29"},{"lineNumber":224,"author":{"gitId":"-"},"content":"[here](https://github.com/se-edu/addressbook-level3/commit/dc6d5139d08f6403da0ec624ea32bd79a2ae0cbf#diff-fc19ecee89c3732a62fbc8c840250508).","lastModifiedDate":"2020-07-29"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":226,"author":{"gitId":"-"},"content":"## Add `Remark` to the model","lastModifiedDate":"2020-07-29"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":228,"author":{"gitId":"-"},"content":"Now that we have all the information that we need, let’s lay the groundwork for propagating the remarks added into the in-memory storage of person data. We achieve that by working with the `Person` model. Each field in a Person is implemented as a separate class (e.g. a `Name` object represents the person’s name). That means we should add a `Remark` class so that we can use a `Remark` object to represent a remark given to a person.","lastModifiedDate":"2020-07-29"},{"lineNumber":229,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":230,"author":{"gitId":"-"},"content":"### Add a new `Remark` class","lastModifiedDate":"2020-07-29"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":232,"author":{"gitId":"-"},"content":"Create a new `Remark` in `seedu.address.model.person`. Since a `Remark` is a field that is similar to `Address`, we can reuse a significant bit of code.","lastModifiedDate":"2020-07-29"},{"lineNumber":233,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":234,"author":{"gitId":"-"},"content":"A copy-paste and search-replace later, you should have something like [this](https://github.com/se-edu/addressbook-level3/commit/4516e099699baa9e2d51801bd26f016d812dedcc#diff-af2f075d24dfcd333876f0fbce321f25). Note how `Remark` has no constrains and thus does not require input","lastModifiedDate":"2020-07-29"},{"lineNumber":235,"author":{"gitId":"-"},"content":"validation.","lastModifiedDate":"2020-07-29"},{"lineNumber":236,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":237,"author":{"gitId":"-"},"content":"### Make use of `Remark`","lastModifiedDate":"2020-07-29"},{"lineNumber":238,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":239,"author":{"gitId":"-"},"content":"Let’s change `RemarkCommand` and `RemarkCommandParser` to use the new `Remark` class instead of plain `String`. These should be relatively simple changes.","lastModifiedDate":"2020-07-29"},{"lineNumber":240,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":241,"author":{"gitId":"-"},"content":"## Add a placeholder element for remark to the UI","lastModifiedDate":"2020-07-29"},{"lineNumber":242,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":243,"author":{"gitId":"-"},"content":"Without getting too deep into `fxml`, let’s go on a 5 minute adventure to get some placeholder text to show up for each person.","lastModifiedDate":"2020-07-29"},{"lineNumber":244,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":245,"author":{"gitId":"-"},"content":"Simply add the following to [`seedu.address.ui.PersonCard`](https://github.com/se-edu/addressbook-level3/commit/850b78879582f38accb05dd20c245963c65ea599#diff-0c6b6abcfac8c205e075294f25e851fe).","lastModifiedDate":"2020-07-29"},{"lineNumber":246,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":247,"author":{"gitId":"-"},"content":"**`PersonCard.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":248,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":249,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":250,"author":{"gitId":"-"},"content":"@FXML","lastModifiedDate":"2020-07-29"},{"lineNumber":251,"author":{"gitId":"-"},"content":"private Label remark;","lastModifiedDate":"2020-07-29"},{"lineNumber":252,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":253,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":254,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":255,"author":{"gitId":"-"},"content":"`@FXML` is an annotation that marks a private or protected field and makes it accessible to FXML. It might sound like Greek to you right now, don’t worry — we will get back to it later.","lastModifiedDate":"2020-07-29"},{"lineNumber":256,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":257,"author":{"gitId":"-"},"content":"Then insert the following into [`main/resources/view/PersonListCard.fxml`](https://github.com/se-edu/addressbook-level3/commit/850b78879582f38accb05dd20c245963c65ea599#diff-12580431f55d7880578aa4c16f249e71).","lastModifiedDate":"2020-07-29"},{"lineNumber":258,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":259,"author":{"gitId":"-"},"content":"**`PersonListCard.fxml`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":260,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":261,"author":{"gitId":"-"},"content":"``` xml","lastModifiedDate":"2020-07-29"},{"lineNumber":262,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"remark\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$remark\" /\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":263,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":264,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":265,"author":{"gitId":"-"},"content":"That’s it! Fire up the application again and you should see something like this:","lastModifiedDate":"2020-07-29"},{"lineNumber":266,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":267,"author":{"gitId":"-"},"content":"![$remark shows up in each entry](../images/add-remark/$Remark.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":268,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":269,"author":{"gitId":"-"},"content":"## Modify `Person` to support a `Remark` field","lastModifiedDate":"2020-07-29"},{"lineNumber":270,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":271,"author":{"gitId":"-"},"content":"Since `PersonCard` displays data from a `Person`, we need to update `Person` to get our `Remark` displayed!","lastModifiedDate":"2020-07-29"},{"lineNumber":272,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":273,"author":{"gitId":"-"},"content":"### Modify `Person`","lastModifiedDate":"2020-07-29"},{"lineNumber":274,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":275,"author":{"gitId":"-"},"content":"We change the constructor of `Person` to take a `Remark`. We will also need to define new fields and accessors accordingly to store our new addition.","lastModifiedDate":"2020-07-29"},{"lineNumber":276,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":277,"author":{"gitId":"-"},"content":"### Update other usages of `Person`","lastModifiedDate":"2020-07-29"},{"lineNumber":278,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":279,"author":{"gitId":"-"},"content":"Unfortunately, a change to `Person` will cause other commands to break, you will have to modify these commands to use the updated `Person`!","lastModifiedDate":"2020-07-29"},{"lineNumber":280,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":281,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":282,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":283,"author":{"gitId":"-"},"content":":bulb: Use the `Find Usages` feature in IntelliJ IDEA on the `Person` class to find these commands.","lastModifiedDate":"2020-07-29"},{"lineNumber":284,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":285,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":286,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":287,"author":{"gitId":"-"},"content":"Refer to [this commit](https://github.com/se-edu/addressbook-level3/commit/ce998c37e65b92d35c91d28c7822cd139c2c0a5c) and check that you have got everything in order!","lastModifiedDate":"2020-07-29"},{"lineNumber":288,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":289,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":290,"author":{"gitId":"-"},"content":"## Updating Storage","lastModifiedDate":"2020-07-29"},{"lineNumber":291,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":292,"author":{"gitId":"-"},"content":"AddressBook stores data by serializing `JsonAdaptedPerson` into `json` with the help of an external library — Jackson. Let’s update `JsonAdaptedPerson` to work with our new `Person`!","lastModifiedDate":"2020-07-29"},{"lineNumber":293,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":294,"author":{"gitId":"-"},"content":"While the changes to code may be minimal, the test data will have to be updated as well.","lastModifiedDate":"2020-07-29"},{"lineNumber":295,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":296,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":297,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":298,"author":{"gitId":"-"},"content":":exclamation: You must delete AddressBook’s storage file located at `/data/addressbook.json` before running it! Not doing so will cause AddressBook to default to an empty address book!","lastModifiedDate":"2020-07-29"},{"lineNumber":299,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":300,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":301,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":302,"author":{"gitId":"-"},"content":"Check out [this commit](https://github.com/se-edu/addressbook-level3/commit/556cbd0e03ff224d7a68afba171ad2eb0ce56bbf)","lastModifiedDate":"2020-07-29"},{"lineNumber":303,"author":{"gitId":"-"},"content":"to see what the changes entail.","lastModifiedDate":"2020-07-29"},{"lineNumber":304,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":305,"author":{"gitId":"-"},"content":"## Finalizing the UI","lastModifiedDate":"2020-07-29"},{"lineNumber":306,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":307,"author":{"gitId":"-"},"content":"Now that we have finalized the `Person` class and its dependencies, we can now bind the `Remark` field to the UI.","lastModifiedDate":"2020-07-29"},{"lineNumber":308,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":309,"author":{"gitId":"-"},"content":"Just add [this one line of code!](https://github.com/se-edu/addressbook-level3/commit/5b98fee11b6b3f5749b6b943c4f3bd3aa049b692)","lastModifiedDate":"2020-07-29"},{"lineNumber":310,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":311,"author":{"gitId":"-"},"content":"**`PersonCard.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":312,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":313,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":314,"author":{"gitId":"-"},"content":"public PersonCard(Person person, int displayedIndex) {","lastModifiedDate":"2020-07-29"},{"lineNumber":315,"author":{"gitId":"-"},"content":"    //...","lastModifiedDate":"2020-07-29"},{"lineNumber":316,"author":{"gitId":"-"},"content":"    remark.setText(person.getRemark().value);","lastModifiedDate":"2020-07-29"},{"lineNumber":317,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":318,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":319,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":320,"author":{"gitId":"-"},"content":"![The remark label is bound properly!](../images/add-remark/RemarkBound.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":321,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":322,"author":{"gitId":"-"},"content":"## Putting everything together","lastModifiedDate":"2020-07-29"},{"lineNumber":323,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":324,"author":{"gitId":"-"},"content":"After the previous step, we notice a peculiar regression — we went from displaying something to nothing at all. However, this is expected behavior as we are yet to update the `RemarkCommand` to make use of the code we\u0027ve been adding in the last few steps.","lastModifiedDate":"2020-07-29"},{"lineNumber":325,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":326,"author":{"gitId":"-"},"content":"### Update `RemarkCommand` and `RemarkCommandParser`","lastModifiedDate":"2020-07-29"},{"lineNumber":327,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":328,"author":{"gitId":"-"},"content":"In this last step, we modify `RemarkCommand#execute()` to change the `Remark` of a `Person`. Since all fields in a `Person` are immutable, we create a new instance of a `Person` with the values that we want and","lastModifiedDate":"2020-07-29"},{"lineNumber":329,"author":{"gitId":"-"},"content":"save it with `Model#setPerson()`.","lastModifiedDate":"2020-07-29"},{"lineNumber":330,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":331,"author":{"gitId":"-"},"content":"**`RemarkCommand.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":332,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":333,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":334,"author":{"gitId":"-"},"content":"//...","lastModifiedDate":"2020-07-29"},{"lineNumber":335,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_ADD_REMARK_SUCCESS \u003d \"Added remark to Person: %1$s\";","lastModifiedDate":"2020-07-29"},{"lineNumber":336,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DELETE_REMARK_SUCCESS \u003d \"Removed remark from Person: %1$s\";","lastModifiedDate":"2020-07-29"},{"lineNumber":337,"author":{"gitId":"-"},"content":"//...","lastModifiedDate":"2020-07-29"},{"lineNumber":338,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":339,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-07-29"},{"lineNumber":340,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2020-07-29"},{"lineNumber":341,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":342,"author":{"gitId":"-"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2020-07-29"},{"lineNumber":343,"author":{"gitId":"felix-ong"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_MEMBER_DISPLAYED_INDEX);","lastModifiedDate":"2021-10-05"},{"lineNumber":344,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-07-29"},{"lineNumber":345,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":346,"author":{"gitId":"-"},"content":"        Person personToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2020-07-29"},{"lineNumber":347,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d new Person(","lastModifiedDate":"2021-08-01"},{"lineNumber":348,"author":{"gitId":"-"},"content":"                personToEdit.getName(), personToEdit.getPhone(), personToEdit.getEmail(),","lastModifiedDate":"2021-08-01"},{"lineNumber":349,"author":{"gitId":"-"},"content":"                personToEdit.getAddress(), remark, personToEdit.getTags());","lastModifiedDate":"2020-07-29"},{"lineNumber":350,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":351,"author":{"gitId":"-"},"content":"        model.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2020-07-29"},{"lineNumber":352,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2020-07-29"},{"lineNumber":353,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":354,"author":{"gitId":"-"},"content":"        return new CommandResult(generateSuccessMessage(editedPerson));","lastModifiedDate":"2020-07-29"},{"lineNumber":355,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":356,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":357,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-07-29"},{"lineNumber":358,"author":{"gitId":"-"},"content":"     * Generates a command execution success message based on whether","lastModifiedDate":"2021-08-01"},{"lineNumber":359,"author":{"gitId":"-"},"content":"     * the remark is added to or removed from","lastModifiedDate":"2021-08-01"},{"lineNumber":360,"author":{"gitId":"-"},"content":"     * {@code personToEdit}.","lastModifiedDate":"2020-07-29"},{"lineNumber":361,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-07-29"},{"lineNumber":362,"author":{"gitId":"-"},"content":"    private String generateSuccessMessage(Person personToEdit) {","lastModifiedDate":"2020-07-29"},{"lineNumber":363,"author":{"gitId":"-"},"content":"        String message \u003d !remark.value.isEmpty() ? MESSAGE_ADD_REMARK_SUCCESS : MESSAGE_DELETE_REMARK_SUCCESS;","lastModifiedDate":"2020-07-29"},{"lineNumber":364,"author":{"gitId":"-"},"content":"        return String.format(message, personToEdit);","lastModifiedDate":"2020-07-29"},{"lineNumber":365,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":366,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":367,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":368,"author":{"gitId":"-"},"content":"![Congratulations!](../images/add-remark/RemarkComplete.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":369,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":370,"author":{"gitId":"-"},"content":"## Writing tests","lastModifiedDate":"2020-07-29"},{"lineNumber":371,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":372,"author":{"gitId":"-"},"content":"Tests are crucial to ensuring that bugs don’t slip into the codebase unnoticed. This is especially true for large code bases where a change might lead to unintended behavior.","lastModifiedDate":"2020-07-29"},{"lineNumber":373,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":374,"author":{"gitId":"-"},"content":"Let’s verify the correctness of our code by writing some tests!","lastModifiedDate":"2020-07-29"},{"lineNumber":375,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":376,"author":{"gitId":"-"},"content":"Of course you can simply add the test cases manually, like you\u0027ve been doing all along this tutorial. The result would be like the test cases in [here](https://github.com/se-edu/addressbook-level3/commit/fac8f3fd855d55831ca0cc73313b5943d49d4d6e#diff-d749de38392f7ea504da7824641ba8d9). Alternatively, you can get the help of IntelliJ to generate the skeletons of the test cases, as explained in the next section.","lastModifiedDate":"2021-08-01"},{"lineNumber":377,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-01"},{"lineNumber":378,"author":{"gitId":"-"},"content":"### Automatically generating tests","lastModifiedDate":"2020-07-29"},{"lineNumber":379,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":380,"author":{"gitId":"-"},"content":"The goal is to write effective and efficient tests to ensure that `RemarkCommand#execute()` behaves as expected.","lastModifiedDate":"2020-07-29"},{"lineNumber":381,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":382,"author":{"gitId":"-"},"content":"The convention for test names is `methodName_testScenario_expectedResult`. An example would be","lastModifiedDate":"2020-07-29"},{"lineNumber":383,"author":{"gitId":"-"},"content":"`execute_filteredList_success`.","lastModifiedDate":"2020-07-29"},{"lineNumber":384,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":385,"author":{"gitId":"-"},"content":"Let’s create a test for `RemarkCommand#execute()` to test that adding a remark works. On `IntelliJ IDEA` you can bring up the context menu and choose to `Go To` \\\u003e `Test` or use the appropriate keyboard shortcut.","lastModifiedDate":"2020-07-29"},{"lineNumber":386,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":387,"author":{"gitId":"-"},"content":"![Using the context menu to jump to tests](../images/add-remark/ContextMenu.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":388,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":389,"author":{"gitId":"-"},"content":"Then, create a test for the `execute` method.","lastModifiedDate":"2020-07-29"},{"lineNumber":390,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":391,"author":{"gitId":"-"},"content":"![Creating a test for `execute`.](../images/add-remark/CreateTest.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":392,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":393,"author":{"gitId":"-"},"content":"Following convention, let’s change the name of the generated method to `execute_addRemarkUnfilteredList_success`.","lastModifiedDate":"2020-07-29"},{"lineNumber":394,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":395,"author":{"gitId":"-"},"content":"Let’s use the utility functions provided in `CommandTestUtil`. The functions ensure that commands produce the expected `CommandResult` and output the correct message. In this case, `CommandTestUtil#assertCommandSuccess` is the best fit as we are testing that a `RemarkCommand` will successfully add a `Remark`.","lastModifiedDate":"2020-07-29"},{"lineNumber":396,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":397,"author":{"gitId":"-"},"content":"You should end up with a test that looks something like [this](https://github.com/se-edu/addressbook-level3/commit/fac8f3fd855d55831ca0cc73313b5943d49d4d6e#diff-d749de38392f7ea504da7824641ba8d9).","lastModifiedDate":"2020-07-29"},{"lineNumber":398,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":399,"author":{"gitId":"-"},"content":"## Conclusion","lastModifiedDate":"2020-07-29"},{"lineNumber":400,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":401,"author":{"gitId":"-"},"content":"This concludes the tutorial for adding a new `Command` to AddressBook.","lastModifiedDate":"2020-07-29"}],"authorContributionMap":{"-":400,"felix-ong":1}},{"path":"docs/tutorials/TracingCode.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: \"Tutorial: Tracing code\"","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003e Indeed, the ratio of time spent reading versus writing is well over 10 to 1. We are constantly reading old code as part of the effort to write new code. …​\\[Therefore,\\] making it easy to read makes it easier to write.","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003e —  Robert C. Martin Clean Code: A Handbook of Agile Software Craftsmanship","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"When trying to understand an unfamiliar code base, one common strategy used is to trace some representative execution path through the code base. One easy way to trace an execution path is to use a debugger to step through the code. In this tutorial, you will be using the IntelliJ IDEA’s debugger to trace the execution path of a specific user command.","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"## Before we start","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Before we jump into the code, it is useful to get an idea of the overall structure and the high-level behavior of the application. This is provided in the \u0027Architecture\u0027 section of the developer guide. In particular, the architecture diagram (reproduced below), tells us that the App consists of several components.","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"![ArchitectureDiagram](../images/ArchitectureDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"It also has a sequence diagram (reproduced below) that tells us how a command propagates through the App.","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"../images/ArchitectureSequenceDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"Note how the diagram shows only the execution flows _between_ the main components. That is, it does not show details of the execution path *inside* each component. By hiding those details, the diagram aims to inform the reader about the overall execution path of a command without overwhelming the reader with too much details. In this tutorial, you aim to find those omitted details so that you get a more in-depth understanding of how the code works.","lastModifiedDate":"2021-07-31"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"Before we proceed, ensure that you have done the following:","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"1. Read the [*Architecture* section of the DG](../DeveloperGuide.md#architecture)","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"1. Set up the project in Intellij IDEA","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"1. Learn basic debugging features of Intellij IDEA","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"   * If you are using a different IDE, we\u0027ll leave it to you to figure out the equivalent feature to use in your IDE.","lastModifiedDate":"2021-07-31"},{"lineNumber":32,"author":{"gitId":"-"},"content":"   * If you are not using an IDE, we\u0027ll let you figure out how to achieve the same using your coding toolchain.","lastModifiedDate":"2021-07-31"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"## Setting a breakpoint","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"As you know, the first step of debugging is to put in a breakpoint where you want the debugger to pause the execution. For example, if you are trying to understand how the App starts up, you would put a breakpoint in the first statement of the `main` method.","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"In our case, we would want to begin the tracing at the very point where the App start processing user input (i.e., somewhere in the UI component), and then trace through how the execution proceeds through the UI component. However, the execution path through a GUI is often somewhat obscure due to various *event-driven mechanisms* used by GUI frameworks, which happens to be the case here too. Therefore, let us put the breakpoint where the `UI` transfers control to the `Logic` component.","lastModifiedDate":"2021-07-31"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"../images/ArchitectureSequenceDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":42,"author":{"gitId":"-"},"content":"According to the sequence diagram you saw earlier (and repeated above for reference), the `UI` component yields control to the `Logic` component through a method named `execute`. Searching through the code base for an `execute()` method that belongs to the `Logic` component yields a promising candidate in `seedu.address.logic.Logic`.","lastModifiedDate":"2021-07-31"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":44,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"../images/tracing/searchResultsForExecuteMethod.png\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":46,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":48,"author":{"gitId":"-"},"content":":bulb: **Intellij Tip:** The [\u0027**Search Everywhere**\u0027 feature](https://www.jetbrains.com/help/idea/searching-everywhere.html) can be used here. In particular, the \u0027**Find Symbol**\u0027 (\u0027Symbol\u0027 here refers to methods, variables, classes etc.) variant of that feature is quite useful here as we are looking for a _method_ named `execute`, not simply the text `execute`.","lastModifiedDate":"2021-07-31"},{"lineNumber":49,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":51,"author":{"gitId":"-"},"content":"A quick look at the `seedu.address.logic.Logic` (an extract given below) confirms that this indeed might be what we’re looking for.","lastModifiedDate":"2021-07-31"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":53,"author":{"gitId":"-"},"content":"```java","lastModifiedDate":"2021-07-31"},{"lineNumber":54,"author":{"gitId":"-"},"content":"public interface Logic {","lastModifiedDate":"2021-07-31"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-07-31"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2021-07-31"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * @param commandText The command as entered by the user.","lastModifiedDate":"2021-07-31"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * @return the result of the command execution.","lastModifiedDate":"2021-07-31"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2021-07-31"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * @throws ParseException If an error occurs during parsing.","lastModifiedDate":"2021-07-31"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-07-31"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    CommandResult execute(String commandText) throws CommandException, ParseException;","lastModifiedDate":"2021-07-31"},{"lineNumber":63,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2021-07-31"},{"lineNumber":64,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-07-31"},{"lineNumber":65,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-31"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":67,"author":{"gitId":"-"},"content":"But apparently, this is an interface, not a concrete implementation.","lastModifiedDate":"2021-07-31"},{"lineNumber":68,"author":{"gitId":"-"},"content":"That should be fine because the [Architecture section of the Developer Guide](../DeveloperGuide.html#architecture) tells us that components interact through interfaces. Here\u0027s the relevant diagram:","lastModifiedDate":"2021-07-31"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":70,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"../images/ComponentManagers.png\" width\u003d\"300\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":72,"author":{"gitId":"-"},"content":"Next, let\u0027s find out which statement(s) in the `UI` code is calling this method, thus transferring control from the `UI` to the `Logic`.","lastModifiedDate":"2021-07-31"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":74,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":76,"author":{"gitId":"-"},"content":":bulb: **Intellij Tip:** The [\u0027**Find Usages**\u0027 feature](https://www.jetbrains.com/help/idea/find-highlight-usages.html#find-usages) can find from which parts of the code a class/method/variable is being used.","lastModifiedDate":"2021-07-31"},{"lineNumber":77,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"![`Find Usages` tool window. `Edit` \\\u003e `Find` \\\u003e `Find Usages`.](../images/tracing/FindUsages.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"Bingo\\! `MainWindow#executeCommand()` seems to be exactly what we’re looking for\\!","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"Now let’s set the breakpoint. First, double-click the item to reach the corresponding code. Once there, click on the left gutter to set a breakpoint, as shown below.","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":" ![LeftGutter](../images/tracing/LeftGutter.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"## Tracing the execution path","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"Recall from the User Guide that the `edit` command has the format: `edit INDEX [n/NAME] [p/PHONE] [e/EMAIL] [a/ADDRESS] [t/TAG]…​` For this tutorial we will be issuing the command `edit 1 n/Alice Yeoh`.","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":":bulb: **Tip:** Over the course of the debugging session, you will encounter every major component in the application. Try to keep track of what happens inside the component and where the execution transfers to another component.","lastModifiedDate":"2021-07-31"},{"lineNumber":93,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"1. To start the debugging session, simply `Run` \\\u003e `Debug Main`","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"1. When the GUI appears, enter `edit 1 n/Alice Yeoh` into the command box and press `Enter`.","lastModifiedDate":"2021-07-31"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"1. The Debugger tool window should show up and show something like this:\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":100,"author":{"gitId":"-"},"content":"   ![DebuggerStep1](../images/tracing/DebuggerStep1.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"1. Use the _Show execution point_ feature to jump to the line of code that we stopped at:\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":103,"author":{"gitId":"-"},"content":"   ![ShowExecutionPoint](../images/tracing/ShowExecutionPoint.png)\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":104,"author":{"gitId":"-"},"content":"   `CommandResult commandResult \u003d logic.execute(commandText);` is the line that you end up at (i.e., the place where we put the breakpoint).","lastModifiedDate":"2021-07-31"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"1. We are interested in the `logic.execute(commandText)` portion of that line so let’s _Step in_ into that method call:\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    ![StepInto](../images/tracing/StepInto.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"1. We end up in `LogicManager#execute()` (not `Logic#execute` -- but this is expected because we know the `execute()` method in the `Logic` interface is actually implemented by the `LogicManager` class). Let’s take a look at the body of the method. Given below is the same code, with additional explanatory comments.","lastModifiedDate":"2021-07-31"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"   **LogicManager\\#execute().**","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":"   ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"   @Override","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"   public CommandResult execute(String commandText)","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"           throws CommandException, ParseException {","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        //Logging, safe to ignore","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        logger.info(\"----------------[USER COMMAND][\" + commandText + \"]\");","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        CommandResult commandResult;","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        //Parse user input from String to a Command","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        Command command \u003d addressBookParser.parseCommand(commandText);","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        //Executes the Command and stores the result","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        commandResult \u003d command.execute(model);","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2020-05-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"            //We can deduce that the previous line of code modifies model in some way","lastModifiedDate":"2020-05-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"            // since it\u0027s being stored here.","lastModifiedDate":"2020-05-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"            storage.saveAddressBook(model.getAddressBook());","lastModifiedDate":"2020-05-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2020-05-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"            throw new CommandException(FILE_OPS_ERROR_MESSAGE + ioe, ioe);","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        return commandResult;","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":"1. `LogicManager#execute()` appears to delegate most of the heavy lifting to other components. Let’s take a closer look at each one.","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"1. _Step over_ the logging code since it is of no interest to us now.","lastModifiedDate":"2021-07-31"},{"lineNumber":142,"author":{"gitId":"-"},"content":"   ![StepOver](../images/tracing/StepOver.png)","lastModifiedDate":"2021-07-31"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"-"},"content":"1. _Step into_ the line where user input in parsed from a String to a Command, which should bring you to the `AddressBookParser#parseCommand()` method (partial code given below):","lastModifiedDate":"2021-07-31"},{"lineNumber":145,"author":{"gitId":"-"},"content":"   ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":"   public Command parseCommand(String userInput) throws ParseException {","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"       ...","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"       final String commandWord \u003d matcher.group(\"commandWord\");","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"       final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"       ...","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"1. _Step over_ the statements in that method until you reach the `switch` statement. The \u0027Variables\u0027 window now shows the value of both `commandWord` and `arguments`:\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    ![Variables](../images/tracing/Variables.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"1. We see that the value of `commandWord` is now `edit` but `arguments` is still not processed in any meaningful way.","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"1. Stepping through the `switch` block, we end up at a call to `EditCommandParser().parse()` as expected (because the command we typed is an edit command).","lastModifiedDate":"2021-07-31"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    ...","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    case EditCommand.COMMAND_WORD:","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        return new EditCommandParser().parse(arguments);","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    ...","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    ```","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"1. Let’s see what `EditCommandParser#parse()` does by stepping into it. You might have to click the \u0027step into\u0027 button multiple times here because there are two method calls in that statement: `EditCommandParser()` and `parse()`.","lastModifiedDate":"2021-07-31"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"   \u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Intellij Tip:** Sometimes, you might end up stepping into functions that are not of interest. Simply use the `step out` button to get out of them!","lastModifiedDate":"2021-07-31"},{"lineNumber":170,"author":{"gitId":"-"},"content":"   \u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"1. Stepping through the method shows that it calls `ArgumentTokenizer#tokenize()` and `ParserUtil#parseIndex()` to obtain the arguments and index required.","lastModifiedDate":"2021-07-31"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":174,"author":{"gitId":"-"},"content":"1. The rest of the method seems to exhaustively check for the existence of each possible parameter of the `edit` command and store any possible changes in an `EditPersonDescriptor`. Recall that we can verify the contents of `editPersonDesciptor` through the \u0027Variables\u0027 window.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":175,"author":{"gitId":"-"},"content":"   ![EditCommand](../images/tracing/EditCommand.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"1. As you just traced through some code involved in parsing a command, you can take a look at this class diagram to see where the various parsing-related classes you encountered fit into the design of the `Logic` component.","lastModifiedDate":"2021-07-31"},{"lineNumber":178,"author":{"gitId":"-"},"content":"   \u003cimg src\u003d\"../images/ParserClasses.png\" width\u003d\"600\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":180,"author":{"gitId":"-"},"content":"1. Let’s continue stepping through until we return to `LogicManager#execute()`.","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    The sequence diagram below shows the details of the execution path through the Logic component. Does the execution path you traced in the code so far match the diagram?\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    ![Tracing an `edit` command through the Logic component](../images/tracing/LogicSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":"1. Now, step over until you read the statement that calls the `execute()` method of the `EditCommand` object received, and step into that `execute()` method (partial code given below):","lastModifiedDate":"2021-07-31"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"   **`EditCommand#execute()`:**","lastModifiedDate":"2021-07-31"},{"lineNumber":188,"author":{"gitId":"-"},"content":"   ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"   @Override","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"   public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"       ...","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"       Person personToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"       Person editedPerson \u003d createEditedPerson(personToEdit, editPersonDescriptor);","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"       if (!personToEdit.isSamePerson(editedPerson) \u0026\u0026 model.hasPerson(editedPerson)) {","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"tsinyee"},"content":"           throw new CommandException(MESSAGE_DUPLICATE_MEMBER);","lastModifiedDate":"2021-10-05"},{"lineNumber":196,"author":{"gitId":"-"},"content":"       }","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"       model.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":"       model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":"       return new CommandResult(String.format(MESSAGE_EDIT_PERSON_SUCCESS, editedPerson));","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"-"},"content":"   }","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"1. As suspected, `command#execute()` does indeed make changes to the `model` object. Specifically,","lastModifiedDate":"2021-07-31"},{"lineNumber":204,"author":{"gitId":"-"},"content":"   * it uses the `setPerson()` method (defined in the interface `Model` and implemented in `ModelManager` as per the usual pattern) to update the person data.","lastModifiedDate":"2021-07-31"},{"lineNumber":205,"author":{"gitId":"-"},"content":"   * it uses the `updateFilteredPersonList` method to ask the `Model` to populate the \u0027filtered list\u0027 with _all_ persons.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":206,"author":{"gitId":"-"},"content":"     FYI, The \u0027filtered list\u0027 is the list of persons resulting from the most recent operation that will be shown to the user immediately after. For the `edit` command, we populate it with all the persons so that the user can see the edited person along with all other persons. If this was a `find` command, we would be setting that list to contain the search results instead.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":207,"author":{"gitId":"-"},"content":"     To provide some context, given below is the class diagram of the `Model` component. See if you can figure out where the \u0027filtered list\u0027 of persons is being tracked.","lastModifiedDate":"2021-07-31"},{"lineNumber":208,"author":{"gitId":"-"},"content":"     \u003cimg src\u003d\"../images/ModelClassDiagram.png\" width\u003d\"450\" /\u003e\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":209,"author":{"gitId":"-"},"content":"   * :bulb: This may be a good time to read through the [`Model` component section of the DG](../DeveloperGuide.html#model-component)","lastModifiedDate":"2021-07-31"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":"1. As you step through the rest of the statements in the `EditCommand#execute()` method, you\u0027ll see that it creates a `CommandResult` object (containing information about the result of the execution) and returns it.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":212,"author":{"gitId":"-"},"content":"   Advancing the debugger by one more step should take you back to the middle of the `LogicManager#execute()` method.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"1. Given that you have already seen quite a few classes in the `Logic` component in action, see if you can identify in this partial class diagram some of the classes you\u0027ve encountered so far, and see how they fit into the class structure of the `Logic` component:","lastModifiedDate":"2021-07-31"},{"lineNumber":215,"author":{"gitId":"-"},"content":"    \u003cimg src\u003d\"../images/LogicClassDiagram.png\" width\u003d\"550\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":216,"author":{"gitId":"-"},"content":"   * :bulb: This may be a good time to read through the [`Logic` component section of the DG](../DeveloperGuide.html#logic-component)","lastModifiedDate":"2021-07-31"},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":"1. Similar to before, you can step over/into statements in the `LogicManager#execute()` method to examine how the control is transferred to the `Storage` component and what happens inside that component.","lastModifiedDate":"2021-07-31"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":220,"author":{"gitId":"-"},"content":"   \u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Intellij Tip:** When trying to step into a statement such as `storage.saveAddressBook(model.getAddressBook())` which contains multiple method calls, Intellij will let you choose (by clicking) which one you want to step into.","lastModifiedDate":"2021-07-31"},{"lineNumber":221,"author":{"gitId":"-"},"content":"   \u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":223,"author":{"gitId":"-"},"content":"1.  As you step through the code inside the `Storage` component, you will eventually arrive at the `JsonAddressBook#saveAddressBook()` method which calls the `JsonSerializableAddressBook` constructor, to create an object that can be _serialized_ (i.e., stored in storage medium) in JSON format. That constructor is given below (with added line breaks for easier readability):","lastModifiedDate":"2021-07-31"},{"lineNumber":224,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":225,"author":{"gitId":"-"},"content":"    **`JsonSerializableAddressBook` constructor:**","lastModifiedDate":"2021-07-31"},{"lineNumber":226,"author":{"gitId":"-"},"content":"    ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":"     * Converts a given {@code ReadOnlyAddressBook} into this class for Jackson use.","lastModifiedDate":"2020-05-23"},{"lineNumber":229,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":"     * @param source future changes to this will not affect the created","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"     * {@code JsonSerializableAddressBook}.","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"-"},"content":"    public JsonSerializableAddressBook(ReadOnlyAddressBook source) {","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"-"},"content":"        persons.addAll(","lastModifiedDate":"2020-05-23"},{"lineNumber":235,"author":{"gitId":"-"},"content":"            source.getPersonList()","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":"                  .stream()","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":"                  .map(JsonAdaptedPerson::new)","lastModifiedDate":"2020-05-23"},{"lineNumber":238,"author":{"gitId":"-"},"content":"                  .collect(Collectors.toList()));","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"    ```","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"-"},"content":"1. It appears that a `JsonAdaptedPerson` is created for each `Person` and then added to the `JsonSerializableAddressBook`.","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"-"},"content":"   This is because regular Java objects need to go through an _adaptation_ for them to be suitable to be saved in JSON format.","lastModifiedDate":"2021-07-31"},{"lineNumber":244,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":245,"author":{"gitId":"-"},"content":"1. While you are stepping through the classes in the `Storage` component, here is the component\u0027s class diagram to help you understand how those classes fit into the structure of the component.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":246,"author":{"gitId":"-"},"content":"   \u003cimg src\u003d\"../images/StorageClassDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":247,"author":{"gitId":"-"},"content":"   * :bulb: This may be a good time to read through the [`Storage` component section of the DG](../DeveloperGuide.html#storage-component)","lastModifiedDate":"2021-07-31"},{"lineNumber":248,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":249,"author":{"gitId":"-"},"content":"1. We can continue to step through until you reach the end of the `LogicManager#execute()` method and return to the `MainWindow#executeCommand()` method (the place where we put the original breakpoint).","lastModifiedDate":"2021-07-31"},{"lineNumber":250,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":251,"author":{"gitId":"-"},"content":"1. Stepping into `resultDisplay.setFeedbackToUser(commandResult.getFeedbackToUser());`, we end up in:","lastModifiedDate":"2021-07-31"},{"lineNumber":252,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":253,"author":{"gitId":"-"},"content":"    **`ResultDisplay#setFeedbackToUser()`**","lastModifiedDate":"2021-07-31"},{"lineNumber":254,"author":{"gitId":"-"},"content":"    ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":255,"author":{"gitId":"-"},"content":"    public void setFeedbackToUser(String feedbackToUser) {","lastModifiedDate":"2020-05-23"},{"lineNumber":256,"author":{"gitId":"-"},"content":"        requireNonNull(feedbackToUser);","lastModifiedDate":"2020-05-23"},{"lineNumber":257,"author":{"gitId":"-"},"content":"        resultDisplay.setText(feedbackToUser);","lastModifiedDate":"2020-05-23"},{"lineNumber":258,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":259,"author":{"gitId":"-"},"content":"    ```","lastModifiedDate":"2020-05-23"},{"lineNumber":260,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":261,"author":{"gitId":"-"},"content":"1. Finally, you can step through until you reach the end of`MainWindow#executeCommand()`.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":262,"author":{"gitId":"-"},"content":"   :bulb: This may be a good time to read through the [`UI` component section of the DG](../DeveloperGuide.html#ui-component)","lastModifiedDate":"2021-07-31"},{"lineNumber":263,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":264,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":265,"author":{"gitId":"-"},"content":"## Conclusion","lastModifiedDate":"2020-05-23"},{"lineNumber":266,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":267,"author":{"gitId":"-"},"content":"In this tutorial, we traced a valid edit command from raw user input to the result being displayed to the user. From this tutorial, you learned more about how the various components work together to produce a response to a user command.","lastModifiedDate":"2021-07-31"},{"lineNumber":268,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":269,"author":{"gitId":"-"},"content":"Here are some quick questions you can try to answer based on your execution path tracing. In some cases, you can do further tracing for the given commands to find exactly what happens.","lastModifiedDate":"2021-07-31"},{"lineNumber":270,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":271,"author":{"gitId":"-"},"content":"1.  In this tutorial, we traced the \"happy path\" (i.e., no errors). What","lastModifiedDate":"2020-05-23"},{"lineNumber":272,"author":{"gitId":"-"},"content":"    do you think will happen if we traced the following commands","lastModifiedDate":"2020-05-23"},{"lineNumber":273,"author":{"gitId":"-"},"content":"    instead? What exceptions do you think will be thrown (if any), where","lastModifiedDate":"2020-05-23"},{"lineNumber":274,"author":{"gitId":"-"},"content":"    will the exceptions be thrown and where will they be handled?","lastModifiedDate":"2020-05-23"},{"lineNumber":275,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":276,"author":{"gitId":"-"},"content":"    1.  `redit 1 n/Alice Yu`","lastModifiedDate":"2020-05-23"},{"lineNumber":277,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":278,"author":{"gitId":"-"},"content":"    2.  `edit 0 n/Alice Yu`","lastModifiedDate":"2020-05-23"},{"lineNumber":279,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":280,"author":{"gitId":"-"},"content":"    3.  `edit 1 n/Alex Yeoh`","lastModifiedDate":"2020-05-23"},{"lineNumber":281,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":282,"author":{"gitId":"-"},"content":"    4.  `edit 1`","lastModifiedDate":"2020-05-23"},{"lineNumber":283,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":284,"author":{"gitId":"-"},"content":"    5.  `edit 1 n/アリス ユー`","lastModifiedDate":"2020-05-23"},{"lineNumber":285,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":286,"author":{"gitId":"-"},"content":"    6.  `edit 1 t/one t/two t/three t/one`","lastModifiedDate":"2020-05-23"},{"lineNumber":287,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":288,"author":{"gitId":"-"},"content":"2.  What components will you have to modify to perform the following","lastModifiedDate":"2020-05-23"},{"lineNumber":289,"author":{"gitId":"-"},"content":"    enhancements to the application?","lastModifiedDate":"2020-05-23"},{"lineNumber":290,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":291,"author":{"gitId":"-"},"content":"    1.  Make command words case-insensitive","lastModifiedDate":"2020-05-23"},{"lineNumber":292,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":293,"author":{"gitId":"-"},"content":"    2.  Allow `delete` to remove more than one index at a time","lastModifiedDate":"2020-05-23"},{"lineNumber":294,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":295,"author":{"gitId":"-"},"content":"    3.  Save the address book in the CSV format instead","lastModifiedDate":"2020-05-23"},{"lineNumber":296,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":297,"author":{"gitId":"-"},"content":"    4.  Add a new command","lastModifiedDate":"2020-05-23"},{"lineNumber":298,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":299,"author":{"gitId":"-"},"content":"    5.  Add a new field to `Person`","lastModifiedDate":"2020-05-23"},{"lineNumber":300,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":301,"author":{"gitId":"-"},"content":"    6.  Add a new entity to the address book","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"-":300,"tsinyee":1}},{"path":"src/main/java/seedu/address/MainApp.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2016-08-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Config;","lastModifiedDate":"2016-09-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Version;","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2016-09-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ConfigUtil;","lastModifiedDate":"2016-10-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2016-09-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.Logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.LogicManager;","lastModifiedDate":"2016-09-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-01-18"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-01-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-01-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2017-01-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-12-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-01-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.util.SampleDataUtil;","lastModifiedDate":"2016-12-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.storage.AddressBookStorage;","lastModifiedDate":"2017-02-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonAddressBookStorage;","lastModifiedDate":"2018-11-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonUserPrefsStorage;","lastModifiedDate":"2017-02-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.storage.Storage;","lastModifiedDate":"2016-09-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.storage.StorageManager;","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.storage.UserPrefsStorage;","lastModifiedDate":"2017-02-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.ui.Ui;","lastModifiedDate":"2016-09-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.ui.UiManager;","lastModifiedDate":"2016-09-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":" * Runs the application.","lastModifiedDate":"2019-02-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"public class MainApp extends Application {","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"tsinyee"},"content":"    public static final Version VERSION \u003d new Version(1, 3, 1, true);","lastModifiedDate":"2021-10-29"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(MainApp.class);","lastModifiedDate":"2017-04-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    protected Ui ui;","lastModifiedDate":"2016-09-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    protected Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    protected Storage storage;","lastModifiedDate":"2016-09-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    protected Model model;","lastModifiedDate":"2016-09-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    protected Config config;","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void init() throws Exception {","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d[ Initializing AddressBook ]\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2016-09-29"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        super.init();","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        AppParameters appParameters \u003d AppParameters.parse(getParameters());","lastModifiedDate":"2018-04-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        config \u003d initConfig(appParameters.getConfigPath());","lastModifiedDate":"2018-04-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        UserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(config.getUserPrefsFilePath());","lastModifiedDate":"2017-02-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d initPrefs(userPrefsStorage);","lastModifiedDate":"2018-12-06"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        AddressBookStorage addressBookStorage \u003d new JsonAddressBookStorage(userPrefs.getAddressBookFilePath());","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2017-02-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        initLogging(config);","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        model \u003d initModelManager(storage, userPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        ui \u003d new UiManager(logic);","lastModifiedDate":"2018-12-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * Returns a {@code ModelManager} with the data from {@code storage}\u0027s address book and {@code userPrefs}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * The data from the sample address book will be used instead if {@code storage}\u0027s address book is not found,","lastModifiedDate":"2017-08-16"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * or an empty address book will be used instead if errors occur when reading {@code storage}\u0027s address book.","lastModifiedDate":"2017-08-16"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    private Model initModelManager(Storage storage, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        Optional\u003cReadOnlyAddressBook\u003e addressBookOptional;","lastModifiedDate":"2016-09-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        ReadOnlyAddressBook initialData;","lastModifiedDate":"2016-09-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"            addressBookOptional \u003d storage.readAddressBook();","lastModifiedDate":"2016-09-25"},{"lineNumber":81,"author":{"gitId":"-"},"content":"            if (!addressBookOptional.isPresent()) {","lastModifiedDate":"2016-09-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"                logger.info(\"Data file not found. Will be starting with a sample AddressBook\");","lastModifiedDate":"2016-12-20"},{"lineNumber":83,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-09-24"},{"lineNumber":84,"author":{"gitId":"-"},"content":"            initialData \u003d addressBookOptional.orElseGet(SampleDataUtil::getSampleAddressBook);","lastModifiedDate":"2016-12-20"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"            logger.warning(\"Data file not in the correct format. Will be starting with an empty AddressBook\");","lastModifiedDate":"2016-09-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            initialData \u003d new AddressBook();","lastModifiedDate":"2016-09-24"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-10-01"},{"lineNumber":89,"author":{"gitId":"-"},"content":"            logger.warning(\"Problem while reading from the file. Will be starting with an empty AddressBook\");","lastModifiedDate":"2016-10-12"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            initialData \u003d new AddressBook();","lastModifiedDate":"2016-09-24"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        return new ModelManager(initialData, userPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    private void initLogging(Config config) {","lastModifiedDate":"2016-09-24"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        LogsCenter.init(config);","lastModifiedDate":"2016-09-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * Returns a {@code Config} using the file at {@code configFilePath}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * The default file path {@code Config#DEFAULT_CONFIG_FILE} will be used instead","lastModifiedDate":"2017-08-16"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * if {@code configFilePath} is null.","lastModifiedDate":"2017-08-16"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    protected Config initConfig(Path configFilePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        Config initializedConfig;","lastModifiedDate":"2016-09-24"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        Path configFilePathUsed;","lastModifiedDate":"2018-04-21"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        configFilePathUsed \u003d Config.DEFAULT_CONFIG_FILE;","lastModifiedDate":"2016-09-24"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        if (configFilePath !\u003d null) {","lastModifiedDate":"2016-09-24"},{"lineNumber":112,"author":{"gitId":"-"},"content":"            logger.info(\"Custom Config file specified \" + configFilePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":113,"author":{"gitId":"-"},"content":"            configFilePathUsed \u003d configFilePath;","lastModifiedDate":"2016-09-24"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        logger.info(\"Using config file : \" + configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":119,"author":{"gitId":"-"},"content":"            Optional\u003cConfig\u003e configOptional \u003d ConfigUtil.readConfig(configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":120,"author":{"gitId":"-"},"content":"            initializedConfig \u003d configOptional.orElse(new Config());","lastModifiedDate":"2016-09-24"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":122,"author":{"gitId":"-"},"content":"            logger.warning(\"Config file at \" + configFilePathUsed + \" is not in the correct format. \"","lastModifiedDate":"2017-05-22"},{"lineNumber":123,"author":{"gitId":"-"},"content":"                    + \"Using default config properties\");","lastModifiedDate":"2017-05-22"},{"lineNumber":124,"author":{"gitId":"-"},"content":"            initializedConfig \u003d new Config();","lastModifiedDate":"2016-09-24"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        //Update config file in case it was missing to begin with or there are new/unused fields","lastModifiedDate":"2016-09-24"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":129,"author":{"gitId":"-"},"content":"            ConfigUtil.saveConfig(initializedConfig, configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":131,"author":{"gitId":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        return initializedConfig;","lastModifiedDate":"2016-09-24"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":137,"author":{"gitId":"-"},"content":"     * Returns a {@code UserPrefs} using the file at {@code storage}\u0027s user prefs file path,","lastModifiedDate":"2017-08-16"},{"lineNumber":138,"author":{"gitId":"-"},"content":"     * or a new {@code UserPrefs} with default configuration if errors occur when","lastModifiedDate":"2017-08-16"},{"lineNumber":139,"author":{"gitId":"-"},"content":"     * reading from the file.","lastModifiedDate":"2017-08-16"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    protected UserPrefs initPrefs(UserPrefsStorage storage) {","lastModifiedDate":"2017-02-25"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        Path prefsFilePath \u003d storage.getUserPrefsFilePath();","lastModifiedDate":"2018-04-21"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        logger.info(\"Using prefs file : \" + prefsFilePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        UserPrefs initializedPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":147,"author":{"gitId":"-"},"content":"            Optional\u003cUserPrefs\u003e prefsOptional \u003d storage.readUserPrefs();","lastModifiedDate":"2016-09-25"},{"lineNumber":148,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d prefsOptional.orElse(new UserPrefs());","lastModifiedDate":"2016-09-24"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":150,"author":{"gitId":"-"},"content":"            logger.warning(\"UserPrefs file at \" + prefsFilePath + \" is not in the correct format. \"","lastModifiedDate":"2017-05-22"},{"lineNumber":151,"author":{"gitId":"-"},"content":"                    + \"Using default user prefs\");","lastModifiedDate":"2017-05-22"},{"lineNumber":152,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":154,"author":{"gitId":"-"},"content":"            logger.warning(\"Problem while reading from the file. Will be starting with an empty AddressBook\");","lastModifiedDate":"2016-10-12"},{"lineNumber":155,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        //Update prefs file in case it was missing to begin with or there are new/unused fields","lastModifiedDate":"2016-09-24"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":160,"author":{"gitId":"-"},"content":"            storage.saveUserPrefs(initializedPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":162,"author":{"gitId":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        return initializedPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    public void start(Stage primaryStage) {","lastModifiedDate":"2016-08-08"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        logger.info(\"Starting AddressBook \" + MainApp.VERSION);","lastModifiedDate":"2016-09-29"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        ui.start(primaryStage);","lastModifiedDate":"2016-09-25"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    public void stop() {","lastModifiedDate":"2016-08-08"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d [ Stopping Address Book ] \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2016-09-29"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":178,"author":{"gitId":"-"},"content":"            storage.saveUserPrefs(model.getUserPrefs());","lastModifiedDate":"2018-12-06"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":180,"author":{"gitId":"-"},"content":"            logger.severe(\"Failed to save preferences \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":183,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"-":182,"tsinyee":1}},{"path":"src/main/java/seedu/address/commons/core/Messages.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.core;","lastModifiedDate":"2016-09-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Container for user visible messages.","lastModifiedDate":"2016-08-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class Messages {","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"YoYoCiti"},"content":"    // General Messages","lastModifiedDate":"2021-10-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_UNKNOWN_COMMAND \u003d \"Unknown command\";","lastModifiedDate":"2016-09-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_COMMAND_FORMAT \u003d \"Invalid command format! \\n%1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":12,"author":{"gitId":"YoYoCiti"},"content":"    // Member-specific Messages","lastModifiedDate":"2021-10-08"},{"lineNumber":13,"author":{"gitId":"felix-ong"},"content":"    public static final String MESSAGE_INVALID_MEMBER_DISPLAYED_INDEX \u003d \"The member index provided is invalid\";","lastModifiedDate":"2021-10-05"},{"lineNumber":14,"author":{"gitId":"felix-ong"},"content":"    public static final String MESSAGE_MEMBERS_LISTED_OVERVIEW \u003d \"%1$d members listed!\";","lastModifiedDate":"2021-10-05"},{"lineNumber":15,"author":{"gitId":"felix-ong"},"content":"    public static final String MESSAGE_MEMBER_NOT_AVAILABLE \u003d \"The member is not available on that day\";","lastModifiedDate":"2021-10-23"},{"lineNumber":16,"author":{"gitId":"felix-ong"},"content":"    public static final String MESSAGE_MEMBER_ALREADY_ALLOCATED \u003d","lastModifiedDate":"2021-10-23"},{"lineNumber":17,"author":{"gitId":"felix-ong"},"content":"            \"The member has already been allocated to that facility\";","lastModifiedDate":"2021-10-23"},{"lineNumber":18,"author":{"gitId":"felix-ong"},"content":"    public static final String MESSAGE_MEMBER_NOT_ALLOCATED \u003d","lastModifiedDate":"2021-10-26"},{"lineNumber":19,"author":{"gitId":"felix-ong"},"content":"            \"The member is not allocated to that facility\";","lastModifiedDate":"2021-10-26"},{"lineNumber":20,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":21,"author":{"gitId":"YoYoCiti"},"content":"    // Facility-specific Messages","lastModifiedDate":"2021-10-08"},{"lineNumber":22,"author":{"gitId":"YoYoCiti"},"content":"    public static final String MESSAGE_FACILITIES_LISTED_OVERVIEW \u003d \"%1$d facilities listed!\";","lastModifiedDate":"2021-09-29"},{"lineNumber":23,"author":{"gitId":"Shruthi0310"},"content":"    public static final String MESSAGE_INVALID_FACILITY_DISPLAYED_INDEX \u003d \"The facility index provided is invalid\";","lastModifiedDate":"2021-10-12"},{"lineNumber":24,"author":{"gitId":"felix-ong"},"content":"    public static final String MESSAGE_FACILITY_AT_MAX_CAPACITY \u003d \"The facility provided is already at max capacity\";","lastModifiedDate":"2021-10-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":26,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"YoYoCiti":6,"Shruthi0310":1,"-":11,"felix-ong":8}},{"path":"src/main/java/seedu/address/commons/util/StringUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.util;","lastModifiedDate":"2016-09-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.io.PrintWriter;","lastModifiedDate":"2016-09-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.StringWriter;","lastModifiedDate":"2016-09-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Helper functions for handling strings.","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class StringUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * Returns true if the {@code sentence} contains the {@code word}.","lastModifiedDate":"2016-10-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     *   Ignores case, but a full word match is required.","lastModifiedDate":"2016-10-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     *   \u003cbr\u003eexamples:\u003cpre\u003e","lastModifiedDate":"2016-10-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"abc\") \u003d\u003d true","lastModifiedDate":"2016-10-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"DEF\") \u003d\u003d true","lastModifiedDate":"2016-10-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"AB\") \u003d\u003d false //not a full word match","lastModifiedDate":"2016-10-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     *       \u003c/pre\u003e","lastModifiedDate":"2016-10-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @param sentence cannot be null","lastModifiedDate":"2016-10-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @param word cannot be null, cannot be empty, must be a single word","lastModifiedDate":"2016-10-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static boolean containsWordIgnoreCase(String sentence, String word) {","lastModifiedDate":"2016-10-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        requireNonNull(sentence);","lastModifiedDate":"2017-05-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        requireNonNull(word);","lastModifiedDate":"2017-05-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        String preppedWord \u003d word.trim();","lastModifiedDate":"2016-10-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        checkArgument(!preppedWord.isEmpty(), \"Word parameter cannot be empty\");","lastModifiedDate":"2017-05-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        checkArgument(preppedWord.split(\"\\\\s+\").length \u003d\u003d 1, \"Word parameter should be a single word\");","lastModifiedDate":"2021-10-31"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        String preppedSentence \u003d sentence;","lastModifiedDate":"2016-10-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        String[] wordsInPreppedSentence \u003d preppedSentence.split(\"\\\\s+\");","lastModifiedDate":"2016-10-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return Arrays.stream(wordsInPreppedSentence)","lastModifiedDate":"2018-01-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"                .anyMatch(preppedWord::equalsIgnoreCase);","lastModifiedDate":"2018-01-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Returns a detailed message of the t, including the stack trace.","lastModifiedDate":"2016-09-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public static String getDetails(Throwable t) {","lastModifiedDate":"2016-09-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        requireNonNull(t);","lastModifiedDate":"2017-05-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        StringWriter sw \u003d new StringWriter();","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        t.printStackTrace(new PrintWriter(sw));","lastModifiedDate":"2016-09-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        return t.getMessage() + \"\\n\" + sw.toString();","lastModifiedDate":"2016-09-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-22"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Returns true if {@code s} represents a non-zero unsigned integer","lastModifiedDate":"2017-06-02"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * e.g. 1, 2, 3, ..., {@code Integer.MAX_VALUE} \u003cbr\u003e","lastModifiedDate":"2017-06-02"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * Will return false for any other non-null string input","lastModifiedDate":"2017-06-02"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * e.g. empty string, \"-1\", \"0\", \"+1\", and \" 2 \" (untrimmed), \"3 0\" (contains whitespace), \"1 a\" (contains letters)","lastModifiedDate":"2017-06-02"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * @throws NullPointerException if {@code s} is null.","lastModifiedDate":"2017-06-02"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-22"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public static boolean isNonZeroUnsignedInteger(String s) {","lastModifiedDate":"2017-06-02"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        requireNonNull(s);","lastModifiedDate":"2017-06-02"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-06-02"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            int value \u003d Integer.parseInt(s);","lastModifiedDate":"2017-06-02"},{"lineNumber":63,"author":{"gitId":"tsinyee"},"content":"            return value \u003e 0 \u0026\u0026 !s.startsWith(\"+\") \u0026\u0026 !s.startsWith(\"-\");","lastModifiedDate":"2021-10-28"},{"lineNumber":64,"author":{"gitId":"tsinyee"},"content":"            // \"+1\" is successfully parsed by Integer#parseInt(String)","lastModifiedDate":"2021-10-28"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        } catch (NumberFormatException nfe) {","lastModifiedDate":"2017-06-02"},{"lineNumber":66,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-06-02"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-06-02"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":69,"author":{"gitId":"tsinyee"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":70,"author":{"gitId":"tsinyee"},"content":"    /**","lastModifiedDate":"2021-10-28"},{"lineNumber":71,"author":{"gitId":"tsinyee"},"content":"     * Returns true if {@code s} represents a non-negative unsigned integer","lastModifiedDate":"2021-10-28"},{"lineNumber":72,"author":{"gitId":"tsinyee"},"content":"     * e.g. 0, 1, 2, 3, ..., {@code Integer.MAX_VALUE} \u003cbr\u003e","lastModifiedDate":"2021-10-28"},{"lineNumber":73,"author":{"gitId":"tsinyee"},"content":"     * Will return false for any other non-null string input","lastModifiedDate":"2021-10-28"},{"lineNumber":74,"author":{"gitId":"tsinyee"},"content":"     * e.g. empty string, \"-1\", \"+0\", \"+1\", and \" 2 \" (untrimmed), \"3 0\" (contains whitespace), \"1 a\" (contains letters)","lastModifiedDate":"2021-10-28"},{"lineNumber":75,"author":{"gitId":"tsinyee"},"content":"     * @throws NullPointerException if {@code s} is null.","lastModifiedDate":"2021-10-28"},{"lineNumber":76,"author":{"gitId":"tsinyee"},"content":"     */","lastModifiedDate":"2021-10-28"},{"lineNumber":77,"author":{"gitId":"tsinyee"},"content":"    public static boolean isNonNegativeUnsignedInteger(String s) {","lastModifiedDate":"2021-10-28"},{"lineNumber":78,"author":{"gitId":"tsinyee"},"content":"        requireNonNull(s);","lastModifiedDate":"2021-10-28"},{"lineNumber":79,"author":{"gitId":"tsinyee"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":80,"author":{"gitId":"tsinyee"},"content":"        try {","lastModifiedDate":"2021-10-28"},{"lineNumber":81,"author":{"gitId":"tsinyee"},"content":"            int value \u003d Integer.parseInt(s);","lastModifiedDate":"2021-10-28"},{"lineNumber":82,"author":{"gitId":"tsinyee"},"content":"            return value \u003e\u003d 0 \u0026\u0026 !s.startsWith(\"+\") \u0026\u0026 !s.startsWith(\"-\");","lastModifiedDate":"2021-10-28"},{"lineNumber":83,"author":{"gitId":"tsinyee"},"content":"            // \"+1\" is successfully parsed by Integer#parseInt(String)","lastModifiedDate":"2021-10-28"},{"lineNumber":84,"author":{"gitId":"tsinyee"},"content":"        } catch (NumberFormatException nfe) {","lastModifiedDate":"2021-10-28"},{"lineNumber":85,"author":{"gitId":"tsinyee"},"content":"            return false;","lastModifiedDate":"2021-10-28"},{"lineNumber":86,"author":{"gitId":"tsinyee"},"content":"        }","lastModifiedDate":"2021-10-28"},{"lineNumber":87,"author":{"gitId":"tsinyee"},"content":"    }","lastModifiedDate":"2021-10-28"},{"lineNumber":88,"author":{"gitId":"tsinyee"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":89,"author":{"gitId":"tsinyee"},"content":"    /**","lastModifiedDate":"2021-10-28"},{"lineNumber":90,"author":{"gitId":"tsinyee"},"content":"     * Returns true if {@code s} represents a boolean value","lastModifiedDate":"2021-10-28"},{"lineNumber":91,"author":{"gitId":"tsinyee"},"content":"     * Will return false for any other non-null string input","lastModifiedDate":"2021-10-28"},{"lineNumber":92,"author":{"gitId":"tsinyee"},"content":"     * e.g. empty string, \"f\", \"1\", \" true \" (untrimmed), \"t rue\" (contains whitespace)","lastModifiedDate":"2021-10-28"},{"lineNumber":93,"author":{"gitId":"tsinyee"},"content":"     * @throws NullPointerException if {@code s} is null.","lastModifiedDate":"2021-10-28"},{"lineNumber":94,"author":{"gitId":"tsinyee"},"content":"     */","lastModifiedDate":"2021-10-28"},{"lineNumber":95,"author":{"gitId":"tsinyee"},"content":"    public static boolean isValidBooleanValue(String s) {","lastModifiedDate":"2021-10-28"},{"lineNumber":96,"author":{"gitId":"tsinyee"},"content":"        requireNonNull(s);","lastModifiedDate":"2021-10-28"},{"lineNumber":97,"author":{"gitId":"tsinyee"},"content":"        return s.equalsIgnoreCase(\"false\")","lastModifiedDate":"2021-10-28"},{"lineNumber":98,"author":{"gitId":"tsinyee"},"content":"                || s.equalsIgnoreCase(\"true\");","lastModifiedDate":"2021-10-28"},{"lineNumber":99,"author":{"gitId":"tsinyee"},"content":"    }","lastModifiedDate":"2021-10-28"},{"lineNumber":100,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"-":67,"tsinyee":33}},{"path":"src/main/java/seedu/address/logic/Logic.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2016-09-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-12-03"},{"lineNumber":11,"author":{"gitId":"Shruthi0310"},"content":"import seedu.address.model.facility.Facility;","lastModifiedDate":"2021-10-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * API of the Logic component","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public interface Logic {","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2016-09-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * @param commandText The command as entered by the user.","lastModifiedDate":"2016-09-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * @return the result of the command execution.","lastModifiedDate":"2016-09-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @throws ParseException If an error occurs during parsing.","lastModifiedDate":"2017-03-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    CommandResult execute(String commandText) throws CommandException, ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Returns the AddressBook.","lastModifiedDate":"2018-12-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * @see seedu.address.model.Model#getAddressBook()","lastModifiedDate":"2018-12-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    ReadOnlyAddressBook getAddressBook();","lastModifiedDate":"2018-12-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /** Returns an unmodifiable view of the filtered list of persons */","lastModifiedDate":"2017-09-01"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    ObservableList\u003cPerson\u003e getFilteredPersonList();","lastModifiedDate":"2018-01-10"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-26"},{"lineNumber":37,"author":{"gitId":"Shruthi0310"},"content":"    /** Returns a view of the filitered list of facilities*/","lastModifiedDate":"2021-10-05"},{"lineNumber":38,"author":{"gitId":"Shruthi0310"},"content":"    ObservableList\u003cFacility\u003e getFilteredFacilityList();","lastModifiedDate":"2021-10-05"},{"lineNumber":39,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     * Set the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"Shruthi0310":4,"-":50}},{"path":"src/main/java/seedu/address/logic/LogicManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-29"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2016-09-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2016-09-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.AddressBookParser;","lastModifiedDate":"2017-07-07"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-12-03"},{"lineNumber":17,"author":{"gitId":"Shruthi0310"},"content":"import seedu.address.model.facility.Facility;","lastModifiedDate":"2021-10-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.storage.Storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * The main LogicManager of the app.","lastModifiedDate":"2016-09-22"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class LogicManager implements Logic {","lastModifiedDate":"2018-12-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static final String FILE_OPS_ERROR_MESSAGE \u003d \"Could not save data to file: \";","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(LogicManager.class);","lastModifiedDate":"2016-09-29"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final Model model;","lastModifiedDate":"2016-09-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private final Storage storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private final AddressBookParser addressBookParser;","lastModifiedDate":"2017-07-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Constructs a {@code LogicManager} with the given {@code Model} and {@code Storage}.","lastModifiedDate":"2020-05-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public LogicManager(Model model, Storage storage) {","lastModifiedDate":"2018-12-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        this.model \u003d model;","lastModifiedDate":"2016-09-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        addressBookParser \u003d new AddressBookParser();","lastModifiedDate":"2018-01-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public CommandResult execute(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        logger.info(\"----------------[USER COMMAND][\" + commandText + \"]\");","lastModifiedDate":"2016-09-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        CommandResult commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":46,"author":{"gitId":"YoYoCiti"},"content":"        Command command \u003d addressBookParser.parseCommand(commandText, model.getAliases());","lastModifiedDate":"2021-10-17"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        commandResult \u003d command.execute(model);","lastModifiedDate":"2019-01-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            storage.saveAddressBook(model.getAddressBook());","lastModifiedDate":"2018-12-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2018-12-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            throw new CommandException(FILE_OPS_ERROR_MESSAGE + ioe, ioe);","lastModifiedDate":"2018-12-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-03"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2018-12-03"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        return model.getAddressBook();","lastModifiedDate":"2018-12-03"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-03"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        return model.getFilteredPersonList();","lastModifiedDate":"2016-09-25"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-29"},{"lineNumber":68,"author":{"gitId":"Shruthi0310"},"content":"    @Override","lastModifiedDate":"2021-10-05"},{"lineNumber":69,"author":{"gitId":"Shruthi0310"},"content":"    public ObservableList\u003cFacility\u003e getFilteredFacilityList() {","lastModifiedDate":"2021-10-05"},{"lineNumber":70,"author":{"gitId":"Shruthi0310"},"content":"        return model.getFilteredFacilityList();","lastModifiedDate":"2021-10-05"},{"lineNumber":71,"author":{"gitId":"Shruthi0310"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":72,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        return model.getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        return model.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        model.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"YoYoCiti":1,"Shruthi0310":6,"-":80}},{"path":"src/main/java/seedu/address/logic/commands/AddAliasCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"YoYoCiti"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-10-17"},{"lineNumber":2,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":3,"author":{"gitId":"YoYoCiti"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-17"},{"lineNumber":4,"author":{"gitId":"YoYoCiti"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_COMMAND_WORD;","lastModifiedDate":"2021-10-17"},{"lineNumber":5,"author":{"gitId":"YoYoCiti"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_SHORTCUT;","lastModifiedDate":"2021-10-18"},{"lineNumber":6,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":7,"author":{"gitId":"YoYoCiti"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-17"},{"lineNumber":8,"author":{"gitId":"YoYoCiti"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-10-17"},{"lineNumber":9,"author":{"gitId":"YoYoCiti"},"content":"import seedu.address.model.alias.Alias;","lastModifiedDate":"2021-10-18"},{"lineNumber":10,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":11,"author":{"gitId":"YoYoCiti"},"content":"/**","lastModifiedDate":"2021-10-17"},{"lineNumber":12,"author":{"gitId":"YoYoCiti"},"content":" * Adds a user-defined alias to SportsPA user preferences.","lastModifiedDate":"2021-10-17"},{"lineNumber":13,"author":{"gitId":"YoYoCiti"},"content":" */","lastModifiedDate":"2021-10-17"},{"lineNumber":14,"author":{"gitId":"YoYoCiti"},"content":"public class AddAliasCommand extends Command {","lastModifiedDate":"2021-10-17"},{"lineNumber":15,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":16,"author":{"gitId":"YoYoCiti"},"content":"    public static final String COMMAND_WORD \u003d \"alias\";","lastModifiedDate":"2021-10-17"},{"lineNumber":17,"author":{"gitId":"YoYoCiti"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": creates an alias for the specified command word.\\n\"","lastModifiedDate":"2021-10-17"},{"lineNumber":18,"author":{"gitId":"YoYoCiti"},"content":"            + \"Parameters: \"","lastModifiedDate":"2021-10-17"},{"lineNumber":19,"author":{"gitId":"YoYoCiti"},"content":"            + PREFIX_SHORTCUT + \"SHORTCUT \"","lastModifiedDate":"2021-10-18"},{"lineNumber":20,"author":{"gitId":"YoYoCiti"},"content":"            + PREFIX_COMMAND_WORD + \"COMMAND\\n\"","lastModifiedDate":"2021-10-17"},{"lineNumber":21,"author":{"gitId":"YoYoCiti"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2021-10-17"},{"lineNumber":22,"author":{"gitId":"YoYoCiti"},"content":"            + PREFIX_SHORTCUT + \"lf \"","lastModifiedDate":"2021-10-18"},{"lineNumber":23,"author":{"gitId":"YoYoCiti"},"content":"            + PREFIX_COMMAND_WORD + \"listf\";","lastModifiedDate":"2021-10-17"},{"lineNumber":24,"author":{"gitId":"YoYoCiti"},"content":"    public static final String MESSAGE_INVALID_COMMAND_WORD \u003d \"This command is unknown. Alias cannot be created.\";","lastModifiedDate":"2021-10-17"},{"lineNumber":25,"author":{"gitId":"YoYoCiti"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Alias for %1$s successfully defined as %2$s\";","lastModifiedDate":"2021-10-17"},{"lineNumber":26,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":27,"author":{"gitId":"YoYoCiti"},"content":"    private final Alias alias;","lastModifiedDate":"2021-10-18"},{"lineNumber":28,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":29,"author":{"gitId":"YoYoCiti"},"content":"    /**","lastModifiedDate":"2021-10-17"},{"lineNumber":30,"author":{"gitId":"YoYoCiti"},"content":"     * Creates {@code AddAliasCommand} object.","lastModifiedDate":"2021-10-17"},{"lineNumber":31,"author":{"gitId":"YoYoCiti"},"content":"     */","lastModifiedDate":"2021-10-17"},{"lineNumber":32,"author":{"gitId":"YoYoCiti"},"content":"    public AddAliasCommand(Alias alias) {","lastModifiedDate":"2021-10-18"},{"lineNumber":33,"author":{"gitId":"YoYoCiti"},"content":"        requireNonNull(alias);","lastModifiedDate":"2021-10-18"},{"lineNumber":34,"author":{"gitId":"YoYoCiti"},"content":"        this.alias \u003d alias;","lastModifiedDate":"2021-10-17"},{"lineNumber":35,"author":{"gitId":"YoYoCiti"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":36,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":37,"author":{"gitId":"YoYoCiti"},"content":"    @Override","lastModifiedDate":"2021-10-17"},{"lineNumber":38,"author":{"gitId":"YoYoCiti"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-10-17"},{"lineNumber":39,"author":{"gitId":"YoYoCiti"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-10-17"},{"lineNumber":40,"author":{"gitId":"YoYoCiti"},"content":"        model.addAlias(alias);","lastModifiedDate":"2021-10-18"},{"lineNumber":41,"author":{"gitId":"YoYoCiti"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, alias.getCommandWord(), alias.getShortcut()));","lastModifiedDate":"2021-10-18"},{"lineNumber":42,"author":{"gitId":"YoYoCiti"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":43,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":44,"author":{"gitId":"YoYoCiti"},"content":"    @Override","lastModifiedDate":"2021-10-17"},{"lineNumber":45,"author":{"gitId":"YoYoCiti"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2021-10-17"},{"lineNumber":46,"author":{"gitId":"YoYoCiti"},"content":"        return (obj \u003d\u003d this)","lastModifiedDate":"2021-10-17"},{"lineNumber":47,"author":{"gitId":"YoYoCiti"},"content":"                || (obj instanceof AddAliasCommand","lastModifiedDate":"2021-10-17"},{"lineNumber":48,"author":{"gitId":"YoYoCiti"},"content":"                \u0026\u0026 alias.equals(((AddAliasCommand) obj).alias));","lastModifiedDate":"2021-10-17"},{"lineNumber":49,"author":{"gitId":"YoYoCiti"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":50,"author":{"gitId":"YoYoCiti"},"content":"}","lastModifiedDate":"2021-10-17"}],"authorContributionMap":{"YoYoCiti":50}},{"path":"src/main/java/seedu/address/logic/commands/AddFacilityCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Shruthi0310"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-10-05"},{"lineNumber":2,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":3,"author":{"gitId":"Shruthi0310"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-05"},{"lineNumber":4,"author":{"gitId":"Shruthi0310"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_CAPACITY;","lastModifiedDate":"2021-10-05"},{"lineNumber":5,"author":{"gitId":"Shruthi0310"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_LOCATION;","lastModifiedDate":"2021-10-05"},{"lineNumber":6,"author":{"gitId":"Shruthi0310"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2021-10-06"},{"lineNumber":7,"author":{"gitId":"Shruthi0310"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TIME;","lastModifiedDate":"2021-10-05"},{"lineNumber":8,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":9,"author":{"gitId":"YoYoCiti"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-12"},{"lineNumber":10,"author":{"gitId":"Shruthi0310"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-10-06"},{"lineNumber":11,"author":{"gitId":"Shruthi0310"},"content":"import seedu.address.model.facility.Facility;","lastModifiedDate":"2021-10-06"},{"lineNumber":12,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":13,"author":{"gitId":"Shruthi0310"},"content":"/**","lastModifiedDate":"2021-10-05"},{"lineNumber":14,"author":{"gitId":"Shruthi0310"},"content":" * Adds a facility to SportsPA.","lastModifiedDate":"2021-10-05"},{"lineNumber":15,"author":{"gitId":"Shruthi0310"},"content":" */","lastModifiedDate":"2021-10-05"},{"lineNumber":16,"author":{"gitId":"Shruthi0310"},"content":"public class AddFacilityCommand extends Command {","lastModifiedDate":"2021-10-05"},{"lineNumber":17,"author":{"gitId":"Shruthi0310"},"content":"    public static final String COMMAND_WORD \u003d \"addf\";","lastModifiedDate":"2021-10-05"},{"lineNumber":18,"author":{"gitId":"Shruthi0310"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": adds a facility to SportsPA.\\n\"","lastModifiedDate":"2021-10-05"},{"lineNumber":19,"author":{"gitId":"Shruthi0310"},"content":"            + \"Parameters: \"","lastModifiedDate":"2021-10-05"},{"lineNumber":20,"author":{"gitId":"Shruthi0310"},"content":"            + PREFIX_NAME + \"NAME \"","lastModifiedDate":"2021-10-05"},{"lineNumber":21,"author":{"gitId":"Shruthi0310"},"content":"            + PREFIX_LOCATION + \"LOCATION \"","lastModifiedDate":"2021-10-05"},{"lineNumber":22,"author":{"gitId":"Shruthi0310"},"content":"            + PREFIX_TIME + \"TIME \"","lastModifiedDate":"2021-10-05"},{"lineNumber":23,"author":{"gitId":"Shruthi0310"},"content":"            + PREFIX_CAPACITY + \"CAPACITY\\n\"","lastModifiedDate":"2021-10-05"},{"lineNumber":24,"author":{"gitId":"Shruthi0310"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2021-10-05"},{"lineNumber":25,"author":{"gitId":"Shruthi0310"},"content":"            + PREFIX_NAME + \"Court 1 \"","lastModifiedDate":"2021-10-05"},{"lineNumber":26,"author":{"gitId":"Shruthi0310"},"content":"            + PREFIX_LOCATION + \"University Sports Hall \"","lastModifiedDate":"2021-10-05"},{"lineNumber":27,"author":{"gitId":"YoYoCiti"},"content":"            + PREFIX_TIME + \"1130 \"","lastModifiedDate":"2021-10-12"},{"lineNumber":28,"author":{"gitId":"Shruthi0310"},"content":"            + PREFIX_CAPACITY + \"5 \";","lastModifiedDate":"2021-10-05"},{"lineNumber":29,"author":{"gitId":"Shruthi0310"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New facility added: %1$s\";","lastModifiedDate":"2021-10-05"},{"lineNumber":30,"author":{"gitId":"YoYoCiti"},"content":"    public static final String MESSAGE_DUPLICATE_FACILITY \u003d \"This facility already exists in the facility list.\";","lastModifiedDate":"2021-10-12"},{"lineNumber":31,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":32,"author":{"gitId":"Shruthi0310"},"content":"    private final Facility facility;","lastModifiedDate":"2021-10-05"},{"lineNumber":33,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":34,"author":{"gitId":"Shruthi0310"},"content":"    /**","lastModifiedDate":"2021-10-05"},{"lineNumber":35,"author":{"gitId":"Shruthi0310"},"content":"     * Creates an AddFacilityCommand to add the specified facility.","lastModifiedDate":"2021-10-05"},{"lineNumber":36,"author":{"gitId":"Shruthi0310"},"content":"     *","lastModifiedDate":"2021-10-05"},{"lineNumber":37,"author":{"gitId":"Shruthi0310"},"content":"     * @param facility Facility to be added.","lastModifiedDate":"2021-10-05"},{"lineNumber":38,"author":{"gitId":"Shruthi0310"},"content":"     */","lastModifiedDate":"2021-10-05"},{"lineNumber":39,"author":{"gitId":"Shruthi0310"},"content":"    public AddFacilityCommand(Facility facility) {","lastModifiedDate":"2021-10-05"},{"lineNumber":40,"author":{"gitId":"Shruthi0310"},"content":"        requireNonNull(facility);","lastModifiedDate":"2021-10-05"},{"lineNumber":41,"author":{"gitId":"Shruthi0310"},"content":"        this.facility \u003d facility;","lastModifiedDate":"2021-10-05"},{"lineNumber":42,"author":{"gitId":"Shruthi0310"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":43,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":44,"author":{"gitId":"Shruthi0310"},"content":"    @Override","lastModifiedDate":"2021-10-05"},{"lineNumber":45,"author":{"gitId":"YoYoCiti"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-10-12"},{"lineNumber":46,"author":{"gitId":"Shruthi0310"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-10-05"},{"lineNumber":47,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":48,"author":{"gitId":"YoYoCiti"},"content":"        if (model.hasFacility(facility)) {","lastModifiedDate":"2021-10-12"},{"lineNumber":49,"author":{"gitId":"YoYoCiti"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_FACILITY);","lastModifiedDate":"2021-10-12"},{"lineNumber":50,"author":{"gitId":"YoYoCiti"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":51,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":52,"author":{"gitId":"Shruthi0310"},"content":"        model.addFacility(facility);","lastModifiedDate":"2021-10-05"},{"lineNumber":53,"author":{"gitId":"YoYoCiti"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, facility),","lastModifiedDate":"2021-10-24"},{"lineNumber":54,"author":{"gitId":"YoYoCiti"},"content":"                false, true, false);","lastModifiedDate":"2021-10-24"},{"lineNumber":55,"author":{"gitId":"Shruthi0310"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":56,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":57,"author":{"gitId":"Shruthi0310"},"content":"    @Override","lastModifiedDate":"2021-10-05"},{"lineNumber":58,"author":{"gitId":"Shruthi0310"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2021-10-05"},{"lineNumber":59,"author":{"gitId":"Shruthi0310"},"content":"        return (obj \u003d\u003d this)","lastModifiedDate":"2021-10-05"},{"lineNumber":60,"author":{"gitId":"Shruthi0310"},"content":"                || (obj instanceof AddFacilityCommand","lastModifiedDate":"2021-10-05"},{"lineNumber":61,"author":{"gitId":"Shruthi0310"},"content":"                \u0026\u0026 facility.equals(((AddFacilityCommand) obj).facility));","lastModifiedDate":"2021-10-05"},{"lineNumber":62,"author":{"gitId":"Shruthi0310"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":63,"author":{"gitId":"Shruthi0310"},"content":"}","lastModifiedDate":"2021-10-05"}],"authorContributionMap":{"YoYoCiti":11,"Shruthi0310":52}},{"path":"src/main/java/seedu/address/logic/commands/AddMemberCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"tsinyee"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_AVAILABILITY;","lastModifiedDate":"2021-10-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2021-10-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2021-10-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2021-10-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-01-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Adds a person to the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"tsinyee"},"content":"public class AddMemberCommand extends Command {","lastModifiedDate":"2021-10-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"tsinyee"},"content":"    public static final String COMMAND_WORD \u003d \"addm\";","lastModifiedDate":"2021-10-06"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"YoYoCiti"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds a member to the member list.\\n\"","lastModifiedDate":"2021-10-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            + \"Parameters: \"","lastModifiedDate":"2017-06-06"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            + PREFIX_NAME + \"NAME \"","lastModifiedDate":"2017-06-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"PHONE \"","lastModifiedDate":"2017-05-09"},{"lineNumber":24,"author":{"gitId":"YoYoCiti"},"content":"            + \"[\" + PREFIX_AVAILABILITY + \"AVAILABILITY] \"","lastModifiedDate":"2021-10-30"},{"lineNumber":25,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2021-10-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2017-06-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            + PREFIX_NAME + \"John Doe \"","lastModifiedDate":"2017-06-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"98765432 \"","lastModifiedDate":"2021-10-12"},{"lineNumber":29,"author":{"gitId":"tsinyee"},"content":"            + PREFIX_AVAILABILITY + \"1 3 5 \"","lastModifiedDate":"2021-10-21"},{"lineNumber":30,"author":{"gitId":"tsinyee"},"content":"            + PREFIX_TAG + \"exco \"","lastModifiedDate":"2021-10-22"},{"lineNumber":31,"author":{"gitId":"tsinyee"},"content":"            + PREFIX_TAG + \"y2\";","lastModifiedDate":"2021-10-22"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New person added: %1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"tsinyee"},"content":"    public static final String MESSAGE_DUPLICATE_MEMBER \u003d \"This member already exists in the member list\";","lastModifiedDate":"2021-10-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private final Person toAdd;","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":39,"author":{"gitId":"tsinyee"},"content":"     * Creates an AddMemberCommand to add the specified {@code Person}","lastModifiedDate":"2021-10-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"tsinyee"},"content":"    public AddMemberCommand(Person person) {","lastModifiedDate":"2021-10-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        toAdd \u003d person;","lastModifiedDate":"2018-01-10"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2017-05-15"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        if (model.hasPerson(toAdd)) {","lastModifiedDate":"2018-08-07"},{"lineNumber":51,"author":{"gitId":"tsinyee"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_MEMBER);","lastModifiedDate":"2021-10-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        model.addPerson(toAdd);","lastModifiedDate":"2016-09-25"},{"lineNumber":55,"author":{"gitId":"YoYoCiti"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, toAdd),","lastModifiedDate":"2021-10-24"},{"lineNumber":56,"author":{"gitId":"YoYoCiti"},"content":"                false, false, true);","lastModifiedDate":"2021-10-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-22"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-22"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-22"},{"lineNumber":62,"author":{"gitId":"tsinyee"},"content":"                || (other instanceof AddMemberCommand // instanceof handles nulls","lastModifiedDate":"2021-10-05"},{"lineNumber":63,"author":{"gitId":"tsinyee"},"content":"                \u0026\u0026 toAdd.equals(((AddMemberCommand) other).toAdd));","lastModifiedDate":"2021-10-05"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":65,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"YoYoCiti":4,"-":49,"tsinyee":12}},{"path":"src/main/java/seedu/address/logic/commands/AllocateMemberCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"felix-ong"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-10-23"},{"lineNumber":2,"author":{"gitId":"felix-ong"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":3,"author":{"gitId":"felix-ong"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-23"},{"lineNumber":4,"author":{"gitId":"felix-ong"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2021-10-23"},{"lineNumber":5,"author":{"gitId":"felix-ong"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":6,"author":{"gitId":"felix-ong"},"content":"import java.time.DayOfWeek;","lastModifiedDate":"2021-10-23"},{"lineNumber":7,"author":{"gitId":"felix-ong"},"content":"import java.time.format.TextStyle;","lastModifiedDate":"2021-10-23"},{"lineNumber":8,"author":{"gitId":"felix-ong"},"content":"import java.util.List;","lastModifiedDate":"2021-10-23"},{"lineNumber":9,"author":{"gitId":"felix-ong"},"content":"import java.util.Locale;","lastModifiedDate":"2021-10-23"},{"lineNumber":10,"author":{"gitId":"felix-ong"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":11,"author":{"gitId":"felix-ong"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2021-10-23"},{"lineNumber":12,"author":{"gitId":"felix-ong"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-10-23"},{"lineNumber":13,"author":{"gitId":"felix-ong"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-23"},{"lineNumber":14,"author":{"gitId":"felix-ong"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-10-23"},{"lineNumber":15,"author":{"gitId":"felix-ong"},"content":"import seedu.address.model.facility.Facility;","lastModifiedDate":"2021-10-23"},{"lineNumber":16,"author":{"gitId":"felix-ong"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2021-10-23"},{"lineNumber":17,"author":{"gitId":"felix-ong"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":18,"author":{"gitId":"felix-ong"},"content":"/**","lastModifiedDate":"2021-10-23"},{"lineNumber":19,"author":{"gitId":"felix-ong"},"content":" * Allocates a member available on a particular day to a Facility.","lastModifiedDate":"2021-10-23"},{"lineNumber":20,"author":{"gitId":"felix-ong"},"content":" */","lastModifiedDate":"2021-10-23"},{"lineNumber":21,"author":{"gitId":"felix-ong"},"content":"public class AllocateMemberCommand extends Command {","lastModifiedDate":"2021-10-23"},{"lineNumber":22,"author":{"gitId":"felix-ong"},"content":"    public static final String COMMAND_WORD \u003d \"allocate\";","lastModifiedDate":"2021-10-23"},{"lineNumber":23,"author":{"gitId":"felix-ong"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": allocates a member to facility.\\n\"","lastModifiedDate":"2021-10-23"},{"lineNumber":24,"author":{"gitId":"felix-ong"},"content":"            + \"Parameters: \" + \"MEMBER_INDEX FACILITY_INDEX DAY\\n\"","lastModifiedDate":"2021-10-23"},{"lineNumber":25,"author":{"gitId":"felix-ong"},"content":"            + \"DAY must be an integer from 1 to 7\\n\"","lastModifiedDate":"2021-10-23"},{"lineNumber":26,"author":{"gitId":"felix-ong"},"content":"            + \"where 1 represents Monday, 2 represents Tuesday ... and 7 represents Sunday\\n\"","lastModifiedDate":"2021-10-23"},{"lineNumber":27,"author":{"gitId":"felix-ong"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 1 1\";","lastModifiedDate":"2021-10-23"},{"lineNumber":28,"author":{"gitId":"felix-ong"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Allocated %s to %s for %s\";","lastModifiedDate":"2021-10-23"},{"lineNumber":29,"author":{"gitId":"felix-ong"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":30,"author":{"gitId":"felix-ong"},"content":"    private final Index memberIndex;","lastModifiedDate":"2021-10-23"},{"lineNumber":31,"author":{"gitId":"felix-ong"},"content":"    private final Index facilityIndex;","lastModifiedDate":"2021-10-23"},{"lineNumber":32,"author":{"gitId":"felix-ong"},"content":"    private final DayOfWeek day;","lastModifiedDate":"2021-10-23"},{"lineNumber":33,"author":{"gitId":"felix-ong"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":34,"author":{"gitId":"felix-ong"},"content":"    /**","lastModifiedDate":"2021-10-23"},{"lineNumber":35,"author":{"gitId":"felix-ong"},"content":"     * @param memberIndex of the member to be allocated to a facility.","lastModifiedDate":"2021-10-23"},{"lineNumber":36,"author":{"gitId":"felix-ong"},"content":"     * @param facilityIndex of the facility to allocate the member to.","lastModifiedDate":"2021-10-23"},{"lineNumber":37,"author":{"gitId":"felix-ong"},"content":"     */","lastModifiedDate":"2021-10-23"},{"lineNumber":38,"author":{"gitId":"felix-ong"},"content":"    public AllocateMemberCommand(Index memberIndex, Index facilityIndex, DayOfWeek day) {","lastModifiedDate":"2021-10-23"},{"lineNumber":39,"author":{"gitId":"felix-ong"},"content":"        requireAllNonNull(memberIndex, facilityIndex);","lastModifiedDate":"2021-10-23"},{"lineNumber":40,"author":{"gitId":"felix-ong"},"content":"        this.memberIndex \u003d memberIndex;","lastModifiedDate":"2021-10-23"},{"lineNumber":41,"author":{"gitId":"felix-ong"},"content":"        this.facilityIndex \u003d facilityIndex;","lastModifiedDate":"2021-10-23"},{"lineNumber":42,"author":{"gitId":"felix-ong"},"content":"        this.day \u003d day;","lastModifiedDate":"2021-10-23"},{"lineNumber":43,"author":{"gitId":"felix-ong"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":44,"author":{"gitId":"felix-ong"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":45,"author":{"gitId":"felix-ong"},"content":"    @Override","lastModifiedDate":"2021-10-23"},{"lineNumber":46,"author":{"gitId":"felix-ong"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-10-23"},{"lineNumber":47,"author":{"gitId":"felix-ong"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-10-23"},{"lineNumber":48,"author":{"gitId":"felix-ong"},"content":"        List\u003cPerson\u003e lastShownPersonList \u003d model.getFilteredPersonList();","lastModifiedDate":"2021-10-23"},{"lineNumber":49,"author":{"gitId":"felix-ong"},"content":"        List\u003cFacility\u003e lastShownFacilityList \u003d model.getFilteredFacilityList();","lastModifiedDate":"2021-10-23"},{"lineNumber":50,"author":{"gitId":"felix-ong"},"content":"        if (memberIndex.getOneBased() \u003e lastShownPersonList.size()) {","lastModifiedDate":"2021-10-26"},{"lineNumber":51,"author":{"gitId":"felix-ong"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_MEMBER_DISPLAYED_INDEX);","lastModifiedDate":"2021-10-23"},{"lineNumber":52,"author":{"gitId":"felix-ong"},"content":"        }","lastModifiedDate":"2021-10-23"},{"lineNumber":53,"author":{"gitId":"felix-ong"},"content":"        if (facilityIndex.getOneBased() \u003e lastShownFacilityList.size()) {","lastModifiedDate":"2021-10-26"},{"lineNumber":54,"author":{"gitId":"felix-ong"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_FACILITY_DISPLAYED_INDEX);","lastModifiedDate":"2021-10-23"},{"lineNumber":55,"author":{"gitId":"felix-ong"},"content":"        }","lastModifiedDate":"2021-10-23"},{"lineNumber":56,"author":{"gitId":"felix-ong"},"content":"        Person toBeAllocated \u003d lastShownPersonList.get(memberIndex.getZeroBased());","lastModifiedDate":"2021-10-23"},{"lineNumber":57,"author":{"gitId":"felix-ong"},"content":"        Facility toAllocate \u003d lastShownFacilityList.get(facilityIndex.getZeroBased());","lastModifiedDate":"2021-10-23"},{"lineNumber":58,"author":{"gitId":"felix-ong"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":59,"author":{"gitId":"felix-ong"},"content":"        if (toAllocate.isPersonAllocated(toBeAllocated)) {","lastModifiedDate":"2021-10-23"},{"lineNumber":60,"author":{"gitId":"felix-ong"},"content":"            throw new CommandException(Messages.MESSAGE_MEMBER_ALREADY_ALLOCATED);","lastModifiedDate":"2021-10-23"},{"lineNumber":61,"author":{"gitId":"felix-ong"},"content":"        } else if (toAllocate.isMaxCapacity()) {","lastModifiedDate":"2021-10-23"},{"lineNumber":62,"author":{"gitId":"felix-ong"},"content":"            throw new CommandException(Messages.MESSAGE_FACILITY_AT_MAX_CAPACITY);","lastModifiedDate":"2021-10-23"},{"lineNumber":63,"author":{"gitId":"felix-ong"},"content":"        } else if (!toBeAllocated.isAvailableOnDay(day.getValue())) {","lastModifiedDate":"2021-10-23"},{"lineNumber":64,"author":{"gitId":"felix-ong"},"content":"            throw new CommandException(Messages.MESSAGE_MEMBER_NOT_AVAILABLE);","lastModifiedDate":"2021-10-23"},{"lineNumber":65,"author":{"gitId":"felix-ong"},"content":"        } else {","lastModifiedDate":"2021-10-23"},{"lineNumber":66,"author":{"gitId":"felix-ong"},"content":"            toAllocate.addPersonToFacility(toBeAllocated);","lastModifiedDate":"2021-10-23"},{"lineNumber":67,"author":{"gitId":"felix-ong"},"content":"        }","lastModifiedDate":"2021-10-23"},{"lineNumber":68,"author":{"gitId":"felix-ong"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":69,"author":{"gitId":"felix-ong"},"content":"        String dayName \u003d day.getDisplayName(TextStyle.FULL, Locale.getDefault());","lastModifiedDate":"2021-10-23"},{"lineNumber":70,"author":{"gitId":"felix-ong"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, toBeAllocated.getName(),","lastModifiedDate":"2021-10-23"},{"lineNumber":71,"author":{"gitId":"felix-ong"},"content":"                toAllocate.getName(), dayName));","lastModifiedDate":"2021-10-23"},{"lineNumber":72,"author":{"gitId":"felix-ong"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":73,"author":{"gitId":"felix-ong"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":74,"author":{"gitId":"felix-ong"},"content":"    @Override","lastModifiedDate":"2021-10-23"},{"lineNumber":75,"author":{"gitId":"felix-ong"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-23"},{"lineNumber":76,"author":{"gitId":"felix-ong"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2021-10-23"},{"lineNumber":77,"author":{"gitId":"felix-ong"},"content":"            return true;","lastModifiedDate":"2021-10-23"},{"lineNumber":78,"author":{"gitId":"felix-ong"},"content":"        }","lastModifiedDate":"2021-10-23"},{"lineNumber":79,"author":{"gitId":"felix-ong"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":80,"author":{"gitId":"felix-ong"},"content":"        if (!(other instanceof AllocateMemberCommand)) {","lastModifiedDate":"2021-10-23"},{"lineNumber":81,"author":{"gitId":"felix-ong"},"content":"            return false;","lastModifiedDate":"2021-10-23"},{"lineNumber":82,"author":{"gitId":"felix-ong"},"content":"        }","lastModifiedDate":"2021-10-23"},{"lineNumber":83,"author":{"gitId":"felix-ong"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":84,"author":{"gitId":"felix-ong"},"content":"        AllocateMemberCommand e \u003d (AllocateMemberCommand) other;","lastModifiedDate":"2021-10-23"},{"lineNumber":85,"author":{"gitId":"felix-ong"},"content":"        return memberIndex.equals(e.memberIndex) \u0026\u0026 facilityIndex.equals(e.facilityIndex) \u0026\u0026 day.equals(e.day);","lastModifiedDate":"2021-10-23"},{"lineNumber":86,"author":{"gitId":"felix-ong"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":87,"author":{"gitId":"felix-ong"},"content":"}","lastModifiedDate":"2021-10-23"}],"authorContributionMap":{"felix-ong":87}},{"path":"src/main/java/seedu/address/logic/commands/ClearAttendanceCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Shruthi0310"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-10-21"},{"lineNumber":2,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":3,"author":{"gitId":"Shruthi0310"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-21"},{"lineNumber":4,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":5,"author":{"gitId":"Shruthi0310"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-10-21"},{"lineNumber":6,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":7,"author":{"gitId":"Shruthi0310"},"content":"/**","lastModifiedDate":"2021-10-21"},{"lineNumber":8,"author":{"gitId":"Shruthi0310"},"content":" * Clears today\u0027s attendance for all members in list.","lastModifiedDate":"2021-10-21"},{"lineNumber":9,"author":{"gitId":"Shruthi0310"},"content":" */","lastModifiedDate":"2021-10-21"},{"lineNumber":10,"author":{"gitId":"Shruthi0310"},"content":"public class ClearAttendanceCommand extends Command {","lastModifiedDate":"2021-10-21"},{"lineNumber":11,"author":{"gitId":"Shruthi0310"},"content":"    public static final String COMMAND_WORD \u003d \"cleara\";","lastModifiedDate":"2021-10-21"},{"lineNumber":12,"author":{"gitId":"Shruthi0310"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2021-10-21"},{"lineNumber":13,"author":{"gitId":"Shruthi0310"},"content":"            + \": Clears today\u0027s attendance for all members\\n\"","lastModifiedDate":"2021-10-21"},{"lineNumber":14,"author":{"gitId":"Shruthi0310"},"content":"            + \"Example: \" + COMMAND_WORD;","lastModifiedDate":"2021-10-21"},{"lineNumber":15,"author":{"gitId":"Shruthi0310"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Cleared today\u0027s attendance\";","lastModifiedDate":"2021-10-21"},{"lineNumber":16,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":17,"author":{"gitId":"Shruthi0310"},"content":"    @Override","lastModifiedDate":"2021-10-21"},{"lineNumber":18,"author":{"gitId":"Shruthi0310"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2021-10-21"},{"lineNumber":19,"author":{"gitId":"Shruthi0310"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-10-21"},{"lineNumber":20,"author":{"gitId":"Shruthi0310"},"content":"        model.resetTodayAttendance();","lastModifiedDate":"2021-10-21"},{"lineNumber":21,"author":{"gitId":"YoYoCiti"},"content":"        return new CommandResult(MESSAGE_SUCCESS, false, false, true);","lastModifiedDate":"2021-10-24"},{"lineNumber":22,"author":{"gitId":"Shruthi0310"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":23,"author":{"gitId":"Shruthi0310"},"content":"}","lastModifiedDate":"2021-10-21"}],"authorContributionMap":{"YoYoCiti":1,"Shruthi0310":22}},{"path":"src/main/java/seedu/address/logic/commands/ClearFacilitiesCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"YoYoCiti"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-10-04"},{"lineNumber":2,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":3,"author":{"gitId":"YoYoCiti"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-04"},{"lineNumber":4,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":5,"author":{"gitId":"YoYoCiti"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-10-04"},{"lineNumber":6,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":7,"author":{"gitId":"YoYoCiti"},"content":"/**","lastModifiedDate":"2021-10-04"},{"lineNumber":8,"author":{"gitId":"YoYoCiti"},"content":" * Clears the facility list of SportsPA.","lastModifiedDate":"2021-10-06"},{"lineNumber":9,"author":{"gitId":"YoYoCiti"},"content":" */","lastModifiedDate":"2021-10-04"},{"lineNumber":10,"author":{"gitId":"YoYoCiti"},"content":"public class ClearFacilitiesCommand extends Command {","lastModifiedDate":"2021-10-04"},{"lineNumber":11,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":12,"author":{"gitId":"YoYoCiti"},"content":"    public static final String COMMAND_WORD \u003d \"clearf\";","lastModifiedDate":"2021-10-04"},{"lineNumber":13,"author":{"gitId":"YoYoCiti"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Facility list has been cleared!\";","lastModifiedDate":"2021-10-04"},{"lineNumber":14,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":15,"author":{"gitId":"YoYoCiti"},"content":"    @Override","lastModifiedDate":"2021-10-04"},{"lineNumber":16,"author":{"gitId":"YoYoCiti"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2021-10-04"},{"lineNumber":17,"author":{"gitId":"YoYoCiti"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-10-04"},{"lineNumber":18,"author":{"gitId":"YoYoCiti"},"content":"        model.resetFacilityList();","lastModifiedDate":"2021-10-06"},{"lineNumber":19,"author":{"gitId":"YoYoCiti"},"content":"        return new CommandResult(MESSAGE_SUCCESS, false, true, false);","lastModifiedDate":"2021-10-24"},{"lineNumber":20,"author":{"gitId":"YoYoCiti"},"content":"    }","lastModifiedDate":"2021-10-04"},{"lineNumber":21,"author":{"gitId":"YoYoCiti"},"content":"}","lastModifiedDate":"2021-10-04"}],"authorContributionMap":{"YoYoCiti":21}},{"path":"src/main/java/seedu/address/logic/commands/ClearMembersCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"felix-ong"},"content":" * Clears the members list of SportsPA.","lastModifiedDate":"2021-09-30"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"felix-ong"},"content":"public class ClearMembersCommand extends Command {","lastModifiedDate":"2021-09-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"felix-ong"},"content":"    public static final String COMMAND_WORD \u003d \"clearm\";","lastModifiedDate":"2021-09-30"},{"lineNumber":13,"author":{"gitId":"felix-ong"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Member list has been cleared!\";","lastModifiedDate":"2021-10-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2017-05-15"},{"lineNumber":19,"author":{"gitId":"felix-ong"},"content":"        model.resetMemberList();","lastModifiedDate":"2021-10-09"},{"lineNumber":20,"author":{"gitId":"Moley456"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":21,"author":{"gitId":"YoYoCiti"},"content":"        return new CommandResult(MESSAGE_SUCCESS, false, false, true);","lastModifiedDate":"2021-10-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"YoYoCiti":1,"Moley456":1,"-":16,"felix-ong":5}},{"path":"src/main/java/seedu/address/logic/commands/CommandResult.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2018-12-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Represents the result of a command execution.","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class CommandResult {","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private final String feedbackToUser;","lastModifiedDate":"2018-12-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /** Help information should be shown to the user. */","lastModifiedDate":"2018-12-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    private final boolean showHelp;","lastModifiedDate":"2018-12-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /** The application should exit. */","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private final boolean exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"YoYoCiti"},"content":"    /** The application should display Facility Tab */","lastModifiedDate":"2021-10-24"},{"lineNumber":21,"author":{"gitId":"YoYoCiti"},"content":"    private final boolean showFacilityTab;","lastModifiedDate":"2021-10-24"},{"lineNumber":22,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":23,"author":{"gitId":"YoYoCiti"},"content":"    /** The application should display Member Tab */","lastModifiedDate":"2021-10-24"},{"lineNumber":24,"author":{"gitId":"YoYoCiti"},"content":"    private final boolean showMemberTab;","lastModifiedDate":"2021-10-24"},{"lineNumber":25,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * Constructs a {@code CommandResult} with the specified fields.","lastModifiedDate":"2018-12-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":29,"author":{"gitId":"YoYoCiti"},"content":"    public CommandResult(String feedbackToUser, boolean showHelp, boolean exit,","lastModifiedDate":"2021-10-24"},{"lineNumber":30,"author":{"gitId":"YoYoCiti"},"content":"                         boolean showFacilityTab, boolean showMemberTab) {","lastModifiedDate":"2021-10-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        this.feedbackToUser \u003d requireNonNull(feedbackToUser);","lastModifiedDate":"2017-05-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        this.showHelp \u003d showHelp;","lastModifiedDate":"2018-12-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        this.exit \u003d exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":34,"author":{"gitId":"YoYoCiti"},"content":"        this.showFacilityTab \u003d showFacilityTab;","lastModifiedDate":"2021-10-24"},{"lineNumber":35,"author":{"gitId":"YoYoCiti"},"content":"        this.showMemberTab \u003d showMemberTab;","lastModifiedDate":"2021-10-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * Constructs a {@code CommandResult} with the specified {@code feedbackToUser},","lastModifiedDate":"2018-12-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * and other fields set to their default value.","lastModifiedDate":"2018-12-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public CommandResult(String feedbackToUser) {","lastModifiedDate":"2018-12-09"},{"lineNumber":43,"author":{"gitId":"YoYoCiti"},"content":"        this(feedbackToUser, false, false,","lastModifiedDate":"2021-10-24"},{"lineNumber":44,"author":{"gitId":"YoYoCiti"},"content":"                false, false);","lastModifiedDate":"2021-10-24"},{"lineNumber":45,"author":{"gitId":"YoYoCiti"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":46,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":47,"author":{"gitId":"YoYoCiti"},"content":"    /**","lastModifiedDate":"2021-10-24"},{"lineNumber":48,"author":{"gitId":"YoYoCiti"},"content":"     * Constructs a {@code CommandResult} with the specified {@code feedbackToUser}, {@code showHelp} and {@code exit},","lastModifiedDate":"2021-10-24"},{"lineNumber":49,"author":{"gitId":"YoYoCiti"},"content":"     * and other fields set to their default value.","lastModifiedDate":"2021-10-24"},{"lineNumber":50,"author":{"gitId":"YoYoCiti"},"content":"     */","lastModifiedDate":"2021-10-24"},{"lineNumber":51,"author":{"gitId":"YoYoCiti"},"content":"    public CommandResult(String feedbackToUser, boolean showHelp, boolean exit) {","lastModifiedDate":"2021-10-24"},{"lineNumber":52,"author":{"gitId":"YoYoCiti"},"content":"        this(feedbackToUser, showHelp, exit, false, false);","lastModifiedDate":"2021-10-24"},{"lineNumber":53,"author":{"gitId":"YoYoCiti"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":54,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":55,"author":{"gitId":"YoYoCiti"},"content":"    /**","lastModifiedDate":"2021-10-24"},{"lineNumber":56,"author":{"gitId":"YoYoCiti"},"content":"     * Constructs a {@code CommandResult} with the specified {@code feedbackToUser},","lastModifiedDate":"2021-10-24"},{"lineNumber":57,"author":{"gitId":"YoYoCiti"},"content":"     * {@code showFacilityTab}, {@code showMemberTab}, and other fields set to their default value.","lastModifiedDate":"2021-10-24"},{"lineNumber":58,"author":{"gitId":"YoYoCiti"},"content":"     */","lastModifiedDate":"2021-10-24"},{"lineNumber":59,"author":{"gitId":"YoYoCiti"},"content":"    public CommandResult(String feedbackToUser, boolean isHelpOrExit, boolean showFacilityTab, boolean showMemberTab) {","lastModifiedDate":"2021-10-24"},{"lineNumber":60,"author":{"gitId":"YoYoCiti"},"content":"        this(feedbackToUser, false, false, showFacilityTab, showMemberTab);","lastModifiedDate":"2021-10-24"},{"lineNumber":61,"author":{"gitId":"YoYoCiti"},"content":"        assert !isHelpOrExit;","lastModifiedDate":"2021-10-24"},{"lineNumber":62,"author":{"gitId":"YoYoCiti"},"content":"        assert showFacilityTab !\u003d showMemberTab;","lastModifiedDate":"2021-10-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public String getFeedbackToUser() {","lastModifiedDate":"2018-12-09"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        return feedbackToUser;","lastModifiedDate":"2018-12-09"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public boolean isShowHelp() {","lastModifiedDate":"2018-12-09"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        return showHelp;","lastModifiedDate":"2018-12-09"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public boolean isExit() {","lastModifiedDate":"2018-12-09"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        return exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":77,"author":{"gitId":"YoYoCiti"},"content":"    public boolean isShowFacilityTab() {","lastModifiedDate":"2021-10-24"},{"lineNumber":78,"author":{"gitId":"YoYoCiti"},"content":"        return showFacilityTab;","lastModifiedDate":"2021-10-24"},{"lineNumber":79,"author":{"gitId":"YoYoCiti"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":80,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":81,"author":{"gitId":"YoYoCiti"},"content":"    public boolean isShowMemberTab() {","lastModifiedDate":"2021-10-24"},{"lineNumber":82,"author":{"gitId":"YoYoCiti"},"content":"        return showMemberTab;","lastModifiedDate":"2021-10-24"},{"lineNumber":83,"author":{"gitId":"YoYoCiti"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":84,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2018-12-09"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-12-09"},{"lineNumber":88,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-12-09"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2018-12-09"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        if (!(other instanceof CommandResult)) {","lastModifiedDate":"2018-12-09"},{"lineNumber":93,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-12-09"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        CommandResult otherCommandResult \u003d (CommandResult) other;","lastModifiedDate":"2018-12-09"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        return feedbackToUser.equals(otherCommandResult.feedbackToUser)","lastModifiedDate":"2018-12-09"},{"lineNumber":98,"author":{"gitId":"-"},"content":"                \u0026\u0026 showHelp \u003d\u003d otherCommandResult.showHelp","lastModifiedDate":"2018-12-09"},{"lineNumber":99,"author":{"gitId":"YoYoCiti"},"content":"                \u0026\u0026 exit \u003d\u003d otherCommandResult.exit","lastModifiedDate":"2021-10-24"},{"lineNumber":100,"author":{"gitId":"YoYoCiti"},"content":"                \u0026\u0026 showFacilityTab \u003d\u003d otherCommandResult.showFacilityTab","lastModifiedDate":"2021-10-24"},{"lineNumber":101,"author":{"gitId":"YoYoCiti"},"content":"                \u0026\u0026 showMemberTab \u003d\u003d otherCommandResult.showMemberTab;","lastModifiedDate":"2021-10-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2018-12-09"},{"lineNumber":106,"author":{"gitId":"YoYoCiti"},"content":"        return Objects.hash(feedbackToUser, showHelp, exit, showFacilityTab, showMemberTab);","lastModifiedDate":"2021-10-24"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":109,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"YoYoCiti":42,"-":67}},{"path":"src/main/java/seedu/address/logic/commands/DeallocateMemberCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"felix-ong"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-10-26"},{"lineNumber":2,"author":{"gitId":"felix-ong"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":3,"author":{"gitId":"felix-ong"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-26"},{"lineNumber":4,"author":{"gitId":"felix-ong"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2021-10-26"},{"lineNumber":5,"author":{"gitId":"felix-ong"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":6,"author":{"gitId":"felix-ong"},"content":"import java.time.DayOfWeek;","lastModifiedDate":"2021-10-26"},{"lineNumber":7,"author":{"gitId":"felix-ong"},"content":"import java.time.format.TextStyle;","lastModifiedDate":"2021-10-26"},{"lineNumber":8,"author":{"gitId":"felix-ong"},"content":"import java.util.List;","lastModifiedDate":"2021-10-26"},{"lineNumber":9,"author":{"gitId":"felix-ong"},"content":"import java.util.Locale;","lastModifiedDate":"2021-10-26"},{"lineNumber":10,"author":{"gitId":"felix-ong"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":11,"author":{"gitId":"felix-ong"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2021-10-26"},{"lineNumber":12,"author":{"gitId":"felix-ong"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-10-26"},{"lineNumber":13,"author":{"gitId":"felix-ong"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-26"},{"lineNumber":14,"author":{"gitId":"felix-ong"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-10-26"},{"lineNumber":15,"author":{"gitId":"felix-ong"},"content":"import seedu.address.model.facility.Facility;","lastModifiedDate":"2021-10-26"},{"lineNumber":16,"author":{"gitId":"felix-ong"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2021-10-26"},{"lineNumber":17,"author":{"gitId":"felix-ong"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":18,"author":{"gitId":"felix-ong"},"content":"/**","lastModifiedDate":"2021-10-26"},{"lineNumber":19,"author":{"gitId":"felix-ong"},"content":" * Deallocates a member available on a particular day from a Facility.","lastModifiedDate":"2021-10-26"},{"lineNumber":20,"author":{"gitId":"felix-ong"},"content":" */","lastModifiedDate":"2021-10-26"},{"lineNumber":21,"author":{"gitId":"felix-ong"},"content":"public class DeallocateMemberCommand extends Command {","lastModifiedDate":"2021-10-26"},{"lineNumber":22,"author":{"gitId":"felix-ong"},"content":"    public static final String COMMAND_WORD \u003d \"deallocate\";","lastModifiedDate":"2021-10-26"},{"lineNumber":23,"author":{"gitId":"felix-ong"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": deallocates a member from a facility.\\n\"","lastModifiedDate":"2021-10-26"},{"lineNumber":24,"author":{"gitId":"felix-ong"},"content":"            + \"Parameters: \" + \"MEMBER_INDEX FACILITY_INDEX DAY\\n\"","lastModifiedDate":"2021-10-26"},{"lineNumber":25,"author":{"gitId":"felix-ong"},"content":"            + \"DAY must be an integer from 1 to 7\\n\"","lastModifiedDate":"2021-10-26"},{"lineNumber":26,"author":{"gitId":"felix-ong"},"content":"            + \"where 1 represents Monday, 2 represents Tuesday ... and 7 represents Sunday\\n\"","lastModifiedDate":"2021-10-26"},{"lineNumber":27,"author":{"gitId":"felix-ong"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 1 1\";","lastModifiedDate":"2021-10-26"},{"lineNumber":28,"author":{"gitId":"felix-ong"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Deallocated %s from %s for %s\";","lastModifiedDate":"2021-10-26"},{"lineNumber":29,"author":{"gitId":"felix-ong"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":30,"author":{"gitId":"felix-ong"},"content":"    private final Index memberIndex;","lastModifiedDate":"2021-10-26"},{"lineNumber":31,"author":{"gitId":"felix-ong"},"content":"    private final Index facilityIndex;","lastModifiedDate":"2021-10-26"},{"lineNumber":32,"author":{"gitId":"felix-ong"},"content":"    private final DayOfWeek day;","lastModifiedDate":"2021-10-26"},{"lineNumber":33,"author":{"gitId":"felix-ong"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":34,"author":{"gitId":"felix-ong"},"content":"    /**","lastModifiedDate":"2021-10-26"},{"lineNumber":35,"author":{"gitId":"felix-ong"},"content":"     * @param memberIndex of the member to be allocated to a facility.","lastModifiedDate":"2021-10-26"},{"lineNumber":36,"author":{"gitId":"felix-ong"},"content":"     * @param facilityIndex of the facility to allocate the member to.","lastModifiedDate":"2021-10-26"},{"lineNumber":37,"author":{"gitId":"felix-ong"},"content":"     */","lastModifiedDate":"2021-10-26"},{"lineNumber":38,"author":{"gitId":"felix-ong"},"content":"    public DeallocateMemberCommand(Index memberIndex, Index facilityIndex, DayOfWeek day) {","lastModifiedDate":"2021-10-26"},{"lineNumber":39,"author":{"gitId":"felix-ong"},"content":"        requireAllNonNull(memberIndex, facilityIndex);","lastModifiedDate":"2021-10-26"},{"lineNumber":40,"author":{"gitId":"felix-ong"},"content":"        this.memberIndex \u003d memberIndex;","lastModifiedDate":"2021-10-26"},{"lineNumber":41,"author":{"gitId":"felix-ong"},"content":"        this.facilityIndex \u003d facilityIndex;","lastModifiedDate":"2021-10-26"},{"lineNumber":42,"author":{"gitId":"felix-ong"},"content":"        this.day \u003d day;","lastModifiedDate":"2021-10-26"},{"lineNumber":43,"author":{"gitId":"felix-ong"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":44,"author":{"gitId":"felix-ong"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":45,"author":{"gitId":"felix-ong"},"content":"    @Override","lastModifiedDate":"2021-10-26"},{"lineNumber":46,"author":{"gitId":"felix-ong"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-10-26"},{"lineNumber":47,"author":{"gitId":"felix-ong"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-10-26"},{"lineNumber":48,"author":{"gitId":"felix-ong"},"content":"        List\u003cPerson\u003e lastShownPersonList \u003d model.getFilteredPersonList();","lastModifiedDate":"2021-10-26"},{"lineNumber":49,"author":{"gitId":"felix-ong"},"content":"        List\u003cFacility\u003e lastShownFacilityList \u003d model.getFilteredFacilityList();","lastModifiedDate":"2021-10-26"},{"lineNumber":50,"author":{"gitId":"felix-ong"},"content":"        if (memberIndex.getOneBased() \u003e lastShownPersonList.size()) {","lastModifiedDate":"2021-10-26"},{"lineNumber":51,"author":{"gitId":"felix-ong"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_MEMBER_DISPLAYED_INDEX);","lastModifiedDate":"2021-10-26"},{"lineNumber":52,"author":{"gitId":"felix-ong"},"content":"        }","lastModifiedDate":"2021-10-26"},{"lineNumber":53,"author":{"gitId":"felix-ong"},"content":"        if (facilityIndex.getOneBased() \u003e lastShownFacilityList.size()) {","lastModifiedDate":"2021-10-26"},{"lineNumber":54,"author":{"gitId":"felix-ong"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_FACILITY_DISPLAYED_INDEX);","lastModifiedDate":"2021-10-26"},{"lineNumber":55,"author":{"gitId":"felix-ong"},"content":"        }","lastModifiedDate":"2021-10-26"},{"lineNumber":56,"author":{"gitId":"felix-ong"},"content":"        Person toBeDeallocated \u003d lastShownPersonList.get(memberIndex.getZeroBased());","lastModifiedDate":"2021-10-26"},{"lineNumber":57,"author":{"gitId":"felix-ong"},"content":"        Facility toDeallocate \u003d lastShownFacilityList.get(facilityIndex.getZeroBased());","lastModifiedDate":"2021-10-26"},{"lineNumber":58,"author":{"gitId":"felix-ong"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":59,"author":{"gitId":"felix-ong"},"content":"        if (!toDeallocate.isPersonAllocated(toBeDeallocated)) {","lastModifiedDate":"2021-10-26"},{"lineNumber":60,"author":{"gitId":"felix-ong"},"content":"            throw new CommandException(Messages.MESSAGE_MEMBER_NOT_ALLOCATED);","lastModifiedDate":"2021-10-26"},{"lineNumber":61,"author":{"gitId":"felix-ong"},"content":"        } else {","lastModifiedDate":"2021-10-26"},{"lineNumber":62,"author":{"gitId":"felix-ong"},"content":"            toDeallocate.removePersonFromFacility(toBeDeallocated);","lastModifiedDate":"2021-10-26"},{"lineNumber":63,"author":{"gitId":"felix-ong"},"content":"        }","lastModifiedDate":"2021-10-26"},{"lineNumber":64,"author":{"gitId":"felix-ong"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":65,"author":{"gitId":"felix-ong"},"content":"        String dayName \u003d day.getDisplayName(TextStyle.FULL, Locale.getDefault());","lastModifiedDate":"2021-10-26"},{"lineNumber":66,"author":{"gitId":"felix-ong"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, toBeDeallocated.getName(),","lastModifiedDate":"2021-10-26"},{"lineNumber":67,"author":{"gitId":"felix-ong"},"content":"                toDeallocate.getName(), dayName));","lastModifiedDate":"2021-10-26"},{"lineNumber":68,"author":{"gitId":"felix-ong"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":69,"author":{"gitId":"felix-ong"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":70,"author":{"gitId":"felix-ong"},"content":"    @Override","lastModifiedDate":"2021-10-26"},{"lineNumber":71,"author":{"gitId":"felix-ong"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-26"},{"lineNumber":72,"author":{"gitId":"felix-ong"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2021-10-26"},{"lineNumber":73,"author":{"gitId":"felix-ong"},"content":"            return true;","lastModifiedDate":"2021-10-26"},{"lineNumber":74,"author":{"gitId":"felix-ong"},"content":"        }","lastModifiedDate":"2021-10-26"},{"lineNumber":75,"author":{"gitId":"felix-ong"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":76,"author":{"gitId":"felix-ong"},"content":"        if (!(other instanceof DeallocateMemberCommand)) {","lastModifiedDate":"2021-10-26"},{"lineNumber":77,"author":{"gitId":"felix-ong"},"content":"            return false;","lastModifiedDate":"2021-10-26"},{"lineNumber":78,"author":{"gitId":"felix-ong"},"content":"        }","lastModifiedDate":"2021-10-26"},{"lineNumber":79,"author":{"gitId":"felix-ong"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":80,"author":{"gitId":"felix-ong"},"content":"        DeallocateMemberCommand e \u003d (DeallocateMemberCommand) other;","lastModifiedDate":"2021-10-26"},{"lineNumber":81,"author":{"gitId":"felix-ong"},"content":"        return memberIndex.equals(e.memberIndex) \u0026\u0026 facilityIndex.equals(e.facilityIndex) \u0026\u0026 day.equals(e.day);","lastModifiedDate":"2021-10-26"},{"lineNumber":82,"author":{"gitId":"felix-ong"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":83,"author":{"gitId":"felix-ong"},"content":"}","lastModifiedDate":"2021-10-26"}],"authorContributionMap":{"felix-ong":83}},{"path":"src/main/java/seedu/address/logic/commands/DeleteAliasCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"YoYoCiti"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-10-17"},{"lineNumber":2,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":3,"author":{"gitId":"YoYoCiti"},"content":"import static java.util.Objects.isNull;","lastModifiedDate":"2021-10-17"},{"lineNumber":4,"author":{"gitId":"YoYoCiti"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-17"},{"lineNumber":5,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":6,"author":{"gitId":"YoYoCiti"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-17"},{"lineNumber":7,"author":{"gitId":"YoYoCiti"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-10-17"},{"lineNumber":8,"author":{"gitId":"YoYoCiti"},"content":"import seedu.address.model.alias.CommandWord;","lastModifiedDate":"2021-10-18"},{"lineNumber":9,"author":{"gitId":"YoYoCiti"},"content":"import seedu.address.model.alias.Shortcut;","lastModifiedDate":"2021-10-18"},{"lineNumber":10,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":11,"author":{"gitId":"YoYoCiti"},"content":"/**","lastModifiedDate":"2021-10-17"},{"lineNumber":12,"author":{"gitId":"YoYoCiti"},"content":" * Deletes user-defined alias from SportsPA user preferences.","lastModifiedDate":"2021-10-17"},{"lineNumber":13,"author":{"gitId":"YoYoCiti"},"content":" */","lastModifiedDate":"2021-10-17"},{"lineNumber":14,"author":{"gitId":"YoYoCiti"},"content":"public class DeleteAliasCommand extends Command {","lastModifiedDate":"2021-10-17"},{"lineNumber":15,"author":{"gitId":"YoYoCiti"},"content":"    public static final String COMMAND_WORD \u003d \"unalias\";","lastModifiedDate":"2021-10-17"},{"lineNumber":16,"author":{"gitId":"YoYoCiti"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Deletes specified alias (case-sensitive).\\n\"","lastModifiedDate":"2021-10-17"},{"lineNumber":17,"author":{"gitId":"YoYoCiti"},"content":"            + \"Parameters: \"","lastModifiedDate":"2021-10-17"},{"lineNumber":18,"author":{"gitId":"YoYoCiti"},"content":"            + \"SHORTCUT\\n\"","lastModifiedDate":"2021-10-19"},{"lineNumber":19,"author":{"gitId":"YoYoCiti"},"content":"            + \"Example: \" + COMMAND_WORD + \" lf\";","lastModifiedDate":"2021-10-17"},{"lineNumber":20,"author":{"gitId":"YoYoCiti"},"content":"    public static final String MESSAGE_ALIAS_DOES_NOT_EXIST \u003d \"The given alias \u0027%1$s\u0027 does not exist.\";","lastModifiedDate":"2021-10-17"},{"lineNumber":21,"author":{"gitId":"YoYoCiti"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Alias for %1$s defined as %2$s successfully removed.\";","lastModifiedDate":"2021-10-17"},{"lineNumber":22,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":23,"author":{"gitId":"YoYoCiti"},"content":"    private final Shortcut shortcut;","lastModifiedDate":"2021-10-18"},{"lineNumber":24,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":25,"author":{"gitId":"YoYoCiti"},"content":"    /**","lastModifiedDate":"2021-10-17"},{"lineNumber":26,"author":{"gitId":"YoYoCiti"},"content":"     * Creates {@code DeleteAlias} object.","lastModifiedDate":"2021-10-17"},{"lineNumber":27,"author":{"gitId":"YoYoCiti"},"content":"     */","lastModifiedDate":"2021-10-17"},{"lineNumber":28,"author":{"gitId":"YoYoCiti"},"content":"    public DeleteAliasCommand(Shortcut shortcut) {","lastModifiedDate":"2021-10-18"},{"lineNumber":29,"author":{"gitId":"YoYoCiti"},"content":"        requireNonNull(shortcut);","lastModifiedDate":"2021-10-18"},{"lineNumber":30,"author":{"gitId":"YoYoCiti"},"content":"        this.shortcut \u003d shortcut;","lastModifiedDate":"2021-10-18"},{"lineNumber":31,"author":{"gitId":"YoYoCiti"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":32,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":33,"author":{"gitId":"YoYoCiti"},"content":"    @Override","lastModifiedDate":"2021-10-17"},{"lineNumber":34,"author":{"gitId":"YoYoCiti"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-10-17"},{"lineNumber":35,"author":{"gitId":"YoYoCiti"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-10-17"},{"lineNumber":36,"author":{"gitId":"YoYoCiti"},"content":"        CommandWord commandWord \u003d model.removeAlias(shortcut);","lastModifiedDate":"2021-10-18"},{"lineNumber":37,"author":{"gitId":"YoYoCiti"},"content":"        if (isNull(commandWord)) {","lastModifiedDate":"2021-10-17"},{"lineNumber":38,"author":{"gitId":"YoYoCiti"},"content":"            throw new CommandException(String.format(MESSAGE_ALIAS_DOES_NOT_EXIST, shortcut));","lastModifiedDate":"2021-10-18"},{"lineNumber":39,"author":{"gitId":"YoYoCiti"},"content":"        }","lastModifiedDate":"2021-10-17"},{"lineNumber":40,"author":{"gitId":"YoYoCiti"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, commandWord, shortcut));","lastModifiedDate":"2021-10-18"},{"lineNumber":41,"author":{"gitId":"YoYoCiti"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":42,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":43,"author":{"gitId":"YoYoCiti"},"content":"    @Override","lastModifiedDate":"2021-10-17"},{"lineNumber":44,"author":{"gitId":"YoYoCiti"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2021-10-17"},{"lineNumber":45,"author":{"gitId":"YoYoCiti"},"content":"        return (obj \u003d\u003d this)","lastModifiedDate":"2021-10-17"},{"lineNumber":46,"author":{"gitId":"YoYoCiti"},"content":"                || (obj instanceof DeleteAliasCommand","lastModifiedDate":"2021-10-17"},{"lineNumber":47,"author":{"gitId":"YoYoCiti"},"content":"                \u0026\u0026 shortcut.equals(((DeleteAliasCommand) obj).shortcut));","lastModifiedDate":"2021-10-18"},{"lineNumber":48,"author":{"gitId":"YoYoCiti"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":49,"author":{"gitId":"YoYoCiti"},"content":"}","lastModifiedDate":"2021-10-17"}],"authorContributionMap":{"YoYoCiti":49}},{"path":"src/main/java/seedu/address/logic/commands/DeleteFacilityCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"YoYoCiti"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-10-08"},{"lineNumber":2,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":3,"author":{"gitId":"YoYoCiti"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-08"},{"lineNumber":4,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":5,"author":{"gitId":"YoYoCiti"},"content":"import java.util.List;","lastModifiedDate":"2021-10-08"},{"lineNumber":6,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":7,"author":{"gitId":"YoYoCiti"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2021-10-08"},{"lineNumber":8,"author":{"gitId":"YoYoCiti"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-10-08"},{"lineNumber":9,"author":{"gitId":"YoYoCiti"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-08"},{"lineNumber":10,"author":{"gitId":"YoYoCiti"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-10-08"},{"lineNumber":11,"author":{"gitId":"YoYoCiti"},"content":"import seedu.address.model.facility.Facility;","lastModifiedDate":"2021-10-08"},{"lineNumber":12,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":13,"author":{"gitId":"YoYoCiti"},"content":"public class DeleteFacilityCommand extends Command {","lastModifiedDate":"2021-10-08"},{"lineNumber":14,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":15,"author":{"gitId":"YoYoCiti"},"content":"    public static final String COMMAND_WORD \u003d \"deletef\";","lastModifiedDate":"2021-10-08"},{"lineNumber":16,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":17,"author":{"gitId":"YoYoCiti"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2021-10-08"},{"lineNumber":18,"author":{"gitId":"YoYoCiti"},"content":"            + \": Deletes the facility identified by the index number used in the displayed person list.\\n\"","lastModifiedDate":"2021-10-08"},{"lineNumber":19,"author":{"gitId":"YoYoCiti"},"content":"            + \"Parameters: INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2021-10-08"},{"lineNumber":20,"author":{"gitId":"YoYoCiti"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1\";","lastModifiedDate":"2021-10-08"},{"lineNumber":21,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":22,"author":{"gitId":"YoYoCiti"},"content":"    public static final String MESSAGE_DELETE_FACILITY_SUCCESS \u003d \"Deleted Facility: %1$s\";","lastModifiedDate":"2021-10-08"},{"lineNumber":23,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":24,"author":{"gitId":"YoYoCiti"},"content":"    private final Index targetIndex;","lastModifiedDate":"2021-10-08"},{"lineNumber":25,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":26,"author":{"gitId":"YoYoCiti"},"content":"    public DeleteFacilityCommand(Index targetIndex) {","lastModifiedDate":"2021-10-08"},{"lineNumber":27,"author":{"gitId":"YoYoCiti"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2021-10-08"},{"lineNumber":28,"author":{"gitId":"YoYoCiti"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":29,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":30,"author":{"gitId":"YoYoCiti"},"content":"    @Override","lastModifiedDate":"2021-10-08"},{"lineNumber":31,"author":{"gitId":"YoYoCiti"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-10-08"},{"lineNumber":32,"author":{"gitId":"YoYoCiti"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-10-08"},{"lineNumber":33,"author":{"gitId":"YoYoCiti"},"content":"        List\u003cFacility\u003e lastShownFacilityList \u003d model.getFilteredFacilityList();","lastModifiedDate":"2021-10-08"},{"lineNumber":34,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":35,"author":{"gitId":"YoYoCiti"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownFacilityList.size()) {","lastModifiedDate":"2021-10-08"},{"lineNumber":36,"author":{"gitId":"YoYoCiti"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_FACILITY_DISPLAYED_INDEX);","lastModifiedDate":"2021-10-08"},{"lineNumber":37,"author":{"gitId":"YoYoCiti"},"content":"        }","lastModifiedDate":"2021-10-08"},{"lineNumber":38,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":39,"author":{"gitId":"YoYoCiti"},"content":"        Facility facilityToDelete \u003d lastShownFacilityList.get(targetIndex.getZeroBased());","lastModifiedDate":"2021-10-08"},{"lineNumber":40,"author":{"gitId":"YoYoCiti"},"content":"        model.deleteFacility(facilityToDelete);","lastModifiedDate":"2021-10-08"},{"lineNumber":41,"author":{"gitId":"YoYoCiti"},"content":"        return new CommandResult(String.format(MESSAGE_DELETE_FACILITY_SUCCESS, facilityToDelete),","lastModifiedDate":"2021-10-24"},{"lineNumber":42,"author":{"gitId":"YoYoCiti"},"content":"                false, true, false);","lastModifiedDate":"2021-10-24"},{"lineNumber":43,"author":{"gitId":"YoYoCiti"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":44,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":45,"author":{"gitId":"YoYoCiti"},"content":"    @Override","lastModifiedDate":"2021-10-08"},{"lineNumber":46,"author":{"gitId":"YoYoCiti"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-08"},{"lineNumber":47,"author":{"gitId":"YoYoCiti"},"content":"        return other \u003d\u003d this","lastModifiedDate":"2021-10-08"},{"lineNumber":48,"author":{"gitId":"YoYoCiti"},"content":"                || (other instanceof DeleteFacilityCommand","lastModifiedDate":"2021-10-08"},{"lineNumber":49,"author":{"gitId":"YoYoCiti"},"content":"                \u0026\u0026 targetIndex.equals(((DeleteFacilityCommand) other).targetIndex));","lastModifiedDate":"2021-10-08"},{"lineNumber":50,"author":{"gitId":"YoYoCiti"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":51,"author":{"gitId":"YoYoCiti"},"content":"}","lastModifiedDate":"2021-10-08"}],"authorContributionMap":{"YoYoCiti":51}},{"path":"src/main/java/seedu/address/logic/commands/DeleteMemberCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-09-01"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2016-09-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Deletes a person identified using it\u0027s displayed index from the address book.","lastModifiedDate":"2018-04-01"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"tsinyee"},"content":"public class DeleteMemberCommand extends Command {","lastModifiedDate":"2021-10-10"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"tsinyee"},"content":"    public static final String COMMAND_WORD \u003d \"deletem\";","lastModifiedDate":"2021-10-10"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"tsinyee"},"content":"            + \": Deletes the member identified by the index number used in the displayed member list.\\n\"","lastModifiedDate":"2021-10-10"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2016-09-29"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1\";","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"tsinyee"},"content":"    public static final String MESSAGE_DELETE_PERSON_SUCCESS \u003d \"Deleted Member: %1$s\";","lastModifiedDate":"2021-10-10"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final Index targetIndex;","lastModifiedDate":"2017-06-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"tsinyee"},"content":"    public DeleteMemberCommand(Index targetIndex) {","lastModifiedDate":"2021-10-10"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2016-09-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2018-04-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2018-04-19"},{"lineNumber":39,"author":{"gitId":"felix-ong"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_MEMBER_DISPLAYED_INDEX);","lastModifiedDate":"2021-10-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        Person personToDelete \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2018-04-19"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        model.deletePerson(personToDelete);","lastModifiedDate":"2016-09-25"},{"lineNumber":44,"author":{"gitId":"YoYoCiti"},"content":"        return new CommandResult(String.format(MESSAGE_DELETE_PERSON_SUCCESS, personToDelete),","lastModifiedDate":"2021-10-24"},{"lineNumber":45,"author":{"gitId":"YoYoCiti"},"content":"                false, false, true);","lastModifiedDate":"2021-10-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"tsinyee"},"content":"                || (other instanceof DeleteMemberCommand // instanceof handles nulls","lastModifiedDate":"2021-10-10"},{"lineNumber":52,"author":{"gitId":"tsinyee"},"content":"                \u0026\u0026 targetIndex.equals(((DeleteMemberCommand) other).targetIndex)); // state check","lastModifiedDate":"2021-10-10"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"YoYoCiti":2,"-":44,"tsinyee":7,"felix-ong":1}},{"path":"src/main/java/seedu/address/logic/commands/EditFacilityCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"YoYoCiti"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-10-12"},{"lineNumber":2,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":3,"author":{"gitId":"YoYoCiti"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-12"},{"lineNumber":4,"author":{"gitId":"YoYoCiti"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_CAPACITY;","lastModifiedDate":"2021-10-12"},{"lineNumber":5,"author":{"gitId":"YoYoCiti"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_LOCATION;","lastModifiedDate":"2021-10-12"},{"lineNumber":6,"author":{"gitId":"YoYoCiti"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2021-10-12"},{"lineNumber":7,"author":{"gitId":"YoYoCiti"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TIME;","lastModifiedDate":"2021-10-12"},{"lineNumber":8,"author":{"gitId":"YoYoCiti"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_FACILITIES;","lastModifiedDate":"2021-10-12"},{"lineNumber":9,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":10,"author":{"gitId":"YoYoCiti"},"content":"import java.util.List;","lastModifiedDate":"2021-10-12"},{"lineNumber":11,"author":{"gitId":"YoYoCiti"},"content":"import java.util.Optional;","lastModifiedDate":"2021-10-12"},{"lineNumber":12,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":13,"author":{"gitId":"YoYoCiti"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2021-10-12"},{"lineNumber":14,"author":{"gitId":"YoYoCiti"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-10-12"},{"lineNumber":15,"author":{"gitId":"YoYoCiti"},"content":"import seedu.address.commons.util.CollectionUtil;","lastModifiedDate":"2021-10-12"},{"lineNumber":16,"author":{"gitId":"YoYoCiti"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-12"},{"lineNumber":17,"author":{"gitId":"YoYoCiti"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-10-12"},{"lineNumber":18,"author":{"gitId":"YoYoCiti"},"content":"import seedu.address.model.facility.Capacity;","lastModifiedDate":"2021-10-12"},{"lineNumber":19,"author":{"gitId":"YoYoCiti"},"content":"import seedu.address.model.facility.Facility;","lastModifiedDate":"2021-10-12"},{"lineNumber":20,"author":{"gitId":"YoYoCiti"},"content":"import seedu.address.model.facility.FacilityName;","lastModifiedDate":"2021-10-12"},{"lineNumber":21,"author":{"gitId":"YoYoCiti"},"content":"import seedu.address.model.facility.Location;","lastModifiedDate":"2021-10-12"},{"lineNumber":22,"author":{"gitId":"YoYoCiti"},"content":"import seedu.address.model.facility.Time;","lastModifiedDate":"2021-10-12"},{"lineNumber":23,"author":{"gitId":"YoYoCiti"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2021-11-01"},{"lineNumber":24,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":25,"author":{"gitId":"YoYoCiti"},"content":"public class EditFacilityCommand extends Command {","lastModifiedDate":"2021-10-12"},{"lineNumber":26,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":27,"author":{"gitId":"YoYoCiti"},"content":"    public static final String COMMAND_WORD \u003d \"editf\";","lastModifiedDate":"2021-10-12"},{"lineNumber":28,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":29,"author":{"gitId":"YoYoCiti"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Edits the details of the facility identified \"","lastModifiedDate":"2021-10-12"},{"lineNumber":30,"author":{"gitId":"YoYoCiti"},"content":"            + \"by the index number used in the displayed facility list. \"","lastModifiedDate":"2021-10-12"},{"lineNumber":31,"author":{"gitId":"YoYoCiti"},"content":"            + \"Existing values will be overwritten by the input values.\\n\"","lastModifiedDate":"2021-10-12"},{"lineNumber":32,"author":{"gitId":"YoYoCiti"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2021-10-12"},{"lineNumber":33,"author":{"gitId":"YoYoCiti"},"content":"            + \"[\" + PREFIX_NAME + \"NAME] \"","lastModifiedDate":"2021-10-12"},{"lineNumber":34,"author":{"gitId":"YoYoCiti"},"content":"            + \"[\" + PREFIX_LOCATION + \"LOCATION] \"","lastModifiedDate":"2021-10-12"},{"lineNumber":35,"author":{"gitId":"YoYoCiti"},"content":"            + \"[\" + PREFIX_TIME + \"TIME] \"","lastModifiedDate":"2021-10-12"},{"lineNumber":36,"author":{"gitId":"YoYoCiti"},"content":"            + \"[\" + PREFIX_CAPACITY + \"CAPACITY]\\n\"","lastModifiedDate":"2021-10-12"},{"lineNumber":37,"author":{"gitId":"YoYoCiti"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2021-10-12"},{"lineNumber":38,"author":{"gitId":"YoYoCiti"},"content":"            + PREFIX_LOCATION + \"Kent Ridge Sports Hall 5\";","lastModifiedDate":"2021-10-12"},{"lineNumber":39,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":40,"author":{"gitId":"YoYoCiti"},"content":"    public static final String MESSAGE_EDIT_FACILITY_SUCCESS \u003d \"Edited Facility: %1$s\";","lastModifiedDate":"2021-10-12"},{"lineNumber":41,"author":{"gitId":"YoYoCiti"},"content":"    public static final String MESSAGE_NOT_EDITED \u003d \"At least one field to edit must be provided.\";","lastModifiedDate":"2021-10-12"},{"lineNumber":42,"author":{"gitId":"YoYoCiti"},"content":"    public static final String MESSAGE_DUPLICATE_FACILITY \u003d \"This facility already exists in SportsPA\";","lastModifiedDate":"2021-10-12"},{"lineNumber":43,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":44,"author":{"gitId":"YoYoCiti"},"content":"    private final Index index;","lastModifiedDate":"2021-10-12"},{"lineNumber":45,"author":{"gitId":"YoYoCiti"},"content":"    private final EditFacilityDescriptor editFacilityDescriptor;","lastModifiedDate":"2021-10-12"},{"lineNumber":46,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":47,"author":{"gitId":"YoYoCiti"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":48,"author":{"gitId":"YoYoCiti"},"content":"     * Creates EditFacilityCommand object.","lastModifiedDate":"2021-10-12"},{"lineNumber":49,"author":{"gitId":"YoYoCiti"},"content":"     *","lastModifiedDate":"2021-10-12"},{"lineNumber":50,"author":{"gitId":"YoYoCiti"},"content":"     * @param index of the facility in the filtered facility list to edit.","lastModifiedDate":"2021-10-12"},{"lineNumber":51,"author":{"gitId":"YoYoCiti"},"content":"     * @param editFacilityDescriptor details to edit the facility with.","lastModifiedDate":"2021-10-12"},{"lineNumber":52,"author":{"gitId":"YoYoCiti"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":53,"author":{"gitId":"YoYoCiti"},"content":"    public EditFacilityCommand(Index index, EditFacilityDescriptor editFacilityDescriptor) {","lastModifiedDate":"2021-10-12"},{"lineNumber":54,"author":{"gitId":"YoYoCiti"},"content":"        requireNonNull(index);","lastModifiedDate":"2021-10-12"},{"lineNumber":55,"author":{"gitId":"YoYoCiti"},"content":"        requireNonNull(editFacilityDescriptor);","lastModifiedDate":"2021-10-12"},{"lineNumber":56,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":57,"author":{"gitId":"YoYoCiti"},"content":"        this.index \u003d index;","lastModifiedDate":"2021-10-12"},{"lineNumber":58,"author":{"gitId":"YoYoCiti"},"content":"        this.editFacilityDescriptor \u003d new EditFacilityDescriptor(editFacilityDescriptor);","lastModifiedDate":"2021-10-12"},{"lineNumber":59,"author":{"gitId":"YoYoCiti"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":60,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":61,"author":{"gitId":"YoYoCiti"},"content":"    @Override","lastModifiedDate":"2021-10-12"},{"lineNumber":62,"author":{"gitId":"YoYoCiti"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-10-12"},{"lineNumber":63,"author":{"gitId":"YoYoCiti"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-10-12"},{"lineNumber":64,"author":{"gitId":"YoYoCiti"},"content":"        List\u003cFacility\u003e lastShownList \u003d model.getFilteredFacilityList();","lastModifiedDate":"2021-10-12"},{"lineNumber":65,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":66,"author":{"gitId":"YoYoCiti"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2021-10-12"},{"lineNumber":67,"author":{"gitId":"YoYoCiti"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_FACILITY_DISPLAYED_INDEX);","lastModifiedDate":"2021-10-12"},{"lineNumber":68,"author":{"gitId":"YoYoCiti"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":69,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":70,"author":{"gitId":"YoYoCiti"},"content":"        Facility facilityToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2021-10-12"},{"lineNumber":71,"author":{"gitId":"YoYoCiti"},"content":"        Facility editedFacility \u003d createEditedFacility(facilityToEdit, editFacilityDescriptor);","lastModifiedDate":"2021-10-12"},{"lineNumber":72,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":73,"author":{"gitId":"YoYoCiti"},"content":"        if (!facilityToEdit.isSameFacility(editedFacility) \u0026\u0026 model.hasFacility(editedFacility)) {","lastModifiedDate":"2021-10-12"},{"lineNumber":74,"author":{"gitId":"YoYoCiti"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_FACILITY);","lastModifiedDate":"2021-10-12"},{"lineNumber":75,"author":{"gitId":"YoYoCiti"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":76,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":77,"author":{"gitId":"YoYoCiti"},"content":"        if (editedFacility.isMaxCapacity()) {","lastModifiedDate":"2021-11-01"},{"lineNumber":78,"author":{"gitId":"YoYoCiti"},"content":"            editedFacility.clearAllocationList();","lastModifiedDate":"2021-11-01"},{"lineNumber":79,"author":{"gitId":"YoYoCiti"},"content":"        }","lastModifiedDate":"2021-11-01"},{"lineNumber":80,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":81,"author":{"gitId":"YoYoCiti"},"content":"        model.setFacility(facilityToEdit, editedFacility);","lastModifiedDate":"2021-10-12"},{"lineNumber":82,"author":{"gitId":"YoYoCiti"},"content":"        model.updateFilteredFacilityList(PREDICATE_SHOW_ALL_FACILITIES);","lastModifiedDate":"2021-10-12"},{"lineNumber":83,"author":{"gitId":"YoYoCiti"},"content":"        return new CommandResult(String.format(MESSAGE_EDIT_FACILITY_SUCCESS, editedFacility),","lastModifiedDate":"2021-10-24"},{"lineNumber":84,"author":{"gitId":"YoYoCiti"},"content":"                false, true, false);","lastModifiedDate":"2021-10-24"},{"lineNumber":85,"author":{"gitId":"YoYoCiti"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":86,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":87,"author":{"gitId":"YoYoCiti"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":88,"author":{"gitId":"YoYoCiti"},"content":"     * Creates and returns a {@code Facility} with the details of {@code facilityToEdit}","lastModifiedDate":"2021-10-12"},{"lineNumber":89,"author":{"gitId":"YoYoCiti"},"content":"     * edited with {@code editFacilityDescriptor}.","lastModifiedDate":"2021-10-12"},{"lineNumber":90,"author":{"gitId":"YoYoCiti"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":91,"author":{"gitId":"YoYoCiti"},"content":"    private static Facility createEditedFacility(Facility facilityToEdit,","lastModifiedDate":"2021-10-12"},{"lineNumber":92,"author":{"gitId":"YoYoCiti"},"content":"                                                 EditFacilityDescriptor editFacilityDescriptor) {","lastModifiedDate":"2021-10-12"},{"lineNumber":93,"author":{"gitId":"YoYoCiti"},"content":"        assert facilityToEdit !\u003d null;","lastModifiedDate":"2021-10-12"},{"lineNumber":94,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":95,"author":{"gitId":"YoYoCiti"},"content":"        FacilityName updatedName \u003d editFacilityDescriptor.getFacilityName().orElse(facilityToEdit.getName());","lastModifiedDate":"2021-10-12"},{"lineNumber":96,"author":{"gitId":"YoYoCiti"},"content":"        Location updatedLocation \u003d editFacilityDescriptor.getLocation().orElse(facilityToEdit.getLocation());","lastModifiedDate":"2021-10-12"},{"lineNumber":97,"author":{"gitId":"YoYoCiti"},"content":"        Time updatedTime \u003d editFacilityDescriptor.getTime().orElse(facilityToEdit.getTime());","lastModifiedDate":"2021-10-12"},{"lineNumber":98,"author":{"gitId":"YoYoCiti"},"content":"        Capacity updatedCapacity \u003d editFacilityDescriptor.getCapacity().orElse(facilityToEdit.getCapacity());","lastModifiedDate":"2021-10-12"},{"lineNumber":99,"author":{"gitId":"YoYoCiti"},"content":"        // Not an editable field","lastModifiedDate":"2021-11-01"},{"lineNumber":100,"author":{"gitId":"YoYoCiti"},"content":"        List\u003cPerson\u003e personAllocatedList \u003d facilityToEdit.getPersonAllocatedList();","lastModifiedDate":"2021-11-01"},{"lineNumber":101,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":102,"author":{"gitId":"YoYoCiti"},"content":"        return new Facility(updatedName, updatedLocation, updatedTime, updatedCapacity, personAllocatedList);","lastModifiedDate":"2021-11-01"},{"lineNumber":103,"author":{"gitId":"YoYoCiti"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":104,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":105,"author":{"gitId":"YoYoCiti"},"content":"    @Override","lastModifiedDate":"2021-10-12"},{"lineNumber":106,"author":{"gitId":"YoYoCiti"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-12"},{"lineNumber":107,"author":{"gitId":"YoYoCiti"},"content":"        return other \u003d\u003d this","lastModifiedDate":"2021-10-12"},{"lineNumber":108,"author":{"gitId":"YoYoCiti"},"content":"                || (other instanceof EditFacilityCommand","lastModifiedDate":"2021-10-12"},{"lineNumber":109,"author":{"gitId":"YoYoCiti"},"content":"                \u0026\u0026 index.equals(((EditFacilityCommand) other).index)","lastModifiedDate":"2021-10-12"},{"lineNumber":110,"author":{"gitId":"YoYoCiti"},"content":"                \u0026\u0026 editFacilityDescriptor.equals(((EditFacilityCommand) other).editFacilityDescriptor));","lastModifiedDate":"2021-10-12"},{"lineNumber":111,"author":{"gitId":"YoYoCiti"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":112,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":113,"author":{"gitId":"YoYoCiti"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":114,"author":{"gitId":"YoYoCiti"},"content":"     * Stores the detials to edit the facility with. Each non-empty field will replace the","lastModifiedDate":"2021-10-12"},{"lineNumber":115,"author":{"gitId":"YoYoCiti"},"content":"     * corresponding field value of the facility.","lastModifiedDate":"2021-10-12"},{"lineNumber":116,"author":{"gitId":"YoYoCiti"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":117,"author":{"gitId":"YoYoCiti"},"content":"    public static class EditFacilityDescriptor {","lastModifiedDate":"2021-10-12"},{"lineNumber":118,"author":{"gitId":"YoYoCiti"},"content":"        private FacilityName facilityName;","lastModifiedDate":"2021-10-12"},{"lineNumber":119,"author":{"gitId":"YoYoCiti"},"content":"        private Location location;","lastModifiedDate":"2021-10-12"},{"lineNumber":120,"author":{"gitId":"YoYoCiti"},"content":"        private Time time;","lastModifiedDate":"2021-10-12"},{"lineNumber":121,"author":{"gitId":"YoYoCiti"},"content":"        private Capacity capacity;","lastModifiedDate":"2021-10-12"},{"lineNumber":122,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":123,"author":{"gitId":"YoYoCiti"},"content":"        public EditFacilityDescriptor() {}","lastModifiedDate":"2021-10-12"},{"lineNumber":124,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":125,"author":{"gitId":"YoYoCiti"},"content":"        /**","lastModifiedDate":"2021-10-12"},{"lineNumber":126,"author":{"gitId":"YoYoCiti"},"content":"         * Copy constructor.","lastModifiedDate":"2021-10-12"},{"lineNumber":127,"author":{"gitId":"YoYoCiti"},"content":"         */","lastModifiedDate":"2021-10-12"},{"lineNumber":128,"author":{"gitId":"YoYoCiti"},"content":"        public EditFacilityDescriptor(EditFacilityDescriptor toCopy) {","lastModifiedDate":"2021-10-12"},{"lineNumber":129,"author":{"gitId":"YoYoCiti"},"content":"            setFacilityName(toCopy.facilityName);","lastModifiedDate":"2021-10-12"},{"lineNumber":130,"author":{"gitId":"YoYoCiti"},"content":"            setLocation(toCopy.location);","lastModifiedDate":"2021-10-12"},{"lineNumber":131,"author":{"gitId":"YoYoCiti"},"content":"            setTime(toCopy.time);","lastModifiedDate":"2021-10-12"},{"lineNumber":132,"author":{"gitId":"YoYoCiti"},"content":"            setCapacity(toCopy.capacity);","lastModifiedDate":"2021-10-12"},{"lineNumber":133,"author":{"gitId":"YoYoCiti"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":134,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":135,"author":{"gitId":"YoYoCiti"},"content":"        /**","lastModifiedDate":"2021-10-12"},{"lineNumber":136,"author":{"gitId":"YoYoCiti"},"content":"         * Checks if at least one field is edited.","lastModifiedDate":"2021-10-12"},{"lineNumber":137,"author":{"gitId":"YoYoCiti"},"content":"         *","lastModifiedDate":"2021-10-12"},{"lineNumber":138,"author":{"gitId":"YoYoCiti"},"content":"         * @return true if at least one field is edited, false is otherwise.","lastModifiedDate":"2021-10-12"},{"lineNumber":139,"author":{"gitId":"YoYoCiti"},"content":"         */","lastModifiedDate":"2021-10-12"},{"lineNumber":140,"author":{"gitId":"YoYoCiti"},"content":"        public boolean isAnyFieldEdited() {","lastModifiedDate":"2021-10-12"},{"lineNumber":141,"author":{"gitId":"YoYoCiti"},"content":"            return CollectionUtil.isAnyNonNull(facilityName, location, time, capacity);","lastModifiedDate":"2021-10-12"},{"lineNumber":142,"author":{"gitId":"YoYoCiti"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":143,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":144,"author":{"gitId":"YoYoCiti"},"content":"        public void setFacilityName(FacilityName facilityName) {","lastModifiedDate":"2021-10-12"},{"lineNumber":145,"author":{"gitId":"YoYoCiti"},"content":"            this.facilityName \u003d facilityName;","lastModifiedDate":"2021-10-12"},{"lineNumber":146,"author":{"gitId":"YoYoCiti"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":147,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":148,"author":{"gitId":"YoYoCiti"},"content":"        public Optional\u003cFacilityName\u003e getFacilityName() {","lastModifiedDate":"2021-10-12"},{"lineNumber":149,"author":{"gitId":"YoYoCiti"},"content":"            return Optional.ofNullable(facilityName);","lastModifiedDate":"2021-10-12"},{"lineNumber":150,"author":{"gitId":"YoYoCiti"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":151,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":152,"author":{"gitId":"YoYoCiti"},"content":"        public void setLocation(Location location) {","lastModifiedDate":"2021-10-12"},{"lineNumber":153,"author":{"gitId":"YoYoCiti"},"content":"            this.location \u003d location;","lastModifiedDate":"2021-10-12"},{"lineNumber":154,"author":{"gitId":"YoYoCiti"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":155,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":156,"author":{"gitId":"YoYoCiti"},"content":"        public Optional\u003cLocation\u003e getLocation() {","lastModifiedDate":"2021-10-12"},{"lineNumber":157,"author":{"gitId":"YoYoCiti"},"content":"            return Optional.ofNullable(location);","lastModifiedDate":"2021-10-12"},{"lineNumber":158,"author":{"gitId":"YoYoCiti"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":159,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":160,"author":{"gitId":"YoYoCiti"},"content":"        public void setCapacity(Capacity capacity) {","lastModifiedDate":"2021-10-12"},{"lineNumber":161,"author":{"gitId":"YoYoCiti"},"content":"            this.capacity \u003d capacity;","lastModifiedDate":"2021-10-12"},{"lineNumber":162,"author":{"gitId":"YoYoCiti"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":163,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":164,"author":{"gitId":"YoYoCiti"},"content":"        public Optional\u003cCapacity\u003e getCapacity() {","lastModifiedDate":"2021-10-12"},{"lineNumber":165,"author":{"gitId":"YoYoCiti"},"content":"            return Optional.ofNullable(capacity);","lastModifiedDate":"2021-10-12"},{"lineNumber":166,"author":{"gitId":"YoYoCiti"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":167,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":168,"author":{"gitId":"YoYoCiti"},"content":"        public void setTime(Time time) {","lastModifiedDate":"2021-10-12"},{"lineNumber":169,"author":{"gitId":"YoYoCiti"},"content":"            this.time \u003d time;","lastModifiedDate":"2021-10-12"},{"lineNumber":170,"author":{"gitId":"YoYoCiti"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":171,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":172,"author":{"gitId":"YoYoCiti"},"content":"        public Optional\u003cTime\u003e getTime() {","lastModifiedDate":"2021-10-12"},{"lineNumber":173,"author":{"gitId":"YoYoCiti"},"content":"            return Optional.ofNullable(time);","lastModifiedDate":"2021-10-12"},{"lineNumber":174,"author":{"gitId":"YoYoCiti"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":175,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":176,"author":{"gitId":"YoYoCiti"},"content":"        @Override","lastModifiedDate":"2021-10-12"},{"lineNumber":177,"author":{"gitId":"YoYoCiti"},"content":"        public boolean equals(Object other) {","lastModifiedDate":"2021-10-12"},{"lineNumber":178,"author":{"gitId":"YoYoCiti"},"content":"            if (other \u003d\u003d this) {","lastModifiedDate":"2021-10-12"},{"lineNumber":179,"author":{"gitId":"YoYoCiti"},"content":"                return true;","lastModifiedDate":"2021-10-12"},{"lineNumber":180,"author":{"gitId":"YoYoCiti"},"content":"            }","lastModifiedDate":"2021-10-12"},{"lineNumber":181,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":182,"author":{"gitId":"YoYoCiti"},"content":"            if (!(other instanceof EditFacilityDescriptor)) {","lastModifiedDate":"2021-10-12"},{"lineNumber":183,"author":{"gitId":"YoYoCiti"},"content":"                return false;","lastModifiedDate":"2021-10-12"},{"lineNumber":184,"author":{"gitId":"YoYoCiti"},"content":"            }","lastModifiedDate":"2021-10-12"},{"lineNumber":185,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":186,"author":{"gitId":"YoYoCiti"},"content":"            EditFacilityDescriptor e \u003d (EditFacilityDescriptor) other;","lastModifiedDate":"2021-10-12"},{"lineNumber":187,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":188,"author":{"gitId":"YoYoCiti"},"content":"            return getFacilityName().equals(e.getFacilityName())","lastModifiedDate":"2021-10-12"},{"lineNumber":189,"author":{"gitId":"YoYoCiti"},"content":"                    \u0026\u0026 getLocation().equals(e.getLocation())","lastModifiedDate":"2021-10-12"},{"lineNumber":190,"author":{"gitId":"YoYoCiti"},"content":"                    \u0026\u0026 getTime().equals(e.getTime())","lastModifiedDate":"2021-10-12"},{"lineNumber":191,"author":{"gitId":"YoYoCiti"},"content":"                    \u0026\u0026 getCapacity().equals(e.getCapacity());","lastModifiedDate":"2021-10-12"},{"lineNumber":192,"author":{"gitId":"YoYoCiti"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":193,"author":{"gitId":"YoYoCiti"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":194,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":195,"author":{"gitId":"YoYoCiti"},"content":"}","lastModifiedDate":"2021-10-12"}],"authorContributionMap":{"YoYoCiti":195}},{"path":"src/main/java/seedu/address/logic/commands/EditMemberCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-12-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2021-10-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2021-10-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2021-10-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2017-08-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2021-10-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2021-10-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2021-10-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2021-10-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2021-10-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2016-12-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.CollectionUtil;","lastModifiedDate":"2016-12-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":20,"author":{"gitId":"felix-ong"},"content":"import seedu.address.model.person.Availability;","lastModifiedDate":"2021-10-10"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2016-12-26"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-12-26"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2016-12-26"},{"lineNumber":24,"author":{"gitId":"Shruthi0310"},"content":"import seedu.address.model.person.TodayAttendance;","lastModifiedDate":"2021-10-24"},{"lineNumber":25,"author":{"gitId":"Shruthi0310"},"content":"import seedu.address.model.person.TotalAttendance;","lastModifiedDate":"2021-10-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2021-10-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-12-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":" * Edits the details of an existing person in the address book.","lastModifiedDate":"2016-12-26"},{"lineNumber":30,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-12-26"},{"lineNumber":31,"author":{"gitId":"tsinyee"},"content":"public class EditMemberCommand extends Command {","lastModifiedDate":"2021-10-10"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":33,"author":{"gitId":"felix-ong"},"content":"    public static final String COMMAND_WORD \u003d \"editm\";","lastModifiedDate":"2021-10-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":35,"author":{"gitId":"tsinyee"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Edits the details of the member identified \"","lastModifiedDate":"2021-10-06"},{"lineNumber":36,"author":{"gitId":"tsinyee"},"content":"            + \"by the index number used in the displayed member list. \"","lastModifiedDate":"2021-10-06"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            + \"Existing values will be overwritten by the input values.\\n\"","lastModifiedDate":"2016-12-26"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2017-06-06"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_NAME + \"NAME] \"","lastModifiedDate":"2017-06-06"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_PHONE + \"PHONE] \"","lastModifiedDate":"2021-10-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2021-10-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":43,"author":{"gitId":"tsinyee"},"content":"            + PREFIX_PHONE + \"91234567\";","lastModifiedDate":"2021-10-06"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_EDIT_PERSON_SUCCESS \u003d \"Edited Person: %1$s\";","lastModifiedDate":"2016-12-26"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_NOT_EDITED \u003d \"At least one field to edit must be provided.\";","lastModifiedDate":"2016-12-26"},{"lineNumber":47,"author":{"gitId":"tsinyee"},"content":"    public static final String MESSAGE_DUPLICATE_MEMBER \u003d \"This person already exists in the address book.\";","lastModifiedDate":"2021-10-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    private final Index index;","lastModifiedDate":"2017-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    private final EditPersonDescriptor editPersonDescriptor;","lastModifiedDate":"2016-12-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * @param index of the person in the filtered person list to edit","lastModifiedDate":"2017-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * @param editPersonDescriptor details to edit the person with","lastModifiedDate":"2016-12-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":56,"author":{"gitId":"tsinyee"},"content":"    public EditMemberCommand(Index index, EditPersonDescriptor editPersonDescriptor) {","lastModifiedDate":"2021-10-10"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        requireNonNull(index);","lastModifiedDate":"2017-05-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        requireNonNull(editPersonDescriptor);","lastModifiedDate":"2017-05-15"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        this.index \u003d index;","lastModifiedDate":"2017-05-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        this.editPersonDescriptor \u003d new EditPersonDescriptor(editPersonDescriptor);","lastModifiedDate":"2016-12-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-26"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2018-04-19"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2018-04-19"},{"lineNumber":70,"author":{"gitId":"felix-ong"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_MEMBER_DISPLAYED_INDEX);","lastModifiedDate":"2021-10-05"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        Person personToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2018-04-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d createEditedPerson(personToEdit, editPersonDescriptor);","lastModifiedDate":"2018-04-19"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        if (!personToEdit.isSamePerson(editedPerson) \u0026\u0026 model.hasPerson(editedPerson)) {","lastModifiedDate":"2018-08-07"},{"lineNumber":77,"author":{"gitId":"tsinyee"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_MEMBER);","lastModifiedDate":"2021-10-05"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        model.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":82,"author":{"gitId":"YoYoCiti"},"content":"        return new CommandResult(String.format(MESSAGE_EDIT_PERSON_SUCCESS, editedPerson),","lastModifiedDate":"2021-10-24"},{"lineNumber":83,"author":{"gitId":"YoYoCiti"},"content":"                false, false, true);","lastModifiedDate":"2021-10-24"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * Creates and returns a {@code Person} with the details of {@code personToEdit}","lastModifiedDate":"2016-12-26"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     * edited with {@code editPersonDescriptor}.","lastModifiedDate":"2016-12-26"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    private static Person createEditedPerson(Person personToEdit, EditPersonDescriptor editPersonDescriptor) {","lastModifiedDate":"2018-01-10"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        assert personToEdit !\u003d null;","lastModifiedDate":"2016-12-26"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        Name updatedName \u003d editPersonDescriptor.getName().orElse(personToEdit.getName());","lastModifiedDate":"2017-06-21"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        Phone updatedPhone \u003d editPersonDescriptor.getPhone().orElse(personToEdit.getPhone());","lastModifiedDate":"2017-06-21"},{"lineNumber":95,"author":{"gitId":"Shruthi0310"},"content":"        // edit command does not allow editing availability, total attendance or today attendance","lastModifiedDate":"2021-10-24"},{"lineNumber":96,"author":{"gitId":"felix-ong"},"content":"        Availability updatedAvailability \u003d personToEdit.getAvailability();","lastModifiedDate":"2021-10-10"},{"lineNumber":97,"author":{"gitId":"Shruthi0310"},"content":"        TotalAttendance totalAttendance \u003d personToEdit.getTotalAttendance();","lastModifiedDate":"2021-10-24"},{"lineNumber":98,"author":{"gitId":"Shruthi0310"},"content":"        TodayAttendance todayAttendance \u003d personToEdit.getTodayAttendance();","lastModifiedDate":"2021-10-24"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e updatedTags \u003d editPersonDescriptor.getTags().orElse(personToEdit.getTags());","lastModifiedDate":"2021-10-21"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":101,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":102,"author":{"gitId":"Shruthi0310"},"content":"        return new Person(updatedName, updatedPhone, updatedAvailability, todayAttendance,","lastModifiedDate":"2021-10-24"},{"lineNumber":103,"author":{"gitId":"Shruthi0310"},"content":"                totalAttendance, updatedTags);","lastModifiedDate":"2021-10-24"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-05-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-05-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-08"},{"lineNumber":114,"author":{"gitId":"tsinyee"},"content":"        if (!(other instanceof EditMemberCommand)) {","lastModifiedDate":"2021-10-10"},{"lineNumber":115,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-05-08"},{"lineNumber":119,"author":{"gitId":"tsinyee"},"content":"        EditMemberCommand e \u003d (EditMemberCommand) other;","lastModifiedDate":"2021-10-10"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        return index.equals(e.index)","lastModifiedDate":"2017-05-25"},{"lineNumber":121,"author":{"gitId":"-"},"content":"                \u0026\u0026 editPersonDescriptor.equals(e.editPersonDescriptor);","lastModifiedDate":"2018-04-19"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":125,"author":{"gitId":"-"},"content":"     * Stores the details to edit the person with. Each non-empty field value will replace the","lastModifiedDate":"2016-12-26"},{"lineNumber":126,"author":{"gitId":"-"},"content":"     * corresponding field value of the person.","lastModifiedDate":"2016-12-26"},{"lineNumber":127,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    public static class EditPersonDescriptor {","lastModifiedDate":"2016-12-26"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        private Name name;","lastModifiedDate":"2017-06-21"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        private Phone phone;","lastModifiedDate":"2017-06-21"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        private Set\u003cTag\u003e tags;","lastModifiedDate":"2021-10-21"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        public EditPersonDescriptor() {}","lastModifiedDate":"2016-12-26"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":136,"author":{"gitId":"-"},"content":"         * Copy constructor.","lastModifiedDate":"2018-01-11"},{"lineNumber":137,"author":{"gitId":"-"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2018-01-11"},{"lineNumber":138,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        public EditPersonDescriptor(EditPersonDescriptor toCopy) {","lastModifiedDate":"2016-12-26"},{"lineNumber":140,"author":{"gitId":"-"},"content":"            setName(toCopy.name);","lastModifiedDate":"2018-01-15"},{"lineNumber":141,"author":{"gitId":"-"},"content":"            setPhone(toCopy.phone);","lastModifiedDate":"2018-01-15"},{"lineNumber":142,"author":{"gitId":"-"},"content":"            setTags(toCopy.tags);","lastModifiedDate":"2021-10-21"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2016-12-26"},{"lineNumber":146,"author":{"gitId":"-"},"content":"         * Returns true if at least one field is edited.","lastModifiedDate":"2016-12-26"},{"lineNumber":147,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-26"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        public boolean isAnyFieldEdited() {","lastModifiedDate":"2016-12-26"},{"lineNumber":149,"author":{"gitId":"tsinyee"},"content":"            return CollectionUtil.isAnyNonNull(name, phone, tags);","lastModifiedDate":"2021-10-21"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        public void setName(Name name) {","lastModifiedDate":"2017-06-21"},{"lineNumber":153,"author":{"gitId":"-"},"content":"            this.name \u003d name;","lastModifiedDate":"2017-06-21"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        public Optional\u003cName\u003e getName() {","lastModifiedDate":"2016-12-26"},{"lineNumber":157,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(name);","lastModifiedDate":"2017-06-21"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        public void setPhone(Phone phone) {","lastModifiedDate":"2017-06-21"},{"lineNumber":161,"author":{"gitId":"-"},"content":"            this.phone \u003d phone;","lastModifiedDate":"2017-06-21"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        public Optional\u003cPhone\u003e getPhone() {","lastModifiedDate":"2016-12-26"},{"lineNumber":165,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(phone);","lastModifiedDate":"2017-06-21"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2021-10-21"},{"lineNumber":169,"author":{"gitId":"-"},"content":"         * Sets {@code tags} to this object\u0027s {@code tags}.","lastModifiedDate":"2021-10-21"},{"lineNumber":170,"author":{"gitId":"-"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2021-10-21"},{"lineNumber":171,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2021-10-21"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        public void setTags(Set\u003cTag\u003e tags) {","lastModifiedDate":"2021-10-21"},{"lineNumber":173,"author":{"gitId":"-"},"content":"            this.tags \u003d (tags !\u003d null) ? new HashSet\u003c\u003e(tags) : null;","lastModifiedDate":"2021-10-21"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2021-10-21"},{"lineNumber":177,"author":{"gitId":"-"},"content":"         * Returns an unmodifiable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2021-10-21"},{"lineNumber":178,"author":{"gitId":"-"},"content":"         * if modification is attempted.","lastModifiedDate":"2021-10-21"},{"lineNumber":179,"author":{"gitId":"-"},"content":"         * Returns {@code Optional#empty()} if {@code tags} is null.","lastModifiedDate":"2021-10-21"},{"lineNumber":180,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2021-10-21"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        public Optional\u003cSet\u003cTag\u003e\u003e getTags() {","lastModifiedDate":"2021-10-21"},{"lineNumber":182,"author":{"gitId":"-"},"content":"            return (tags !\u003d null) ? Optional.of(Collections.unmodifiableSet(tags)) : Optional.empty();","lastModifiedDate":"2021-10-21"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-05"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        public boolean equals(Object other) {","lastModifiedDate":"2017-05-05"},{"lineNumber":187,"author":{"gitId":"-"},"content":"            // short circuit if same object","lastModifiedDate":"2017-05-05"},{"lineNumber":188,"author":{"gitId":"-"},"content":"            if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-05"},{"lineNumber":189,"author":{"gitId":"-"},"content":"                return true;","lastModifiedDate":"2017-05-05"},{"lineNumber":190,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":192,"author":{"gitId":"-"},"content":"            // instanceof handles nulls","lastModifiedDate":"2017-05-05"},{"lineNumber":193,"author":{"gitId":"-"},"content":"            if (!(other instanceof EditPersonDescriptor)) {","lastModifiedDate":"2017-05-05"},{"lineNumber":194,"author":{"gitId":"-"},"content":"                return false;","lastModifiedDate":"2017-05-05"},{"lineNumber":195,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":197,"author":{"gitId":"-"},"content":"            // state check","lastModifiedDate":"2017-05-05"},{"lineNumber":198,"author":{"gitId":"-"},"content":"            EditPersonDescriptor e \u003d (EditPersonDescriptor) other;","lastModifiedDate":"2017-05-05"},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-21"},{"lineNumber":200,"author":{"gitId":"-"},"content":"            return getName().equals(e.getName())","lastModifiedDate":"2017-06-21"},{"lineNumber":201,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getPhone().equals(e.getPhone())","lastModifiedDate":"2021-10-21"},{"lineNumber":202,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getTags().equals(e.getTags());","lastModifiedDate":"2021-10-21"},{"lineNumber":203,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-05"},{"lineNumber":204,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":205,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-26"}],"authorContributionMap":{"YoYoCiti":2,"Shruthi0310":8,"-":181,"felix-ong":4,"tsinyee":10}},{"path":"src/main/java/seedu/address/logic/commands/ExitCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-22"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Terminates the program.","lastModifiedDate":"2016-09-22"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2016-09-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"exit\";","lastModifiedDate":"2016-09-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_EXIT_ACKNOWLEDGEMENT \u003d \"Exiting Address Book as requested ...\";","lastModifiedDate":"2016-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":16,"author":{"gitId":"YoYoCiti"},"content":"        return new CommandResult(MESSAGE_EXIT_ACKNOWLEDGEMENT,","lastModifiedDate":"2021-10-24"},{"lineNumber":17,"author":{"gitId":"YoYoCiti"},"content":"                false, true);","lastModifiedDate":"2021-10-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"YoYoCiti":2,"-":18}},{"path":"src/main/java/seedu/address/logic/commands/ExportCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Moley456"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-10-27"},{"lineNumber":2,"author":{"gitId":"Moley456"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":3,"author":{"gitId":"Moley456"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-27"},{"lineNumber":4,"author":{"gitId":"Moley456"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":5,"author":{"gitId":"Moley456"},"content":"import java.io.File;","lastModifiedDate":"2021-10-27"},{"lineNumber":6,"author":{"gitId":"Moley456"},"content":"import java.io.FileWriter;","lastModifiedDate":"2021-10-27"},{"lineNumber":7,"author":{"gitId":"Moley456"},"content":"import java.io.IOException;","lastModifiedDate":"2021-10-27"},{"lineNumber":8,"author":{"gitId":"Moley456"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-27"},{"lineNumber":9,"author":{"gitId":"Moley456"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-10-27"},{"lineNumber":10,"author":{"gitId":"Moley456"},"content":"import java.util.List;","lastModifiedDate":"2021-10-27"},{"lineNumber":11,"author":{"gitId":"Moley456"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":12,"author":{"gitId":"Moley456"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-27"},{"lineNumber":13,"author":{"gitId":"Moley456"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-10-27"},{"lineNumber":14,"author":{"gitId":"Moley456"},"content":"import seedu.address.model.facility.Facility;","lastModifiedDate":"2021-10-27"},{"lineNumber":15,"author":{"gitId":"Moley456"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":16,"author":{"gitId":"Moley456"},"content":"/**","lastModifiedDate":"2021-10-27"},{"lineNumber":17,"author":{"gitId":"Moley456"},"content":" * Exports the data of all facilities that have members allocated, including member names to a CSV file.","lastModifiedDate":"2021-10-27"},{"lineNumber":18,"author":{"gitId":"Moley456"},"content":" */","lastModifiedDate":"2021-10-27"},{"lineNumber":19,"author":{"gitId":"Moley456"},"content":"public class ExportCommand extends Command {","lastModifiedDate":"2021-10-27"},{"lineNumber":20,"author":{"gitId":"Moley456"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":21,"author":{"gitId":"Moley456"},"content":"    public static final String COMMAND_WORD \u003d \"export\";","lastModifiedDate":"2021-10-27"},{"lineNumber":22,"author":{"gitId":"Moley456"},"content":"    public static final String MESSAGE_IO_ERROR \u003d \"Please close exportedData.csv and try again.\";","lastModifiedDate":"2021-10-27"},{"lineNumber":23,"author":{"gitId":"Moley456"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Successfully exported to [JAR file location]/data/exportedData.csv\";","lastModifiedDate":"2021-10-27"},{"lineNumber":24,"author":{"gitId":"Moley456"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":25,"author":{"gitId":"Moley456"},"content":"    @Override","lastModifiedDate":"2021-10-27"},{"lineNumber":26,"author":{"gitId":"Moley456"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-10-27"},{"lineNumber":27,"author":{"gitId":"Moley456"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-10-27"},{"lineNumber":28,"author":{"gitId":"Moley456"},"content":"        try {","lastModifiedDate":"2021-10-27"},{"lineNumber":29,"author":{"gitId":"Moley456"},"content":"            File csvFile \u003d new File(\"data/exportedData.csv\");","lastModifiedDate":"2021-10-27"},{"lineNumber":30,"author":{"gitId":"Moley456"},"content":"            if (!csvFile.createNewFile()) {","lastModifiedDate":"2021-10-27"},{"lineNumber":31,"author":{"gitId":"Moley456"},"content":"                csvFile.delete();","lastModifiedDate":"2021-10-27"},{"lineNumber":32,"author":{"gitId":"Moley456"},"content":"                csvFile.createNewFile();","lastModifiedDate":"2021-10-27"},{"lineNumber":33,"author":{"gitId":"Moley456"},"content":"            }","lastModifiedDate":"2021-10-27"},{"lineNumber":34,"author":{"gitId":"Moley456"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":35,"author":{"gitId":"Moley456"},"content":"            FileWriter fw \u003d new FileWriter(csvFile);","lastModifiedDate":"2021-10-27"},{"lineNumber":36,"author":{"gitId":"Moley456"},"content":"            List\u003cList\u003cString\u003e\u003e data \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-27"},{"lineNumber":37,"author":{"gitId":"Moley456"},"content":"            List\u003cString\u003e headers \u003d Arrays.asList(\"Facility Name\", \"Location\", \"Time\", \"Capacity\", \"Allocated Members\");","lastModifiedDate":"2021-10-27"},{"lineNumber":38,"author":{"gitId":"Moley456"},"content":"            data.add(headers);","lastModifiedDate":"2021-10-27"},{"lineNumber":39,"author":{"gitId":"Moley456"},"content":"            List\u003cFacility\u003e facilities \u003d model.getFilteredFacilityList();","lastModifiedDate":"2021-10-27"},{"lineNumber":40,"author":{"gitId":"Moley456"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":41,"author":{"gitId":"Moley456"},"content":"            for (Facility facility: facilities) {","lastModifiedDate":"2021-10-27"},{"lineNumber":42,"author":{"gitId":"Moley456"},"content":"                List\u003cString\u003e rowData \u003d convertToList(facility);","lastModifiedDate":"2021-10-27"},{"lineNumber":43,"author":{"gitId":"Moley456"},"content":"                data.add(rowData);","lastModifiedDate":"2021-10-27"},{"lineNumber":44,"author":{"gitId":"Moley456"},"content":"            }","lastModifiedDate":"2021-10-27"},{"lineNumber":45,"author":{"gitId":"Moley456"},"content":"            for (List\u003cString\u003e rowData : data) {","lastModifiedDate":"2021-10-27"},{"lineNumber":46,"author":{"gitId":"Moley456"},"content":"                fw.append(String.join(\",\", rowData));","lastModifiedDate":"2021-10-27"},{"lineNumber":47,"author":{"gitId":"Moley456"},"content":"                fw.append(\"\\n\");","lastModifiedDate":"2021-10-27"},{"lineNumber":48,"author":{"gitId":"Moley456"},"content":"            }","lastModifiedDate":"2021-10-27"},{"lineNumber":49,"author":{"gitId":"Moley456"},"content":"            fw.flush();","lastModifiedDate":"2021-10-27"},{"lineNumber":50,"author":{"gitId":"Moley456"},"content":"            fw.close();","lastModifiedDate":"2021-10-27"},{"lineNumber":51,"author":{"gitId":"Moley456"},"content":"            return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2021-10-27"},{"lineNumber":52,"author":{"gitId":"Moley456"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-10-27"},{"lineNumber":53,"author":{"gitId":"Moley456"},"content":"            throw new CommandException(MESSAGE_IO_ERROR);","lastModifiedDate":"2021-10-27"},{"lineNumber":54,"author":{"gitId":"Moley456"},"content":"        }","lastModifiedDate":"2021-10-27"},{"lineNumber":55,"author":{"gitId":"Moley456"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":56,"author":{"gitId":"Moley456"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":57,"author":{"gitId":"Moley456"},"content":"    /**","lastModifiedDate":"2021-10-27"},{"lineNumber":58,"author":{"gitId":"Moley456"},"content":"     * Helper function that converts a given facility\u0027s data into a {@code List\u003cString\u003e}.","lastModifiedDate":"2021-10-27"},{"lineNumber":59,"author":{"gitId":"Moley456"},"content":"     *","lastModifiedDate":"2021-10-27"},{"lineNumber":60,"author":{"gitId":"Moley456"},"content":"     * @param facility the given facility.","lastModifiedDate":"2021-10-27"},{"lineNumber":61,"author":{"gitId":"Moley456"},"content":"     * @return the converted {@code List\u003cString\u003e} of the facility\u0027s data.","lastModifiedDate":"2021-10-27"},{"lineNumber":62,"author":{"gitId":"Moley456"},"content":"     */","lastModifiedDate":"2021-10-27"},{"lineNumber":63,"author":{"gitId":"Moley456"},"content":"    private List\u003cString\u003e convertToList(Facility facility) {","lastModifiedDate":"2021-10-27"},{"lineNumber":64,"author":{"gitId":"Moley456"},"content":"        if (facility.getPersonAllocatedList().isEmpty()) {","lastModifiedDate":"2021-10-27"},{"lineNumber":65,"author":{"gitId":"Moley456"},"content":"            return new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-27"},{"lineNumber":66,"author":{"gitId":"Moley456"},"content":"        }","lastModifiedDate":"2021-10-27"},{"lineNumber":67,"author":{"gitId":"Moley456"},"content":"        List\u003cString\u003e rowData \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-27"},{"lineNumber":68,"author":{"gitId":"Moley456"},"content":"        String facilityName \u003d facility.getName().facilityName;","lastModifiedDate":"2021-10-27"},{"lineNumber":69,"author":{"gitId":"Moley456"},"content":"        rowData.add(facilityName);","lastModifiedDate":"2021-10-27"},{"lineNumber":70,"author":{"gitId":"Moley456"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":71,"author":{"gitId":"Moley456"},"content":"        String location \u003d facility.getLocation().location;","lastModifiedDate":"2021-10-27"},{"lineNumber":72,"author":{"gitId":"Moley456"},"content":"        rowData.add(location);","lastModifiedDate":"2021-10-27"},{"lineNumber":73,"author":{"gitId":"Moley456"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":74,"author":{"gitId":"Moley456"},"content":"        String time \u003d facility.getTime().time;","lastModifiedDate":"2021-10-27"},{"lineNumber":75,"author":{"gitId":"Moley456"},"content":"        rowData.add(time);","lastModifiedDate":"2021-10-27"},{"lineNumber":76,"author":{"gitId":"Moley456"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":77,"author":{"gitId":"Moley456"},"content":"        String capacity \u003d facility.getCapacity().capacity;","lastModifiedDate":"2021-10-27"},{"lineNumber":78,"author":{"gitId":"Moley456"},"content":"        rowData.add(capacity);","lastModifiedDate":"2021-10-27"},{"lineNumber":79,"author":{"gitId":"Moley456"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":80,"author":{"gitId":"Moley456"},"content":"        String allocatedMembers \u003d facility.getPersonsAsString();","lastModifiedDate":"2021-10-27"},{"lineNumber":81,"author":{"gitId":"Moley456"},"content":"        allocatedMembers \u003d allocatedMembers.replaceAll(\",\", \" |\");","lastModifiedDate":"2021-10-27"},{"lineNumber":82,"author":{"gitId":"Moley456"},"content":"        rowData.add(allocatedMembers);","lastModifiedDate":"2021-10-27"},{"lineNumber":83,"author":{"gitId":"Moley456"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":84,"author":{"gitId":"Moley456"},"content":"        return rowData;","lastModifiedDate":"2021-10-27"},{"lineNumber":85,"author":{"gitId":"Moley456"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":86,"author":{"gitId":"Moley456"},"content":"}","lastModifiedDate":"2021-10-27"}],"authorContributionMap":{"Moley456":86}},{"path":"src/main/java/seedu/address/logic/commands/FindFacilityCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"YoYoCiti"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-09-29"},{"lineNumber":2,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":3,"author":{"gitId":"YoYoCiti"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-09-29"},{"lineNumber":4,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":5,"author":{"gitId":"YoYoCiti"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2021-09-29"},{"lineNumber":6,"author":{"gitId":"YoYoCiti"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-09-29"},{"lineNumber":7,"author":{"gitId":"YoYoCiti"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-09-29"},{"lineNumber":8,"author":{"gitId":"YoYoCiti"},"content":"import seedu.address.model.facility.LocationContainsKeywordsPredicate;","lastModifiedDate":"2021-09-29"},{"lineNumber":9,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":10,"author":{"gitId":"YoYoCiti"},"content":"/**","lastModifiedDate":"2021-09-29"},{"lineNumber":11,"author":{"gitId":"YoYoCiti"},"content":" * Finds and lists all facilities in application whose locations contains any of the argument keywords.","lastModifiedDate":"2021-09-29"},{"lineNumber":12,"author":{"gitId":"YoYoCiti"},"content":" * Keyword matching is case-insensitive.","lastModifiedDate":"2021-09-29"},{"lineNumber":13,"author":{"gitId":"YoYoCiti"},"content":" */","lastModifiedDate":"2021-09-29"},{"lineNumber":14,"author":{"gitId":"YoYoCiti"},"content":"public class FindFacilityCommand extends Command {","lastModifiedDate":"2021-09-29"},{"lineNumber":15,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":16,"author":{"gitId":"YoYoCiti"},"content":"    public static final String COMMAND_WORD \u003d \"findf\";","lastModifiedDate":"2021-09-29"},{"lineNumber":17,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":18,"author":{"gitId":"YoYoCiti"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Finds all facilities whose locations contain any of \"","lastModifiedDate":"2021-09-29"},{"lineNumber":19,"author":{"gitId":"YoYoCiti"},"content":"            + \"the specified keywords (case-insensitive) and displays them as a list with index numbers.\\n\"","lastModifiedDate":"2021-09-29"},{"lineNumber":20,"author":{"gitId":"YoYoCiti"},"content":"            + \"Parameters: KEYWORD [MORE_KEYWORDS]...\\n\"","lastModifiedDate":"2021-09-29"},{"lineNumber":21,"author":{"gitId":"YoYoCiti"},"content":"            + \"Example: \" + COMMAND_WORD + \" utown clementi\";","lastModifiedDate":"2021-09-29"},{"lineNumber":22,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":23,"author":{"gitId":"YoYoCiti"},"content":"    private final LocationContainsKeywordsPredicate predicate;","lastModifiedDate":"2021-09-29"},{"lineNumber":24,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":25,"author":{"gitId":"YoYoCiti"},"content":"    public FindFacilityCommand(LocationContainsKeywordsPredicate predicate) {","lastModifiedDate":"2021-09-29"},{"lineNumber":26,"author":{"gitId":"YoYoCiti"},"content":"        this.predicate \u003d predicate;","lastModifiedDate":"2021-09-29"},{"lineNumber":27,"author":{"gitId":"YoYoCiti"},"content":"    }","lastModifiedDate":"2021-09-29"},{"lineNumber":28,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":29,"author":{"gitId":"YoYoCiti"},"content":"    @Override","lastModifiedDate":"2021-09-29"},{"lineNumber":30,"author":{"gitId":"YoYoCiti"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-09-29"},{"lineNumber":31,"author":{"gitId":"YoYoCiti"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-09-29"},{"lineNumber":32,"author":{"gitId":"YoYoCiti"},"content":"        model.updateFilteredFacilityList(predicate);","lastModifiedDate":"2021-09-29"},{"lineNumber":33,"author":{"gitId":"YoYoCiti"},"content":"        return new CommandResult(","lastModifiedDate":"2021-09-29"},{"lineNumber":34,"author":{"gitId":"YoYoCiti"},"content":"                String.format(Messages.MESSAGE_FACILITIES_LISTED_OVERVIEW, model.getFilteredFacilityList().size()),","lastModifiedDate":"2021-10-24"},{"lineNumber":35,"author":{"gitId":"YoYoCiti"},"content":"                false, true, false);","lastModifiedDate":"2021-10-24"},{"lineNumber":36,"author":{"gitId":"YoYoCiti"},"content":"    }","lastModifiedDate":"2021-09-29"},{"lineNumber":37,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":38,"author":{"gitId":"YoYoCiti"},"content":"    @Override","lastModifiedDate":"2021-09-29"},{"lineNumber":39,"author":{"gitId":"YoYoCiti"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-09-29"},{"lineNumber":40,"author":{"gitId":"YoYoCiti"},"content":"        return other \u003d\u003d this","lastModifiedDate":"2021-09-29"},{"lineNumber":41,"author":{"gitId":"YoYoCiti"},"content":"                || (other instanceof FindFacilityCommand","lastModifiedDate":"2021-09-29"},{"lineNumber":42,"author":{"gitId":"YoYoCiti"},"content":"                \u0026\u0026 predicate.equals(((FindFacilityCommand) other).predicate));","lastModifiedDate":"2021-09-29"},{"lineNumber":43,"author":{"gitId":"YoYoCiti"},"content":"    }","lastModifiedDate":"2021-09-29"},{"lineNumber":44,"author":{"gitId":"YoYoCiti"},"content":"}","lastModifiedDate":"2021-09-29"}],"authorContributionMap":{"YoYoCiti":44}},{"path":"src/main/java/seedu/address/logic/commands/FindMemberCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":5,"author":{"gitId":"tsinyee"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2021-10-26"},{"lineNumber":6,"author":{"gitId":"tsinyee"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2018-04-01"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":9,"author":{"gitId":"tsinyee"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2021-10-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-22"},{"lineNumber":12,"author":{"gitId":"felix-ong"},"content":" * Finds and lists all members in SportsPA whose name contains any of the argument keywords.","lastModifiedDate":"2021-10-05"},{"lineNumber":13,"author":{"gitId":"felix-ong"},"content":" * Keyword matching is case-insensitive.","lastModifiedDate":"2021-09-30"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-22"},{"lineNumber":15,"author":{"gitId":"felix-ong"},"content":"public class FindMemberCommand extends Command {","lastModifiedDate":"2021-09-30"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":17,"author":{"gitId":"felix-ong"},"content":"    public static final String COMMAND_WORD \u003d \"findm\";","lastModifiedDate":"2021-09-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":19,"author":{"gitId":"tsinyee"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Finds all members who matches any of \"","lastModifiedDate":"2021-10-28"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            + \"the specified keywords (case-insensitive) and displays them as a list with index numbers.\\n\"","lastModifiedDate":"2018-04-01"},{"lineNumber":21,"author":{"gitId":"tsinyee"},"content":"            + \"Parameters: KEYWORD [MORE KEYWORDS]...\\n\"","lastModifiedDate":"2021-10-26"},{"lineNumber":22,"author":{"gitId":"tsinyee"},"content":"            + \"Example: \" + COMMAND_WORD + \" n/alice t/exco d/1\";","lastModifiedDate":"2021-10-26"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":24,"author":{"gitId":"tsinyee"},"content":"    private final Predicate\u003cPerson\u003e predicate;","lastModifiedDate":"2021-10-26"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":26,"author":{"gitId":"tsinyee"},"content":"    /** Creates a {@code FindMemberCommand} object **/","lastModifiedDate":"2021-10-28"},{"lineNumber":27,"author":{"gitId":"tsinyee"},"content":"    public FindMemberCommand(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2021-10-26"},{"lineNumber":28,"author":{"gitId":"tsinyee"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2021-10-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        this.predicate \u003d predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-22"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(predicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        return new CommandResult(","lastModifiedDate":"2018-04-01"},{"lineNumber":37,"author":{"gitId":"YoYoCiti"},"content":"                String.format(Messages.MESSAGE_MEMBERS_LISTED_OVERVIEW, model.getFilteredPersonList().size()),","lastModifiedDate":"2021-10-24"},{"lineNumber":38,"author":{"gitId":"YoYoCiti"},"content":"                false, false, true);","lastModifiedDate":"2021-10-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-27"},{"lineNumber":44,"author":{"gitId":"felix-ong"},"content":"                || (other instanceof FindMemberCommand // instanceof handles nulls","lastModifiedDate":"2021-09-30"},{"lineNumber":45,"author":{"gitId":"felix-ong"},"content":"                \u0026\u0026 predicate.equals(((FindMemberCommand) other).predicate)); // state check","lastModifiedDate":"2021-09-30"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"YoYoCiti":2,"-":29,"tsinyee":10,"felix-ong":6}},{"path":"src/main/java/seedu/address/logic/commands/ImportCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Moley456"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-10-21"},{"lineNumber":2,"author":{"gitId":"Moley456"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":3,"author":{"gitId":"Moley456"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-21"},{"lineNumber":4,"author":{"gitId":"Moley456"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-26"},{"lineNumber":5,"author":{"gitId":"Moley456"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":6,"author":{"gitId":"Moley456"},"content":"import java.io.BufferedReader;","lastModifiedDate":"2021-10-26"},{"lineNumber":7,"author":{"gitId":"Moley456"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2021-10-26"},{"lineNumber":8,"author":{"gitId":"Moley456"},"content":"import java.io.FileReader;","lastModifiedDate":"2021-10-26"},{"lineNumber":9,"author":{"gitId":"Moley456"},"content":"import java.io.IOException;","lastModifiedDate":"2021-10-26"},{"lineNumber":10,"author":{"gitId":"Moley456"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-21"},{"lineNumber":11,"author":{"gitId":"Moley456"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-10-26"},{"lineNumber":12,"author":{"gitId":"Moley456"},"content":"import java.util.HashSet;","lastModifiedDate":"2021-10-26"},{"lineNumber":13,"author":{"gitId":"Moley456"},"content":"import java.util.List;","lastModifiedDate":"2021-10-26"},{"lineNumber":14,"author":{"gitId":"Moley456"},"content":"import java.util.Set;","lastModifiedDate":"2021-10-26"},{"lineNumber":15,"author":{"gitId":"Moley456"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":16,"author":{"gitId":"Moley456"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-21"},{"lineNumber":17,"author":{"gitId":"Moley456"},"content":"import seedu.address.logic.parser.ParserUtil;","lastModifiedDate":"2021-10-26"},{"lineNumber":18,"author":{"gitId":"Moley456"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-26"},{"lineNumber":19,"author":{"gitId":"Moley456"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-10-21"},{"lineNumber":20,"author":{"gitId":"Moley456"},"content":"import seedu.address.model.person.Availability;","lastModifiedDate":"2021-10-26"},{"lineNumber":21,"author":{"gitId":"Moley456"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2021-10-26"},{"lineNumber":22,"author":{"gitId":"Moley456"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2021-10-21"},{"lineNumber":23,"author":{"gitId":"Moley456"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2021-10-26"},{"lineNumber":24,"author":{"gitId":"Moley456"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2021-10-26"},{"lineNumber":25,"author":{"gitId":"Moley456"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":26,"author":{"gitId":"Moley456"},"content":"/**","lastModifiedDate":"2021-10-23"},{"lineNumber":27,"author":{"gitId":"Moley456"},"content":" * Imports a list of Persons from a given CSV file.","lastModifiedDate":"2021-10-23"},{"lineNumber":28,"author":{"gitId":"Moley456"},"content":" */","lastModifiedDate":"2021-10-23"},{"lineNumber":29,"author":{"gitId":"Moley456"},"content":"public class ImportCommand extends Command {","lastModifiedDate":"2021-10-21"},{"lineNumber":30,"author":{"gitId":"Moley456"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":31,"author":{"gitId":"Moley456"},"content":"    public static final String COMMAND_WORD \u003d \"import\";","lastModifiedDate":"2021-10-21"},{"lineNumber":32,"author":{"gitId":"YoYoCiti"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2021-10-26"},{"lineNumber":33,"author":{"gitId":"YoYoCiti"},"content":"            + \": Imports the member data from a CSV file into SportsPA\u0027s data file.\\n\"","lastModifiedDate":"2021-10-26"},{"lineNumber":34,"author":{"gitId":"Moley456"},"content":"            + \"There must be headers for the CSV file and they should be in this order:\"","lastModifiedDate":"2021-10-24"},{"lineNumber":35,"author":{"gitId":"YoYoCiti"},"content":"            + \" NAME, PHONE, AVAILABILITY, TAGS\\n\"","lastModifiedDate":"2021-10-26"},{"lineNumber":36,"author":{"gitId":"Moley456"},"content":"            + \"Parameters: KEYWORD CSV_FILE_PATH\\n\"","lastModifiedDate":"2021-10-24"},{"lineNumber":37,"author":{"gitId":"Moley456"},"content":"            + \"Example: \" + COMMAND_WORD + \" myFilePath.csv\";","lastModifiedDate":"2021-10-21"},{"lineNumber":38,"author":{"gitId":"Moley456"},"content":"    public static final String MESSAGE_FILE_NOT_FOUND \u003d \"No CSV file called %s found.\";","lastModifiedDate":"2021-10-26"},{"lineNumber":39,"author":{"gitId":"Moley456"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Successfully imported from CSV file!\";","lastModifiedDate":"2021-10-21"},{"lineNumber":40,"author":{"gitId":"Moley456"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":41,"author":{"gitId":"Moley456"},"content":"    private final String filePath;","lastModifiedDate":"2021-10-26"},{"lineNumber":42,"author":{"gitId":"Moley456"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":43,"author":{"gitId":"Moley456"},"content":"    /**","lastModifiedDate":"2021-10-23"},{"lineNumber":44,"author":{"gitId":"Moley456"},"content":"     * Creates an ImportCommand object to add the given list of Persons.","lastModifiedDate":"2021-10-23"},{"lineNumber":45,"author":{"gitId":"Moley456"},"content":"     *","lastModifiedDate":"2021-10-23"},{"lineNumber":46,"author":{"gitId":"Moley456"},"content":"     * @param filePath the file path of the CSV file.","lastModifiedDate":"2021-10-26"},{"lineNumber":47,"author":{"gitId":"Moley456"},"content":"     */","lastModifiedDate":"2021-10-23"},{"lineNumber":48,"author":{"gitId":"Moley456"},"content":"    public ImportCommand(String filePath) {","lastModifiedDate":"2021-10-26"},{"lineNumber":49,"author":{"gitId":"Moley456"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2021-10-26"},{"lineNumber":50,"author":{"gitId":"Moley456"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":51,"author":{"gitId":"Moley456"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":52,"author":{"gitId":"Moley456"},"content":"    @Override","lastModifiedDate":"2021-10-21"},{"lineNumber":53,"author":{"gitId":"Moley456"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-10-21"},{"lineNumber":54,"author":{"gitId":"Moley456"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-10-21"},{"lineNumber":55,"author":{"gitId":"Moley456"},"content":"        ArrayList\u003cPerson\u003e personList \u003d parseCsv();","lastModifiedDate":"2021-10-26"},{"lineNumber":56,"author":{"gitId":"Moley456"},"content":"        for (Person person: personList) {","lastModifiedDate":"2021-10-21"},{"lineNumber":57,"author":{"gitId":"Moley456"},"content":"            if (model.hasPerson(person)) {","lastModifiedDate":"2021-10-21"},{"lineNumber":58,"author":{"gitId":"Moley456"},"content":"                Person personToReplace \u003d model.getSamePerson(person);","lastModifiedDate":"2021-10-22"},{"lineNumber":59,"author":{"gitId":"Moley456"},"content":"                requireNonNull(personToReplace);","lastModifiedDate":"2021-10-23"},{"lineNumber":60,"author":{"gitId":"Moley456"},"content":"                Person personToAdd \u003d new Person(person.getName(),","lastModifiedDate":"2021-10-26"},{"lineNumber":61,"author":{"gitId":"Moley456"},"content":"                        person.getPhone(),","lastModifiedDate":"2021-10-26"},{"lineNumber":62,"author":{"gitId":"Moley456"},"content":"                        person.getAvailability(),","lastModifiedDate":"2021-10-26"},{"lineNumber":63,"author":{"gitId":"Moley456"},"content":"                        person.getTodayAttendance(),","lastModifiedDate":"2021-10-26"},{"lineNumber":64,"author":{"gitId":"Moley456"},"content":"                        personToReplace.getTotalAttendance(),","lastModifiedDate":"2021-10-26"},{"lineNumber":65,"author":{"gitId":"Moley456"},"content":"                        personToReplace.getTags());","lastModifiedDate":"2021-10-26"},{"lineNumber":66,"author":{"gitId":"Moley456"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":67,"author":{"gitId":"Moley456"},"content":"                model.setPerson(personToReplace, personToAdd);","lastModifiedDate":"2021-10-26"},{"lineNumber":68,"author":{"gitId":"Moley456"},"content":"            } else {","lastModifiedDate":"2021-10-22"},{"lineNumber":69,"author":{"gitId":"Moley456"},"content":"                model.addPerson(person);","lastModifiedDate":"2021-10-21"},{"lineNumber":70,"author":{"gitId":"Moley456"},"content":"            }","lastModifiedDate":"2021-10-21"},{"lineNumber":71,"author":{"gitId":"Moley456"},"content":"        }","lastModifiedDate":"2021-10-22"},{"lineNumber":72,"author":{"gitId":"Moley456"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2021-10-21"},{"lineNumber":73,"author":{"gitId":"Moley456"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":74,"author":{"gitId":"Moley456"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":75,"author":{"gitId":"Moley456"},"content":"    /**","lastModifiedDate":"2021-10-26"},{"lineNumber":76,"author":{"gitId":"Moley456"},"content":"     * Helper function to parse a CSV file.","lastModifiedDate":"2021-10-26"},{"lineNumber":77,"author":{"gitId":"Moley456"},"content":"     * Returns an {@code ArrayList\u003cPerson\u003e} filled with members to be added.","lastModifiedDate":"2021-10-26"},{"lineNumber":78,"author":{"gitId":"Moley456"},"content":"     *","lastModifiedDate":"2021-10-26"},{"lineNumber":79,"author":{"gitId":"Moley456"},"content":"     * @return {@code ArrayList\u003cPerson\u003e} object after parsing the CSV file.","lastModifiedDate":"2021-10-26"},{"lineNumber":80,"author":{"gitId":"Moley456"},"content":"     * @throws CommandException if no file is found or if the CSV file does not conform with the expected format","lastModifiedDate":"2021-10-26"},{"lineNumber":81,"author":{"gitId":"Moley456"},"content":"     */","lastModifiedDate":"2021-10-26"},{"lineNumber":82,"author":{"gitId":"Moley456"},"content":"    private ArrayList\u003cPerson\u003e parseCsv() throws CommandException {","lastModifiedDate":"2021-10-26"},{"lineNumber":83,"author":{"gitId":"Moley456"},"content":"        String line;","lastModifiedDate":"2021-10-26"},{"lineNumber":84,"author":{"gitId":"Moley456"},"content":"        ArrayList\u003cPerson\u003e personList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-26"},{"lineNumber":85,"author":{"gitId":"Moley456"},"content":"        try {","lastModifiedDate":"2021-10-26"},{"lineNumber":86,"author":{"gitId":"Moley456"},"content":"            FileReader importFileReader \u003d new FileReader(filePath);","lastModifiedDate":"2021-10-26"},{"lineNumber":87,"author":{"gitId":"Moley456"},"content":"            BufferedReader br \u003d new BufferedReader(importFileReader);","lastModifiedDate":"2021-10-26"},{"lineNumber":88,"author":{"gitId":"Moley456"},"content":"            br.readLine();","lastModifiedDate":"2021-10-26"},{"lineNumber":89,"author":{"gitId":"Moley456"},"content":"            while ((line \u003d br.readLine()) !\u003d null) {","lastModifiedDate":"2021-10-26"},{"lineNumber":90,"author":{"gitId":"Moley456"},"content":"                String[] values \u003d line.split(\",\", 4);","lastModifiedDate":"2021-10-26"},{"lineNumber":91,"author":{"gitId":"Moley456"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":92,"author":{"gitId":"Moley456"},"content":"                if (values.length \u003c 4) {","lastModifiedDate":"2021-10-26"},{"lineNumber":93,"author":{"gitId":"Moley456"},"content":"                    throw new CommandException(","lastModifiedDate":"2021-10-26"},{"lineNumber":94,"author":{"gitId":"Moley456"},"content":"                            String.format(MESSAGE_INVALID_COMMAND_FORMAT, MESSAGE_USAGE));","lastModifiedDate":"2021-10-26"},{"lineNumber":95,"author":{"gitId":"Moley456"},"content":"                }","lastModifiedDate":"2021-10-26"},{"lineNumber":96,"author":{"gitId":"Moley456"},"content":"                Name name \u003d ParserUtil.parseName(values[0]);","lastModifiedDate":"2021-10-26"},{"lineNumber":97,"author":{"gitId":"Moley456"},"content":"                Phone phone \u003d ParserUtil.parsePhone(values[1]);","lastModifiedDate":"2021-10-26"},{"lineNumber":98,"author":{"gitId":"Moley456"},"content":"                Availability availability \u003d ParserUtil.parseAvailability(values[2]);","lastModifiedDate":"2021-10-26"},{"lineNumber":99,"author":{"gitId":"Moley456"},"content":"                Set\u003cTag\u003e tags \u003d parseTagCsv(values[3]);","lastModifiedDate":"2021-10-26"},{"lineNumber":100,"author":{"gitId":"Moley456"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":101,"author":{"gitId":"Moley456"},"content":"                Person person \u003d new Person(name, phone, availability, tags);","lastModifiedDate":"2021-10-26"},{"lineNumber":102,"author":{"gitId":"Moley456"},"content":"                personList.add(person);","lastModifiedDate":"2021-10-26"},{"lineNumber":103,"author":{"gitId":"Moley456"},"content":"            }","lastModifiedDate":"2021-10-26"},{"lineNumber":104,"author":{"gitId":"Moley456"},"content":"            br.close();","lastModifiedDate":"2021-10-27"},{"lineNumber":105,"author":{"gitId":"Moley456"},"content":"            return personList;","lastModifiedDate":"2021-10-26"},{"lineNumber":106,"author":{"gitId":"Moley456"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2021-10-26"},{"lineNumber":107,"author":{"gitId":"Moley456"},"content":"            throw new CommandException(String.format(MESSAGE_FILE_NOT_FOUND, filePath));","lastModifiedDate":"2021-10-26"},{"lineNumber":108,"author":{"gitId":"Moley456"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-10-26"},{"lineNumber":109,"author":{"gitId":"Moley456"},"content":"            throw new CommandException(","lastModifiedDate":"2021-10-26"},{"lineNumber":110,"author":{"gitId":"Moley456"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, MESSAGE_USAGE));","lastModifiedDate":"2021-10-26"},{"lineNumber":111,"author":{"gitId":"Moley456"},"content":"        } catch (ParseException e) {","lastModifiedDate":"2021-10-26"},{"lineNumber":112,"author":{"gitId":"Moley456"},"content":"            throw new CommandException(e.getMessage() + \"\\nPlease fix the error in the CSV file and try again\");","lastModifiedDate":"2021-10-28"},{"lineNumber":113,"author":{"gitId":"Moley456"},"content":"        }","lastModifiedDate":"2021-10-26"},{"lineNumber":114,"author":{"gitId":"Moley456"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":115,"author":{"gitId":"Moley456"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":116,"author":{"gitId":"Moley456"},"content":"    /**","lastModifiedDate":"2021-10-26"},{"lineNumber":117,"author":{"gitId":"Moley456"},"content":"     * Helper function to parse the tags from a CSV file.","lastModifiedDate":"2021-10-26"},{"lineNumber":118,"author":{"gitId":"Moley456"},"content":"     * Returns a {@code Set\u003cTags\u003e} object.","lastModifiedDate":"2021-10-26"},{"lineNumber":119,"author":{"gitId":"Moley456"},"content":"     *","lastModifiedDate":"2021-10-26"},{"lineNumber":120,"author":{"gitId":"Moley456"},"content":"     * @param tags the given tags from the CSV file.","lastModifiedDate":"2021-10-26"},{"lineNumber":121,"author":{"gitId":"Moley456"},"content":"     * @return the {@code Set\u003cTags\u003e} object after being parsed.","lastModifiedDate":"2021-10-26"},{"lineNumber":122,"author":{"gitId":"Moley456"},"content":"     * @throws ParseException if the tags from the CSV file do not conform with the expected format.","lastModifiedDate":"2021-10-26"},{"lineNumber":123,"author":{"gitId":"Moley456"},"content":"     */","lastModifiedDate":"2021-10-26"},{"lineNumber":124,"author":{"gitId":"Moley456"},"content":"    private Set\u003cTag\u003e parseTagCsv(String tags) throws ParseException {","lastModifiedDate":"2021-10-26"},{"lineNumber":125,"author":{"gitId":"Moley456"},"content":"        Set\u003cTag\u003e tagSet;","lastModifiedDate":"2021-10-26"},{"lineNumber":126,"author":{"gitId":"Moley456"},"content":"        String trimmedTags;","lastModifiedDate":"2021-10-26"},{"lineNumber":127,"author":{"gitId":"Moley456"},"content":"        if (tags.isBlank()) {","lastModifiedDate":"2021-10-26"},{"lineNumber":128,"author":{"gitId":"Moley456"},"content":"            tagSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2021-10-26"},{"lineNumber":129,"author":{"gitId":"Moley456"},"content":"        } else if (tags.charAt(0) \u003d\u003d \u0027\"\u0027) {","lastModifiedDate":"2021-10-26"},{"lineNumber":130,"author":{"gitId":"Moley456"},"content":"            trimmedTags \u003d tags.substring(1, tags.length() - 1);","lastModifiedDate":"2021-10-26"},{"lineNumber":131,"author":{"gitId":"Moley456"},"content":"            List\u003cString\u003e tagList \u003d Arrays.asList(trimmedTags.split(\",\"));","lastModifiedDate":"2021-10-26"},{"lineNumber":132,"author":{"gitId":"Moley456"},"content":"            tagSet \u003d ParserUtil.parseTags(tagList);","lastModifiedDate":"2021-10-26"},{"lineNumber":133,"author":{"gitId":"Moley456"},"content":"        } else {","lastModifiedDate":"2021-10-26"},{"lineNumber":134,"author":{"gitId":"Moley456"},"content":"            trimmedTags \u003d tags;","lastModifiedDate":"2021-10-26"},{"lineNumber":135,"author":{"gitId":"Moley456"},"content":"            List\u003cString\u003e tagList \u003d Arrays.asList(trimmedTags.split(\",\"));","lastModifiedDate":"2021-10-26"},{"lineNumber":136,"author":{"gitId":"Moley456"},"content":"            tagSet \u003d ParserUtil.parseTags(tagList);","lastModifiedDate":"2021-10-26"},{"lineNumber":137,"author":{"gitId":"Moley456"},"content":"        }","lastModifiedDate":"2021-10-26"},{"lineNumber":138,"author":{"gitId":"Moley456"},"content":"        return tagSet;","lastModifiedDate":"2021-10-26"},{"lineNumber":139,"author":{"gitId":"Moley456"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":140,"author":{"gitId":"Moley456"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":141,"author":{"gitId":"Moley456"},"content":"    @Override","lastModifiedDate":"2021-10-21"},{"lineNumber":142,"author":{"gitId":"Moley456"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-21"},{"lineNumber":143,"author":{"gitId":"Moley456"},"content":"        return other \u003d\u003d this","lastModifiedDate":"2021-10-21"},{"lineNumber":144,"author":{"gitId":"Moley456"},"content":"                || (other instanceof ImportCommand","lastModifiedDate":"2021-10-21"},{"lineNumber":145,"author":{"gitId":"Moley456"},"content":"                \u0026\u0026 filePath.equals(((ImportCommand) other).filePath));","lastModifiedDate":"2021-10-26"},{"lineNumber":146,"author":{"gitId":"Moley456"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":147,"author":{"gitId":"Moley456"},"content":"}","lastModifiedDate":"2021-10-21"}],"authorContributionMap":{"YoYoCiti":3,"Moley456":144}},{"path":"src/main/java/seedu/address/logic/commands/ListFacilityCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"YoYoCiti"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-10-06"},{"lineNumber":2,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":3,"author":{"gitId":"YoYoCiti"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-06"},{"lineNumber":4,"author":{"gitId":"YoYoCiti"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_FACILITIES;","lastModifiedDate":"2021-10-06"},{"lineNumber":5,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":6,"author":{"gitId":"YoYoCiti"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-10-06"},{"lineNumber":7,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":8,"author":{"gitId":"YoYoCiti"},"content":"/**","lastModifiedDate":"2021-10-06"},{"lineNumber":9,"author":{"gitId":"YoYoCiti"},"content":" * Lists all facilities in SportsPA to the user.","lastModifiedDate":"2021-10-06"},{"lineNumber":10,"author":{"gitId":"YoYoCiti"},"content":" */","lastModifiedDate":"2021-10-06"},{"lineNumber":11,"author":{"gitId":"YoYoCiti"},"content":"public class ListFacilityCommand extends Command {","lastModifiedDate":"2021-10-06"},{"lineNumber":12,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":13,"author":{"gitId":"YoYoCiti"},"content":"    public static final String COMMAND_WORD \u003d \"listf\";","lastModifiedDate":"2021-10-06"},{"lineNumber":14,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":15,"author":{"gitId":"YoYoCiti"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Listed all facilities\";","lastModifiedDate":"2021-10-06"},{"lineNumber":16,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":17,"author":{"gitId":"YoYoCiti"},"content":"    @Override","lastModifiedDate":"2021-10-06"},{"lineNumber":18,"author":{"gitId":"YoYoCiti"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2021-10-06"},{"lineNumber":19,"author":{"gitId":"YoYoCiti"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-10-06"},{"lineNumber":20,"author":{"gitId":"YoYoCiti"},"content":"        model.updateFilteredFacilityList(PREDICATE_SHOW_ALL_FACILITIES);","lastModifiedDate":"2021-10-06"},{"lineNumber":21,"author":{"gitId":"YoYoCiti"},"content":"        return new CommandResult(MESSAGE_SUCCESS, false, true, false);","lastModifiedDate":"2021-10-24"},{"lineNumber":22,"author":{"gitId":"YoYoCiti"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":23,"author":{"gitId":"YoYoCiti"},"content":"}","lastModifiedDate":"2021-10-06"}],"authorContributionMap":{"YoYoCiti":23}},{"path":"src/main/java/seedu/address/logic/commands/ListMemberCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2017-08-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Lists all persons in the address book to the user.","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"tsinyee"},"content":"public class ListMemberCommand extends Command {","lastModifiedDate":"2021-10-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"tsinyee"},"content":"    public static final String COMMAND_WORD \u003d \"listm\";","lastModifiedDate":"2021-10-07"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"tsinyee"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Listed all members\";","lastModifiedDate":"2021-10-07"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":21,"author":{"gitId":"YoYoCiti"},"content":"        return new CommandResult(MESSAGE_SUCCESS, false, false, true);","lastModifiedDate":"2021-10-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"YoYoCiti":1,"-":19,"tsinyee":3}},{"path":"src/main/java/seedu/address/logic/commands/MarkAttendanceCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Shruthi0310"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-10-21"},{"lineNumber":2,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":3,"author":{"gitId":"Shruthi0310"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-21"},{"lineNumber":4,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":5,"author":{"gitId":"Shruthi0310"},"content":"import java.util.List;","lastModifiedDate":"2021-10-21"},{"lineNumber":6,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":7,"author":{"gitId":"Shruthi0310"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2021-10-21"},{"lineNumber":8,"author":{"gitId":"Shruthi0310"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-10-21"},{"lineNumber":9,"author":{"gitId":"Shruthi0310"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-21"},{"lineNumber":10,"author":{"gitId":"Shruthi0310"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-10-21"},{"lineNumber":11,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":12,"author":{"gitId":"Shruthi0310"},"content":"/**","lastModifiedDate":"2021-10-21"},{"lineNumber":13,"author":{"gitId":"Shruthi0310"},"content":" * Marks attendance of specified members as present.","lastModifiedDate":"2021-10-21"},{"lineNumber":14,"author":{"gitId":"Shruthi0310"},"content":" */","lastModifiedDate":"2021-10-21"},{"lineNumber":15,"author":{"gitId":"Shruthi0310"},"content":"public class MarkAttendanceCommand extends Command {","lastModifiedDate":"2021-10-21"},{"lineNumber":16,"author":{"gitId":"Shruthi0310"},"content":"    public static final String COMMAND_WORD \u003d \"mark\";","lastModifiedDate":"2021-10-21"},{"lineNumber":17,"author":{"gitId":"Shruthi0310"},"content":"    public static final String MESSGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2021-10-21"},{"lineNumber":18,"author":{"gitId":"Shruthi0310"},"content":"            + \": Marks the members identified by the indices used\"","lastModifiedDate":"2021-10-21"},{"lineNumber":19,"author":{"gitId":"Shruthi0310"},"content":"            + \"in the members list as present.\\n\"","lastModifiedDate":"2021-10-21"},{"lineNumber":20,"author":{"gitId":"Shruthi0310"},"content":"            + \"Parameters: INDEX1 INDEX2 INDEX3... (must be positive integers)\\n\"","lastModifiedDate":"2021-10-21"},{"lineNumber":21,"author":{"gitId":"Shruthi0310"},"content":"            + \"Example: \" + COMMAND_WORD + \"1 2 3\";","lastModifiedDate":"2021-10-21"},{"lineNumber":22,"author":{"gitId":"Shruthi0310"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Marked attendance of members for today\";","lastModifiedDate":"2021-10-21"},{"lineNumber":23,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":24,"author":{"gitId":"Shruthi0310"},"content":"    private final List\u003cIndex\u003e indices;","lastModifiedDate":"2021-10-21"},{"lineNumber":25,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":26,"author":{"gitId":"Shruthi0310"},"content":"    /**","lastModifiedDate":"2021-10-21"},{"lineNumber":27,"author":{"gitId":"Shruthi0310"},"content":"     * Creates MarkAttendanceCommand object to mark attendance of","lastModifiedDate":"2021-10-21"},{"lineNumber":28,"author":{"gitId":"Shruthi0310"},"content":"     * members at specified indices.","lastModifiedDate":"2021-10-21"},{"lineNumber":29,"author":{"gitId":"Shruthi0310"},"content":"     *","lastModifiedDate":"2021-10-21"},{"lineNumber":30,"author":{"gitId":"Shruthi0310"},"content":"     * @param indices Indices of members in list to be marked present.","lastModifiedDate":"2021-10-21"},{"lineNumber":31,"author":{"gitId":"Shruthi0310"},"content":"     */","lastModifiedDate":"2021-10-21"},{"lineNumber":32,"author":{"gitId":"Shruthi0310"},"content":"    public MarkAttendanceCommand(List\u003cIndex\u003e indices) {","lastModifiedDate":"2021-10-21"},{"lineNumber":33,"author":{"gitId":"Shruthi0310"},"content":"        requireNonNull(indices);","lastModifiedDate":"2021-10-21"},{"lineNumber":34,"author":{"gitId":"Shruthi0310"},"content":"        this.indices \u003d indices;","lastModifiedDate":"2021-10-21"},{"lineNumber":35,"author":{"gitId":"Shruthi0310"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":36,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":37,"author":{"gitId":"Shruthi0310"},"content":"    @Override","lastModifiedDate":"2021-10-21"},{"lineNumber":38,"author":{"gitId":"Shruthi0310"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-10-21"},{"lineNumber":39,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":40,"author":{"gitId":"Shruthi0310"},"content":"        if (!model.isWithinListIndex(indices)) {","lastModifiedDate":"2021-10-21"},{"lineNumber":41,"author":{"gitId":"Shruthi0310"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_MEMBER_DISPLAYED_INDEX);","lastModifiedDate":"2021-10-21"},{"lineNumber":42,"author":{"gitId":"Shruthi0310"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":43,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":44,"author":{"gitId":"Shruthi0310"},"content":"        model.markMembersAttendance(indices);","lastModifiedDate":"2021-10-21"},{"lineNumber":45,"author":{"gitId":"YoYoCiti"},"content":"        return new CommandResult(MESSAGE_SUCCESS, false, false, true);","lastModifiedDate":"2021-10-24"},{"lineNumber":46,"author":{"gitId":"Shruthi0310"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":47,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":48,"author":{"gitId":"Shruthi0310"},"content":"    @Override","lastModifiedDate":"2021-10-21"},{"lineNumber":49,"author":{"gitId":"Shruthi0310"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2021-10-21"},{"lineNumber":50,"author":{"gitId":"Shruthi0310"},"content":"        return obj \u003d\u003d this","lastModifiedDate":"2021-10-21"},{"lineNumber":51,"author":{"gitId":"Shruthi0310"},"content":"                || (obj instanceof MarkAttendanceCommand","lastModifiedDate":"2021-10-21"},{"lineNumber":52,"author":{"gitId":"Shruthi0310"},"content":"                \u0026\u0026 indices.equals(((MarkAttendanceCommand) obj).indices));","lastModifiedDate":"2021-10-21"},{"lineNumber":53,"author":{"gitId":"Shruthi0310"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":54,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":55,"author":{"gitId":"Shruthi0310"},"content":"}","lastModifiedDate":"2021-10-21"}],"authorContributionMap":{"YoYoCiti":1,"Shruthi0310":54}},{"path":"src/main/java/seedu/address/logic/commands/SetMemberAvailabilityCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"felix-ong"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-10-10"},{"lineNumber":2,"author":{"gitId":"felix-ong"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":3,"author":{"gitId":"felix-ong"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2021-10-10"},{"lineNumber":4,"author":{"gitId":"felix-ong"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":5,"author":{"gitId":"felix-ong"},"content":"import java.util.List;","lastModifiedDate":"2021-10-10"},{"lineNumber":6,"author":{"gitId":"felix-ong"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":7,"author":{"gitId":"felix-ong"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2021-10-10"},{"lineNumber":8,"author":{"gitId":"felix-ong"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-10-10"},{"lineNumber":9,"author":{"gitId":"felix-ong"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-10"},{"lineNumber":10,"author":{"gitId":"felix-ong"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-10-10"},{"lineNumber":11,"author":{"gitId":"felix-ong"},"content":"import seedu.address.model.person.Availability;","lastModifiedDate":"2021-10-10"},{"lineNumber":12,"author":{"gitId":"felix-ong"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2021-10-10"},{"lineNumber":13,"author":{"gitId":"felix-ong"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":14,"author":{"gitId":"felix-ong"},"content":"/**","lastModifiedDate":"2021-10-10"},{"lineNumber":15,"author":{"gitId":"felix-ong"},"content":" * Sets the availability of an existing member in the member list.","lastModifiedDate":"2021-10-10"},{"lineNumber":16,"author":{"gitId":"felix-ong"},"content":" */","lastModifiedDate":"2021-10-10"},{"lineNumber":17,"author":{"gitId":"felix-ong"},"content":"public class SetMemberAvailabilityCommand extends Command {","lastModifiedDate":"2021-10-10"},{"lineNumber":18,"author":{"gitId":"felix-ong"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":19,"author":{"gitId":"felix-ong"},"content":"    public static final String COMMAND_WORD \u003d \"setm\";","lastModifiedDate":"2021-10-10"},{"lineNumber":20,"author":{"gitId":"felix-ong"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":21,"author":{"gitId":"felix-ong"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2021-10-10"},{"lineNumber":22,"author":{"gitId":"felix-ong"},"content":"            + \": Sets the availability of the members identified \"","lastModifiedDate":"2021-10-10"},{"lineNumber":23,"author":{"gitId":"felix-ong"},"content":"            + \"by the indices used in the last member listing. \"","lastModifiedDate":"2021-10-10"},{"lineNumber":24,"author":{"gitId":"felix-ong"},"content":"            + \"Existing availability will be overwritten by the input.\\n\"","lastModifiedDate":"2021-10-10"},{"lineNumber":25,"author":{"gitId":"felix-ong"},"content":"            + \"Parameters: INDEX1 INDEX2 INDEX3 (must be positive integers) \"","lastModifiedDate":"2021-10-12"},{"lineNumber":26,"author":{"gitId":"felix-ong"},"content":"            + \"d/AVAILABLE DAYS (where 1 represents Monday, 2 represents Tuesday ... and 7 represents Sunday\\n\"","lastModifiedDate":"2021-10-15"},{"lineNumber":27,"author":{"gitId":"felix-ong"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2021-10-10"},{"lineNumber":28,"author":{"gitId":"felix-ong"},"content":"            + \"d/1 2 3 7\";","lastModifiedDate":"2021-10-15"},{"lineNumber":29,"author":{"gitId":"felix-ong"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":30,"author":{"gitId":"felix-ong"},"content":"    public static final String MESSAGE_SET_AVAILABILITY_SUCCESS \u003d \"Successfully set availability of %s to %s\";","lastModifiedDate":"2021-10-19"},{"lineNumber":31,"author":{"gitId":"felix-ong"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":32,"author":{"gitId":"felix-ong"},"content":"    private final List\u003cIndex\u003e indices;","lastModifiedDate":"2021-10-10"},{"lineNumber":33,"author":{"gitId":"felix-ong"},"content":"    private final Availability availability;","lastModifiedDate":"2021-10-10"},{"lineNumber":34,"author":{"gitId":"felix-ong"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":35,"author":{"gitId":"felix-ong"},"content":"    /**","lastModifiedDate":"2021-10-10"},{"lineNumber":36,"author":{"gitId":"felix-ong"},"content":"     * @param indices of the person in the filtered person list to edit the availability","lastModifiedDate":"2021-10-10"},{"lineNumber":37,"author":{"gitId":"felix-ong"},"content":"     * @param availability of the person to be updated to","lastModifiedDate":"2021-10-10"},{"lineNumber":38,"author":{"gitId":"felix-ong"},"content":"     */","lastModifiedDate":"2021-10-10"},{"lineNumber":39,"author":{"gitId":"felix-ong"},"content":"    public SetMemberAvailabilityCommand(List\u003cIndex\u003e indices, Availability availability) {","lastModifiedDate":"2021-10-10"},{"lineNumber":40,"author":{"gitId":"felix-ong"},"content":"        requireAllNonNull(indices, availability);","lastModifiedDate":"2021-10-10"},{"lineNumber":41,"author":{"gitId":"felix-ong"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":42,"author":{"gitId":"felix-ong"},"content":"        this.indices \u003d indices;","lastModifiedDate":"2021-10-10"},{"lineNumber":43,"author":{"gitId":"felix-ong"},"content":"        this.availability \u003d availability;","lastModifiedDate":"2021-10-10"},{"lineNumber":44,"author":{"gitId":"felix-ong"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":45,"author":{"gitId":"felix-ong"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":46,"author":{"gitId":"felix-ong"},"content":"    @Override","lastModifiedDate":"2021-10-10"},{"lineNumber":47,"author":{"gitId":"felix-ong"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-10-10"},{"lineNumber":48,"author":{"gitId":"felix-ong"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2021-10-10"},{"lineNumber":49,"author":{"gitId":"felix-ong"},"content":"        StringBuilder names \u003d new StringBuilder();","lastModifiedDate":"2021-10-26"},{"lineNumber":50,"author":{"gitId":"felix-ong"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":51,"author":{"gitId":"felix-ong"},"content":"        for (Index i : indices) {","lastModifiedDate":"2021-10-10"},{"lineNumber":52,"author":{"gitId":"felix-ong"},"content":"            if (i.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2021-10-10"},{"lineNumber":53,"author":{"gitId":"felix-ong"},"content":"                throw new CommandException(Messages.MESSAGE_INVALID_MEMBER_DISPLAYED_INDEX);","lastModifiedDate":"2021-10-10"},{"lineNumber":54,"author":{"gitId":"felix-ong"},"content":"            }","lastModifiedDate":"2021-10-10"},{"lineNumber":55,"author":{"gitId":"felix-ong"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":56,"author":{"gitId":"felix-ong"},"content":"            Person personToEdit \u003d lastShownList.get(i.getZeroBased());","lastModifiedDate":"2021-10-10"},{"lineNumber":57,"author":{"gitId":"felix-ong"},"content":"            Person editedPerson \u003d new Person(","lastModifiedDate":"2021-10-10"},{"lineNumber":58,"author":{"gitId":"Shruthi0310"},"content":"                    personToEdit.getName(), personToEdit.getPhone(), availability, personToEdit.getTodayAttendance(),","lastModifiedDate":"2021-10-26"},{"lineNumber":59,"author":{"gitId":"Shruthi0310"},"content":"                    personToEdit.getTotalAttendance(), personToEdit.getTags());","lastModifiedDate":"2021-10-26"},{"lineNumber":60,"author":{"gitId":"felix-ong"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":61,"author":{"gitId":"felix-ong"},"content":"            model.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2021-10-10"},{"lineNumber":62,"author":{"gitId":"felix-ong"},"content":"            names.append(lastShownList.get(i.getZeroBased()).getName());","lastModifiedDate":"2021-10-26"},{"lineNumber":63,"author":{"gitId":"felix-ong"},"content":"            names.append(\", \");","lastModifiedDate":"2021-10-19"},{"lineNumber":64,"author":{"gitId":"felix-ong"},"content":"        }","lastModifiedDate":"2021-10-19"},{"lineNumber":65,"author":{"gitId":"felix-ong"},"content":"        model.updateFilteredPersonList(Model.PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2021-10-26"},{"lineNumber":66,"author":{"gitId":"felix-ong"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":67,"author":{"gitId":"YoYoCiti"},"content":"        return new CommandResult(String.format(MESSAGE_SET_AVAILABILITY_SUCCESS, names, availability),","lastModifiedDate":"2021-10-24"},{"lineNumber":68,"author":{"gitId":"YoYoCiti"},"content":"                false, false, true);","lastModifiedDate":"2021-10-24"},{"lineNumber":69,"author":{"gitId":"felix-ong"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":70,"author":{"gitId":"felix-ong"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":71,"author":{"gitId":"felix-ong"},"content":"    @Override","lastModifiedDate":"2021-10-10"},{"lineNumber":72,"author":{"gitId":"felix-ong"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-10"},{"lineNumber":73,"author":{"gitId":"felix-ong"},"content":"        // short circuit if same object","lastModifiedDate":"2021-10-10"},{"lineNumber":74,"author":{"gitId":"felix-ong"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2021-10-10"},{"lineNumber":75,"author":{"gitId":"felix-ong"},"content":"            return true;","lastModifiedDate":"2021-10-10"},{"lineNumber":76,"author":{"gitId":"felix-ong"},"content":"        }","lastModifiedDate":"2021-10-10"},{"lineNumber":77,"author":{"gitId":"felix-ong"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":78,"author":{"gitId":"felix-ong"},"content":"        // instanceof handles nulls","lastModifiedDate":"2021-10-10"},{"lineNumber":79,"author":{"gitId":"felix-ong"},"content":"        if (!(other instanceof SetMemberAvailabilityCommand)) {","lastModifiedDate":"2021-10-10"},{"lineNumber":80,"author":{"gitId":"felix-ong"},"content":"            return false;","lastModifiedDate":"2021-10-10"},{"lineNumber":81,"author":{"gitId":"felix-ong"},"content":"        }","lastModifiedDate":"2021-10-10"},{"lineNumber":82,"author":{"gitId":"felix-ong"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":83,"author":{"gitId":"felix-ong"},"content":"        // state check","lastModifiedDate":"2021-10-10"},{"lineNumber":84,"author":{"gitId":"felix-ong"},"content":"        SetMemberAvailabilityCommand e \u003d (SetMemberAvailabilityCommand) other;","lastModifiedDate":"2021-10-10"},{"lineNumber":85,"author":{"gitId":"felix-ong"},"content":"        return indices.equals(e.indices)","lastModifiedDate":"2021-10-10"},{"lineNumber":86,"author":{"gitId":"felix-ong"},"content":"                \u0026\u0026 availability.equals(e.availability);","lastModifiedDate":"2021-10-10"},{"lineNumber":87,"author":{"gitId":"felix-ong"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":88,"author":{"gitId":"felix-ong"},"content":"}","lastModifiedDate":"2021-10-10"}],"authorContributionMap":{"YoYoCiti":2,"Shruthi0310":2,"felix-ong":84}},{"path":"src/main/java/seedu/address/logic/commands/ShowAliasesCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"YoYoCiti"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-10-17"},{"lineNumber":2,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":3,"author":{"gitId":"YoYoCiti"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-17"},{"lineNumber":4,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":5,"author":{"gitId":"YoYoCiti"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-17"},{"lineNumber":6,"author":{"gitId":"YoYoCiti"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-10-17"},{"lineNumber":7,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":8,"author":{"gitId":"YoYoCiti"},"content":"/**","lastModifiedDate":"2021-10-17"},{"lineNumber":9,"author":{"gitId":"YoYoCiti"},"content":" * Lists all aliases to the user.","lastModifiedDate":"2021-10-17"},{"lineNumber":10,"author":{"gitId":"YoYoCiti"},"content":" */","lastModifiedDate":"2021-10-17"},{"lineNumber":11,"author":{"gitId":"YoYoCiti"},"content":"public class ShowAliasesCommand extends Command {","lastModifiedDate":"2021-10-17"},{"lineNumber":12,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":13,"author":{"gitId":"YoYoCiti"},"content":"    public static final String COMMAND_WORD \u003d \"aliases\";","lastModifiedDate":"2021-10-17"},{"lineNumber":14,"author":{"gitId":"YoYoCiti"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"List of Aliases:\\n%1$s\";","lastModifiedDate":"2021-10-17"},{"lineNumber":15,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":16,"author":{"gitId":"YoYoCiti"},"content":"    @Override","lastModifiedDate":"2021-10-17"},{"lineNumber":17,"author":{"gitId":"YoYoCiti"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-10-17"},{"lineNumber":18,"author":{"gitId":"YoYoCiti"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-10-17"},{"lineNumber":19,"author":{"gitId":"YoYoCiti"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, model.getAliases()));","lastModifiedDate":"2021-10-17"},{"lineNumber":20,"author":{"gitId":"YoYoCiti"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":21,"author":{"gitId":"YoYoCiti"},"content":"}","lastModifiedDate":"2021-10-17"}],"authorContributionMap":{"YoYoCiti":21}},{"path":"src/main/java/seedu/address/logic/commands/SortMemberCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tsinyee"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-10-18"},{"lineNumber":2,"author":{"gitId":"tsinyee"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":3,"author":{"gitId":"tsinyee"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-18"},{"lineNumber":4,"author":{"gitId":"tsinyee"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_SORT_ORDER;","lastModifiedDate":"2021-10-25"},{"lineNumber":5,"author":{"gitId":"tsinyee"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2021-10-18"},{"lineNumber":6,"author":{"gitId":"tsinyee"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":7,"author":{"gitId":"tsinyee"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-10-18"},{"lineNumber":8,"author":{"gitId":"tsinyee"},"content":"import seedu.address.model.sort.SortOrder;","lastModifiedDate":"2021-10-25"},{"lineNumber":9,"author":{"gitId":"tsinyee"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":10,"author":{"gitId":"tsinyee"},"content":"/**","lastModifiedDate":"2021-10-18"},{"lineNumber":11,"author":{"gitId":"tsinyee"},"content":" * Sorts member list in alphabetical order.","lastModifiedDate":"2021-10-18"},{"lineNumber":12,"author":{"gitId":"tsinyee"},"content":" */","lastModifiedDate":"2021-10-18"},{"lineNumber":13,"author":{"gitId":"tsinyee"},"content":"public class SortMemberCommand extends Command {","lastModifiedDate":"2021-10-18"},{"lineNumber":14,"author":{"gitId":"tsinyee"},"content":"    public static final String COMMAND_WORD \u003d \"sortm\";","lastModifiedDate":"2021-10-18"},{"lineNumber":15,"author":{"gitId":"tsinyee"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":16,"author":{"gitId":"tsinyee"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Sorts the member list, either by name or tag. \"","lastModifiedDate":"2021-10-25"},{"lineNumber":17,"author":{"gitId":"tsinyee"},"content":"            + \"Parameters: \"","lastModifiedDate":"2021-10-25"},{"lineNumber":18,"author":{"gitId":"tsinyee"},"content":"            + PREFIX_SORT_ORDER + \"ORDER\\n\"","lastModifiedDate":"2021-10-25"},{"lineNumber":19,"author":{"gitId":"tsinyee"},"content":"            + \"To sort by name: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2021-10-25"},{"lineNumber":20,"author":{"gitId":"tsinyee"},"content":"            + PREFIX_SORT_ORDER + \"name\\n\"","lastModifiedDate":"2021-10-25"},{"lineNumber":21,"author":{"gitId":"tsinyee"},"content":"            + \"To sort by tags: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2021-10-25"},{"lineNumber":22,"author":{"gitId":"tsinyee"},"content":"            + PREFIX_SORT_ORDER + \"tag\";","lastModifiedDate":"2021-10-25"},{"lineNumber":23,"author":{"gitId":"tsinyee"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":24,"author":{"gitId":"tsinyee"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Sorted all members by %s\";","lastModifiedDate":"2021-10-25"},{"lineNumber":25,"author":{"gitId":"tsinyee"},"content":"    private final SortOrder sortOrder;","lastModifiedDate":"2021-10-25"},{"lineNumber":26,"author":{"gitId":"tsinyee"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":27,"author":{"gitId":"tsinyee"},"content":"    public SortMemberCommand(SortOrder sortOrder) {","lastModifiedDate":"2021-10-25"},{"lineNumber":28,"author":{"gitId":"tsinyee"},"content":"        this.sortOrder \u003d sortOrder;","lastModifiedDate":"2021-10-25"},{"lineNumber":29,"author":{"gitId":"tsinyee"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":30,"author":{"gitId":"tsinyee"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":31,"author":{"gitId":"tsinyee"},"content":"    @Override","lastModifiedDate":"2021-10-18"},{"lineNumber":32,"author":{"gitId":"tsinyee"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2021-10-18"},{"lineNumber":33,"author":{"gitId":"tsinyee"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-10-18"},{"lineNumber":34,"author":{"gitId":"tsinyee"},"content":"        model.sortMemberList(sortOrder);","lastModifiedDate":"2021-10-25"},{"lineNumber":35,"author":{"gitId":"tsinyee"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2021-10-18"},{"lineNumber":36,"author":{"gitId":"tsinyee"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, sortOrder), false, false, true);","lastModifiedDate":"2021-10-25"},{"lineNumber":37,"author":{"gitId":"tsinyee"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":38,"author":{"gitId":"tsinyee"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":39,"author":{"gitId":"tsinyee"},"content":"    @Override","lastModifiedDate":"2021-10-25"},{"lineNumber":40,"author":{"gitId":"tsinyee"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-25"},{"lineNumber":41,"author":{"gitId":"tsinyee"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-25"},{"lineNumber":42,"author":{"gitId":"tsinyee"},"content":"                || (other instanceof SortMemberCommand // instanceof handles nulls","lastModifiedDate":"2021-10-25"},{"lineNumber":43,"author":{"gitId":"tsinyee"},"content":"                \u0026\u0026 sortOrder.equals(((SortMemberCommand) other).sortOrder)); // state check","lastModifiedDate":"2021-10-25"},{"lineNumber":44,"author":{"gitId":"tsinyee"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":45,"author":{"gitId":"tsinyee"},"content":"}","lastModifiedDate":"2021-10-18"}],"authorContributionMap":{"tsinyee":45}},{"path":"src/main/java/seedu/address/logic/commands/SplitCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Shruthi0310"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-10-12"},{"lineNumber":2,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":3,"author":{"gitId":"Shruthi0310"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-12"},{"lineNumber":4,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":5,"author":{"gitId":"felix-ong"},"content":"import java.time.DayOfWeek;","lastModifiedDate":"2021-10-19"},{"lineNumber":6,"author":{"gitId":"felix-ong"},"content":"import java.time.format.TextStyle;","lastModifiedDate":"2021-10-19"},{"lineNumber":7,"author":{"gitId":"felix-ong"},"content":"import java.util.Locale;","lastModifiedDate":"2021-10-19"},{"lineNumber":8,"author":{"gitId":"felix-ong"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":9,"author":{"gitId":"Shruthi0310"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-12"},{"lineNumber":10,"author":{"gitId":"Shruthi0310"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-10-12"},{"lineNumber":11,"author":{"gitId":"Shruthi0310"},"content":"import seedu.address.model.person.PersonAvailableOnDayPredicate;","lastModifiedDate":"2021-10-12"},{"lineNumber":12,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":13,"author":{"gitId":"Shruthi0310"},"content":"/**","lastModifiedDate":"2021-10-12"},{"lineNumber":14,"author":{"gitId":"Shruthi0310"},"content":" * Splits members available on particular day to different Facilities.","lastModifiedDate":"2021-10-12"},{"lineNumber":15,"author":{"gitId":"Shruthi0310"},"content":" */","lastModifiedDate":"2021-10-12"},{"lineNumber":16,"author":{"gitId":"Shruthi0310"},"content":"public class SplitCommand extends Command {","lastModifiedDate":"2021-10-12"},{"lineNumber":17,"author":{"gitId":"Shruthi0310"},"content":"    public static final String COMMAND_WORD \u003d \"split\";","lastModifiedDate":"2021-10-12"},{"lineNumber":18,"author":{"gitId":"Shruthi0310"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": splits members into locations based on availability.\\n\"","lastModifiedDate":"2021-10-12"},{"lineNumber":19,"author":{"gitId":"Shruthi0310"},"content":"            + \"Parameters: \" + \"DAY\\n\"","lastModifiedDate":"2021-10-12"},{"lineNumber":20,"author":{"gitId":"felix-ong"},"content":"            + \"DAY must be an integer from 1 to 7\\n\"","lastModifiedDate":"2021-10-16"},{"lineNumber":21,"author":{"gitId":"felix-ong"},"content":"            + \"where 1 represents Monday, 2 represents Tuesday ... and 7 represents Sunday\\n\"","lastModifiedDate":"2021-10-16"},{"lineNumber":22,"author":{"gitId":"felix-ong"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1\";","lastModifiedDate":"2021-10-16"},{"lineNumber":23,"author":{"gitId":"felix-ong"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Members have been split for %1$s\";","lastModifiedDate":"2021-10-19"},{"lineNumber":24,"author":{"gitId":"YoYoCiti"},"content":"    public static final String MESSAGE_INSUFFICIENT_FACILITIES \u003d","lastModifiedDate":"2021-10-26"},{"lineNumber":25,"author":{"gitId":"YoYoCiti"},"content":"            \"There are not enough facilities to accommodate all members for %1$s.\\n\"","lastModifiedDate":"2021-10-26"},{"lineNumber":26,"author":{"gitId":"YoYoCiti"},"content":"                    + \"%2$d member(s) unallocated.\";","lastModifiedDate":"2021-10-26"},{"lineNumber":27,"author":{"gitId":"YoYoCiti"},"content":"    public static final String MESSAGE_NO_MEMBERS_AVAILABLE \u003d","lastModifiedDate":"2021-10-26"},{"lineNumber":28,"author":{"gitId":"YoYoCiti"},"content":"            \"There are no members available on %1$s.\";","lastModifiedDate":"2021-10-26"},{"lineNumber":29,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":30,"author":{"gitId":"felix-ong"},"content":"    private final int dayNumber;","lastModifiedDate":"2021-10-16"},{"lineNumber":31,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":32,"author":{"gitId":"Shruthi0310"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":33,"author":{"gitId":"Shruthi0310"},"content":"     * Creates a SplitCommand object to split the members.","lastModifiedDate":"2021-10-12"},{"lineNumber":34,"author":{"gitId":"Shruthi0310"},"content":"     *","lastModifiedDate":"2021-10-12"},{"lineNumber":35,"author":{"gitId":"felix-ong"},"content":"     * @param dayNumber Day to split members for.","lastModifiedDate":"2021-10-16"},{"lineNumber":36,"author":{"gitId":"Shruthi0310"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":37,"author":{"gitId":"felix-ong"},"content":"    public SplitCommand(int dayNumber) {","lastModifiedDate":"2021-10-16"},{"lineNumber":38,"author":{"gitId":"felix-ong"},"content":"        assert dayNumber \u003e\u003d 1 \u0026\u0026 dayNumber \u003c\u003d 7 : \"dayNumber should be between 1 and 7\";","lastModifiedDate":"2021-10-19"},{"lineNumber":39,"author":{"gitId":"felix-ong"},"content":"        this.dayNumber \u003d dayNumber;","lastModifiedDate":"2021-10-16"},{"lineNumber":40,"author":{"gitId":"Shruthi0310"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":41,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":42,"author":{"gitId":"Shruthi0310"},"content":"    @Override","lastModifiedDate":"2021-10-12"},{"lineNumber":43,"author":{"gitId":"Shruthi0310"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-10-12"},{"lineNumber":44,"author":{"gitId":"Shruthi0310"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-10-12"},{"lineNumber":45,"author":{"gitId":"felix-ong"},"content":"        PersonAvailableOnDayPredicate predicate \u003d new PersonAvailableOnDayPredicate(dayNumber);","lastModifiedDate":"2021-10-16"},{"lineNumber":46,"author":{"gitId":"felix-ong"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":47,"author":{"gitId":"YoYoCiti"},"content":"        int result \u003d model.split(predicate);","lastModifiedDate":"2021-10-26"},{"lineNumber":48,"author":{"gitId":"YoYoCiti"},"content":"        if (result \u003d\u003d -1) {","lastModifiedDate":"2021-10-26"},{"lineNumber":49,"author":{"gitId":"YoYoCiti"},"content":"            // No members available","lastModifiedDate":"2021-10-26"},{"lineNumber":50,"author":{"gitId":"YoYoCiti"},"content":"            throw new CommandException(String.format(MESSAGE_NO_MEMBERS_AVAILABLE,","lastModifiedDate":"2021-10-26"},{"lineNumber":51,"author":{"gitId":"YoYoCiti"},"content":"                    DayOfWeek.of(dayNumber).getDisplayName(TextStyle.FULL, Locale.getDefault())));","lastModifiedDate":"2021-10-26"},{"lineNumber":52,"author":{"gitId":"YoYoCiti"},"content":"        } else if (result !\u003d 0) {","lastModifiedDate":"2021-10-26"},{"lineNumber":53,"author":{"gitId":"YoYoCiti"},"content":"            // Insufficient facilities","lastModifiedDate":"2021-10-26"},{"lineNumber":54,"author":{"gitId":"YoYoCiti"},"content":"            throw new CommandException(String.format(MESSAGE_INSUFFICIENT_FACILITIES,","lastModifiedDate":"2021-10-26"},{"lineNumber":55,"author":{"gitId":"YoYoCiti"},"content":"                    DayOfWeek.of(dayNumber).getDisplayName(TextStyle.FULL, Locale.getDefault()), result));","lastModifiedDate":"2021-10-26"},{"lineNumber":56,"author":{"gitId":"YoYoCiti"},"content":"        } else {","lastModifiedDate":"2021-10-26"},{"lineNumber":57,"author":{"gitId":"YoYoCiti"},"content":"            // Split successful","lastModifiedDate":"2021-10-26"},{"lineNumber":58,"author":{"gitId":"felix-ong"},"content":"            return new CommandResult(String.format(MESSAGE_SUCCESS,","lastModifiedDate":"2021-10-19"},{"lineNumber":59,"author":{"gitId":"YoYoCiti"},"content":"                    DayOfWeek.of(dayNumber).getDisplayName(TextStyle.FULL, Locale.getDefault())),","lastModifiedDate":"2021-10-24"},{"lineNumber":60,"author":{"gitId":"YoYoCiti"},"content":"                    false, true, false);","lastModifiedDate":"2021-10-24"},{"lineNumber":61,"author":{"gitId":"Shruthi0310"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":62,"author":{"gitId":"YoYoCiti"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":63,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":64,"author":{"gitId":"Shruthi0310"},"content":"    @Override","lastModifiedDate":"2021-10-12"},{"lineNumber":65,"author":{"gitId":"Shruthi0310"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2021-10-12"},{"lineNumber":66,"author":{"gitId":"Shruthi0310"},"content":"        return (obj \u003d\u003d this)","lastModifiedDate":"2021-10-12"},{"lineNumber":67,"author":{"gitId":"Shruthi0310"},"content":"                || (obj instanceof SplitCommand","lastModifiedDate":"2021-10-12"},{"lineNumber":68,"author":{"gitId":"felix-ong"},"content":"                \u0026\u0026 dayNumber \u003d\u003d ((SplitCommand) obj).dayNumber);","lastModifiedDate":"2021-10-16"},{"lineNumber":69,"author":{"gitId":"Shruthi0310"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":70,"author":{"gitId":"Shruthi0310"},"content":"}","lastModifiedDate":"2021-10-12"}],"authorContributionMap":{"YoYoCiti":19,"Shruthi0310":34,"felix-ong":17}},{"path":"src/main/java/seedu/address/logic/commands/UnmarkAttendanceCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Shruthi0310"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-10-21"},{"lineNumber":2,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":3,"author":{"gitId":"Shruthi0310"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-21"},{"lineNumber":4,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":5,"author":{"gitId":"Shruthi0310"},"content":"import java.util.List;","lastModifiedDate":"2021-10-21"},{"lineNumber":6,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":7,"author":{"gitId":"Shruthi0310"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2021-10-21"},{"lineNumber":8,"author":{"gitId":"Shruthi0310"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-10-21"},{"lineNumber":9,"author":{"gitId":"Shruthi0310"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-21"},{"lineNumber":10,"author":{"gitId":"Shruthi0310"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-10-21"},{"lineNumber":11,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":12,"author":{"gitId":"Shruthi0310"},"content":"/**","lastModifiedDate":"2021-10-21"},{"lineNumber":13,"author":{"gitId":"Shruthi0310"},"content":" * Unmarks attendance of specified members as absent.","lastModifiedDate":"2021-10-21"},{"lineNumber":14,"author":{"gitId":"Shruthi0310"},"content":" */","lastModifiedDate":"2021-10-21"},{"lineNumber":15,"author":{"gitId":"Shruthi0310"},"content":"public class UnmarkAttendanceCommand extends Command {","lastModifiedDate":"2021-10-21"},{"lineNumber":16,"author":{"gitId":"Shruthi0310"},"content":"    public static final String COMMAND_WORD \u003d \"unmark\";","lastModifiedDate":"2021-10-21"},{"lineNumber":17,"author":{"gitId":"Shruthi0310"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2021-10-21"},{"lineNumber":18,"author":{"gitId":"Shruthi0310"},"content":"            + \": Unmarks attendance of members identified by the indices used\\n\"","lastModifiedDate":"2021-10-21"},{"lineNumber":19,"author":{"gitId":"Shruthi0310"},"content":"            + \" in the members list\"","lastModifiedDate":"2021-10-21"},{"lineNumber":20,"author":{"gitId":"Shruthi0310"},"content":"            + \"Parameters: INDEX1 INDEX2 INDEX3... (must be positive integers)\\n\"","lastModifiedDate":"2021-10-21"},{"lineNumber":21,"author":{"gitId":"Shruthi0310"},"content":"            + \"Example: \" + COMMAND_WORD + \"1 2 3\";","lastModifiedDate":"2021-10-21"},{"lineNumber":22,"author":{"gitId":"Shruthi0310"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Unmarked attendance of members for today\";","lastModifiedDate":"2021-10-21"},{"lineNumber":23,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":24,"author":{"gitId":"Shruthi0310"},"content":"    private final List\u003cIndex\u003e indices;","lastModifiedDate":"2021-10-21"},{"lineNumber":25,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":26,"author":{"gitId":"Shruthi0310"},"content":"    /**","lastModifiedDate":"2021-10-21"},{"lineNumber":27,"author":{"gitId":"Shruthi0310"},"content":"     * Creates UnmarkAttendanceCommand object to unmark attendance","lastModifiedDate":"2021-10-21"},{"lineNumber":28,"author":{"gitId":"Shruthi0310"},"content":"     * of members at specified indices.","lastModifiedDate":"2021-10-21"},{"lineNumber":29,"author":{"gitId":"Shruthi0310"},"content":"     *","lastModifiedDate":"2021-10-21"},{"lineNumber":30,"author":{"gitId":"Shruthi0310"},"content":"     * @param indices Indices of members in list to be unmarked.","lastModifiedDate":"2021-10-21"},{"lineNumber":31,"author":{"gitId":"Shruthi0310"},"content":"     */","lastModifiedDate":"2021-10-21"},{"lineNumber":32,"author":{"gitId":"Shruthi0310"},"content":"    public UnmarkAttendanceCommand(List\u003cIndex\u003e indices) {","lastModifiedDate":"2021-10-21"},{"lineNumber":33,"author":{"gitId":"Shruthi0310"},"content":"        requireNonNull(indices);","lastModifiedDate":"2021-10-21"},{"lineNumber":34,"author":{"gitId":"Shruthi0310"},"content":"        this.indices \u003d indices;","lastModifiedDate":"2021-10-21"},{"lineNumber":35,"author":{"gitId":"Shruthi0310"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":36,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":37,"author":{"gitId":"Shruthi0310"},"content":"    @Override","lastModifiedDate":"2021-10-21"},{"lineNumber":38,"author":{"gitId":"Shruthi0310"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-10-21"},{"lineNumber":39,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":40,"author":{"gitId":"Shruthi0310"},"content":"        if (!model.isWithinListIndex(indices)) {","lastModifiedDate":"2021-10-21"},{"lineNumber":41,"author":{"gitId":"Shruthi0310"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_MEMBER_DISPLAYED_INDEX);","lastModifiedDate":"2021-10-21"},{"lineNumber":42,"author":{"gitId":"Shruthi0310"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":43,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":44,"author":{"gitId":"Shruthi0310"},"content":"        model.unmarkMembersAttendance(indices);","lastModifiedDate":"2021-10-21"},{"lineNumber":45,"author":{"gitId":"YoYoCiti"},"content":"        return new CommandResult(MESSAGE_SUCCESS, false, false, true);","lastModifiedDate":"2021-10-24"},{"lineNumber":46,"author":{"gitId":"Shruthi0310"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":47,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":48,"author":{"gitId":"Shruthi0310"},"content":"    @Override","lastModifiedDate":"2021-10-21"},{"lineNumber":49,"author":{"gitId":"Shruthi0310"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2021-10-21"},{"lineNumber":50,"author":{"gitId":"Shruthi0310"},"content":"        return obj \u003d\u003d this","lastModifiedDate":"2021-10-21"},{"lineNumber":51,"author":{"gitId":"Shruthi0310"},"content":"                || (obj instanceof UnmarkAttendanceCommand","lastModifiedDate":"2021-10-21"},{"lineNumber":52,"author":{"gitId":"Shruthi0310"},"content":"                \u0026\u0026 indices.equals(((UnmarkAttendanceCommand) obj).indices));","lastModifiedDate":"2021-10-21"},{"lineNumber":53,"author":{"gitId":"Shruthi0310"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":54,"author":{"gitId":"Shruthi0310"},"content":"}","lastModifiedDate":"2021-10-21"}],"authorContributionMap":{"YoYoCiti":1,"Shruthi0310":53}},{"path":"src/main/java/seedu/address/logic/parser/AddAliasCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"YoYoCiti"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-10-17"},{"lineNumber":2,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":3,"author":{"gitId":"YoYoCiti"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-17"},{"lineNumber":4,"author":{"gitId":"YoYoCiti"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_COMMAND_WORD;","lastModifiedDate":"2021-10-17"},{"lineNumber":5,"author":{"gitId":"YoYoCiti"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_SHORTCUT;","lastModifiedDate":"2021-10-18"},{"lineNumber":6,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":7,"author":{"gitId":"YoYoCiti"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2021-10-17"},{"lineNumber":8,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":9,"author":{"gitId":"YoYoCiti"},"content":"import seedu.address.logic.commands.AddAliasCommand;","lastModifiedDate":"2021-10-17"},{"lineNumber":10,"author":{"gitId":"YoYoCiti"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-17"},{"lineNumber":11,"author":{"gitId":"YoYoCiti"},"content":"import seedu.address.model.alias.Alias;","lastModifiedDate":"2021-10-18"},{"lineNumber":12,"author":{"gitId":"YoYoCiti"},"content":"import seedu.address.model.alias.CommandWord;","lastModifiedDate":"2021-10-18"},{"lineNumber":13,"author":{"gitId":"YoYoCiti"},"content":"import seedu.address.model.alias.Shortcut;","lastModifiedDate":"2021-10-18"},{"lineNumber":14,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":15,"author":{"gitId":"YoYoCiti"},"content":"/**","lastModifiedDate":"2021-10-17"},{"lineNumber":16,"author":{"gitId":"YoYoCiti"},"content":" * Parses input arguments and creates a new AddAliasCommand object.","lastModifiedDate":"2021-10-17"},{"lineNumber":17,"author":{"gitId":"YoYoCiti"},"content":" */","lastModifiedDate":"2021-10-17"},{"lineNumber":18,"author":{"gitId":"YoYoCiti"},"content":"public class AddAliasCommandParser implements Parser\u003cAddAliasCommand\u003e {","lastModifiedDate":"2021-10-17"},{"lineNumber":19,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":20,"author":{"gitId":"YoYoCiti"},"content":"    @Override","lastModifiedDate":"2021-10-17"},{"lineNumber":21,"author":{"gitId":"YoYoCiti"},"content":"    public AddAliasCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-10-17"},{"lineNumber":22,"author":{"gitId":"YoYoCiti"},"content":"        ArgumentMultimap argMultiMap \u003d","lastModifiedDate":"2021-10-17"},{"lineNumber":23,"author":{"gitId":"YoYoCiti"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_SHORTCUT, PREFIX_COMMAND_WORD);","lastModifiedDate":"2021-10-18"},{"lineNumber":24,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":25,"author":{"gitId":"YoYoCiti"},"content":"        if (!arePrefixesPresent(argMultiMap, PREFIX_SHORTCUT, PREFIX_COMMAND_WORD)","lastModifiedDate":"2021-10-18"},{"lineNumber":26,"author":{"gitId":"YoYoCiti"},"content":"                || !argMultiMap.getPreamble().isEmpty()) {","lastModifiedDate":"2021-10-17"},{"lineNumber":27,"author":{"gitId":"YoYoCiti"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddAliasCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-17"},{"lineNumber":28,"author":{"gitId":"YoYoCiti"},"content":"        }","lastModifiedDate":"2021-10-17"},{"lineNumber":29,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":30,"author":{"gitId":"YoYoCiti"},"content":"        Shortcut shortcut \u003d ParserUtil.parseShortcut(argMultiMap.getValue(PREFIX_SHORTCUT).get());","lastModifiedDate":"2021-10-18"},{"lineNumber":31,"author":{"gitId":"YoYoCiti"},"content":"        CommandWord commandWord \u003d ParserUtil.parseCommandWord(argMultiMap.getValue(PREFIX_COMMAND_WORD).get());","lastModifiedDate":"2021-10-18"},{"lineNumber":32,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":33,"author":{"gitId":"YoYoCiti"},"content":"        return new AddAliasCommand(new Alias(shortcut, commandWord));","lastModifiedDate":"2021-10-18"},{"lineNumber":34,"author":{"gitId":"YoYoCiti"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":35,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":36,"author":{"gitId":"YoYoCiti"},"content":"    /**","lastModifiedDate":"2021-10-17"},{"lineNumber":37,"author":{"gitId":"YoYoCiti"},"content":"     * Returns true if all the prefixes are non-empty.","lastModifiedDate":"2021-10-17"},{"lineNumber":38,"author":{"gitId":"YoYoCiti"},"content":"     *","lastModifiedDate":"2021-10-17"},{"lineNumber":39,"author":{"gitId":"YoYoCiti"},"content":"     * @param argMultiMap ArgumentMultimap containing the prefixes.","lastModifiedDate":"2021-10-17"},{"lineNumber":40,"author":{"gitId":"YoYoCiti"},"content":"     * @param prefixes Prefixes that need to present.","lastModifiedDate":"2021-10-17"},{"lineNumber":41,"author":{"gitId":"YoYoCiti"},"content":"     * @return boolean value of whether all prefixes are non-empty.","lastModifiedDate":"2021-10-17"},{"lineNumber":42,"author":{"gitId":"YoYoCiti"},"content":"     */","lastModifiedDate":"2021-10-17"},{"lineNumber":43,"author":{"gitId":"YoYoCiti"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argMultiMap, Prefix... prefixes) {","lastModifiedDate":"2021-10-17"},{"lineNumber":44,"author":{"gitId":"YoYoCiti"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argMultiMap.getValue(prefix).isPresent());","lastModifiedDate":"2021-10-17"},{"lineNumber":45,"author":{"gitId":"YoYoCiti"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":46,"author":{"gitId":"YoYoCiti"},"content":"}","lastModifiedDate":"2021-10-17"}],"authorContributionMap":{"YoYoCiti":46}},{"path":"src/main/java/seedu/address/logic/parser/AddFacilityCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Shruthi0310"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-10-05"},{"lineNumber":2,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":3,"author":{"gitId":"Shruthi0310"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-21"},{"lineNumber":4,"author":{"gitId":"Shruthi0310"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-06"},{"lineNumber":5,"author":{"gitId":"Shruthi0310"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_CAPACITY;","lastModifiedDate":"2021-10-06"},{"lineNumber":6,"author":{"gitId":"Shruthi0310"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_LOCATION;","lastModifiedDate":"2021-10-06"},{"lineNumber":7,"author":{"gitId":"Shruthi0310"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2021-10-06"},{"lineNumber":8,"author":{"gitId":"Shruthi0310"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TIME;","lastModifiedDate":"2021-10-06"},{"lineNumber":9,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":10,"author":{"gitId":"Shruthi0310"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2021-10-06"},{"lineNumber":11,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":12,"author":{"gitId":"Shruthi0310"},"content":"import seedu.address.logic.commands.AddFacilityCommand;","lastModifiedDate":"2021-10-05"},{"lineNumber":13,"author":{"gitId":"Shruthi0310"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-05"},{"lineNumber":14,"author":{"gitId":"Shruthi0310"},"content":"import seedu.address.model.facility.Capacity;","lastModifiedDate":"2021-10-05"},{"lineNumber":15,"author":{"gitId":"Shruthi0310"},"content":"import seedu.address.model.facility.Facility;","lastModifiedDate":"2021-10-05"},{"lineNumber":16,"author":{"gitId":"Shruthi0310"},"content":"import seedu.address.model.facility.FacilityName;","lastModifiedDate":"2021-10-05"},{"lineNumber":17,"author":{"gitId":"Shruthi0310"},"content":"import seedu.address.model.facility.Location;","lastModifiedDate":"2021-10-05"},{"lineNumber":18,"author":{"gitId":"Shruthi0310"},"content":"import seedu.address.model.facility.Time;","lastModifiedDate":"2021-10-05"},{"lineNumber":19,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":20,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":21,"author":{"gitId":"Shruthi0310"},"content":"/**","lastModifiedDate":"2021-10-05"},{"lineNumber":22,"author":{"gitId":"Shruthi0310"},"content":" * Parses input arguments and creates a new AddFacilityCommand object.","lastModifiedDate":"2021-10-05"},{"lineNumber":23,"author":{"gitId":"Shruthi0310"},"content":" */","lastModifiedDate":"2021-10-05"},{"lineNumber":24,"author":{"gitId":"Shruthi0310"},"content":"public class AddFacilityCommandParser implements Parser\u003cAddFacilityCommand\u003e {","lastModifiedDate":"2021-10-05"},{"lineNumber":25,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":26,"author":{"gitId":"Shruthi0310"},"content":"    /**","lastModifiedDate":"2021-10-05"},{"lineNumber":27,"author":{"gitId":"Shruthi0310"},"content":"     * Parses the given arguments in the context of AddFacilityCommand.","lastModifiedDate":"2021-10-05"},{"lineNumber":28,"author":{"gitId":"Shruthi0310"},"content":"     *","lastModifiedDate":"2021-10-05"},{"lineNumber":29,"author":{"gitId":"Shruthi0310"},"content":"     * @param args String arguments to be parsed.","lastModifiedDate":"2021-10-05"},{"lineNumber":30,"author":{"gitId":"Shruthi0310"},"content":"     * @return AddFacilityCommand object for execution.","lastModifiedDate":"2021-10-05"},{"lineNumber":31,"author":{"gitId":"Shruthi0310"},"content":"     * @throws ParseException If the user input does not follow the format.","lastModifiedDate":"2021-10-05"},{"lineNumber":32,"author":{"gitId":"Shruthi0310"},"content":"     */","lastModifiedDate":"2021-10-05"},{"lineNumber":33,"author":{"gitId":"Shruthi0310"},"content":"    public AddFacilityCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-10-05"},{"lineNumber":34,"author":{"gitId":"Shruthi0310"},"content":"        requireNonNull(args);","lastModifiedDate":"2021-10-21"},{"lineNumber":35,"author":{"gitId":"Shruthi0310"},"content":"        ArgumentMultimap argMultiMap \u003d","lastModifiedDate":"2021-10-05"},{"lineNumber":36,"author":{"gitId":"Shruthi0310"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_LOCATION, PREFIX_TIME, PREFIX_CAPACITY);","lastModifiedDate":"2021-10-05"},{"lineNumber":37,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":38,"author":{"gitId":"Shruthi0310"},"content":"        if (!arePrefixesPresent(argMultiMap, PREFIX_NAME, PREFIX_LOCATION, PREFIX_TIME, PREFIX_CAPACITY)","lastModifiedDate":"2021-10-05"},{"lineNumber":39,"author":{"gitId":"Shruthi0310"},"content":"                || !argMultiMap.getPreamble().isEmpty()) {","lastModifiedDate":"2021-10-05"},{"lineNumber":40,"author":{"gitId":"Shruthi0310"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2021-10-05"},{"lineNumber":41,"author":{"gitId":"Shruthi0310"},"content":"                    AddFacilityCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-05"},{"lineNumber":42,"author":{"gitId":"Shruthi0310"},"content":"        }","lastModifiedDate":"2021-10-05"},{"lineNumber":43,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":44,"author":{"gitId":"Shruthi0310"},"content":"        FacilityName name \u003d ParserUtil.parseFacilityName(argMultiMap.getValue(PREFIX_NAME).get());","lastModifiedDate":"2021-10-05"},{"lineNumber":45,"author":{"gitId":"Shruthi0310"},"content":"        Location location \u003d ParserUtil.parseLocation(argMultiMap.getValue(PREFIX_LOCATION).get());","lastModifiedDate":"2021-10-05"},{"lineNumber":46,"author":{"gitId":"Shruthi0310"},"content":"        Time time \u003d ParserUtil.parseTime(argMultiMap.getValue(PREFIX_TIME).get());","lastModifiedDate":"2021-10-05"},{"lineNumber":47,"author":{"gitId":"Shruthi0310"},"content":"        Capacity capacity \u003d ParserUtil.parseCapacity(argMultiMap.getValue(PREFIX_CAPACITY).get());","lastModifiedDate":"2021-10-05"},{"lineNumber":48,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":49,"author":{"gitId":"Shruthi0310"},"content":"        Facility facility \u003d new Facility(name, location, time, capacity);","lastModifiedDate":"2021-10-05"},{"lineNumber":50,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":51,"author":{"gitId":"Shruthi0310"},"content":"        return new AddFacilityCommand(facility);","lastModifiedDate":"2021-10-05"},{"lineNumber":52,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":53,"author":{"gitId":"Shruthi0310"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":54,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":55,"author":{"gitId":"Shruthi0310"},"content":"    /**","lastModifiedDate":"2021-10-05"},{"lineNumber":56,"author":{"gitId":"Shruthi0310"},"content":"     * Returns true if all the prefixes are non-empty.","lastModifiedDate":"2021-10-05"},{"lineNumber":57,"author":{"gitId":"Shruthi0310"},"content":"     *","lastModifiedDate":"2021-10-05"},{"lineNumber":58,"author":{"gitId":"Shruthi0310"},"content":"     * @param argMultiMap ArgumentMultimap containing the prefixes.","lastModifiedDate":"2021-10-05"},{"lineNumber":59,"author":{"gitId":"Shruthi0310"},"content":"     * @param prefixes Prefixes that need to present.","lastModifiedDate":"2021-10-05"},{"lineNumber":60,"author":{"gitId":"Shruthi0310"},"content":"     * @return boolean value of whether all prefixes are non-empty.","lastModifiedDate":"2021-10-05"},{"lineNumber":61,"author":{"gitId":"Shruthi0310"},"content":"     */","lastModifiedDate":"2021-10-05"},{"lineNumber":62,"author":{"gitId":"Shruthi0310"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argMultiMap, Prefix... prefixes) {","lastModifiedDate":"2021-10-05"},{"lineNumber":63,"author":{"gitId":"Shruthi0310"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argMultiMap.getValue(prefix).isPresent());","lastModifiedDate":"2021-10-05"},{"lineNumber":64,"author":{"gitId":"Shruthi0310"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":65,"author":{"gitId":"Shruthi0310"},"content":"}","lastModifiedDate":"2021-10-05"}],"authorContributionMap":{"Shruthi0310":65}},{"path":"src/main/java/seedu/address/logic/parser/AddMemberCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-02-05"},{"lineNumber":4,"author":{"gitId":"tsinyee"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_AVAILABILITY;","lastModifiedDate":"2021-10-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2021-10-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2021-10-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2021-10-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2021-10-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2017-03-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":12,"author":{"gitId":"tsinyee"},"content":"import seedu.address.logic.commands.AddMemberCommand;","lastModifiedDate":"2021-10-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":14,"author":{"gitId":"felix-ong"},"content":"import seedu.address.model.person.Availability;","lastModifiedDate":"2021-10-10"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-03-17"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-03-17"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-03-17"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2021-10-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-05"},{"lineNumber":21,"author":{"gitId":"tsinyee"},"content":" * Parses input arguments and creates a new AddMemberCommand object","lastModifiedDate":"2021-10-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-05"},{"lineNumber":23,"author":{"gitId":"tsinyee"},"content":"public class AddMemberCommandParser implements Parser\u003cAddMemberCommand\u003e {","lastModifiedDate":"2021-10-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":26,"author":{"gitId":"tsinyee"},"content":"     * Parses the given {@code String} of arguments in the context of the AddMemberCommand","lastModifiedDate":"2021-10-05"},{"lineNumber":27,"author":{"gitId":"tsinyee"},"content":"     * and returns an AddMemberCommand object for execution.","lastModifiedDate":"2021-10-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-05"},{"lineNumber":30,"author":{"gitId":"tsinyee"},"content":"    public AddMemberCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-10-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2017-03-20"},{"lineNumber":32,"author":{"gitId":"tsinyee"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_PHONE, PREFIX_AVAILABILITY, PREFIX_TAG);","lastModifiedDate":"2021-10-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":34,"author":{"gitId":"felix-ong"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_NAME, PREFIX_PHONE)","lastModifiedDate":"2021-10-15"},{"lineNumber":35,"author":{"gitId":"-"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2017-12-23"},{"lineNumber":36,"author":{"gitId":"tsinyee"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddMemberCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-17"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        Name name \u003d ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        Phone phone \u003d ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":41,"author":{"gitId":"felix-ong"},"content":"        Availability availability \u003d ParserUtil.parseAvailability(argMultimap.getValue(PREFIX_AVAILABILITY).orElse(\"\"));","lastModifiedDate":"2021-10-12"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e tagList \u003d ParserUtil.parseTags(argMultimap.getAllValues(PREFIX_TAG));","lastModifiedDate":"2021-10-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":44,"author":{"gitId":"tsinyee"},"content":"        Person person \u003d new Person(name, phone, availability, tagList);","lastModifiedDate":"2021-10-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":46,"author":{"gitId":"tsinyee"},"content":"        return new AddMemberCommand(person);","lastModifiedDate":"2021-10-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-17"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2017-03-17"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2017-03-17"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-17"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2017-03-17"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2017-03-17"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-17"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":57,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-05"}],"authorContributionMap":{"-":43,"tsinyee":11,"felix-ong":3}},{"path":"src/main/java/seedu/address/logic/parser/AddressBookParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"YoYoCiti"},"content":"import seedu.address.logic.commands.AddAliasCommand;","lastModifiedDate":"2021-10-17"},{"lineNumber":10,"author":{"gitId":"Shruthi0310"},"content":"import seedu.address.logic.commands.AddFacilityCommand;","lastModifiedDate":"2021-10-06"},{"lineNumber":11,"author":{"gitId":"tsinyee"},"content":"import seedu.address.logic.commands.AddMemberCommand;","lastModifiedDate":"2021-10-07"},{"lineNumber":12,"author":{"gitId":"felix-ong"},"content":"import seedu.address.logic.commands.AllocateMemberCommand;","lastModifiedDate":"2021-10-23"},{"lineNumber":13,"author":{"gitId":"Shruthi0310"},"content":"import seedu.address.logic.commands.ClearAttendanceCommand;","lastModifiedDate":"2021-10-21"},{"lineNumber":14,"author":{"gitId":"tsinyee"},"content":"import seedu.address.logic.commands.ClearFacilitiesCommand;","lastModifiedDate":"2021-10-06"},{"lineNumber":15,"author":{"gitId":"felix-ong"},"content":"import seedu.address.logic.commands.ClearMembersCommand;","lastModifiedDate":"2021-09-30"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2017-01-18"},{"lineNumber":17,"author":{"gitId":"felix-ong"},"content":"import seedu.address.logic.commands.DeallocateMemberCommand;","lastModifiedDate":"2021-10-26"},{"lineNumber":18,"author":{"gitId":"YoYoCiti"},"content":"import seedu.address.logic.commands.DeleteAliasCommand;","lastModifiedDate":"2021-10-17"},{"lineNumber":19,"author":{"gitId":"YoYoCiti"},"content":"import seedu.address.logic.commands.DeleteFacilityCommand;","lastModifiedDate":"2021-10-08"},{"lineNumber":20,"author":{"gitId":"tsinyee"},"content":"import seedu.address.logic.commands.DeleteMemberCommand;","lastModifiedDate":"2021-10-11"},{"lineNumber":21,"author":{"gitId":"YoYoCiti"},"content":"import seedu.address.logic.commands.EditFacilityCommand;","lastModifiedDate":"2021-10-12"},{"lineNumber":22,"author":{"gitId":"tsinyee"},"content":"import seedu.address.logic.commands.EditMemberCommand;","lastModifiedDate":"2021-10-10"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ExitCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":24,"author":{"gitId":"Moley456"},"content":"import seedu.address.logic.commands.ExportCommand;","lastModifiedDate":"2021-10-27"},{"lineNumber":25,"author":{"gitId":"YoYoCiti"},"content":"import seedu.address.logic.commands.FindFacilityCommand;","lastModifiedDate":"2021-09-29"},{"lineNumber":26,"author":{"gitId":"felix-ong"},"content":"import seedu.address.logic.commands.FindMemberCommand;","lastModifiedDate":"2021-09-30"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.HelpCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":28,"author":{"gitId":"Moley456"},"content":"import seedu.address.logic.commands.ImportCommand;","lastModifiedDate":"2021-10-21"},{"lineNumber":29,"author":{"gitId":"YoYoCiti"},"content":"import seedu.address.logic.commands.ListFacilityCommand;","lastModifiedDate":"2021-10-06"},{"lineNumber":30,"author":{"gitId":"tsinyee"},"content":"import seedu.address.logic.commands.ListMemberCommand;","lastModifiedDate":"2021-10-07"},{"lineNumber":31,"author":{"gitId":"Shruthi0310"},"content":"import seedu.address.logic.commands.MarkAttendanceCommand;","lastModifiedDate":"2021-10-21"},{"lineNumber":32,"author":{"gitId":"felix-ong"},"content":"import seedu.address.logic.commands.SetMemberAvailabilityCommand;","lastModifiedDate":"2021-10-10"},{"lineNumber":33,"author":{"gitId":"YoYoCiti"},"content":"import seedu.address.logic.commands.ShowAliasesCommand;","lastModifiedDate":"2021-10-17"},{"lineNumber":34,"author":{"gitId":"tsinyee"},"content":"import seedu.address.logic.commands.SortMemberCommand;","lastModifiedDate":"2021-10-23"},{"lineNumber":35,"author":{"gitId":"Shruthi0310"},"content":"import seedu.address.logic.commands.SplitCommand;","lastModifiedDate":"2021-10-12"},{"lineNumber":36,"author":{"gitId":"Shruthi0310"},"content":"import seedu.address.logic.commands.UnmarkAttendanceCommand;","lastModifiedDate":"2021-10-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":38,"author":{"gitId":"YoYoCiti"},"content":"import seedu.address.model.alias.AliasMap;","lastModifiedDate":"2021-10-18"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":" * Parses user input.","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"public class AddressBookParser {","lastModifiedDate":"2017-07-07"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * Used for initial separation of command word and args.","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    private static final Pattern BASIC_COMMAND_FORMAT \u003d Pattern.compile(\"(?\u003ccommandWord\u003e\\\\S+)(?\u003carguments\u003e.*)\");","lastModifiedDate":"2016-09-22"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     * Parses user input into command for execution.","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * @param userInput full user input string","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * @return the command based on the user input","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"YoYoCiti"},"content":"    public Command parseCommand(String userInput, AliasMap aliases) throws ParseException {","lastModifiedDate":"2021-10-18"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        final Matcher matcher \u003d BASIC_COMMAND_FORMAT.matcher(userInput.trim());","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-03-11"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":63,"author":{"gitId":"YoYoCiti"},"content":"        final String commandWord \u003d aliases.convertAliasIfPresent(matcher.group(\"commandWord\"));","lastModifiedDate":"2021-10-17"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2016-08-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        switch (commandWord) {","lastModifiedDate":"2016-08-24"},{"lineNumber":66,"author":{"gitId":"tsinyee"},"content":"        case AddMemberCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-06"},{"lineNumber":67,"author":{"gitId":"tsinyee"},"content":"            return new AddMemberCommandParser().parse(arguments);","lastModifiedDate":"2021-10-06"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":69,"author":{"gitId":"tsinyee"},"content":"        case EditMemberCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-10"},{"lineNumber":70,"author":{"gitId":"tsinyee"},"content":"            return new EditMemberCommandParser().parse(arguments);","lastModifiedDate":"2021-10-10"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":72,"author":{"gitId":"tsinyee"},"content":"        case DeleteMemberCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-11"},{"lineNumber":73,"author":{"gitId":"tsinyee"},"content":"            return new DeleteMemberCommandParser().parse(arguments);","lastModifiedDate":"2021-10-11"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":75,"author":{"gitId":"YoYoCiti"},"content":"        case DeleteFacilityCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-08"},{"lineNumber":76,"author":{"gitId":"YoYoCiti"},"content":"            return new DeleteFacilityCommandParser().parse(arguments);","lastModifiedDate":"2021-10-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":78,"author":{"gitId":"YoYoCiti"},"content":"        case EditFacilityCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-12"},{"lineNumber":79,"author":{"gitId":"YoYoCiti"},"content":"            return new EditFacilityCommandParser().parse(arguments);","lastModifiedDate":"2021-10-12"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":81,"author":{"gitId":"felix-ong"},"content":"        case ClearMembersCommand.COMMAND_WORD:","lastModifiedDate":"2021-09-30"},{"lineNumber":82,"author":{"gitId":"felix-ong"},"content":"            return new ClearMembersCommand();","lastModifiedDate":"2021-09-30"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":84,"author":{"gitId":"tsinyee"},"content":"        case ClearFacilitiesCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-06"},{"lineNumber":85,"author":{"gitId":"tsinyee"},"content":"            return new ClearFacilitiesCommand();","lastModifiedDate":"2021-10-06"},{"lineNumber":86,"author":{"gitId":"tsinyee"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":87,"author":{"gitId":"felix-ong"},"content":"        case FindMemberCommand.COMMAND_WORD:","lastModifiedDate":"2021-09-30"},{"lineNumber":88,"author":{"gitId":"felix-ong"},"content":"            return new FindMemberCommandParser().parse(arguments);","lastModifiedDate":"2021-09-30"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":90,"author":{"gitId":"tsinyee"},"content":"        case ListMemberCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-07"},{"lineNumber":91,"author":{"gitId":"tsinyee"},"content":"            return new ListMemberCommand();","lastModifiedDate":"2021-10-07"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":93,"author":{"gitId":"YoYoCiti"},"content":"        case ListFacilityCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-06"},{"lineNumber":94,"author":{"gitId":"YoYoCiti"},"content":"            return new ListFacilityCommand();","lastModifiedDate":"2021-10-06"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        case ExitCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-24"},{"lineNumber":97,"author":{"gitId":"-"},"content":"            return new ExitCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        case HelpCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-26"},{"lineNumber":100,"author":{"gitId":"-"},"content":"            return new HelpCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":102,"author":{"gitId":"YoYoCiti"},"content":"        case FindFacilityCommand.COMMAND_WORD:","lastModifiedDate":"2021-09-29"},{"lineNumber":103,"author":{"gitId":"YoYoCiti"},"content":"            return new FindFacilityCommandParser().parse(arguments);","lastModifiedDate":"2021-09-29"},{"lineNumber":104,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":105,"author":{"gitId":"Shruthi0310"},"content":"        case AddFacilityCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-05"},{"lineNumber":106,"author":{"gitId":"Shruthi0310"},"content":"            return new AddFacilityCommandParser().parse(arguments);","lastModifiedDate":"2021-10-05"},{"lineNumber":107,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":108,"author":{"gitId":"felix-ong"},"content":"        case SetMemberAvailabilityCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-10"},{"lineNumber":109,"author":{"gitId":"felix-ong"},"content":"            return new SetMemberAvailabilityCommandParser().parse(arguments);","lastModifiedDate":"2021-10-10"},{"lineNumber":110,"author":{"gitId":"felix-ong"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":111,"author":{"gitId":"Shruthi0310"},"content":"        case SplitCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-12"},{"lineNumber":112,"author":{"gitId":"Shruthi0310"},"content":"            return new SplitCommandParser().parse(arguments);","lastModifiedDate":"2021-10-12"},{"lineNumber":113,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":114,"author":{"gitId":"Shruthi0310"},"content":"        case MarkAttendanceCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-21"},{"lineNumber":115,"author":{"gitId":"Shruthi0310"},"content":"            return new MarkAttendanceCommandParser().parse(arguments);","lastModifiedDate":"2021-10-21"},{"lineNumber":116,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":117,"author":{"gitId":"Shruthi0310"},"content":"        case UnmarkAttendanceCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-21"},{"lineNumber":118,"author":{"gitId":"Shruthi0310"},"content":"            return new UnmarkAttendanceCommandParser().parse(arguments);","lastModifiedDate":"2021-10-21"},{"lineNumber":119,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":120,"author":{"gitId":"Shruthi0310"},"content":"        case ClearAttendanceCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-21"},{"lineNumber":121,"author":{"gitId":"Shruthi0310"},"content":"            return new ClearAttendanceCommand();","lastModifiedDate":"2021-10-21"},{"lineNumber":122,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":123,"author":{"gitId":"YoYoCiti"},"content":"        case AddAliasCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-17"},{"lineNumber":124,"author":{"gitId":"YoYoCiti"},"content":"            return new AddAliasCommandParser().parse(arguments);","lastModifiedDate":"2021-10-17"},{"lineNumber":125,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":126,"author":{"gitId":"YoYoCiti"},"content":"        case DeleteAliasCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-17"},{"lineNumber":127,"author":{"gitId":"YoYoCiti"},"content":"            return new DeleteAliasCommandParser().parse(arguments);","lastModifiedDate":"2021-10-17"},{"lineNumber":128,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":129,"author":{"gitId":"YoYoCiti"},"content":"        case ShowAliasesCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-17"},{"lineNumber":130,"author":{"gitId":"YoYoCiti"},"content":"            return new ShowAliasesCommand();","lastModifiedDate":"2021-10-17"},{"lineNumber":131,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":132,"author":{"gitId":"felix-ong"},"content":"        case AllocateMemberCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-23"},{"lineNumber":133,"author":{"gitId":"felix-ong"},"content":"            return new AllocateMemberCommandParser().parse(arguments);","lastModifiedDate":"2021-10-23"},{"lineNumber":134,"author":{"gitId":"felix-ong"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":135,"author":{"gitId":"felix-ong"},"content":"        case DeallocateMemberCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-26"},{"lineNumber":136,"author":{"gitId":"felix-ong"},"content":"            return new DeallocateMemberCommandParser().parse(arguments);","lastModifiedDate":"2021-10-26"},{"lineNumber":137,"author":{"gitId":"felix-ong"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":138,"author":{"gitId":"Moley456"},"content":"        case ImportCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-21"},{"lineNumber":139,"author":{"gitId":"Moley456"},"content":"            return new ImportCommandParser().parse(arguments);","lastModifiedDate":"2021-10-21"},{"lineNumber":140,"author":{"gitId":"Moley456"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":141,"author":{"gitId":"Moley456"},"content":"        case ExportCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-27"},{"lineNumber":142,"author":{"gitId":"Moley456"},"content":"            return new ExportCommand();","lastModifiedDate":"2021-10-27"},{"lineNumber":143,"author":{"gitId":"Moley456"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":144,"author":{"gitId":"tsinyee"},"content":"        case SortMemberCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-23"},{"lineNumber":145,"author":{"gitId":"tsinyee"},"content":"            return new SortMemberCommandParser().parse(arguments);","lastModifiedDate":"2021-10-24"},{"lineNumber":146,"author":{"gitId":"tsinyee"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        default:","lastModifiedDate":"2016-08-26"},{"lineNumber":148,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-03-11"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":151,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"YoYoCiti":28,"Shruthi0310":20,"Moley456":8,"-":57,"tsinyee":20,"felix-ong":18}},{"path":"src/main/java/seedu/address/logic/parser/AllocateMemberCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"felix-ong"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-10-23"},{"lineNumber":2,"author":{"gitId":"felix-ong"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":3,"author":{"gitId":"felix-ong"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-23"},{"lineNumber":4,"author":{"gitId":"felix-ong"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-23"},{"lineNumber":5,"author":{"gitId":"felix-ong"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":6,"author":{"gitId":"felix-ong"},"content":"import java.time.DayOfWeek;","lastModifiedDate":"2021-10-23"},{"lineNumber":7,"author":{"gitId":"felix-ong"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":8,"author":{"gitId":"felix-ong"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-10-23"},{"lineNumber":9,"author":{"gitId":"felix-ong"},"content":"import seedu.address.logic.commands.AllocateMemberCommand;","lastModifiedDate":"2021-10-23"},{"lineNumber":10,"author":{"gitId":"felix-ong"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-23"},{"lineNumber":11,"author":{"gitId":"felix-ong"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":12,"author":{"gitId":"felix-ong"},"content":"/**","lastModifiedDate":"2021-10-23"},{"lineNumber":13,"author":{"gitId":"felix-ong"},"content":" * Parses input arguments and creates a new {@code AllocateMemberCommand} object.","lastModifiedDate":"2021-10-23"},{"lineNumber":14,"author":{"gitId":"felix-ong"},"content":" */","lastModifiedDate":"2021-10-23"},{"lineNumber":15,"author":{"gitId":"felix-ong"},"content":"public class AllocateMemberCommandParser implements Parser\u003cAllocateMemberCommand\u003e {","lastModifiedDate":"2021-10-23"},{"lineNumber":16,"author":{"gitId":"felix-ong"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":17,"author":{"gitId":"felix-ong"},"content":"    /**","lastModifiedDate":"2021-10-23"},{"lineNumber":18,"author":{"gitId":"felix-ong"},"content":"     * Parses the given {@code String} of arguments in the context of the AllocateMemberCommand","lastModifiedDate":"2021-10-23"},{"lineNumber":19,"author":{"gitId":"felix-ong"},"content":"     * and returns an AllocateMemberCommand object for execution.","lastModifiedDate":"2021-10-23"},{"lineNumber":20,"author":{"gitId":"felix-ong"},"content":"     *","lastModifiedDate":"2021-10-23"},{"lineNumber":21,"author":{"gitId":"felix-ong"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2021-10-23"},{"lineNumber":22,"author":{"gitId":"felix-ong"},"content":"     */","lastModifiedDate":"2021-10-23"},{"lineNumber":23,"author":{"gitId":"felix-ong"},"content":"    public AllocateMemberCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-10-23"},{"lineNumber":24,"author":{"gitId":"felix-ong"},"content":"        requireNonNull(args);","lastModifiedDate":"2021-10-23"},{"lineNumber":25,"author":{"gitId":"felix-ong"},"content":"        String[] trimmedArgs \u003d args.trim().split(\" \");","lastModifiedDate":"2021-10-23"},{"lineNumber":26,"author":{"gitId":"felix-ong"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":27,"author":{"gitId":"felix-ong"},"content":"        Index memberIndex;","lastModifiedDate":"2021-10-23"},{"lineNumber":28,"author":{"gitId":"felix-ong"},"content":"        Index facilityIndex;","lastModifiedDate":"2021-10-23"},{"lineNumber":29,"author":{"gitId":"felix-ong"},"content":"        DayOfWeek day;","lastModifiedDate":"2021-10-23"},{"lineNumber":30,"author":{"gitId":"felix-ong"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":31,"author":{"gitId":"felix-ong"},"content":"        if (trimmedArgs.length !\u003d 3) {","lastModifiedDate":"2021-10-26"},{"lineNumber":32,"author":{"gitId":"felix-ong"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2021-10-23"},{"lineNumber":33,"author":{"gitId":"felix-ong"},"content":"                    AllocateMemberCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-26"},{"lineNumber":34,"author":{"gitId":"felix-ong"},"content":"        }","lastModifiedDate":"2021-10-23"},{"lineNumber":35,"author":{"gitId":"felix-ong"},"content":"        try {","lastModifiedDate":"2021-10-23"},{"lineNumber":36,"author":{"gitId":"felix-ong"},"content":"            memberIndex \u003d ParserUtil.parseIndex(trimmedArgs[0]);","lastModifiedDate":"2021-10-23"},{"lineNumber":37,"author":{"gitId":"felix-ong"},"content":"            facilityIndex \u003d ParserUtil.parseIndex(trimmedArgs[1]);","lastModifiedDate":"2021-10-23"},{"lineNumber":38,"author":{"gitId":"felix-ong"},"content":"            day \u003d ParserUtil.parseDay(trimmedArgs[2]);","lastModifiedDate":"2021-10-23"},{"lineNumber":39,"author":{"gitId":"felix-ong"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":40,"author":{"gitId":"felix-ong"},"content":"            return new AllocateMemberCommand(memberIndex, facilityIndex, day);","lastModifiedDate":"2021-10-23"},{"lineNumber":41,"author":{"gitId":"felix-ong"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2021-10-23"},{"lineNumber":42,"author":{"gitId":"felix-ong"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2021-10-23"},{"lineNumber":43,"author":{"gitId":"felix-ong"},"content":"                    AllocateMemberCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2021-10-23"},{"lineNumber":44,"author":{"gitId":"felix-ong"},"content":"        }","lastModifiedDate":"2021-10-23"},{"lineNumber":45,"author":{"gitId":"felix-ong"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":46,"author":{"gitId":"felix-ong"},"content":"}","lastModifiedDate":"2021-10-23"}],"authorContributionMap":{"felix-ong":46}},{"path":"src/main/java/seedu/address/logic/parser/CliSyntax.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Contains Command Line Interface (CLI) syntax definitions common to multiple commands","lastModifiedDate":"2017-02-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class CliSyntax {","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    /* Prefix definitions */","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_NAME \u003d new Prefix(\"n/\");","lastModifiedDate":"2017-06-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_PHONE \u003d new Prefix(\"p/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_EMAIL \u003d new Prefix(\"e/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_TAG \u003d new Prefix(\"t/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":13,"author":{"gitId":"Shruthi0310"},"content":"    public static final Prefix PREFIX_LOCATION \u003d new Prefix(\"l/\");","lastModifiedDate":"2021-10-05"},{"lineNumber":14,"author":{"gitId":"Shruthi0310"},"content":"    public static final Prefix PREFIX_TIME \u003d new Prefix(\"t/\");","lastModifiedDate":"2021-10-05"},{"lineNumber":15,"author":{"gitId":"Shruthi0310"},"content":"    public static final Prefix PREFIX_CAPACITY \u003d new Prefix(\"c/\");","lastModifiedDate":"2021-10-05"},{"lineNumber":16,"author":{"gitId":"felix-ong"},"content":"    public static final Prefix PREFIX_AVAILABILITY \u003d new Prefix(\"d/\");","lastModifiedDate":"2021-10-10"},{"lineNumber":17,"author":{"gitId":"tsinyee"},"content":"    public static final Prefix PREFIX_TODAY_ATTENDANCE \u003d new Prefix(\"tda/\");","lastModifiedDate":"2021-10-28"},{"lineNumber":18,"author":{"gitId":"tsinyee"},"content":"    public static final Prefix PREFIX_TOTAL_ATTENDANCE \u003d new Prefix(\"tta/\");","lastModifiedDate":"2021-10-28"},{"lineNumber":19,"author":{"gitId":"YoYoCiti"},"content":"    public static final Prefix PREFIX_SHORTCUT \u003d new Prefix(\"s/\");","lastModifiedDate":"2021-10-18"},{"lineNumber":20,"author":{"gitId":"YoYoCiti"},"content":"    public static final Prefix PREFIX_COMMAND_WORD \u003d new Prefix(\"cw/\");","lastModifiedDate":"2021-10-17"},{"lineNumber":21,"author":{"gitId":"tsinyee"},"content":"    public static final Prefix PREFIX_SORT_ORDER \u003d new Prefix(\"by/\");","lastModifiedDate":"2021-10-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"YoYoCiti":2,"Shruthi0310":3,"-":13,"felix-ong":1,"tsinyee":3}},{"path":"src/main/java/seedu/address/logic/parser/DeallocateMemberCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"felix-ong"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-10-26"},{"lineNumber":2,"author":{"gitId":"felix-ong"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":3,"author":{"gitId":"felix-ong"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-26"},{"lineNumber":4,"author":{"gitId":"felix-ong"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-26"},{"lineNumber":5,"author":{"gitId":"felix-ong"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":6,"author":{"gitId":"felix-ong"},"content":"import java.time.DayOfWeek;","lastModifiedDate":"2021-10-26"},{"lineNumber":7,"author":{"gitId":"felix-ong"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":8,"author":{"gitId":"felix-ong"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-10-26"},{"lineNumber":9,"author":{"gitId":"felix-ong"},"content":"import seedu.address.logic.commands.DeallocateMemberCommand;","lastModifiedDate":"2021-10-26"},{"lineNumber":10,"author":{"gitId":"felix-ong"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-26"},{"lineNumber":11,"author":{"gitId":"felix-ong"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":12,"author":{"gitId":"felix-ong"},"content":"/**","lastModifiedDate":"2021-10-26"},{"lineNumber":13,"author":{"gitId":"felix-ong"},"content":" * Parses input arguments and creates a new {@code DeallocateMemberCommand} object.","lastModifiedDate":"2021-10-26"},{"lineNumber":14,"author":{"gitId":"felix-ong"},"content":" */","lastModifiedDate":"2021-10-26"},{"lineNumber":15,"author":{"gitId":"felix-ong"},"content":"public class DeallocateMemberCommandParser implements Parser\u003cDeallocateMemberCommand\u003e {","lastModifiedDate":"2021-10-26"},{"lineNumber":16,"author":{"gitId":"felix-ong"},"content":"    /**","lastModifiedDate":"2021-10-26"},{"lineNumber":17,"author":{"gitId":"felix-ong"},"content":"     * Parses the given {@code String} of arguments in the context of the DeallocateMemberCommand","lastModifiedDate":"2021-10-26"},{"lineNumber":18,"author":{"gitId":"felix-ong"},"content":"     * and returns a DeallocateMemberCommand object for execution.","lastModifiedDate":"2021-10-26"},{"lineNumber":19,"author":{"gitId":"felix-ong"},"content":"     *","lastModifiedDate":"2021-10-26"},{"lineNumber":20,"author":{"gitId":"felix-ong"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2021-10-26"},{"lineNumber":21,"author":{"gitId":"felix-ong"},"content":"     */","lastModifiedDate":"2021-10-26"},{"lineNumber":22,"author":{"gitId":"felix-ong"},"content":"    public DeallocateMemberCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-10-26"},{"lineNumber":23,"author":{"gitId":"felix-ong"},"content":"        requireNonNull(args);","lastModifiedDate":"2021-10-26"},{"lineNumber":24,"author":{"gitId":"felix-ong"},"content":"        String[] trimmedArgs \u003d args.trim().split(\" \");","lastModifiedDate":"2021-10-26"},{"lineNumber":25,"author":{"gitId":"felix-ong"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":26,"author":{"gitId":"felix-ong"},"content":"        Index memberIndex;","lastModifiedDate":"2021-10-26"},{"lineNumber":27,"author":{"gitId":"felix-ong"},"content":"        Index facilityIndex;","lastModifiedDate":"2021-10-26"},{"lineNumber":28,"author":{"gitId":"felix-ong"},"content":"        DayOfWeek day;","lastModifiedDate":"2021-10-26"},{"lineNumber":29,"author":{"gitId":"felix-ong"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":30,"author":{"gitId":"felix-ong"},"content":"        if (trimmedArgs.length !\u003d 3) {","lastModifiedDate":"2021-10-26"},{"lineNumber":31,"author":{"gitId":"felix-ong"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2021-10-26"},{"lineNumber":32,"author":{"gitId":"felix-ong"},"content":"                    DeallocateMemberCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-26"},{"lineNumber":33,"author":{"gitId":"felix-ong"},"content":"        }","lastModifiedDate":"2021-10-26"},{"lineNumber":34,"author":{"gitId":"felix-ong"},"content":"        try {","lastModifiedDate":"2021-10-26"},{"lineNumber":35,"author":{"gitId":"felix-ong"},"content":"            memberIndex \u003d ParserUtil.parseIndex(trimmedArgs[0]);","lastModifiedDate":"2021-10-26"},{"lineNumber":36,"author":{"gitId":"felix-ong"},"content":"            facilityIndex \u003d ParserUtil.parseIndex(trimmedArgs[1]);","lastModifiedDate":"2021-10-26"},{"lineNumber":37,"author":{"gitId":"felix-ong"},"content":"            day \u003d ParserUtil.parseDay(trimmedArgs[2]);","lastModifiedDate":"2021-10-26"},{"lineNumber":38,"author":{"gitId":"felix-ong"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":39,"author":{"gitId":"felix-ong"},"content":"            return new DeallocateMemberCommand(memberIndex, facilityIndex, day);","lastModifiedDate":"2021-10-26"},{"lineNumber":40,"author":{"gitId":"felix-ong"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2021-10-26"},{"lineNumber":41,"author":{"gitId":"felix-ong"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2021-10-26"},{"lineNumber":42,"author":{"gitId":"felix-ong"},"content":"                    DeallocateMemberCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2021-10-26"},{"lineNumber":43,"author":{"gitId":"felix-ong"},"content":"        }","lastModifiedDate":"2021-10-26"},{"lineNumber":44,"author":{"gitId":"felix-ong"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":45,"author":{"gitId":"felix-ong"},"content":"}","lastModifiedDate":"2021-10-26"}],"authorContributionMap":{"felix-ong":45}},{"path":"src/main/java/seedu/address/logic/parser/DeleteAliasCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"YoYoCiti"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-10-17"},{"lineNumber":2,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":3,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":4,"author":{"gitId":"YoYoCiti"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-19"},{"lineNumber":5,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":6,"author":{"gitId":"YoYoCiti"},"content":"import seedu.address.logic.commands.DeleteAliasCommand;","lastModifiedDate":"2021-10-17"},{"lineNumber":7,"author":{"gitId":"YoYoCiti"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-17"},{"lineNumber":8,"author":{"gitId":"YoYoCiti"},"content":"import seedu.address.model.alias.Shortcut;","lastModifiedDate":"2021-10-18"},{"lineNumber":9,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":10,"author":{"gitId":"YoYoCiti"},"content":"/**","lastModifiedDate":"2021-10-17"},{"lineNumber":11,"author":{"gitId":"YoYoCiti"},"content":" * Parses input arguments and creates a new DeleteAliasCommand object.","lastModifiedDate":"2021-10-17"},{"lineNumber":12,"author":{"gitId":"YoYoCiti"},"content":" */","lastModifiedDate":"2021-10-17"},{"lineNumber":13,"author":{"gitId":"YoYoCiti"},"content":"public class DeleteAliasCommandParser implements Parser\u003cDeleteAliasCommand\u003e {","lastModifiedDate":"2021-10-17"},{"lineNumber":14,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":15,"author":{"gitId":"YoYoCiti"},"content":"    /**","lastModifiedDate":"2021-10-19"},{"lineNumber":16,"author":{"gitId":"YoYoCiti"},"content":"     * Parses the given {@code String} of arguments in the context of the DeleteAliasCommand","lastModifiedDate":"2021-10-19"},{"lineNumber":17,"author":{"gitId":"YoYoCiti"},"content":"     * and returns a DeleteAliasCommand object for execution.","lastModifiedDate":"2021-10-19"},{"lineNumber":18,"author":{"gitId":"YoYoCiti"},"content":"     *","lastModifiedDate":"2021-10-19"},{"lineNumber":19,"author":{"gitId":"YoYoCiti"},"content":"     * @param args the user input.","lastModifiedDate":"2021-10-19"},{"lineNumber":20,"author":{"gitId":"YoYoCiti"},"content":"     * @return the DeleteAliasCommand object.","lastModifiedDate":"2021-10-19"},{"lineNumber":21,"author":{"gitId":"YoYoCiti"},"content":"     * @throws ParseException if the user input does not conform the expected format.","lastModifiedDate":"2021-10-19"},{"lineNumber":22,"author":{"gitId":"YoYoCiti"},"content":"     */","lastModifiedDate":"2021-10-19"},{"lineNumber":23,"author":{"gitId":"YoYoCiti"},"content":"    @Override","lastModifiedDate":"2021-10-17"},{"lineNumber":24,"author":{"gitId":"YoYoCiti"},"content":"    public DeleteAliasCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-10-17"},{"lineNumber":25,"author":{"gitId":"YoYoCiti"},"content":"        String trimmedArgs \u003d args.trim();","lastModifiedDate":"2021-10-19"},{"lineNumber":26,"author":{"gitId":"YoYoCiti"},"content":"        if (trimmedArgs.isEmpty()) {","lastModifiedDate":"2021-10-19"},{"lineNumber":27,"author":{"gitId":"YoYoCiti"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteAliasCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-19"},{"lineNumber":28,"author":{"gitId":"YoYoCiti"},"content":"        }","lastModifiedDate":"2021-10-19"},{"lineNumber":29,"author":{"gitId":"YoYoCiti"},"content":"        Shortcut shortcut \u003d ParserUtil.parseShortcut(args);","lastModifiedDate":"2021-10-18"},{"lineNumber":30,"author":{"gitId":"YoYoCiti"},"content":"        return new DeleteAliasCommand(shortcut);","lastModifiedDate":"2021-10-18"},{"lineNumber":31,"author":{"gitId":"YoYoCiti"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":32,"author":{"gitId":"YoYoCiti"},"content":"}","lastModifiedDate":"2021-10-17"}],"authorContributionMap":{"YoYoCiti":32}},{"path":"src/main/java/seedu/address/logic/parser/DeleteFacilityCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"YoYoCiti"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-10-08"},{"lineNumber":2,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":3,"author":{"gitId":"YoYoCiti"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-08"},{"lineNumber":4,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":5,"author":{"gitId":"YoYoCiti"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-10-08"},{"lineNumber":6,"author":{"gitId":"YoYoCiti"},"content":"import seedu.address.logic.commands.DeleteFacilityCommand;","lastModifiedDate":"2021-10-08"},{"lineNumber":7,"author":{"gitId":"YoYoCiti"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-08"},{"lineNumber":8,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":9,"author":{"gitId":"YoYoCiti"},"content":"/**","lastModifiedDate":"2021-10-08"},{"lineNumber":10,"author":{"gitId":"YoYoCiti"},"content":" * Parses input arguments and creates a new DeleteFacilityCommand object.","lastModifiedDate":"2021-10-08"},{"lineNumber":11,"author":{"gitId":"YoYoCiti"},"content":" */","lastModifiedDate":"2021-10-08"},{"lineNumber":12,"author":{"gitId":"YoYoCiti"},"content":"public class DeleteFacilityCommandParser implements Parser\u003cDeleteFacilityCommand\u003e {","lastModifiedDate":"2021-10-08"},{"lineNumber":13,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":14,"author":{"gitId":"YoYoCiti"},"content":"    /**","lastModifiedDate":"2021-10-08"},{"lineNumber":15,"author":{"gitId":"YoYoCiti"},"content":"     * Parses the given {@code String} of arguments in the context of the DeleteFacilityCommand","lastModifiedDate":"2021-10-08"},{"lineNumber":16,"author":{"gitId":"YoYoCiti"},"content":"     * and returns a DeleteFacilityCommand object for execution.","lastModifiedDate":"2021-10-08"},{"lineNumber":17,"author":{"gitId":"YoYoCiti"},"content":"     *","lastModifiedDate":"2021-10-08"},{"lineNumber":18,"author":{"gitId":"YoYoCiti"},"content":"     * @throws ParseException if the user input does not conform the expected format.","lastModifiedDate":"2021-10-08"},{"lineNumber":19,"author":{"gitId":"YoYoCiti"},"content":"     */","lastModifiedDate":"2021-10-08"},{"lineNumber":20,"author":{"gitId":"YoYoCiti"},"content":"    public DeleteFacilityCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-10-08"},{"lineNumber":21,"author":{"gitId":"YoYoCiti"},"content":"        try {","lastModifiedDate":"2021-10-08"},{"lineNumber":22,"author":{"gitId":"YoYoCiti"},"content":"            Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2021-10-08"},{"lineNumber":23,"author":{"gitId":"YoYoCiti"},"content":"            return new DeleteFacilityCommand(index);","lastModifiedDate":"2021-10-08"},{"lineNumber":24,"author":{"gitId":"YoYoCiti"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2021-10-08"},{"lineNumber":25,"author":{"gitId":"YoYoCiti"},"content":"            throw new ParseException(","lastModifiedDate":"2021-10-08"},{"lineNumber":26,"author":{"gitId":"YoYoCiti"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteFacilityCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2021-10-08"},{"lineNumber":27,"author":{"gitId":"YoYoCiti"},"content":"        }","lastModifiedDate":"2021-10-08"},{"lineNumber":28,"author":{"gitId":"YoYoCiti"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":29,"author":{"gitId":"YoYoCiti"},"content":"}","lastModifiedDate":"2021-10-08"}],"authorContributionMap":{"YoYoCiti":29}},{"path":"src/main/java/seedu/address/logic/parser/DeleteMemberCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-01-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-01-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":6,"author":{"gitId":"tsinyee"},"content":"import seedu.address.logic.commands.DeleteMemberCommand;","lastModifiedDate":"2021-10-10"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new DeleteCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":12,"author":{"gitId":"tsinyee"},"content":"public class DeleteMemberCommandParser implements Parser\u003cDeleteMemberCommand\u003e {","lastModifiedDate":"2021-10-10"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the DeleteCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * and returns a DeleteCommand object for execution.","lastModifiedDate":"2019-05-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":19,"author":{"gitId":"tsinyee"},"content":"    public DeleteMemberCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-10-10"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-05-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2017-05-25"},{"lineNumber":22,"author":{"gitId":"tsinyee"},"content":"            return new DeleteMemberCommand(index);","lastModifiedDate":"2021-10-10"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2018-07-10"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            throw new ParseException(","lastModifiedDate":"2017-03-11"},{"lineNumber":25,"author":{"gitId":"tsinyee"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteMemberCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2021-10-10"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"-":24,"tsinyee":5}},{"path":"src/main/java/seedu/address/logic/parser/EditFacilityCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"YoYoCiti"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-10-12"},{"lineNumber":2,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":3,"author":{"gitId":"YoYoCiti"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-12"},{"lineNumber":4,"author":{"gitId":"YoYoCiti"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-12"},{"lineNumber":5,"author":{"gitId":"YoYoCiti"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_CAPACITY;","lastModifiedDate":"2021-10-12"},{"lineNumber":6,"author":{"gitId":"YoYoCiti"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_LOCATION;","lastModifiedDate":"2021-10-12"},{"lineNumber":7,"author":{"gitId":"YoYoCiti"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2021-10-12"},{"lineNumber":8,"author":{"gitId":"YoYoCiti"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TIME;","lastModifiedDate":"2021-10-12"},{"lineNumber":9,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":10,"author":{"gitId":"YoYoCiti"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-10-12"},{"lineNumber":11,"author":{"gitId":"YoYoCiti"},"content":"import seedu.address.logic.commands.EditFacilityCommand;","lastModifiedDate":"2021-10-12"},{"lineNumber":12,"author":{"gitId":"YoYoCiti"},"content":"import seedu.address.logic.commands.EditFacilityCommand.EditFacilityDescriptor;","lastModifiedDate":"2021-10-12"},{"lineNumber":13,"author":{"gitId":"YoYoCiti"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-12"},{"lineNumber":14,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":15,"author":{"gitId":"YoYoCiti"},"content":"public class EditFacilityCommandParser implements Parser\u003cEditFacilityCommand\u003e {","lastModifiedDate":"2021-10-12"},{"lineNumber":16,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":17,"author":{"gitId":"YoYoCiti"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":18,"author":{"gitId":"YoYoCiti"},"content":"     * Parses the given {@code String} of arguments in the context of the EditFacilityCommand","lastModifiedDate":"2021-10-12"},{"lineNumber":19,"author":{"gitId":"YoYoCiti"},"content":"     * and returns an EditFacilityCommand object for execution.","lastModifiedDate":"2021-10-12"},{"lineNumber":20,"author":{"gitId":"YoYoCiti"},"content":"     *","lastModifiedDate":"2021-10-12"},{"lineNumber":21,"author":{"gitId":"YoYoCiti"},"content":"     * @throws ParseException if the user input does not conform to the expected format.","lastModifiedDate":"2021-10-12"},{"lineNumber":22,"author":{"gitId":"YoYoCiti"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":23,"author":{"gitId":"YoYoCiti"},"content":"    public EditFacilityCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-10-12"},{"lineNumber":24,"author":{"gitId":"YoYoCiti"},"content":"        requireNonNull(args);","lastModifiedDate":"2021-10-12"},{"lineNumber":25,"author":{"gitId":"YoYoCiti"},"content":"        ArgumentMultimap argMultiMap \u003d","lastModifiedDate":"2021-10-12"},{"lineNumber":26,"author":{"gitId":"YoYoCiti"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_LOCATION, PREFIX_TIME, PREFIX_CAPACITY);","lastModifiedDate":"2021-10-12"},{"lineNumber":27,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":28,"author":{"gitId":"YoYoCiti"},"content":"        Index index;","lastModifiedDate":"2021-10-12"},{"lineNumber":29,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":30,"author":{"gitId":"YoYoCiti"},"content":"        try {","lastModifiedDate":"2021-10-12"},{"lineNumber":31,"author":{"gitId":"YoYoCiti"},"content":"            index \u003d ParserUtil.parseIndex(argMultiMap.getPreamble());","lastModifiedDate":"2021-10-12"},{"lineNumber":32,"author":{"gitId":"YoYoCiti"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2021-10-12"},{"lineNumber":33,"author":{"gitId":"YoYoCiti"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2021-10-12"},{"lineNumber":34,"author":{"gitId":"YoYoCiti"},"content":"                    EditFacilityCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2021-10-12"},{"lineNumber":35,"author":{"gitId":"YoYoCiti"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":36,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":37,"author":{"gitId":"YoYoCiti"},"content":"        EditFacilityCommand.EditFacilityDescriptor editFacilityDescriptor \u003d new EditFacilityDescriptor();","lastModifiedDate":"2021-10-12"},{"lineNumber":38,"author":{"gitId":"YoYoCiti"},"content":"        if (argMultiMap.getValue(PREFIX_NAME).isPresent()) {","lastModifiedDate":"2021-10-12"},{"lineNumber":39,"author":{"gitId":"YoYoCiti"},"content":"            editFacilityDescriptor.setFacilityName(","lastModifiedDate":"2021-10-12"},{"lineNumber":40,"author":{"gitId":"YoYoCiti"},"content":"                    ParserUtil.parseFacilityName(argMultiMap.getValue(PREFIX_NAME).get()));","lastModifiedDate":"2021-10-12"},{"lineNumber":41,"author":{"gitId":"YoYoCiti"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":42,"author":{"gitId":"YoYoCiti"},"content":"        if (argMultiMap.getValue(PREFIX_LOCATION).isPresent()) {","lastModifiedDate":"2021-10-12"},{"lineNumber":43,"author":{"gitId":"YoYoCiti"},"content":"            editFacilityDescriptor.setLocation(","lastModifiedDate":"2021-10-12"},{"lineNumber":44,"author":{"gitId":"YoYoCiti"},"content":"                    ParserUtil.parseLocation(argMultiMap.getValue(PREFIX_LOCATION).get()));","lastModifiedDate":"2021-10-12"},{"lineNumber":45,"author":{"gitId":"YoYoCiti"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":46,"author":{"gitId":"YoYoCiti"},"content":"        if (argMultiMap.getValue(PREFIX_TIME).isPresent()) {","lastModifiedDate":"2021-10-12"},{"lineNumber":47,"author":{"gitId":"YoYoCiti"},"content":"            editFacilityDescriptor.setTime(","lastModifiedDate":"2021-10-12"},{"lineNumber":48,"author":{"gitId":"YoYoCiti"},"content":"                    ParserUtil.parseTime(argMultiMap.getValue(PREFIX_TIME).get()));","lastModifiedDate":"2021-10-12"},{"lineNumber":49,"author":{"gitId":"YoYoCiti"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":50,"author":{"gitId":"YoYoCiti"},"content":"        if (argMultiMap.getValue(PREFIX_CAPACITY).isPresent()) {","lastModifiedDate":"2021-10-12"},{"lineNumber":51,"author":{"gitId":"YoYoCiti"},"content":"            editFacilityDescriptor.setCapacity(","lastModifiedDate":"2021-10-12"},{"lineNumber":52,"author":{"gitId":"YoYoCiti"},"content":"                    ParserUtil.parseCapacity(argMultiMap.getValue(PREFIX_CAPACITY).get()));","lastModifiedDate":"2021-10-12"},{"lineNumber":53,"author":{"gitId":"YoYoCiti"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":54,"author":{"gitId":"YoYoCiti"},"content":"        if (!editFacilityDescriptor.isAnyFieldEdited()) {","lastModifiedDate":"2021-10-12"},{"lineNumber":55,"author":{"gitId":"YoYoCiti"},"content":"            throw new ParseException(EditFacilityCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2021-10-12"},{"lineNumber":56,"author":{"gitId":"YoYoCiti"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":57,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":58,"author":{"gitId":"YoYoCiti"},"content":"        return new EditFacilityCommand(index, editFacilityDescriptor);","lastModifiedDate":"2021-10-12"},{"lineNumber":59,"author":{"gitId":"YoYoCiti"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":60,"author":{"gitId":"YoYoCiti"},"content":"}","lastModifiedDate":"2021-10-12"}],"authorContributionMap":{"YoYoCiti":60}},{"path":"src/main/java/seedu/address/logic/parser/EditMemberCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-01-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-01-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2021-10-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2021-10-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2021-10-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2021-10-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2021-10-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2021-10-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2021-10-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":15,"author":{"gitId":"tsinyee"},"content":"import seedu.address.logic.commands.EditMemberCommand;","lastModifiedDate":"2021-10-10"},{"lineNumber":16,"author":{"gitId":"tsinyee"},"content":"import seedu.address.logic.commands.EditMemberCommand.EditPersonDescriptor;","lastModifiedDate":"2021-10-10"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2021-10-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":21,"author":{"gitId":"tsinyee"},"content":" * Parses input arguments and creates a new EditMemberCommand object","lastModifiedDate":"2021-10-10"},{"lineNumber":22,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":23,"author":{"gitId":"tsinyee"},"content":"public class EditMemberCommandParser implements Parser\u003cEditMemberCommand\u003e {","lastModifiedDate":"2021-10-10"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":26,"author":{"gitId":"tsinyee"},"content":"     * Parses the given {@code String} of arguments in the context of the EditMemberCommand","lastModifiedDate":"2021-10-10"},{"lineNumber":27,"author":{"gitId":"tsinyee"},"content":"     * and returns an EditMemberCommand object for execution.","lastModifiedDate":"2021-10-10"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":30,"author":{"gitId":"tsinyee"},"content":"    public EditMemberCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-10-10"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        requireNonNull(args);","lastModifiedDate":"2017-05-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2017-03-20"},{"lineNumber":33,"author":{"gitId":"tsinyee"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_PHONE, PREFIX_TAG);","lastModifiedDate":"2021-10-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        Index index;","lastModifiedDate":"2017-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-05-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2017-06-06"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2018-07-10"},{"lineNumber":40,"author":{"gitId":"tsinyee"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2021-10-10"},{"lineNumber":41,"author":{"gitId":"tsinyee"},"content":"                    EditMemberCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2021-10-10"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        EditPersonDescriptor editPersonDescriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2017-01-26"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_NAME).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setName(ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_PHONE).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setPhone(ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        parseTagsForEdit(argMultimap.getAllValues(PREFIX_TAG)).ifPresent(editPersonDescriptor::setTags);","lastModifiedDate":"2021-10-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        if (!editPersonDescriptor.isAnyFieldEdited()) {","lastModifiedDate":"2017-01-26"},{"lineNumber":53,"author":{"gitId":"tsinyee"},"content":"            throw new ParseException(EditMemberCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2021-10-10"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":56,"author":{"gitId":"tsinyee"},"content":"        return new EditMemberCommand(index, editPersonDescriptor);","lastModifiedDate":"2021-10-10"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-10-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e} if {@code tags} is non-empty.","lastModifiedDate":"2021-10-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * If {@code tags} contain only one element which is an empty string, it will be parsed into a","lastModifiedDate":"2021-10-21"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * {@code Set\u003cTag\u003e} containing zero tags.","lastModifiedDate":"2021-10-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-10-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    private Optional\u003cSet\u003cTag\u003e\u003e parseTagsForEdit(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2021-10-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assert tags !\u003d null;","lastModifiedDate":"2021-10-21"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        if (tags.isEmpty()) {","lastModifiedDate":"2021-10-21"},{"lineNumber":68,"author":{"gitId":"-"},"content":"            return Optional.empty();","lastModifiedDate":"2021-10-21"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        Collection\u003cString\u003e tagSet \u003d tags.size() \u003d\u003d 1 \u0026\u0026 tags.contains(\"\") ? Collections.emptySet() : tags;","lastModifiedDate":"2021-10-21"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        return Optional.of(ParserUtil.parseTags(tagSet));","lastModifiedDate":"2021-10-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"-":61,"tsinyee":12}},{"path":"src/main/java/seedu/address/logic/parser/FindFacilityCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"YoYoCiti"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-09-29"},{"lineNumber":2,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":3,"author":{"gitId":"YoYoCiti"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-09-29"},{"lineNumber":4,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":5,"author":{"gitId":"YoYoCiti"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-09-29"},{"lineNumber":6,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":7,"author":{"gitId":"YoYoCiti"},"content":"import seedu.address.logic.commands.FindFacilityCommand;","lastModifiedDate":"2021-09-29"},{"lineNumber":8,"author":{"gitId":"YoYoCiti"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-09-29"},{"lineNumber":9,"author":{"gitId":"YoYoCiti"},"content":"import seedu.address.model.facility.LocationContainsKeywordsPredicate;","lastModifiedDate":"2021-09-29"},{"lineNumber":10,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":11,"author":{"gitId":"YoYoCiti"},"content":"/**","lastModifiedDate":"2021-09-29"},{"lineNumber":12,"author":{"gitId":"YoYoCiti"},"content":" * Parses input arguments and creates a new FindFacilityCommand object.","lastModifiedDate":"2021-09-29"},{"lineNumber":13,"author":{"gitId":"YoYoCiti"},"content":" */","lastModifiedDate":"2021-09-29"},{"lineNumber":14,"author":{"gitId":"YoYoCiti"},"content":"public class FindFacilityCommandParser implements Parser\u003cFindFacilityCommand\u003e {","lastModifiedDate":"2021-09-29"},{"lineNumber":15,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":16,"author":{"gitId":"YoYoCiti"},"content":"    /**","lastModifiedDate":"2021-09-29"},{"lineNumber":17,"author":{"gitId":"YoYoCiti"},"content":"     * Parses the given {@code String} of arguments in the context of the FindFacilityCommand","lastModifiedDate":"2021-09-29"},{"lineNumber":18,"author":{"gitId":"YoYoCiti"},"content":"     * and returns a FindFacilityCommand object for execution.","lastModifiedDate":"2021-09-29"},{"lineNumber":19,"author":{"gitId":"YoYoCiti"},"content":"     *","lastModifiedDate":"2021-09-29"},{"lineNumber":20,"author":{"gitId":"YoYoCiti"},"content":"     * @param args the user input.","lastModifiedDate":"2021-09-29"},{"lineNumber":21,"author":{"gitId":"YoYoCiti"},"content":"     * @return the FindFacilityCommand object.","lastModifiedDate":"2021-09-29"},{"lineNumber":22,"author":{"gitId":"YoYoCiti"},"content":"     * @throws ParseException if the user input does not conform the expected format.","lastModifiedDate":"2021-09-29"},{"lineNumber":23,"author":{"gitId":"YoYoCiti"},"content":"     */","lastModifiedDate":"2021-09-29"},{"lineNumber":24,"author":{"gitId":"YoYoCiti"},"content":"    @Override","lastModifiedDate":"2021-09-29"},{"lineNumber":25,"author":{"gitId":"YoYoCiti"},"content":"    public FindFacilityCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-09-29"},{"lineNumber":26,"author":{"gitId":"YoYoCiti"},"content":"        String trimmedArgs \u003d args.trim();","lastModifiedDate":"2021-09-29"},{"lineNumber":27,"author":{"gitId":"YoYoCiti"},"content":"        if (trimmedArgs.isEmpty()) {","lastModifiedDate":"2021-09-29"},{"lineNumber":28,"author":{"gitId":"YoYoCiti"},"content":"            throw new ParseException(","lastModifiedDate":"2021-09-29"},{"lineNumber":29,"author":{"gitId":"YoYoCiti"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindFacilityCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-09-29"},{"lineNumber":30,"author":{"gitId":"YoYoCiti"},"content":"        }","lastModifiedDate":"2021-09-29"},{"lineNumber":31,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":32,"author":{"gitId":"YoYoCiti"},"content":"        String[] locationKeywords \u003d trimmedArgs.split(\"\\\\s+\");","lastModifiedDate":"2021-09-29"},{"lineNumber":33,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":34,"author":{"gitId":"YoYoCiti"},"content":"        return new FindFacilityCommand(new LocationContainsKeywordsPredicate(Arrays.asList(locationKeywords)));","lastModifiedDate":"2021-09-29"},{"lineNumber":35,"author":{"gitId":"YoYoCiti"},"content":"    }","lastModifiedDate":"2021-09-29"},{"lineNumber":36,"author":{"gitId":"YoYoCiti"},"content":"}","lastModifiedDate":"2021-09-29"}],"authorContributionMap":{"YoYoCiti":36}},{"path":"src/main/java/seedu/address/logic/parser/FindMemberCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-01-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-01-26"},{"lineNumber":4,"author":{"gitId":"tsinyee"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_AVAILABILITY;","lastModifiedDate":"2021-10-28"},{"lineNumber":5,"author":{"gitId":"tsinyee"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2021-10-28"},{"lineNumber":6,"author":{"gitId":"tsinyee"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2021-10-28"},{"lineNumber":7,"author":{"gitId":"tsinyee"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2021-10-28"},{"lineNumber":8,"author":{"gitId":"tsinyee"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TODAY_ATTENDANCE;","lastModifiedDate":"2021-10-28"},{"lineNumber":9,"author":{"gitId":"tsinyee"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TOTAL_ATTENDANCE;","lastModifiedDate":"2021-10-28"},{"lineNumber":10,"author":{"gitId":"tsinyee"},"content":"import static seedu.address.model.person.PersonMatchesKeywordsPredicate.Builder;","lastModifiedDate":"2021-10-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":12,"author":{"gitId":"tsinyee"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-28"},{"lineNumber":13,"author":{"gitId":"tsinyee"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-10-28"},{"lineNumber":14,"author":{"gitId":"tsinyee"},"content":"import java.util.Collection;","lastModifiedDate":"2021-10-28"},{"lineNumber":15,"author":{"gitId":"tsinyee"},"content":"import java.util.Collections;","lastModifiedDate":"2021-10-28"},{"lineNumber":16,"author":{"gitId":"tsinyee"},"content":"import java.util.List;","lastModifiedDate":"2021-10-28"},{"lineNumber":17,"author":{"gitId":"tsinyee"},"content":"import java.util.Optional;","lastModifiedDate":"2021-10-28"},{"lineNumber":18,"author":{"gitId":"tsinyee"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2021-10-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":20,"author":{"gitId":"felix-ong"},"content":"import seedu.address.logic.commands.FindMemberCommand;","lastModifiedDate":"2021-09-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":22,"author":{"gitId":"tsinyee"},"content":"import seedu.address.model.person.Availability;","lastModifiedDate":"2021-10-28"},{"lineNumber":23,"author":{"gitId":"tsinyee"},"content":"import seedu.address.model.person.AvailabilityContainsKeywordsPredicate;","lastModifiedDate":"2021-10-28"},{"lineNumber":24,"author":{"gitId":"tsinyee"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2021-10-28"},{"lineNumber":25,"author":{"gitId":"tsinyee"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2021-10-28"},{"lineNumber":26,"author":{"gitId":"tsinyee"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2021-10-28"},{"lineNumber":27,"author":{"gitId":"tsinyee"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2021-10-28"},{"lineNumber":28,"author":{"gitId":"tsinyee"},"content":"import seedu.address.model.person.PhoneContainsKeywordsPredicate;","lastModifiedDate":"2021-10-28"},{"lineNumber":29,"author":{"gitId":"tsinyee"},"content":"import seedu.address.model.person.TodayAttendance;","lastModifiedDate":"2021-10-28"},{"lineNumber":30,"author":{"gitId":"tsinyee"},"content":"import seedu.address.model.person.TodayAttendanceContainsKeywordsPredicate;","lastModifiedDate":"2021-10-28"},{"lineNumber":31,"author":{"gitId":"tsinyee"},"content":"import seedu.address.model.person.TotalAttendance;","lastModifiedDate":"2021-10-28"},{"lineNumber":32,"author":{"gitId":"tsinyee"},"content":"import seedu.address.model.person.TotalAttendanceContainsKeywordsPredicate;","lastModifiedDate":"2021-10-28"},{"lineNumber":33,"author":{"gitId":"tsinyee"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2021-10-26"},{"lineNumber":34,"author":{"gitId":"tsinyee"},"content":"import seedu.address.model.tag.TagsContainKeywordsPredicate;","lastModifiedDate":"2021-10-28"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":36,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":37,"author":{"gitId":"felix-ong"},"content":" * Parses input arguments and creates a new FindMemberCommand object","lastModifiedDate":"2021-09-30"},{"lineNumber":38,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":39,"author":{"gitId":"felix-ong"},"content":"public class FindMemberCommandParser implements Parser\u003cFindMemberCommand\u003e {","lastModifiedDate":"2021-09-30"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":42,"author":{"gitId":"felix-ong"},"content":"     * Parses the given {@code String} of arguments in the context of the FindMemberCommand","lastModifiedDate":"2021-09-30"},{"lineNumber":43,"author":{"gitId":"felix-ong"},"content":"     * and returns a FindMemberCommand object for execution.","lastModifiedDate":"2021-09-30"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":46,"author":{"gitId":"felix-ong"},"content":"    public FindMemberCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-09-30"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        String trimmedArgs \u003d args.trim();","lastModifiedDate":"2017-02-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        if (trimmedArgs.isEmpty()) {","lastModifiedDate":"2017-02-12"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            throw new ParseException(","lastModifiedDate":"2017-03-11"},{"lineNumber":50,"author":{"gitId":"felix-ong"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindMemberCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-09-30"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":52,"author":{"gitId":"tsinyee"},"content":"        return new FindMemberCommand(generatePredicate(args));","lastModifiedDate":"2021-10-26"},{"lineNumber":53,"author":{"gitId":"tsinyee"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":55,"author":{"gitId":"tsinyee"},"content":"    /**","lastModifiedDate":"2021-10-28"},{"lineNumber":56,"author":{"gitId":"tsinyee"},"content":"     * Generates the final predicate to be used for FindMemberCommand","lastModifiedDate":"2021-10-28"},{"lineNumber":57,"author":{"gitId":"tsinyee"},"content":"     * @throws ParseException if the user input does not conform the expected format.","lastModifiedDate":"2021-10-28"},{"lineNumber":58,"author":{"gitId":"tsinyee"},"content":"     */","lastModifiedDate":"2021-10-28"},{"lineNumber":59,"author":{"gitId":"tsinyee"},"content":"    private Predicate\u003cPerson\u003e generatePredicate(String args) throws ParseException {","lastModifiedDate":"2021-10-26"},{"lineNumber":60,"author":{"gitId":"tsinyee"},"content":"        Builder builder \u003d new Builder();","lastModifiedDate":"2021-10-26"},{"lineNumber":61,"author":{"gitId":"tsinyee"},"content":"        Predicate\u003cPerson\u003e predicate \u003d x -\u003e true;","lastModifiedDate":"2021-10-26"},{"lineNumber":62,"author":{"gitId":"tsinyee"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_PHONE,","lastModifiedDate":"2021-10-26"},{"lineNumber":63,"author":{"gitId":"tsinyee"},"content":"                PREFIX_AVAILABILITY, PREFIX_TAG, PREFIX_TODAY_ATTENDANCE, PREFIX_TOTAL_ATTENDANCE);","lastModifiedDate":"2021-10-28"},{"lineNumber":64,"author":{"gitId":"tsinyee"},"content":"        if (!argMultimap.getPreamble().trim().isEmpty()) {","lastModifiedDate":"2021-10-26"},{"lineNumber":65,"author":{"gitId":"tsinyee"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindMemberCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-26"},{"lineNumber":66,"author":{"gitId":"tsinyee"},"content":"        }","lastModifiedDate":"2021-10-26"},{"lineNumber":67,"author":{"gitId":"tsinyee"},"content":"        if (argMultimap.getValue(PREFIX_NAME).isPresent()) {","lastModifiedDate":"2021-10-26"},{"lineNumber":68,"author":{"gitId":"tsinyee"},"content":"            predicate \u003d generateNamePredicate(ParserUtil.parseName(argMultimap","lastModifiedDate":"2021-10-28"},{"lineNumber":69,"author":{"gitId":"tsinyee"},"content":"                    .getValue(PREFIX_NAME).get()), builder, predicate);","lastModifiedDate":"2021-10-28"},{"lineNumber":70,"author":{"gitId":"tsinyee"},"content":"        }","lastModifiedDate":"2021-10-26"},{"lineNumber":71,"author":{"gitId":"tsinyee"},"content":"        if (argMultimap.getValue(PREFIX_PHONE).isPresent()) {","lastModifiedDate":"2021-10-26"},{"lineNumber":72,"author":{"gitId":"tsinyee"},"content":"            predicate \u003d generatePhonePredicate(ParserUtil.parsePhone(argMultimap","lastModifiedDate":"2021-10-28"},{"lineNumber":73,"author":{"gitId":"tsinyee"},"content":"                    .getValue(PREFIX_PHONE).get()), builder, predicate);","lastModifiedDate":"2021-10-28"},{"lineNumber":74,"author":{"gitId":"tsinyee"},"content":"        }","lastModifiedDate":"2021-10-26"},{"lineNumber":75,"author":{"gitId":"tsinyee"},"content":"        if (argMultimap.getValue(PREFIX_AVAILABILITY).isPresent()) {","lastModifiedDate":"2021-10-26"},{"lineNumber":76,"author":{"gitId":"tsinyee"},"content":"            predicate \u003d generateAvailabilityPredicate(ParserUtil.parseAvailability(argMultimap","lastModifiedDate":"2021-10-28"},{"lineNumber":77,"author":{"gitId":"tsinyee"},"content":"                    .getValue(PREFIX_AVAILABILITY).get()), builder, predicate);","lastModifiedDate":"2021-10-28"},{"lineNumber":78,"author":{"gitId":"tsinyee"},"content":"        }","lastModifiedDate":"2021-10-26"},{"lineNumber":79,"author":{"gitId":"tsinyee"},"content":"        if (argMultimap.getValue(PREFIX_TAG).isPresent()) {","lastModifiedDate":"2021-10-26"},{"lineNumber":80,"author":{"gitId":"tsinyee"},"content":"            predicate \u003d generateTagPredicate(parseTags(argMultimap.getAllValues(PREFIX_TAG)).get(), builder, predicate);","lastModifiedDate":"2021-10-28"},{"lineNumber":81,"author":{"gitId":"tsinyee"},"content":"        }","lastModifiedDate":"2021-10-28"},{"lineNumber":82,"author":{"gitId":"tsinyee"},"content":"        if (argMultimap.getValue(PREFIX_TODAY_ATTENDANCE).isPresent()) {","lastModifiedDate":"2021-10-28"},{"lineNumber":83,"author":{"gitId":"tsinyee"},"content":"            predicate \u003d generateTodayAttendancePredicate(ParserUtil.parseTodayAttendance(argMultimap","lastModifiedDate":"2021-10-28"},{"lineNumber":84,"author":{"gitId":"tsinyee"},"content":"            .getValue(PREFIX_TODAY_ATTENDANCE).get()), builder, predicate);","lastModifiedDate":"2021-10-28"},{"lineNumber":85,"author":{"gitId":"tsinyee"},"content":"        }","lastModifiedDate":"2021-10-28"},{"lineNumber":86,"author":{"gitId":"tsinyee"},"content":"        if (argMultimap.getValue(PREFIX_TOTAL_ATTENDANCE).isPresent()) {","lastModifiedDate":"2021-10-28"},{"lineNumber":87,"author":{"gitId":"tsinyee"},"content":"            predicate \u003d generateTotalAttendancePredicate(ParserUtil.parseTotalAttendance(argMultimap","lastModifiedDate":"2021-10-28"},{"lineNumber":88,"author":{"gitId":"tsinyee"},"content":"            .getValue(PREFIX_TOTAL_ATTENDANCE).get()), builder, predicate);","lastModifiedDate":"2021-10-28"},{"lineNumber":89,"author":{"gitId":"tsinyee"},"content":"        }","lastModifiedDate":"2021-10-26"},{"lineNumber":90,"author":{"gitId":"tsinyee"},"content":"        return builder.setPredicate(predicate).build();","lastModifiedDate":"2021-10-26"},{"lineNumber":91,"author":{"gitId":"tsinyee"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":92,"author":{"gitId":"tsinyee"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":93,"author":{"gitId":"tsinyee"},"content":"    private Predicate\u003cPerson\u003e generateNamePredicate(Name name, Builder builder, Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2021-10-26"},{"lineNumber":94,"author":{"gitId":"tsinyee"},"content":"        String nameWithNoSpaces \u003d name.toString().toLowerCase().replace(\"\\\\s+\", \"\");","lastModifiedDate":"2021-10-31"},{"lineNumber":95,"author":{"gitId":"tsinyee"},"content":"        List\u003cString\u003e nameList \u003d new ArrayList\u003c\u003e(Arrays.asList(nameWithNoSpaces));","lastModifiedDate":"2021-10-31"},{"lineNumber":96,"author":{"gitId":"tsinyee"},"content":"        predicate \u003d predicate.and(new NameContainsKeywordsPredicate(nameList));","lastModifiedDate":"2021-10-26"},{"lineNumber":97,"author":{"gitId":"tsinyee"},"content":"        builder.setName(name);","lastModifiedDate":"2021-10-26"},{"lineNumber":98,"author":{"gitId":"tsinyee"},"content":"        return predicate;","lastModifiedDate":"2021-10-26"},{"lineNumber":99,"author":{"gitId":"tsinyee"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":101,"author":{"gitId":"tsinyee"},"content":"    private Predicate\u003cPerson\u003e generatePhonePredicate(Phone phone, Builder builder, Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2021-10-26"},{"lineNumber":102,"author":{"gitId":"tsinyee"},"content":"        List\u003cPhone\u003e phoneList \u003d new ArrayList\u003c\u003e(Arrays.asList(phone));","lastModifiedDate":"2021-10-26"},{"lineNumber":103,"author":{"gitId":"tsinyee"},"content":"        predicate \u003d predicate.and(new PhoneContainsKeywordsPredicate(phoneList));","lastModifiedDate":"2021-10-26"},{"lineNumber":104,"author":{"gitId":"tsinyee"},"content":"        builder.setPhone(phone);","lastModifiedDate":"2021-10-26"},{"lineNumber":105,"author":{"gitId":"tsinyee"},"content":"        return predicate;","lastModifiedDate":"2021-10-26"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":108,"author":{"gitId":"tsinyee"},"content":"    private Predicate\u003cPerson\u003e generateTagPredicate(List\u003cTag\u003e tags, Builder builder, Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2021-10-26"},{"lineNumber":109,"author":{"gitId":"tsinyee"},"content":"        predicate \u003d predicate.and(new TagsContainKeywordsPredicate(tags));","lastModifiedDate":"2021-10-28"},{"lineNumber":110,"author":{"gitId":"tsinyee"},"content":"        builder.setTags(tags);","lastModifiedDate":"2021-10-26"},{"lineNumber":111,"author":{"gitId":"tsinyee"},"content":"        return predicate;","lastModifiedDate":"2021-10-26"},{"lineNumber":112,"author":{"gitId":"tsinyee"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":113,"author":{"gitId":"tsinyee"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":114,"author":{"gitId":"tsinyee"},"content":"    private Predicate\u003cPerson\u003e generateAvailabilityPredicate(Availability availability,","lastModifiedDate":"2021-10-26"},{"lineNumber":115,"author":{"gitId":"tsinyee"},"content":"                                                            Builder builder, Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2021-10-26"},{"lineNumber":116,"author":{"gitId":"tsinyee"},"content":"        List\u003cAvailability\u003e availabilityList \u003d new ArrayList\u003c\u003e(Arrays.asList(availability));","lastModifiedDate":"2021-10-26"},{"lineNumber":117,"author":{"gitId":"tsinyee"},"content":"        predicate \u003d predicate.and(new AvailabilityContainsKeywordsPredicate(availabilityList));","lastModifiedDate":"2021-10-26"},{"lineNumber":118,"author":{"gitId":"tsinyee"},"content":"        builder.setAvailability(availability);","lastModifiedDate":"2021-10-26"},{"lineNumber":119,"author":{"gitId":"tsinyee"},"content":"        return predicate;","lastModifiedDate":"2021-10-26"},{"lineNumber":120,"author":{"gitId":"tsinyee"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":121,"author":{"gitId":"tsinyee"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":122,"author":{"gitId":"tsinyee"},"content":"    private Predicate\u003cPerson\u003e generateTodayAttendancePredicate(TodayAttendance todayAttendance,","lastModifiedDate":"2021-10-28"},{"lineNumber":123,"author":{"gitId":"tsinyee"},"content":"                                                               Builder builder, Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2021-10-28"},{"lineNumber":124,"author":{"gitId":"tsinyee"},"content":"        List\u003cTodayAttendance\u003e todayAttendanceList \u003d new ArrayList\u003c\u003e(Arrays.asList(todayAttendance));","lastModifiedDate":"2021-10-28"},{"lineNumber":125,"author":{"gitId":"tsinyee"},"content":"        predicate \u003d predicate.and(new TodayAttendanceContainsKeywordsPredicate(todayAttendanceList));","lastModifiedDate":"2021-10-28"},{"lineNumber":126,"author":{"gitId":"tsinyee"},"content":"        builder.setTodayAttendance(todayAttendance);","lastModifiedDate":"2021-10-28"},{"lineNumber":127,"author":{"gitId":"tsinyee"},"content":"        return predicate;","lastModifiedDate":"2021-10-28"},{"lineNumber":128,"author":{"gitId":"tsinyee"},"content":"    }","lastModifiedDate":"2021-10-28"},{"lineNumber":129,"author":{"gitId":"tsinyee"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":130,"author":{"gitId":"tsinyee"},"content":"    private Predicate\u003cPerson\u003e generateTotalAttendancePredicate(TotalAttendance totalAttendance,","lastModifiedDate":"2021-10-28"},{"lineNumber":131,"author":{"gitId":"tsinyee"},"content":"                                                               Builder builder, Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2021-10-28"},{"lineNumber":132,"author":{"gitId":"tsinyee"},"content":"        List\u003cTotalAttendance\u003e totalAttendanceList \u003d new ArrayList\u003c\u003e(Arrays.asList(totalAttendance));","lastModifiedDate":"2021-10-28"},{"lineNumber":133,"author":{"gitId":"tsinyee"},"content":"        predicate \u003d predicate.and(new TotalAttendanceContainsKeywordsPredicate(totalAttendanceList));","lastModifiedDate":"2021-10-28"},{"lineNumber":134,"author":{"gitId":"tsinyee"},"content":"        builder.setTotalAttendance(totalAttendance);","lastModifiedDate":"2021-10-28"},{"lineNumber":135,"author":{"gitId":"tsinyee"},"content":"        return predicate;","lastModifiedDate":"2021-10-28"},{"lineNumber":136,"author":{"gitId":"tsinyee"},"content":"    }","lastModifiedDate":"2021-10-28"},{"lineNumber":137,"author":{"gitId":"tsinyee"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":138,"author":{"gitId":"tsinyee"},"content":"    /**","lastModifiedDate":"2021-10-26"},{"lineNumber":139,"author":{"gitId":"tsinyee"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Optional\u003cList\u003cTag\u003e\u003e} if {@code tags} is non-empty.","lastModifiedDate":"2021-10-28"},{"lineNumber":140,"author":{"gitId":"tsinyee"},"content":"     * If {@code tags} contain only one element which is an empty string, it will be parsed into a","lastModifiedDate":"2021-10-26"},{"lineNumber":141,"author":{"gitId":"tsinyee"},"content":"     * {@code Optional\u003cList\u003cTag\u003e\u003e} containing zero tags.","lastModifiedDate":"2021-10-28"},{"lineNumber":142,"author":{"gitId":"tsinyee"},"content":"     */","lastModifiedDate":"2021-10-26"},{"lineNumber":143,"author":{"gitId":"tsinyee"},"content":"    private Optional\u003cList\u003cTag\u003e\u003e parseTags(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2021-10-26"},{"lineNumber":144,"author":{"gitId":"tsinyee"},"content":"        assert tags !\u003d null;","lastModifiedDate":"2021-10-26"},{"lineNumber":145,"author":{"gitId":"tsinyee"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":146,"author":{"gitId":"tsinyee"},"content":"        if (tags.isEmpty()) {","lastModifiedDate":"2021-10-26"},{"lineNumber":147,"author":{"gitId":"tsinyee"},"content":"            return Optional.empty();","lastModifiedDate":"2021-10-26"},{"lineNumber":148,"author":{"gitId":"tsinyee"},"content":"        }","lastModifiedDate":"2021-10-26"},{"lineNumber":149,"author":{"gitId":"tsinyee"},"content":"        Collection\u003cString\u003e tagSet \u003d tags.size() \u003d\u003d 1 \u0026\u0026 tags.contains(\"\\\\s+\") ? Collections.emptySet() : tags;","lastModifiedDate":"2021-10-26"},{"lineNumber":150,"author":{"gitId":"tsinyee"},"content":"        return Optional.of(List.copyOf(ParserUtil.parseTags(tagSet)));","lastModifiedDate":"2021-10-26"},{"lineNumber":151,"author":{"gitId":"tsinyee"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":152,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"-":22,"tsinyee":123,"felix-ong":7}},{"path":"src/main/java/seedu/address/logic/parser/ImportCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Moley456"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-10-21"},{"lineNumber":2,"author":{"gitId":"Moley456"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":3,"author":{"gitId":"Moley456"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-21"},{"lineNumber":4,"author":{"gitId":"Moley456"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":5,"author":{"gitId":"Moley456"},"content":"import seedu.address.logic.commands.ImportCommand;","lastModifiedDate":"2021-10-21"},{"lineNumber":6,"author":{"gitId":"Moley456"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-21"},{"lineNumber":7,"author":{"gitId":"Moley456"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":8,"author":{"gitId":"Moley456"},"content":"/**","lastModifiedDate":"2021-10-23"},{"lineNumber":9,"author":{"gitId":"Moley456"},"content":" * Parses input arguments and creates a new ImportCommand object","lastModifiedDate":"2021-10-23"},{"lineNumber":10,"author":{"gitId":"Moley456"},"content":" */","lastModifiedDate":"2021-10-23"},{"lineNumber":11,"author":{"gitId":"Moley456"},"content":"public class ImportCommandParser implements Parser\u003cImportCommand\u003e {","lastModifiedDate":"2021-10-21"},{"lineNumber":12,"author":{"gitId":"Moley456"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":13,"author":{"gitId":"Moley456"},"content":"    /**","lastModifiedDate":"2021-10-21"},{"lineNumber":14,"author":{"gitId":"Moley456"},"content":"     * Parses the given {@code String} of arguments in the context of the ImportCommand","lastModifiedDate":"2021-10-21"},{"lineNumber":15,"author":{"gitId":"Moley456"},"content":"     * and returns a ImportCommand object for execution.","lastModifiedDate":"2021-10-21"},{"lineNumber":16,"author":{"gitId":"Moley456"},"content":"     *","lastModifiedDate":"2021-10-21"},{"lineNumber":17,"author":{"gitId":"Moley456"},"content":"     * @param args the user input.","lastModifiedDate":"2021-10-21"},{"lineNumber":18,"author":{"gitId":"Moley456"},"content":"     * @return the ImportCommand object.","lastModifiedDate":"2021-10-21"},{"lineNumber":19,"author":{"gitId":"Moley456"},"content":"     * @throws ParseException if the user input does not conform the expected format.","lastModifiedDate":"2021-10-26"},{"lineNumber":20,"author":{"gitId":"Moley456"},"content":"     */","lastModifiedDate":"2021-10-21"},{"lineNumber":21,"author":{"gitId":"Moley456"},"content":"    @Override","lastModifiedDate":"2021-10-21"},{"lineNumber":22,"author":{"gitId":"Moley456"},"content":"    public ImportCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-10-21"},{"lineNumber":23,"author":{"gitId":"Moley456"},"content":"        String trimmedArgs \u003d args.trim();","lastModifiedDate":"2021-10-21"},{"lineNumber":24,"author":{"gitId":"Moley456"},"content":"        if (trimmedArgs.isEmpty()) {","lastModifiedDate":"2021-10-21"},{"lineNumber":25,"author":{"gitId":"Moley456"},"content":"            throw new ParseException(","lastModifiedDate":"2021-10-21"},{"lineNumber":26,"author":{"gitId":"Moley456"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, ImportCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-21"},{"lineNumber":27,"author":{"gitId":"Moley456"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":28,"author":{"gitId":"Moley456"},"content":"        return new ImportCommand(trimmedArgs);","lastModifiedDate":"2021-10-26"},{"lineNumber":29,"author":{"gitId":"Moley456"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":30,"author":{"gitId":"Moley456"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":31,"author":{"gitId":"Moley456"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":32,"author":{"gitId":"Moley456"},"content":"}","lastModifiedDate":"2021-10-21"}],"authorContributionMap":{"Moley456":32}},{"path":"src/main/java/seedu/address/logic/parser/MarkAttendanceCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Shruthi0310"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-10-21"},{"lineNumber":2,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":3,"author":{"gitId":"Shruthi0310"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-21"},{"lineNumber":4,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":5,"author":{"gitId":"Shruthi0310"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-21"},{"lineNumber":6,"author":{"gitId":"Shruthi0310"},"content":"import java.util.List;","lastModifiedDate":"2021-10-21"},{"lineNumber":7,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":8,"author":{"gitId":"Shruthi0310"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-10-21"},{"lineNumber":9,"author":{"gitId":"Shruthi0310"},"content":"import seedu.address.logic.commands.MarkAttendanceCommand;","lastModifiedDate":"2021-10-21"},{"lineNumber":10,"author":{"gitId":"Shruthi0310"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-21"},{"lineNumber":11,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":12,"author":{"gitId":"Shruthi0310"},"content":"/**","lastModifiedDate":"2021-10-21"},{"lineNumber":13,"author":{"gitId":"Shruthi0310"},"content":" * Parses input arguments and creates a new MarkAttendanceCommand object.","lastModifiedDate":"2021-10-21"},{"lineNumber":14,"author":{"gitId":"Shruthi0310"},"content":" */","lastModifiedDate":"2021-10-21"},{"lineNumber":15,"author":{"gitId":"Shruthi0310"},"content":"public class MarkAttendanceCommandParser implements Parser\u003cMarkAttendanceCommand\u003e {","lastModifiedDate":"2021-10-21"},{"lineNumber":16,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":17,"author":{"gitId":"Shruthi0310"},"content":"    @Override","lastModifiedDate":"2021-10-21"},{"lineNumber":18,"author":{"gitId":"Shruthi0310"},"content":"    public MarkAttendanceCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-10-21"},{"lineNumber":19,"author":{"gitId":"Shruthi0310"},"content":"        String trimmedArgs \u003d args.trim();","lastModifiedDate":"2021-10-21"},{"lineNumber":20,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":21,"author":{"gitId":"Shruthi0310"},"content":"        if (trimmedArgs.isEmpty()) {","lastModifiedDate":"2021-10-21"},{"lineNumber":22,"author":{"gitId":"Shruthi0310"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2021-10-21"},{"lineNumber":23,"author":{"gitId":"Shruthi0310"},"content":"                    MarkAttendanceCommand.MESSGE_USAGE));","lastModifiedDate":"2021-10-21"},{"lineNumber":24,"author":{"gitId":"Shruthi0310"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":25,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":26,"author":{"gitId":"Shruthi0310"},"content":"        String[] numbers \u003d trimmedArgs.split(\"\\\\s+\");","lastModifiedDate":"2021-10-21"},{"lineNumber":27,"author":{"gitId":"Shruthi0310"},"content":"        List\u003cIndex\u003e indices \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-21"},{"lineNumber":28,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":29,"author":{"gitId":"Shruthi0310"},"content":"        for (String number : numbers) {","lastModifiedDate":"2021-10-21"},{"lineNumber":30,"author":{"gitId":"Shruthi0310"},"content":"            Index index \u003d ParserUtil.parseIndex(number);","lastModifiedDate":"2021-10-21"},{"lineNumber":31,"author":{"gitId":"Shruthi0310"},"content":"            indices.add(index);","lastModifiedDate":"2021-10-21"},{"lineNumber":32,"author":{"gitId":"Shruthi0310"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":33,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":34,"author":{"gitId":"Shruthi0310"},"content":"        return new MarkAttendanceCommand(indices);","lastModifiedDate":"2021-10-21"},{"lineNumber":35,"author":{"gitId":"Shruthi0310"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":36,"author":{"gitId":"Shruthi0310"},"content":"}","lastModifiedDate":"2021-10-21"}],"authorContributionMap":{"Shruthi0310":36}},{"path":"src/main/java/seedu/address/logic/parser/ParserUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"felix-ong"},"content":"import java.time.DayOfWeek;","lastModifiedDate":"2021-10-15"},{"lineNumber":6,"author":{"gitId":"felix-ong"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-15"},{"lineNumber":7,"author":{"gitId":"felix-ong"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-10-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2021-10-12"},{"lineNumber":9,"author":{"gitId":"felix-ong"},"content":"import java.util.Collections;","lastModifiedDate":"2021-10-15"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2021-10-12"},{"lineNumber":11,"author":{"gitId":"felix-ong"},"content":"import java.util.List;","lastModifiedDate":"2021-10-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2021-10-12"},{"lineNumber":13,"author":{"gitId":"felix-ong"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2021-10-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2017-02-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-07-10"},{"lineNumber":18,"author":{"gitId":"YoYoCiti"},"content":"import seedu.address.model.alias.CommandWord;","lastModifiedDate":"2021-10-18"},{"lineNumber":19,"author":{"gitId":"YoYoCiti"},"content":"import seedu.address.model.alias.Shortcut;","lastModifiedDate":"2021-10-18"},{"lineNumber":20,"author":{"gitId":"Shruthi0310"},"content":"import seedu.address.model.facility.Capacity;","lastModifiedDate":"2021-10-05"},{"lineNumber":21,"author":{"gitId":"Shruthi0310"},"content":"import seedu.address.model.facility.FacilityName;","lastModifiedDate":"2021-10-05"},{"lineNumber":22,"author":{"gitId":"Shruthi0310"},"content":"import seedu.address.model.facility.Location;","lastModifiedDate":"2021-10-05"},{"lineNumber":23,"author":{"gitId":"Shruthi0310"},"content":"import seedu.address.model.facility.Time;","lastModifiedDate":"2021-10-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2021-10-28"},{"lineNumber":25,"author":{"gitId":"tsinyee"},"content":"import seedu.address.model.person.Availability;","lastModifiedDate":"2021-10-28"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2021-10-28"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2021-10-28"},{"lineNumber":28,"author":{"gitId":"tsinyee"},"content":"import seedu.address.model.person.TodayAttendance;","lastModifiedDate":"2021-10-28"},{"lineNumber":29,"author":{"gitId":"tsinyee"},"content":"import seedu.address.model.person.TotalAttendance;","lastModifiedDate":"2021-10-28"},{"lineNumber":30,"author":{"gitId":"tsinyee"},"content":"import seedu.address.model.sort.SortOrder;","lastModifiedDate":"2021-10-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-02-11"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":33,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":34,"author":{"gitId":"-"},"content":" * Contains utility methods used for parsing strings in the various *Parser classes.","lastModifiedDate":"2017-07-18"},{"lineNumber":35,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":36,"author":{"gitId":"-"},"content":"public class ParserUtil {","lastModifiedDate":"2017-02-11"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":38,"author":{"gitId":"tsinyee"},"content":"    public static final String MESSAGE_INVALID_INDEX \u003d \"Index is not a non-zero unsigned integer,\"","lastModifiedDate":"2021-10-28"},{"lineNumber":39,"author":{"gitId":"tsinyee"},"content":"            + \"and it should not be blank.\";","lastModifiedDate":"2021-10-28"},{"lineNumber":40,"author":{"gitId":"tsinyee"},"content":"    private static final String MESSAGE_INVALID_TODAY_ATTENDANCE \u003d \"Today Attendance should be \u0027true\u0027 or false\u0027,\"","lastModifiedDate":"2021-10-28"},{"lineNumber":41,"author":{"gitId":"tsinyee"},"content":"            + \"and it should not be blank.\";","lastModifiedDate":"2021-10-28"},{"lineNumber":42,"author":{"gitId":"tsinyee"},"content":"    private static final String MESSAGE_INVALID_TOTAL_ATTENDANCE \u003d \"Total Attendance should be a \"","lastModifiedDate":"2021-10-28"},{"lineNumber":43,"author":{"gitId":"tsinyee"},"content":"            + \"non-negative unsigned integer, and it should not be blank.\";","lastModifiedDate":"2021-10-28"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * Parses {@code oneBasedIndex} into an {@code Index} and returns it. Leading and trailing whitespaces will be","lastModifiedDate":"2017-05-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * trimmed.","lastModifiedDate":"2017-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * @throws ParseException if the specified index is invalid (not non-zero unsigned integer).","lastModifiedDate":"2018-07-10"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public static Index parseIndex(String oneBasedIndex) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        String trimmedIndex \u003d oneBasedIndex.trim();","lastModifiedDate":"2017-05-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        if (!StringUtil.isNonZeroUnsignedInteger(trimmedIndex)) {","lastModifiedDate":"2017-06-02"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_INVALID_INDEX);","lastModifiedDate":"2018-07-10"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        return Index.fromOneBased(Integer.parseInt(trimmedIndex));","lastModifiedDate":"2017-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":58,"author":{"gitId":"tsinyee"},"content":"    /**","lastModifiedDate":"2021-10-28"},{"lineNumber":59,"author":{"gitId":"tsinyee"},"content":"     * Parses a {@code String todayAttendance} into a {@code TodayAttendance}.","lastModifiedDate":"2021-10-28"},{"lineNumber":60,"author":{"gitId":"tsinyee"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2021-10-28"},{"lineNumber":61,"author":{"gitId":"tsinyee"},"content":"     *","lastModifiedDate":"2021-10-28"},{"lineNumber":62,"author":{"gitId":"tsinyee"},"content":"     * @throws ParseException if the given {@code todayAttendance} is invalid.","lastModifiedDate":"2021-10-28"},{"lineNumber":63,"author":{"gitId":"tsinyee"},"content":"     */","lastModifiedDate":"2021-10-28"},{"lineNumber":64,"author":{"gitId":"tsinyee"},"content":"    public static TodayAttendance parseTodayAttendance(String todayAttendance) throws ParseException {","lastModifiedDate":"2021-10-28"},{"lineNumber":65,"author":{"gitId":"tsinyee"},"content":"        String trimmedTodayAttendance \u003d todayAttendance.trim();","lastModifiedDate":"2021-10-28"},{"lineNumber":66,"author":{"gitId":"tsinyee"},"content":"        if (!StringUtil.isValidBooleanValue(trimmedTodayAttendance)) {","lastModifiedDate":"2021-10-28"},{"lineNumber":67,"author":{"gitId":"tsinyee"},"content":"            throw new ParseException(MESSAGE_INVALID_TODAY_ATTENDANCE);","lastModifiedDate":"2021-10-28"},{"lineNumber":68,"author":{"gitId":"tsinyee"},"content":"        }","lastModifiedDate":"2021-10-28"},{"lineNumber":69,"author":{"gitId":"tsinyee"},"content":"        return new TodayAttendance(Boolean.parseBoolean(trimmedTodayAttendance));","lastModifiedDate":"2021-10-28"},{"lineNumber":70,"author":{"gitId":"tsinyee"},"content":"    }","lastModifiedDate":"2021-10-28"},{"lineNumber":71,"author":{"gitId":"tsinyee"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":72,"author":{"gitId":"tsinyee"},"content":"    /**","lastModifiedDate":"2021-10-28"},{"lineNumber":73,"author":{"gitId":"tsinyee"},"content":"     * Parses a {@code String totalAttendance} into a {@code TotalAttendance}.","lastModifiedDate":"2021-10-28"},{"lineNumber":74,"author":{"gitId":"tsinyee"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2021-10-28"},{"lineNumber":75,"author":{"gitId":"tsinyee"},"content":"     *","lastModifiedDate":"2021-10-28"},{"lineNumber":76,"author":{"gitId":"tsinyee"},"content":"     * @throws ParseException if the given {@code totalAttendance} is invalid.","lastModifiedDate":"2021-10-28"},{"lineNumber":77,"author":{"gitId":"tsinyee"},"content":"     */","lastModifiedDate":"2021-10-28"},{"lineNumber":78,"author":{"gitId":"tsinyee"},"content":"    public static TotalAttendance parseTotalAttendance(String totalAttendance) throws ParseException {","lastModifiedDate":"2021-10-28"},{"lineNumber":79,"author":{"gitId":"tsinyee"},"content":"        String trimmedTotalAttendance \u003d totalAttendance.trim();","lastModifiedDate":"2021-10-28"},{"lineNumber":80,"author":{"gitId":"tsinyee"},"content":"        if (!StringUtil.isNonNegativeUnsignedInteger(trimmedTotalAttendance)) {","lastModifiedDate":"2021-10-28"},{"lineNumber":81,"author":{"gitId":"tsinyee"},"content":"            throw new ParseException(MESSAGE_INVALID_TOTAL_ATTENDANCE);","lastModifiedDate":"2021-10-28"},{"lineNumber":82,"author":{"gitId":"tsinyee"},"content":"        }","lastModifiedDate":"2021-10-28"},{"lineNumber":83,"author":{"gitId":"tsinyee"},"content":"        return new TotalAttendance(Integer.parseInt(trimmedTotalAttendance));","lastModifiedDate":"2021-10-28"},{"lineNumber":84,"author":{"gitId":"tsinyee"},"content":"    }","lastModifiedDate":"2021-10-28"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-29"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * Parses a {@code String name} into a {@code Name}.","lastModifiedDate":"2017-05-29"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-29"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-29"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code name} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-29"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    public static Name parseName(String name) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-29"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        String trimmedName \u003d name.trim();","lastModifiedDate":"2017-05-29"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(trimmedName)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            throw new ParseException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        return new Name(trimmedName);","lastModifiedDate":"2017-05-29"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":100,"author":{"gitId":"Shruthi0310"},"content":"    /**","lastModifiedDate":"2021-10-05"},{"lineNumber":101,"author":{"gitId":"Shruthi0310"},"content":"     * Parses a string into FacilityName. Leading or trailing","lastModifiedDate":"2021-10-05"},{"lineNumber":102,"author":{"gitId":"Shruthi0310"},"content":"     * whitespaces are trimmed.","lastModifiedDate":"2021-10-05"},{"lineNumber":103,"author":{"gitId":"Shruthi0310"},"content":"     *","lastModifiedDate":"2021-10-05"},{"lineNumber":104,"author":{"gitId":"Shruthi0310"},"content":"     * @param name String to be parsed.","lastModifiedDate":"2021-10-05"},{"lineNumber":105,"author":{"gitId":"Shruthi0310"},"content":"     * @return FacilityName object with specified name.","lastModifiedDate":"2021-10-05"},{"lineNumber":106,"author":{"gitId":"tsinyee"},"content":"     * @throws ParseException if given facility name is invalid.","lastModifiedDate":"2021-10-12"},{"lineNumber":107,"author":{"gitId":"Shruthi0310"},"content":"     */","lastModifiedDate":"2021-10-05"},{"lineNumber":108,"author":{"gitId":"tsinyee"},"content":"    public static FacilityName parseFacilityName(String name) throws ParseException {","lastModifiedDate":"2021-10-12"},{"lineNumber":109,"author":{"gitId":"Shruthi0310"},"content":"        requireNonNull(name);","lastModifiedDate":"2021-10-05"},{"lineNumber":110,"author":{"gitId":"Shruthi0310"},"content":"        String trimmedName \u003d name.trim();","lastModifiedDate":"2021-10-05"},{"lineNumber":111,"author":{"gitId":"tsinyee"},"content":"        if (!FacilityName.isValidFacilityName(trimmedName)) {","lastModifiedDate":"2021-10-12"},{"lineNumber":112,"author":{"gitId":"tsinyee"},"content":"            throw new ParseException(FacilityName.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-12"},{"lineNumber":113,"author":{"gitId":"tsinyee"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":114,"author":{"gitId":"Shruthi0310"},"content":"        return new FacilityName(trimmedName);","lastModifiedDate":"2021-10-05"},{"lineNumber":115,"author":{"gitId":"Shruthi0310"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":116,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":117,"author":{"gitId":"Shruthi0310"},"content":"    /**","lastModifiedDate":"2021-10-05"},{"lineNumber":118,"author":{"gitId":"Shruthi0310"},"content":"     * Parses a string into Location. Leading or trailing","lastModifiedDate":"2021-10-05"},{"lineNumber":119,"author":{"gitId":"Shruthi0310"},"content":"     * whitespaces are trimmed.","lastModifiedDate":"2021-10-05"},{"lineNumber":120,"author":{"gitId":"Shruthi0310"},"content":"     *","lastModifiedDate":"2021-10-05"},{"lineNumber":121,"author":{"gitId":"Shruthi0310"},"content":"     * @param location String to be parsed.","lastModifiedDate":"2021-10-05"},{"lineNumber":122,"author":{"gitId":"Shruthi0310"},"content":"     * @return Location object with specified value.","lastModifiedDate":"2021-10-05"},{"lineNumber":123,"author":{"gitId":"tsinyee"},"content":"     * @throws ParseException if given location is invalid.","lastModifiedDate":"2021-10-12"},{"lineNumber":124,"author":{"gitId":"Shruthi0310"},"content":"     */","lastModifiedDate":"2021-10-05"},{"lineNumber":125,"author":{"gitId":"tsinyee"},"content":"    public static Location parseLocation(String location) throws ParseException {","lastModifiedDate":"2021-10-12"},{"lineNumber":126,"author":{"gitId":"Shruthi0310"},"content":"        requireNonNull(location);","lastModifiedDate":"2021-10-05"},{"lineNumber":127,"author":{"gitId":"Shruthi0310"},"content":"        String trimmedLocation \u003d location.trim();","lastModifiedDate":"2021-10-05"},{"lineNumber":128,"author":{"gitId":"tsinyee"},"content":"        if (!Location.isValidLocation(trimmedLocation)) {","lastModifiedDate":"2021-10-12"},{"lineNumber":129,"author":{"gitId":"tsinyee"},"content":"            throw new ParseException(Location.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-12"},{"lineNumber":130,"author":{"gitId":"tsinyee"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":131,"author":{"gitId":"Shruthi0310"},"content":"        return new Location(trimmedLocation);","lastModifiedDate":"2021-10-05"},{"lineNumber":132,"author":{"gitId":"Shruthi0310"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":133,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":134,"author":{"gitId":"Shruthi0310"},"content":"    /**","lastModifiedDate":"2021-10-05"},{"lineNumber":135,"author":{"gitId":"Shruthi0310"},"content":"     * Parses a string into Time. Leading or trailing","lastModifiedDate":"2021-10-05"},{"lineNumber":136,"author":{"gitId":"Shruthi0310"},"content":"     * whitespaces are trimmed.","lastModifiedDate":"2021-10-05"},{"lineNumber":137,"author":{"gitId":"Shruthi0310"},"content":"     *","lastModifiedDate":"2021-10-05"},{"lineNumber":138,"author":{"gitId":"Shruthi0310"},"content":"     * @param time String to be parsed.","lastModifiedDate":"2021-10-05"},{"lineNumber":139,"author":{"gitId":"Shruthi0310"},"content":"     * @return Time object with specified value.","lastModifiedDate":"2021-10-05"},{"lineNumber":140,"author":{"gitId":"tsinyee"},"content":"     * @throws ParseException if the given time is invalid.","lastModifiedDate":"2021-10-12"},{"lineNumber":141,"author":{"gitId":"Shruthi0310"},"content":"     */","lastModifiedDate":"2021-10-05"},{"lineNumber":142,"author":{"gitId":"tsinyee"},"content":"    public static Time parseTime(String time) throws ParseException {","lastModifiedDate":"2021-10-12"},{"lineNumber":143,"author":{"gitId":"Shruthi0310"},"content":"        requireNonNull(time);","lastModifiedDate":"2021-10-05"},{"lineNumber":144,"author":{"gitId":"Shruthi0310"},"content":"        String trimmedTime \u003d time.trim();","lastModifiedDate":"2021-10-05"},{"lineNumber":145,"author":{"gitId":"tsinyee"},"content":"        if (!Time.isValidTime(trimmedTime)) {","lastModifiedDate":"2021-10-12"},{"lineNumber":146,"author":{"gitId":"tsinyee"},"content":"            throw new ParseException(Time.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-12"},{"lineNumber":147,"author":{"gitId":"tsinyee"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":148,"author":{"gitId":"Shruthi0310"},"content":"        return new Time(trimmedTime);","lastModifiedDate":"2021-10-05"},{"lineNumber":149,"author":{"gitId":"Shruthi0310"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":150,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":151,"author":{"gitId":"Shruthi0310"},"content":"    /**","lastModifiedDate":"2021-10-05"},{"lineNumber":152,"author":{"gitId":"Shruthi0310"},"content":"     * Parses a string into Capacity. Leading or trailing","lastModifiedDate":"2021-10-05"},{"lineNumber":153,"author":{"gitId":"Shruthi0310"},"content":"     * whitespaces are trimmed.","lastModifiedDate":"2021-10-05"},{"lineNumber":154,"author":{"gitId":"Shruthi0310"},"content":"     *","lastModifiedDate":"2021-10-05"},{"lineNumber":155,"author":{"gitId":"Shruthi0310"},"content":"     * @param capacity String to be parsed.","lastModifiedDate":"2021-10-05"},{"lineNumber":156,"author":{"gitId":"Shruthi0310"},"content":"     * @return Capacity object with specified value.","lastModifiedDate":"2021-10-05"},{"lineNumber":157,"author":{"gitId":"tsinyee"},"content":"     * @throws ParseException if given capacity is invalid.","lastModifiedDate":"2021-10-12"},{"lineNumber":158,"author":{"gitId":"Shruthi0310"},"content":"     */","lastModifiedDate":"2021-10-05"},{"lineNumber":159,"author":{"gitId":"tsinyee"},"content":"    public static Capacity parseCapacity(String capacity) throws ParseException {","lastModifiedDate":"2021-10-12"},{"lineNumber":160,"author":{"gitId":"Shruthi0310"},"content":"        requireNonNull(capacity);","lastModifiedDate":"2021-10-05"},{"lineNumber":161,"author":{"gitId":"Shruthi0310"},"content":"        String trimmedCapacity \u003d capacity.trim();","lastModifiedDate":"2021-10-05"},{"lineNumber":162,"author":{"gitId":"tsinyee"},"content":"        if (!Capacity.isValidCapacity(trimmedCapacity)) {","lastModifiedDate":"2021-10-12"},{"lineNumber":163,"author":{"gitId":"tsinyee"},"content":"            throw new ParseException(Capacity.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-12"},{"lineNumber":164,"author":{"gitId":"tsinyee"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":165,"author":{"gitId":"Shruthi0310"},"content":"        return new Capacity(trimmedCapacity);","lastModifiedDate":"2021-10-05"},{"lineNumber":166,"author":{"gitId":"Shruthi0310"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":167,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":169,"author":{"gitId":"-"},"content":"     * Parses a {@code String phone} into a {@code Phone}.","lastModifiedDate":"2017-05-30"},{"lineNumber":170,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":171,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":172,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code phone} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":173,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    public static Phone parsePhone(String phone) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        requireNonNull(phone);","lastModifiedDate":"2017-05-30"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        String trimmedPhone \u003d phone.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(trimmedPhone)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":178,"author":{"gitId":"-"},"content":"            throw new ParseException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        return new Phone(trimmedPhone);","lastModifiedDate":"2017-05-30"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":184,"author":{"gitId":"-"},"content":"     * Parses a {@code String address} into an {@code Address}.","lastModifiedDate":"2017-05-30"},{"lineNumber":185,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":186,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":187,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code address} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":188,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":189,"author":{"gitId":"-"},"content":"    public static Address parseAddress(String address) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":190,"author":{"gitId":"-"},"content":"        requireNonNull(address);","lastModifiedDate":"2017-05-30"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        String trimmedAddress \u003d address.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        if (!Address.isValidAddress(trimmedAddress)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":193,"author":{"gitId":"-"},"content":"            throw new ParseException(Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":195,"author":{"gitId":"-"},"content":"        return new Address(trimmedAddress);","lastModifiedDate":"2017-05-30"},{"lineNumber":196,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":198,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":199,"author":{"gitId":"-"},"content":"     * Parses a {@code String tag} into a {@code Tag}.","lastModifiedDate":"2017-05-30"},{"lineNumber":200,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":201,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":202,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code tag} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":203,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":204,"author":{"gitId":"-"},"content":"    public static Tag parseTag(String tag) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        requireNonNull(tag);","lastModifiedDate":"2017-05-30"},{"lineNumber":206,"author":{"gitId":"-"},"content":"        String trimmedTag \u003d tag.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":207,"author":{"gitId":"-"},"content":"        if (!Tag.isValidTagName(trimmedTag)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":208,"author":{"gitId":"-"},"content":"            throw new ParseException(Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":209,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":210,"author":{"gitId":"-"},"content":"        return new Tag(trimmedTag);","lastModifiedDate":"2017-05-30"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":212,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":213,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":214,"author":{"gitId":"-"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e}.","lastModifiedDate":"2017-03-07"},{"lineNumber":215,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":216,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e parseTags(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":217,"author":{"gitId":"-"},"content":"        requireNonNull(tags);","lastModifiedDate":"2017-05-15"},{"lineNumber":218,"author":{"gitId":"-"},"content":"        final Set\u003cTag\u003e tagSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2017-02-11"},{"lineNumber":219,"author":{"gitId":"-"},"content":"        for (String tagName : tags) {","lastModifiedDate":"2017-02-11"},{"lineNumber":220,"author":{"gitId":"-"},"content":"            tagSet.add(parseTag(tagName));","lastModifiedDate":"2017-05-30"},{"lineNumber":221,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":222,"author":{"gitId":"-"},"content":"        return tagSet;","lastModifiedDate":"2017-03-07"},{"lineNumber":223,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":224,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":225,"author":{"gitId":"YoYoCiti"},"content":"    /**","lastModifiedDate":"2021-10-17"},{"lineNumber":226,"author":{"gitId":"YoYoCiti"},"content":"     * Parses a {@code String shortcut} into Shortcut.","lastModifiedDate":"2021-10-18"},{"lineNumber":227,"author":{"gitId":"YoYoCiti"},"content":"     */","lastModifiedDate":"2021-10-17"},{"lineNumber":228,"author":{"gitId":"YoYoCiti"},"content":"    public static Shortcut parseShortcut(String shortcut) throws ParseException {","lastModifiedDate":"2021-10-18"},{"lineNumber":229,"author":{"gitId":"YoYoCiti"},"content":"        requireNonNull(shortcut);","lastModifiedDate":"2021-10-18"},{"lineNumber":230,"author":{"gitId":"YoYoCiti"},"content":"        String trimmedShortcut \u003d shortcut.trim();","lastModifiedDate":"2021-10-18"},{"lineNumber":231,"author":{"gitId":"YoYoCiti"},"content":"        if (!Shortcut.isValidShortcut(trimmedShortcut)) {","lastModifiedDate":"2021-10-18"},{"lineNumber":232,"author":{"gitId":"YoYoCiti"},"content":"            throw new ParseException(Shortcut.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-18"},{"lineNumber":233,"author":{"gitId":"YoYoCiti"},"content":"        }","lastModifiedDate":"2021-10-17"},{"lineNumber":234,"author":{"gitId":"YoYoCiti"},"content":"        return new Shortcut(trimmedShortcut);","lastModifiedDate":"2021-10-18"},{"lineNumber":235,"author":{"gitId":"YoYoCiti"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":236,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":237,"author":{"gitId":"YoYoCiti"},"content":"    /**","lastModifiedDate":"2021-10-18"},{"lineNumber":238,"author":{"gitId":"YoYoCiti"},"content":"     * Parses a {@code String commandWord} into commandWord.","lastModifiedDate":"2021-10-18"},{"lineNumber":239,"author":{"gitId":"YoYoCiti"},"content":"     */","lastModifiedDate":"2021-10-18"},{"lineNumber":240,"author":{"gitId":"YoYoCiti"},"content":"    public static CommandWord parseCommandWord(String commandWord) throws ParseException {","lastModifiedDate":"2021-10-18"},{"lineNumber":241,"author":{"gitId":"YoYoCiti"},"content":"        requireNonNull(commandWord);","lastModifiedDate":"2021-10-18"},{"lineNumber":242,"author":{"gitId":"YoYoCiti"},"content":"        String trimmedCommandWord \u003d commandWord.trim();","lastModifiedDate":"2021-10-18"},{"lineNumber":243,"author":{"gitId":"YoYoCiti"},"content":"        if (!CommandWord.isValidCommandWord(trimmedCommandWord)) {","lastModifiedDate":"2021-10-18"},{"lineNumber":244,"author":{"gitId":"YoYoCiti"},"content":"            throw new ParseException(CommandWord.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-18"},{"lineNumber":245,"author":{"gitId":"YoYoCiti"},"content":"        }","lastModifiedDate":"2021-10-18"},{"lineNumber":246,"author":{"gitId":"YoYoCiti"},"content":"        return new CommandWord(trimmedCommandWord);","lastModifiedDate":"2021-10-18"},{"lineNumber":247,"author":{"gitId":"YoYoCiti"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":248,"author":{"gitId":"felix-ong"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":249,"author":{"gitId":"felix-ong"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":250,"author":{"gitId":"felix-ong"},"content":"     * Parses an {@code String availabilityString} into an {@code Availability}.","lastModifiedDate":"2021-10-23"},{"lineNumber":251,"author":{"gitId":"felix-ong"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2021-10-12"},{"lineNumber":252,"author":{"gitId":"felix-ong"},"content":"     *","lastModifiedDate":"2021-10-12"},{"lineNumber":253,"author":{"gitId":"felix-ong"},"content":"     * @throws ParseException if the given {@code availability string} is invalid.","lastModifiedDate":"2021-10-12"},{"lineNumber":254,"author":{"gitId":"felix-ong"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":255,"author":{"gitId":"felix-ong"},"content":"    public static Availability parseAvailability(String availabilityString) throws ParseException {","lastModifiedDate":"2021-10-12"},{"lineNumber":256,"author":{"gitId":"felix-ong"},"content":"        requireNonNull(availabilityString);","lastModifiedDate":"2021-10-12"},{"lineNumber":257,"author":{"gitId":"felix-ong"},"content":"        String trimmedAvailabilityString \u003d availabilityString.trim();","lastModifiedDate":"2021-10-15"},{"lineNumber":258,"author":{"gitId":"felix-ong"},"content":"        List\u003cString\u003e availabilityDaysWithNoDuplicates \u003d","lastModifiedDate":"2021-10-12"},{"lineNumber":259,"author":{"gitId":"felix-ong"},"content":"                Arrays.stream(trimmedAvailabilityString.split(\" \"))","lastModifiedDate":"2021-10-12"},{"lineNumber":260,"author":{"gitId":"felix-ong"},"content":"                .distinct().collect(Collectors.toList());","lastModifiedDate":"2021-10-12"},{"lineNumber":261,"author":{"gitId":"felix-ong"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":262,"author":{"gitId":"felix-ong"},"content":"        if (!Availability.isValidAvailability(availabilityDaysWithNoDuplicates)) {","lastModifiedDate":"2021-10-12"},{"lineNumber":263,"author":{"gitId":"felix-ong"},"content":"            throw new ParseException(Availability.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-12"},{"lineNumber":264,"author":{"gitId":"felix-ong"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":265,"author":{"gitId":"felix-ong"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":266,"author":{"gitId":"felix-ong"},"content":"        List\u003cDayOfWeek\u003e availability;","lastModifiedDate":"2021-10-15"},{"lineNumber":267,"author":{"gitId":"felix-ong"},"content":"        if (availabilityDaysWithNoDuplicates.get(0).isEmpty()) { // valid but empty","lastModifiedDate":"2021-10-16"},{"lineNumber":268,"author":{"gitId":"felix-ong"},"content":"            availability \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-15"},{"lineNumber":269,"author":{"gitId":"felix-ong"},"content":"        } else {","lastModifiedDate":"2021-10-15"},{"lineNumber":270,"author":{"gitId":"felix-ong"},"content":"            availability \u003d Arrays.stream(trimmedAvailabilityString.split(\" \"))","lastModifiedDate":"2021-10-15"},{"lineNumber":271,"author":{"gitId":"felix-ong"},"content":"                    .distinct().map(dayNumber -\u003e DayOfWeek.of(Integer.parseInt(dayNumber)))","lastModifiedDate":"2021-10-15"},{"lineNumber":272,"author":{"gitId":"felix-ong"},"content":"                    .collect(Collectors.toList());","lastModifiedDate":"2021-10-15"},{"lineNumber":273,"author":{"gitId":"felix-ong"},"content":"        }","lastModifiedDate":"2021-10-15"},{"lineNumber":274,"author":{"gitId":"felix-ong"},"content":"        Collections.sort(availability);","lastModifiedDate":"2021-10-15"},{"lineNumber":275,"author":{"gitId":"felix-ong"},"content":"        return new Availability(availability);","lastModifiedDate":"2021-10-12"},{"lineNumber":276,"author":{"gitId":"felix-ong"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":277,"author":{"gitId":"tsinyee"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":278,"author":{"gitId":"felix-ong"},"content":"    /**","lastModifiedDate":"2021-10-23"},{"lineNumber":279,"author":{"gitId":"felix-ong"},"content":"     * Parses a {@code String dayString} into DayOfWeek.","lastModifiedDate":"2021-10-23"},{"lineNumber":280,"author":{"gitId":"felix-ong"},"content":"     */","lastModifiedDate":"2021-10-23"},{"lineNumber":281,"author":{"gitId":"felix-ong"},"content":"    public static DayOfWeek parseDay(String dayString) throws ParseException {","lastModifiedDate":"2021-10-23"},{"lineNumber":282,"author":{"gitId":"felix-ong"},"content":"        requireNonNull(dayString);","lastModifiedDate":"2021-10-23"},{"lineNumber":283,"author":{"gitId":"felix-ong"},"content":"        String validationRegex \u003d \"[1-7]\";","lastModifiedDate":"2021-10-23"},{"lineNumber":284,"author":{"gitId":"felix-ong"},"content":"        if (!dayString.matches(validationRegex)) {","lastModifiedDate":"2021-10-23"},{"lineNumber":285,"author":{"gitId":"felix-ong"},"content":"            throw new ParseException(CommandWord.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-23"},{"lineNumber":286,"author":{"gitId":"felix-ong"},"content":"        }","lastModifiedDate":"2021-10-23"},{"lineNumber":287,"author":{"gitId":"felix-ong"},"content":"        int dayNumber \u003d Integer.parseInt(dayString);","lastModifiedDate":"2021-10-23"},{"lineNumber":288,"author":{"gitId":"felix-ong"},"content":"        return DayOfWeek.of(dayNumber);","lastModifiedDate":"2021-10-23"},{"lineNumber":289,"author":{"gitId":"felix-ong"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":290,"author":{"gitId":"felix-ong"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":291,"author":{"gitId":"tsinyee"},"content":"    /**","lastModifiedDate":"2021-10-24"},{"lineNumber":292,"author":{"gitId":"tsinyee"},"content":"     * Parses a {@code String sortOrder} into sortOrder.","lastModifiedDate":"2021-10-24"},{"lineNumber":293,"author":{"gitId":"tsinyee"},"content":"     */","lastModifiedDate":"2021-10-24"},{"lineNumber":294,"author":{"gitId":"tsinyee"},"content":"    public static SortOrder parseSortOrder(String sortOrder) throws ParseException {","lastModifiedDate":"2021-10-24"},{"lineNumber":295,"author":{"gitId":"tsinyee"},"content":"        requireNonNull(sortOrder);","lastModifiedDate":"2021-10-24"},{"lineNumber":296,"author":{"gitId":"tsinyee"},"content":"        String trimmedSortOrder \u003d sortOrder.trim().toLowerCase();","lastModifiedDate":"2021-10-24"},{"lineNumber":297,"author":{"gitId":"tsinyee"},"content":"        if (!SortOrder.isValidSortOrder(trimmedSortOrder)) {","lastModifiedDate":"2021-10-24"},{"lineNumber":298,"author":{"gitId":"tsinyee"},"content":"            throw new ParseException(SortOrder.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-24"},{"lineNumber":299,"author":{"gitId":"tsinyee"},"content":"        }","lastModifiedDate":"2021-10-24"},{"lineNumber":300,"author":{"gitId":"tsinyee"},"content":"        return new SortOrder(trimmedSortOrder);","lastModifiedDate":"2021-10-24"},{"lineNumber":301,"author":{"gitId":"tsinyee"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":302,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"YoYoCiti":26,"Shruthi0310":52,"-":107,"felix-ong":48,"tsinyee":69}},{"path":"src/main/java/seedu/address/logic/parser/SetMemberAvailabilityCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"felix-ong"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-10-10"},{"lineNumber":2,"author":{"gitId":"felix-ong"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":3,"author":{"gitId":"felix-ong"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-10"},{"lineNumber":4,"author":{"gitId":"felix-ong"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-10"},{"lineNumber":5,"author":{"gitId":"felix-ong"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_AVAILABILITY;","lastModifiedDate":"2021-10-10"},{"lineNumber":6,"author":{"gitId":"felix-ong"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":7,"author":{"gitId":"felix-ong"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-10"},{"lineNumber":8,"author":{"gitId":"felix-ong"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-10-26"},{"lineNumber":9,"author":{"gitId":"felix-ong"},"content":"import java.util.List;","lastModifiedDate":"2021-10-10"},{"lineNumber":10,"author":{"gitId":"felix-ong"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2021-10-26"},{"lineNumber":11,"author":{"gitId":"felix-ong"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":12,"author":{"gitId":"felix-ong"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-10-10"},{"lineNumber":13,"author":{"gitId":"felix-ong"},"content":"import seedu.address.logic.commands.SetMemberAvailabilityCommand;","lastModifiedDate":"2021-10-10"},{"lineNumber":14,"author":{"gitId":"felix-ong"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-10"},{"lineNumber":15,"author":{"gitId":"felix-ong"},"content":"import seedu.address.model.person.Availability;","lastModifiedDate":"2021-10-10"},{"lineNumber":16,"author":{"gitId":"felix-ong"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":17,"author":{"gitId":"felix-ong"},"content":"/**","lastModifiedDate":"2021-10-10"},{"lineNumber":18,"author":{"gitId":"felix-ong"},"content":" * Parses input arguments and creates a new SetMemberAvailabilityCommand object.","lastModifiedDate":"2021-10-23"},{"lineNumber":19,"author":{"gitId":"felix-ong"},"content":" */","lastModifiedDate":"2021-10-10"},{"lineNumber":20,"author":{"gitId":"felix-ong"},"content":"public class SetMemberAvailabilityCommandParser implements Parser\u003cSetMemberAvailabilityCommand\u003e {","lastModifiedDate":"2021-10-10"},{"lineNumber":21,"author":{"gitId":"felix-ong"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":22,"author":{"gitId":"felix-ong"},"content":"    /**","lastModifiedDate":"2021-10-10"},{"lineNumber":23,"author":{"gitId":"felix-ong"},"content":"     * Parses the given {@code String} of arguments in the context of the SetMemberAvailabilityCommand","lastModifiedDate":"2021-10-10"},{"lineNumber":24,"author":{"gitId":"felix-ong"},"content":"     * and returns a SetMemberAvailabilityCommand object for execution.","lastModifiedDate":"2021-10-23"},{"lineNumber":25,"author":{"gitId":"felix-ong"},"content":"     *","lastModifiedDate":"2021-10-10"},{"lineNumber":26,"author":{"gitId":"felix-ong"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2021-10-10"},{"lineNumber":27,"author":{"gitId":"felix-ong"},"content":"     */","lastModifiedDate":"2021-10-10"},{"lineNumber":28,"author":{"gitId":"felix-ong"},"content":"    public SetMemberAvailabilityCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-10-10"},{"lineNumber":29,"author":{"gitId":"felix-ong"},"content":"        requireNonNull(args);","lastModifiedDate":"2021-10-10"},{"lineNumber":30,"author":{"gitId":"felix-ong"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args,","lastModifiedDate":"2021-10-10"},{"lineNumber":31,"author":{"gitId":"felix-ong"},"content":"                PREFIX_AVAILABILITY);","lastModifiedDate":"2021-10-10"},{"lineNumber":32,"author":{"gitId":"felix-ong"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":33,"author":{"gitId":"felix-ong"},"content":"        if (!argMultimap.getValue(PREFIX_AVAILABILITY).isPresent()) {","lastModifiedDate":"2021-10-26"},{"lineNumber":34,"author":{"gitId":"felix-ong"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2021-10-26"},{"lineNumber":35,"author":{"gitId":"felix-ong"},"content":"                    SetMemberAvailabilityCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-26"},{"lineNumber":36,"author":{"gitId":"felix-ong"},"content":"        }","lastModifiedDate":"2021-10-26"},{"lineNumber":37,"author":{"gitId":"felix-ong"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":38,"author":{"gitId":"felix-ong"},"content":"        List\u003cIndex\u003e indices;","lastModifiedDate":"2021-10-10"},{"lineNumber":39,"author":{"gitId":"felix-ong"},"content":"        try {","lastModifiedDate":"2021-10-10"},{"lineNumber":40,"author":{"gitId":"felix-ong"},"content":"            indices \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-10"},{"lineNumber":41,"author":{"gitId":"felix-ong"},"content":"            String indicesString \u003d argMultimap.getPreamble();","lastModifiedDate":"2021-10-10"},{"lineNumber":42,"author":{"gitId":"felix-ong"},"content":"            List\u003cString\u003e indicesWithNoDuplicates \u003d","lastModifiedDate":"2021-10-26"},{"lineNumber":43,"author":{"gitId":"felix-ong"},"content":"                    Arrays.stream(indicesString.split(\" \")).distinct().collect(Collectors.toList());","lastModifiedDate":"2021-10-26"},{"lineNumber":44,"author":{"gitId":"felix-ong"},"content":"            for (String s : indicesWithNoDuplicates) {","lastModifiedDate":"2021-10-26"},{"lineNumber":45,"author":{"gitId":"felix-ong"},"content":"                indices.add(ParserUtil.parseIndex(s));","lastModifiedDate":"2021-10-10"},{"lineNumber":46,"author":{"gitId":"felix-ong"},"content":"            }","lastModifiedDate":"2021-10-10"},{"lineNumber":47,"author":{"gitId":"felix-ong"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2021-10-26"},{"lineNumber":48,"author":{"gitId":"felix-ong"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2021-10-10"},{"lineNumber":49,"author":{"gitId":"felix-ong"},"content":"                    SetMemberAvailabilityCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2021-10-26"},{"lineNumber":50,"author":{"gitId":"felix-ong"},"content":"        }","lastModifiedDate":"2021-10-10"},{"lineNumber":51,"author":{"gitId":"felix-ong"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":52,"author":{"gitId":"felix-ong"},"content":"        Availability availability \u003d ParserUtil.parseAvailability(argMultimap.getValue(PREFIX_AVAILABILITY).get());","lastModifiedDate":"2021-10-12"},{"lineNumber":53,"author":{"gitId":"felix-ong"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":54,"author":{"gitId":"felix-ong"},"content":"        return new SetMemberAvailabilityCommand(indices, availability);","lastModifiedDate":"2021-10-12"},{"lineNumber":55,"author":{"gitId":"felix-ong"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":56,"author":{"gitId":"felix-ong"},"content":"}","lastModifiedDate":"2021-10-10"}],"authorContributionMap":{"felix-ong":56}},{"path":"src/main/java/seedu/address/logic/parser/SortMemberCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tsinyee"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-10-24"},{"lineNumber":2,"author":{"gitId":"tsinyee"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":3,"author":{"gitId":"tsinyee"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-24"},{"lineNumber":4,"author":{"gitId":"tsinyee"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_SORT_ORDER;","lastModifiedDate":"2021-10-24"},{"lineNumber":5,"author":{"gitId":"tsinyee"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":6,"author":{"gitId":"tsinyee"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2021-10-24"},{"lineNumber":7,"author":{"gitId":"tsinyee"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":8,"author":{"gitId":"tsinyee"},"content":"import seedu.address.logic.commands.SortMemberCommand;","lastModifiedDate":"2021-10-24"},{"lineNumber":9,"author":{"gitId":"tsinyee"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-24"},{"lineNumber":10,"author":{"gitId":"tsinyee"},"content":"import seedu.address.model.sort.SortOrder;","lastModifiedDate":"2021-10-24"},{"lineNumber":11,"author":{"gitId":"tsinyee"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":12,"author":{"gitId":"tsinyee"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":13,"author":{"gitId":"tsinyee"},"content":"public class SortMemberCommandParser implements Parser\u003cSortMemberCommand\u003e {","lastModifiedDate":"2021-10-24"},{"lineNumber":14,"author":{"gitId":"tsinyee"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":15,"author":{"gitId":"tsinyee"},"content":"    /**","lastModifiedDate":"2021-10-24"},{"lineNumber":16,"author":{"gitId":"tsinyee"},"content":"     * Parses the given {@code String} of arguments in the context of the SortMemberCommand","lastModifiedDate":"2021-10-24"},{"lineNumber":17,"author":{"gitId":"tsinyee"},"content":"     * and returns an SortMemberCommand object for execution.","lastModifiedDate":"2021-10-24"},{"lineNumber":18,"author":{"gitId":"tsinyee"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2021-10-24"},{"lineNumber":19,"author":{"gitId":"tsinyee"},"content":"     */","lastModifiedDate":"2021-10-24"},{"lineNumber":20,"author":{"gitId":"tsinyee"},"content":"    public SortMemberCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-10-24"},{"lineNumber":21,"author":{"gitId":"tsinyee"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args, PREFIX_SORT_ORDER);","lastModifiedDate":"2021-10-24"},{"lineNumber":22,"author":{"gitId":"tsinyee"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_SORT_ORDER)","lastModifiedDate":"2021-10-24"},{"lineNumber":23,"author":{"gitId":"tsinyee"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2021-10-24"},{"lineNumber":24,"author":{"gitId":"tsinyee"},"content":"            throw new ParseException((String.format(MESSAGE_INVALID_COMMAND_FORMAT, SortMemberCommand.MESSAGE_USAGE)));","lastModifiedDate":"2021-10-24"},{"lineNumber":25,"author":{"gitId":"tsinyee"},"content":"        }","lastModifiedDate":"2021-10-24"},{"lineNumber":26,"author":{"gitId":"tsinyee"},"content":"        SortOrder sortOrder \u003d ParserUtil.parseSortOrder(argMultimap.getValue(PREFIX_SORT_ORDER).get());","lastModifiedDate":"2021-10-24"},{"lineNumber":27,"author":{"gitId":"tsinyee"},"content":"        return new SortMemberCommand(sortOrder);","lastModifiedDate":"2021-10-24"},{"lineNumber":28,"author":{"gitId":"tsinyee"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":29,"author":{"gitId":"tsinyee"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":30,"author":{"gitId":"tsinyee"},"content":"    /**","lastModifiedDate":"2021-10-24"},{"lineNumber":31,"author":{"gitId":"tsinyee"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2021-10-24"},{"lineNumber":32,"author":{"gitId":"tsinyee"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2021-10-24"},{"lineNumber":33,"author":{"gitId":"tsinyee"},"content":"     */","lastModifiedDate":"2021-10-24"},{"lineNumber":34,"author":{"gitId":"tsinyee"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2021-10-24"},{"lineNumber":35,"author":{"gitId":"tsinyee"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2021-10-24"},{"lineNumber":36,"author":{"gitId":"tsinyee"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":37,"author":{"gitId":"tsinyee"},"content":"}","lastModifiedDate":"2021-10-24"}],"authorContributionMap":{"tsinyee":37}},{"path":"src/main/java/seedu/address/logic/parser/SplitCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Shruthi0310"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-10-12"},{"lineNumber":2,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":3,"author":{"gitId":"Shruthi0310"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-12"},{"lineNumber":4,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":5,"author":{"gitId":"Shruthi0310"},"content":"import seedu.address.logic.commands.SplitCommand;","lastModifiedDate":"2021-10-12"},{"lineNumber":6,"author":{"gitId":"Shruthi0310"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-12"},{"lineNumber":7,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":8,"author":{"gitId":"felix-ong"},"content":"/**","lastModifiedDate":"2021-10-19"},{"lineNumber":9,"author":{"gitId":"felix-ong"},"content":" * Parses input arguments and creates a new {@code SplitCommand} object.","lastModifiedDate":"2021-10-19"},{"lineNumber":10,"author":{"gitId":"felix-ong"},"content":" */","lastModifiedDate":"2021-10-19"},{"lineNumber":11,"author":{"gitId":"Shruthi0310"},"content":"public class SplitCommandParser implements Parser\u003cSplitCommand\u003e {","lastModifiedDate":"2021-10-12"},{"lineNumber":12,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":13,"author":{"gitId":"felix-ong"},"content":"    public static final String VALIDATION_REGEX \u003d \"[1-7]\"; // numbers from 1 to 7","lastModifiedDate":"2021-10-19"},{"lineNumber":14,"author":{"gitId":"felix-ong"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":15,"author":{"gitId":"Shruthi0310"},"content":"    @Override","lastModifiedDate":"2021-10-12"},{"lineNumber":16,"author":{"gitId":"Shruthi0310"},"content":"    public SplitCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-10-12"},{"lineNumber":17,"author":{"gitId":"Shruthi0310"},"content":"        String trimmedArgs \u003d args.trim();","lastModifiedDate":"2021-10-12"},{"lineNumber":18,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":19,"author":{"gitId":"felix-ong"},"content":"        if (!trimmedArgs.matches(VALIDATION_REGEX)) {","lastModifiedDate":"2021-10-19"},{"lineNumber":20,"author":{"gitId":"Shruthi0310"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2021-10-12"},{"lineNumber":21,"author":{"gitId":"Shruthi0310"},"content":"                    SplitCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-12"},{"lineNumber":22,"author":{"gitId":"Shruthi0310"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":23,"author":{"gitId":"felix-ong"},"content":"        int dayNumber \u003d Integer.parseInt(trimmedArgs);","lastModifiedDate":"2021-10-16"},{"lineNumber":24,"author":{"gitId":"felix-ong"},"content":"        return new SplitCommand(dayNumber);","lastModifiedDate":"2021-10-16"},{"lineNumber":25,"author":{"gitId":"Shruthi0310"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":26,"author":{"gitId":"Shruthi0310"},"content":"}","lastModifiedDate":"2021-10-12"}],"authorContributionMap":{"Shruthi0310":18,"felix-ong":8}},{"path":"src/main/java/seedu/address/logic/parser/UnmarkAttendanceCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Shruthi0310"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-10-21"},{"lineNumber":2,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":3,"author":{"gitId":"Shruthi0310"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-21"},{"lineNumber":4,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":5,"author":{"gitId":"Shruthi0310"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-21"},{"lineNumber":6,"author":{"gitId":"Shruthi0310"},"content":"import java.util.List;","lastModifiedDate":"2021-10-21"},{"lineNumber":7,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":8,"author":{"gitId":"Shruthi0310"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-10-21"},{"lineNumber":9,"author":{"gitId":"Shruthi0310"},"content":"import seedu.address.logic.commands.UnmarkAttendanceCommand;","lastModifiedDate":"2021-10-21"},{"lineNumber":10,"author":{"gitId":"Shruthi0310"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-21"},{"lineNumber":11,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":12,"author":{"gitId":"Shruthi0310"},"content":"/**","lastModifiedDate":"2021-10-21"},{"lineNumber":13,"author":{"gitId":"Shruthi0310"},"content":" * Parses input arguments and creates a new UnmarkAttendanceCommand object.","lastModifiedDate":"2021-10-21"},{"lineNumber":14,"author":{"gitId":"Shruthi0310"},"content":" */","lastModifiedDate":"2021-10-21"},{"lineNumber":15,"author":{"gitId":"Shruthi0310"},"content":"public class UnmarkAttendanceCommandParser implements Parser\u003cUnmarkAttendanceCommand\u003e {","lastModifiedDate":"2021-10-21"},{"lineNumber":16,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":17,"author":{"gitId":"Shruthi0310"},"content":"    @Override","lastModifiedDate":"2021-10-21"},{"lineNumber":18,"author":{"gitId":"Shruthi0310"},"content":"    public UnmarkAttendanceCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-10-21"},{"lineNumber":19,"author":{"gitId":"Shruthi0310"},"content":"        String trimmedArgs \u003d args.trim();","lastModifiedDate":"2021-10-21"},{"lineNumber":20,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":21,"author":{"gitId":"Shruthi0310"},"content":"        if (trimmedArgs.isEmpty()) {","lastModifiedDate":"2021-10-21"},{"lineNumber":22,"author":{"gitId":"Shruthi0310"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2021-10-21"},{"lineNumber":23,"author":{"gitId":"Shruthi0310"},"content":"                    UnmarkAttendanceCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-21"},{"lineNumber":24,"author":{"gitId":"Shruthi0310"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":25,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":26,"author":{"gitId":"Shruthi0310"},"content":"        String[] numbers \u003d trimmedArgs.split(\"\\\\s+\");","lastModifiedDate":"2021-10-21"},{"lineNumber":27,"author":{"gitId":"Shruthi0310"},"content":"        List\u003cIndex\u003e indices \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-21"},{"lineNumber":28,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":29,"author":{"gitId":"Shruthi0310"},"content":"        for (String number : numbers) {","lastModifiedDate":"2021-10-21"},{"lineNumber":30,"author":{"gitId":"Shruthi0310"},"content":"            Index index \u003d ParserUtil.parseIndex(number);","lastModifiedDate":"2021-10-21"},{"lineNumber":31,"author":{"gitId":"Shruthi0310"},"content":"            indices.add(index);","lastModifiedDate":"2021-10-21"},{"lineNumber":32,"author":{"gitId":"Shruthi0310"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":33,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":34,"author":{"gitId":"Shruthi0310"},"content":"        return new UnmarkAttendanceCommand(indices);","lastModifiedDate":"2021-10-21"},{"lineNumber":35,"author":{"gitId":"Shruthi0310"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":36,"author":{"gitId":"Shruthi0310"},"content":"}","lastModifiedDate":"2021-10-21"}],"authorContributionMap":{"Shruthi0310":36}},{"path":"src/main/java/seedu/address/model/AddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"Shruthi0310"},"content":"import javafx.collections.transformation.FilteredList;","lastModifiedDate":"2021-10-12"},{"lineNumber":9,"author":{"gitId":"Shruthi0310"},"content":"import seedu.address.model.facility.Facility;","lastModifiedDate":"2021-10-05"},{"lineNumber":10,"author":{"gitId":"Shruthi0310"},"content":"import seedu.address.model.facility.UniqueFacilityList;","lastModifiedDate":"2021-10-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.UniquePersonList;","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * Wraps all data at the address-book level","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * Duplicates are not allowed (by .isSamePerson comparison)","lastModifiedDate":"2018-04-19"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class AddressBook implements ReadOnlyAddressBook {","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private final UniquePersonList persons;","lastModifiedDate":"2016-08-26"},{"lineNumber":21,"author":{"gitId":"Shruthi0310"},"content":"    private final UniqueFacilityList facilities;","lastModifiedDate":"2021-10-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * The \u0027unusual\u0027 code block below is a non-static initialization block, sometimes used to avoid duplication","lastModifiedDate":"2019-05-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * between constructors. See https://docs.oracle.com/javase/tutorial/java/javaOO/initial.html","lastModifiedDate":"2016-10-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * Note that non-static init blocks are not recommended to use. There are other ways to avoid duplication","lastModifiedDate":"2016-10-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     *   among constructors.","lastModifiedDate":"2016-10-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    {","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        persons \u003d new UniquePersonList();","lastModifiedDate":"2016-08-26"},{"lineNumber":32,"author":{"gitId":"Shruthi0310"},"content":"        facilities \u003d new UniqueFacilityList();","lastModifiedDate":"2021-10-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public AddressBook() {}","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"YoYoCiti"},"content":"     * Creates an AddressBook using the Persons and Facilities in the {@code toBeCopied}.","lastModifiedDate":"2021-10-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public AddressBook(ReadOnlyAddressBook toBeCopied) {","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        this();","lastModifiedDate":"2016-12-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        resetData(toBeCopied);","lastModifiedDate":"2016-12-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    //// list overwrite operations","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Replaces the contents of the person list with {@code persons}.","lastModifiedDate":"2018-08-07"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * {@code persons} must not contain duplicate persons.","lastModifiedDate":"2018-08-07"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void setPersons(List\u003cPerson\u003e persons) {","lastModifiedDate":"2018-08-07"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        this.persons.setPersons(persons);","lastModifiedDate":"2016-10-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"YoYoCiti"},"content":"    /**","lastModifiedDate":"2021-10-09"},{"lineNumber":56,"author":{"gitId":"YoYoCiti"},"content":"     * Replaces the contents of the facility list with {@code facilities}.","lastModifiedDate":"2021-10-09"},{"lineNumber":57,"author":{"gitId":"Moley456"},"content":"     * {@code facilities} must not contain duplicate facilities.","lastModifiedDate":"2021-10-11"},{"lineNumber":58,"author":{"gitId":"YoYoCiti"},"content":"     */","lastModifiedDate":"2021-10-09"},{"lineNumber":59,"author":{"gitId":"YoYoCiti"},"content":"    public void setFacilities(List\u003cFacility\u003e facilities) {","lastModifiedDate":"2021-10-09"},{"lineNumber":60,"author":{"gitId":"YoYoCiti"},"content":"        this.facilities.setFacilities(facilities);","lastModifiedDate":"2021-10-09"},{"lineNumber":61,"author":{"gitId":"YoYoCiti"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":62,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":63,"author":{"gitId":"tsinyee"},"content":"    /**","lastModifiedDate":"2021-10-24"},{"lineNumber":64,"author":{"gitId":"tsinyee"},"content":"     * Sorts the member list by name.","lastModifiedDate":"2021-10-24"},{"lineNumber":65,"author":{"gitId":"tsinyee"},"content":"     */","lastModifiedDate":"2021-10-24"},{"lineNumber":66,"author":{"gitId":"tsinyee"},"content":"    public void sortMemberListByName() {","lastModifiedDate":"2021-10-24"},{"lineNumber":67,"author":{"gitId":"tsinyee"},"content":"        this.persons.sortMembersByName();","lastModifiedDate":"2021-10-24"},{"lineNumber":68,"author":{"gitId":"tsinyee"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":69,"author":{"gitId":"tsinyee"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":70,"author":{"gitId":"tsinyee"},"content":"    /**","lastModifiedDate":"2021-10-24"},{"lineNumber":71,"author":{"gitId":"tsinyee"},"content":"     * Sorts the member list by tag.","lastModifiedDate":"2021-10-24"},{"lineNumber":72,"author":{"gitId":"tsinyee"},"content":"     */","lastModifiedDate":"2021-10-24"},{"lineNumber":73,"author":{"gitId":"tsinyee"},"content":"    public void sortMemberListByTags() {","lastModifiedDate":"2021-10-24"},{"lineNumber":74,"author":{"gitId":"tsinyee"},"content":"        this.persons.sortMembersByTags();","lastModifiedDate":"2021-10-24"},{"lineNumber":75,"author":{"gitId":"tsinyee"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":76,"author":{"gitId":"YoYoCiti"},"content":"    /**","lastModifiedDate":"2021-10-06"},{"lineNumber":77,"author":{"gitId":"Moley456"},"content":"     * Clears the contents of the member list.","lastModifiedDate":"2021-10-10"},{"lineNumber":78,"author":{"gitId":"YoYoCiti"},"content":"     */","lastModifiedDate":"2021-10-06"},{"lineNumber":79,"author":{"gitId":"Moley456"},"content":"    public void resetMemberList() {","lastModifiedDate":"2021-10-10"},{"lineNumber":80,"author":{"gitId":"Moley456"},"content":"        this.persons.resetMembers();","lastModifiedDate":"2021-10-10"},{"lineNumber":81,"author":{"gitId":"YoYoCiti"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":82,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":83,"author":{"gitId":"felix-ong"},"content":"    /**","lastModifiedDate":"2021-10-09"},{"lineNumber":84,"author":{"gitId":"Moley456"},"content":"     * Clears the contents of the facility list.","lastModifiedDate":"2021-10-10"},{"lineNumber":85,"author":{"gitId":"felix-ong"},"content":"     */","lastModifiedDate":"2021-10-09"},{"lineNumber":86,"author":{"gitId":"Moley456"},"content":"    public void resetFacilityList() {","lastModifiedDate":"2021-10-10"},{"lineNumber":87,"author":{"gitId":"Moley456"},"content":"        this.facilities.resetFacilities();","lastModifiedDate":"2021-10-10"},{"lineNumber":88,"author":{"gitId":"felix-ong"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":89,"author":{"gitId":"felix-ong"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":90,"author":{"gitId":"Shruthi0310"},"content":"    /**","lastModifiedDate":"2021-10-21"},{"lineNumber":91,"author":{"gitId":"Shruthi0310"},"content":"     * Resets today\u0027s attendance for all members in list.","lastModifiedDate":"2021-10-21"},{"lineNumber":92,"author":{"gitId":"Shruthi0310"},"content":"     */","lastModifiedDate":"2021-10-21"},{"lineNumber":93,"author":{"gitId":"Shruthi0310"},"content":"    public void resetTodayAttendance() {","lastModifiedDate":"2021-10-21"},{"lineNumber":94,"author":{"gitId":"Shruthi0310"},"content":"        this.persons.resetAttendance();","lastModifiedDate":"2021-10-21"},{"lineNumber":95,"author":{"gitId":"Shruthi0310"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":96,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     * Resets the existing data of this {@code AddressBook} with {@code newData}.","lastModifiedDate":"2017-08-16"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    public void resetData(ReadOnlyAddressBook newData) {","lastModifiedDate":"2016-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        requireNonNull(newData);","lastModifiedDate":"2017-05-15"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        setPersons(newData.getPersonList());","lastModifiedDate":"2018-03-29"},{"lineNumber":103,"author":{"gitId":"Moley456"},"content":"        setFacilities(newData.getFacilityList());","lastModifiedDate":"2021-10-10"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    //// person-level operations","lastModifiedDate":"2016-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":109,"author":{"gitId":"-"},"content":"     * Returns true if a person with the same identity as {@code person} exists in the address book.","lastModifiedDate":"2018-08-06"},{"lineNumber":110,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-06"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        return persons.contains(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":116,"author":{"gitId":"Moley456"},"content":"    /**","lastModifiedDate":"2021-10-10"},{"lineNumber":117,"author":{"gitId":"Moley456"},"content":"     * Returns true if a facility with the same details as {@code facility} exists in the address book.","lastModifiedDate":"2021-10-10"},{"lineNumber":118,"author":{"gitId":"Moley456"},"content":"     */","lastModifiedDate":"2021-10-10"},{"lineNumber":119,"author":{"gitId":"Moley456"},"content":"    public boolean hasFacility(Facility facility) {","lastModifiedDate":"2021-10-10"},{"lineNumber":120,"author":{"gitId":"Moley456"},"content":"        requireNonNull(facility);","lastModifiedDate":"2021-10-10"},{"lineNumber":121,"author":{"gitId":"Moley456"},"content":"        return facilities.contains(facility);","lastModifiedDate":"2021-10-10"},{"lineNumber":122,"author":{"gitId":"Moley456"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":123,"author":{"gitId":"Moley456"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":125,"author":{"gitId":"-"},"content":"     * Adds a person to the address book.","lastModifiedDate":"2016-09-21"},{"lineNumber":126,"author":{"gitId":"-"},"content":"     * The person must not already exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":127,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    public void addPerson(Person p) {","lastModifiedDate":"2018-08-07"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        persons.add(p);","lastModifiedDate":"2018-03-29"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":132,"author":{"gitId":"Shruthi0310"},"content":"    /**","lastModifiedDate":"2021-10-05"},{"lineNumber":133,"author":{"gitId":"Shruthi0310"},"content":"     * Adds a facility to the address book.","lastModifiedDate":"2021-10-05"},{"lineNumber":134,"author":{"gitId":"Shruthi0310"},"content":"     *","lastModifiedDate":"2021-10-05"},{"lineNumber":135,"author":{"gitId":"Shruthi0310"},"content":"     * @param f Facility to be added into address book.","lastModifiedDate":"2021-10-05"},{"lineNumber":136,"author":{"gitId":"Shruthi0310"},"content":"     */","lastModifiedDate":"2021-10-05"},{"lineNumber":137,"author":{"gitId":"Shruthi0310"},"content":"    public void addFacility(Facility f) {","lastModifiedDate":"2021-10-05"},{"lineNumber":138,"author":{"gitId":"Shruthi0310"},"content":"        facilities.add(f);","lastModifiedDate":"2021-10-05"},{"lineNumber":139,"author":{"gitId":"Shruthi0310"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":140,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":141,"author":{"gitId":"Shruthi0310"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":142,"author":{"gitId":"Shruthi0310"},"content":"     * Splits members into different facilities.","lastModifiedDate":"2021-10-12"},{"lineNumber":143,"author":{"gitId":"Shruthi0310"},"content":"     *","lastModifiedDate":"2021-10-12"},{"lineNumber":144,"author":{"gitId":"Shruthi0310"},"content":"     * @param membersFilteredList List of filtered members to be allocated.","lastModifiedDate":"2021-10-12"},{"lineNumber":145,"author":{"gitId":"YoYoCiti"},"content":"     * @return number of members left unallocated, -1 if zero members provided.","lastModifiedDate":"2021-10-26"},{"lineNumber":146,"author":{"gitId":"Shruthi0310"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":147,"author":{"gitId":"YoYoCiti"},"content":"    public int split(FilteredList\u003cPerson\u003e membersFilteredList) {","lastModifiedDate":"2021-10-26"},{"lineNumber":148,"author":{"gitId":"YoYoCiti"},"content":"        int memberCount \u003d membersFilteredList.size();","lastModifiedDate":"2021-10-26"},{"lineNumber":149,"author":{"gitId":"YoYoCiti"},"content":"        int facilityCap \u003d facilities.getTotalCapacity();","lastModifiedDate":"2021-10-26"},{"lineNumber":150,"author":{"gitId":"YoYoCiti"},"content":"        // No members available","lastModifiedDate":"2021-10-26"},{"lineNumber":151,"author":{"gitId":"YoYoCiti"},"content":"        if (memberCount \u003d\u003d 0) {","lastModifiedDate":"2021-10-26"},{"lineNumber":152,"author":{"gitId":"YoYoCiti"},"content":"            return -1;","lastModifiedDate":"2021-10-26"},{"lineNumber":153,"author":{"gitId":"YoYoCiti"},"content":"        }","lastModifiedDate":"2021-10-26"},{"lineNumber":154,"author":{"gitId":"YoYoCiti"},"content":"        // Insufficient capacity","lastModifiedDate":"2021-10-26"},{"lineNumber":155,"author":{"gitId":"YoYoCiti"},"content":"        if (memberCount \u003e facilityCap) {","lastModifiedDate":"2021-10-26"},{"lineNumber":156,"author":{"gitId":"YoYoCiti"},"content":"            return memberCount - facilityCap;","lastModifiedDate":"2021-10-26"},{"lineNumber":157,"author":{"gitId":"YoYoCiti"},"content":"        }","lastModifiedDate":"2021-10-26"},{"lineNumber":158,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":159,"author":{"gitId":"Shruthi0310"},"content":"        facilities.allocateMembersToFacilities(membersFilteredList);","lastModifiedDate":"2021-10-12"},{"lineNumber":160,"author":{"gitId":"YoYoCiti"},"content":"        return 0;","lastModifiedDate":"2021-10-26"},{"lineNumber":161,"author":{"gitId":"Shruthi0310"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":162,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":164,"author":{"gitId":"-"},"content":"     * Replaces the given person {@code target} in the list with {@code editedPerson}.","lastModifiedDate":"2018-01-10"},{"lineNumber":165,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":166,"author":{"gitId":"-"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":167,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        requireNonNull(editedPerson);","lastModifiedDate":"2018-01-10"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        persons.setPerson(target, editedPerson);","lastModifiedDate":"2018-03-29"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":174,"author":{"gitId":"YoYoCiti"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":175,"author":{"gitId":"YoYoCiti"},"content":"     * Replaces the given facility {@code target} in the list with {@code editedFacility}.","lastModifiedDate":"2021-10-12"},{"lineNumber":176,"author":{"gitId":"YoYoCiti"},"content":"     * {@code target} must exist in SportsPA.","lastModifiedDate":"2021-10-12"},{"lineNumber":177,"author":{"gitId":"YoYoCiti"},"content":"     * The facility parameters of {@code editedFacility} must not be the same as another existing facility in SportsPA.","lastModifiedDate":"2021-10-12"},{"lineNumber":178,"author":{"gitId":"YoYoCiti"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":179,"author":{"gitId":"YoYoCiti"},"content":"    public void setFacility(Facility target, Facility editedFacility) {","lastModifiedDate":"2021-10-12"},{"lineNumber":180,"author":{"gitId":"YoYoCiti"},"content":"        requireNonNull(editedFacility);","lastModifiedDate":"2021-10-12"},{"lineNumber":181,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":182,"author":{"gitId":"YoYoCiti"},"content":"        facilities.setFacility(target, editedFacility);","lastModifiedDate":"2021-10-12"},{"lineNumber":183,"author":{"gitId":"YoYoCiti"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":184,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":186,"author":{"gitId":"-"},"content":"     * Removes {@code key} from this {@code AddressBook}.","lastModifiedDate":"2017-08-16"},{"lineNumber":187,"author":{"gitId":"-"},"content":"     * {@code key} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":188,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":189,"author":{"gitId":"-"},"content":"    public void removePerson(Person key) {","lastModifiedDate":"2018-08-07"},{"lineNumber":190,"author":{"gitId":"-"},"content":"        persons.remove(key);","lastModifiedDate":"2018-02-28"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":193,"author":{"gitId":"YoYoCiti"},"content":"    /**","lastModifiedDate":"2021-10-08"},{"lineNumber":194,"author":{"gitId":"YoYoCiti"},"content":"     * Removes {@code key} from SportsPA.","lastModifiedDate":"2021-10-08"},{"lineNumber":195,"author":{"gitId":"YoYoCiti"},"content":"     * {@code key} must exist in SportsPA.","lastModifiedDate":"2021-10-08"},{"lineNumber":196,"author":{"gitId":"YoYoCiti"},"content":"     */","lastModifiedDate":"2021-10-08"},{"lineNumber":197,"author":{"gitId":"YoYoCiti"},"content":"    public void removeFacility(Facility key) {","lastModifiedDate":"2021-10-08"},{"lineNumber":198,"author":{"gitId":"YoYoCiti"},"content":"        facilities.remove(key);","lastModifiedDate":"2021-10-08"},{"lineNumber":199,"author":{"gitId":"YoYoCiti"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":200,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":201,"author":{"gitId":"-"},"content":"    //// util methods","lastModifiedDate":"2016-08-08"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":204,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-08"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        return persons.asUnmodifiableObservableList().size() + \" persons\";","lastModifiedDate":"2018-04-05"},{"lineNumber":206,"author":{"gitId":"-"},"content":"        // TODO: refine later","lastModifiedDate":"2016-08-08"},{"lineNumber":207,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":208,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":210,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":211,"author":{"gitId":"-"},"content":"        return persons.asUnmodifiableObservableList();","lastModifiedDate":"2018-04-05"},{"lineNumber":212,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-01"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-01"},{"lineNumber":214,"author":{"gitId":"Shruthi0310"},"content":"    @Override","lastModifiedDate":"2021-10-05"},{"lineNumber":215,"author":{"gitId":"Shruthi0310"},"content":"    public ObservableList\u003cFacility\u003e getFacilityList() {","lastModifiedDate":"2021-10-05"},{"lineNumber":216,"author":{"gitId":"Shruthi0310"},"content":"        return facilities.getObservableList();","lastModifiedDate":"2021-10-05"},{"lineNumber":217,"author":{"gitId":"Shruthi0310"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":218,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":219,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":220,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-21"},{"lineNumber":221,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-09-21"},{"lineNumber":222,"author":{"gitId":"-"},"content":"                || (other instanceof AddressBook // instanceof handles nulls","lastModifiedDate":"2016-09-21"},{"lineNumber":223,"author":{"gitId":"YoYoCiti"},"content":"                \u0026\u0026 persons.equals(((AddressBook) other).persons)","lastModifiedDate":"2021-10-09"},{"lineNumber":224,"author":{"gitId":"YoYoCiti"},"content":"                \u0026\u0026 facilities.equals(((AddressBook) other).facilities));","lastModifiedDate":"2021-10-09"},{"lineNumber":225,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":227,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":228,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-21"},{"lineNumber":229,"author":{"gitId":"-"},"content":"        return persons.hashCode();","lastModifiedDate":"2018-03-29"},{"lineNumber":230,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":231,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"YoYoCiti":47,"Shruthi0310":34,"Moley456":16,"-":117,"tsinyee":13,"felix-ong":4}},{"path":"src/main/java/seedu/address/model/Model.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"Shruthi0310"},"content":"import java.util.List;","lastModifiedDate":"2021-10-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":9,"author":{"gitId":"Shruthi0310"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-10-21"},{"lineNumber":10,"author":{"gitId":"YoYoCiti"},"content":"import seedu.address.model.alias.Alias;","lastModifiedDate":"2021-10-18"},{"lineNumber":11,"author":{"gitId":"YoYoCiti"},"content":"import seedu.address.model.alias.AliasMap;","lastModifiedDate":"2021-10-18"},{"lineNumber":12,"author":{"gitId":"YoYoCiti"},"content":"import seedu.address.model.alias.CommandWord;","lastModifiedDate":"2021-10-18"},{"lineNumber":13,"author":{"gitId":"YoYoCiti"},"content":"import seedu.address.model.alias.Shortcut;","lastModifiedDate":"2021-10-18"},{"lineNumber":14,"author":{"gitId":"YoYoCiti"},"content":"import seedu.address.model.facility.Facility;","lastModifiedDate":"2021-09-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":16,"author":{"gitId":"tsinyee"},"content":"import seedu.address.model.sort.SortOrder;","lastModifiedDate":"2021-10-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":" * The API of the Model component.","lastModifiedDate":"2016-09-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"public interface Model {","lastModifiedDate":"2016-09-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /** {@code Predicate} that always evaluate to true */","lastModifiedDate":"2017-08-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    Predicate\u003cPerson\u003e PREDICATE_SHOW_ALL_PERSONS \u003d unused -\u003e true;","lastModifiedDate":"2018-01-10"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":26,"author":{"gitId":"YoYoCiti"},"content":"    /** {@code Predicate} that always evaluates to true */","lastModifiedDate":"2021-09-29"},{"lineNumber":27,"author":{"gitId":"YoYoCiti"},"content":"    Predicate\u003cFacility\u003e PREDICATE_SHOW_ALL_FACILITIES \u003d unused -\u003e true;","lastModifiedDate":"2021-09-29"},{"lineNumber":28,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Replaces user prefs data with the data in {@code userPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    void setUserPrefs(ReadOnlyUserPrefs userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Returns the user prefs.","lastModifiedDate":"2018-11-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    ReadOnlyUserPrefs getUserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    void setAddressBookFilePath(Path addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"YoYoCiti"},"content":"    /**","lastModifiedDate":"2021-10-17"},{"lineNumber":60,"author":{"gitId":"YoYoCiti"},"content":"     * Returns the user pref\u0027s aliases.","lastModifiedDate":"2021-10-17"},{"lineNumber":61,"author":{"gitId":"YoYoCiti"},"content":"     */","lastModifiedDate":"2021-10-17"},{"lineNumber":62,"author":{"gitId":"YoYoCiti"},"content":"    AliasMap getAliases();","lastModifiedDate":"2021-10-18"},{"lineNumber":63,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":64,"author":{"gitId":"YoYoCiti"},"content":"    /**","lastModifiedDate":"2021-10-17"},{"lineNumber":65,"author":{"gitId":"YoYoCiti"},"content":"     * Adds the given alias to user prefs.","lastModifiedDate":"2021-10-17"},{"lineNumber":66,"author":{"gitId":"YoYoCiti"},"content":"     */","lastModifiedDate":"2021-10-17"},{"lineNumber":67,"author":{"gitId":"YoYoCiti"},"content":"    void addAlias(Alias alias);","lastModifiedDate":"2021-10-18"},{"lineNumber":68,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":69,"author":{"gitId":"YoYoCiti"},"content":"    /**","lastModifiedDate":"2021-10-17"},{"lineNumber":70,"author":{"gitId":"YoYoCiti"},"content":"     * Removes the given alias from user prefs.","lastModifiedDate":"2021-10-17"},{"lineNumber":71,"author":{"gitId":"YoYoCiti"},"content":"     *","lastModifiedDate":"2021-10-17"},{"lineNumber":72,"author":{"gitId":"YoYoCiti"},"content":"     * @param shortcut the shortcut to remove.","lastModifiedDate":"2021-10-18"},{"lineNumber":73,"author":{"gitId":"YoYoCiti"},"content":"     * @return commandWord associated with shortcut, null if alias does not exist.","lastModifiedDate":"2021-10-18"},{"lineNumber":74,"author":{"gitId":"YoYoCiti"},"content":"     */","lastModifiedDate":"2021-10-17"},{"lineNumber":75,"author":{"gitId":"YoYoCiti"},"content":"    CommandWord removeAlias(Shortcut shortcut);","lastModifiedDate":"2021-10-18"},{"lineNumber":76,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * Replaces address book data with the data in {@code addressBook}.","lastModifiedDate":"2018-11-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    void setAddressBook(ReadOnlyAddressBook addressBook);","lastModifiedDate":"2018-11-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    /** Returns the AddressBook */","lastModifiedDate":"2016-09-25"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    ReadOnlyAddressBook getAddressBook();","lastModifiedDate":"2016-09-25"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * Returns true if a person with the same identity as {@code person} exists in the address book.","lastModifiedDate":"2018-08-06"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    boolean hasPerson(Person person);","lastModifiedDate":"2018-08-06"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":90,"author":{"gitId":"YoYoCiti"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":91,"author":{"gitId":"YoYoCiti"},"content":"     * Returns true if a facility with the same parameters as {@code facility} exists in SportsPA.","lastModifiedDate":"2021-10-12"},{"lineNumber":92,"author":{"gitId":"YoYoCiti"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":93,"author":{"gitId":"YoYoCiti"},"content":"    boolean hasFacility(Facility facility);","lastModifiedDate":"2021-10-12"},{"lineNumber":94,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":95,"author":{"gitId":"Shruthi0310"},"content":"    /**","lastModifiedDate":"2021-10-21"},{"lineNumber":96,"author":{"gitId":"Shruthi0310"},"content":"     * Returns true if all {@code indices} is within the member list.","lastModifiedDate":"2021-10-21"},{"lineNumber":97,"author":{"gitId":"Shruthi0310"},"content":"     */","lastModifiedDate":"2021-10-21"},{"lineNumber":98,"author":{"gitId":"Shruthi0310"},"content":"    boolean isWithinListIndex(List\u003cIndex\u003e indices);","lastModifiedDate":"2021-10-21"},{"lineNumber":99,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":100,"author":{"gitId":"Shruthi0310"},"content":"    /**","lastModifiedDate":"2021-10-21"},{"lineNumber":101,"author":{"gitId":"Shruthi0310"},"content":"     * Marks attendance of members at specified {@code indices} as present.","lastModifiedDate":"2021-10-21"},{"lineNumber":102,"author":{"gitId":"Shruthi0310"},"content":"     */","lastModifiedDate":"2021-10-21"},{"lineNumber":103,"author":{"gitId":"Shruthi0310"},"content":"    void markMembersAttendance(List\u003cIndex\u003e indices);","lastModifiedDate":"2021-10-21"},{"lineNumber":104,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":105,"author":{"gitId":"Shruthi0310"},"content":"    /**","lastModifiedDate":"2021-10-21"},{"lineNumber":106,"author":{"gitId":"Shruthi0310"},"content":"     * Marks attendance of specified {@code member} as present.","lastModifiedDate":"2021-10-21"},{"lineNumber":107,"author":{"gitId":"Shruthi0310"},"content":"     */","lastModifiedDate":"2021-10-21"},{"lineNumber":108,"author":{"gitId":"Shruthi0310"},"content":"    void markOneMemberAttendance(Person member);","lastModifiedDate":"2021-10-21"},{"lineNumber":109,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":110,"author":{"gitId":"Shruthi0310"},"content":"    /**","lastModifiedDate":"2021-10-21"},{"lineNumber":111,"author":{"gitId":"Shruthi0310"},"content":"     * Unmarks attendance of members at specified {@code indices} as absent.","lastModifiedDate":"2021-10-21"},{"lineNumber":112,"author":{"gitId":"Shruthi0310"},"content":"     */","lastModifiedDate":"2021-10-21"},{"lineNumber":113,"author":{"gitId":"Shruthi0310"},"content":"    void unmarkMembersAttendance(List\u003cIndex\u003e indices);","lastModifiedDate":"2021-10-21"},{"lineNumber":114,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":115,"author":{"gitId":"Shruthi0310"},"content":"    /**","lastModifiedDate":"2021-10-21"},{"lineNumber":116,"author":{"gitId":"Shruthi0310"},"content":"     * Unmarks attendance of specified {@code member} as absent.","lastModifiedDate":"2021-10-21"},{"lineNumber":117,"author":{"gitId":"Shruthi0310"},"content":"     */","lastModifiedDate":"2021-10-21"},{"lineNumber":118,"author":{"gitId":"Shruthi0310"},"content":"    void unmarkOneMemberAttendance(Person member);","lastModifiedDate":"2021-10-21"},{"lineNumber":119,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":120,"author":{"gitId":"Shruthi0310"},"content":"    /**","lastModifiedDate":"2021-10-21"},{"lineNumber":121,"author":{"gitId":"Shruthi0310"},"content":"     * Resets today\u0027s attendance for all members.","lastModifiedDate":"2021-10-21"},{"lineNumber":122,"author":{"gitId":"Shruthi0310"},"content":"     */","lastModifiedDate":"2021-10-21"},{"lineNumber":123,"author":{"gitId":"Shruthi0310"},"content":"    void resetTodayAttendance();","lastModifiedDate":"2021-10-21"},{"lineNumber":124,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":126,"author":{"gitId":"-"},"content":"     * Deletes the given person.","lastModifiedDate":"2018-08-07"},{"lineNumber":127,"author":{"gitId":"-"},"content":"     * The person must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":128,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    void deletePerson(Person target);","lastModifiedDate":"2018-08-07"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":131,"author":{"gitId":"YoYoCiti"},"content":"    /**","lastModifiedDate":"2021-10-08"},{"lineNumber":132,"author":{"gitId":"YoYoCiti"},"content":"     * Deletes the given facility.","lastModifiedDate":"2021-10-08"},{"lineNumber":133,"author":{"gitId":"YoYoCiti"},"content":"     * The facility must exist in SportsPA.","lastModifiedDate":"2021-10-08"},{"lineNumber":134,"author":{"gitId":"YoYoCiti"},"content":"     */","lastModifiedDate":"2021-10-08"},{"lineNumber":135,"author":{"gitId":"YoYoCiti"},"content":"    void deleteFacility(Facility target);","lastModifiedDate":"2021-10-08"},{"lineNumber":136,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":138,"author":{"gitId":"-"},"content":"     * Adds the given person.","lastModifiedDate":"2018-08-07"},{"lineNumber":139,"author":{"gitId":"-"},"content":"     * {@code person} must not already exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    void addPerson(Person person);","lastModifiedDate":"2018-08-07"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":143,"author":{"gitId":"Shruthi0310"},"content":"    /**","lastModifiedDate":"2021-10-05"},{"lineNumber":144,"author":{"gitId":"Shruthi0310"},"content":"     * Adds the given facility.","lastModifiedDate":"2021-10-05"},{"lineNumber":145,"author":{"gitId":"Shruthi0310"},"content":"     *","lastModifiedDate":"2021-10-05"},{"lineNumber":146,"author":{"gitId":"Shruthi0310"},"content":"     * @param facility Facility to be added.","lastModifiedDate":"2021-10-05"},{"lineNumber":147,"author":{"gitId":"Shruthi0310"},"content":"     */","lastModifiedDate":"2021-10-05"},{"lineNumber":148,"author":{"gitId":"Shruthi0310"},"content":"    void addFacility(Facility facility);","lastModifiedDate":"2021-10-05"},{"lineNumber":149,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":150,"author":{"gitId":"YoYoCiti"},"content":"    /**","lastModifiedDate":"2021-10-26"},{"lineNumber":151,"author":{"gitId":"YoYoCiti"},"content":"     * Allocates members into facilities.","lastModifiedDate":"2021-10-26"},{"lineNumber":152,"author":{"gitId":"YoYoCiti"},"content":"     *","lastModifiedDate":"2021-10-26"},{"lineNumber":153,"author":{"gitId":"YoYoCiti"},"content":"     * @param predicate the condition in which specifies the members to allocate.","lastModifiedDate":"2021-10-26"},{"lineNumber":154,"author":{"gitId":"YoYoCiti"},"content":"     * @return number of members left unallocated, -1 if zero members to allocate.","lastModifiedDate":"2021-10-26"},{"lineNumber":155,"author":{"gitId":"YoYoCiti"},"content":"     */","lastModifiedDate":"2021-10-26"},{"lineNumber":156,"author":{"gitId":"YoYoCiti"},"content":"    int split(Predicate\u003cPerson\u003e predicate);","lastModifiedDate":"2021-10-26"},{"lineNumber":157,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":159,"author":{"gitId":"-"},"content":"     * Replaces the given person {@code target} with {@code editedPerson}.","lastModifiedDate":"2017-06-07"},{"lineNumber":160,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":161,"author":{"gitId":"-"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":162,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    void setPerson(Person target, Person editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":165,"author":{"gitId":"YoYoCiti"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":166,"author":{"gitId":"YoYoCiti"},"content":"     * Replaces the given facility {@code target} with {@code editedFacility}.","lastModifiedDate":"2021-10-12"},{"lineNumber":167,"author":{"gitId":"YoYoCiti"},"content":"     * {@code target} must exist in SportsPA.","lastModifiedDate":"2021-10-12"},{"lineNumber":168,"author":{"gitId":"YoYoCiti"},"content":"     * The facility parameters of {@code editedFacility} must not be the same as another existing facility in SportsPA.","lastModifiedDate":"2021-10-12"},{"lineNumber":169,"author":{"gitId":"YoYoCiti"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":170,"author":{"gitId":"YoYoCiti"},"content":"    void setFacility(Facility facility, Facility editedFacility);","lastModifiedDate":"2021-10-12"},{"lineNumber":171,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    /** Returns an unmodifiable view of the filtered person list */","lastModifiedDate":"2017-09-01"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    ObservableList\u003cPerson\u003e getFilteredPersonList();","lastModifiedDate":"2018-01-10"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":175,"author":{"gitId":"Shruthi0310"},"content":"    /**","lastModifiedDate":"2021-10-05"},{"lineNumber":176,"author":{"gitId":"Shruthi0310"},"content":"     * Returns a view of the filtered facility list.","lastModifiedDate":"2021-10-05"},{"lineNumber":177,"author":{"gitId":"Shruthi0310"},"content":"     *","lastModifiedDate":"2021-10-05"},{"lineNumber":178,"author":{"gitId":"Shruthi0310"},"content":"     * @return ObservableList with filtered facilities.","lastModifiedDate":"2021-10-05"},{"lineNumber":179,"author":{"gitId":"Shruthi0310"},"content":"     */","lastModifiedDate":"2021-10-05"},{"lineNumber":180,"author":{"gitId":"Shruthi0310"},"content":"    ObservableList\u003cFacility\u003e getFilteredFacilityList();","lastModifiedDate":"2021-10-05"},{"lineNumber":181,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":182,"author":{"gitId":"Moley456"},"content":"    /**","lastModifiedDate":"2021-10-23"},{"lineNumber":183,"author":{"gitId":"Moley456"},"content":"     * Returns a person from the address book that has the same name as the given {@code person}.","lastModifiedDate":"2021-10-23"},{"lineNumber":184,"author":{"gitId":"Moley456"},"content":"     *","lastModifiedDate":"2021-10-23"},{"lineNumber":185,"author":{"gitId":"Moley456"},"content":"     * @param person the given person","lastModifiedDate":"2021-10-23"},{"lineNumber":186,"author":{"gitId":"Moley456"},"content":"     * @return a person that has the same name.","lastModifiedDate":"2021-10-23"},{"lineNumber":187,"author":{"gitId":"Moley456"},"content":"     */","lastModifiedDate":"2021-10-23"},{"lineNumber":188,"author":{"gitId":"Moley456"},"content":"    Person getSamePerson(Person person);","lastModifiedDate":"2021-10-22"},{"lineNumber":189,"author":{"gitId":"Moley456"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":190,"author":{"gitId":"tsinyee"},"content":"    /**","lastModifiedDate":"2021-10-18"},{"lineNumber":191,"author":{"gitId":"tsinyee"},"content":"     * Sorts the member list in the specified order.","lastModifiedDate":"2021-10-24"},{"lineNumber":192,"author":{"gitId":"tsinyee"},"content":"     */","lastModifiedDate":"2021-10-18"},{"lineNumber":193,"author":{"gitId":"tsinyee"},"content":"    void sortMemberList(SortOrder sortOrder);","lastModifiedDate":"2021-10-24"},{"lineNumber":194,"author":{"gitId":"tsinyee"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":195,"author":{"gitId":"YoYoCiti"},"content":"    /**","lastModifiedDate":"2021-10-06"},{"lineNumber":196,"author":{"gitId":"Moley456"},"content":"     * Clears the contents of the member list.","lastModifiedDate":"2021-10-10"},{"lineNumber":197,"author":{"gitId":"YoYoCiti"},"content":"     */","lastModifiedDate":"2021-10-06"},{"lineNumber":198,"author":{"gitId":"Moley456"},"content":"    void resetMemberList();","lastModifiedDate":"2021-10-10"},{"lineNumber":199,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":200,"author":{"gitId":"felix-ong"},"content":"    /**","lastModifiedDate":"2021-10-09"},{"lineNumber":201,"author":{"gitId":"Moley456"},"content":"     * Clears the contents of the facility list.","lastModifiedDate":"2021-10-10"},{"lineNumber":202,"author":{"gitId":"felix-ong"},"content":"     */","lastModifiedDate":"2021-10-09"},{"lineNumber":203,"author":{"gitId":"Moley456"},"content":"    void resetFacilityList();","lastModifiedDate":"2021-10-10"},{"lineNumber":204,"author":{"gitId":"felix-ong"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":205,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-05"},{"lineNumber":206,"author":{"gitId":"-"},"content":"     * Updates the filter of the filtered person list to filter by the given {@code predicate}.","lastModifiedDate":"2017-08-05"},{"lineNumber":207,"author":{"gitId":"-"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2017-08-05"},{"lineNumber":208,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-05"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate);","lastModifiedDate":"2018-01-10"},{"lineNumber":210,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":211,"author":{"gitId":"YoYoCiti"},"content":"    /**","lastModifiedDate":"2021-09-29"},{"lineNumber":212,"author":{"gitId":"YoYoCiti"},"content":"     * Updates the filter of the filtered facility list to filter by the given {@code predicate}.","lastModifiedDate":"2021-09-29"},{"lineNumber":213,"author":{"gitId":"YoYoCiti"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2021-09-29"},{"lineNumber":214,"author":{"gitId":"YoYoCiti"},"content":"     */","lastModifiedDate":"2021-09-29"},{"lineNumber":215,"author":{"gitId":"YoYoCiti"},"content":"    void updateFilteredFacilityList(Predicate\u003cFacility\u003e predicate);","lastModifiedDate":"2021-09-29"},{"lineNumber":216,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"YoYoCiti":60,"Shruthi0310":47,"Moley456":12,"-":88,"tsinyee":6,"felix-ong":3}},{"path":"src/main/java/seedu/address/model/ModelManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-08-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2017-05-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"Shruthi0310"},"content":"import java.util.List;","lastModifiedDate":"2021-10-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import javafx.collections.transformation.FilteredList;","lastModifiedDate":"2016-08-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":15,"author":{"gitId":"Shruthi0310"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-10-21"},{"lineNumber":16,"author":{"gitId":"YoYoCiti"},"content":"import seedu.address.model.alias.Alias;","lastModifiedDate":"2021-10-18"},{"lineNumber":17,"author":{"gitId":"YoYoCiti"},"content":"import seedu.address.model.alias.AliasMap;","lastModifiedDate":"2021-10-18"},{"lineNumber":18,"author":{"gitId":"YoYoCiti"},"content":"import seedu.address.model.alias.CommandWord;","lastModifiedDate":"2021-10-18"},{"lineNumber":19,"author":{"gitId":"YoYoCiti"},"content":"import seedu.address.model.alias.Shortcut;","lastModifiedDate":"2021-10-18"},{"lineNumber":20,"author":{"gitId":"YoYoCiti"},"content":"import seedu.address.model.facility.Facility;","lastModifiedDate":"2021-09-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":22,"author":{"gitId":"tsinyee"},"content":"import seedu.address.model.sort.SortOrder;","lastModifiedDate":"2021-10-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":" * Represents the in-memory model of the address book data.","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"public class ModelManager implements Model {","lastModifiedDate":"2018-12-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(ModelManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private final AddressBook addressBook;","lastModifiedDate":"2019-01-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private final UserPrefs userPrefs;","lastModifiedDate":"2018-12-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private final FilteredList\u003cPerson\u003e filteredPersons;","lastModifiedDate":"2018-01-10"},{"lineNumber":34,"author":{"gitId":"Shruthi0310"},"content":"    private final FilteredList\u003cFacility\u003e filteredFacilities;","lastModifiedDate":"2021-10-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Initializes a ModelManager with the given addressBook and userPrefs.","lastModifiedDate":"2016-12-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public ModelManager(ReadOnlyAddressBook addressBook, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        super();","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        requireAllNonNull(addressBook, userPrefs);","lastModifiedDate":"2017-05-19"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        logger.fine(\"Initializing with address book: \" + addressBook + \" and user prefs \" + userPrefs);","lastModifiedDate":"2016-12-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        this.addressBook \u003d new AddressBook(addressBook);","lastModifiedDate":"2019-01-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        this.userPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        filteredPersons \u003d new FilteredList\u003c\u003e(this.addressBook.getPersonList());","lastModifiedDate":"2019-01-25"},{"lineNumber":48,"author":{"gitId":"Shruthi0310"},"content":"        filteredFacilities \u003d new FilteredList\u003c\u003e(this.addressBook.getFacilityList());","lastModifiedDate":"2021-10-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public ModelManager() {","lastModifiedDate":"2016-09-22"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        this(new AddressBook(), new UserPrefs());","lastModifiedDate":"2016-09-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        requireNonNull(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        this.userPrefs.resetData(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        return userPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        return userPrefs.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        return userPrefs.getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-11-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        requireNonNull(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":90,"author":{"gitId":"YoYoCiti"},"content":"    @Override","lastModifiedDate":"2021-10-17"},{"lineNumber":91,"author":{"gitId":"YoYoCiti"},"content":"    public AliasMap getAliases() {","lastModifiedDate":"2021-10-18"},{"lineNumber":92,"author":{"gitId":"YoYoCiti"},"content":"        return userPrefs.getAliases();","lastModifiedDate":"2021-10-17"},{"lineNumber":93,"author":{"gitId":"YoYoCiti"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":94,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":95,"author":{"gitId":"YoYoCiti"},"content":"    @Override","lastModifiedDate":"2021-10-17"},{"lineNumber":96,"author":{"gitId":"YoYoCiti"},"content":"    public void addAlias(Alias alias) {","lastModifiedDate":"2021-10-18"},{"lineNumber":97,"author":{"gitId":"YoYoCiti"},"content":"        requireNonNull(alias);","lastModifiedDate":"2021-10-18"},{"lineNumber":98,"author":{"gitId":"YoYoCiti"},"content":"        userPrefs.addAlias(alias);","lastModifiedDate":"2021-10-18"},{"lineNumber":99,"author":{"gitId":"YoYoCiti"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":100,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":101,"author":{"gitId":"YoYoCiti"},"content":"    @Override","lastModifiedDate":"2021-10-17"},{"lineNumber":102,"author":{"gitId":"YoYoCiti"},"content":"    public CommandWord removeAlias(Shortcut shortcut) {","lastModifiedDate":"2021-10-18"},{"lineNumber":103,"author":{"gitId":"YoYoCiti"},"content":"        requireNonNull(shortcut);","lastModifiedDate":"2021-10-18"},{"lineNumber":104,"author":{"gitId":"YoYoCiti"},"content":"        return userPrefs.removeAlias(shortcut);","lastModifiedDate":"2021-10-18"},{"lineNumber":105,"author":{"gitId":"YoYoCiti"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":106,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d AddressBook \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    public void setAddressBook(ReadOnlyAddressBook addressBook) {","lastModifiedDate":"2018-11-27"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        this.addressBook.resetData(addressBook);","lastModifiedDate":"2019-01-25"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2016-09-21"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        return addressBook;","lastModifiedDate":"2019-01-25"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-15"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        return addressBook.hasPerson(person);","lastModifiedDate":"2019-01-25"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":125,"author":{"gitId":"YoYoCiti"},"content":"    @Override","lastModifiedDate":"2021-10-12"},{"lineNumber":126,"author":{"gitId":"YoYoCiti"},"content":"    public boolean hasFacility(Facility facility) {","lastModifiedDate":"2021-10-12"},{"lineNumber":127,"author":{"gitId":"YoYoCiti"},"content":"        requireNonNull(facility);","lastModifiedDate":"2021-10-12"},{"lineNumber":128,"author":{"gitId":"YoYoCiti"},"content":"        return addressBook.hasFacility(facility);","lastModifiedDate":"2021-10-12"},{"lineNumber":129,"author":{"gitId":"YoYoCiti"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":130,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":131,"author":{"gitId":"Shruthi0310"},"content":"    @Override","lastModifiedDate":"2021-10-21"},{"lineNumber":132,"author":{"gitId":"Shruthi0310"},"content":"    public boolean isWithinListIndex(List\u003cIndex\u003e indices) {","lastModifiedDate":"2021-10-21"},{"lineNumber":133,"author":{"gitId":"Shruthi0310"},"content":"        for (Index i : indices) {","lastModifiedDate":"2021-10-21"},{"lineNumber":134,"author":{"gitId":"Shruthi0310"},"content":"            if (i.getZeroBased() \u003e\u003d getFilteredPersonList().size()) {","lastModifiedDate":"2021-10-21"},{"lineNumber":135,"author":{"gitId":"Shruthi0310"},"content":"                return false;","lastModifiedDate":"2021-10-21"},{"lineNumber":136,"author":{"gitId":"Shruthi0310"},"content":"            }","lastModifiedDate":"2021-10-21"},{"lineNumber":137,"author":{"gitId":"Shruthi0310"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":138,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":139,"author":{"gitId":"Shruthi0310"},"content":"        return true;","lastModifiedDate":"2021-10-21"},{"lineNumber":140,"author":{"gitId":"Shruthi0310"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":141,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":142,"author":{"gitId":"Shruthi0310"},"content":"    @Override","lastModifiedDate":"2021-10-21"},{"lineNumber":143,"author":{"gitId":"Shruthi0310"},"content":"    public void markMembersAttendance(List\u003cIndex\u003e indices) {","lastModifiedDate":"2021-10-21"},{"lineNumber":144,"author":{"gitId":"Shruthi0310"},"content":"        for (Index i : indices) {","lastModifiedDate":"2021-10-21"},{"lineNumber":145,"author":{"gitId":"Shruthi0310"},"content":"            Person person \u003d filteredPersons.get(i.getZeroBased());","lastModifiedDate":"2021-10-21"},{"lineNumber":146,"author":{"gitId":"Shruthi0310"},"content":"            markOneMemberAttendance(person);","lastModifiedDate":"2021-10-21"},{"lineNumber":147,"author":{"gitId":"Shruthi0310"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":148,"author":{"gitId":"Shruthi0310"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":149,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":150,"author":{"gitId":"Shruthi0310"},"content":"    @Override","lastModifiedDate":"2021-10-21"},{"lineNumber":151,"author":{"gitId":"Shruthi0310"},"content":"    public void markOneMemberAttendance(Person person) {","lastModifiedDate":"2021-10-21"},{"lineNumber":152,"author":{"gitId":"Shruthi0310"},"content":"        Person toEdit \u003d person;","lastModifiedDate":"2021-10-21"},{"lineNumber":153,"author":{"gitId":"Shruthi0310"},"content":"        toEdit.setPresent();","lastModifiedDate":"2021-10-21"},{"lineNumber":154,"author":{"gitId":"Shruthi0310"},"content":"        setPerson(person, toEdit);","lastModifiedDate":"2021-10-21"},{"lineNumber":155,"author":{"gitId":"Shruthi0310"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":156,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":157,"author":{"gitId":"Shruthi0310"},"content":"    @Override","lastModifiedDate":"2021-10-21"},{"lineNumber":158,"author":{"gitId":"Shruthi0310"},"content":"    public void unmarkMembersAttendance(List\u003cIndex\u003e indices) {","lastModifiedDate":"2021-10-21"},{"lineNumber":159,"author":{"gitId":"Shruthi0310"},"content":"        for (Index i : indices) {","lastModifiedDate":"2021-10-21"},{"lineNumber":160,"author":{"gitId":"Shruthi0310"},"content":"            Person person \u003d filteredPersons.get(i.getZeroBased());","lastModifiedDate":"2021-10-21"},{"lineNumber":161,"author":{"gitId":"Shruthi0310"},"content":"            unmarkOneMemberAttendance(person);","lastModifiedDate":"2021-10-21"},{"lineNumber":162,"author":{"gitId":"Shruthi0310"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":163,"author":{"gitId":"Shruthi0310"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":164,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":165,"author":{"gitId":"Shruthi0310"},"content":"    @Override","lastModifiedDate":"2021-10-21"},{"lineNumber":166,"author":{"gitId":"Shruthi0310"},"content":"    public void unmarkOneMemberAttendance(Person person) {","lastModifiedDate":"2021-10-21"},{"lineNumber":167,"author":{"gitId":"Shruthi0310"},"content":"        Person toEdit \u003d person;","lastModifiedDate":"2021-10-21"},{"lineNumber":168,"author":{"gitId":"Shruthi0310"},"content":"        toEdit.setNotPresent();","lastModifiedDate":"2021-10-21"},{"lineNumber":169,"author":{"gitId":"Shruthi0310"},"content":"        setPerson(person, toEdit);","lastModifiedDate":"2021-10-21"},{"lineNumber":170,"author":{"gitId":"Shruthi0310"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":171,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":172,"author":{"gitId":"Shruthi0310"},"content":"    @Override","lastModifiedDate":"2021-10-21"},{"lineNumber":173,"author":{"gitId":"Shruthi0310"},"content":"    public void resetTodayAttendance() {","lastModifiedDate":"2021-10-21"},{"lineNumber":174,"author":{"gitId":"Shruthi0310"},"content":"        addressBook.resetTodayAttendance();","lastModifiedDate":"2021-10-21"},{"lineNumber":175,"author":{"gitId":"Shruthi0310"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":176,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    public void deletePerson(Person target) {","lastModifiedDate":"2018-08-15"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        addressBook.removePerson(target);","lastModifiedDate":"2019-01-25"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":182,"author":{"gitId":"YoYoCiti"},"content":"    @Override","lastModifiedDate":"2021-10-08"},{"lineNumber":183,"author":{"gitId":"YoYoCiti"},"content":"    public void deleteFacility(Facility target) {","lastModifiedDate":"2021-10-08"},{"lineNumber":184,"author":{"gitId":"YoYoCiti"},"content":"        addressBook.removeFacility(target);","lastModifiedDate":"2021-10-08"},{"lineNumber":185,"author":{"gitId":"YoYoCiti"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":186,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":187,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":188,"author":{"gitId":"-"},"content":"    public void addPerson(Person person) {","lastModifiedDate":"2018-08-15"},{"lineNumber":189,"author":{"gitId":"-"},"content":"        addressBook.addPerson(person);","lastModifiedDate":"2019-01-25"},{"lineNumber":190,"author":{"gitId":"-"},"content":"        updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-26"},{"lineNumber":193,"author":{"gitId":"Shruthi0310"},"content":"    @Override","lastModifiedDate":"2021-10-05"},{"lineNumber":194,"author":{"gitId":"Shruthi0310"},"content":"    public void addFacility(Facility facility) {","lastModifiedDate":"2021-10-05"},{"lineNumber":195,"author":{"gitId":"Shruthi0310"},"content":"        addressBook.addFacility(facility);","lastModifiedDate":"2021-10-05"},{"lineNumber":196,"author":{"gitId":"Shruthi0310"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":197,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":198,"author":{"gitId":"Shruthi0310"},"content":"    @Override","lastModifiedDate":"2021-10-12"},{"lineNumber":199,"author":{"gitId":"YoYoCiti"},"content":"    public int split(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2021-10-26"},{"lineNumber":200,"author":{"gitId":"Shruthi0310"},"content":"        FilteredList\u003cPerson\u003e toAllocate \u003d new FilteredList\u003cPerson\u003e(addressBook.getPersonList());","lastModifiedDate":"2021-10-12"},{"lineNumber":201,"author":{"gitId":"Shruthi0310"},"content":"        toAllocate.setPredicate(predicate);","lastModifiedDate":"2021-10-12"},{"lineNumber":202,"author":{"gitId":"YoYoCiti"},"content":"        return addressBook.split(toAllocate);","lastModifiedDate":"2021-10-26"},{"lineNumber":203,"author":{"gitId":"Shruthi0310"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":204,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":205,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-13"},{"lineNumber":206,"author":{"gitId":"-"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":207,"author":{"gitId":"-"},"content":"        requireAllNonNull(target, editedPerson);","lastModifiedDate":"2017-06-07"},{"lineNumber":208,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":209,"author":{"gitId":"-"},"content":"        addressBook.setPerson(target, editedPerson);","lastModifiedDate":"2019-01-25"},{"lineNumber":210,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":211,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":212,"author":{"gitId":"YoYoCiti"},"content":"    @Override","lastModifiedDate":"2021-10-12"},{"lineNumber":213,"author":{"gitId":"YoYoCiti"},"content":"    public void setFacility(Facility target, Facility editedFacility) {","lastModifiedDate":"2021-10-12"},{"lineNumber":214,"author":{"gitId":"YoYoCiti"},"content":"        requireAllNonNull(target, editedFacility);","lastModifiedDate":"2021-10-12"},{"lineNumber":215,"author":{"gitId":"YoYoCiti"},"content":"        addressBook.setFacility(target, editedFacility);","lastModifiedDate":"2021-10-12"},{"lineNumber":216,"author":{"gitId":"YoYoCiti"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":217,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":218,"author":{"gitId":"Moley456"},"content":"    @Override","lastModifiedDate":"2021-10-22"},{"lineNumber":219,"author":{"gitId":"Moley456"},"content":"    public Person getSamePerson(Person toFind) {","lastModifiedDate":"2021-10-22"},{"lineNumber":220,"author":{"gitId":"Moley456"},"content":"        requireNonNull(toFind);","lastModifiedDate":"2021-10-23"},{"lineNumber":221,"author":{"gitId":"Moley456"},"content":"        return addressBook.getPersonList()","lastModifiedDate":"2021-10-22"},{"lineNumber":222,"author":{"gitId":"Moley456"},"content":"                .stream()","lastModifiedDate":"2021-10-22"},{"lineNumber":223,"author":{"gitId":"Moley456"},"content":"                .filter(person -\u003e person.isSamePerson(toFind))","lastModifiedDate":"2021-10-22"},{"lineNumber":224,"author":{"gitId":"Moley456"},"content":"                .findAny()","lastModifiedDate":"2021-10-22"},{"lineNumber":225,"author":{"gitId":"Moley456"},"content":"                .orElse(null);","lastModifiedDate":"2021-10-22"},{"lineNumber":226,"author":{"gitId":"Moley456"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":227,"author":{"gitId":"Moley456"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":228,"author":{"gitId":"tsinyee"},"content":"    @Override","lastModifiedDate":"2021-10-18"},{"lineNumber":229,"author":{"gitId":"tsinyee"},"content":"    public void sortMemberList(SortOrder sortOrder) {","lastModifiedDate":"2021-10-24"},{"lineNumber":230,"author":{"gitId":"tsinyee"},"content":"        requireNonNull(sortOrder);","lastModifiedDate":"2021-10-24"},{"lineNumber":231,"author":{"gitId":"tsinyee"},"content":"        String order \u003d sortOrder.toString();","lastModifiedDate":"2021-10-24"},{"lineNumber":232,"author":{"gitId":"tsinyee"},"content":"        switch (order) {","lastModifiedDate":"2021-10-24"},{"lineNumber":233,"author":{"gitId":"tsinyee"},"content":"        case \"name\":","lastModifiedDate":"2021-10-24"},{"lineNumber":234,"author":{"gitId":"tsinyee"},"content":"            sortMemberListByName();","lastModifiedDate":"2021-10-24"},{"lineNumber":235,"author":{"gitId":"tsinyee"},"content":"            break;","lastModifiedDate":"2021-10-24"},{"lineNumber":236,"author":{"gitId":"tsinyee"},"content":"        case \"tag\":","lastModifiedDate":"2021-10-24"},{"lineNumber":237,"author":{"gitId":"tsinyee"},"content":"            sortMemberListByTags();","lastModifiedDate":"2021-10-24"},{"lineNumber":238,"author":{"gitId":"tsinyee"},"content":"            break;","lastModifiedDate":"2021-10-24"},{"lineNumber":239,"author":{"gitId":"tsinyee"},"content":"        default:","lastModifiedDate":"2021-10-24"},{"lineNumber":240,"author":{"gitId":"tsinyee"},"content":"        }","lastModifiedDate":"2021-10-24"},{"lineNumber":241,"author":{"gitId":"tsinyee"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":242,"author":{"gitId":"tsinyee"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":243,"author":{"gitId":"tsinyee"},"content":"    private void sortMemberListByName() {","lastModifiedDate":"2021-10-24"},{"lineNumber":244,"author":{"gitId":"tsinyee"},"content":"        addressBook.sortMemberListByName();","lastModifiedDate":"2021-10-24"},{"lineNumber":245,"author":{"gitId":"tsinyee"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":246,"author":{"gitId":"tsinyee"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":247,"author":{"gitId":"tsinyee"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":248,"author":{"gitId":"tsinyee"},"content":"    private void sortMemberListByTags() {","lastModifiedDate":"2021-10-24"},{"lineNumber":249,"author":{"gitId":"tsinyee"},"content":"        addressBook.sortMemberListByTags();","lastModifiedDate":"2021-10-24"},{"lineNumber":250,"author":{"gitId":"tsinyee"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":251,"author":{"gitId":"tsinyee"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":252,"author":{"gitId":"felix-ong"},"content":"    @Override","lastModifiedDate":"2021-10-09"},{"lineNumber":253,"author":{"gitId":"felix-ong"},"content":"    public void resetMemberList() {","lastModifiedDate":"2021-10-09"},{"lineNumber":254,"author":{"gitId":"felix-ong"},"content":"        addressBook.resetMemberList();","lastModifiedDate":"2021-10-09"},{"lineNumber":255,"author":{"gitId":"felix-ong"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":256,"author":{"gitId":"felix-ong"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":257,"author":{"gitId":"Moley456"},"content":"    @Override","lastModifiedDate":"2021-10-10"},{"lineNumber":258,"author":{"gitId":"Moley456"},"content":"    public void resetFacilityList() {","lastModifiedDate":"2021-10-10"},{"lineNumber":259,"author":{"gitId":"Moley456"},"content":"        addressBook.resetFacilityList();","lastModifiedDate":"2021-10-10"},{"lineNumber":260,"author":{"gitId":"Moley456"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":261,"author":{"gitId":"Moley456"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":262,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Filtered Person List Accessors \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2016-10-12"},{"lineNumber":263,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":264,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-19"},{"lineNumber":265,"author":{"gitId":"-"},"content":"     * Returns an unmodifiable view of the list of {@code Person} backed by the internal list of","lastModifiedDate":"2018-01-10"},{"lineNumber":266,"author":{"gitId":"-"},"content":"     * {@code versionedAddressBook}","lastModifiedDate":"2018-06-11"},{"lineNumber":267,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-19"},{"lineNumber":268,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":269,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":270,"author":{"gitId":"-"},"content":"        return filteredPersons;","lastModifiedDate":"2018-12-09"},{"lineNumber":271,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":272,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":273,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":274,"author":{"gitId":"-"},"content":"    public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2018-01-10"},{"lineNumber":275,"author":{"gitId":"-"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2017-08-05"},{"lineNumber":276,"author":{"gitId":"-"},"content":"        filteredPersons.setPredicate(predicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":277,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":278,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":279,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-31"},{"lineNumber":280,"author":{"gitId":"-"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2017-05-31"},{"lineNumber":281,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-05-31"},{"lineNumber":282,"author":{"gitId":"-"},"content":"        if (obj \u003d\u003d this) {","lastModifiedDate":"2017-05-31"},{"lineNumber":283,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-31"},{"lineNumber":284,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":285,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":286,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-31"},{"lineNumber":287,"author":{"gitId":"-"},"content":"        if (!(obj instanceof ModelManager)) {","lastModifiedDate":"2017-05-31"},{"lineNumber":288,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-31"},{"lineNumber":289,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":290,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":291,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-05-31"},{"lineNumber":292,"author":{"gitId":"-"},"content":"        ModelManager other \u003d (ModelManager) obj;","lastModifiedDate":"2017-05-31"},{"lineNumber":293,"author":{"gitId":"-"},"content":"        return addressBook.equals(other.addressBook)","lastModifiedDate":"2019-01-25"},{"lineNumber":294,"author":{"gitId":"-"},"content":"                \u0026\u0026 userPrefs.equals(other.userPrefs)","lastModifiedDate":"2018-11-27"},{"lineNumber":295,"author":{"gitId":"YoYoCiti"},"content":"                \u0026\u0026 filteredPersons.equals(other.filteredPersons)","lastModifiedDate":"2021-10-09"},{"lineNumber":296,"author":{"gitId":"YoYoCiti"},"content":"                \u0026\u0026 filteredFacilities.equals(other.filteredFacilities);","lastModifiedDate":"2021-10-09"},{"lineNumber":297,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":298,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":299,"author":{"gitId":"YoYoCiti"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Filtered Facility List Accessors \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-09-29"},{"lineNumber":300,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":301,"author":{"gitId":"YoYoCiti"},"content":"    @Override","lastModifiedDate":"2021-09-29"},{"lineNumber":302,"author":{"gitId":"YoYoCiti"},"content":"    public ObservableList\u003cFacility\u003e getFilteredFacilityList() {","lastModifiedDate":"2021-09-29"},{"lineNumber":303,"author":{"gitId":"YoYoCiti"},"content":"        return filteredFacilities;","lastModifiedDate":"2021-09-29"},{"lineNumber":304,"author":{"gitId":"YoYoCiti"},"content":"    }","lastModifiedDate":"2021-09-29"},{"lineNumber":305,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":306,"author":{"gitId":"YoYoCiti"},"content":"    @Override","lastModifiedDate":"2021-09-29"},{"lineNumber":307,"author":{"gitId":"YoYoCiti"},"content":"    public void updateFilteredFacilityList(Predicate\u003cFacility\u003e predicate) {","lastModifiedDate":"2021-09-29"},{"lineNumber":308,"author":{"gitId":"YoYoCiti"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2021-09-29"},{"lineNumber":309,"author":{"gitId":"YoYoCiti"},"content":"        filteredFacilities.setPredicate(predicate);","lastModifiedDate":"2021-09-29"},{"lineNumber":310,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-29"},{"lineNumber":311,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":312,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"YoYoCiti":54,"Shruthi0310":60,"Moley456":15,"-":153,"tsinyee":25,"felix-ong":5}},{"path":"src/main/java/seedu/address/model/ReadOnlyAddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"Shruthi0310"},"content":"import seedu.address.model.facility.Facility;","lastModifiedDate":"2021-10-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Unmodifiable view of an address book","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public interface ReadOnlyAddressBook {","lastModifiedDate":"2019-01-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     * Returns an unmodifiable view of the persons list.","lastModifiedDate":"2016-12-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * This list will not contain any duplicate persons.","lastModifiedDate":"2016-12-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    ObservableList\u003cPerson\u003e getPersonList();","lastModifiedDate":"2018-01-10"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"Shruthi0310"},"content":"    /**","lastModifiedDate":"2021-10-05"},{"lineNumber":19,"author":{"gitId":"Shruthi0310"},"content":"     * Returns an unmodifiable view of the facility list.","lastModifiedDate":"2021-10-05"},{"lineNumber":20,"author":{"gitId":"Shruthi0310"},"content":"     *","lastModifiedDate":"2021-10-05"},{"lineNumber":21,"author":{"gitId":"Shruthi0310"},"content":"     * @return ObservableList with all facilities.","lastModifiedDate":"2021-10-05"},{"lineNumber":22,"author":{"gitId":"Shruthi0310"},"content":"     */","lastModifiedDate":"2021-10-05"},{"lineNumber":23,"author":{"gitId":"Shruthi0310"},"content":"    ObservableList\u003cFacility\u003e getFacilityList();","lastModifiedDate":"2021-10-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"Shruthi0310":7,"-":17}},{"path":"src/main/java/seedu/address/model/ReadOnlyUserPrefs.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2018-11-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":6,"author":{"gitId":"YoYoCiti"},"content":"import seedu.address.model.alias.AliasMap;","lastModifiedDate":"2021-10-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-11-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Unmodifiable view of user prefs.","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-11-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public interface ReadOnlyUserPrefs {","lastModifiedDate":"2018-11-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":17,"author":{"gitId":"YoYoCiti"},"content":"    AliasMap getAliases();","lastModifiedDate":"2021-10-18"},{"lineNumber":18,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":19,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-11-27"}],"authorContributionMap":{"YoYoCiti":3,"-":16}},{"path":"src/main/java/seedu/address/model/UserPrefs.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2016-09-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"YoYoCiti"},"content":"import seedu.address.model.alias.Alias;","lastModifiedDate":"2021-10-18"},{"lineNumber":11,"author":{"gitId":"YoYoCiti"},"content":"import seedu.address.model.alias.AliasMap;","lastModifiedDate":"2021-10-18"},{"lineNumber":12,"author":{"gitId":"YoYoCiti"},"content":"import seedu.address.model.alias.CommandWord;","lastModifiedDate":"2021-10-18"},{"lineNumber":13,"author":{"gitId":"YoYoCiti"},"content":"import seedu.address.model.alias.Shortcut;","lastModifiedDate":"2021-10-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * Represents User\u0027s preferences.","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class UserPrefs implements ReadOnlyUserPrefs {","lastModifiedDate":"2018-11-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private GuiSettings guiSettings \u003d new GuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private Path addressBookFilePath \u003d Paths.get(\"data\" , \"addressbook.json\");","lastModifiedDate":"2018-11-27"},{"lineNumber":22,"author":{"gitId":"YoYoCiti"},"content":"    private AliasMap aliases \u003d new AliasMap();","lastModifiedDate":"2021-10-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Creates a {@code UserPrefs} with default values.","lastModifiedDate":"2018-12-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public UserPrefs() {}","lastModifiedDate":"2018-12-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Creates a {@code UserPrefs} with the prefs in {@code userPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public UserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        this();","lastModifiedDate":"2018-12-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        resetData(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * Resets the existing data of this {@code UserPrefs} with {@code newUserPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public void resetData(ReadOnlyUserPrefs newUserPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        requireNonNull(newUserPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        setGuiSettings(newUserPrefs.getGuiSettings());","lastModifiedDate":"2018-12-06"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        setAddressBookFilePath(newUserPrefs.getAddressBookFilePath());","lastModifiedDate":"2018-12-06"},{"lineNumber":44,"author":{"gitId":"YoYoCiti"},"content":"        setAliases(newUserPrefs.getAliases());","lastModifiedDate":"2021-10-17"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-06"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":47,"author":{"gitId":"YoYoCiti"},"content":"    @Override","lastModifiedDate":"2021-10-17"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return guiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        this.guiSettings \u003d guiSettings;","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"YoYoCiti"},"content":"    @Override","lastModifiedDate":"2021-10-17"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        return addressBookFilePath;","lastModifiedDate":"2017-02-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":62,"author":{"gitId":"YoYoCiti"},"content":"    @Override","lastModifiedDate":"2021-10-17"},{"lineNumber":63,"author":{"gitId":"YoYoCiti"},"content":"    public AliasMap getAliases() {","lastModifiedDate":"2021-10-18"},{"lineNumber":64,"author":{"gitId":"YoYoCiti"},"content":"        return aliases;","lastModifiedDate":"2021-10-17"},{"lineNumber":65,"author":{"gitId":"YoYoCiti"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":66,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":67,"author":{"gitId":"YoYoCiti"},"content":"    public void setAliases(AliasMap aliases) {","lastModifiedDate":"2021-10-18"},{"lineNumber":68,"author":{"gitId":"YoYoCiti"},"content":"        requireNonNull(aliases);","lastModifiedDate":"2021-10-17"},{"lineNumber":69,"author":{"gitId":"YoYoCiti"},"content":"        this.aliases \u003d aliases;","lastModifiedDate":"2021-10-17"},{"lineNumber":70,"author":{"gitId":"YoYoCiti"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":71,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":72,"author":{"gitId":"YoYoCiti"},"content":"    public void addAlias(Alias alias) {","lastModifiedDate":"2021-10-18"},{"lineNumber":73,"author":{"gitId":"YoYoCiti"},"content":"        aliases.add(alias);","lastModifiedDate":"2021-10-18"},{"lineNumber":74,"author":{"gitId":"YoYoCiti"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":75,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":76,"author":{"gitId":"YoYoCiti"},"content":"    public CommandWord removeAlias(Shortcut shortcut) {","lastModifiedDate":"2021-10-18"},{"lineNumber":77,"author":{"gitId":"YoYoCiti"},"content":"        return aliases.remove(shortcut);","lastModifiedDate":"2021-10-18"},{"lineNumber":78,"author":{"gitId":"YoYoCiti"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":79,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        requireNonNull(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        this.addressBookFilePath \u003d addressBookFilePath;","lastModifiedDate":"2017-02-25"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2016-09-24"},{"lineNumber":88,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2016-09-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        if (!(other instanceof UserPrefs)) { //this handles null as well.","lastModifiedDate":"2016-09-24"},{"lineNumber":91,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-09-24"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        UserPrefs o \u003d (UserPrefs) other;","lastModifiedDate":"2016-09-24"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        return guiSettings.equals(o.guiSettings)","lastModifiedDate":"2018-11-27"},{"lineNumber":97,"author":{"gitId":"YoYoCiti"},"content":"                \u0026\u0026 addressBookFilePath.equals(o.addressBookFilePath)","lastModifiedDate":"2021-10-17"},{"lineNumber":98,"author":{"gitId":"YoYoCiti"},"content":"                \u0026\u0026 aliases.equals(o.aliases);","lastModifiedDate":"2021-10-17"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-24"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        return Objects.hash(guiSettings, addressBookFilePath);","lastModifiedDate":"2018-08-09"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-09-24"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2017-02-25"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        sb.append(\"Gui Settings : \" + guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        sb.append(\"\\nLocal data file location : \" + addressBookFilePath);","lastModifiedDate":"2017-02-25"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2017-02-25"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":114,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"YoYoCiti":28,"-":86}},{"path":"src/main/java/seedu/address/model/alias/Alias.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"YoYoCiti"},"content":"package seedu.address.model.alias;","lastModifiedDate":"2021-10-18"},{"lineNumber":2,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":3,"author":{"gitId":"YoYoCiti"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2021-10-18"},{"lineNumber":4,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":5,"author":{"gitId":"YoYoCiti"},"content":"/**","lastModifiedDate":"2021-10-18"},{"lineNumber":6,"author":{"gitId":"YoYoCiti"},"content":" * Represents an Alias in SportsPA.","lastModifiedDate":"2021-10-18"},{"lineNumber":7,"author":{"gitId":"YoYoCiti"},"content":" * Guarantees: details are present and not null, field values are validated, immutable.","lastModifiedDate":"2021-10-18"},{"lineNumber":8,"author":{"gitId":"YoYoCiti"},"content":" */","lastModifiedDate":"2021-10-18"},{"lineNumber":9,"author":{"gitId":"YoYoCiti"},"content":"public class Alias {","lastModifiedDate":"2021-10-18"},{"lineNumber":10,"author":{"gitId":"YoYoCiti"},"content":"    private final Shortcut shortcut;","lastModifiedDate":"2021-10-18"},{"lineNumber":11,"author":{"gitId":"YoYoCiti"},"content":"    private final CommandWord commandWord;","lastModifiedDate":"2021-10-18"},{"lineNumber":12,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":13,"author":{"gitId":"YoYoCiti"},"content":"    /**","lastModifiedDate":"2021-10-18"},{"lineNumber":14,"author":{"gitId":"YoYoCiti"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2021-10-18"},{"lineNumber":15,"author":{"gitId":"YoYoCiti"},"content":"     */","lastModifiedDate":"2021-10-18"},{"lineNumber":16,"author":{"gitId":"YoYoCiti"},"content":"    public Alias(Shortcut shortcut, CommandWord commandWord) {","lastModifiedDate":"2021-10-18"},{"lineNumber":17,"author":{"gitId":"YoYoCiti"},"content":"        requireAllNonNull(shortcut, commandWord);","lastModifiedDate":"2021-10-18"},{"lineNumber":18,"author":{"gitId":"YoYoCiti"},"content":"        this.shortcut \u003d shortcut;","lastModifiedDate":"2021-10-18"},{"lineNumber":19,"author":{"gitId":"YoYoCiti"},"content":"        this.commandWord \u003d commandWord;","lastModifiedDate":"2021-10-18"},{"lineNumber":20,"author":{"gitId":"YoYoCiti"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":21,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":22,"author":{"gitId":"YoYoCiti"},"content":"    public Shortcut getShortcut() {","lastModifiedDate":"2021-10-18"},{"lineNumber":23,"author":{"gitId":"YoYoCiti"},"content":"        return shortcut;","lastModifiedDate":"2021-10-18"},{"lineNumber":24,"author":{"gitId":"YoYoCiti"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":25,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":26,"author":{"gitId":"YoYoCiti"},"content":"    public CommandWord getCommandWord() {","lastModifiedDate":"2021-10-18"},{"lineNumber":27,"author":{"gitId":"YoYoCiti"},"content":"        return commandWord;","lastModifiedDate":"2021-10-18"},{"lineNumber":28,"author":{"gitId":"YoYoCiti"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":29,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":30,"author":{"gitId":"YoYoCiti"},"content":"    @Override","lastModifiedDate":"2021-10-18"},{"lineNumber":31,"author":{"gitId":"YoYoCiti"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-18"},{"lineNumber":32,"author":{"gitId":"YoYoCiti"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2021-10-18"},{"lineNumber":33,"author":{"gitId":"YoYoCiti"},"content":"            return true;","lastModifiedDate":"2021-10-18"},{"lineNumber":34,"author":{"gitId":"YoYoCiti"},"content":"        }","lastModifiedDate":"2021-10-18"},{"lineNumber":35,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":36,"author":{"gitId":"YoYoCiti"},"content":"        if (!(other instanceof Alias)) {","lastModifiedDate":"2021-10-18"},{"lineNumber":37,"author":{"gitId":"YoYoCiti"},"content":"            return false;","lastModifiedDate":"2021-10-18"},{"lineNumber":38,"author":{"gitId":"YoYoCiti"},"content":"        }","lastModifiedDate":"2021-10-18"},{"lineNumber":39,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":40,"author":{"gitId":"YoYoCiti"},"content":"        Alias otherAlias \u003d (Alias) other;","lastModifiedDate":"2021-10-18"},{"lineNumber":41,"author":{"gitId":"YoYoCiti"},"content":"        return otherAlias.getShortcut().equals(getShortcut())","lastModifiedDate":"2021-10-18"},{"lineNumber":42,"author":{"gitId":"YoYoCiti"},"content":"                \u0026\u0026 otherAlias.getCommandWord().equals(getCommandWord());","lastModifiedDate":"2021-10-18"},{"lineNumber":43,"author":{"gitId":"YoYoCiti"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":44,"author":{"gitId":"YoYoCiti"},"content":"}","lastModifiedDate":"2021-10-18"}],"authorContributionMap":{"YoYoCiti":44}},{"path":"src/main/java/seedu/address/model/alias/AliasMap.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"YoYoCiti"},"content":"package seedu.address.model.alias;","lastModifiedDate":"2021-10-18"},{"lineNumber":2,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":3,"author":{"gitId":"YoYoCiti"},"content":"import java.io.Serializable;","lastModifiedDate":"2021-10-18"},{"lineNumber":4,"author":{"gitId":"YoYoCiti"},"content":"import java.util.HashMap;","lastModifiedDate":"2021-10-18"},{"lineNumber":5,"author":{"gitId":"YoYoCiti"},"content":"import java.util.Objects;","lastModifiedDate":"2021-10-18"},{"lineNumber":6,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":7,"author":{"gitId":"YoYoCiti"},"content":"/**","lastModifiedDate":"2021-10-18"},{"lineNumber":8,"author":{"gitId":"YoYoCiti"},"content":" * A Serializable class that contains the alias mappings.","lastModifiedDate":"2021-10-18"},{"lineNumber":9,"author":{"gitId":"YoYoCiti"},"content":" */","lastModifiedDate":"2021-10-18"},{"lineNumber":10,"author":{"gitId":"YoYoCiti"},"content":"public class AliasMap implements Serializable {","lastModifiedDate":"2021-10-18"},{"lineNumber":11,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":12,"author":{"gitId":"YoYoCiti"},"content":"    private final HashMap\u003cShortcut, CommandWord\u003e mappings;","lastModifiedDate":"2021-10-18"},{"lineNumber":13,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":14,"author":{"gitId":"YoYoCiti"},"content":"    /**","lastModifiedDate":"2021-10-18"},{"lineNumber":15,"author":{"gitId":"YoYoCiti"},"content":"     * Initialises {@code AliasMap} object with no mappings.","lastModifiedDate":"2021-10-18"},{"lineNumber":16,"author":{"gitId":"YoYoCiti"},"content":"     */","lastModifiedDate":"2021-10-18"},{"lineNumber":17,"author":{"gitId":"YoYoCiti"},"content":"    public AliasMap() {","lastModifiedDate":"2021-10-18"},{"lineNumber":18,"author":{"gitId":"YoYoCiti"},"content":"        mappings \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2021-10-18"},{"lineNumber":19,"author":{"gitId":"YoYoCiti"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":20,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":21,"author":{"gitId":"YoYoCiti"},"content":"    /**","lastModifiedDate":"2021-10-18"},{"lineNumber":22,"author":{"gitId":"YoYoCiti"},"content":"     * Adds the given alias into {@code AliasMap}.","lastModifiedDate":"2021-10-18"},{"lineNumber":23,"author":{"gitId":"YoYoCiti"},"content":"     */","lastModifiedDate":"2021-10-18"},{"lineNumber":24,"author":{"gitId":"YoYoCiti"},"content":"    public void add(Alias alias) {","lastModifiedDate":"2021-10-18"},{"lineNumber":25,"author":{"gitId":"YoYoCiti"},"content":"        mappings.put(alias.getShortcut(), alias.getCommandWord());","lastModifiedDate":"2021-10-18"},{"lineNumber":26,"author":{"gitId":"YoYoCiti"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":27,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":28,"author":{"gitId":"YoYoCiti"},"content":"    /**","lastModifiedDate":"2021-10-18"},{"lineNumber":29,"author":{"gitId":"YoYoCiti"},"content":"     * Removes the given alias from {@code AliasMap}.","lastModifiedDate":"2021-10-18"},{"lineNumber":30,"author":{"gitId":"YoYoCiti"},"content":"     *","lastModifiedDate":"2021-10-18"},{"lineNumber":31,"author":{"gitId":"YoYoCiti"},"content":"     * @param shortcut the shortcut to remove.","lastModifiedDate":"2021-10-18"},{"lineNumber":32,"author":{"gitId":"YoYoCiti"},"content":"     * @return CommandWord associated with {@code shortcut}, null if does not exist.","lastModifiedDate":"2021-10-18"},{"lineNumber":33,"author":{"gitId":"YoYoCiti"},"content":"     */","lastModifiedDate":"2021-10-18"},{"lineNumber":34,"author":{"gitId":"YoYoCiti"},"content":"    public CommandWord remove(Shortcut shortcut) {","lastModifiedDate":"2021-10-18"},{"lineNumber":35,"author":{"gitId":"YoYoCiti"},"content":"        return mappings.remove(shortcut);","lastModifiedDate":"2021-10-18"},{"lineNumber":36,"author":{"gitId":"YoYoCiti"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":37,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":38,"author":{"gitId":"YoYoCiti"},"content":"    /**","lastModifiedDate":"2021-10-18"},{"lineNumber":39,"author":{"gitId":"YoYoCiti"},"content":"     * Replaces input with the original command if alias was defined for given input.","lastModifiedDate":"2021-10-18"},{"lineNumber":40,"author":{"gitId":"YoYoCiti"},"content":"     */","lastModifiedDate":"2021-10-18"},{"lineNumber":41,"author":{"gitId":"YoYoCiti"},"content":"    public String convertAliasIfPresent(String input) {","lastModifiedDate":"2021-10-18"},{"lineNumber":42,"author":{"gitId":"YoYoCiti"},"content":"        if (!Shortcut.isValidShortcut(input)) {","lastModifiedDate":"2021-10-19"},{"lineNumber":43,"author":{"gitId":"YoYoCiti"},"content":"            return input;","lastModifiedDate":"2021-10-19"},{"lineNumber":44,"author":{"gitId":"YoYoCiti"},"content":"        }","lastModifiedDate":"2021-10-19"},{"lineNumber":45,"author":{"gitId":"YoYoCiti"},"content":"        CommandWord output \u003d mappings.get(new Shortcut(input));","lastModifiedDate":"2021-10-18"},{"lineNumber":46,"author":{"gitId":"YoYoCiti"},"content":"        if (Objects.isNull(output)) {","lastModifiedDate":"2021-10-18"},{"lineNumber":47,"author":{"gitId":"YoYoCiti"},"content":"            return input;","lastModifiedDate":"2021-10-18"},{"lineNumber":48,"author":{"gitId":"YoYoCiti"},"content":"        }","lastModifiedDate":"2021-10-18"},{"lineNumber":49,"author":{"gitId":"YoYoCiti"},"content":"        return output.getCommandWord();","lastModifiedDate":"2021-10-18"},{"lineNumber":50,"author":{"gitId":"YoYoCiti"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":51,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":52,"author":{"gitId":"YoYoCiti"},"content":"    @Override","lastModifiedDate":"2021-10-18"},{"lineNumber":53,"author":{"gitId":"YoYoCiti"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-18"},{"lineNumber":54,"author":{"gitId":"YoYoCiti"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2021-10-18"},{"lineNumber":55,"author":{"gitId":"YoYoCiti"},"content":"            return true;","lastModifiedDate":"2021-10-18"},{"lineNumber":56,"author":{"gitId":"YoYoCiti"},"content":"        }","lastModifiedDate":"2021-10-18"},{"lineNumber":57,"author":{"gitId":"YoYoCiti"},"content":"        if (!(other instanceof AliasMap)) { //this handles null as well.","lastModifiedDate":"2021-10-18"},{"lineNumber":58,"author":{"gitId":"YoYoCiti"},"content":"            return false;","lastModifiedDate":"2021-10-18"},{"lineNumber":59,"author":{"gitId":"YoYoCiti"},"content":"        }","lastModifiedDate":"2021-10-18"},{"lineNumber":60,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":61,"author":{"gitId":"YoYoCiti"},"content":"        AliasMap o \u003d (AliasMap) other;","lastModifiedDate":"2021-10-18"},{"lineNumber":62,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":63,"author":{"gitId":"YoYoCiti"},"content":"        return mappings.equals(o.mappings);","lastModifiedDate":"2021-10-18"},{"lineNumber":64,"author":{"gitId":"YoYoCiti"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":65,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":66,"author":{"gitId":"YoYoCiti"},"content":"    @Override","lastModifiedDate":"2021-10-18"},{"lineNumber":67,"author":{"gitId":"YoYoCiti"},"content":"    public String toString() {","lastModifiedDate":"2021-10-18"},{"lineNumber":68,"author":{"gitId":"YoYoCiti"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2021-10-18"},{"lineNumber":69,"author":{"gitId":"YoYoCiti"},"content":"        mappings.entrySet().forEach(entry -\u003e {","lastModifiedDate":"2021-10-18"},{"lineNumber":70,"author":{"gitId":"YoYoCiti"},"content":"            sb.append(entry.getKey() + \": \" + entry.getValue() + \"\\n\");","lastModifiedDate":"2021-10-18"},{"lineNumber":71,"author":{"gitId":"YoYoCiti"},"content":"        });","lastModifiedDate":"2021-10-18"},{"lineNumber":72,"author":{"gitId":"YoYoCiti"},"content":"        return sb.toString();","lastModifiedDate":"2021-10-18"},{"lineNumber":73,"author":{"gitId":"YoYoCiti"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":74,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":75,"author":{"gitId":"YoYoCiti"},"content":"    @Override","lastModifiedDate":"2021-10-18"},{"lineNumber":76,"author":{"gitId":"YoYoCiti"},"content":"    public int hashCode() {","lastModifiedDate":"2021-10-18"},{"lineNumber":77,"author":{"gitId":"YoYoCiti"},"content":"        // use this method for custom fields hashing instead of implementing your own","lastModifiedDate":"2021-10-18"},{"lineNumber":78,"author":{"gitId":"YoYoCiti"},"content":"        return Objects.hash(mappings);","lastModifiedDate":"2021-10-18"},{"lineNumber":79,"author":{"gitId":"YoYoCiti"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":80,"author":{"gitId":"YoYoCiti"},"content":"}","lastModifiedDate":"2021-10-18"}],"authorContributionMap":{"YoYoCiti":80}},{"path":"src/main/java/seedu/address/model/alias/CommandWord.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"YoYoCiti"},"content":"package seedu.address.model.alias;","lastModifiedDate":"2021-10-18"},{"lineNumber":2,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":3,"author":{"gitId":"YoYoCiti"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-18"},{"lineNumber":4,"author":{"gitId":"YoYoCiti"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2021-10-18"},{"lineNumber":5,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":6,"author":{"gitId":"YoYoCiti"},"content":"import java.io.Serializable;","lastModifiedDate":"2021-10-18"},{"lineNumber":7,"author":{"gitId":"YoYoCiti"},"content":"import java.util.List;","lastModifiedDate":"2021-10-18"},{"lineNumber":8,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":9,"author":{"gitId":"YoYoCiti"},"content":"import seedu.address.logic.commands.AddAliasCommand;","lastModifiedDate":"2021-10-18"},{"lineNumber":10,"author":{"gitId":"YoYoCiti"},"content":"import seedu.address.logic.commands.AddFacilityCommand;","lastModifiedDate":"2021-10-18"},{"lineNumber":11,"author":{"gitId":"YoYoCiti"},"content":"import seedu.address.logic.commands.AddMemberCommand;","lastModifiedDate":"2021-10-18"},{"lineNumber":12,"author":{"gitId":"YoYoCiti"},"content":"import seedu.address.logic.commands.AllocateMemberCommand;","lastModifiedDate":"2021-10-28"},{"lineNumber":13,"author":{"gitId":"YoYoCiti"},"content":"import seedu.address.logic.commands.ClearAttendanceCommand;","lastModifiedDate":"2021-10-24"},{"lineNumber":14,"author":{"gitId":"YoYoCiti"},"content":"import seedu.address.logic.commands.ClearFacilitiesCommand;","lastModifiedDate":"2021-10-18"},{"lineNumber":15,"author":{"gitId":"YoYoCiti"},"content":"import seedu.address.logic.commands.ClearMembersCommand;","lastModifiedDate":"2021-10-18"},{"lineNumber":16,"author":{"gitId":"YoYoCiti"},"content":"import seedu.address.logic.commands.DeallocateMemberCommand;","lastModifiedDate":"2021-10-28"},{"lineNumber":17,"author":{"gitId":"YoYoCiti"},"content":"import seedu.address.logic.commands.DeleteAliasCommand;","lastModifiedDate":"2021-10-18"},{"lineNumber":18,"author":{"gitId":"YoYoCiti"},"content":"import seedu.address.logic.commands.DeleteFacilityCommand;","lastModifiedDate":"2021-10-18"},{"lineNumber":19,"author":{"gitId":"YoYoCiti"},"content":"import seedu.address.logic.commands.DeleteMemberCommand;","lastModifiedDate":"2021-10-18"},{"lineNumber":20,"author":{"gitId":"YoYoCiti"},"content":"import seedu.address.logic.commands.EditFacilityCommand;","lastModifiedDate":"2021-10-18"},{"lineNumber":21,"author":{"gitId":"YoYoCiti"},"content":"import seedu.address.logic.commands.EditMemberCommand;","lastModifiedDate":"2021-10-18"},{"lineNumber":22,"author":{"gitId":"YoYoCiti"},"content":"import seedu.address.logic.commands.ExitCommand;","lastModifiedDate":"2021-10-18"},{"lineNumber":23,"author":{"gitId":"YoYoCiti"},"content":"import seedu.address.logic.commands.ExportCommand;","lastModifiedDate":"2021-10-28"},{"lineNumber":24,"author":{"gitId":"YoYoCiti"},"content":"import seedu.address.logic.commands.FindFacilityCommand;","lastModifiedDate":"2021-10-18"},{"lineNumber":25,"author":{"gitId":"YoYoCiti"},"content":"import seedu.address.logic.commands.FindMemberCommand;","lastModifiedDate":"2021-10-18"},{"lineNumber":26,"author":{"gitId":"YoYoCiti"},"content":"import seedu.address.logic.commands.HelpCommand;","lastModifiedDate":"2021-10-18"},{"lineNumber":27,"author":{"gitId":"YoYoCiti"},"content":"import seedu.address.logic.commands.ImportCommand;","lastModifiedDate":"2021-10-28"},{"lineNumber":28,"author":{"gitId":"YoYoCiti"},"content":"import seedu.address.logic.commands.ListFacilityCommand;","lastModifiedDate":"2021-10-18"},{"lineNumber":29,"author":{"gitId":"YoYoCiti"},"content":"import seedu.address.logic.commands.ListMemberCommand;","lastModifiedDate":"2021-10-18"},{"lineNumber":30,"author":{"gitId":"YoYoCiti"},"content":"import seedu.address.logic.commands.MarkAttendanceCommand;","lastModifiedDate":"2021-10-24"},{"lineNumber":31,"author":{"gitId":"YoYoCiti"},"content":"import seedu.address.logic.commands.SetMemberAvailabilityCommand;","lastModifiedDate":"2021-10-18"},{"lineNumber":32,"author":{"gitId":"YoYoCiti"},"content":"import seedu.address.logic.commands.ShowAliasesCommand;","lastModifiedDate":"2021-10-18"},{"lineNumber":33,"author":{"gitId":"tsinyee"},"content":"import seedu.address.logic.commands.SortMemberCommand;","lastModifiedDate":"2021-10-23"},{"lineNumber":34,"author":{"gitId":"YoYoCiti"},"content":"import seedu.address.logic.commands.SplitCommand;","lastModifiedDate":"2021-10-18"},{"lineNumber":35,"author":{"gitId":"YoYoCiti"},"content":"import seedu.address.logic.commands.UnmarkAttendanceCommand;","lastModifiedDate":"2021-10-24"},{"lineNumber":36,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":37,"author":{"gitId":"YoYoCiti"},"content":"/**","lastModifiedDate":"2021-10-18"},{"lineNumber":38,"author":{"gitId":"YoYoCiti"},"content":" * Represents a CommandWord for an alias in user pref.","lastModifiedDate":"2021-10-18"},{"lineNumber":39,"author":{"gitId":"YoYoCiti"},"content":" * Guarantees: is valid as declared in {@link #isValidCommandWord(String)}","lastModifiedDate":"2021-10-18"},{"lineNumber":40,"author":{"gitId":"YoYoCiti"},"content":" */","lastModifiedDate":"2021-10-18"},{"lineNumber":41,"author":{"gitId":"YoYoCiti"},"content":"public class CommandWord implements Serializable {","lastModifiedDate":"2021-10-18"},{"lineNumber":42,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":43,"author":{"gitId":"YoYoCiti"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2021-10-18"},{"lineNumber":44,"author":{"gitId":"YoYoCiti"},"content":"            \"Command Word should be valid command, and it should not be blank\";","lastModifiedDate":"2021-10-18"},{"lineNumber":45,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":46,"author":{"gitId":"YoYoCiti"},"content":"    /** All possible commands. */","lastModifiedDate":"2021-10-18"},{"lineNumber":47,"author":{"gitId":"YoYoCiti"},"content":"    private static final List\u003cString\u003e LIST_OF_COMMANDS \u003d List.of(AddMemberCommand.COMMAND_WORD,","lastModifiedDate":"2021-10-28"},{"lineNumber":48,"author":{"gitId":"YoYoCiti"},"content":"            EditMemberCommand.COMMAND_WORD, DeleteMemberCommand.COMMAND_WORD, DeleteFacilityCommand.COMMAND_WORD,","lastModifiedDate":"2021-10-28"},{"lineNumber":49,"author":{"gitId":"YoYoCiti"},"content":"            EditFacilityCommand.COMMAND_WORD, ClearMembersCommand.COMMAND_WORD, ClearFacilitiesCommand.COMMAND_WORD,","lastModifiedDate":"2021-10-28"},{"lineNumber":50,"author":{"gitId":"YoYoCiti"},"content":"            FindMemberCommand.COMMAND_WORD, ListMemberCommand.COMMAND_WORD, ListFacilityCommand.COMMAND_WORD,","lastModifiedDate":"2021-10-28"},{"lineNumber":51,"author":{"gitId":"YoYoCiti"},"content":"            ExitCommand.COMMAND_WORD, HelpCommand.COMMAND_WORD, FindFacilityCommand.COMMAND_WORD,","lastModifiedDate":"2021-10-28"},{"lineNumber":52,"author":{"gitId":"YoYoCiti"},"content":"            AddFacilityCommand.COMMAND_WORD, SetMemberAvailabilityCommand.COMMAND_WORD, SplitCommand.COMMAND_WORD,","lastModifiedDate":"2021-10-28"},{"lineNumber":53,"author":{"gitId":"YoYoCiti"},"content":"            MarkAttendanceCommand.COMMAND_WORD, UnmarkAttendanceCommand.COMMAND_WORD,","lastModifiedDate":"2021-10-28"},{"lineNumber":54,"author":{"gitId":"YoYoCiti"},"content":"            ClearAttendanceCommand.COMMAND_WORD, SortMemberCommand.COMMAND_WORD, AllocateMemberCommand.COMMAND_WORD,","lastModifiedDate":"2021-10-28"},{"lineNumber":55,"author":{"gitId":"YoYoCiti"},"content":"            DeallocateMemberCommand.COMMAND_WORD, ImportCommand.COMMAND_WORD, ExportCommand.COMMAND_WORD,","lastModifiedDate":"2021-10-28"},{"lineNumber":56,"author":{"gitId":"YoYoCiti"},"content":"            AddAliasCommand.COMMAND_WORD, DeleteAliasCommand.COMMAND_WORD, ShowAliasesCommand.COMMAND_WORD);","lastModifiedDate":"2021-10-18"},{"lineNumber":57,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":58,"author":{"gitId":"YoYoCiti"},"content":"    private String commandWord;","lastModifiedDate":"2021-10-18"},{"lineNumber":59,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":60,"author":{"gitId":"YoYoCiti"},"content":"    /**","lastModifiedDate":"2021-10-18"},{"lineNumber":61,"author":{"gitId":"YoYoCiti"},"content":"     * Constructs a {@code CommandWord}.","lastModifiedDate":"2021-10-18"},{"lineNumber":62,"author":{"gitId":"YoYoCiti"},"content":"     */","lastModifiedDate":"2021-10-18"},{"lineNumber":63,"author":{"gitId":"YoYoCiti"},"content":"    public CommandWord(String commandWord) {","lastModifiedDate":"2021-10-18"},{"lineNumber":64,"author":{"gitId":"YoYoCiti"},"content":"        requireNonNull(commandWord);","lastModifiedDate":"2021-10-18"},{"lineNumber":65,"author":{"gitId":"YoYoCiti"},"content":"        checkArgument(isValidCommandWord(commandWord), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-18"},{"lineNumber":66,"author":{"gitId":"YoYoCiti"},"content":"        this.commandWord \u003d commandWord;","lastModifiedDate":"2021-10-18"},{"lineNumber":67,"author":{"gitId":"YoYoCiti"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":68,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":69,"author":{"gitId":"YoYoCiti"},"content":"    /** Dummy constructor for Json to work. */","lastModifiedDate":"2021-10-18"},{"lineNumber":70,"author":{"gitId":"YoYoCiti"},"content":"    public CommandWord() {}","lastModifiedDate":"2021-10-18"},{"lineNumber":71,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":72,"author":{"gitId":"YoYoCiti"},"content":"    public String getCommandWord() {","lastModifiedDate":"2021-10-18"},{"lineNumber":73,"author":{"gitId":"YoYoCiti"},"content":"        return commandWord;","lastModifiedDate":"2021-10-18"},{"lineNumber":74,"author":{"gitId":"YoYoCiti"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":75,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":76,"author":{"gitId":"YoYoCiti"},"content":"    /**","lastModifiedDate":"2021-10-18"},{"lineNumber":77,"author":{"gitId":"YoYoCiti"},"content":"     * Returns true if given string is a valid commandWord.","lastModifiedDate":"2021-10-18"},{"lineNumber":78,"author":{"gitId":"YoYoCiti"},"content":"     */","lastModifiedDate":"2021-10-18"},{"lineNumber":79,"author":{"gitId":"YoYoCiti"},"content":"    public static boolean isValidCommandWord(String test) {","lastModifiedDate":"2021-10-18"},{"lineNumber":80,"author":{"gitId":"YoYoCiti"},"content":"        return LIST_OF_COMMANDS.contains(test);","lastModifiedDate":"2021-10-28"},{"lineNumber":81,"author":{"gitId":"YoYoCiti"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":82,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":83,"author":{"gitId":"YoYoCiti"},"content":"    @Override","lastModifiedDate":"2021-10-18"},{"lineNumber":84,"author":{"gitId":"YoYoCiti"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-18"},{"lineNumber":85,"author":{"gitId":"YoYoCiti"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-18"},{"lineNumber":86,"author":{"gitId":"YoYoCiti"},"content":"                || (other instanceof CommandWord // instanceof handles nulls","lastModifiedDate":"2021-10-18"},{"lineNumber":87,"author":{"gitId":"YoYoCiti"},"content":"                \u0026\u0026 commandWord.equals(((CommandWord) other).commandWord)); // state check","lastModifiedDate":"2021-10-18"},{"lineNumber":88,"author":{"gitId":"YoYoCiti"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":89,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":90,"author":{"gitId":"YoYoCiti"},"content":"    @Override","lastModifiedDate":"2021-10-18"},{"lineNumber":91,"author":{"gitId":"YoYoCiti"},"content":"    public String toString() {","lastModifiedDate":"2021-10-18"},{"lineNumber":92,"author":{"gitId":"YoYoCiti"},"content":"        return commandWord;","lastModifiedDate":"2021-10-18"},{"lineNumber":93,"author":{"gitId":"YoYoCiti"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":94,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":95,"author":{"gitId":"YoYoCiti"},"content":"    @Override","lastModifiedDate":"2021-10-18"},{"lineNumber":96,"author":{"gitId":"YoYoCiti"},"content":"    public int hashCode() {","lastModifiedDate":"2021-10-18"},{"lineNumber":97,"author":{"gitId":"YoYoCiti"},"content":"        return commandWord.hashCode();","lastModifiedDate":"2021-10-18"},{"lineNumber":98,"author":{"gitId":"YoYoCiti"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":99,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":100,"author":{"gitId":"YoYoCiti"},"content":"}","lastModifiedDate":"2021-10-18"}],"authorContributionMap":{"YoYoCiti":99,"tsinyee":1}},{"path":"src/main/java/seedu/address/model/alias/Shortcut.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"YoYoCiti"},"content":"package seedu.address.model.alias;","lastModifiedDate":"2021-10-18"},{"lineNumber":2,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":3,"author":{"gitId":"YoYoCiti"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-18"},{"lineNumber":4,"author":{"gitId":"YoYoCiti"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2021-10-18"},{"lineNumber":5,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":6,"author":{"gitId":"YoYoCiti"},"content":"import java.io.Serializable;","lastModifiedDate":"2021-10-18"},{"lineNumber":7,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":8,"author":{"gitId":"YoYoCiti"},"content":"/**","lastModifiedDate":"2021-10-18"},{"lineNumber":9,"author":{"gitId":"YoYoCiti"},"content":" * Represents a Shortcut for an alias in user pref.","lastModifiedDate":"2021-10-18"},{"lineNumber":10,"author":{"gitId":"YoYoCiti"},"content":" * Guarantees: is valid as declared in {@link #isValidShortcut(String)}","lastModifiedDate":"2021-10-18"},{"lineNumber":11,"author":{"gitId":"YoYoCiti"},"content":" */","lastModifiedDate":"2021-10-18"},{"lineNumber":12,"author":{"gitId":"YoYoCiti"},"content":"public class Shortcut implements Serializable {","lastModifiedDate":"2021-10-18"},{"lineNumber":13,"author":{"gitId":"YoYoCiti"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2021-10-18"},{"lineNumber":14,"author":{"gitId":"YoYoCiti"},"content":"            \"The shortcut should not be an existing command, and it should be one word\";","lastModifiedDate":"2021-10-27"},{"lineNumber":15,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":16,"author":{"gitId":"YoYoCiti"},"content":"    /*","lastModifiedDate":"2021-10-18"},{"lineNumber":17,"author":{"gitId":"YoYoCiti"},"content":"     * The first character of the shortcut must not be a whitespace,","lastModifiedDate":"2021-10-18"},{"lineNumber":18,"author":{"gitId":"YoYoCiti"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2021-10-18"},{"lineNumber":19,"author":{"gitId":"YoYoCiti"},"content":"     */","lastModifiedDate":"2021-10-18"},{"lineNumber":20,"author":{"gitId":"YoYoCiti"},"content":"    public static final String VALIDATION_REGEX \u003d \"[^\\\\s].*\";","lastModifiedDate":"2021-10-18"},{"lineNumber":21,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":22,"author":{"gitId":"YoYoCiti"},"content":"    public final String shortcut;","lastModifiedDate":"2021-10-18"},{"lineNumber":23,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":24,"author":{"gitId":"YoYoCiti"},"content":"    /**","lastModifiedDate":"2021-10-18"},{"lineNumber":25,"author":{"gitId":"YoYoCiti"},"content":"     * Constructs a {@code Shortcut}.","lastModifiedDate":"2021-10-18"},{"lineNumber":26,"author":{"gitId":"YoYoCiti"},"content":"     */","lastModifiedDate":"2021-10-18"},{"lineNumber":27,"author":{"gitId":"YoYoCiti"},"content":"    public Shortcut(String shortcut) {","lastModifiedDate":"2021-10-18"},{"lineNumber":28,"author":{"gitId":"YoYoCiti"},"content":"        requireNonNull(shortcut);","lastModifiedDate":"2021-10-18"},{"lineNumber":29,"author":{"gitId":"YoYoCiti"},"content":"        checkArgument(isValidShortcut(shortcut), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-18"},{"lineNumber":30,"author":{"gitId":"YoYoCiti"},"content":"        this.shortcut \u003d shortcut;","lastModifiedDate":"2021-10-18"},{"lineNumber":31,"author":{"gitId":"YoYoCiti"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":32,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":33,"author":{"gitId":"YoYoCiti"},"content":"    /**","lastModifiedDate":"2021-10-18"},{"lineNumber":34,"author":{"gitId":"YoYoCiti"},"content":"     * Returns true if given string is a valid shortcut.","lastModifiedDate":"2021-10-18"},{"lineNumber":35,"author":{"gitId":"YoYoCiti"},"content":"     */","lastModifiedDate":"2021-10-18"},{"lineNumber":36,"author":{"gitId":"YoYoCiti"},"content":"    public static boolean isValidShortcut(String test) {","lastModifiedDate":"2021-10-18"},{"lineNumber":37,"author":{"gitId":"YoYoCiti"},"content":"        return test.matches(VALIDATION_REGEX)","lastModifiedDate":"2021-10-27"},{"lineNumber":38,"author":{"gitId":"YoYoCiti"},"content":"                \u0026\u0026 test.split(\"\\\\s+\").length \u003d\u003d 1 \u0026\u0026 !(CommandWord.isValidCommandWord(test));","lastModifiedDate":"2021-10-27"},{"lineNumber":39,"author":{"gitId":"YoYoCiti"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":40,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":41,"author":{"gitId":"YoYoCiti"},"content":"    @Override","lastModifiedDate":"2021-10-18"},{"lineNumber":42,"author":{"gitId":"YoYoCiti"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-18"},{"lineNumber":43,"author":{"gitId":"YoYoCiti"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-18"},{"lineNumber":44,"author":{"gitId":"YoYoCiti"},"content":"                || (other instanceof Shortcut // instanceof handles nulls","lastModifiedDate":"2021-10-18"},{"lineNumber":45,"author":{"gitId":"YoYoCiti"},"content":"                \u0026\u0026 shortcut.equals(((Shortcut) other).shortcut)); // state check","lastModifiedDate":"2021-10-18"},{"lineNumber":46,"author":{"gitId":"YoYoCiti"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":47,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":48,"author":{"gitId":"YoYoCiti"},"content":"    @Override","lastModifiedDate":"2021-10-18"},{"lineNumber":49,"author":{"gitId":"YoYoCiti"},"content":"    public String toString() {","lastModifiedDate":"2021-10-18"},{"lineNumber":50,"author":{"gitId":"YoYoCiti"},"content":"        return shortcut;","lastModifiedDate":"2021-10-18"},{"lineNumber":51,"author":{"gitId":"YoYoCiti"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":52,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":53,"author":{"gitId":"YoYoCiti"},"content":"    @Override","lastModifiedDate":"2021-10-18"},{"lineNumber":54,"author":{"gitId":"YoYoCiti"},"content":"    public int hashCode() {","lastModifiedDate":"2021-10-18"},{"lineNumber":55,"author":{"gitId":"YoYoCiti"},"content":"        return shortcut.hashCode();","lastModifiedDate":"2021-10-18"},{"lineNumber":56,"author":{"gitId":"YoYoCiti"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":57,"author":{"gitId":"YoYoCiti"},"content":"}","lastModifiedDate":"2021-10-18"}],"authorContributionMap":{"YoYoCiti":57}},{"path":"src/main/java/seedu/address/model/facility/Capacity.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Shruthi0310"},"content":"package seedu.address.model.facility;","lastModifiedDate":"2021-10-05"},{"lineNumber":2,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":3,"author":{"gitId":"Shruthi0310"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-05"},{"lineNumber":4,"author":{"gitId":"felix-ong"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2021-10-30"},{"lineNumber":5,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":6,"author":{"gitId":"Shruthi0310"},"content":"/**","lastModifiedDate":"2021-10-05"},{"lineNumber":7,"author":{"gitId":"Shruthi0310"},"content":" * Represents a Facility\u0027s capacity.","lastModifiedDate":"2021-10-05"},{"lineNumber":8,"author":{"gitId":"Shruthi0310"},"content":" */","lastModifiedDate":"2021-10-05"},{"lineNumber":9,"author":{"gitId":"Shruthi0310"},"content":"public class Capacity {","lastModifiedDate":"2021-10-05"},{"lineNumber":10,"author":{"gitId":"Moley456"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":11,"author":{"gitId":"Moley456"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2021-10-10"},{"lineNumber":12,"author":{"gitId":"felix-ong"},"content":"            \"Capacity should be a positive integer which is less than or equal to 50\";","lastModifiedDate":"2021-10-30"},{"lineNumber":13,"author":{"gitId":"felix-ong"},"content":"    public static final String VALIDATION_REGEX \u003d \"^([1-9]|[1-4]\\\\d|50)$\";","lastModifiedDate":"2021-10-30"},{"lineNumber":14,"author":{"gitId":"Shruthi0310"},"content":"    public final String capacity;","lastModifiedDate":"2021-10-05"},{"lineNumber":15,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":16,"author":{"gitId":"Shruthi0310"},"content":"    /**","lastModifiedDate":"2021-10-05"},{"lineNumber":17,"author":{"gitId":"Shruthi0310"},"content":"     * Creates a Capacity object with specified capacity value.","lastModifiedDate":"2021-10-05"},{"lineNumber":18,"author":{"gitId":"Shruthi0310"},"content":"     *","lastModifiedDate":"2021-10-05"},{"lineNumber":19,"author":{"gitId":"Shruthi0310"},"content":"     * @param capacity A valid capacity.","lastModifiedDate":"2021-10-05"},{"lineNumber":20,"author":{"gitId":"Shruthi0310"},"content":"     */","lastModifiedDate":"2021-10-05"},{"lineNumber":21,"author":{"gitId":"Shruthi0310"},"content":"    public Capacity(String capacity) {","lastModifiedDate":"2021-10-05"},{"lineNumber":22,"author":{"gitId":"Shruthi0310"},"content":"        requireNonNull(capacity);","lastModifiedDate":"2021-10-05"},{"lineNumber":23,"author":{"gitId":"felix-ong"},"content":"        checkArgument(isValidCapacity(capacity), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-30"},{"lineNumber":24,"author":{"gitId":"Shruthi0310"},"content":"        this.capacity \u003d capacity;","lastModifiedDate":"2021-10-05"},{"lineNumber":25,"author":{"gitId":"Shruthi0310"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":26,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":27,"author":{"gitId":"Shruthi0310"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":28,"author":{"gitId":"Shruthi0310"},"content":"     * Returns true if number of members allocated is within","lastModifiedDate":"2021-10-12"},{"lineNumber":29,"author":{"gitId":"Shruthi0310"},"content":"     * capacity.","lastModifiedDate":"2021-10-12"},{"lineNumber":30,"author":{"gitId":"Shruthi0310"},"content":"     *","lastModifiedDate":"2021-10-12"},{"lineNumber":31,"author":{"gitId":"Shruthi0310"},"content":"     * @param numberOfPerson Current number of persons allocated.","lastModifiedDate":"2021-10-12"},{"lineNumber":32,"author":{"gitId":"Shruthi0310"},"content":"     * @return Boolean value of whether capacity has been reached.","lastModifiedDate":"2021-10-12"},{"lineNumber":33,"author":{"gitId":"Shruthi0310"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":34,"author":{"gitId":"Shruthi0310"},"content":"    public boolean isWithinCapacity(int numberOfPerson) {","lastModifiedDate":"2021-10-12"},{"lineNumber":35,"author":{"gitId":"Shruthi0310"},"content":"        Integer max \u003d Integer.parseInt(capacity);","lastModifiedDate":"2021-10-12"},{"lineNumber":36,"author":{"gitId":"Shruthi0310"},"content":"        return numberOfPerson \u003c\u003d max;","lastModifiedDate":"2021-10-12"},{"lineNumber":37,"author":{"gitId":"Shruthi0310"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":38,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":39,"author":{"gitId":"Moley456"},"content":"    /**","lastModifiedDate":"2021-10-10"},{"lineNumber":40,"author":{"gitId":"Moley456"},"content":"     * Returns true if a given string is a valid capacity.","lastModifiedDate":"2021-10-10"},{"lineNumber":41,"author":{"gitId":"Moley456"},"content":"     */","lastModifiedDate":"2021-10-10"},{"lineNumber":42,"author":{"gitId":"Moley456"},"content":"    public static boolean isValidCapacity(String test) {","lastModifiedDate":"2021-10-10"},{"lineNumber":43,"author":{"gitId":"Moley456"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2021-10-10"},{"lineNumber":44,"author":{"gitId":"Moley456"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":45,"author":{"gitId":"Moley456"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":46,"author":{"gitId":"Shruthi0310"},"content":"    @Override","lastModifiedDate":"2021-10-05"},{"lineNumber":47,"author":{"gitId":"Shruthi0310"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2021-10-05"},{"lineNumber":48,"author":{"gitId":"Shruthi0310"},"content":"        return (obj \u003d\u003d this)","lastModifiedDate":"2021-10-05"},{"lineNumber":49,"author":{"gitId":"Shruthi0310"},"content":"                || (obj instanceof Capacity","lastModifiedDate":"2021-10-05"},{"lineNumber":50,"author":{"gitId":"Shruthi0310"},"content":"                \u0026\u0026 capacity.equals(((Capacity) obj).capacity));","lastModifiedDate":"2021-10-05"},{"lineNumber":51,"author":{"gitId":"Shruthi0310"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":52,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":53,"author":{"gitId":"Shruthi0310"},"content":"    @Override","lastModifiedDate":"2021-10-05"},{"lineNumber":54,"author":{"gitId":"Shruthi0310"},"content":"    public String toString() {","lastModifiedDate":"2021-10-05"},{"lineNumber":55,"author":{"gitId":"Shruthi0310"},"content":"        return capacity;","lastModifiedDate":"2021-10-05"},{"lineNumber":56,"author":{"gitId":"Shruthi0310"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":57,"author":{"gitId":"Shruthi0310"},"content":"}","lastModifiedDate":"2021-10-05"}],"authorContributionMap":{"Shruthi0310":44,"Moley456":9,"felix-ong":4}},{"path":"src/main/java/seedu/address/model/facility/Facility.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Shruthi0310"},"content":"package seedu.address.model.facility;","lastModifiedDate":"2021-10-05"},{"lineNumber":2,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":3,"author":{"gitId":"YoYoCiti"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-11-01"},{"lineNumber":4,"author":{"gitId":"Shruthi0310"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2021-10-05"},{"lineNumber":5,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":6,"author":{"gitId":"Shruthi0310"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-12"},{"lineNumber":7,"author":{"gitId":"Shruthi0310"},"content":"import java.util.List;","lastModifiedDate":"2021-10-12"},{"lineNumber":8,"author":{"gitId":"YoYoCiti"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2021-10-26"},{"lineNumber":9,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":10,"author":{"gitId":"Shruthi0310"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2021-10-12"},{"lineNumber":11,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":12,"author":{"gitId":"Shruthi0310"},"content":"/**","lastModifiedDate":"2021-10-05"},{"lineNumber":13,"author":{"gitId":"Shruthi0310"},"content":" * Represents a Facility in the address book.","lastModifiedDate":"2021-10-05"},{"lineNumber":14,"author":{"gitId":"Shruthi0310"},"content":" */","lastModifiedDate":"2021-10-05"},{"lineNumber":15,"author":{"gitId":"Shruthi0310"},"content":"public class Facility {","lastModifiedDate":"2021-10-05"},{"lineNumber":16,"author":{"gitId":"Shruthi0310"},"content":"    private final FacilityName name;","lastModifiedDate":"2021-10-05"},{"lineNumber":17,"author":{"gitId":"Shruthi0310"},"content":"    private final Location location;","lastModifiedDate":"2021-10-05"},{"lineNumber":18,"author":{"gitId":"Shruthi0310"},"content":"    private final Time time;","lastModifiedDate":"2021-10-05"},{"lineNumber":19,"author":{"gitId":"Shruthi0310"},"content":"    private final Capacity capacity;","lastModifiedDate":"2021-10-05"},{"lineNumber":20,"author":{"gitId":"Shruthi0310"},"content":"    private List\u003cPerson\u003e personAllocatedList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-12"},{"lineNumber":21,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":22,"author":{"gitId":"Shruthi0310"},"content":"    /**","lastModifiedDate":"2021-10-05"},{"lineNumber":23,"author":{"gitId":"Shruthi0310"},"content":"     * Creates a Facility object with the specified name,","lastModifiedDate":"2021-10-05"},{"lineNumber":24,"author":{"gitId":"Shruthi0310"},"content":"     * location, time and capacity.","lastModifiedDate":"2021-10-05"},{"lineNumber":25,"author":{"gitId":"Shruthi0310"},"content":"     *","lastModifiedDate":"2021-10-05"},{"lineNumber":26,"author":{"gitId":"Shruthi0310"},"content":"     * @param name Name of facility.","lastModifiedDate":"2021-10-05"},{"lineNumber":27,"author":{"gitId":"Shruthi0310"},"content":"     * @param location Location of facility.","lastModifiedDate":"2021-10-05"},{"lineNumber":28,"author":{"gitId":"Shruthi0310"},"content":"     * @param time Time of slot booked for facility.","lastModifiedDate":"2021-10-05"},{"lineNumber":29,"author":{"gitId":"Shruthi0310"},"content":"     * @param capacity Capacity of facility booked.","lastModifiedDate":"2021-10-05"},{"lineNumber":30,"author":{"gitId":"Shruthi0310"},"content":"     */","lastModifiedDate":"2021-10-05"},{"lineNumber":31,"author":{"gitId":"Shruthi0310"},"content":"    public Facility(FacilityName name, Location location, Time time, Capacity capacity) {","lastModifiedDate":"2021-10-05"},{"lineNumber":32,"author":{"gitId":"Shruthi0310"},"content":"        requireAllNonNull(name, location, time, capacity);","lastModifiedDate":"2021-10-05"},{"lineNumber":33,"author":{"gitId":"Shruthi0310"},"content":"        this.name \u003d name;","lastModifiedDate":"2021-10-05"},{"lineNumber":34,"author":{"gitId":"Shruthi0310"},"content":"        this.location \u003d location;","lastModifiedDate":"2021-10-05"},{"lineNumber":35,"author":{"gitId":"Shruthi0310"},"content":"        this.time \u003d time;","lastModifiedDate":"2021-10-05"},{"lineNumber":36,"author":{"gitId":"Shruthi0310"},"content":"        this.capacity \u003d capacity;","lastModifiedDate":"2021-10-05"},{"lineNumber":37,"author":{"gitId":"Shruthi0310"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":38,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":39,"author":{"gitId":"YoYoCiti"},"content":"    /**","lastModifiedDate":"2021-11-01"},{"lineNumber":40,"author":{"gitId":"YoYoCiti"},"content":"     * Creates a Facility object with the specified name, location, time, capacity and","lastModifiedDate":"2021-11-01"},{"lineNumber":41,"author":{"gitId":"YoYoCiti"},"content":"     * person-allocated list.","lastModifiedDate":"2021-11-01"},{"lineNumber":42,"author":{"gitId":"YoYoCiti"},"content":"     */","lastModifiedDate":"2021-11-01"},{"lineNumber":43,"author":{"gitId":"YoYoCiti"},"content":"    public Facility(FacilityName name, Location location, Time time, Capacity capacity,","lastModifiedDate":"2021-11-01"},{"lineNumber":44,"author":{"gitId":"YoYoCiti"},"content":"                    List\u003cPerson\u003e personAllocatedList) {","lastModifiedDate":"2021-11-01"},{"lineNumber":45,"author":{"gitId":"YoYoCiti"},"content":"        this(name, location, time, capacity);","lastModifiedDate":"2021-11-01"},{"lineNumber":46,"author":{"gitId":"YoYoCiti"},"content":"        requireNonNull(personAllocatedList);","lastModifiedDate":"2021-11-01"},{"lineNumber":47,"author":{"gitId":"YoYoCiti"},"content":"        this.personAllocatedList \u003d personAllocatedList;","lastModifiedDate":"2021-11-01"},{"lineNumber":48,"author":{"gitId":"YoYoCiti"},"content":"    }","lastModifiedDate":"2021-11-01"},{"lineNumber":49,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":50,"author":{"gitId":"Shruthi0310"},"content":"    public FacilityName getName() {","lastModifiedDate":"2021-10-05"},{"lineNumber":51,"author":{"gitId":"Shruthi0310"},"content":"        return name;","lastModifiedDate":"2021-10-05"},{"lineNumber":52,"author":{"gitId":"Shruthi0310"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":53,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":54,"author":{"gitId":"Shruthi0310"},"content":"    public Location getLocation() {","lastModifiedDate":"2021-10-05"},{"lineNumber":55,"author":{"gitId":"Shruthi0310"},"content":"        return location;","lastModifiedDate":"2021-10-05"},{"lineNumber":56,"author":{"gitId":"Shruthi0310"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":57,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":58,"author":{"gitId":"Shruthi0310"},"content":"    public Time getTime() {","lastModifiedDate":"2021-10-05"},{"lineNumber":59,"author":{"gitId":"Shruthi0310"},"content":"        return time;","lastModifiedDate":"2021-10-05"},{"lineNumber":60,"author":{"gitId":"Shruthi0310"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":61,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":62,"author":{"gitId":"Shruthi0310"},"content":"    public Capacity getCapacity() {","lastModifiedDate":"2021-10-05"},{"lineNumber":63,"author":{"gitId":"Shruthi0310"},"content":"        return capacity;","lastModifiedDate":"2021-10-05"},{"lineNumber":64,"author":{"gitId":"Shruthi0310"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":65,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":66,"author":{"gitId":"Moley456"},"content":"    public List\u003cPerson\u003e getPersonAllocatedList() {","lastModifiedDate":"2021-10-27"},{"lineNumber":67,"author":{"gitId":"Moley456"},"content":"        return personAllocatedList;","lastModifiedDate":"2021-10-27"},{"lineNumber":68,"author":{"gitId":"Moley456"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":69,"author":{"gitId":"Moley456"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":70,"author":{"gitId":"felix-ong"},"content":"    public boolean isMaxCapacity() {","lastModifiedDate":"2021-10-23"},{"lineNumber":71,"author":{"gitId":"felix-ong"},"content":"        return !capacity.isWithinCapacity(personAllocatedList.size());","lastModifiedDate":"2021-10-23"},{"lineNumber":72,"author":{"gitId":"felix-ong"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":73,"author":{"gitId":"felix-ong"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":74,"author":{"gitId":"Shruthi0310"},"content":"    public void clearAllocationList() {","lastModifiedDate":"2021-10-12"},{"lineNumber":75,"author":{"gitId":"Shruthi0310"},"content":"        personAllocatedList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-12"},{"lineNumber":76,"author":{"gitId":"Shruthi0310"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":77,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":78,"author":{"gitId":"Moley456"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":79,"author":{"gitId":"Moley456"},"content":"    /**","lastModifiedDate":"2021-10-27"},{"lineNumber":80,"author":{"gitId":"Moley456"},"content":"     * Returns the allocated list as a String separated by commas.","lastModifiedDate":"2021-10-27"},{"lineNumber":81,"author":{"gitId":"Moley456"},"content":"     *","lastModifiedDate":"2021-10-27"},{"lineNumber":82,"author":{"gitId":"Moley456"},"content":"     * @return the allocated list as a String.","lastModifiedDate":"2021-10-27"},{"lineNumber":83,"author":{"gitId":"Moley456"},"content":"     */","lastModifiedDate":"2021-10-27"},{"lineNumber":84,"author":{"gitId":"felix-ong"},"content":"    public boolean isPersonAllocated(Person person) {","lastModifiedDate":"2021-10-23"},{"lineNumber":85,"author":{"gitId":"felix-ong"},"content":"        return personAllocatedList.contains(person);","lastModifiedDate":"2021-10-23"},{"lineNumber":86,"author":{"gitId":"Shruthi0310"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":87,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":88,"author":{"gitId":"Shruthi0310"},"content":"    public String getPersonsAsString() {","lastModifiedDate":"2021-10-12"},{"lineNumber":89,"author":{"gitId":"Shruthi0310"},"content":"        if (personAllocatedList \u003d\u003d null) {","lastModifiedDate":"2021-10-12"},{"lineNumber":90,"author":{"gitId":"YoYoCiti"},"content":"            return \"No person allocated\";","lastModifiedDate":"2021-10-26"},{"lineNumber":91,"author":{"gitId":"Moley456"},"content":"        }","lastModifiedDate":"2021-10-27"},{"lineNumber":92,"author":{"gitId":"YoYoCiti"},"content":"        return personAllocatedList.stream().map(p -\u003e p.getName().fullName).collect(Collectors.joining(\", \"));","lastModifiedDate":"2021-10-26"},{"lineNumber":93,"author":{"gitId":"Shruthi0310"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":94,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":95,"author":{"gitId":"Shruthi0310"},"content":"    public boolean isWithinMaxCapacity(int numberOfPersons) {","lastModifiedDate":"2021-10-12"},{"lineNumber":96,"author":{"gitId":"Shruthi0310"},"content":"        return capacity.isWithinCapacity(numberOfPersons);","lastModifiedDate":"2021-10-12"},{"lineNumber":97,"author":{"gitId":"Shruthi0310"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":98,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":99,"author":{"gitId":"Shruthi0310"},"content":"    public void addPersonToFacility(Person person) {","lastModifiedDate":"2021-10-12"},{"lineNumber":100,"author":{"gitId":"Shruthi0310"},"content":"        personAllocatedList.add(person);","lastModifiedDate":"2021-10-12"},{"lineNumber":101,"author":{"gitId":"Shruthi0310"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":102,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":103,"author":{"gitId":"felix-ong"},"content":"    public void removePersonFromFacility(Person person) {","lastModifiedDate":"2021-10-26"},{"lineNumber":104,"author":{"gitId":"felix-ong"},"content":"        personAllocatedList.remove(person);","lastModifiedDate":"2021-10-26"},{"lineNumber":105,"author":{"gitId":"felix-ong"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":106,"author":{"gitId":"felix-ong"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":107,"author":{"gitId":"Moley456"},"content":"    /**","lastModifiedDate":"2021-10-10"},{"lineNumber":108,"author":{"gitId":"Moley456"},"content":"     * Returns true if both name and location of the facilities are the same.","lastModifiedDate":"2021-10-10"},{"lineNumber":109,"author":{"gitId":"Moley456"},"content":"     * This defines a weaker notion of equality between two facilities.","lastModifiedDate":"2021-10-10"},{"lineNumber":110,"author":{"gitId":"Moley456"},"content":"     */","lastModifiedDate":"2021-10-10"},{"lineNumber":111,"author":{"gitId":"Moley456"},"content":"    public boolean isSameFacility(Facility otherFacility) {","lastModifiedDate":"2021-10-10"},{"lineNumber":112,"author":{"gitId":"Moley456"},"content":"        if (otherFacility \u003d\u003d this) {","lastModifiedDate":"2021-10-10"},{"lineNumber":113,"author":{"gitId":"Moley456"},"content":"            return true;","lastModifiedDate":"2021-10-10"},{"lineNumber":114,"author":{"gitId":"Moley456"},"content":"        }","lastModifiedDate":"2021-10-10"},{"lineNumber":115,"author":{"gitId":"Moley456"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":116,"author":{"gitId":"Moley456"},"content":"        return otherFacility !\u003d null","lastModifiedDate":"2021-10-10"},{"lineNumber":117,"author":{"gitId":"Moley456"},"content":"                \u0026\u0026 otherFacility.getName().equals(getName())","lastModifiedDate":"2021-10-10"},{"lineNumber":118,"author":{"gitId":"Moley456"},"content":"                \u0026\u0026 otherFacility.getLocation().equals(getLocation());","lastModifiedDate":"2021-10-10"},{"lineNumber":119,"author":{"gitId":"Moley456"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":120,"author":{"gitId":"Moley456"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":121,"author":{"gitId":"Shruthi0310"},"content":"    /**","lastModifiedDate":"2021-10-05"},{"lineNumber":122,"author":{"gitId":"Shruthi0310"},"content":"     * Returns true if both facilities have same identity","lastModifiedDate":"2021-10-05"},{"lineNumber":123,"author":{"gitId":"Shruthi0310"},"content":"     * and field values.","lastModifiedDate":"2021-10-05"},{"lineNumber":124,"author":{"gitId":"Shruthi0310"},"content":"     *","lastModifiedDate":"2021-10-05"},{"lineNumber":125,"author":{"gitId":"Shruthi0310"},"content":"     * @param obj Object being compared with facility.","lastModifiedDate":"2021-10-05"},{"lineNumber":126,"author":{"gitId":"Shruthi0310"},"content":"     * @return Boolean value of equality between two facilities.","lastModifiedDate":"2021-10-05"},{"lineNumber":127,"author":{"gitId":"Shruthi0310"},"content":"     */","lastModifiedDate":"2021-10-05"},{"lineNumber":128,"author":{"gitId":"Shruthi0310"},"content":"    @Override","lastModifiedDate":"2021-10-05"},{"lineNumber":129,"author":{"gitId":"Shruthi0310"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2021-10-05"},{"lineNumber":130,"author":{"gitId":"Shruthi0310"},"content":"        if (obj \u003d\u003d this) {","lastModifiedDate":"2021-10-05"},{"lineNumber":131,"author":{"gitId":"Shruthi0310"},"content":"            return true;","lastModifiedDate":"2021-10-05"},{"lineNumber":132,"author":{"gitId":"Shruthi0310"},"content":"        }","lastModifiedDate":"2021-10-05"},{"lineNumber":133,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":134,"author":{"gitId":"Shruthi0310"},"content":"        if (!(obj instanceof Facility)) {","lastModifiedDate":"2021-10-05"},{"lineNumber":135,"author":{"gitId":"Shruthi0310"},"content":"            return false;","lastModifiedDate":"2021-10-05"},{"lineNumber":136,"author":{"gitId":"Shruthi0310"},"content":"        }","lastModifiedDate":"2021-10-05"},{"lineNumber":137,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":138,"author":{"gitId":"Shruthi0310"},"content":"        Facility facility \u003d (Facility) obj;","lastModifiedDate":"2021-10-05"},{"lineNumber":139,"author":{"gitId":"Shruthi0310"},"content":"        return name.equals(facility.name)","lastModifiedDate":"2021-10-05"},{"lineNumber":140,"author":{"gitId":"Shruthi0310"},"content":"                \u0026\u0026 location.equals(facility.location)","lastModifiedDate":"2021-10-05"},{"lineNumber":141,"author":{"gitId":"Shruthi0310"},"content":"                \u0026\u0026 time.equals(facility.time)","lastModifiedDate":"2021-10-05"},{"lineNumber":142,"author":{"gitId":"Shruthi0310"},"content":"                \u0026\u0026 capacity.equals(facility.capacity)","lastModifiedDate":"2021-10-12"},{"lineNumber":143,"author":{"gitId":"Shruthi0310"},"content":"                \u0026\u0026 personAllocatedList.equals(facility.personAllocatedList);","lastModifiedDate":"2021-10-12"},{"lineNumber":144,"author":{"gitId":"Shruthi0310"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":145,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":146,"author":{"gitId":"Shruthi0310"},"content":"    @Override","lastModifiedDate":"2021-10-05"},{"lineNumber":147,"author":{"gitId":"Shruthi0310"},"content":"    public String toString() {","lastModifiedDate":"2021-10-05"},{"lineNumber":148,"author":{"gitId":"Shruthi0310"},"content":"        StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2021-10-05"},{"lineNumber":149,"author":{"gitId":"Shruthi0310"},"content":"        builder.append(name)","lastModifiedDate":"2021-10-05"},{"lineNumber":150,"author":{"gitId":"Shruthi0310"},"content":"                .append(\"; Location: \")","lastModifiedDate":"2021-10-05"},{"lineNumber":151,"author":{"gitId":"Shruthi0310"},"content":"                .append(location)","lastModifiedDate":"2021-10-05"},{"lineNumber":152,"author":{"gitId":"Shruthi0310"},"content":"                .append(\"; Time: \")","lastModifiedDate":"2021-10-05"},{"lineNumber":153,"author":{"gitId":"Shruthi0310"},"content":"                .append(time)","lastModifiedDate":"2021-10-05"},{"lineNumber":154,"author":{"gitId":"Shruthi0310"},"content":"                .append(\"; Capacity: \")","lastModifiedDate":"2021-10-05"},{"lineNumber":155,"author":{"gitId":"Shruthi0310"},"content":"                .append(capacity);","lastModifiedDate":"2021-10-05"},{"lineNumber":156,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":157,"author":{"gitId":"Shruthi0310"},"content":"        return builder.toString();","lastModifiedDate":"2021-10-05"},{"lineNumber":158,"author":{"gitId":"Shruthi0310"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":159,"author":{"gitId":"Shruthi0310"},"content":"}","lastModifiedDate":"2021-10-05"}],"authorContributionMap":{"YoYoCiti":15,"Shruthi0310":109,"Moley456":25,"felix-ong":10}},{"path":"src/main/java/seedu/address/model/facility/FacilityName.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Shruthi0310"},"content":"package seedu.address.model.facility;","lastModifiedDate":"2021-10-05"},{"lineNumber":2,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":3,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":4,"author":{"gitId":"Shruthi0310"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-05"},{"lineNumber":5,"author":{"gitId":"felix-ong"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2021-10-30"},{"lineNumber":6,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":7,"author":{"gitId":"Shruthi0310"},"content":"/**","lastModifiedDate":"2021-10-05"},{"lineNumber":8,"author":{"gitId":"Shruthi0310"},"content":" * Represents a Facility\u0027s name in the address book.","lastModifiedDate":"2021-10-05"},{"lineNumber":9,"author":{"gitId":"Shruthi0310"},"content":" */","lastModifiedDate":"2021-10-05"},{"lineNumber":10,"author":{"gitId":"Shruthi0310"},"content":"public class FacilityName {","lastModifiedDate":"2021-10-05"},{"lineNumber":11,"author":{"gitId":"Moley456"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":12,"author":{"gitId":"Moley456"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2021-10-10"},{"lineNumber":13,"author":{"gitId":"felix-ong"},"content":"            \"Facility names should only contain up to 50 alphanumeric characters and spaces,\"","lastModifiedDate":"2021-10-30"},{"lineNumber":14,"author":{"gitId":"felix-ong"},"content":"            + \" and should not be blank.\";","lastModifiedDate":"2021-10-30"},{"lineNumber":15,"author":{"gitId":"Moley456"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":16,"author":{"gitId":"felix-ong"},"content":"    public static final String VALIDATION_REGEX \u003d \"[\\\\p{Alnum} ]{1,50}\";","lastModifiedDate":"2021-10-30"},{"lineNumber":17,"author":{"gitId":"Moley456"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":18,"author":{"gitId":"Shruthi0310"},"content":"    public final String facilityName;","lastModifiedDate":"2021-10-05"},{"lineNumber":19,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":20,"author":{"gitId":"Shruthi0310"},"content":"    /**","lastModifiedDate":"2021-10-05"},{"lineNumber":21,"author":{"gitId":"Shruthi0310"},"content":"     * Creates a FacilityName object with the specified facilityName.","lastModifiedDate":"2021-10-05"},{"lineNumber":22,"author":{"gitId":"Shruthi0310"},"content":"     *","lastModifiedDate":"2021-10-05"},{"lineNumber":23,"author":{"gitId":"Shruthi0310"},"content":"     * @param facilityName A valid name.","lastModifiedDate":"2021-10-05"},{"lineNumber":24,"author":{"gitId":"Shruthi0310"},"content":"     */","lastModifiedDate":"2021-10-05"},{"lineNumber":25,"author":{"gitId":"Shruthi0310"},"content":"    public FacilityName(String facilityName) {","lastModifiedDate":"2021-10-05"},{"lineNumber":26,"author":{"gitId":"Shruthi0310"},"content":"        requireNonNull(facilityName);","lastModifiedDate":"2021-10-05"},{"lineNumber":27,"author":{"gitId":"felix-ong"},"content":"        checkArgument(isValidFacilityName(facilityName), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-30"},{"lineNumber":28,"author":{"gitId":"Shruthi0310"},"content":"        this.facilityName \u003d facilityName;","lastModifiedDate":"2021-10-05"},{"lineNumber":29,"author":{"gitId":"Shruthi0310"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":30,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":31,"author":{"gitId":"Moley456"},"content":"    /**","lastModifiedDate":"2021-10-10"},{"lineNumber":32,"author":{"gitId":"Moley456"},"content":"     * Returns true if a given string is a valid facility name.","lastModifiedDate":"2021-10-10"},{"lineNumber":33,"author":{"gitId":"Moley456"},"content":"     */","lastModifiedDate":"2021-10-10"},{"lineNumber":34,"author":{"gitId":"Moley456"},"content":"    public static boolean isValidFacilityName(String test) {","lastModifiedDate":"2021-10-10"},{"lineNumber":35,"author":{"gitId":"Moley456"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2021-10-10"},{"lineNumber":36,"author":{"gitId":"Moley456"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":37,"author":{"gitId":"Moley456"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":38,"author":{"gitId":"Shruthi0310"},"content":"    @Override","lastModifiedDate":"2021-10-05"},{"lineNumber":39,"author":{"gitId":"Shruthi0310"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2021-10-05"},{"lineNumber":40,"author":{"gitId":"Shruthi0310"},"content":"        return (obj \u003d\u003d this)","lastModifiedDate":"2021-10-05"},{"lineNumber":41,"author":{"gitId":"Shruthi0310"},"content":"                || (obj instanceof FacilityName","lastModifiedDate":"2021-10-05"},{"lineNumber":42,"author":{"gitId":"Shruthi0310"},"content":"                \u0026\u0026 facilityName.equals(((FacilityName) obj).facilityName));","lastModifiedDate":"2021-10-05"},{"lineNumber":43,"author":{"gitId":"Shruthi0310"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":44,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":45,"author":{"gitId":"Shruthi0310"},"content":"    @Override","lastModifiedDate":"2021-10-05"},{"lineNumber":46,"author":{"gitId":"Shruthi0310"},"content":"    public String toString() {","lastModifiedDate":"2021-10-05"},{"lineNumber":47,"author":{"gitId":"Shruthi0310"},"content":"        return facilityName;","lastModifiedDate":"2021-10-05"},{"lineNumber":48,"author":{"gitId":"Shruthi0310"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":49,"author":{"gitId":"Shruthi0310"},"content":"}","lastModifiedDate":"2021-10-05"}],"authorContributionMap":{"Shruthi0310":33,"Moley456":11,"felix-ong":5}},{"path":"src/main/java/seedu/address/model/facility/Location.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Shruthi0310"},"content":"package seedu.address.model.facility;","lastModifiedDate":"2021-10-05"},{"lineNumber":2,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":3,"author":{"gitId":"Shruthi0310"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-05"},{"lineNumber":4,"author":{"gitId":"felix-ong"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2021-10-30"},{"lineNumber":5,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":6,"author":{"gitId":"Shruthi0310"},"content":"/**","lastModifiedDate":"2021-10-05"},{"lineNumber":7,"author":{"gitId":"Shruthi0310"},"content":" * Represents a Facility\u0027s location.","lastModifiedDate":"2021-10-05"},{"lineNumber":8,"author":{"gitId":"Shruthi0310"},"content":" */","lastModifiedDate":"2021-10-05"},{"lineNumber":9,"author":{"gitId":"Shruthi0310"},"content":"public class Location {","lastModifiedDate":"2021-10-05"},{"lineNumber":10,"author":{"gitId":"Moley456"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":11,"author":{"gitId":"Moley456"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2021-10-10"},{"lineNumber":12,"author":{"gitId":"felix-ong"},"content":"            \"Locations should only contain up to 50 alphanumeric characters and spaces,\"","lastModifiedDate":"2021-10-30"},{"lineNumber":13,"author":{"gitId":"felix-ong"},"content":"                    + \" and should not be blank.\";","lastModifiedDate":"2021-10-30"},{"lineNumber":14,"author":{"gitId":"Moley456"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":15,"author":{"gitId":"felix-ong"},"content":"    public static final String VALIDATION_REGEX \u003d \"[\\\\p{Alnum} ]{1,50}\";","lastModifiedDate":"2021-10-30"},{"lineNumber":16,"author":{"gitId":"Moley456"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":17,"author":{"gitId":"Shruthi0310"},"content":"    public final String location;","lastModifiedDate":"2021-10-05"},{"lineNumber":18,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":19,"author":{"gitId":"Shruthi0310"},"content":"    /**","lastModifiedDate":"2021-10-05"},{"lineNumber":20,"author":{"gitId":"Shruthi0310"},"content":"     * Creates a Location object with specified location.","lastModifiedDate":"2021-10-05"},{"lineNumber":21,"author":{"gitId":"Shruthi0310"},"content":"     *","lastModifiedDate":"2021-10-05"},{"lineNumber":22,"author":{"gitId":"Shruthi0310"},"content":"     * @param location A valid location.","lastModifiedDate":"2021-10-05"},{"lineNumber":23,"author":{"gitId":"Shruthi0310"},"content":"     */","lastModifiedDate":"2021-10-05"},{"lineNumber":24,"author":{"gitId":"Shruthi0310"},"content":"    public Location(String location) {","lastModifiedDate":"2021-10-05"},{"lineNumber":25,"author":{"gitId":"Shruthi0310"},"content":"        requireNonNull(location);","lastModifiedDate":"2021-10-05"},{"lineNumber":26,"author":{"gitId":"felix-ong"},"content":"        checkArgument(isValidLocation(location), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-30"},{"lineNumber":27,"author":{"gitId":"Shruthi0310"},"content":"        this.location \u003d location;","lastModifiedDate":"2021-10-05"},{"lineNumber":28,"author":{"gitId":"Shruthi0310"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":29,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":30,"author":{"gitId":"Moley456"},"content":"    /**","lastModifiedDate":"2021-10-10"},{"lineNumber":31,"author":{"gitId":"Moley456"},"content":"     * Returns true if a given string is a valid location.","lastModifiedDate":"2021-10-10"},{"lineNumber":32,"author":{"gitId":"Moley456"},"content":"     */","lastModifiedDate":"2021-10-10"},{"lineNumber":33,"author":{"gitId":"felix-ong"},"content":"    public static boolean isValidLocation(String test) {","lastModifiedDate":"2021-10-30"},{"lineNumber":34,"author":{"gitId":"Moley456"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2021-10-10"},{"lineNumber":35,"author":{"gitId":"Moley456"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":36,"author":{"gitId":"Moley456"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":37,"author":{"gitId":"Shruthi0310"},"content":"    @Override","lastModifiedDate":"2021-10-05"},{"lineNumber":38,"author":{"gitId":"Shruthi0310"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2021-10-05"},{"lineNumber":39,"author":{"gitId":"Shruthi0310"},"content":"        return (obj \u003d\u003d this)","lastModifiedDate":"2021-10-05"},{"lineNumber":40,"author":{"gitId":"Shruthi0310"},"content":"                || (obj instanceof Location","lastModifiedDate":"2021-10-05"},{"lineNumber":41,"author":{"gitId":"Shruthi0310"},"content":"                \u0026\u0026 location.equals(((Location) obj).location));","lastModifiedDate":"2021-10-05"},{"lineNumber":42,"author":{"gitId":"Shruthi0310"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":43,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":44,"author":{"gitId":"Shruthi0310"},"content":"    @Override","lastModifiedDate":"2021-10-05"},{"lineNumber":45,"author":{"gitId":"Shruthi0310"},"content":"    public String toString() {","lastModifiedDate":"2021-10-05"},{"lineNumber":46,"author":{"gitId":"Shruthi0310"},"content":"        return location;","lastModifiedDate":"2021-10-05"},{"lineNumber":47,"author":{"gitId":"Shruthi0310"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":48,"author":{"gitId":"Shruthi0310"},"content":"}","lastModifiedDate":"2021-10-05"}],"authorContributionMap":{"Shruthi0310":32,"Moley456":10,"felix-ong":6}},{"path":"src/main/java/seedu/address/model/facility/LocationContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"YoYoCiti"},"content":"package seedu.address.model.facility;","lastModifiedDate":"2021-09-29"},{"lineNumber":2,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":3,"author":{"gitId":"YoYoCiti"},"content":"import java.util.List;","lastModifiedDate":"2021-09-29"},{"lineNumber":4,"author":{"gitId":"YoYoCiti"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2021-09-29"},{"lineNumber":5,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":6,"author":{"gitId":"YoYoCiti"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2021-09-29"},{"lineNumber":7,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":8,"author":{"gitId":"YoYoCiti"},"content":"/**","lastModifiedDate":"2021-09-29"},{"lineNumber":9,"author":{"gitId":"YoYoCiti"},"content":" * Tests that a {@code Facility}\u0027s {@code Location} matches any of the keywords given.","lastModifiedDate":"2021-09-29"},{"lineNumber":10,"author":{"gitId":"YoYoCiti"},"content":" */","lastModifiedDate":"2021-09-29"},{"lineNumber":11,"author":{"gitId":"YoYoCiti"},"content":"public class LocationContainsKeywordsPredicate implements Predicate\u003cFacility\u003e {","lastModifiedDate":"2021-09-29"},{"lineNumber":12,"author":{"gitId":"YoYoCiti"},"content":"    private final List\u003cString\u003e keywords;","lastModifiedDate":"2021-09-29"},{"lineNumber":13,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":14,"author":{"gitId":"YoYoCiti"},"content":"    public LocationContainsKeywordsPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2021-09-29"},{"lineNumber":15,"author":{"gitId":"YoYoCiti"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2021-09-29"},{"lineNumber":16,"author":{"gitId":"YoYoCiti"},"content":"    }","lastModifiedDate":"2021-09-29"},{"lineNumber":17,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":18,"author":{"gitId":"YoYoCiti"},"content":"    @Override","lastModifiedDate":"2021-09-29"},{"lineNumber":19,"author":{"gitId":"YoYoCiti"},"content":"    public boolean test(Facility facility) {","lastModifiedDate":"2021-09-29"},{"lineNumber":20,"author":{"gitId":"YoYoCiti"},"content":"        return keywords.stream()","lastModifiedDate":"2021-09-29"},{"lineNumber":21,"author":{"gitId":"YoYoCiti"},"content":"                .anyMatch(keyword -\u003e StringUtil.containsWordIgnoreCase(facility.getLocation().location, keyword));","lastModifiedDate":"2021-10-06"},{"lineNumber":22,"author":{"gitId":"YoYoCiti"},"content":"    }","lastModifiedDate":"2021-09-29"},{"lineNumber":23,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":24,"author":{"gitId":"YoYoCiti"},"content":"    @Override","lastModifiedDate":"2021-09-29"},{"lineNumber":25,"author":{"gitId":"YoYoCiti"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-09-29"},{"lineNumber":26,"author":{"gitId":"YoYoCiti"},"content":"        return other \u003d\u003d this","lastModifiedDate":"2021-09-29"},{"lineNumber":27,"author":{"gitId":"YoYoCiti"},"content":"                || (other instanceof LocationContainsKeywordsPredicate","lastModifiedDate":"2021-09-29"},{"lineNumber":28,"author":{"gitId":"YoYoCiti"},"content":"                \u0026\u0026 keywords.equals(((LocationContainsKeywordsPredicate) other).keywords));","lastModifiedDate":"2021-09-29"},{"lineNumber":29,"author":{"gitId":"YoYoCiti"},"content":"    }","lastModifiedDate":"2021-09-29"},{"lineNumber":30,"author":{"gitId":"YoYoCiti"},"content":"}","lastModifiedDate":"2021-09-29"}],"authorContributionMap":{"YoYoCiti":30}},{"path":"src/main/java/seedu/address/model/facility/Time.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Shruthi0310"},"content":"package seedu.address.model.facility;","lastModifiedDate":"2021-10-05"},{"lineNumber":2,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":3,"author":{"gitId":"Shruthi0310"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-05"},{"lineNumber":4,"author":{"gitId":"felix-ong"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2021-10-30"},{"lineNumber":5,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":6,"author":{"gitId":"felix-ong"},"content":"import java.time.LocalTime;","lastModifiedDate":"2021-10-30"},{"lineNumber":7,"author":{"gitId":"felix-ong"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-10-30"},{"lineNumber":8,"author":{"gitId":"felix-ong"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":9,"author":{"gitId":"Shruthi0310"},"content":"/**","lastModifiedDate":"2021-10-05"},{"lineNumber":10,"author":{"gitId":"Shruthi0310"},"content":" * Represents a Facility\u0027s time.","lastModifiedDate":"2021-10-05"},{"lineNumber":11,"author":{"gitId":"Shruthi0310"},"content":" */","lastModifiedDate":"2021-10-05"},{"lineNumber":12,"author":{"gitId":"Shruthi0310"},"content":"public class Time {","lastModifiedDate":"2021-10-05"},{"lineNumber":13,"author":{"gitId":"Moley456"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":14,"author":{"gitId":"Moley456"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2021-10-10"},{"lineNumber":15,"author":{"gitId":"felix-ong"},"content":"            \"Time should be a valid time in the 24h format (HHmm).\";","lastModifiedDate":"2021-10-30"},{"lineNumber":16,"author":{"gitId":"felix-ong"},"content":"    public static final String VALIDATION_REGEX \u003d \"^(0[0-9]|1[0-9]|2[0-3])[0-5][0-9]$\";","lastModifiedDate":"2021-10-30"},{"lineNumber":17,"author":{"gitId":"Shruthi0310"},"content":"    public final String time;","lastModifiedDate":"2021-10-05"},{"lineNumber":18,"author":{"gitId":"felix-ong"},"content":"    private final DateTimeFormatter twentyFourHourFormatter \u003d DateTimeFormatter.ofPattern(\"HHmm\");","lastModifiedDate":"2021-10-30"},{"lineNumber":19,"author":{"gitId":"felix-ong"},"content":"    private final DateTimeFormatter meridiemFormatter \u003d DateTimeFormatter.ofPattern(\"hh:mm a\");","lastModifiedDate":"2021-10-30"},{"lineNumber":20,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":21,"author":{"gitId":"Shruthi0310"},"content":"    /**","lastModifiedDate":"2021-10-05"},{"lineNumber":22,"author":{"gitId":"Shruthi0310"},"content":"     * Creates a Time object with the specified time value.","lastModifiedDate":"2021-10-05"},{"lineNumber":23,"author":{"gitId":"Shruthi0310"},"content":"     *","lastModifiedDate":"2021-10-05"},{"lineNumber":24,"author":{"gitId":"Shruthi0310"},"content":"     * @param time A valid time.","lastModifiedDate":"2021-10-05"},{"lineNumber":25,"author":{"gitId":"Shruthi0310"},"content":"     */","lastModifiedDate":"2021-10-05"},{"lineNumber":26,"author":{"gitId":"Shruthi0310"},"content":"    public Time(String time) {","lastModifiedDate":"2021-10-05"},{"lineNumber":27,"author":{"gitId":"Shruthi0310"},"content":"        requireNonNull(time);","lastModifiedDate":"2021-10-05"},{"lineNumber":28,"author":{"gitId":"felix-ong"},"content":"        checkArgument(isValidTime(time), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-30"},{"lineNumber":29,"author":{"gitId":"Shruthi0310"},"content":"        this.time \u003d time;","lastModifiedDate":"2021-10-05"},{"lineNumber":30,"author":{"gitId":"Shruthi0310"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":31,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":32,"author":{"gitId":"Moley456"},"content":"    /**","lastModifiedDate":"2021-10-10"},{"lineNumber":33,"author":{"gitId":"Moley456"},"content":"     * Returns true if a given string is a valid time.","lastModifiedDate":"2021-10-10"},{"lineNumber":34,"author":{"gitId":"Moley456"},"content":"     */","lastModifiedDate":"2021-10-10"},{"lineNumber":35,"author":{"gitId":"Moley456"},"content":"    public static boolean isValidTime(String test) {","lastModifiedDate":"2021-10-10"},{"lineNumber":36,"author":{"gitId":"Moley456"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2021-10-10"},{"lineNumber":37,"author":{"gitId":"Moley456"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":38,"author":{"gitId":"Moley456"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":39,"author":{"gitId":"Shruthi0310"},"content":"    @Override","lastModifiedDate":"2021-10-05"},{"lineNumber":40,"author":{"gitId":"Shruthi0310"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2021-10-05"},{"lineNumber":41,"author":{"gitId":"Shruthi0310"},"content":"        return (obj \u003d\u003d this)","lastModifiedDate":"2021-10-05"},{"lineNumber":42,"author":{"gitId":"Shruthi0310"},"content":"                || (obj instanceof Time","lastModifiedDate":"2021-10-05"},{"lineNumber":43,"author":{"gitId":"Shruthi0310"},"content":"                \u0026\u0026 time.equals(((Time) obj).time));","lastModifiedDate":"2021-10-05"},{"lineNumber":44,"author":{"gitId":"Shruthi0310"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":45,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":46,"author":{"gitId":"Shruthi0310"},"content":"    @Override","lastModifiedDate":"2021-10-05"},{"lineNumber":47,"author":{"gitId":"Shruthi0310"},"content":"    public String toString() {","lastModifiedDate":"2021-10-05"},{"lineNumber":48,"author":{"gitId":"felix-ong"},"content":"        return LocalTime.parse(time, twentyFourHourFormatter).format(meridiemFormatter);","lastModifiedDate":"2021-10-30"},{"lineNumber":49,"author":{"gitId":"Shruthi0310"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":50,"author":{"gitId":"Shruthi0310"},"content":"}","lastModifiedDate":"2021-10-05"}],"authorContributionMap":{"Shruthi0310":31,"Moley456":9,"felix-ong":10}},{"path":"src/main/java/seedu/address/model/facility/UniqueFacilityList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Shruthi0310"},"content":"package seedu.address.model.facility;","lastModifiedDate":"2021-10-05"},{"lineNumber":2,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":3,"author":{"gitId":"Shruthi0310"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-06"},{"lineNumber":4,"author":{"gitId":"Moley456"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2021-10-10"},{"lineNumber":5,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":6,"author":{"gitId":"Shruthi0310"},"content":"import java.util.Iterator;","lastModifiedDate":"2021-10-05"},{"lineNumber":7,"author":{"gitId":"YoYoCiti"},"content":"import java.util.List;","lastModifiedDate":"2021-10-09"},{"lineNumber":8,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":9,"author":{"gitId":"Shruthi0310"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2021-10-06"},{"lineNumber":10,"author":{"gitId":"Shruthi0310"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-10-06"},{"lineNumber":11,"author":{"gitId":"Shruthi0310"},"content":"import javafx.collections.transformation.FilteredList;","lastModifiedDate":"2021-10-12"},{"lineNumber":12,"author":{"gitId":"Shruthi0310"},"content":"import seedu.address.model.facility.exceptions.DuplicateFacilityException;","lastModifiedDate":"2021-10-12"},{"lineNumber":13,"author":{"gitId":"Shruthi0310"},"content":"import seedu.address.model.facility.exceptions.FacilityNotFoundException;","lastModifiedDate":"2021-10-12"},{"lineNumber":14,"author":{"gitId":"Shruthi0310"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2021-10-12"},{"lineNumber":15,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":16,"author":{"gitId":"Shruthi0310"},"content":"/**","lastModifiedDate":"2021-10-05"},{"lineNumber":17,"author":{"gitId":"Shruthi0310"},"content":" * Represents a list of facilities.","lastModifiedDate":"2021-10-05"},{"lineNumber":18,"author":{"gitId":"Shruthi0310"},"content":" */","lastModifiedDate":"2021-10-05"},{"lineNumber":19,"author":{"gitId":"Shruthi0310"},"content":"public class UniqueFacilityList implements Iterable\u003cFacility\u003e {","lastModifiedDate":"2021-10-05"},{"lineNumber":20,"author":{"gitId":"Moley456"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":21,"author":{"gitId":"YoYoCiti"},"content":"    private final ObservableList\u003cFacility\u003e facilityList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2021-10-09"},{"lineNumber":22,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":23,"author":{"gitId":"Moley456"},"content":"    /**","lastModifiedDate":"2021-10-10"},{"lineNumber":24,"author":{"gitId":"Moley456"},"content":"     * Returns true if the list contains an equivalent facility as the given argument.","lastModifiedDate":"2021-10-10"},{"lineNumber":25,"author":{"gitId":"Moley456"},"content":"     */","lastModifiedDate":"2021-10-10"},{"lineNumber":26,"author":{"gitId":"Moley456"},"content":"    public boolean contains(Facility toCheck) {","lastModifiedDate":"2021-10-10"},{"lineNumber":27,"author":{"gitId":"Moley456"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2021-10-10"},{"lineNumber":28,"author":{"gitId":"Moley456"},"content":"        return facilityList.stream().anyMatch(toCheck::isSameFacility);","lastModifiedDate":"2021-10-10"},{"lineNumber":29,"author":{"gitId":"Moley456"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":30,"author":{"gitId":"Moley456"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":31,"author":{"gitId":"Shruthi0310"},"content":"    /**","lastModifiedDate":"2021-10-05"},{"lineNumber":32,"author":{"gitId":"Shruthi0310"},"content":"     * Adds the specified facility to the facilityList.","lastModifiedDate":"2021-10-05"},{"lineNumber":33,"author":{"gitId":"Shruthi0310"},"content":"     *","lastModifiedDate":"2021-10-05"},{"lineNumber":34,"author":{"gitId":"Shruthi0310"},"content":"     * @param facility Facility to be added to list.","lastModifiedDate":"2021-10-05"},{"lineNumber":35,"author":{"gitId":"Shruthi0310"},"content":"     */","lastModifiedDate":"2021-10-05"},{"lineNumber":36,"author":{"gitId":"Shruthi0310"},"content":"    public void add(Facility facility) {","lastModifiedDate":"2021-10-05"},{"lineNumber":37,"author":{"gitId":"Shruthi0310"},"content":"        requireNonNull(facility);","lastModifiedDate":"2021-10-05"},{"lineNumber":38,"author":{"gitId":"Shruthi0310"},"content":"        facilityList.add(facility);","lastModifiedDate":"2021-10-05"},{"lineNumber":39,"author":{"gitId":"Shruthi0310"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":40,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":41,"author":{"gitId":"YoYoCiti"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":42,"author":{"gitId":"YoYoCiti"},"content":"     * Replaces the facility {@code target} in the list with {@code editedFacility}.","lastModifiedDate":"2021-10-12"},{"lineNumber":43,"author":{"gitId":"YoYoCiti"},"content":"     * {@code target} must exist in the list.","lastModifiedDate":"2021-10-12"},{"lineNumber":44,"author":{"gitId":"YoYoCiti"},"content":"     * The facility parameter of {@code editedFacility} must not be the same as another existing facility in the list.","lastModifiedDate":"2021-10-12"},{"lineNumber":45,"author":{"gitId":"YoYoCiti"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":46,"author":{"gitId":"YoYoCiti"},"content":"    public void setFacility(Facility target, Facility editedFacility) {","lastModifiedDate":"2021-10-12"},{"lineNumber":47,"author":{"gitId":"YoYoCiti"},"content":"        requireAllNonNull(target, editedFacility);","lastModifiedDate":"2021-10-12"},{"lineNumber":48,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":49,"author":{"gitId":"YoYoCiti"},"content":"        int index \u003d facilityList.indexOf(target);","lastModifiedDate":"2021-10-12"},{"lineNumber":50,"author":{"gitId":"YoYoCiti"},"content":"        if (index \u003d\u003d -1) {","lastModifiedDate":"2021-10-12"},{"lineNumber":51,"author":{"gitId":"YoYoCiti"},"content":"            throw new FacilityNotFoundException();","lastModifiedDate":"2021-10-12"},{"lineNumber":52,"author":{"gitId":"YoYoCiti"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":53,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":54,"author":{"gitId":"YoYoCiti"},"content":"        if (!target.isSameFacility(editedFacility) \u0026\u0026 contains(editedFacility)) {","lastModifiedDate":"2021-10-12"},{"lineNumber":55,"author":{"gitId":"YoYoCiti"},"content":"            throw new DuplicateFacilityException();","lastModifiedDate":"2021-10-12"},{"lineNumber":56,"author":{"gitId":"YoYoCiti"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":57,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":58,"author":{"gitId":"YoYoCiti"},"content":"        facilityList.set(index, editedFacility);","lastModifiedDate":"2021-10-12"},{"lineNumber":59,"author":{"gitId":"YoYoCiti"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":60,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":61,"author":{"gitId":"YoYoCiti"},"content":"    /**","lastModifiedDate":"2021-10-08"},{"lineNumber":62,"author":{"gitId":"YoYoCiti"},"content":"     * Removes the specified facility from the facilityList.","lastModifiedDate":"2021-10-08"},{"lineNumber":63,"author":{"gitId":"YoYoCiti"},"content":"     *","lastModifiedDate":"2021-10-08"},{"lineNumber":64,"author":{"gitId":"YoYoCiti"},"content":"     * @param toRemove Facility to be removed.","lastModifiedDate":"2021-10-08"},{"lineNumber":65,"author":{"gitId":"YoYoCiti"},"content":"     */","lastModifiedDate":"2021-10-08"},{"lineNumber":66,"author":{"gitId":"YoYoCiti"},"content":"    public void remove(Facility toRemove) {","lastModifiedDate":"2021-10-08"},{"lineNumber":67,"author":{"gitId":"YoYoCiti"},"content":"        requireNonNull(toRemove);","lastModifiedDate":"2021-10-08"},{"lineNumber":68,"author":{"gitId":"YoYoCiti"},"content":"        if (!facilityList.remove(toRemove)) {","lastModifiedDate":"2021-10-08"},{"lineNumber":69,"author":{"gitId":"YoYoCiti"},"content":"            throw new FacilityNotFoundException();","lastModifiedDate":"2021-10-08"},{"lineNumber":70,"author":{"gitId":"YoYoCiti"},"content":"        }","lastModifiedDate":"2021-10-08"},{"lineNumber":71,"author":{"gitId":"YoYoCiti"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":72,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":73,"author":{"gitId":"Shruthi0310"},"content":"    @Override","lastModifiedDate":"2021-10-05"},{"lineNumber":74,"author":{"gitId":"Shruthi0310"},"content":"    public Iterator\u003cFacility\u003e iterator() {","lastModifiedDate":"2021-10-05"},{"lineNumber":75,"author":{"gitId":"Shruthi0310"},"content":"        return facilityList.iterator();","lastModifiedDate":"2021-10-05"},{"lineNumber":76,"author":{"gitId":"Shruthi0310"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":77,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":78,"author":{"gitId":"Shruthi0310"},"content":"    /**","lastModifiedDate":"2021-10-05"},{"lineNumber":79,"author":{"gitId":"Shruthi0310"},"content":"     * Returns the facilities list.","lastModifiedDate":"2021-10-05"},{"lineNumber":80,"author":{"gitId":"Shruthi0310"},"content":"     *","lastModifiedDate":"2021-10-05"},{"lineNumber":81,"author":{"gitId":"Shruthi0310"},"content":"     * @return ObservableList of containing all facilities.","lastModifiedDate":"2021-10-05"},{"lineNumber":82,"author":{"gitId":"Shruthi0310"},"content":"     */","lastModifiedDate":"2021-10-05"},{"lineNumber":83,"author":{"gitId":"Shruthi0310"},"content":"    public ObservableList\u003cFacility\u003e getObservableList() {","lastModifiedDate":"2021-10-05"},{"lineNumber":84,"author":{"gitId":"Shruthi0310"},"content":"        return facilityList;","lastModifiedDate":"2021-10-05"},{"lineNumber":85,"author":{"gitId":"Shruthi0310"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":86,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":87,"author":{"gitId":"Moley456"},"content":"    /**","lastModifiedDate":"2021-10-10"},{"lineNumber":88,"author":{"gitId":"Moley456"},"content":"     * Replaces the contents of this list with {@code facilities}.","lastModifiedDate":"2021-10-10"},{"lineNumber":89,"author":{"gitId":"Moley456"},"content":"     * {@code facilities} must not contain duplicate facilities.","lastModifiedDate":"2021-10-10"},{"lineNumber":90,"author":{"gitId":"Moley456"},"content":"     */","lastModifiedDate":"2021-10-10"},{"lineNumber":91,"author":{"gitId":"Moley456"},"content":"    public void setFacilities(List\u003cFacility\u003e facilities) {","lastModifiedDate":"2021-10-10"},{"lineNumber":92,"author":{"gitId":"Moley456"},"content":"        requireAllNonNull(facilities);","lastModifiedDate":"2021-10-10"},{"lineNumber":93,"author":{"gitId":"Moley456"},"content":"        if (!facilitiesAreUnique(facilities)) {","lastModifiedDate":"2021-10-10"},{"lineNumber":94,"author":{"gitId":"YoYoCiti"},"content":"            throw new DuplicateFacilityException();","lastModifiedDate":"2021-10-12"},{"lineNumber":95,"author":{"gitId":"Moley456"},"content":"        }","lastModifiedDate":"2021-10-10"},{"lineNumber":96,"author":{"gitId":"Moley456"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":97,"author":{"gitId":"Moley456"},"content":"        facilityList.setAll(facilities);","lastModifiedDate":"2021-10-10"},{"lineNumber":98,"author":{"gitId":"Moley456"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":99,"author":{"gitId":"Moley456"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":100,"author":{"gitId":"YoYoCiti"},"content":"    /**","lastModifiedDate":"2021-10-06"},{"lineNumber":101,"author":{"gitId":"YoYoCiti"},"content":"     * Replaces the contents of this list with empty list.","lastModifiedDate":"2021-10-06"},{"lineNumber":102,"author":{"gitId":"YoYoCiti"},"content":"     */","lastModifiedDate":"2021-10-06"},{"lineNumber":103,"author":{"gitId":"YoYoCiti"},"content":"    public void resetFacilities() {","lastModifiedDate":"2021-10-06"},{"lineNumber":104,"author":{"gitId":"YoYoCiti"},"content":"        facilityList.setAll();","lastModifiedDate":"2021-10-06"},{"lineNumber":105,"author":{"gitId":"YoYoCiti"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":106,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":107,"author":{"gitId":"YoYoCiti"},"content":"    @Override","lastModifiedDate":"2021-10-09"},{"lineNumber":108,"author":{"gitId":"YoYoCiti"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-09"},{"lineNumber":109,"author":{"gitId":"YoYoCiti"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-09"},{"lineNumber":110,"author":{"gitId":"YoYoCiti"},"content":"                || (other instanceof UniqueFacilityList // instanceof handles nulls","lastModifiedDate":"2021-10-09"},{"lineNumber":111,"author":{"gitId":"YoYoCiti"},"content":"                \u0026\u0026 facilityList.equals(((UniqueFacilityList) other).facilityList));","lastModifiedDate":"2021-10-09"},{"lineNumber":112,"author":{"gitId":"YoYoCiti"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":113,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":114,"author":{"gitId":"YoYoCiti"},"content":"    /**","lastModifiedDate":"2021-10-26"},{"lineNumber":115,"author":{"gitId":"YoYoCiti"},"content":"     * Returns the total capacity of the facilities in the list.","lastModifiedDate":"2021-10-26"},{"lineNumber":116,"author":{"gitId":"YoYoCiti"},"content":"     */","lastModifiedDate":"2021-10-26"},{"lineNumber":117,"author":{"gitId":"YoYoCiti"},"content":"    public int getTotalCapacity() {","lastModifiedDate":"2021-10-26"},{"lineNumber":118,"author":{"gitId":"YoYoCiti"},"content":"        int count \u003d 0;","lastModifiedDate":"2021-10-26"},{"lineNumber":119,"author":{"gitId":"YoYoCiti"},"content":"        for (Facility facility: facilityList) {","lastModifiedDate":"2021-10-26"},{"lineNumber":120,"author":{"gitId":"YoYoCiti"},"content":"            count +\u003d Integer.parseInt(facility.getCapacity().capacity);","lastModifiedDate":"2021-10-26"},{"lineNumber":121,"author":{"gitId":"YoYoCiti"},"content":"        }","lastModifiedDate":"2021-10-26"},{"lineNumber":122,"author":{"gitId":"YoYoCiti"},"content":"        return count;","lastModifiedDate":"2021-10-26"},{"lineNumber":123,"author":{"gitId":"YoYoCiti"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":124,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":125,"author":{"gitId":"Shruthi0310"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":126,"author":{"gitId":"Shruthi0310"},"content":"     * Allocates members into the different facilities.","lastModifiedDate":"2021-10-12"},{"lineNumber":127,"author":{"gitId":"Shruthi0310"},"content":"     *","lastModifiedDate":"2021-10-12"},{"lineNumber":128,"author":{"gitId":"Shruthi0310"},"content":"     * @param members Members to be allocated.","lastModifiedDate":"2021-10-12"},{"lineNumber":129,"author":{"gitId":"Shruthi0310"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":130,"author":{"gitId":"Shruthi0310"},"content":"    public void allocateMembersToFacilities(FilteredList\u003cPerson\u003e members) {","lastModifiedDate":"2021-10-12"},{"lineNumber":131,"author":{"gitId":"Shruthi0310"},"content":"        int index \u003d 0;","lastModifiedDate":"2021-10-12"},{"lineNumber":132,"author":{"gitId":"Shruthi0310"},"content":"        for (Facility facility : facilityList) {","lastModifiedDate":"2021-10-12"},{"lineNumber":133,"author":{"gitId":"Shruthi0310"},"content":"            Facility toEdit \u003d facility;","lastModifiedDate":"2021-10-12"},{"lineNumber":134,"author":{"gitId":"Shruthi0310"},"content":"            toEdit.clearAllocationList();","lastModifiedDate":"2021-10-12"},{"lineNumber":135,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":136,"author":{"gitId":"Shruthi0310"},"content":"            int facilityCount \u003d 0;","lastModifiedDate":"2021-10-12"},{"lineNumber":137,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":138,"author":{"gitId":"Shruthi0310"},"content":"            while (toEdit.isWithinMaxCapacity(facilityCount + 1)","lastModifiedDate":"2021-10-12"},{"lineNumber":139,"author":{"gitId":"Shruthi0310"},"content":"                    \u0026\u0026 !(index \u003e members.size() - 1)) {","lastModifiedDate":"2021-10-12"},{"lineNumber":140,"author":{"gitId":"Shruthi0310"},"content":"                toEdit.addPersonToFacility(members.get(index));","lastModifiedDate":"2021-10-12"},{"lineNumber":141,"author":{"gitId":"Shruthi0310"},"content":"                facilityCount++;","lastModifiedDate":"2021-10-12"},{"lineNumber":142,"author":{"gitId":"Shruthi0310"},"content":"                index++;","lastModifiedDate":"2021-10-12"},{"lineNumber":143,"author":{"gitId":"Shruthi0310"},"content":"            }","lastModifiedDate":"2021-10-12"},{"lineNumber":144,"author":{"gitId":"felix-ong"},"content":"            this.setFacility(facility, toEdit);","lastModifiedDate":"2021-10-26"},{"lineNumber":145,"author":{"gitId":"Shruthi0310"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":146,"author":{"gitId":"Shruthi0310"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":147,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":148,"author":{"gitId":"Shruthi0310"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":149,"author":{"gitId":"Shruthi0310"},"content":"     * Replaces target Facility with edited Facility. Does not","lastModifiedDate":"2021-10-12"},{"lineNumber":150,"author":{"gitId":"Shruthi0310"},"content":"     * check for duplicates.","lastModifiedDate":"2021-10-12"},{"lineNumber":151,"author":{"gitId":"Shruthi0310"},"content":"     *","lastModifiedDate":"2021-10-12"},{"lineNumber":152,"author":{"gitId":"Shruthi0310"},"content":"     * @param target Facility to be replaced.","lastModifiedDate":"2021-10-12"},{"lineNumber":153,"author":{"gitId":"Shruthi0310"},"content":"     * @param editedFacility Facility replacing old one.","lastModifiedDate":"2021-10-12"},{"lineNumber":154,"author":{"gitId":"Shruthi0310"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":155,"author":{"gitId":"Shruthi0310"},"content":"    public void replaceFacility(Facility target, Facility editedFacility) {","lastModifiedDate":"2021-10-12"},{"lineNumber":156,"author":{"gitId":"Shruthi0310"},"content":"        int index \u003d facilityList.indexOf(target);","lastModifiedDate":"2021-10-12"},{"lineNumber":157,"author":{"gitId":"Shruthi0310"},"content":"        if (index \u003d\u003d -1) {","lastModifiedDate":"2021-10-12"},{"lineNumber":158,"author":{"gitId":"Shruthi0310"},"content":"            throw new FacilityNotFoundException();","lastModifiedDate":"2021-10-12"},{"lineNumber":159,"author":{"gitId":"Shruthi0310"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":160,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":161,"author":{"gitId":"Shruthi0310"},"content":"        facilityList.set(index, editedFacility);","lastModifiedDate":"2021-10-12"},{"lineNumber":162,"author":{"gitId":"Shruthi0310"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":163,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":164,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":165,"author":{"gitId":"Moley456"},"content":"    /**","lastModifiedDate":"2021-10-10"},{"lineNumber":166,"author":{"gitId":"Moley456"},"content":"     * Returns true if {@code persons} contains only unique persons.","lastModifiedDate":"2021-10-10"},{"lineNumber":167,"author":{"gitId":"Moley456"},"content":"     */","lastModifiedDate":"2021-10-10"},{"lineNumber":168,"author":{"gitId":"Moley456"},"content":"    private boolean facilitiesAreUnique(List\u003cFacility\u003e facilities) {","lastModifiedDate":"2021-10-10"},{"lineNumber":169,"author":{"gitId":"Moley456"},"content":"        for (int i \u003d 0; i \u003c facilities.size() - 1; i++) {","lastModifiedDate":"2021-10-10"},{"lineNumber":170,"author":{"gitId":"Moley456"},"content":"            for (int j \u003d i + 1; j \u003c facilities.size(); j++) {","lastModifiedDate":"2021-10-10"},{"lineNumber":171,"author":{"gitId":"Moley456"},"content":"                if (facilities.get(i).isSameFacility(facilities.get(j))) {","lastModifiedDate":"2021-10-10"},{"lineNumber":172,"author":{"gitId":"Moley456"},"content":"                    return false;","lastModifiedDate":"2021-10-10"},{"lineNumber":173,"author":{"gitId":"Moley456"},"content":"                }","lastModifiedDate":"2021-10-10"},{"lineNumber":174,"author":{"gitId":"Moley456"},"content":"            }","lastModifiedDate":"2021-10-10"},{"lineNumber":175,"author":{"gitId":"YoYoCiti"},"content":"        }","lastModifiedDate":"2021-10-09"},{"lineNumber":176,"author":{"gitId":"Moley456"},"content":"        return true;","lastModifiedDate":"2021-10-10"},{"lineNumber":177,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":178,"author":{"gitId":"YoYoCiti"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":179,"author":{"gitId":"Moley456"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":180,"author":{"gitId":"Shruthi0310"},"content":"}","lastModifiedDate":"2021-10-05"}],"authorContributionMap":{"YoYoCiti":64,"Shruthi0310":81,"Moley456":34,"felix-ong":1}},{"path":"src/main/java/seedu/address/model/facility/exceptions/DuplicateFacilityException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"YoYoCiti"},"content":"package seedu.address.model.facility.exceptions;","lastModifiedDate":"2021-10-12"},{"lineNumber":2,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":3,"author":{"gitId":"YoYoCiti"},"content":"/**","lastModifiedDate":"2021-10-12"},{"lineNumber":4,"author":{"gitId":"YoYoCiti"},"content":" * Signals that the operation will result in duplicate Facilities (Facilities are considered duplicates if they","lastModifiedDate":"2021-10-12"},{"lineNumber":5,"author":{"gitId":"YoYoCiti"},"content":" * have the same name and location.","lastModifiedDate":"2021-10-12"},{"lineNumber":6,"author":{"gitId":"YoYoCiti"},"content":" */","lastModifiedDate":"2021-10-12"},{"lineNumber":7,"author":{"gitId":"YoYoCiti"},"content":"public class DuplicateFacilityException extends RuntimeException {","lastModifiedDate":"2021-10-12"},{"lineNumber":8,"author":{"gitId":"YoYoCiti"},"content":"    public DuplicateFacilityException() {","lastModifiedDate":"2021-10-12"},{"lineNumber":9,"author":{"gitId":"YoYoCiti"},"content":"        super(\"Operation would result in duplicate facilities\");","lastModifiedDate":"2021-10-12"},{"lineNumber":10,"author":{"gitId":"YoYoCiti"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":11,"author":{"gitId":"YoYoCiti"},"content":"}","lastModifiedDate":"2021-10-12"}],"authorContributionMap":{"YoYoCiti":11}},{"path":"src/main/java/seedu/address/model/facility/exceptions/FacilityNotFoundException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"YoYoCiti"},"content":"package seedu.address.model.facility.exceptions;","lastModifiedDate":"2021-10-08"},{"lineNumber":2,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":3,"author":{"gitId":"YoYoCiti"},"content":"/**","lastModifiedDate":"2021-10-08"},{"lineNumber":4,"author":{"gitId":"YoYoCiti"},"content":" * Signals that the operation is unable to find the specified facility.","lastModifiedDate":"2021-10-08"},{"lineNumber":5,"author":{"gitId":"YoYoCiti"},"content":" */","lastModifiedDate":"2021-10-08"},{"lineNumber":6,"author":{"gitId":"YoYoCiti"},"content":"public class FacilityNotFoundException extends RuntimeException {}","lastModifiedDate":"2021-10-08"}],"authorContributionMap":{"YoYoCiti":6}},{"path":"src/main/java/seedu/address/model/person/Availability.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"felix-ong"},"content":"package seedu.address.model.person;","lastModifiedDate":"2021-10-10"},{"lineNumber":2,"author":{"gitId":"felix-ong"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":3,"author":{"gitId":"felix-ong"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-10"},{"lineNumber":4,"author":{"gitId":"felix-ong"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":5,"author":{"gitId":"felix-ong"},"content":"import java.time.DayOfWeek;","lastModifiedDate":"2021-10-15"},{"lineNumber":6,"author":{"gitId":"felix-ong"},"content":"import java.time.format.TextStyle;","lastModifiedDate":"2021-10-15"},{"lineNumber":7,"author":{"gitId":"felix-ong"},"content":"import java.util.List;","lastModifiedDate":"2021-10-12"},{"lineNumber":8,"author":{"gitId":"felix-ong"},"content":"import java.util.Locale;","lastModifiedDate":"2021-10-15"},{"lineNumber":9,"author":{"gitId":"felix-ong"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2021-10-15"},{"lineNumber":10,"author":{"gitId":"felix-ong"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":11,"author":{"gitId":"felix-ong"},"content":"/**","lastModifiedDate":"2021-10-10"},{"lineNumber":12,"author":{"gitId":"felix-ong"},"content":" * Represents a Person\u0027s availability in the address book.","lastModifiedDate":"2021-10-10"},{"lineNumber":13,"author":{"gitId":"felix-ong"},"content":" * Guarantees: immutable; is always valid","lastModifiedDate":"2021-10-10"},{"lineNumber":14,"author":{"gitId":"felix-ong"},"content":" */","lastModifiedDate":"2021-10-10"},{"lineNumber":15,"author":{"gitId":"felix-ong"},"content":"public class Availability {","lastModifiedDate":"2021-10-10"},{"lineNumber":16,"author":{"gitId":"felix-ong"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":17,"author":{"gitId":"felix-ong"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2021-10-12"},{"lineNumber":18,"author":{"gitId":"felix-ong"},"content":"            \"Availability should be given as a list of numbers from 1 to 7, separated by a space each, \"","lastModifiedDate":"2021-10-19"},{"lineNumber":19,"author":{"gitId":"felix-ong"},"content":"            + \"where 1 represents Monday, 2 represents Tuesday... and 7 represents Sunday\";","lastModifiedDate":"2021-10-15"},{"lineNumber":20,"author":{"gitId":"felix-ong"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":21,"author":{"gitId":"felix-ong"},"content":"    public static final String VALIDATION_REGEX \u003d \"[1-7]\"; // numbers from 1 to 7","lastModifiedDate":"2021-10-19"},{"lineNumber":22,"author":{"gitId":"felix-ong"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":23,"author":{"gitId":"felix-ong"},"content":"    public final List\u003cDayOfWeek\u003e values;","lastModifiedDate":"2021-10-15"},{"lineNumber":24,"author":{"gitId":"felix-ong"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":25,"author":{"gitId":"felix-ong"},"content":"    /**","lastModifiedDate":"2021-10-10"},{"lineNumber":26,"author":{"gitId":"felix-ong"},"content":"     * Constructs an {@code Availability}.","lastModifiedDate":"2021-10-10"},{"lineNumber":27,"author":{"gitId":"felix-ong"},"content":"     *","lastModifiedDate":"2021-10-10"},{"lineNumber":28,"author":{"gitId":"felix-ong"},"content":"     * @param availability A valid availability string.","lastModifiedDate":"2021-10-10"},{"lineNumber":29,"author":{"gitId":"felix-ong"},"content":"     */","lastModifiedDate":"2021-10-10"},{"lineNumber":30,"author":{"gitId":"felix-ong"},"content":"    public Availability(List\u003cDayOfWeek\u003e availability) {","lastModifiedDate":"2021-10-15"},{"lineNumber":31,"author":{"gitId":"felix-ong"},"content":"        requireNonNull(availability);","lastModifiedDate":"2021-10-10"},{"lineNumber":32,"author":{"gitId":"felix-ong"},"content":"        values \u003d availability;","lastModifiedDate":"2021-10-10"},{"lineNumber":33,"author":{"gitId":"felix-ong"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":34,"author":{"gitId":"felix-ong"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":35,"author":{"gitId":"felix-ong"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":36,"author":{"gitId":"felix-ong"},"content":"     * Returns true if a given availability list is valid.","lastModifiedDate":"2021-10-15"},{"lineNumber":37,"author":{"gitId":"felix-ong"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":38,"author":{"gitId":"felix-ong"},"content":"    public static boolean isValidAvailability(List\u003cString\u003e test) {","lastModifiedDate":"2021-10-12"},{"lineNumber":39,"author":{"gitId":"felix-ong"},"content":"        if (test.get(0).isEmpty()) { // empty but valid","lastModifiedDate":"2021-10-16"},{"lineNumber":40,"author":{"gitId":"felix-ong"},"content":"            return true;","lastModifiedDate":"2021-10-15"},{"lineNumber":41,"author":{"gitId":"felix-ong"},"content":"        }","lastModifiedDate":"2021-10-15"},{"lineNumber":42,"author":{"gitId":"felix-ong"},"content":"        for (String s : test) {","lastModifiedDate":"2021-10-15"},{"lineNumber":43,"author":{"gitId":"felix-ong"},"content":"            if (!s.matches(VALIDATION_REGEX)) {","lastModifiedDate":"2021-10-19"},{"lineNumber":44,"author":{"gitId":"felix-ong"},"content":"                return false;","lastModifiedDate":"2021-10-12"},{"lineNumber":45,"author":{"gitId":"felix-ong"},"content":"            }","lastModifiedDate":"2021-10-12"},{"lineNumber":46,"author":{"gitId":"felix-ong"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":47,"author":{"gitId":"felix-ong"},"content":"        return true;","lastModifiedDate":"2021-10-12"},{"lineNumber":48,"author":{"gitId":"felix-ong"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":49,"author":{"gitId":"felix-ong"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":50,"author":{"gitId":"felix-ong"},"content":"    public boolean contains(DayOfWeek day) {","lastModifiedDate":"2021-10-16"},{"lineNumber":51,"author":{"gitId":"Moley456"},"content":"        return values.contains(day);","lastModifiedDate":"2021-10-12"},{"lineNumber":52,"author":{"gitId":"Moley456"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":53,"author":{"gitId":"Moley456"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":54,"author":{"gitId":"tsinyee"},"content":"    public boolean containsAll(Availability availability) {","lastModifiedDate":"2021-10-26"},{"lineNumber":55,"author":{"gitId":"tsinyee"},"content":"        return this.values.containsAll(availability.values);","lastModifiedDate":"2021-10-26"},{"lineNumber":56,"author":{"gitId":"tsinyee"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":57,"author":{"gitId":"tsinyee"},"content":"    /**","lastModifiedDate":"2021-10-22"},{"lineNumber":58,"author":{"gitId":"tsinyee"},"content":"     * Returns true if availability list is empty.","lastModifiedDate":"2021-10-22"},{"lineNumber":59,"author":{"gitId":"tsinyee"},"content":"     */","lastModifiedDate":"2021-10-22"},{"lineNumber":60,"author":{"gitId":"tsinyee"},"content":"    public boolean isEmpty() {","lastModifiedDate":"2021-10-22"},{"lineNumber":61,"author":{"gitId":"tsinyee"},"content":"        return values.isEmpty();","lastModifiedDate":"2021-10-22"},{"lineNumber":62,"author":{"gitId":"tsinyee"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":63,"author":{"gitId":"tsinyee"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":64,"author":{"gitId":"felix-ong"},"content":"    @Override","lastModifiedDate":"2021-10-10"},{"lineNumber":65,"author":{"gitId":"felix-ong"},"content":"    public String toString() {","lastModifiedDate":"2021-10-10"},{"lineNumber":66,"author":{"gitId":"felix-ong"},"content":"        return values.stream().map(dayOfWeek -\u003e dayOfWeek.getDisplayName(TextStyle.SHORT, Locale.getDefault()))","lastModifiedDate":"2021-10-15"},{"lineNumber":67,"author":{"gitId":"felix-ong"},"content":"                .collect(Collectors.joining(\" \"));","lastModifiedDate":"2021-10-15"},{"lineNumber":68,"author":{"gitId":"felix-ong"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":69,"author":{"gitId":"felix-ong"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":70,"author":{"gitId":"felix-ong"},"content":"    @Override","lastModifiedDate":"2021-10-10"},{"lineNumber":71,"author":{"gitId":"felix-ong"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-10"},{"lineNumber":72,"author":{"gitId":"felix-ong"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-10"},{"lineNumber":73,"author":{"gitId":"felix-ong"},"content":"                || (other instanceof Availability // instanceof handles nulls","lastModifiedDate":"2021-10-10"},{"lineNumber":74,"author":{"gitId":"felix-ong"},"content":"                \u0026\u0026 values.equals(((Availability) other).values)); // state check","lastModifiedDate":"2021-10-10"},{"lineNumber":75,"author":{"gitId":"felix-ong"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":76,"author":{"gitId":"felix-ong"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":77,"author":{"gitId":"felix-ong"},"content":"    @Override","lastModifiedDate":"2021-10-10"},{"lineNumber":78,"author":{"gitId":"felix-ong"},"content":"    public int hashCode() {","lastModifiedDate":"2021-10-10"},{"lineNumber":79,"author":{"gitId":"felix-ong"},"content":"        return values.hashCode();","lastModifiedDate":"2021-10-10"},{"lineNumber":80,"author":{"gitId":"felix-ong"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":81,"author":{"gitId":"felix-ong"},"content":"}","lastModifiedDate":"2021-10-10"}],"authorContributionMap":{"Moley456":3,"felix-ong":68,"tsinyee":10}},{"path":"src/main/java/seedu/address/model/person/AvailabilityContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tsinyee"},"content":"package seedu.address.model.person;","lastModifiedDate":"2021-10-26"},{"lineNumber":2,"author":{"gitId":"tsinyee"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":3,"author":{"gitId":"tsinyee"},"content":"import java.util.List;","lastModifiedDate":"2021-10-26"},{"lineNumber":4,"author":{"gitId":"tsinyee"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2021-10-26"},{"lineNumber":5,"author":{"gitId":"tsinyee"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":6,"author":{"gitId":"tsinyee"},"content":"/**","lastModifiedDate":"2021-10-28"},{"lineNumber":7,"author":{"gitId":"tsinyee"},"content":" * Tests that a {@code Person}\u0027s {@code Availability} matches any of the availability keywords given.","lastModifiedDate":"2021-10-28"},{"lineNumber":8,"author":{"gitId":"tsinyee"},"content":" */","lastModifiedDate":"2021-10-28"},{"lineNumber":9,"author":{"gitId":"tsinyee"},"content":"public class AvailabilityContainsKeywordsPredicate implements Predicate\u003cPerson\u003e {","lastModifiedDate":"2021-10-26"},{"lineNumber":10,"author":{"gitId":"tsinyee"},"content":"    private final List\u003cAvailability\u003e availability;","lastModifiedDate":"2021-10-26"},{"lineNumber":11,"author":{"gitId":"tsinyee"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":12,"author":{"gitId":"tsinyee"},"content":"    public AvailabilityContainsKeywordsPredicate(List\u003cAvailability\u003e availability) {","lastModifiedDate":"2021-10-26"},{"lineNumber":13,"author":{"gitId":"tsinyee"},"content":"        this.availability \u003d availability;","lastModifiedDate":"2021-10-26"},{"lineNumber":14,"author":{"gitId":"tsinyee"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":15,"author":{"gitId":"tsinyee"},"content":"    @Override","lastModifiedDate":"2021-10-26"},{"lineNumber":16,"author":{"gitId":"tsinyee"},"content":"    public boolean test(Person person) {","lastModifiedDate":"2021-10-26"},{"lineNumber":17,"author":{"gitId":"tsinyee"},"content":"        return availability.stream()","lastModifiedDate":"2021-10-26"},{"lineNumber":18,"author":{"gitId":"tsinyee"},"content":"                .anyMatch(availability -\u003e person.getAvailability().containsAll(availability));","lastModifiedDate":"2021-10-26"},{"lineNumber":19,"author":{"gitId":"tsinyee"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":20,"author":{"gitId":"tsinyee"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":21,"author":{"gitId":"tsinyee"},"content":"    @Override","lastModifiedDate":"2021-10-28"},{"lineNumber":22,"author":{"gitId":"tsinyee"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-28"},{"lineNumber":23,"author":{"gitId":"tsinyee"},"content":"        return other \u003d\u003d this","lastModifiedDate":"2021-10-28"},{"lineNumber":24,"author":{"gitId":"tsinyee"},"content":"                || (other instanceof AvailabilityContainsKeywordsPredicate","lastModifiedDate":"2021-10-28"},{"lineNumber":25,"author":{"gitId":"tsinyee"},"content":"                \u0026\u0026 availability.equals(((AvailabilityContainsKeywordsPredicate) other).availability));","lastModifiedDate":"2021-10-28"},{"lineNumber":26,"author":{"gitId":"tsinyee"},"content":"    }","lastModifiedDate":"2021-10-28"},{"lineNumber":27,"author":{"gitId":"tsinyee"},"content":"}","lastModifiedDate":"2021-10-26"}],"authorContributionMap":{"tsinyee":27}},{"path":"src/main/java/seedu/address/model/person/NameContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2017-06-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":7,"author":{"gitId":"tsinyee"},"content":" * Tests that a {@code Person}\u0027s {@code Name} matches any of the name keywords given.","lastModifiedDate":"2021-10-28"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class NameContainsKeywordsPredicate implements Predicate\u003cPerson\u003e {","lastModifiedDate":"2018-01-10"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    private final List\u003cString\u003e keywords;","lastModifiedDate":"2017-06-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public NameContainsKeywordsPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public boolean test(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        return keywords.stream()","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"tsinyee"},"content":"                .anyMatch(keyword -\u003e person.getName().toString().toLowerCase().contains(keyword));","lastModifiedDate":"2021-10-31"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"                || (other instanceof NameContainsKeywordsPredicate // instanceof handles nulls","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"                \u0026\u0026 keywords.equals(((NameContainsKeywordsPredicate) other).keywords)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"-":27,"tsinyee":2}},{"path":"src/main/java/seedu/address/model/person/Person.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2016-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2017-05-19"},{"lineNumber":3,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"felix-ong"},"content":"import java.time.DayOfWeek;","lastModifiedDate":"2021-10-16"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2021-10-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2021-10-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2021-10-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2021-10-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Represents a Person in the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * Guarantees: details are present and not null, field values are validated, immutable.","lastModifiedDate":"2017-12-20"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class Person {","lastModifiedDate":"2018-01-10"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    // Identity fields","lastModifiedDate":"2018-04-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private final Name name;","lastModifiedDate":"2017-12-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private final Phone phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    // Data fields","lastModifiedDate":"2018-04-19"},{"lineNumber":25,"author":{"gitId":"felix-ong"},"content":"    private final Availability availability;","lastModifiedDate":"2021-10-10"},{"lineNumber":26,"author":{"gitId":"Shruthi0310"},"content":"    private final TodayAttendance todayAttendance;","lastModifiedDate":"2021-10-21"},{"lineNumber":27,"author":{"gitId":"Shruthi0310"},"content":"    private final TotalAttendance totalAttendance;","lastModifiedDate":"2021-10-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final Set\u003cTag\u003e tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2021-10-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"tsinyee"},"content":"    public Person(Name name, Phone phone, Availability availability, Set\u003cTag\u003e tags) {","lastModifiedDate":"2021-10-21"},{"lineNumber":34,"author":{"gitId":"tsinyee"},"content":"        requireAllNonNull(name, phone, availability, tags);","lastModifiedDate":"2021-10-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2017-12-20"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":37,"author":{"gitId":"felix-ong"},"content":"        this.availability \u003d availability;","lastModifiedDate":"2021-10-10"},{"lineNumber":38,"author":{"gitId":"Shruthi0310"},"content":"        this.todayAttendance \u003d new TodayAttendance(false);","lastModifiedDate":"2021-10-21"},{"lineNumber":39,"author":{"gitId":"Shruthi0310"},"content":"        this.totalAttendance \u003d new TotalAttendance(0);","lastModifiedDate":"2021-10-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        this.tags.addAll(tags);","lastModifiedDate":"2021-10-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"Shruthi0310"},"content":"    /**","lastModifiedDate":"2021-10-23"},{"lineNumber":44,"author":{"gitId":"Shruthi0310"},"content":"     * Constructor with all fields of a member.","lastModifiedDate":"2021-10-23"},{"lineNumber":45,"author":{"gitId":"Shruthi0310"},"content":"     * @param name Name of member.","lastModifiedDate":"2021-10-23"},{"lineNumber":46,"author":{"gitId":"Shruthi0310"},"content":"     * @param phone Phone number of member.","lastModifiedDate":"2021-10-23"},{"lineNumber":47,"author":{"gitId":"Shruthi0310"},"content":"     * @param availability Availability of member.","lastModifiedDate":"2021-10-23"},{"lineNumber":48,"author":{"gitId":"Shruthi0310"},"content":"     * @param todayAttendance Today\u0027s attendance of member.","lastModifiedDate":"2021-10-23"},{"lineNumber":49,"author":{"gitId":"Shruthi0310"},"content":"     * @param totalAttendance Total attendance of member.","lastModifiedDate":"2021-10-23"},{"lineNumber":50,"author":{"gitId":"Shruthi0310"},"content":"     * @param tags Tags associated with member.","lastModifiedDate":"2021-10-23"},{"lineNumber":51,"author":{"gitId":"Shruthi0310"},"content":"     */","lastModifiedDate":"2021-10-23"},{"lineNumber":52,"author":{"gitId":"Shruthi0310"},"content":"    public Person(Name name, Phone phone, Availability availability,","lastModifiedDate":"2021-10-23"},{"lineNumber":53,"author":{"gitId":"Shruthi0310"},"content":"                  TodayAttendance todayAttendance, TotalAttendance totalAttendance,","lastModifiedDate":"2021-10-23"},{"lineNumber":54,"author":{"gitId":"Shruthi0310"},"content":"                  Set\u003cTag\u003e tags) {","lastModifiedDate":"2021-10-23"},{"lineNumber":55,"author":{"gitId":"Shruthi0310"},"content":"        requireAllNonNull(name, phone, availability, todayAttendance, totalAttendance, tags);","lastModifiedDate":"2021-10-23"},{"lineNumber":56,"author":{"gitId":"Shruthi0310"},"content":"        this.name \u003d name;","lastModifiedDate":"2021-10-23"},{"lineNumber":57,"author":{"gitId":"Shruthi0310"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2021-10-23"},{"lineNumber":58,"author":{"gitId":"Shruthi0310"},"content":"        this.availability \u003d availability;","lastModifiedDate":"2021-10-23"},{"lineNumber":59,"author":{"gitId":"Shruthi0310"},"content":"        this.totalAttendance \u003d totalAttendance;","lastModifiedDate":"2021-10-23"},{"lineNumber":60,"author":{"gitId":"Shruthi0310"},"content":"        this.todayAttendance \u003d todayAttendance;","lastModifiedDate":"2021-10-23"},{"lineNumber":61,"author":{"gitId":"tsinyee"},"content":"        this.tags.addAll(tags);","lastModifiedDate":"2021-10-21"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":64,"author":{"gitId":"Shruthi0310"},"content":"    /**","lastModifiedDate":"2021-10-21"},{"lineNumber":65,"author":{"gitId":"Shruthi0310"},"content":"     * Constructor that creates person object with attendance.","lastModifiedDate":"2021-10-21"},{"lineNumber":66,"author":{"gitId":"Shruthi0310"},"content":"     *","lastModifiedDate":"2021-10-21"},{"lineNumber":67,"author":{"gitId":"Shruthi0310"},"content":"     * @param name Name of member","lastModifiedDate":"2021-10-21"},{"lineNumber":68,"author":{"gitId":"Shruthi0310"},"content":"     * @param phone Phone number of member","lastModifiedDate":"2021-10-21"},{"lineNumber":69,"author":{"gitId":"Shruthi0310"},"content":"     * @param availability availability of member","lastModifiedDate":"2021-10-21"},{"lineNumber":70,"author":{"gitId":"Shruthi0310"},"content":"     * @param todayAttendance Today\u0027s attendance of member.","lastModifiedDate":"2021-10-21"},{"lineNumber":71,"author":{"gitId":"Shruthi0310"},"content":"     * @param totalAttendance Total attendance of member.","lastModifiedDate":"2021-10-21"},{"lineNumber":72,"author":{"gitId":"Shruthi0310"},"content":"     */","lastModifiedDate":"2021-10-21"},{"lineNumber":73,"author":{"gitId":"Shruthi0310"},"content":"    public Person(Name name, Phone phone, Availability availability,","lastModifiedDate":"2021-10-21"},{"lineNumber":74,"author":{"gitId":"Shruthi0310"},"content":"                  TodayAttendance todayAttendance, TotalAttendance totalAttendance) {","lastModifiedDate":"2021-10-21"},{"lineNumber":75,"author":{"gitId":"Shruthi0310"},"content":"        requireAllNonNull(name, phone, availability, todayAttendance, totalAttendance);","lastModifiedDate":"2021-10-21"},{"lineNumber":76,"author":{"gitId":"Shruthi0310"},"content":"        this.name \u003d name;","lastModifiedDate":"2021-10-21"},{"lineNumber":77,"author":{"gitId":"Shruthi0310"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2021-10-21"},{"lineNumber":78,"author":{"gitId":"Shruthi0310"},"content":"        this.availability \u003d availability;","lastModifiedDate":"2021-10-21"},{"lineNumber":79,"author":{"gitId":"Shruthi0310"},"content":"        this.totalAttendance \u003d totalAttendance;","lastModifiedDate":"2021-10-21"},{"lineNumber":80,"author":{"gitId":"Shruthi0310"},"content":"        this.todayAttendance \u003d todayAttendance;","lastModifiedDate":"2021-10-21"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":82,"author":{"gitId":"Moley456"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public Name getName() {","lastModifiedDate":"2017-07-12"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        return name;","lastModifiedDate":"2017-12-20"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public Phone getPhone() {","lastModifiedDate":"2017-07-12"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        return phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":91,"author":{"gitId":"felix-ong"},"content":"    public Availability getAvailability() {","lastModifiedDate":"2021-10-10"},{"lineNumber":92,"author":{"gitId":"felix-ong"},"content":"        return availability;","lastModifiedDate":"2021-10-10"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":95,"author":{"gitId":"Shruthi0310"},"content":"    public TotalAttendance getTotalAttendance() {","lastModifiedDate":"2021-10-21"},{"lineNumber":96,"author":{"gitId":"Shruthi0310"},"content":"        return totalAttendance;","lastModifiedDate":"2021-10-21"},{"lineNumber":97,"author":{"gitId":"Shruthi0310"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":98,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":99,"author":{"gitId":"Shruthi0310"},"content":"    public TodayAttendance getTodayAttendance() {","lastModifiedDate":"2021-10-21"},{"lineNumber":100,"author":{"gitId":"Shruthi0310"},"content":"        return todayAttendance;","lastModifiedDate":"2021-10-21"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-10-21"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * Returns an immutable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2021-10-21"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     * if modification is attempted.","lastModifiedDate":"2021-10-21"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-10-21"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    public Set\u003cTag\u003e getTags() {","lastModifiedDate":"2021-10-21"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        return Collections.unmodifiableSet(tags);","lastModifiedDate":"2021-10-21"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":112,"author":{"gitId":"-"},"content":"     * Returns true if both persons have the same name.","lastModifiedDate":"2020-12-18"},{"lineNumber":113,"author":{"gitId":"-"},"content":"     * This defines a weaker notion of equality between two persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    public boolean isSamePerson(Person otherPerson) {","lastModifiedDate":"2018-04-19"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        if (otherPerson \u003d\u003d this) {","lastModifiedDate":"2018-04-19"},{"lineNumber":117,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-04-19"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        return otherPerson !\u003d null","lastModifiedDate":"2018-04-19"},{"lineNumber":121,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherPerson.getName().equals(getName());","lastModifiedDate":"2020-12-18"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":124,"author":{"gitId":"Shruthi0310"},"content":"    /**","lastModifiedDate":"2021-10-21"},{"lineNumber":125,"author":{"gitId":"Shruthi0310"},"content":"     * Returns true if person is available on specified day. Otherwise,","lastModifiedDate":"2021-10-21"},{"lineNumber":126,"author":{"gitId":"Shruthi0310"},"content":"     * false is returned.","lastModifiedDate":"2021-10-21"},{"lineNumber":127,"author":{"gitId":"Shruthi0310"},"content":"     *","lastModifiedDate":"2021-10-21"},{"lineNumber":128,"author":{"gitId":"Shruthi0310"},"content":"     * @param dayNumber Day to be checked if person is available.","lastModifiedDate":"2021-10-23"},{"lineNumber":129,"author":{"gitId":"Shruthi0310"},"content":"     * @return Boolean value if person is available on day.","lastModifiedDate":"2021-10-21"},{"lineNumber":130,"author":{"gitId":"Shruthi0310"},"content":"     */","lastModifiedDate":"2021-10-21"},{"lineNumber":131,"author":{"gitId":"felix-ong"},"content":"    public boolean isAvailableOnDay(int dayNumber) {","lastModifiedDate":"2021-10-16"},{"lineNumber":132,"author":{"gitId":"felix-ong"},"content":"        return availability.contains(DayOfWeek.of(dayNumber));","lastModifiedDate":"2021-10-16"},{"lineNumber":133,"author":{"gitId":"Shruthi0310"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":134,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":135,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":136,"author":{"gitId":"Shruthi0310"},"content":"    /**","lastModifiedDate":"2021-10-21"},{"lineNumber":137,"author":{"gitId":"Shruthi0310"},"content":"     * Sets the member as present today.","lastModifiedDate":"2021-10-21"},{"lineNumber":138,"author":{"gitId":"Shruthi0310"},"content":"     */","lastModifiedDate":"2021-10-21"},{"lineNumber":139,"author":{"gitId":"Shruthi0310"},"content":"    public void setPresent() {","lastModifiedDate":"2021-10-21"},{"lineNumber":140,"author":{"gitId":"Shruthi0310"},"content":"        if (!isMarkedPresent()) {","lastModifiedDate":"2021-10-21"},{"lineNumber":141,"author":{"gitId":"Shruthi0310"},"content":"            todayAttendance.setPresent();","lastModifiedDate":"2021-10-21"},{"lineNumber":142,"author":{"gitId":"Shruthi0310"},"content":"            totalAttendance.incrementAttendance();","lastModifiedDate":"2021-10-21"},{"lineNumber":143,"author":{"gitId":"Shruthi0310"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":144,"author":{"gitId":"Shruthi0310"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":145,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":146,"author":{"gitId":"Shruthi0310"},"content":"    /**","lastModifiedDate":"2021-10-21"},{"lineNumber":147,"author":{"gitId":"Shruthi0310"},"content":"     * Sets member as not present today.","lastModifiedDate":"2021-10-21"},{"lineNumber":148,"author":{"gitId":"Shruthi0310"},"content":"     */","lastModifiedDate":"2021-10-21"},{"lineNumber":149,"author":{"gitId":"Shruthi0310"},"content":"    public void setNotPresent() {","lastModifiedDate":"2021-10-21"},{"lineNumber":150,"author":{"gitId":"Shruthi0310"},"content":"        if (isMarkedPresent()) {","lastModifiedDate":"2021-10-21"},{"lineNumber":151,"author":{"gitId":"Shruthi0310"},"content":"            todayAttendance.setNotPresent();","lastModifiedDate":"2021-10-21"},{"lineNumber":152,"author":{"gitId":"Shruthi0310"},"content":"            totalAttendance.decrementAttendance();","lastModifiedDate":"2021-10-21"},{"lineNumber":153,"author":{"gitId":"Shruthi0310"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":154,"author":{"gitId":"Shruthi0310"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":155,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":156,"author":{"gitId":"Shruthi0310"},"content":"    /**","lastModifiedDate":"2021-10-21"},{"lineNumber":157,"author":{"gitId":"Shruthi0310"},"content":"     * Clears today\u0027s attendance.","lastModifiedDate":"2021-10-21"},{"lineNumber":158,"author":{"gitId":"Shruthi0310"},"content":"     */","lastModifiedDate":"2021-10-21"},{"lineNumber":159,"author":{"gitId":"Shruthi0310"},"content":"    public void clearTodayAttendance() {","lastModifiedDate":"2021-10-21"},{"lineNumber":160,"author":{"gitId":"Shruthi0310"},"content":"        if (isMarkedPresent()) {","lastModifiedDate":"2021-10-21"},{"lineNumber":161,"author":{"gitId":"Shruthi0310"},"content":"            todayAttendance.setNotPresent();","lastModifiedDate":"2021-10-21"},{"lineNumber":162,"author":{"gitId":"Shruthi0310"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":163,"author":{"gitId":"Shruthi0310"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":164,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":165,"author":{"gitId":"Shruthi0310"},"content":"    /**","lastModifiedDate":"2021-10-21"},{"lineNumber":166,"author":{"gitId":"Shruthi0310"},"content":"     * Returns true if person has been marked present. Otherwise,","lastModifiedDate":"2021-10-21"},{"lineNumber":167,"author":{"gitId":"Shruthi0310"},"content":"     * false is returned.","lastModifiedDate":"2021-10-21"},{"lineNumber":168,"author":{"gitId":"Shruthi0310"},"content":"     *","lastModifiedDate":"2021-10-21"},{"lineNumber":169,"author":{"gitId":"Shruthi0310"},"content":"     * @return Boolean value if person is marked present.","lastModifiedDate":"2021-10-21"},{"lineNumber":170,"author":{"gitId":"Shruthi0310"},"content":"     */","lastModifiedDate":"2021-10-21"},{"lineNumber":171,"author":{"gitId":"Shruthi0310"},"content":"    public boolean isMarkedPresent() {","lastModifiedDate":"2021-10-21"},{"lineNumber":172,"author":{"gitId":"Shruthi0310"},"content":"        return todayAttendance.isPresentToday();","lastModifiedDate":"2021-10-21"},{"lineNumber":173,"author":{"gitId":"Shruthi0310"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":174,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":176,"author":{"gitId":"-"},"content":"     * Returns true if both persons have the same identity and data fields.","lastModifiedDate":"2018-04-19"},{"lineNumber":177,"author":{"gitId":"-"},"content":"     * This defines a stronger notion of equality between two persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":178,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-01-10"},{"lineNumber":182,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-01-10"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        if (!(other instanceof Person)) {","lastModifiedDate":"2018-01-10"},{"lineNumber":186,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-01-10"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":189,"author":{"gitId":"-"},"content":"        Person otherPerson \u003d (Person) other;","lastModifiedDate":"2018-01-10"},{"lineNumber":190,"author":{"gitId":"-"},"content":"        return otherPerson.getName().equals(getName())","lastModifiedDate":"2018-08-14"},{"lineNumber":191,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherPerson.getPhone().equals(getPhone())","lastModifiedDate":"2021-10-12"},{"lineNumber":192,"author":{"gitId":"tsinyee"},"content":"                \u0026\u0026 otherPerson.getAvailability().equals(getAvailability())","lastModifiedDate":"2021-10-21"},{"lineNumber":193,"author":{"gitId":"Shruthi0310"},"content":"                \u0026\u0026 otherPerson.getTodayAttendance().equals(getTodayAttendance())","lastModifiedDate":"2021-10-21"},{"lineNumber":194,"author":{"gitId":"Shruthi0310"},"content":"                \u0026\u0026 otherPerson.getTotalAttendance().equals(getTotalAttendance())","lastModifiedDate":"2021-10-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherPerson.getTags().equals(getTags());","lastModifiedDate":"2021-10-21"},{"lineNumber":196,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":198,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":199,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":200,"author":{"gitId":"-"},"content":"        // use this method for custom fields hashing instead of implementing your own","lastModifiedDate":"2016-08-24"},{"lineNumber":201,"author":{"gitId":"tsinyee"},"content":"        return Objects.hash(name, phone, availability, tags);","lastModifiedDate":"2021-10-21"},{"lineNumber":202,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":203,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":204,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":205,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":206,"author":{"gitId":"-"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2018-01-10"},{"lineNumber":207,"author":{"gitId":"-"},"content":"        builder.append(getName())","lastModifiedDate":"2018-01-10"},{"lineNumber":208,"author":{"gitId":"-"},"content":"                .append(\"; Phone: \")","lastModifiedDate":"2020-12-11"},{"lineNumber":209,"author":{"gitId":"YoYoCiti"},"content":"                .append(getPhone());","lastModifiedDate":"2021-10-26"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":211,"author":{"gitId":"tsinyee"},"content":"        Availability availability \u003d getAvailability();","lastModifiedDate":"2021-10-22"},{"lineNumber":212,"author":{"gitId":"tsinyee"},"content":"        if (!availability.isEmpty()) {","lastModifiedDate":"2021-10-22"},{"lineNumber":213,"author":{"gitId":"tsinyee"},"content":"            builder.append(\"; Availability: \");","lastModifiedDate":"2021-10-22"},{"lineNumber":214,"author":{"gitId":"tsinyee"},"content":"            builder.append(availability);","lastModifiedDate":"2021-10-22"},{"lineNumber":215,"author":{"gitId":"tsinyee"},"content":"        }","lastModifiedDate":"2021-10-22"},{"lineNumber":216,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e tags \u003d getTags();","lastModifiedDate":"2021-10-21"},{"lineNumber":217,"author":{"gitId":"-"},"content":"        if (!tags.isEmpty()) {","lastModifiedDate":"2021-10-21"},{"lineNumber":218,"author":{"gitId":"-"},"content":"            builder.append(\"; Tags: \");","lastModifiedDate":"2021-10-21"},{"lineNumber":219,"author":{"gitId":"-"},"content":"            tags.forEach(builder::append);","lastModifiedDate":"2021-10-21"},{"lineNumber":220,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":221,"author":{"gitId":"-"},"content":"        return builder.toString();","lastModifiedDate":"2018-01-10"},{"lineNumber":222,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":223,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"YoYoCiti":1,"Shruthi0310":96,"Moley456":1,"-":108,"felix-ong":7,"tsinyee":10}},{"path":"src/main/java/seedu/address/model/person/PersonAvailableOnDayPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Shruthi0310"},"content":"package seedu.address.model.person;","lastModifiedDate":"2021-10-12"},{"lineNumber":2,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":3,"author":{"gitId":"Shruthi0310"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2021-10-12"},{"lineNumber":4,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":5,"author":{"gitId":"felix-ong"},"content":"/**","lastModifiedDate":"2021-10-19"},{"lineNumber":6,"author":{"gitId":"felix-ong"},"content":" * Tests that a {@code Person} is available on the given day.","lastModifiedDate":"2021-10-19"},{"lineNumber":7,"author":{"gitId":"felix-ong"},"content":" */","lastModifiedDate":"2021-10-19"},{"lineNumber":8,"author":{"gitId":"Shruthi0310"},"content":"public class PersonAvailableOnDayPredicate implements Predicate\u003cPerson\u003e {","lastModifiedDate":"2021-10-12"},{"lineNumber":9,"author":{"gitId":"felix-ong"},"content":"    private final int dayNumber;","lastModifiedDate":"2021-10-16"},{"lineNumber":10,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":11,"author":{"gitId":"felix-ong"},"content":"    public PersonAvailableOnDayPredicate(int dayNumber) {","lastModifiedDate":"2021-10-16"},{"lineNumber":12,"author":{"gitId":"felix-ong"},"content":"        this.dayNumber \u003d dayNumber;","lastModifiedDate":"2021-10-16"},{"lineNumber":13,"author":{"gitId":"Shruthi0310"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":14,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":15,"author":{"gitId":"Shruthi0310"},"content":"    @Override","lastModifiedDate":"2021-10-12"},{"lineNumber":16,"author":{"gitId":"Shruthi0310"},"content":"    public boolean test(Person person) {","lastModifiedDate":"2021-10-12"},{"lineNumber":17,"author":{"gitId":"felix-ong"},"content":"        return person.isAvailableOnDay(dayNumber);","lastModifiedDate":"2021-10-16"},{"lineNumber":18,"author":{"gitId":"Shruthi0310"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":19,"author":{"gitId":"Shruthi0310"},"content":"}","lastModifiedDate":"2021-10-12"}],"authorContributionMap":{"Shruthi0310":12,"felix-ong":7}},{"path":"src/main/java/seedu/address/model/person/PersonMatchesKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tsinyee"},"content":"package seedu.address.model.person;","lastModifiedDate":"2021-10-26"},{"lineNumber":2,"author":{"gitId":"tsinyee"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":3,"author":{"gitId":"tsinyee"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-28"},{"lineNumber":4,"author":{"gitId":"tsinyee"},"content":"import java.util.List;","lastModifiedDate":"2021-10-26"},{"lineNumber":5,"author":{"gitId":"tsinyee"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2021-10-26"},{"lineNumber":6,"author":{"gitId":"tsinyee"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":7,"author":{"gitId":"tsinyee"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2021-10-26"},{"lineNumber":8,"author":{"gitId":"tsinyee"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":9,"author":{"gitId":"tsinyee"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":10,"author":{"gitId":"tsinyee"},"content":"/**","lastModifiedDate":"2021-10-28"},{"lineNumber":11,"author":{"gitId":"tsinyee"},"content":" * Tests that a {@code Person} matches any of the keywords given.","lastModifiedDate":"2021-10-28"},{"lineNumber":12,"author":{"gitId":"tsinyee"},"content":" */","lastModifiedDate":"2021-10-28"},{"lineNumber":13,"author":{"gitId":"tsinyee"},"content":"public class PersonMatchesKeywordsPredicate implements Predicate\u003cPerson\u003e {","lastModifiedDate":"2021-10-26"},{"lineNumber":14,"author":{"gitId":"tsinyee"},"content":"    private final Name name;","lastModifiedDate":"2021-10-26"},{"lineNumber":15,"author":{"gitId":"tsinyee"},"content":"    private final Phone phone;","lastModifiedDate":"2021-10-26"},{"lineNumber":16,"author":{"gitId":"tsinyee"},"content":"    private final List\u003cTag\u003e tags;","lastModifiedDate":"2021-10-26"},{"lineNumber":17,"author":{"gitId":"tsinyee"},"content":"    private final Availability availability;","lastModifiedDate":"2021-10-26"},{"lineNumber":18,"author":{"gitId":"tsinyee"},"content":"    private final TodayAttendance todayAttendance;","lastModifiedDate":"2021-10-28"},{"lineNumber":19,"author":{"gitId":"tsinyee"},"content":"    private final TotalAttendance totalAttendance;","lastModifiedDate":"2021-10-28"},{"lineNumber":20,"author":{"gitId":"tsinyee"},"content":"    private final Predicate\u003cPerson\u003e predicate;","lastModifiedDate":"2021-10-26"},{"lineNumber":21,"author":{"gitId":"tsinyee"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":22,"author":{"gitId":"tsinyee"},"content":"    private PersonMatchesKeywordsPredicate(Name name, Phone phone, List\u003cTag\u003e tags,","lastModifiedDate":"2021-10-26"},{"lineNumber":23,"author":{"gitId":"tsinyee"},"content":"                                           Availability availability, TodayAttendance todayAttendance,","lastModifiedDate":"2021-10-28"},{"lineNumber":24,"author":{"gitId":"tsinyee"},"content":"                                           TotalAttendance totalAttendance, Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2021-10-28"},{"lineNumber":25,"author":{"gitId":"tsinyee"},"content":"        this.name \u003d name;","lastModifiedDate":"2021-10-26"},{"lineNumber":26,"author":{"gitId":"tsinyee"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2021-10-26"},{"lineNumber":27,"author":{"gitId":"tsinyee"},"content":"        this.tags \u003d tags;","lastModifiedDate":"2021-10-26"},{"lineNumber":28,"author":{"gitId":"tsinyee"},"content":"        this.availability \u003d availability;","lastModifiedDate":"2021-10-26"},{"lineNumber":29,"author":{"gitId":"tsinyee"},"content":"        this.todayAttendance \u003d todayAttendance;","lastModifiedDate":"2021-10-28"},{"lineNumber":30,"author":{"gitId":"tsinyee"},"content":"        this.totalAttendance \u003d totalAttendance;","lastModifiedDate":"2021-10-28"},{"lineNumber":31,"author":{"gitId":"tsinyee"},"content":"        this.predicate \u003d predicate;","lastModifiedDate":"2021-10-26"},{"lineNumber":32,"author":{"gitId":"tsinyee"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":33,"author":{"gitId":"tsinyee"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":34,"author":{"gitId":"tsinyee"},"content":"    @Override","lastModifiedDate":"2021-10-26"},{"lineNumber":35,"author":{"gitId":"tsinyee"},"content":"    public boolean test(Person person) {","lastModifiedDate":"2021-10-26"},{"lineNumber":36,"author":{"gitId":"tsinyee"},"content":"        return predicate.test(person);","lastModifiedDate":"2021-10-26"},{"lineNumber":37,"author":{"gitId":"tsinyee"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":38,"author":{"gitId":"tsinyee"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":39,"author":{"gitId":"tsinyee"},"content":"    @Override","lastModifiedDate":"2021-10-28"},{"lineNumber":40,"author":{"gitId":"tsinyee"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-28"},{"lineNumber":41,"author":{"gitId":"tsinyee"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-28"},{"lineNumber":42,"author":{"gitId":"tsinyee"},"content":"                || (other instanceof PersonMatchesKeywordsPredicate // instanceof handles nulls","lastModifiedDate":"2021-10-28"},{"lineNumber":43,"author":{"gitId":"tsinyee"},"content":"                \u0026\u0026 name.equals(((PersonMatchesKeywordsPredicate) other).name) // state check","lastModifiedDate":"2021-10-28"},{"lineNumber":44,"author":{"gitId":"tsinyee"},"content":"                \u0026\u0026 phone.equals(((PersonMatchesKeywordsPredicate) other).phone)","lastModifiedDate":"2021-10-28"},{"lineNumber":45,"author":{"gitId":"tsinyee"},"content":"                \u0026\u0026 tags.equals(((PersonMatchesKeywordsPredicate) other).tags)","lastModifiedDate":"2021-10-28"},{"lineNumber":46,"author":{"gitId":"tsinyee"},"content":"                \u0026\u0026 todayAttendance.equals(((PersonMatchesKeywordsPredicate) other).todayAttendance)","lastModifiedDate":"2021-10-28"},{"lineNumber":47,"author":{"gitId":"tsinyee"},"content":"                \u0026\u0026 totalAttendance.equals(((PersonMatchesKeywordsPredicate) other).totalAttendance));","lastModifiedDate":"2021-10-28"},{"lineNumber":48,"author":{"gitId":"tsinyee"},"content":"    }","lastModifiedDate":"2021-10-28"},{"lineNumber":49,"author":{"gitId":"tsinyee"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":50,"author":{"gitId":"tsinyee"},"content":"    public static class Builder {","lastModifiedDate":"2021-10-26"},{"lineNumber":51,"author":{"gitId":"tsinyee"},"content":"        // default values","lastModifiedDate":"2021-10-26"},{"lineNumber":52,"author":{"gitId":"tsinyee"},"content":"        private Name name \u003d new Name(\"DEFAULT\");","lastModifiedDate":"2021-10-28"},{"lineNumber":53,"author":{"gitId":"tsinyee"},"content":"        private Phone phone \u003d new Phone(\"00000000\");","lastModifiedDate":"2021-10-28"},{"lineNumber":54,"author":{"gitId":"tsinyee"},"content":"        private List\u003cTag\u003e tags \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-28"},{"lineNumber":55,"author":{"gitId":"tsinyee"},"content":"        private Availability availability \u003d new Availability(new ArrayList\u003c\u003e());","lastModifiedDate":"2021-10-28"},{"lineNumber":56,"author":{"gitId":"tsinyee"},"content":"        private TodayAttendance todayAttendance \u003d new TodayAttendance(false);","lastModifiedDate":"2021-10-28"},{"lineNumber":57,"author":{"gitId":"tsinyee"},"content":"        private TotalAttendance totalAttendance \u003d new TotalAttendance(0);","lastModifiedDate":"2021-10-28"},{"lineNumber":58,"author":{"gitId":"tsinyee"},"content":"        private Predicate\u003cPerson\u003e predicate;","lastModifiedDate":"2021-10-26"},{"lineNumber":59,"author":{"gitId":"tsinyee"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":60,"author":{"gitId":"tsinyee"},"content":"        public Builder setName(Name name) {","lastModifiedDate":"2021-10-26"},{"lineNumber":61,"author":{"gitId":"tsinyee"},"content":"            this.name \u003d name;","lastModifiedDate":"2021-10-26"},{"lineNumber":62,"author":{"gitId":"tsinyee"},"content":"            return this;","lastModifiedDate":"2021-10-26"},{"lineNumber":63,"author":{"gitId":"tsinyee"},"content":"        }","lastModifiedDate":"2021-10-26"},{"lineNumber":64,"author":{"gitId":"tsinyee"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":65,"author":{"gitId":"tsinyee"},"content":"        public Builder setPhone(Phone phone) {","lastModifiedDate":"2021-10-26"},{"lineNumber":66,"author":{"gitId":"tsinyee"},"content":"            this.phone \u003d phone;","lastModifiedDate":"2021-10-26"},{"lineNumber":67,"author":{"gitId":"tsinyee"},"content":"            return this;","lastModifiedDate":"2021-10-26"},{"lineNumber":68,"author":{"gitId":"tsinyee"},"content":"        }","lastModifiedDate":"2021-10-26"},{"lineNumber":69,"author":{"gitId":"tsinyee"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":70,"author":{"gitId":"tsinyee"},"content":"        public Builder setTags(List\u003cTag\u003e tags) {","lastModifiedDate":"2021-10-26"},{"lineNumber":71,"author":{"gitId":"tsinyee"},"content":"            this.tags \u003d tags;","lastModifiedDate":"2021-10-26"},{"lineNumber":72,"author":{"gitId":"tsinyee"},"content":"            return this;","lastModifiedDate":"2021-10-26"},{"lineNumber":73,"author":{"gitId":"tsinyee"},"content":"        }","lastModifiedDate":"2021-10-26"},{"lineNumber":74,"author":{"gitId":"tsinyee"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":75,"author":{"gitId":"tsinyee"},"content":"        public Builder setAvailability(Availability availability) {","lastModifiedDate":"2021-10-26"},{"lineNumber":76,"author":{"gitId":"tsinyee"},"content":"            this.availability \u003d availability;","lastModifiedDate":"2021-10-26"},{"lineNumber":77,"author":{"gitId":"tsinyee"},"content":"            return this;","lastModifiedDate":"2021-10-26"},{"lineNumber":78,"author":{"gitId":"tsinyee"},"content":"        }","lastModifiedDate":"2021-10-26"},{"lineNumber":79,"author":{"gitId":"tsinyee"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":80,"author":{"gitId":"tsinyee"},"content":"        public Builder setTodayAttendance(TodayAttendance todayAttendance) {","lastModifiedDate":"2021-10-28"},{"lineNumber":81,"author":{"gitId":"tsinyee"},"content":"            this.todayAttendance \u003d todayAttendance;","lastModifiedDate":"2021-10-28"},{"lineNumber":82,"author":{"gitId":"tsinyee"},"content":"            return this;","lastModifiedDate":"2021-10-28"},{"lineNumber":83,"author":{"gitId":"tsinyee"},"content":"        }","lastModifiedDate":"2021-10-28"},{"lineNumber":84,"author":{"gitId":"tsinyee"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":85,"author":{"gitId":"tsinyee"},"content":"        public Builder setTotalAttendance(TotalAttendance totalAttendance) {","lastModifiedDate":"2021-10-28"},{"lineNumber":86,"author":{"gitId":"tsinyee"},"content":"            this.totalAttendance \u003d totalAttendance;","lastModifiedDate":"2021-10-28"},{"lineNumber":87,"author":{"gitId":"tsinyee"},"content":"            return this;","lastModifiedDate":"2021-10-28"},{"lineNumber":88,"author":{"gitId":"tsinyee"},"content":"        }","lastModifiedDate":"2021-10-28"},{"lineNumber":89,"author":{"gitId":"tsinyee"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":90,"author":{"gitId":"tsinyee"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":91,"author":{"gitId":"tsinyee"},"content":"        public Builder setPredicate(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2021-10-26"},{"lineNumber":92,"author":{"gitId":"tsinyee"},"content":"            this.predicate \u003d predicate;","lastModifiedDate":"2021-10-26"},{"lineNumber":93,"author":{"gitId":"tsinyee"},"content":"            return this;","lastModifiedDate":"2021-10-26"},{"lineNumber":94,"author":{"gitId":"tsinyee"},"content":"        }","lastModifiedDate":"2021-10-26"},{"lineNumber":95,"author":{"gitId":"tsinyee"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":96,"author":{"gitId":"tsinyee"},"content":"        /**","lastModifiedDate":"2021-10-28"},{"lineNumber":97,"author":{"gitId":"tsinyee"},"content":"         * Builds a {@code PersonMatchesKeywordsPredicate} to be used in {@code FindMemberCommand}","lastModifiedDate":"2021-10-28"},{"lineNumber":98,"author":{"gitId":"tsinyee"},"content":"         */","lastModifiedDate":"2021-10-28"},{"lineNumber":99,"author":{"gitId":"tsinyee"},"content":"        public PersonMatchesKeywordsPredicate build() {","lastModifiedDate":"2021-10-26"},{"lineNumber":100,"author":{"gitId":"tsinyee"},"content":"            return new PersonMatchesKeywordsPredicate(name, phone, tags, availability,","lastModifiedDate":"2021-10-28"},{"lineNumber":101,"author":{"gitId":"tsinyee"},"content":"                    todayAttendance, totalAttendance, predicate);","lastModifiedDate":"2021-10-28"},{"lineNumber":102,"author":{"gitId":"tsinyee"},"content":"        }","lastModifiedDate":"2021-10-26"},{"lineNumber":103,"author":{"gitId":"tsinyee"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":104,"author":{"gitId":"tsinyee"},"content":"}","lastModifiedDate":"2021-10-26"}],"authorContributionMap":{"tsinyee":104}},{"path":"src/main/java/seedu/address/model/person/Phone.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2016-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a Person\u0027s phone number in the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidPhone(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Phone {","lastModifiedDate":"2016-09-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2018-09-22"},{"lineNumber":13,"author":{"gitId":"YoYoCiti"},"content":"            \"Phone numbers should only contain numbers, \"","lastModifiedDate":"2021-11-01"},{"lineNumber":14,"author":{"gitId":"YoYoCiti"},"content":"                    + \"and it should be at least 3 digits long and at most 15 digits long.\";","lastModifiedDate":"2021-11-01"},{"lineNumber":15,"author":{"gitId":"YoYoCiti"},"content":"    public static final String VALIDATION_REGEX \u003d \"\\\\d{3,15}\";","lastModifiedDate":"2021-11-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public final String value;","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * Constructs a {@code Phone}.","lastModifiedDate":"2017-05-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * @param phone A valid phone number.","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public Phone(String phone) {","lastModifiedDate":"2017-05-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        requireNonNull(phone);","lastModifiedDate":"2017-05-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        checkArgument(isValidPhone(phone), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        value \u003d phone;","lastModifiedDate":"2018-08-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid phone number.","lastModifiedDate":"2018-04-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static boolean isValidPhone(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return value;","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"                || (other instanceof Phone // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"                \u0026\u0026 value.equals(((Phone) other).value)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        return value.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"YoYoCiti":3,"-":50}},{"path":"src/main/java/seedu/address/model/person/PhoneContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tsinyee"},"content":"package seedu.address.model.person;","lastModifiedDate":"2021-10-26"},{"lineNumber":2,"author":{"gitId":"tsinyee"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":3,"author":{"gitId":"tsinyee"},"content":"import java.util.List;","lastModifiedDate":"2021-10-26"},{"lineNumber":4,"author":{"gitId":"tsinyee"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2021-10-26"},{"lineNumber":5,"author":{"gitId":"tsinyee"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":6,"author":{"gitId":"tsinyee"},"content":"/**","lastModifiedDate":"2021-10-28"},{"lineNumber":7,"author":{"gitId":"tsinyee"},"content":" * Tests that a {@code Person}\u0027s {@code Phone} matches any of the phone keywords given.","lastModifiedDate":"2021-10-28"},{"lineNumber":8,"author":{"gitId":"tsinyee"},"content":" */","lastModifiedDate":"2021-10-28"},{"lineNumber":9,"author":{"gitId":"tsinyee"},"content":"public class PhoneContainsKeywordsPredicate implements Predicate\u003cPerson\u003e {","lastModifiedDate":"2021-10-26"},{"lineNumber":10,"author":{"gitId":"tsinyee"},"content":"    private final List\u003cPhone\u003e phone;","lastModifiedDate":"2021-10-26"},{"lineNumber":11,"author":{"gitId":"tsinyee"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":12,"author":{"gitId":"tsinyee"},"content":"    public PhoneContainsKeywordsPredicate(List\u003cPhone\u003e phone) {","lastModifiedDate":"2021-10-26"},{"lineNumber":13,"author":{"gitId":"tsinyee"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2021-10-26"},{"lineNumber":14,"author":{"gitId":"tsinyee"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":15,"author":{"gitId":"tsinyee"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":16,"author":{"gitId":"tsinyee"},"content":"    @Override","lastModifiedDate":"2021-10-26"},{"lineNumber":17,"author":{"gitId":"tsinyee"},"content":"    public boolean test(Person person) {","lastModifiedDate":"2021-10-26"},{"lineNumber":18,"author":{"gitId":"tsinyee"},"content":"        return phone.stream()","lastModifiedDate":"2021-10-26"},{"lineNumber":19,"author":{"gitId":"tsinyee"},"content":"                .anyMatch(phone -\u003e person.getPhone().equals(phone));","lastModifiedDate":"2021-10-26"},{"lineNumber":20,"author":{"gitId":"tsinyee"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":21,"author":{"gitId":"tsinyee"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":22,"author":{"gitId":"tsinyee"},"content":"    @Override","lastModifiedDate":"2021-10-26"},{"lineNumber":23,"author":{"gitId":"tsinyee"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-26"},{"lineNumber":24,"author":{"gitId":"tsinyee"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-26"},{"lineNumber":25,"author":{"gitId":"tsinyee"},"content":"                || (other instanceof PhoneContainsKeywordsPredicate // instanceof handles nulls","lastModifiedDate":"2021-10-26"},{"lineNumber":26,"author":{"gitId":"tsinyee"},"content":"                \u0026\u0026 phone.equals(((PhoneContainsKeywordsPredicate) other).phone)); // state check","lastModifiedDate":"2021-10-26"},{"lineNumber":27,"author":{"gitId":"tsinyee"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":28,"author":{"gitId":"tsinyee"},"content":"}","lastModifiedDate":"2021-10-26"}],"authorContributionMap":{"tsinyee":28}},{"path":"src/main/java/seedu/address/model/person/TodayAttendance.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Shruthi0310"},"content":"package seedu.address.model.person;","lastModifiedDate":"2021-10-21"},{"lineNumber":2,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":3,"author":{"gitId":"tsinyee"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":4,"author":{"gitId":"Shruthi0310"},"content":"/**","lastModifiedDate":"2021-10-21"},{"lineNumber":5,"author":{"gitId":"Shruthi0310"},"content":" * Represents attendance for today of a member.","lastModifiedDate":"2021-10-21"},{"lineNumber":6,"author":{"gitId":"Shruthi0310"},"content":" */","lastModifiedDate":"2021-10-21"},{"lineNumber":7,"author":{"gitId":"Shruthi0310"},"content":"public class TodayAttendance {","lastModifiedDate":"2021-10-21"},{"lineNumber":8,"author":{"gitId":"Shruthi0310"},"content":"    private boolean isPresent;","lastModifiedDate":"2021-10-21"},{"lineNumber":9,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":10,"author":{"gitId":"Shruthi0310"},"content":"    public TodayAttendance(boolean isPresent) {","lastModifiedDate":"2021-10-21"},{"lineNumber":11,"author":{"gitId":"Shruthi0310"},"content":"        this.isPresent \u003d isPresent;","lastModifiedDate":"2021-10-21"},{"lineNumber":12,"author":{"gitId":"Shruthi0310"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":13,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":14,"author":{"gitId":"Shruthi0310"},"content":"    public Boolean getAttendance() {","lastModifiedDate":"2021-10-21"},{"lineNumber":15,"author":{"gitId":"Shruthi0310"},"content":"        return isPresent;","lastModifiedDate":"2021-10-21"},{"lineNumber":16,"author":{"gitId":"Shruthi0310"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":17,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":18,"author":{"gitId":"Shruthi0310"},"content":"    /**","lastModifiedDate":"2021-10-21"},{"lineNumber":19,"author":{"gitId":"Shruthi0310"},"content":"     * Returns icon of attendance status.","lastModifiedDate":"2021-10-21"},{"lineNumber":20,"author":{"gitId":"Shruthi0310"},"content":"     *","lastModifiedDate":"2021-10-21"},{"lineNumber":21,"author":{"gitId":"Shruthi0310"},"content":"     * @return String representation of attendance status.","lastModifiedDate":"2021-10-21"},{"lineNumber":22,"author":{"gitId":"Shruthi0310"},"content":"     */","lastModifiedDate":"2021-10-21"},{"lineNumber":23,"author":{"gitId":"Shruthi0310"},"content":"    public String getAttendanceStatusIcon() {","lastModifiedDate":"2021-10-21"},{"lineNumber":24,"author":{"gitId":"Shruthi0310"},"content":"        return isPresent ? \"✓\" : \"X\";","lastModifiedDate":"2021-10-21"},{"lineNumber":25,"author":{"gitId":"Shruthi0310"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":26,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":27,"author":{"gitId":"Shruthi0310"},"content":"    /**","lastModifiedDate":"2021-10-21"},{"lineNumber":28,"author":{"gitId":"Shruthi0310"},"content":"     * Returns true if today\u0027s attendance has been set as present.","lastModifiedDate":"2021-10-21"},{"lineNumber":29,"author":{"gitId":"Shruthi0310"},"content":"     * Otherwise, false is returned.","lastModifiedDate":"2021-10-21"},{"lineNumber":30,"author":{"gitId":"Shruthi0310"},"content":"     *","lastModifiedDate":"2021-10-21"},{"lineNumber":31,"author":{"gitId":"Shruthi0310"},"content":"     * @return Boolean value if today\u0027s attendance is marked as present.","lastModifiedDate":"2021-10-21"},{"lineNumber":32,"author":{"gitId":"Shruthi0310"},"content":"     */","lastModifiedDate":"2021-10-21"},{"lineNumber":33,"author":{"gitId":"Shruthi0310"},"content":"    public boolean isPresentToday() {","lastModifiedDate":"2021-10-21"},{"lineNumber":34,"author":{"gitId":"Shruthi0310"},"content":"        return isPresent;","lastModifiedDate":"2021-10-21"},{"lineNumber":35,"author":{"gitId":"Shruthi0310"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":36,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":37,"author":{"gitId":"Shruthi0310"},"content":"    /**","lastModifiedDate":"2021-10-21"},{"lineNumber":38,"author":{"gitId":"Shruthi0310"},"content":"     * Sets today\u0027s attendance as present.","lastModifiedDate":"2021-10-21"},{"lineNumber":39,"author":{"gitId":"Shruthi0310"},"content":"     */","lastModifiedDate":"2021-10-21"},{"lineNumber":40,"author":{"gitId":"Shruthi0310"},"content":"    public void setPresent() {","lastModifiedDate":"2021-10-21"},{"lineNumber":41,"author":{"gitId":"Shruthi0310"},"content":"        this.isPresent \u003d true;","lastModifiedDate":"2021-10-21"},{"lineNumber":42,"author":{"gitId":"Shruthi0310"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":43,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":44,"author":{"gitId":"Shruthi0310"},"content":"    /**","lastModifiedDate":"2021-10-21"},{"lineNumber":45,"author":{"gitId":"Shruthi0310"},"content":"     * Sets today\u0027s attendance as not present.","lastModifiedDate":"2021-10-21"},{"lineNumber":46,"author":{"gitId":"Shruthi0310"},"content":"     */","lastModifiedDate":"2021-10-21"},{"lineNumber":47,"author":{"gitId":"Shruthi0310"},"content":"    public void setNotPresent() {","lastModifiedDate":"2021-10-21"},{"lineNumber":48,"author":{"gitId":"Shruthi0310"},"content":"        this.isPresent \u003d false;","lastModifiedDate":"2021-10-21"},{"lineNumber":49,"author":{"gitId":"Shruthi0310"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":50,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":51,"author":{"gitId":"Shruthi0310"},"content":"    /**","lastModifiedDate":"2021-10-21"},{"lineNumber":52,"author":{"gitId":"Shruthi0310"},"content":"     * Returns string of today\u0027s attendance.","lastModifiedDate":"2021-10-21"},{"lineNumber":53,"author":{"gitId":"Shruthi0310"},"content":"     *","lastModifiedDate":"2021-10-21"},{"lineNumber":54,"author":{"gitId":"Shruthi0310"},"content":"     * @return String represention of today\u0027s attendance.","lastModifiedDate":"2021-10-21"},{"lineNumber":55,"author":{"gitId":"Shruthi0310"},"content":"     */","lastModifiedDate":"2021-10-21"},{"lineNumber":56,"author":{"gitId":"Shruthi0310"},"content":"    public String toString() {","lastModifiedDate":"2021-10-21"},{"lineNumber":57,"author":{"gitId":"Shruthi0310"},"content":"        return \"Today\u0027s attendance: \" + getAttendanceStatusIcon();","lastModifiedDate":"2021-10-21"},{"lineNumber":58,"author":{"gitId":"Shruthi0310"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":59,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":60,"author":{"gitId":"Shruthi0310"},"content":"    @Override","lastModifiedDate":"2021-10-21"},{"lineNumber":61,"author":{"gitId":"Shruthi0310"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2021-10-21"},{"lineNumber":62,"author":{"gitId":"Shruthi0310"},"content":"        return obj \u003d\u003d this","lastModifiedDate":"2021-10-21"},{"lineNumber":63,"author":{"gitId":"Shruthi0310"},"content":"                || (obj instanceof TodayAttendance","lastModifiedDate":"2021-10-21"},{"lineNumber":64,"author":{"gitId":"Shruthi0310"},"content":"                \u0026\u0026 isPresent \u003d\u003d ((TodayAttendance) obj).isPresent);","lastModifiedDate":"2021-10-21"},{"lineNumber":65,"author":{"gitId":"Shruthi0310"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":66,"author":{"gitId":"Shruthi0310"},"content":"}","lastModifiedDate":"2021-10-21"}],"authorContributionMap":{"Shruthi0310":65,"tsinyee":1}},{"path":"src/main/java/seedu/address/model/person/TodayAttendanceContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tsinyee"},"content":"package seedu.address.model.person;","lastModifiedDate":"2021-10-28"},{"lineNumber":2,"author":{"gitId":"tsinyee"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":3,"author":{"gitId":"tsinyee"},"content":"import java.util.List;","lastModifiedDate":"2021-10-28"},{"lineNumber":4,"author":{"gitId":"tsinyee"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2021-10-28"},{"lineNumber":5,"author":{"gitId":"tsinyee"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":6,"author":{"gitId":"tsinyee"},"content":"/**","lastModifiedDate":"2021-10-28"},{"lineNumber":7,"author":{"gitId":"tsinyee"},"content":" * Tests that a {@code Person}\u0027s {@code TodayAttendance} matches any of the keywords given.","lastModifiedDate":"2021-10-28"},{"lineNumber":8,"author":{"gitId":"tsinyee"},"content":" */","lastModifiedDate":"2021-10-28"},{"lineNumber":9,"author":{"gitId":"tsinyee"},"content":"public class TodayAttendanceContainsKeywordsPredicate implements Predicate\u003cPerson\u003e {","lastModifiedDate":"2021-10-28"},{"lineNumber":10,"author":{"gitId":"tsinyee"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":11,"author":{"gitId":"tsinyee"},"content":"    private final List\u003cTodayAttendance\u003e todayAttendance;","lastModifiedDate":"2021-10-28"},{"lineNumber":12,"author":{"gitId":"tsinyee"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":13,"author":{"gitId":"tsinyee"},"content":"    public TodayAttendanceContainsKeywordsPredicate(List\u003cTodayAttendance\u003e todayAttendance) {","lastModifiedDate":"2021-10-28"},{"lineNumber":14,"author":{"gitId":"tsinyee"},"content":"        this.todayAttendance \u003d todayAttendance;","lastModifiedDate":"2021-10-28"},{"lineNumber":15,"author":{"gitId":"tsinyee"},"content":"    }","lastModifiedDate":"2021-10-28"},{"lineNumber":16,"author":{"gitId":"tsinyee"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":17,"author":{"gitId":"tsinyee"},"content":"    @Override","lastModifiedDate":"2021-10-28"},{"lineNumber":18,"author":{"gitId":"tsinyee"},"content":"    public boolean test(Person person) {","lastModifiedDate":"2021-10-28"},{"lineNumber":19,"author":{"gitId":"tsinyee"},"content":"        return todayAttendance.stream()","lastModifiedDate":"2021-10-28"},{"lineNumber":20,"author":{"gitId":"tsinyee"},"content":"                .anyMatch(todayAttendance -\u003e person.getTodayAttendance().equals(todayAttendance));","lastModifiedDate":"2021-10-28"},{"lineNumber":21,"author":{"gitId":"tsinyee"},"content":"    }","lastModifiedDate":"2021-10-28"},{"lineNumber":22,"author":{"gitId":"tsinyee"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":23,"author":{"gitId":"tsinyee"},"content":"    @Override","lastModifiedDate":"2021-10-28"},{"lineNumber":24,"author":{"gitId":"tsinyee"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-28"},{"lineNumber":25,"author":{"gitId":"tsinyee"},"content":"        return other \u003d\u003d this","lastModifiedDate":"2021-10-28"},{"lineNumber":26,"author":{"gitId":"tsinyee"},"content":"                || (other instanceof TodayAttendanceContainsKeywordsPredicate","lastModifiedDate":"2021-10-28"},{"lineNumber":27,"author":{"gitId":"tsinyee"},"content":"                \u0026\u0026 todayAttendance.equals(((TodayAttendanceContainsKeywordsPredicate) other).todayAttendance));","lastModifiedDate":"2021-10-28"},{"lineNumber":28,"author":{"gitId":"tsinyee"},"content":"    }","lastModifiedDate":"2021-10-28"},{"lineNumber":29,"author":{"gitId":"tsinyee"},"content":"}","lastModifiedDate":"2021-10-28"}],"authorContributionMap":{"tsinyee":29}},{"path":"src/main/java/seedu/address/model/person/TotalAttendance.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Shruthi0310"},"content":"package seedu.address.model.person;","lastModifiedDate":"2021-10-21"},{"lineNumber":2,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":3,"author":{"gitId":"Shruthi0310"},"content":"/**","lastModifiedDate":"2021-10-21"},{"lineNumber":4,"author":{"gitId":"Shruthi0310"},"content":" * Represents total attendance of a member.","lastModifiedDate":"2021-10-21"},{"lineNumber":5,"author":{"gitId":"Shruthi0310"},"content":" */","lastModifiedDate":"2021-10-21"},{"lineNumber":6,"author":{"gitId":"Shruthi0310"},"content":"public class TotalAttendance {","lastModifiedDate":"2021-10-21"},{"lineNumber":7,"author":{"gitId":"Shruthi0310"},"content":"    private int totalAttendance;","lastModifiedDate":"2021-10-21"},{"lineNumber":8,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":9,"author":{"gitId":"Shruthi0310"},"content":"    public TotalAttendance(int totalAttendance) {","lastModifiedDate":"2021-10-21"},{"lineNumber":10,"author":{"gitId":"Shruthi0310"},"content":"        this.totalAttendance \u003d totalAttendance;","lastModifiedDate":"2021-10-21"},{"lineNumber":11,"author":{"gitId":"Shruthi0310"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":12,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":13,"author":{"gitId":"Shruthi0310"},"content":"    public Integer getAttendance() {","lastModifiedDate":"2021-10-21"},{"lineNumber":14,"author":{"gitId":"Shruthi0310"},"content":"        return totalAttendance;","lastModifiedDate":"2021-10-21"},{"lineNumber":15,"author":{"gitId":"Shruthi0310"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":16,"author":{"gitId":"Shruthi0310"},"content":"    /**","lastModifiedDate":"2021-10-21"},{"lineNumber":17,"author":{"gitId":"Shruthi0310"},"content":"     * Increases total attendance by one.","lastModifiedDate":"2021-10-21"},{"lineNumber":18,"author":{"gitId":"Shruthi0310"},"content":"     */","lastModifiedDate":"2021-10-21"},{"lineNumber":19,"author":{"gitId":"Shruthi0310"},"content":"    public void incrementAttendance() {","lastModifiedDate":"2021-10-21"},{"lineNumber":20,"author":{"gitId":"Shruthi0310"},"content":"        totalAttendance++;","lastModifiedDate":"2021-10-21"},{"lineNumber":21,"author":{"gitId":"Shruthi0310"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":22,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":23,"author":{"gitId":"Shruthi0310"},"content":"    /**","lastModifiedDate":"2021-10-21"},{"lineNumber":24,"author":{"gitId":"Shruthi0310"},"content":"     * Decreases attendance by one if attendance is positive.","lastModifiedDate":"2021-10-21"},{"lineNumber":25,"author":{"gitId":"Shruthi0310"},"content":"     */","lastModifiedDate":"2021-10-21"},{"lineNumber":26,"author":{"gitId":"Shruthi0310"},"content":"    public void decrementAttendance() {","lastModifiedDate":"2021-10-21"},{"lineNumber":27,"author":{"gitId":"Shruthi0310"},"content":"        if (totalAttendance \u003e\u003d 1) {","lastModifiedDate":"2021-10-21"},{"lineNumber":28,"author":{"gitId":"Shruthi0310"},"content":"            totalAttendance--;","lastModifiedDate":"2021-10-21"},{"lineNumber":29,"author":{"gitId":"Shruthi0310"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":30,"author":{"gitId":"Shruthi0310"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":31,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":32,"author":{"gitId":"Shruthi0310"},"content":"    /**","lastModifiedDate":"2021-10-21"},{"lineNumber":33,"author":{"gitId":"Shruthi0310"},"content":"     * Returns string of total attendance.","lastModifiedDate":"2021-10-21"},{"lineNumber":34,"author":{"gitId":"Shruthi0310"},"content":"     *","lastModifiedDate":"2021-10-21"},{"lineNumber":35,"author":{"gitId":"Shruthi0310"},"content":"     * @return String representation of total attendance.","lastModifiedDate":"2021-10-21"},{"lineNumber":36,"author":{"gitId":"Shruthi0310"},"content":"     */","lastModifiedDate":"2021-10-21"},{"lineNumber":37,"author":{"gitId":"Shruthi0310"},"content":"    public String toString() {","lastModifiedDate":"2021-10-21"},{"lineNumber":38,"author":{"gitId":"Shruthi0310"},"content":"        return \"Total attendance: \" + totalAttendance;","lastModifiedDate":"2021-10-21"},{"lineNumber":39,"author":{"gitId":"Shruthi0310"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":40,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":41,"author":{"gitId":"Shruthi0310"},"content":"    @Override","lastModifiedDate":"2021-10-21"},{"lineNumber":42,"author":{"gitId":"Shruthi0310"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2021-10-21"},{"lineNumber":43,"author":{"gitId":"Shruthi0310"},"content":"        return obj \u003d\u003d this","lastModifiedDate":"2021-10-21"},{"lineNumber":44,"author":{"gitId":"Shruthi0310"},"content":"                || (obj instanceof TotalAttendance","lastModifiedDate":"2021-10-21"},{"lineNumber":45,"author":{"gitId":"Shruthi0310"},"content":"                \u0026\u0026 totalAttendance \u003d\u003d ((TotalAttendance) obj).totalAttendance);","lastModifiedDate":"2021-10-21"},{"lineNumber":46,"author":{"gitId":"Shruthi0310"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":47,"author":{"gitId":"Shruthi0310"},"content":"}","lastModifiedDate":"2021-10-21"}],"authorContributionMap":{"Shruthi0310":47}},{"path":"src/main/java/seedu/address/model/person/TotalAttendanceContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tsinyee"},"content":"package seedu.address.model.person;","lastModifiedDate":"2021-10-28"},{"lineNumber":2,"author":{"gitId":"tsinyee"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":3,"author":{"gitId":"tsinyee"},"content":"import java.util.List;","lastModifiedDate":"2021-10-28"},{"lineNumber":4,"author":{"gitId":"tsinyee"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2021-10-28"},{"lineNumber":5,"author":{"gitId":"tsinyee"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":6,"author":{"gitId":"tsinyee"},"content":"/**","lastModifiedDate":"2021-10-28"},{"lineNumber":7,"author":{"gitId":"tsinyee"},"content":" * Tests that a {@code Person}\u0027s {@code TotalAttendance} matches any of the keywords given.","lastModifiedDate":"2021-10-28"},{"lineNumber":8,"author":{"gitId":"tsinyee"},"content":" */","lastModifiedDate":"2021-10-28"},{"lineNumber":9,"author":{"gitId":"tsinyee"},"content":"public class TotalAttendanceContainsKeywordsPredicate implements Predicate\u003cPerson\u003e {","lastModifiedDate":"2021-10-28"},{"lineNumber":10,"author":{"gitId":"tsinyee"},"content":"    private final List\u003cTotalAttendance\u003e totalAttendance;","lastModifiedDate":"2021-10-28"},{"lineNumber":11,"author":{"gitId":"tsinyee"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":12,"author":{"gitId":"tsinyee"},"content":"    public TotalAttendanceContainsKeywordsPredicate(List\u003cTotalAttendance\u003e totalAttendance) {","lastModifiedDate":"2021-10-28"},{"lineNumber":13,"author":{"gitId":"tsinyee"},"content":"        this.totalAttendance \u003d totalAttendance;","lastModifiedDate":"2021-10-28"},{"lineNumber":14,"author":{"gitId":"tsinyee"},"content":"    }","lastModifiedDate":"2021-10-28"},{"lineNumber":15,"author":{"gitId":"tsinyee"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":16,"author":{"gitId":"tsinyee"},"content":"    @Override","lastModifiedDate":"2021-10-28"},{"lineNumber":17,"author":{"gitId":"tsinyee"},"content":"    public boolean test(Person person) {","lastModifiedDate":"2021-10-28"},{"lineNumber":18,"author":{"gitId":"tsinyee"},"content":"        return totalAttendance.stream()","lastModifiedDate":"2021-10-28"},{"lineNumber":19,"author":{"gitId":"tsinyee"},"content":"                .anyMatch(totalAttendance -\u003e person.getTotalAttendance().equals(totalAttendance));","lastModifiedDate":"2021-10-28"},{"lineNumber":20,"author":{"gitId":"tsinyee"},"content":"    }","lastModifiedDate":"2021-10-28"},{"lineNumber":21,"author":{"gitId":"tsinyee"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":22,"author":{"gitId":"tsinyee"},"content":"    @Override","lastModifiedDate":"2021-10-28"},{"lineNumber":23,"author":{"gitId":"tsinyee"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-28"},{"lineNumber":24,"author":{"gitId":"tsinyee"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-28"},{"lineNumber":25,"author":{"gitId":"tsinyee"},"content":"                || (other instanceof TotalAttendanceContainsKeywordsPredicate // instanceof handles nulls","lastModifiedDate":"2021-10-28"},{"lineNumber":26,"author":{"gitId":"tsinyee"},"content":"                \u0026\u0026 totalAttendance.equals(((TotalAttendanceContainsKeywordsPredicate) other)","lastModifiedDate":"2021-10-28"},{"lineNumber":27,"author":{"gitId":"tsinyee"},"content":"                .totalAttendance)); // state check","lastModifiedDate":"2021-10-28"},{"lineNumber":28,"author":{"gitId":"tsinyee"},"content":"    }","lastModifiedDate":"2021-10-28"},{"lineNumber":29,"author":{"gitId":"tsinyee"},"content":"}","lastModifiedDate":"2021-10-28"}],"authorContributionMap":{"tsinyee":29}},{"path":"src/main/java/seedu/address/model/person/UniquePersonList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2016-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2018-01-10"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"tsinyee"},"content":"import java.util.Collections;","lastModifiedDate":"2021-10-25"},{"lineNumber":7,"author":{"gitId":"tsinyee"},"content":"import java.util.Comparator;","lastModifiedDate":"2021-10-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Iterator;","lastModifiedDate":"2021-10-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2021-10-25"},{"lineNumber":10,"author":{"gitId":"tsinyee"},"content":"import java.util.Set;","lastModifiedDate":"2021-10-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2021-10-10"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-10-10"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.DuplicatePersonException;","lastModifiedDate":"2021-10-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.PersonNotFoundException;","lastModifiedDate":"2021-10-11"},{"lineNumber":16,"author":{"gitId":"tsinyee"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2021-10-24"},{"lineNumber":17,"author":{"gitId":"Moley456"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":" * A list of persons that enforces uniqueness between its elements and does not allow nulls.","lastModifiedDate":"2016-09-22"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * A person is considered unique by comparing using {@code Person#isSamePerson(Person)}. As such, adding and updating of","lastModifiedDate":"2018-04-19"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * persons uses Person#isSamePerson(Person) for equality so as to ensure that the person being added or updated is","lastModifiedDate":"2018-04-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * unique in terms of identity in the UniquePersonList. However, the removal of a person uses Person#equals(Object) so","lastModifiedDate":"2018-04-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * as to ensure that the person with exactly the same fields will be removed.","lastModifiedDate":"2018-04-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":" * Supports a minimal set of list operations.","lastModifiedDate":"2016-09-22"},{"lineNumber":27,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":" * @see Person#isSamePerson(Person)","lastModifiedDate":"2018-04-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"public class UniquePersonList implements Iterable\u003cPerson\u003e {","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private final ObservableList\u003cPerson\u003e internalList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2016-10-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private final ObservableList\u003cPerson\u003e internalUnmodifiableList \u003d","lastModifiedDate":"2018-12-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            FXCollections.unmodifiableObservableList(internalList);","lastModifiedDate":"2018-12-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Returns true if the list contains an equivalent person as the given argument.","lastModifiedDate":"2016-09-22"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public boolean contains(Person toCheck) {","lastModifiedDate":"2018-01-10"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2017-05-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        return internalList.stream().anyMatch(toCheck::isSamePerson);","lastModifiedDate":"2018-04-19"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * Adds a person to the list.","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * The person must not already exist in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public void add(Person toAdd) {","lastModifiedDate":"2018-08-07"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2017-05-15"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        if (contains(toAdd)) {","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            throw new DuplicatePersonException();","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        internalList.add(toAdd);","lastModifiedDate":"2018-01-10"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * Replaces the person {@code target} in the list with {@code editedPerson}.","lastModifiedDate":"2017-06-07"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-07"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        requireAllNonNull(target, editedPerson);","lastModifiedDate":"2018-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        int index \u003d internalList.indexOf(target);","lastModifiedDate":"2017-06-07"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        if (index \u003d\u003d -1) {","lastModifiedDate":"2017-06-07"},{"lineNumber":66,"author":{"gitId":"-"},"content":"            throw new PersonNotFoundException();","lastModifiedDate":"2017-06-07"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-06-07"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-07"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        if (!target.isSamePerson(editedPerson) \u0026\u0026 contains(editedPerson)) {","lastModifiedDate":"2018-04-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            throw new DuplicatePersonException();","lastModifiedDate":"2016-12-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        internalList.set(index, editedPerson);","lastModifiedDate":"2018-01-10"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     * Removes the equivalent person from the list.","lastModifiedDate":"2016-08-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * The person must exist in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public void remove(Person toRemove) {","lastModifiedDate":"2018-08-07"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        requireNonNull(toRemove);","lastModifiedDate":"2017-05-15"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        if (!internalList.remove(toRemove)) {","lastModifiedDate":"2018-02-28"},{"lineNumber":83,"author":{"gitId":"-"},"content":"            throw new PersonNotFoundException();","lastModifiedDate":"2016-08-24"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public void setPersons(UniquePersonList replacement) {","lastModifiedDate":"2016-10-19"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        requireNonNull(replacement);","lastModifiedDate":"2018-08-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        internalList.setAll(replacement.internalList);","lastModifiedDate":"2018-08-14"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-19"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * Replaces the contents of this list with {@code persons}.","lastModifiedDate":"2018-08-07"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     * {@code persons} must not contain duplicate persons.","lastModifiedDate":"2018-08-07"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    public void setPersons(List\u003cPerson\u003e persons) {","lastModifiedDate":"2018-08-07"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        requireAllNonNull(persons);","lastModifiedDate":"2018-01-10"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        if (!personsAreUnique(persons)) {","lastModifiedDate":"2018-04-19"},{"lineNumber":99,"author":{"gitId":"-"},"content":"            throw new DuplicatePersonException();","lastModifiedDate":"2018-01-21"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-21"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        internalList.setAll(persons);","lastModifiedDate":"2018-08-14"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":105,"author":{"gitId":"Moley456"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-09-01"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     * Returns the backing list as an unmodifiable {@code ObservableList}.","lastModifiedDate":"2017-09-01"},{"lineNumber":108,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-09-01"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e asUnmodifiableObservableList() {","lastModifiedDate":"2018-04-05"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        return internalUnmodifiableList;","lastModifiedDate":"2018-12-09"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    public Iterator\u003cPerson\u003e iterator() {","lastModifiedDate":"2016-08-24"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        return internalList.iterator();","lastModifiedDate":"2016-08-24"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-21"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-09-21"},{"lineNumber":121,"author":{"gitId":"-"},"content":"                || (other instanceof UniquePersonList // instanceof handles nulls","lastModifiedDate":"2016-09-21"},{"lineNumber":122,"author":{"gitId":"-"},"content":"                        \u0026\u0026 internalList.equals(((UniquePersonList) other).internalList));","lastModifiedDate":"2018-08-14"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-21"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        return internalList.hashCode();","lastModifiedDate":"2016-09-21"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":131,"author":{"gitId":"-"},"content":"     * Returns true if {@code persons} contains only unique persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":132,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    private boolean personsAreUnique(List\u003cPerson\u003e persons) {","lastModifiedDate":"2018-04-19"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        for (int i \u003d 0; i \u003c persons.size() - 1; i++) {","lastModifiedDate":"2018-04-19"},{"lineNumber":135,"author":{"gitId":"-"},"content":"            for (int j \u003d i + 1; j \u003c persons.size(); j++) {","lastModifiedDate":"2018-04-19"},{"lineNumber":136,"author":{"gitId":"-"},"content":"                if (persons.get(i).isSamePerson(persons.get(j))) {","lastModifiedDate":"2018-04-19"},{"lineNumber":137,"author":{"gitId":"-"},"content":"                    return false;","lastModifiedDate":"2018-04-19"},{"lineNumber":138,"author":{"gitId":"-"},"content":"                }","lastModifiedDate":"2018-04-19"},{"lineNumber":139,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-04-19"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        return true;","lastModifiedDate":"2018-04-19"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":143,"author":{"gitId":"felix-ong"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":144,"author":{"gitId":"Shruthi0310"},"content":"    /**","lastModifiedDate":"2021-10-21"},{"lineNumber":145,"author":{"gitId":"Shruthi0310"},"content":"     * Resets today\u0027s attendance of all members in list.","lastModifiedDate":"2021-10-21"},{"lineNumber":146,"author":{"gitId":"Shruthi0310"},"content":"     */","lastModifiedDate":"2021-10-21"},{"lineNumber":147,"author":{"gitId":"Shruthi0310"},"content":"    public void resetAttendance() {","lastModifiedDate":"2021-10-21"},{"lineNumber":148,"author":{"gitId":"Shruthi0310"},"content":"        for (Person person : internalList) {","lastModifiedDate":"2021-10-21"},{"lineNumber":149,"author":{"gitId":"Shruthi0310"},"content":"            Person toEdit \u003d person;","lastModifiedDate":"2021-10-21"},{"lineNumber":150,"author":{"gitId":"Shruthi0310"},"content":"            toEdit.clearTodayAttendance();","lastModifiedDate":"2021-10-21"},{"lineNumber":151,"author":{"gitId":"Shruthi0310"},"content":"            setPerson(person, toEdit);","lastModifiedDate":"2021-10-21"},{"lineNumber":152,"author":{"gitId":"Shruthi0310"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":153,"author":{"gitId":"Shruthi0310"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":154,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":155,"author":{"gitId":"felix-ong"},"content":"    /**","lastModifiedDate":"2021-10-09"},{"lineNumber":156,"author":{"gitId":"felix-ong"},"content":"     * Replaces the contents of this list with empty list.","lastModifiedDate":"2021-10-09"},{"lineNumber":157,"author":{"gitId":"felix-ong"},"content":"     */","lastModifiedDate":"2021-10-09"},{"lineNumber":158,"author":{"gitId":"felix-ong"},"content":"    public void resetMembers() {","lastModifiedDate":"2021-10-09"},{"lineNumber":159,"author":{"gitId":"felix-ong"},"content":"        internalList.setAll();","lastModifiedDate":"2021-10-09"},{"lineNumber":160,"author":{"gitId":"felix-ong"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":161,"author":{"gitId":"tsinyee"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":162,"author":{"gitId":"tsinyee"},"content":"    /**","lastModifiedDate":"2021-10-18"},{"lineNumber":163,"author":{"gitId":"tsinyee"},"content":"     * Sorts the member list in alphabetical order.","lastModifiedDate":"2021-10-18"},{"lineNumber":164,"author":{"gitId":"tsinyee"},"content":"     */","lastModifiedDate":"2021-10-18"},{"lineNumber":165,"author":{"gitId":"tsinyee"},"content":"    public void sortMembersByName() {","lastModifiedDate":"2021-10-24"},{"lineNumber":166,"author":{"gitId":"tsinyee"},"content":"        Collections.sort(internalList, new Comparator\u003cPerson\u003e() {","lastModifiedDate":"2021-10-24"},{"lineNumber":167,"author":{"gitId":"tsinyee"},"content":"            @Override","lastModifiedDate":"2021-10-24"},{"lineNumber":168,"author":{"gitId":"tsinyee"},"content":"            public int compare(Person o1, Person o2) {","lastModifiedDate":"2021-10-24"},{"lineNumber":169,"author":{"gitId":"tsinyee"},"content":"                String name1 \u003d o1.getName().toString();","lastModifiedDate":"2021-10-24"},{"lineNumber":170,"author":{"gitId":"tsinyee"},"content":"                String name2 \u003d o2.getName().toString();","lastModifiedDate":"2021-10-24"},{"lineNumber":171,"author":{"gitId":"tsinyee"},"content":"                return name1.compareToIgnoreCase(name2);","lastModifiedDate":"2021-10-24"},{"lineNumber":172,"author":{"gitId":"tsinyee"},"content":"            }","lastModifiedDate":"2021-10-24"},{"lineNumber":173,"author":{"gitId":"tsinyee"},"content":"        });","lastModifiedDate":"2021-10-24"},{"lineNumber":174,"author":{"gitId":"tsinyee"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":175,"author":{"gitId":"tsinyee"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":176,"author":{"gitId":"tsinyee"},"content":"    /**","lastModifiedDate":"2021-10-24"},{"lineNumber":177,"author":{"gitId":"tsinyee"},"content":"     * Sorts the member list by number of tags.","lastModifiedDate":"2021-10-25"},{"lineNumber":178,"author":{"gitId":"tsinyee"},"content":"     * Members with more tags are first.","lastModifiedDate":"2021-10-25"},{"lineNumber":179,"author":{"gitId":"tsinyee"},"content":"     * Members with no tags are last.","lastModifiedDate":"2021-10-25"},{"lineNumber":180,"author":{"gitId":"tsinyee"},"content":"     */","lastModifiedDate":"2021-10-24"},{"lineNumber":181,"author":{"gitId":"tsinyee"},"content":"    public void sortMembersByTags() {","lastModifiedDate":"2021-10-24"},{"lineNumber":182,"author":{"gitId":"tsinyee"},"content":"        Collections.sort(internalList, new Comparator\u003cPerson\u003e() {","lastModifiedDate":"2021-10-24"},{"lineNumber":183,"author":{"gitId":"tsinyee"},"content":"            @Override","lastModifiedDate":"2021-10-24"},{"lineNumber":184,"author":{"gitId":"tsinyee"},"content":"            public int compare(Person o1, Person o2) {","lastModifiedDate":"2021-10-24"},{"lineNumber":185,"author":{"gitId":"tsinyee"},"content":"                Set\u003cTag\u003e tagsO1 \u003d o1.getTags();","lastModifiedDate":"2021-10-24"},{"lineNumber":186,"author":{"gitId":"tsinyee"},"content":"                Set\u003cTag\u003e tagsO2 \u003d o2.getTags();","lastModifiedDate":"2021-10-24"},{"lineNumber":187,"author":{"gitId":"tsinyee"},"content":"                return Integer.compare(tagsO2.size(), tagsO1.size());","lastModifiedDate":"2021-10-25"},{"lineNumber":188,"author":{"gitId":"tsinyee"},"content":"            }","lastModifiedDate":"2021-10-24"},{"lineNumber":189,"author":{"gitId":"tsinyee"},"content":"        });","lastModifiedDate":"2021-10-24"},{"lineNumber":190,"author":{"gitId":"tsinyee"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":191,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"Moley456":2,"Shruthi0310":11,"-":137,"tsinyee":34,"felix-ong":7}},{"path":"src/main/java/seedu/address/model/sort/SortOrder.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tsinyee"},"content":"package seedu.address.model.sort;","lastModifiedDate":"2021-10-24"},{"lineNumber":2,"author":{"gitId":"tsinyee"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":3,"author":{"gitId":"tsinyee"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-24"},{"lineNumber":4,"author":{"gitId":"tsinyee"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2021-10-24"},{"lineNumber":5,"author":{"gitId":"tsinyee"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":6,"author":{"gitId":"tsinyee"},"content":"import java.util.List;","lastModifiedDate":"2021-10-24"},{"lineNumber":7,"author":{"gitId":"tsinyee"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":8,"author":{"gitId":"tsinyee"},"content":"public class SortOrder {","lastModifiedDate":"2021-10-24"},{"lineNumber":9,"author":{"gitId":"tsinyee"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2021-10-24"},{"lineNumber":10,"author":{"gitId":"tsinyee"},"content":"            \"Sort Order should be \u0027name\u0027 or \u0027tag\u0027, and it should not be blank\";","lastModifiedDate":"2021-10-24"},{"lineNumber":11,"author":{"gitId":"tsinyee"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":12,"author":{"gitId":"tsinyee"},"content":"    /** All possible sort orders **/","lastModifiedDate":"2021-10-24"},{"lineNumber":13,"author":{"gitId":"tsinyee"},"content":"    private static List\u003cString\u003e sortOrders \u003d List.of(\"name\", \"tag\");","lastModifiedDate":"2021-10-24"},{"lineNumber":14,"author":{"gitId":"tsinyee"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":15,"author":{"gitId":"tsinyee"},"content":"    private String sortOrder;","lastModifiedDate":"2021-10-24"},{"lineNumber":16,"author":{"gitId":"tsinyee"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":17,"author":{"gitId":"tsinyee"},"content":"    /**","lastModifiedDate":"2021-10-24"},{"lineNumber":18,"author":{"gitId":"tsinyee"},"content":"     * Constructs a {@code SortOrder}.","lastModifiedDate":"2021-10-24"},{"lineNumber":19,"author":{"gitId":"tsinyee"},"content":"     */","lastModifiedDate":"2021-10-24"},{"lineNumber":20,"author":{"gitId":"tsinyee"},"content":"    public SortOrder(String sortOrder) {","lastModifiedDate":"2021-10-24"},{"lineNumber":21,"author":{"gitId":"tsinyee"},"content":"        requireNonNull(sortOrder);","lastModifiedDate":"2021-10-24"},{"lineNumber":22,"author":{"gitId":"tsinyee"},"content":"        checkArgument(isValidSortOrder(sortOrder), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-24"},{"lineNumber":23,"author":{"gitId":"tsinyee"},"content":"        this.sortOrder \u003d sortOrder;","lastModifiedDate":"2021-10-24"},{"lineNumber":24,"author":{"gitId":"tsinyee"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":25,"author":{"gitId":"tsinyee"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":26,"author":{"gitId":"tsinyee"},"content":"    public String getSortOrder() {","lastModifiedDate":"2021-10-24"},{"lineNumber":27,"author":{"gitId":"tsinyee"},"content":"        return sortOrder;","lastModifiedDate":"2021-10-24"},{"lineNumber":28,"author":{"gitId":"tsinyee"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":29,"author":{"gitId":"tsinyee"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":30,"author":{"gitId":"tsinyee"},"content":"    /**","lastModifiedDate":"2021-10-24"},{"lineNumber":31,"author":{"gitId":"tsinyee"},"content":"     * Returns true if given string is a valid sortOrder.","lastModifiedDate":"2021-10-24"},{"lineNumber":32,"author":{"gitId":"tsinyee"},"content":"     */","lastModifiedDate":"2021-10-24"},{"lineNumber":33,"author":{"gitId":"tsinyee"},"content":"    public static boolean isValidSortOrder(String test) {","lastModifiedDate":"2021-10-24"},{"lineNumber":34,"author":{"gitId":"tsinyee"},"content":"        return sortOrders.contains(test.toLowerCase());","lastModifiedDate":"2021-10-24"},{"lineNumber":35,"author":{"gitId":"tsinyee"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":36,"author":{"gitId":"tsinyee"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":37,"author":{"gitId":"tsinyee"},"content":"    @Override","lastModifiedDate":"2021-10-24"},{"lineNumber":38,"author":{"gitId":"tsinyee"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-24"},{"lineNumber":39,"author":{"gitId":"tsinyee"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-24"},{"lineNumber":40,"author":{"gitId":"tsinyee"},"content":"            || (other instanceof SortOrder // instance of handles nulls","lastModifiedDate":"2021-10-24"},{"lineNumber":41,"author":{"gitId":"tsinyee"},"content":"            \u0026\u0026 sortOrder.equalsIgnoreCase(((SortOrder) other).sortOrder)); // state check","lastModifiedDate":"2021-10-24"},{"lineNumber":42,"author":{"gitId":"tsinyee"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":43,"author":{"gitId":"tsinyee"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":44,"author":{"gitId":"tsinyee"},"content":"    @Override","lastModifiedDate":"2021-10-24"},{"lineNumber":45,"author":{"gitId":"tsinyee"},"content":"    public String toString() {","lastModifiedDate":"2021-10-24"},{"lineNumber":46,"author":{"gitId":"tsinyee"},"content":"        return sortOrder;","lastModifiedDate":"2021-10-24"},{"lineNumber":47,"author":{"gitId":"tsinyee"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":48,"author":{"gitId":"tsinyee"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":49,"author":{"gitId":"tsinyee"},"content":"    @Override","lastModifiedDate":"2021-10-24"},{"lineNumber":50,"author":{"gitId":"tsinyee"},"content":"    public int hashCode() {","lastModifiedDate":"2021-10-24"},{"lineNumber":51,"author":{"gitId":"tsinyee"},"content":"        return sortOrder.hashCode();","lastModifiedDate":"2021-10-24"},{"lineNumber":52,"author":{"gitId":"tsinyee"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":53,"author":{"gitId":"tsinyee"},"content":"}","lastModifiedDate":"2021-10-24"}],"authorContributionMap":{"tsinyee":53}},{"path":"src/main/java/seedu/address/model/tag/Tag.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.tag;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a Tag in the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; name is valid as declared in {@link #isValidTagName(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Tag {","lastModifiedDate":"2021-10-28"},{"lineNumber":11,"author":{"gitId":"tsinyee"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Tags names should be alphanumeric, and it should not be blank\";","lastModifiedDate":"2021-10-26"},{"lineNumber":12,"author":{"gitId":"tsinyee"},"content":"    public static final String VALIDATION_REGEX \u003d \"[\\\\p{Alnum}][\\\\p{Alnum} ]*\";","lastModifiedDate":"2021-10-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public final String tagName;","lastModifiedDate":"2016-10-19"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * Constructs a {@code Tag}.","lastModifiedDate":"2017-05-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * @param tagName A valid tag name.","lastModifiedDate":"2017-05-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public Tag(String tagName) {","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        requireNonNull(tagName);","lastModifiedDate":"2017-05-30"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        checkArgument(isValidTagName(tagName), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        this.tagName \u003d tagName;","lastModifiedDate":"2017-05-30"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid tag name.","lastModifiedDate":"2016-09-22"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public static boolean isValidTagName(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"                || (other instanceof Tag // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"tsinyee"},"content":"                \u0026\u0026 tagName.equalsIgnoreCase(((Tag) other).tagName)); // state check","lastModifiedDate":"2021-10-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"tsinyee"},"content":"        return tagName.toUpperCase().hashCode();","lastModifiedDate":"2021-10-28"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * Format state as text for viewing.","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        return \u0027[\u0027 + tagName + \u0027]\u0027;","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"-":49,"tsinyee":4}},{"path":"src/main/java/seedu/address/model/tag/TagsContainKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tsinyee"},"content":"package seedu.address.model.tag;","lastModifiedDate":"2021-10-26"},{"lineNumber":2,"author":{"gitId":"tsinyee"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":3,"author":{"gitId":"tsinyee"},"content":"import java.util.List;","lastModifiedDate":"2021-10-26"},{"lineNumber":4,"author":{"gitId":"tsinyee"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2021-10-26"},{"lineNumber":5,"author":{"gitId":"tsinyee"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":6,"author":{"gitId":"tsinyee"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2021-10-26"},{"lineNumber":7,"author":{"gitId":"tsinyee"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":8,"author":{"gitId":"tsinyee"},"content":"/**","lastModifiedDate":"2021-10-28"},{"lineNumber":9,"author":{"gitId":"tsinyee"},"content":" * Tests that a {@code Person}\u0027s {@code Tag} matches any of the tag keywords given.","lastModifiedDate":"2021-10-28"},{"lineNumber":10,"author":{"gitId":"tsinyee"},"content":" */","lastModifiedDate":"2021-10-28"},{"lineNumber":11,"author":{"gitId":"tsinyee"},"content":"public class TagsContainKeywordsPredicate implements Predicate\u003cPerson\u003e {","lastModifiedDate":"2021-10-28"},{"lineNumber":12,"author":{"gitId":"tsinyee"},"content":"    private final List\u003cTag\u003e tags;","lastModifiedDate":"2021-10-26"},{"lineNumber":13,"author":{"gitId":"tsinyee"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":14,"author":{"gitId":"tsinyee"},"content":"    public TagsContainKeywordsPredicate(List\u003cTag\u003e tags) {","lastModifiedDate":"2021-10-28"},{"lineNumber":15,"author":{"gitId":"tsinyee"},"content":"        this.tags \u003d tags;","lastModifiedDate":"2021-10-26"},{"lineNumber":16,"author":{"gitId":"tsinyee"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":17,"author":{"gitId":"tsinyee"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":18,"author":{"gitId":"tsinyee"},"content":"    @Override","lastModifiedDate":"2021-10-26"},{"lineNumber":19,"author":{"gitId":"tsinyee"},"content":"    public boolean test(Person person) {","lastModifiedDate":"2021-10-26"},{"lineNumber":20,"author":{"gitId":"tsinyee"},"content":"        return tags.stream()","lastModifiedDate":"2021-10-26"},{"lineNumber":21,"author":{"gitId":"tsinyee"},"content":"                .anyMatch(tags -\u003e person.getTags().contains(tags));","lastModifiedDate":"2021-10-28"},{"lineNumber":22,"author":{"gitId":"tsinyee"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":23,"author":{"gitId":"tsinyee"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":24,"author":{"gitId":"tsinyee"},"content":"    @Override","lastModifiedDate":"2021-10-26"},{"lineNumber":25,"author":{"gitId":"tsinyee"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-26"},{"lineNumber":26,"author":{"gitId":"tsinyee"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-26"},{"lineNumber":27,"author":{"gitId":"tsinyee"},"content":"                || (other instanceof TagsContainKeywordsPredicate // instanceof handles nulls","lastModifiedDate":"2021-10-28"},{"lineNumber":28,"author":{"gitId":"tsinyee"},"content":"                \u0026\u0026 tags.equals(((TagsContainKeywordsPredicate) other).tags));","lastModifiedDate":"2021-10-28"},{"lineNumber":29,"author":{"gitId":"tsinyee"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":30,"author":{"gitId":"tsinyee"},"content":"}","lastModifiedDate":"2021-10-26"}],"authorContributionMap":{"tsinyee":30}},{"path":"src/main/java/seedu/address/model/util/SampleDataUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.util;","lastModifiedDate":"2016-12-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":3,"author":{"gitId":"felix-ong"},"content":"import java.time.DayOfWeek;","lastModifiedDate":"2021-10-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":5,"author":{"gitId":"felix-ong"},"content":"import java.util.List;","lastModifiedDate":"2021-10-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-14"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-01-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-12-20"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2016-12-20"},{"lineNumber":11,"author":{"gitId":"Shruthi0310"},"content":"import seedu.address.model.facility.Capacity;","lastModifiedDate":"2021-10-06"},{"lineNumber":12,"author":{"gitId":"YoYoCiti"},"content":"import seedu.address.model.facility.Facility;","lastModifiedDate":"2021-09-29"},{"lineNumber":13,"author":{"gitId":"Shruthi0310"},"content":"import seedu.address.model.facility.FacilityName;","lastModifiedDate":"2021-10-06"},{"lineNumber":14,"author":{"gitId":"Shruthi0310"},"content":"import seedu.address.model.facility.Location;","lastModifiedDate":"2021-10-06"},{"lineNumber":15,"author":{"gitId":"Shruthi0310"},"content":"import seedu.address.model.facility.Time;","lastModifiedDate":"2021-10-06"},{"lineNumber":16,"author":{"gitId":"felix-ong"},"content":"import seedu.address.model.person.Availability;","lastModifiedDate":"2021-10-10"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2016-12-20"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-12-20"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2016-12-20"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-14"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":22,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * Contains utility methods for populating {@code AddressBook} with sample data.","lastModifiedDate":"2017-08-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class SampleDataUtil {","lastModifiedDate":"2016-12-20"},{"lineNumber":26,"author":{"gitId":"felix-ong"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":27,"author":{"gitId":"felix-ong"},"content":"    public static final List\u003cDayOfWeek\u003e SAMPLE_AVAILABILITY \u003d","lastModifiedDate":"2021-10-15"},{"lineNumber":28,"author":{"gitId":"felix-ong"},"content":"            Arrays.asList(DayOfWeek.MONDAY, DayOfWeek.WEDNESDAY, DayOfWeek.FRIDAY);","lastModifiedDate":"2021-10-15"},{"lineNumber":29,"author":{"gitId":"felix-ong"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public static Person[] getSamplePersons() {","lastModifiedDate":"2016-12-20"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        return new Person[] {","lastModifiedDate":"2016-12-20"},{"lineNumber":32,"author":{"gitId":"tsinyee"},"content":"            new Person(new Name(\"Alex Yeoh\"), new Phone(\"87438807\"), new Availability(SAMPLE_AVAILABILITY),","lastModifiedDate":"2021-10-21"},{"lineNumber":33,"author":{"gitId":"tsinyee"},"content":"                    getTagSet(\"exco\")),","lastModifiedDate":"2021-10-21"},{"lineNumber":34,"author":{"gitId":"tsinyee"},"content":"            new Person(new Name(\"Bernice Yu\"), new Phone(\"99272758\"), new Availability(SAMPLE_AVAILABILITY),","lastModifiedDate":"2021-10-21"},{"lineNumber":35,"author":{"gitId":"tsinyee"},"content":"                    getTagSet(\"y1\")),","lastModifiedDate":"2021-10-21"},{"lineNumber":36,"author":{"gitId":"tsinyee"},"content":"            new Person(new Name(\"Charlotte Oliveiro\"), new Phone(\"93210283\"), new Availability(SAMPLE_AVAILABILITY),","lastModifiedDate":"2021-10-21"},{"lineNumber":37,"author":{"gitId":"tsinyee"},"content":"                    getTagSet(\"exco\", \"y2\")),","lastModifiedDate":"2021-10-21"},{"lineNumber":38,"author":{"gitId":"tsinyee"},"content":"            new Person(new Name(\"David Li\"), new Phone(\"91031282\"), new Availability(SAMPLE_AVAILABILITY),","lastModifiedDate":"2021-10-21"},{"lineNumber":39,"author":{"gitId":"tsinyee"},"content":"                    getTagSet(\"y3\")),","lastModifiedDate":"2021-10-21"},{"lineNumber":40,"author":{"gitId":"tsinyee"},"content":"            new Person(new Name(\"Irfan Ibrahim\"), new Phone(\"92492021\"), new Availability(SAMPLE_AVAILABILITY),","lastModifiedDate":"2021-10-21"},{"lineNumber":41,"author":{"gitId":"tsinyee"},"content":"                    getTagSet(\"coach\")),","lastModifiedDate":"2021-10-21"},{"lineNumber":42,"author":{"gitId":"tsinyee"},"content":"            new Person(new Name(\"Roy Balakrishnan\"), new Phone(\"92624417\"), new Availability(SAMPLE_AVAILABILITY),","lastModifiedDate":"2021-10-21"},{"lineNumber":43,"author":{"gitId":"tsinyee"},"content":"                    getTagSet(\"y3\"))","lastModifiedDate":"2021-10-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        };","lastModifiedDate":"2016-12-20"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":47,"author":{"gitId":"YoYoCiti"},"content":"    public static Facility[] getSampleFacilities() {","lastModifiedDate":"2021-09-29"},{"lineNumber":48,"author":{"gitId":"YoYoCiti"},"content":"        return new Facility[] {","lastModifiedDate":"2021-09-29"},{"lineNumber":49,"author":{"gitId":"Shruthi0310"},"content":"            new Facility(new FacilityName(\"Court 1\"), new Location(\"University Sports Hall\"),","lastModifiedDate":"2021-10-05"},{"lineNumber":50,"author":{"gitId":"Moley456"},"content":"                    new Time(\"1130\"), new Capacity(\"5\")),","lastModifiedDate":"2021-10-11"},{"lineNumber":51,"author":{"gitId":"Shruthi0310"},"content":"            new Facility(new FacilityName(\"NUS Field 2\"), new Location(\"Opp University Hall\"),","lastModifiedDate":"2021-10-05"},{"lineNumber":52,"author":{"gitId":"Moley456"},"content":"                    new Time(\"1330\"), new Capacity(\"8\")),","lastModifiedDate":"2021-10-11"},{"lineNumber":53,"author":{"gitId":"Shruthi0310"},"content":"            new Facility(new FacilityName(\"Court 2\"), new Location(\"University Sports Hall\"),","lastModifiedDate":"2021-10-05"},{"lineNumber":54,"author":{"gitId":"Moley456"},"content":"                    new Time(\"2030\"), new Capacity(\"10\")),","lastModifiedDate":"2021-10-11"},{"lineNumber":55,"author":{"gitId":"Shruthi0310"},"content":"            new Facility(new FacilityName(\"Court 3\"), new Location(\"University Sports Hall\"),","lastModifiedDate":"2021-10-05"},{"lineNumber":56,"author":{"gitId":"Moley456"},"content":"                    new Time(\"1230\"), new Capacity(\"6\"))","lastModifiedDate":"2021-10-11"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        };","lastModifiedDate":"2021-09-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-29"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public static ReadOnlyAddressBook getSampleAddressBook() {","lastModifiedDate":"2016-12-20"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        AddressBook sampleAb \u003d new AddressBook();","lastModifiedDate":"2017-04-07"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        for (Person samplePerson : getSamplePersons()) {","lastModifiedDate":"2016-12-20"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            sampleAb.addPerson(samplePerson);","lastModifiedDate":"2017-04-07"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-20"},{"lineNumber":65,"author":{"gitId":"Moley456"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":66,"author":{"gitId":"Moley456"},"content":"        for (Facility sampleFacility : getSampleFacilities()) {","lastModifiedDate":"2021-10-10"},{"lineNumber":67,"author":{"gitId":"Moley456"},"content":"            sampleAb.addFacility(sampleFacility);","lastModifiedDate":"2021-10-10"},{"lineNumber":68,"author":{"gitId":"Moley456"},"content":"        }","lastModifiedDate":"2021-10-10"},{"lineNumber":69,"author":{"gitId":"Moley456"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        return sampleAb;","lastModifiedDate":"2017-04-07"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-14"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * Returns a tag set containing the list of strings given.","lastModifiedDate":"2017-03-14"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-14"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e getTagSet(String... strings) {","lastModifiedDate":"2017-05-30"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        return Arrays.stream(strings)","lastModifiedDate":"2018-01-21"},{"lineNumber":78,"author":{"gitId":"-"},"content":"                .map(Tag::new)","lastModifiedDate":"2018-01-21"},{"lineNumber":79,"author":{"gitId":"-"},"content":"                .collect(Collectors.toSet());","lastModifiedDate":"2018-01-21"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-14"},{"lineNumber":81,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-20"}],"authorContributionMap":{"YoYoCiti":3,"Shruthi0310":8,"Moley456":9,"-":42,"felix-ong":7,"tsinyee":12}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedFacility.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Moley456"},"content":"package seedu.address.storage;","lastModifiedDate":"2021-10-10"},{"lineNumber":2,"author":{"gitId":"Moley456"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":3,"author":{"gitId":"Moley456"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-27"},{"lineNumber":4,"author":{"gitId":"Moley456"},"content":"import java.util.List;","lastModifiedDate":"2021-10-27"},{"lineNumber":5,"author":{"gitId":"Moley456"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":6,"author":{"gitId":"Moley456"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2021-10-10"},{"lineNumber":7,"author":{"gitId":"Moley456"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2021-10-10"},{"lineNumber":8,"author":{"gitId":"Moley456"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":9,"author":{"gitId":"Moley456"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2021-10-10"},{"lineNumber":10,"author":{"gitId":"Moley456"},"content":"import seedu.address.model.facility.Capacity;","lastModifiedDate":"2021-10-10"},{"lineNumber":11,"author":{"gitId":"Moley456"},"content":"import seedu.address.model.facility.Facility;","lastModifiedDate":"2021-10-10"},{"lineNumber":12,"author":{"gitId":"Moley456"},"content":"import seedu.address.model.facility.FacilityName;","lastModifiedDate":"2021-10-10"},{"lineNumber":13,"author":{"gitId":"Moley456"},"content":"import seedu.address.model.facility.Location;","lastModifiedDate":"2021-10-10"},{"lineNumber":14,"author":{"gitId":"Moley456"},"content":"import seedu.address.model.facility.Time;","lastModifiedDate":"2021-10-10"},{"lineNumber":15,"author":{"gitId":"Moley456"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2021-10-27"},{"lineNumber":16,"author":{"gitId":"Moley456"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":17,"author":{"gitId":"Moley456"},"content":"/**","lastModifiedDate":"2021-10-10"},{"lineNumber":18,"author":{"gitId":"Moley456"},"content":" * Jackson-friendly version of {@link Facility}.","lastModifiedDate":"2021-10-10"},{"lineNumber":19,"author":{"gitId":"Moley456"},"content":" */","lastModifiedDate":"2021-10-10"},{"lineNumber":20,"author":{"gitId":"Moley456"},"content":"public class JsonAdaptedFacility {","lastModifiedDate":"2021-10-10"},{"lineNumber":21,"author":{"gitId":"Moley456"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":22,"author":{"gitId":"Moley456"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Person\u0027s %s field is missing!\";","lastModifiedDate":"2021-10-10"},{"lineNumber":23,"author":{"gitId":"Moley456"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":24,"author":{"gitId":"Moley456"},"content":"    private final String name;","lastModifiedDate":"2021-10-10"},{"lineNumber":25,"author":{"gitId":"Moley456"},"content":"    private final String location;","lastModifiedDate":"2021-10-10"},{"lineNumber":26,"author":{"gitId":"Moley456"},"content":"    private final String time;","lastModifiedDate":"2021-10-10"},{"lineNumber":27,"author":{"gitId":"Moley456"},"content":"    private final String capacity;","lastModifiedDate":"2021-10-10"},{"lineNumber":28,"author":{"gitId":"Moley456"},"content":"    private final List\u003cJsonAdaptedPerson\u003e allocationList;","lastModifiedDate":"2021-10-27"},{"lineNumber":29,"author":{"gitId":"Moley456"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":30,"author":{"gitId":"Moley456"},"content":"    /**","lastModifiedDate":"2021-10-10"},{"lineNumber":31,"author":{"gitId":"Moley456"},"content":"     * Constructs a {@code JsonAdaptedFacility} with the given facility details.","lastModifiedDate":"2021-10-10"},{"lineNumber":32,"author":{"gitId":"Moley456"},"content":"     */","lastModifiedDate":"2021-10-10"},{"lineNumber":33,"author":{"gitId":"Moley456"},"content":"    @JsonCreator","lastModifiedDate":"2021-10-10"},{"lineNumber":34,"author":{"gitId":"Moley456"},"content":"    public JsonAdaptedFacility(@JsonProperty(\"name\") String name, @JsonProperty(\"location\") String location,","lastModifiedDate":"2021-10-10"},{"lineNumber":35,"author":{"gitId":"Moley456"},"content":"                               @JsonProperty(\"time\") String time, @JsonProperty(\"capacity\") String capacity,","lastModifiedDate":"2021-10-27"},{"lineNumber":36,"author":{"gitId":"Moley456"},"content":"                               @JsonProperty(\"allocationList\") List\u003cJsonAdaptedPerson\u003e allocationList) {","lastModifiedDate":"2021-10-27"},{"lineNumber":37,"author":{"gitId":"Moley456"},"content":"        this.name \u003d name;","lastModifiedDate":"2021-10-10"},{"lineNumber":38,"author":{"gitId":"Moley456"},"content":"        this.location \u003d location;","lastModifiedDate":"2021-10-10"},{"lineNumber":39,"author":{"gitId":"Moley456"},"content":"        this.time \u003d time;","lastModifiedDate":"2021-10-10"},{"lineNumber":40,"author":{"gitId":"Moley456"},"content":"        this.capacity \u003d capacity;","lastModifiedDate":"2021-10-10"},{"lineNumber":41,"author":{"gitId":"Moley456"},"content":"        this.allocationList \u003d allocationList;","lastModifiedDate":"2021-10-27"},{"lineNumber":42,"author":{"gitId":"Moley456"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":43,"author":{"gitId":"Moley456"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":44,"author":{"gitId":"Moley456"},"content":"    /**","lastModifiedDate":"2021-10-10"},{"lineNumber":45,"author":{"gitId":"Moley456"},"content":"     * Converts a given {@code Facility} into this class for Jackson use.","lastModifiedDate":"2021-10-10"},{"lineNumber":46,"author":{"gitId":"Moley456"},"content":"     */","lastModifiedDate":"2021-10-10"},{"lineNumber":47,"author":{"gitId":"Moley456"},"content":"    public JsonAdaptedFacility(Facility source) {","lastModifiedDate":"2021-10-10"},{"lineNumber":48,"author":{"gitId":"Moley456"},"content":"        name \u003d source.getName().facilityName;","lastModifiedDate":"2021-10-10"},{"lineNumber":49,"author":{"gitId":"Moley456"},"content":"        location \u003d source.getLocation().location;","lastModifiedDate":"2021-10-10"},{"lineNumber":50,"author":{"gitId":"Moley456"},"content":"        time \u003d source.getTime().time;","lastModifiedDate":"2021-10-10"},{"lineNumber":51,"author":{"gitId":"Moley456"},"content":"        capacity \u003d source.getCapacity().capacity;","lastModifiedDate":"2021-10-10"},{"lineNumber":52,"author":{"gitId":"Moley456"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":53,"author":{"gitId":"Moley456"},"content":"        List\u003cJsonAdaptedPerson\u003e allocationList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-27"},{"lineNumber":54,"author":{"gitId":"Moley456"},"content":"        for (Person person : source.getPersonAllocatedList()) {","lastModifiedDate":"2021-10-27"},{"lineNumber":55,"author":{"gitId":"Moley456"},"content":"            JsonAdaptedPerson adaptedPerson \u003d new JsonAdaptedPerson(person);","lastModifiedDate":"2021-10-27"},{"lineNumber":56,"author":{"gitId":"Moley456"},"content":"            allocationList.add(adaptedPerson);","lastModifiedDate":"2021-10-27"},{"lineNumber":57,"author":{"gitId":"Moley456"},"content":"        }","lastModifiedDate":"2021-10-27"},{"lineNumber":58,"author":{"gitId":"Moley456"},"content":"        this.allocationList \u003d allocationList;","lastModifiedDate":"2021-10-27"},{"lineNumber":59,"author":{"gitId":"Moley456"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":60,"author":{"gitId":"Moley456"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":61,"author":{"gitId":"Moley456"},"content":"    /**","lastModifiedDate":"2021-10-10"},{"lineNumber":62,"author":{"gitId":"Moley456"},"content":"     * Converts this Jackson-friendly adapted person object into the model\u0027s {@code Facility} object.","lastModifiedDate":"2021-10-27"},{"lineNumber":63,"author":{"gitId":"Moley456"},"content":"     *","lastModifiedDate":"2021-10-10"},{"lineNumber":64,"author":{"gitId":"Moley456"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted facility.","lastModifiedDate":"2021-10-27"},{"lineNumber":65,"author":{"gitId":"Moley456"},"content":"     */","lastModifiedDate":"2021-10-10"},{"lineNumber":66,"author":{"gitId":"Moley456"},"content":"    public Facility toModelType() throws IllegalValueException {","lastModifiedDate":"2021-10-10"},{"lineNumber":67,"author":{"gitId":"Moley456"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":68,"author":{"gitId":"Moley456"},"content":"        if (name \u003d\u003d null) {","lastModifiedDate":"2021-10-10"},{"lineNumber":69,"author":{"gitId":"Moley456"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2021-10-11"},{"lineNumber":70,"author":{"gitId":"Moley456"},"content":"                    FacilityName.class.getSimpleName()));","lastModifiedDate":"2021-10-11"},{"lineNumber":71,"author":{"gitId":"Moley456"},"content":"        }","lastModifiedDate":"2021-10-10"},{"lineNumber":72,"author":{"gitId":"Moley456"},"content":"        if (!FacilityName.isValidFacilityName(name)) {","lastModifiedDate":"2021-10-10"},{"lineNumber":73,"author":{"gitId":"Moley456"},"content":"            throw new IllegalValueException(FacilityName.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-11"},{"lineNumber":74,"author":{"gitId":"Moley456"},"content":"        }","lastModifiedDate":"2021-10-10"},{"lineNumber":75,"author":{"gitId":"Moley456"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":76,"author":{"gitId":"Moley456"},"content":"        final FacilityName modelFacilityName \u003d new FacilityName(name);","lastModifiedDate":"2021-10-10"},{"lineNumber":77,"author":{"gitId":"Moley456"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":78,"author":{"gitId":"Moley456"},"content":"        if (location \u003d\u003d null) {","lastModifiedDate":"2021-10-10"},{"lineNumber":79,"author":{"gitId":"Moley456"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2021-10-11"},{"lineNumber":80,"author":{"gitId":"Moley456"},"content":"                    Location.class.getSimpleName()));","lastModifiedDate":"2021-10-11"},{"lineNumber":81,"author":{"gitId":"Moley456"},"content":"        }","lastModifiedDate":"2021-10-10"},{"lineNumber":82,"author":{"gitId":"felix-ong"},"content":"        if (!Location.isValidLocation(location)) {","lastModifiedDate":"2021-10-30"},{"lineNumber":83,"author":{"gitId":"Moley456"},"content":"            throw new IllegalValueException(Location.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-11"},{"lineNumber":84,"author":{"gitId":"Moley456"},"content":"        }","lastModifiedDate":"2021-10-10"},{"lineNumber":85,"author":{"gitId":"Moley456"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":86,"author":{"gitId":"Moley456"},"content":"        final Location modelLocation \u003d new Location(location);","lastModifiedDate":"2021-10-10"},{"lineNumber":87,"author":{"gitId":"Moley456"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":88,"author":{"gitId":"Moley456"},"content":"        if (time \u003d\u003d null) {","lastModifiedDate":"2021-10-10"},{"lineNumber":89,"author":{"gitId":"Moley456"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2021-10-11"},{"lineNumber":90,"author":{"gitId":"Moley456"},"content":"                    Time.class.getSimpleName()));","lastModifiedDate":"2021-10-11"},{"lineNumber":91,"author":{"gitId":"Moley456"},"content":"        }","lastModifiedDate":"2021-10-10"},{"lineNumber":92,"author":{"gitId":"Moley456"},"content":"        if (!Time.isValidTime(time)) {","lastModifiedDate":"2021-10-10"},{"lineNumber":93,"author":{"gitId":"Moley456"},"content":"            throw new IllegalValueException(Time.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-11"},{"lineNumber":94,"author":{"gitId":"Moley456"},"content":"        }","lastModifiedDate":"2021-10-10"},{"lineNumber":95,"author":{"gitId":"Moley456"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":96,"author":{"gitId":"Moley456"},"content":"        final Time modelTime \u003d new Time(time);","lastModifiedDate":"2021-10-10"},{"lineNumber":97,"author":{"gitId":"Moley456"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":98,"author":{"gitId":"Moley456"},"content":"        if (capacity \u003d\u003d null) {","lastModifiedDate":"2021-10-10"},{"lineNumber":99,"author":{"gitId":"Moley456"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2021-10-11"},{"lineNumber":100,"author":{"gitId":"Moley456"},"content":"                    Capacity.class.getSimpleName()));","lastModifiedDate":"2021-10-11"},{"lineNumber":101,"author":{"gitId":"Moley456"},"content":"        }","lastModifiedDate":"2021-10-10"},{"lineNumber":102,"author":{"gitId":"Moley456"},"content":"        if (!Capacity.isValidCapacity(capacity)) {","lastModifiedDate":"2021-10-10"},{"lineNumber":103,"author":{"gitId":"Moley456"},"content":"            throw new IllegalValueException(Capacity.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-11"},{"lineNumber":104,"author":{"gitId":"Moley456"},"content":"        }","lastModifiedDate":"2021-10-10"},{"lineNumber":105,"author":{"gitId":"Moley456"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":106,"author":{"gitId":"Moley456"},"content":"        final Capacity modelCapacity \u003d new Capacity(capacity);","lastModifiedDate":"2021-10-10"},{"lineNumber":107,"author":{"gitId":"Moley456"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":108,"author":{"gitId":"Moley456"},"content":"        Facility convertedFacility \u003d new Facility(modelFacilityName, modelLocation, modelTime, modelCapacity);","lastModifiedDate":"2021-10-27"},{"lineNumber":109,"author":{"gitId":"Moley456"},"content":"        addAllocatedPersons(convertedFacility);","lastModifiedDate":"2021-10-27"},{"lineNumber":110,"author":{"gitId":"Moley456"},"content":"        return convertedFacility;","lastModifiedDate":"2021-10-27"},{"lineNumber":111,"author":{"gitId":"Moley456"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":112,"author":{"gitId":"Moley456"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":113,"author":{"gitId":"Moley456"},"content":"    private void addAllocatedPersons(Facility facility) throws IllegalValueException {","lastModifiedDate":"2021-10-27"},{"lineNumber":114,"author":{"gitId":"Moley456"},"content":"        for (JsonAdaptedPerson adaptedPerson : allocationList) {","lastModifiedDate":"2021-10-27"},{"lineNumber":115,"author":{"gitId":"Moley456"},"content":"            Person allocatedPerson \u003d adaptedPerson.toModelType();","lastModifiedDate":"2021-10-27"},{"lineNumber":116,"author":{"gitId":"Moley456"},"content":"            facility.addPersonToFacility(allocatedPerson);","lastModifiedDate":"2021-10-27"},{"lineNumber":117,"author":{"gitId":"Moley456"},"content":"        }","lastModifiedDate":"2021-10-27"},{"lineNumber":118,"author":{"gitId":"Moley456"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":119,"author":{"gitId":"Moley456"},"content":"}","lastModifiedDate":"2021-10-10"}],"authorContributionMap":{"Moley456":118,"felix-ong":1}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedPerson.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"felix-ong"},"content":"import java.time.DayOfWeek;","lastModifiedDate":"2021-10-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2021-10-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2021-10-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2021-10-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2021-10-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"felix-ong"},"content":"import seedu.address.model.person.Availability;","lastModifiedDate":"2021-10-10"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"Shruthi0310"},"content":"import seedu.address.model.person.TodayAttendance;","lastModifiedDate":"2021-10-21"},{"lineNumber":19,"author":{"gitId":"Shruthi0310"},"content":"import seedu.address.model.person.TotalAttendance;","lastModifiedDate":"2021-10-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2021-10-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * Jackson-friendly version of {@link Person}.","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"class JsonAdaptedPerson {","lastModifiedDate":"2018-12-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Person\u0027s %s field is missing!\";","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private final String name;","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private final String phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"felix-ong"},"content":"    private final List\u003cDayOfWeek\u003e availability;","lastModifiedDate":"2021-10-15"},{"lineNumber":32,"author":{"gitId":"Shruthi0310"},"content":"    private final Boolean todayAttendance;","lastModifiedDate":"2021-10-21"},{"lineNumber":33,"author":{"gitId":"Shruthi0310"},"content":"    private final Integer totalAttendance;","lastModifiedDate":"2021-10-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private final List\u003cJsonAdaptedTag\u003e tagged \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Constructs a {@code JsonAdaptedPerson} with the given person details.","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public JsonAdaptedPerson(@JsonProperty(\"name\") String name, @JsonProperty(\"phone\") String phone,","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"tsinyee"},"content":"                             @JsonProperty(\"availability\") List\u003cDayOfWeek\u003e availability,","lastModifiedDate":"2021-10-21"},{"lineNumber":42,"author":{"gitId":"Shruthi0310"},"content":"                             @JsonProperty(\"todayAttendance\") Boolean todayAttendance,","lastModifiedDate":"2021-10-23"},{"lineNumber":43,"author":{"gitId":"Shruthi0310"},"content":"                             @JsonProperty(\"totalAttendance\") Integer totalAttendance,","lastModifiedDate":"2021-10-23"},{"lineNumber":44,"author":{"gitId":"tsinyee"},"content":"                             @JsonProperty(\"tagged\") List\u003cJsonAdaptedTag\u003e tagged) {","lastModifiedDate":"2021-10-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"felix-ong"},"content":"        this.availability \u003d availability;","lastModifiedDate":"2021-10-10"},{"lineNumber":48,"author":{"gitId":"Shruthi0310"},"content":"        this.todayAttendance \u003d todayAttendance;","lastModifiedDate":"2021-10-21"},{"lineNumber":49,"author":{"gitId":"Shruthi0310"},"content":"        this.totalAttendance \u003d totalAttendance;","lastModifiedDate":"2021-10-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        if (tagged !\u003d null) {","lastModifiedDate":"2021-10-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            this.tagged.addAll(tagged);","lastModifiedDate":"2021-10-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":53,"author":{"gitId":"tsinyee"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * Converts a given {@code Person} into this class for Jackson use.","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public JsonAdaptedPerson(Person source) {","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        name \u003d source.getName().fullName;","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        phone \u003d source.getPhone().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"felix-ong"},"content":"        availability \u003d source.getAvailability().values;","lastModifiedDate":"2021-10-10"},{"lineNumber":63,"author":{"gitId":"Shruthi0310"},"content":"        todayAttendance \u003d source.getTodayAttendance().getAttendance();","lastModifiedDate":"2021-10-21"},{"lineNumber":64,"author":{"gitId":"Shruthi0310"},"content":"        totalAttendance \u003d source.getTotalAttendance().getAttendance();","lastModifiedDate":"2021-10-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        tagged.addAll(source.getTags().stream()","lastModifiedDate":"2021-10-21"},{"lineNumber":66,"author":{"gitId":"-"},"content":"                .map(JsonAdaptedTag::new)","lastModifiedDate":"2021-10-21"},{"lineNumber":67,"author":{"gitId":"-"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2021-10-21"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     * Converts this Jackson-friendly adapted person object into the model\u0027s {@code Person} object.","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted person.","lastModifiedDate":"2018-08-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public Person toModelType() throws IllegalValueException {","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        final List\u003cTag\u003e personTags \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-21"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        for (JsonAdaptedTag tag : tagged) {","lastModifiedDate":"2021-10-21"},{"lineNumber":78,"author":{"gitId":"-"},"content":"            personTags.add(tag.toModelType());","lastModifiedDate":"2021-10-21"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        if (name \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(name)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        final Name modelName \u003d new Name(name);","lastModifiedDate":"2018-08-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        if (phone \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(phone)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        final Phone modelPhone \u003d new Phone(phone);","lastModifiedDate":"2018-08-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":97,"author":{"gitId":"felix-ong"},"content":"        if (availability \u003d\u003d null) {","lastModifiedDate":"2021-10-10"},{"lineNumber":98,"author":{"gitId":"felix-ong"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2021-10-10"},{"lineNumber":99,"author":{"gitId":"felix-ong"},"content":"                    Availability.class.getSimpleName()));","lastModifiedDate":"2021-10-10"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-10-10"},{"lineNumber":101,"author":{"gitId":"felix-ong"},"content":"        final Availability modelAvailability \u003d new Availability(availability);","lastModifiedDate":"2021-10-10"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":103,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":104,"author":{"gitId":"Shruthi0310"},"content":"        if (todayAttendance \u003d\u003d null) {","lastModifiedDate":"2021-10-21"},{"lineNumber":105,"author":{"gitId":"Shruthi0310"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2021-10-21"},{"lineNumber":106,"author":{"gitId":"Shruthi0310"},"content":"                    TodayAttendance.class.getSimpleName()));","lastModifiedDate":"2021-10-21"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":108,"author":{"gitId":"Shruthi0310"},"content":"        final TodayAttendance modelTodayAttendance \u003d new TodayAttendance(todayAttendance);","lastModifiedDate":"2021-10-21"},{"lineNumber":109,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":110,"author":{"gitId":"Shruthi0310"},"content":"        if (totalAttendance \u003d\u003d null) {","lastModifiedDate":"2021-10-21"},{"lineNumber":111,"author":{"gitId":"Shruthi0310"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2021-10-21"},{"lineNumber":112,"author":{"gitId":"Shruthi0310"},"content":"                    TotalAttendance.class.getSimpleName()));","lastModifiedDate":"2021-10-21"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":114,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":115,"author":{"gitId":"Shruthi0310"},"content":"        final TotalAttendance modelTotalAttendance \u003d new TotalAttendance(totalAttendance);","lastModifiedDate":"2021-10-21"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        final Set\u003cTag\u003e modelTags \u003d new HashSet\u003c\u003e(personTags);","lastModifiedDate":"2021-10-21"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":119,"author":{"gitId":"Shruthi0310"},"content":"        return new Person(modelName, modelPhone, modelAvailability, modelTodayAttendance,","lastModifiedDate":"2021-10-23"},{"lineNumber":120,"author":{"gitId":"Shruthi0310"},"content":"                modelTotalAttendance, modelTags);","lastModifiedDate":"2021-10-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":122,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"Shruthi0310":23,"-":87,"felix-ong":9,"tsinyee":3}},{"path":"src/main/java/seedu/address/storage/JsonSerializableAddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonRootName;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"Moley456"},"content":"import seedu.address.model.facility.Facility;","lastModifiedDate":"2021-10-10"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * An Immutable AddressBook that is serializable to JSON format.","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"@JsonRootName(value \u003d \"addressbook\")","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"class JsonSerializableAddressBook {","lastModifiedDate":"2018-12-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"tsinyee"},"content":"    public static final String MESSAGE_DUPLICATE_MEMBER \u003d \"Persons list contains duplicate person(s).\";","lastModifiedDate":"2021-10-05"},{"lineNumber":24,"author":{"gitId":"Moley456"},"content":"    public static final String MESSAGE_DUPLICATE_FACILITY \u003d \"Persons list contains duplicate facilities.\";","lastModifiedDate":"2021-10-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"Moley456"},"content":"    private final List\u003cJsonAdaptedPerson\u003e members \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-11"},{"lineNumber":27,"author":{"gitId":"Moley456"},"content":"    private final List\u003cJsonAdaptedFacility\u003e facilities \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-10"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"Moley456"},"content":"     * Constructs a {@code JsonSerializableAddressBook} with the given members and facilities.","lastModifiedDate":"2021-10-11"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"Moley456"},"content":"    public JsonSerializableAddressBook(@JsonProperty(\"members\") List\u003cJsonAdaptedPerson\u003e members,","lastModifiedDate":"2021-10-11"},{"lineNumber":34,"author":{"gitId":"Moley456"},"content":"                                       @JsonProperty(\"facilities\") List\u003cJsonAdaptedFacility\u003e facilities) {","lastModifiedDate":"2021-10-10"},{"lineNumber":35,"author":{"gitId":"Moley456"},"content":"        this.members.addAll(members);","lastModifiedDate":"2021-10-11"},{"lineNumber":36,"author":{"gitId":"Moley456"},"content":"        this.facilities.addAll(facilities);","lastModifiedDate":"2021-10-10"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"Moley456"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":40,"author":{"gitId":"Moley456"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Converts a given {@code ReadOnlyAddressBook} into this class for Jackson use.","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * @param source future changes to this will not affect the created {@code JsonSerializableAddressBook}.","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public JsonSerializableAddressBook(ReadOnlyAddressBook source) {","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"Moley456"},"content":"        members.addAll(source.getPersonList().stream().map(JsonAdaptedPerson::new).collect(Collectors.toList()));","lastModifiedDate":"2021-10-11"},{"lineNumber":48,"author":{"gitId":"Moley456"},"content":"        facilities.addAll(source.getFacilityList().stream().map(JsonAdaptedFacility::new).collect(Collectors.toList()));","lastModifiedDate":"2021-10-10"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Converts this address book into the model\u0027s {@code AddressBook} object.","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated.","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public AddressBook toModelType() throws IllegalValueException {","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        AddressBook addressBook \u003d new AddressBook();","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"Moley456"},"content":"        for (JsonAdaptedPerson jsonAdaptedPerson : members) {","lastModifiedDate":"2021-10-11"},{"lineNumber":59,"author":{"gitId":"-"},"content":"            Person person \u003d jsonAdaptedPerson.toModelType();","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"            if (addressBook.hasPerson(person)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"tsinyee"},"content":"                throw new IllegalValueException(MESSAGE_DUPLICATE_MEMBER);","lastModifiedDate":"2021-10-05"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            addressBook.addPerson(person);","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"Moley456"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":66,"author":{"gitId":"Moley456"},"content":"        for (JsonAdaptedFacility jsonAdaptedFacility : facilities) {","lastModifiedDate":"2021-10-10"},{"lineNumber":67,"author":{"gitId":"Moley456"},"content":"            Facility facility \u003d jsonAdaptedFacility.toModelType();","lastModifiedDate":"2021-10-10"},{"lineNumber":68,"author":{"gitId":"Moley456"},"content":"            if (addressBook.hasFacility(facility)) {","lastModifiedDate":"2021-10-10"},{"lineNumber":69,"author":{"gitId":"Moley456"},"content":"                throw new IllegalValueException(MESSAGE_DUPLICATE_FACILITY);","lastModifiedDate":"2021-10-11"},{"lineNumber":70,"author":{"gitId":"Moley456"},"content":"            }","lastModifiedDate":"2021-10-10"},{"lineNumber":71,"author":{"gitId":"Moley456"},"content":"            addressBook.addFacility(facility);","lastModifiedDate":"2021-10-10"},{"lineNumber":72,"author":{"gitId":"Moley456"},"content":"        }","lastModifiedDate":"2021-10-10"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        return addressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"Moley456":22,"-":52,"tsinyee":2}},{"path":"src/main/java/seedu/address/ui/FacilityListCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Shruthi0310"},"content":"package seedu.address.ui;","lastModifiedDate":"2021-10-05"},{"lineNumber":2,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":3,"author":{"gitId":"Shruthi0310"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-10-05"},{"lineNumber":4,"author":{"gitId":"Shruthi0310"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2021-10-05"},{"lineNumber":5,"author":{"gitId":"Shruthi0310"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2021-10-05"},{"lineNumber":6,"author":{"gitId":"Shruthi0310"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2021-10-05"},{"lineNumber":7,"author":{"gitId":"Shruthi0310"},"content":"import seedu.address.model.facility.Facility;","lastModifiedDate":"2021-10-05"},{"lineNumber":8,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":9,"author":{"gitId":"Shruthi0310"},"content":"/**","lastModifiedDate":"2021-10-06"},{"lineNumber":10,"author":{"gitId":"Shruthi0310"},"content":" * An Ui component that displays information of a Facility","lastModifiedDate":"2021-10-06"},{"lineNumber":11,"author":{"gitId":"Shruthi0310"},"content":" */","lastModifiedDate":"2021-10-06"},{"lineNumber":12,"author":{"gitId":"Shruthi0310"},"content":"public class FacilityListCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2021-10-05"},{"lineNumber":13,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":14,"author":{"gitId":"Shruthi0310"},"content":"    private static final String FXML \u003d \"FacilityListCard.fxml\";","lastModifiedDate":"2021-10-05"},{"lineNumber":15,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":16,"author":{"gitId":"Shruthi0310"},"content":"    public final Facility facility;","lastModifiedDate":"2021-10-05"},{"lineNumber":17,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":18,"author":{"gitId":"Shruthi0310"},"content":"    @FXML","lastModifiedDate":"2021-10-05"},{"lineNumber":19,"author":{"gitId":"Shruthi0310"},"content":"    private HBox cardPane;","lastModifiedDate":"2021-10-05"},{"lineNumber":20,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":21,"author":{"gitId":"Shruthi0310"},"content":"    @FXML","lastModifiedDate":"2021-10-05"},{"lineNumber":22,"author":{"gitId":"Shruthi0310"},"content":"    private Label name;","lastModifiedDate":"2021-10-05"},{"lineNumber":23,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":24,"author":{"gitId":"Shruthi0310"},"content":"    @FXML","lastModifiedDate":"2021-10-05"},{"lineNumber":25,"author":{"gitId":"Shruthi0310"},"content":"    private Label loc;","lastModifiedDate":"2021-10-05"},{"lineNumber":26,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":27,"author":{"gitId":"Shruthi0310"},"content":"    @FXML","lastModifiedDate":"2021-10-05"},{"lineNumber":28,"author":{"gitId":"Shruthi0310"},"content":"    private Label time;","lastModifiedDate":"2021-10-05"},{"lineNumber":29,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":30,"author":{"gitId":"Shruthi0310"},"content":"    @FXML","lastModifiedDate":"2021-10-05"},{"lineNumber":31,"author":{"gitId":"Shruthi0310"},"content":"    private Label capacity;","lastModifiedDate":"2021-10-05"},{"lineNumber":32,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":33,"author":{"gitId":"Shruthi0310"},"content":"    @FXML","lastModifiedDate":"2021-10-05"},{"lineNumber":34,"author":{"gitId":"Shruthi0310"},"content":"    private Label listIndex;","lastModifiedDate":"2021-10-05"},{"lineNumber":35,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":36,"author":{"gitId":"Shruthi0310"},"content":"    @FXML","lastModifiedDate":"2021-10-12"},{"lineNumber":37,"author":{"gitId":"Shruthi0310"},"content":"    private Label personAllocated;","lastModifiedDate":"2021-10-12"},{"lineNumber":38,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":39,"author":{"gitId":"Shruthi0310"},"content":"    /**","lastModifiedDate":"2021-10-06"},{"lineNumber":40,"author":{"gitId":"Shruthi0310"},"content":"     * Creates a FacilityListCard with the specified facility and index.","lastModifiedDate":"2021-10-06"},{"lineNumber":41,"author":{"gitId":"Shruthi0310"},"content":"     *","lastModifiedDate":"2021-10-06"},{"lineNumber":42,"author":{"gitId":"Shruthi0310"},"content":"     * @param facility Facility to be listed.","lastModifiedDate":"2021-10-06"},{"lineNumber":43,"author":{"gitId":"Shruthi0310"},"content":"     * @param index Index of facility in list.","lastModifiedDate":"2021-10-06"},{"lineNumber":44,"author":{"gitId":"Shruthi0310"},"content":"     */","lastModifiedDate":"2021-10-06"},{"lineNumber":45,"author":{"gitId":"Shruthi0310"},"content":"    public FacilityListCard(Facility facility, int index) {","lastModifiedDate":"2021-10-05"},{"lineNumber":46,"author":{"gitId":"Shruthi0310"},"content":"        super(FXML);","lastModifiedDate":"2021-10-05"},{"lineNumber":47,"author":{"gitId":"Shruthi0310"},"content":"        this.facility \u003d facility;","lastModifiedDate":"2021-10-05"},{"lineNumber":48,"author":{"gitId":"Shruthi0310"},"content":"        listIndex.setText(index + \".\");","lastModifiedDate":"2021-10-05"},{"lineNumber":49,"author":{"gitId":"Shruthi0310"},"content":"        name.setText(facility.getName().toString());","lastModifiedDate":"2021-10-05"},{"lineNumber":50,"author":{"gitId":"Shruthi0310"},"content":"        loc.setText(facility.getLocation().toString());","lastModifiedDate":"2021-10-05"},{"lineNumber":51,"author":{"gitId":"felix-ong"},"content":"        time.setText(\"Start time: \" + facility.getTime().toString());","lastModifiedDate":"2021-10-30"},{"lineNumber":52,"author":{"gitId":"felix-ong"},"content":"        capacity.setText(\"Capacity: \" + facility.getPersonAllocatedList().size()","lastModifiedDate":"2021-10-30"},{"lineNumber":53,"author":{"gitId":"felix-ong"},"content":"                + \"/\" + facility.getCapacity().toString());","lastModifiedDate":"2021-10-30"},{"lineNumber":54,"author":{"gitId":"Shruthi0310"},"content":"        personAllocated.setText(facility.getPersonsAsString());","lastModifiedDate":"2021-10-12"},{"lineNumber":55,"author":{"gitId":"Shruthi0310"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":56,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":57,"author":{"gitId":"Shruthi0310"},"content":"}","lastModifiedDate":"2021-10-05"}],"authorContributionMap":{"Shruthi0310":54,"felix-ong":3}},{"path":"src/main/java/seedu/address/ui/FacilityListPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Shruthi0310"},"content":"package seedu.address.ui;","lastModifiedDate":"2021-10-05"},{"lineNumber":2,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":3,"author":{"gitId":"Shruthi0310"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-10-05"},{"lineNumber":4,"author":{"gitId":"Shruthi0310"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-10-05"},{"lineNumber":5,"author":{"gitId":"Shruthi0310"},"content":"import javafx.scene.control.ListCell;","lastModifiedDate":"2021-10-05"},{"lineNumber":6,"author":{"gitId":"Shruthi0310"},"content":"import javafx.scene.control.ListView;","lastModifiedDate":"2021-10-05"},{"lineNumber":7,"author":{"gitId":"Shruthi0310"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2021-10-05"},{"lineNumber":8,"author":{"gitId":"Shruthi0310"},"content":"import seedu.address.model.facility.Facility;","lastModifiedDate":"2021-10-05"},{"lineNumber":9,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":10,"author":{"gitId":"Shruthi0310"},"content":"/**","lastModifiedDate":"2021-10-06"},{"lineNumber":11,"author":{"gitId":"Shruthi0310"},"content":" * Panel containing list of Facilities.","lastModifiedDate":"2021-10-06"},{"lineNumber":12,"author":{"gitId":"Shruthi0310"},"content":" */","lastModifiedDate":"2021-10-06"},{"lineNumber":13,"author":{"gitId":"Shruthi0310"},"content":"public class FacilityListPanel extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2021-10-05"},{"lineNumber":14,"author":{"gitId":"Shruthi0310"},"content":"    private static final String FXML \u003d \"FacilityListPanel.fxml\";","lastModifiedDate":"2021-10-05"},{"lineNumber":15,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":16,"author":{"gitId":"Shruthi0310"},"content":"    @FXML","lastModifiedDate":"2021-10-05"},{"lineNumber":17,"author":{"gitId":"Shruthi0310"},"content":"    private ListView\u003cFacility\u003e facilityListView;","lastModifiedDate":"2021-10-05"},{"lineNumber":18,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":19,"author":{"gitId":"Shruthi0310"},"content":"    /**","lastModifiedDate":"2021-10-06"},{"lineNumber":20,"author":{"gitId":"Shruthi0310"},"content":"     * Creates a FacilityListPanel object with the specified list.","lastModifiedDate":"2021-10-06"},{"lineNumber":21,"author":{"gitId":"Shruthi0310"},"content":"     *","lastModifiedDate":"2021-10-06"},{"lineNumber":22,"author":{"gitId":"Shruthi0310"},"content":"     * @param facilityList ObservableList of Facility.","lastModifiedDate":"2021-10-06"},{"lineNumber":23,"author":{"gitId":"Shruthi0310"},"content":"     */","lastModifiedDate":"2021-10-06"},{"lineNumber":24,"author":{"gitId":"Shruthi0310"},"content":"    public FacilityListPanel(ObservableList\u003cFacility\u003e facilityList) {","lastModifiedDate":"2021-10-05"},{"lineNumber":25,"author":{"gitId":"Shruthi0310"},"content":"        super(FXML);","lastModifiedDate":"2021-10-05"},{"lineNumber":26,"author":{"gitId":"Shruthi0310"},"content":"        facilityListView.setItems(facilityList);","lastModifiedDate":"2021-10-05"},{"lineNumber":27,"author":{"gitId":"Shruthi0310"},"content":"        facilityListView.setCellFactory(listView -\u003e new FacilityListViewCell());","lastModifiedDate":"2021-10-05"},{"lineNumber":28,"author":{"gitId":"Shruthi0310"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":29,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":30,"author":{"gitId":"Shruthi0310"},"content":"    /**","lastModifiedDate":"2021-10-06"},{"lineNumber":31,"author":{"gitId":"Shruthi0310"},"content":"     * Represents a custom ListCell that displays graphics of Facility","lastModifiedDate":"2021-10-06"},{"lineNumber":32,"author":{"gitId":"Shruthi0310"},"content":"     * using a FacilityListCard.","lastModifiedDate":"2021-10-06"},{"lineNumber":33,"author":{"gitId":"Shruthi0310"},"content":"     */","lastModifiedDate":"2021-10-06"},{"lineNumber":34,"author":{"gitId":"Shruthi0310"},"content":"    class FacilityListViewCell extends ListCell\u003cFacility\u003e {","lastModifiedDate":"2021-10-05"},{"lineNumber":35,"author":{"gitId":"Shruthi0310"},"content":"        @Override","lastModifiedDate":"2021-10-05"},{"lineNumber":36,"author":{"gitId":"Shruthi0310"},"content":"        protected void updateItem(Facility facility, boolean isEmpty) {","lastModifiedDate":"2021-10-05"},{"lineNumber":37,"author":{"gitId":"Shruthi0310"},"content":"            super.updateItem(facility, isEmpty);","lastModifiedDate":"2021-10-05"},{"lineNumber":38,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":39,"author":{"gitId":"Shruthi0310"},"content":"            if (isEmpty || facility \u003d\u003d null) {","lastModifiedDate":"2021-10-05"},{"lineNumber":40,"author":{"gitId":"Shruthi0310"},"content":"                setGraphic(null);","lastModifiedDate":"2021-10-05"},{"lineNumber":41,"author":{"gitId":"Shruthi0310"},"content":"                setText(null);","lastModifiedDate":"2021-10-05"},{"lineNumber":42,"author":{"gitId":"Shruthi0310"},"content":"            } else {","lastModifiedDate":"2021-10-05"},{"lineNumber":43,"author":{"gitId":"Shruthi0310"},"content":"                setGraphic(new FacilityListCard(facility, getIndex() + 1).getRoot());","lastModifiedDate":"2021-10-05"},{"lineNumber":44,"author":{"gitId":"Shruthi0310"},"content":"            }","lastModifiedDate":"2021-10-05"},{"lineNumber":45,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":46,"author":{"gitId":"Shruthi0310"},"content":"        }","lastModifiedDate":"2021-10-05"},{"lineNumber":47,"author":{"gitId":"Shruthi0310"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":48,"author":{"gitId":"Shruthi0310"},"content":"}","lastModifiedDate":"2021-10-05"}],"authorContributionMap":{"Shruthi0310":48}},{"path":"src/main/java/seedu/address/ui/HelpWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-12-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2019-08-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2019-08-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.input.Clipboard;","lastModifiedDate":"2019-08-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.input.ClipboardContent;","lastModifiedDate":"2019-08-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Controller for a help page","lastModifiedDate":"2016-08-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class HelpWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-12-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":18,"author":{"gitId":"Moley456"},"content":"    public static final String USERGUIDE_URL \u003d \"https://ay2122s1-cs2103t-w12-1.github.io/tp/UserGuide.html\";","lastModifiedDate":"2021-10-11"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String HELP_MESSAGE \u003d \"Refer to the user guide: \" + USERGUIDE_URL;","lastModifiedDate":"2019-08-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(HelpWindow.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"HelpWindow.fxml\";","lastModifiedDate":"2016-09-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-12-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private Button copyButton;","lastModifiedDate":"2019-08-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-08-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2019-08-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private Label helpMessage;","lastModifiedDate":"2019-08-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-12-01"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Creates a new HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-12-01"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * @param root Stage to use as the root of the HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-12-01"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public HelpWindow(Stage root) {","lastModifiedDate":"2017-12-01"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        super(FXML, root);","lastModifiedDate":"2017-12-01"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        helpMessage.setText(HELP_MESSAGE);","lastModifiedDate":"2019-08-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-12-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * Creates a new HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-12-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public HelpWindow() {","lastModifiedDate":"2017-12-01"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        this(new Stage());","lastModifiedDate":"2017-12-01"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-01"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-01"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Shows the help window.","lastModifiedDate":"2017-08-16"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * @throws IllegalStateException","lastModifiedDate":"2017-08-16"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * \u003cul\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     *     \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     *         if this method is called on a thread other than the JavaFX Application Thread.","lastModifiedDate":"2017-08-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     *     \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     *     \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     *         if this method is called during animation or layout processing.","lastModifiedDate":"2017-08-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     *     \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     *     \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     *         if this method is called on the primary stage.","lastModifiedDate":"2017-08-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     *     \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     *     \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     *         if {@code dialogStage} is already showing.","lastModifiedDate":"2017-08-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     *     \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * \u003c/ul\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void show() {","lastModifiedDate":"2016-08-18"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        logger.fine(\"Showing help page about the application.\");","lastModifiedDate":"2016-12-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        getRoot().show();","lastModifiedDate":"2018-02-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        getRoot().centerOnScreen();","lastModifiedDate":"2019-08-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-15"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * Returns true if the help window is currently being shown.","lastModifiedDate":"2018-03-15"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-15"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public boolean isShowing() {","lastModifiedDate":"2018-03-15"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        return getRoot().isShowing();","lastModifiedDate":"2018-03-15"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-15"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Hides the help window.","lastModifiedDate":"2018-12-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void hide() {","lastModifiedDate":"2018-12-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        getRoot().hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * Focuses on the help window.","lastModifiedDate":"2018-03-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public void focus() {","lastModifiedDate":"2018-03-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        getRoot().requestFocus();","lastModifiedDate":"2018-03-15"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-15"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-08-19"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2019-08-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * Copies the URL to the user guide to the clipboard.","lastModifiedDate":"2019-08-19"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2019-08-19"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2019-08-19"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    private void copyUrl() {","lastModifiedDate":"2019-08-19"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        final Clipboard clipboard \u003d Clipboard.getSystemClipboard();","lastModifiedDate":"2019-08-19"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        final ClipboardContent url \u003d new ClipboardContent();","lastModifiedDate":"2019-08-19"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        url.putString(USERGUIDE_URL);","lastModifiedDate":"2019-08-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        clipboard.setContent(url);","lastModifiedDate":"2019-08-19"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-08-19"},{"lineNumber":102,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"Moley456":1,"-":101}},{"path":"src/main/java/seedu/address/ui/MainWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-06-16"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.event.ActionEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-08-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.MenuItem;","lastModifiedDate":"2016-08-26"},{"lineNumber":8,"author":{"gitId":"YoYoCiti"},"content":"import javafx.scene.control.TabPane;","lastModifiedDate":"2021-10-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextInputControl;","lastModifiedDate":"2016-12-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyCombination;","lastModifiedDate":"2016-08-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import javafx.scene.layout.StackPane;","lastModifiedDate":"2017-05-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2016-09-28"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2017-06-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.Logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * The Main Window. Provides the basic application layout containing","lastModifiedDate":"2016-08-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * a menu bar and space where other JavaFX elements can be placed.","lastModifiedDate":"2016-08-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class MainWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-11-29"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"MainWindow.fxml\";","lastModifiedDate":"2016-08-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(getClass());","lastModifiedDate":"2018-08-14"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private Stage primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    // Independent Ui parts residing in this Ui container","lastModifiedDate":"2016-08-18"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private PersonListPanel personListPanel;","lastModifiedDate":"2016-08-18"},{"lineNumber":36,"author":{"gitId":"Shruthi0310"},"content":"    private FacilityListPanel facilityListPanel;","lastModifiedDate":"2021-10-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private ResultDisplay resultDisplay;","lastModifiedDate":"2018-12-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private HelpWindow helpWindow;","lastModifiedDate":"2018-03-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private StackPane commandBoxPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    private MenuItem helpMenuItem;","lastModifiedDate":"2016-08-18"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    private StackPane personListPanelPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    private StackPane resultDisplayPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    private StackPane statusbarPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":55,"author":{"gitId":"Shruthi0310"},"content":"    @FXML","lastModifiedDate":"2021-10-05"},{"lineNumber":56,"author":{"gitId":"Shruthi0310"},"content":"    private StackPane facilityListPanelPlaceholder;","lastModifiedDate":"2021-10-05"},{"lineNumber":57,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":58,"author":{"gitId":"YoYoCiti"},"content":"    @FXML","lastModifiedDate":"2021-10-24"},{"lineNumber":59,"author":{"gitId":"YoYoCiti"},"content":"    private TabPane tabsPlaceholder;","lastModifiedDate":"2021-10-24"},{"lineNumber":60,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * Creates a {@code MainWindow} with the given {@code Stage} and {@code Logic}.","lastModifiedDate":"2020-05-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public MainWindow(Stage primaryStage, Logic logic) {","lastModifiedDate":"2018-12-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        super(FXML, primaryStage);","lastModifiedDate":"2017-11-29"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // Set dependencies","lastModifiedDate":"2016-09-21"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        this.primaryStage \u003d primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // Configure the UI","lastModifiedDate":"2016-09-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        setWindowDefaultSize(logic.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        setAccelerators();","lastModifiedDate":"2016-09-21"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        helpWindow \u003d new HelpWindow();","lastModifiedDate":"2018-03-15"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public Stage getPrimaryStage() {","lastModifiedDate":"2016-12-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        return primaryStage;","lastModifiedDate":"2016-12-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    private void setAccelerators() {","lastModifiedDate":"2016-09-21"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        setAccelerator(helpMenuItem, KeyCombination.valueOf(\"F1\"));","lastModifiedDate":"2016-12-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-18"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     * Sets the accelerator of a MenuItem.","lastModifiedDate":"2016-12-18"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     * @param keyCombination the KeyCombination value of the accelerator","lastModifiedDate":"2016-12-18"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-18"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    private void setAccelerator(MenuItem menuItem, KeyCombination keyCombination) {","lastModifiedDate":"2016-12-18"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        menuItem.setAccelerator(keyCombination);","lastModifiedDate":"2016-12-18"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-12-18"},{"lineNumber":95,"author":{"gitId":"-"},"content":"         * TODO: the code below can be removed once the bug reported here","lastModifiedDate":"2016-12-18"},{"lineNumber":96,"author":{"gitId":"-"},"content":"         * https://bugs.openjdk.java.net/browse/JDK-8131666","lastModifiedDate":"2016-12-18"},{"lineNumber":97,"author":{"gitId":"-"},"content":"         * is fixed in later version of SDK.","lastModifiedDate":"2016-12-18"},{"lineNumber":98,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":99,"author":{"gitId":"-"},"content":"         * According to the bug report, TextInputControl (TextField, TextArea) will","lastModifiedDate":"2016-12-18"},{"lineNumber":100,"author":{"gitId":"-"},"content":"         * consume function-key events. Because CommandBox contains a TextField, and","lastModifiedDate":"2016-12-18"},{"lineNumber":101,"author":{"gitId":"-"},"content":"         * ResultDisplay contains a TextArea, thus some accelerators (e.g F1) will","lastModifiedDate":"2016-12-18"},{"lineNumber":102,"author":{"gitId":"-"},"content":"         * not work when the focus is in them because the key event is consumed by","lastModifiedDate":"2016-12-18"},{"lineNumber":103,"author":{"gitId":"-"},"content":"         * the TextInputControl(s).","lastModifiedDate":"2016-12-18"},{"lineNumber":104,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":105,"author":{"gitId":"-"},"content":"         * For now, we add following event filter to capture such key events and open","lastModifiedDate":"2016-12-18"},{"lineNumber":106,"author":{"gitId":"-"},"content":"         * help window purposely so to support accelerators even when focus is","lastModifiedDate":"2016-12-18"},{"lineNumber":107,"author":{"gitId":"-"},"content":"         * in CommandBox or ResultDisplay.","lastModifiedDate":"2016-12-18"},{"lineNumber":108,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-18"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        getRoot().addEventFilter(KeyEvent.KEY_PRESSED, event -\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":110,"author":{"gitId":"-"},"content":"            if (event.getTarget() instanceof TextInputControl \u0026\u0026 keyCombination.match(event)) {","lastModifiedDate":"2016-12-18"},{"lineNumber":111,"author":{"gitId":"-"},"content":"                menuItem.getOnAction().handle(new ActionEvent());","lastModifiedDate":"2016-12-18"},{"lineNumber":112,"author":{"gitId":"-"},"content":"                event.consume();","lastModifiedDate":"2016-12-18"},{"lineNumber":113,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-12-18"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        });","lastModifiedDate":"2016-12-18"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":118,"author":{"gitId":"-"},"content":"     * Fills up all the placeholders of this window.","lastModifiedDate":"2017-08-16"},{"lineNumber":119,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    void fillInnerParts() {","lastModifiedDate":"2016-09-21"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        personListPanel \u003d new PersonListPanel(logic.getFilteredPersonList());","lastModifiedDate":"2019-01-25"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        personListPanelPlaceholder.getChildren().add(personListPanel.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":124,"author":{"gitId":"Shruthi0310"},"content":"        facilityListPanel \u003d new FacilityListPanel(logic.getFilteredFacilityList());","lastModifiedDate":"2021-10-05"},{"lineNumber":125,"author":{"gitId":"Shruthi0310"},"content":"        facilityListPanelPlaceholder.getChildren().add(facilityListPanel.getRoot());","lastModifiedDate":"2021-10-05"},{"lineNumber":126,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        resultDisplay \u003d new ResultDisplay();","lastModifiedDate":"2018-12-09"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        resultDisplayPlaceholder.getChildren().add(resultDisplay.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        StatusBarFooter statusBarFooter \u003d new StatusBarFooter(logic.getAddressBookFilePath());","lastModifiedDate":"2019-01-25"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        statusbarPlaceholder.getChildren().add(statusBarFooter.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        CommandBox commandBox \u003d new CommandBox(this::executeCommand);","lastModifiedDate":"2019-01-25"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        commandBoxPlaceholder.getChildren().add(commandBox.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":138,"author":{"gitId":"-"},"content":"     * Sets the default size based on {@code guiSettings}.","lastModifiedDate":"2018-11-27"},{"lineNumber":139,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    private void setWindowDefaultSize(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        primaryStage.setHeight(guiSettings.getWindowHeight());","lastModifiedDate":"2018-11-27"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        primaryStage.setWidth(guiSettings.getWindowWidth());","lastModifiedDate":"2018-11-27"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        if (guiSettings.getWindowCoordinates() !\u003d null) {","lastModifiedDate":"2018-11-27"},{"lineNumber":144,"author":{"gitId":"-"},"content":"            primaryStage.setX(guiSettings.getWindowCoordinates().getX());","lastModifiedDate":"2018-11-27"},{"lineNumber":145,"author":{"gitId":"-"},"content":"            primaryStage.setY(guiSettings.getWindowCoordinates().getY());","lastModifiedDate":"2018-11-27"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-18"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":150,"author":{"gitId":"-"},"content":"     * Opens the help window or focuses on it if it\u0027s already opened.","lastModifiedDate":"2018-03-15"},{"lineNumber":151,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    public void handleHelp() {","lastModifiedDate":"2016-08-31"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        if (!helpWindow.isShowing()) {","lastModifiedDate":"2018-03-15"},{"lineNumber":155,"author":{"gitId":"-"},"content":"            helpWindow.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        } else {","lastModifiedDate":"2018-03-15"},{"lineNumber":157,"author":{"gitId":"-"},"content":"            helpWindow.focus();","lastModifiedDate":"2018-03-15"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-03-15"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":161,"author":{"gitId":"YoYoCiti"},"content":"    /**","lastModifiedDate":"2021-10-24"},{"lineNumber":162,"author":{"gitId":"YoYoCiti"},"content":"     * Selects the member tab.","lastModifiedDate":"2021-10-24"},{"lineNumber":163,"author":{"gitId":"YoYoCiti"},"content":"     */","lastModifiedDate":"2021-10-24"},{"lineNumber":164,"author":{"gitId":"YoYoCiti"},"content":"    private void handleShowMemberTab() {","lastModifiedDate":"2021-10-24"},{"lineNumber":165,"author":{"gitId":"YoYoCiti"},"content":"        tabsPlaceholder.getSelectionModel().select(0);","lastModifiedDate":"2021-10-24"},{"lineNumber":166,"author":{"gitId":"YoYoCiti"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":167,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":168,"author":{"gitId":"YoYoCiti"},"content":"    /**","lastModifiedDate":"2021-10-24"},{"lineNumber":169,"author":{"gitId":"YoYoCiti"},"content":"     * Selects the facility tab.","lastModifiedDate":"2021-10-24"},{"lineNumber":170,"author":{"gitId":"YoYoCiti"},"content":"     */","lastModifiedDate":"2021-10-24"},{"lineNumber":171,"author":{"gitId":"YoYoCiti"},"content":"    private void handleShowFacilityTab() {","lastModifiedDate":"2021-10-24"},{"lineNumber":172,"author":{"gitId":"YoYoCiti"},"content":"        tabsPlaceholder.getSelectionModel().select(1);","lastModifiedDate":"2021-10-24"},{"lineNumber":173,"author":{"gitId":"YoYoCiti"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":174,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    void show() {","lastModifiedDate":"2016-10-15"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        primaryStage.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":180,"author":{"gitId":"-"},"content":"     * Closes the application.","lastModifiedDate":"2016-08-18"},{"lineNumber":181,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    private void handleExit() {","lastModifiedDate":"2016-08-18"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(primaryStage.getWidth(), primaryStage.getHeight(),","lastModifiedDate":"2018-12-08"},{"lineNumber":185,"author":{"gitId":"-"},"content":"                (int) primaryStage.getX(), (int) primaryStage.getY());","lastModifiedDate":"2018-12-08"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        logic.setGuiSettings(guiSettings);","lastModifiedDate":"2018-12-08"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        helpWindow.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":188,"author":{"gitId":"-"},"content":"        primaryStage.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":189,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-25"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    public PersonListPanel getPersonListPanel() {","lastModifiedDate":"2016-08-25"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        return personListPanel;","lastModifiedDate":"2018-08-14"},{"lineNumber":193,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-25"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":195,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":196,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2018-12-09"},{"lineNumber":197,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-09"},{"lineNumber":198,"author":{"gitId":"-"},"content":"     * @see seedu.address.logic.Logic#execute(String)","lastModifiedDate":"2018-12-09"},{"lineNumber":199,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":200,"author":{"gitId":"-"},"content":"    private CommandResult executeCommand(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2018-12-09"},{"lineNumber":201,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":202,"author":{"gitId":"-"},"content":"            CommandResult commandResult \u003d logic.execute(commandText);","lastModifiedDate":"2018-12-09"},{"lineNumber":203,"author":{"gitId":"-"},"content":"            logger.info(\"Result: \" + commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":204,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":206,"author":{"gitId":"YoYoCiti"},"content":"            if (commandResult.isShowFacilityTab()) {","lastModifiedDate":"2021-10-24"},{"lineNumber":207,"author":{"gitId":"YoYoCiti"},"content":"                handleShowFacilityTab();","lastModifiedDate":"2021-10-24"},{"lineNumber":208,"author":{"gitId":"YoYoCiti"},"content":"            }","lastModifiedDate":"2021-10-24"},{"lineNumber":209,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":210,"author":{"gitId":"YoYoCiti"},"content":"            if (commandResult.isShowMemberTab()) {","lastModifiedDate":"2021-10-24"},{"lineNumber":211,"author":{"gitId":"YoYoCiti"},"content":"                handleShowMemberTab();","lastModifiedDate":"2021-10-24"},{"lineNumber":212,"author":{"gitId":"YoYoCiti"},"content":"            }","lastModifiedDate":"2021-10-24"},{"lineNumber":213,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":214,"author":{"gitId":"-"},"content":"            if (commandResult.isShowHelp()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":215,"author":{"gitId":"-"},"content":"                handleHelp();","lastModifiedDate":"2018-12-09"},{"lineNumber":216,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":218,"author":{"gitId":"-"},"content":"            if (commandResult.isExit()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":219,"author":{"gitId":"-"},"content":"                handleExit();","lastModifiedDate":"2018-12-09"},{"lineNumber":220,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":221,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":222,"author":{"gitId":"-"},"content":"            return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":223,"author":{"gitId":"-"},"content":"        } catch (CommandException | ParseException e) {","lastModifiedDate":"2018-12-09"},{"lineNumber":224,"author":{"gitId":"-"},"content":"            logger.info(\"Invalid command: \" + commandText);","lastModifiedDate":"2018-12-09"},{"lineNumber":225,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(e.getMessage());","lastModifiedDate":"2018-12-09"},{"lineNumber":226,"author":{"gitId":"-"},"content":"            throw e;","lastModifiedDate":"2018-12-09"},{"lineNumber":227,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":228,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":229,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"YoYoCiti":26,"Shruthi0310":7,"-":196}},{"path":"src/main/java/seedu/address/ui/PersonCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Comparator;","lastModifiedDate":"2021-10-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-09-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2016-09-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.layout.FlowPane;","lastModifiedDate":"2021-10-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2016-09-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * An UI component that displays information of a {@code Person}.","lastModifiedDate":"2017-08-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class PersonCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"PersonListCard.fxml\";","lastModifiedDate":"2016-09-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX.","lastModifiedDate":"2017-03-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","lastModifiedDate":"2017-03-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2017-03-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe issue on AddressBook level 4\u003c/a\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public final Person person;","lastModifiedDate":"2018-01-10"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private HBox cardPane;","lastModifiedDate":"2016-09-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private Label name;","lastModifiedDate":"2016-09-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private Label id;","lastModifiedDate":"2016-09-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private Label phone;","lastModifiedDate":"2016-09-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":38,"author":{"gitId":"felix-ong"},"content":"    private Label availability;","lastModifiedDate":"2021-10-10"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2021-10-21"},{"lineNumber":40,"author":{"gitId":"Shruthi0310"},"content":"    private Label todayAttendance;","lastModifiedDate":"2021-10-21"},{"lineNumber":41,"author":{"gitId":"Shruthi0310"},"content":"    @FXML","lastModifiedDate":"2021-10-21"},{"lineNumber":42,"author":{"gitId":"Shruthi0310"},"content":"    private Label totalAttendance;","lastModifiedDate":"2021-10-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2021-10-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    private FlowPane tags;","lastModifiedDate":"2021-10-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Creates a {@code PersonCode} with the given {@code Person} and index to display.","lastModifiedDate":"2020-05-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public PersonCard(Person person, int displayedIndex) {","lastModifiedDate":"2018-01-10"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        this.person \u003d person;","lastModifiedDate":"2017-07-12"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        id.setText(displayedIndex + \". \");","lastModifiedDate":"2016-09-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        name.setText(person.getName().fullName);","lastModifiedDate":"2017-12-20"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        phone.setText(person.getPhone().value);","lastModifiedDate":"2017-12-20"},{"lineNumber":56,"author":{"gitId":"Shruthi0310"},"content":"        todayAttendance.setText(person.getTodayAttendance().toString());","lastModifiedDate":"2021-10-21"},{"lineNumber":57,"author":{"gitId":"Shruthi0310"},"content":"        totalAttendance.setText(person.getTotalAttendance().toString());","lastModifiedDate":"2021-10-21"},{"lineNumber":58,"author":{"gitId":"felix-ong"},"content":"        availability.setText(person.getAvailability().toString());","lastModifiedDate":"2021-10-15"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        person.getTags().stream()","lastModifiedDate":"2021-10-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"                .sorted(Comparator.comparing(tag -\u003e tag.tagName))","lastModifiedDate":"2021-10-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"                .forEach(tag -\u003e tags.getChildren().add(new Label(tag.tagName)));","lastModifiedDate":"2021-10-21"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-07-14"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-07-14"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-07-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2017-07-14"},{"lineNumber":68,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-07-14"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-07-14"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-07-14"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        if (!(other instanceof PersonCard)) {","lastModifiedDate":"2017-07-14"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-07-14"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-07-14"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-07-14"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        PersonCard card \u003d (PersonCard) other;","lastModifiedDate":"2017-07-14"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        return id.getText().equals(card.id.getText())","lastModifiedDate":"2017-07-14"},{"lineNumber":79,"author":{"gitId":"-"},"content":"                \u0026\u0026 person.equals(card.person);","lastModifiedDate":"2017-07-14"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-14"},{"lineNumber":81,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"Shruthi0310":5,"-":74,"felix-ong":2}},{"path":"src/main/resources/view/DarkTheme.css","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":".background {","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    background-color: #383838; /* Used in the default.html file */","lastModifiedDate":"2017-03-02"},{"lineNumber":4,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":".label {","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Open Sans Semibold\";","lastModifiedDate":"2021-08-28"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    -fx-text-fill: #555555;","lastModifiedDate":"2016-08-15"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.9;","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":".label-bright {","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Open Sans Semibold\";","lastModifiedDate":"2021-08-28"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":".label-header {","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    -fx-font-size: 32pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Open Sans Light\";","lastModifiedDate":"2021-08-28"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":".text-field {","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    -fx-font-size: 12pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Open Sans Semibold\";","lastModifiedDate":"2021-08-28"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":".tab-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":".tab-pane .tab-header-area {","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    -fx-min-height: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    -fx-max-height: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":".table-view {","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    -fx-base: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    -fx-control-inner-background: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    -fx-table-cell-border-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    -fx-table-header-border-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    -fx-padding: 5;","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":".table-view .column-header-background {","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":".table-view .column-header, .table-view .filler {","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    -fx-size: 35;","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    -fx-border-width: 0 0 1 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    -fx-border-color:","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        transparent","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        transparent","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        derive(-fx-base, 80%)","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    -fx-border-insets: 0 10 1 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":".table-view .column-header .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    -fx-font-size: 20pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Open Sans Light\";","lastModifiedDate":"2021-08-28"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    -fx-alignment: center-left;","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":".table-view:focused .table-row-cell:filled:focused:selected {","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    -fx-background-color: -fx-focus-color;","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":".split-pane:horizontal .split-pane-divider {","lastModifiedDate":"2016-08-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2017-03-02"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    -fx-border-color: transparent transparent transparent #4d4d4d;","lastModifiedDate":"2017-03-02"},{"lineNumber":82,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":84,"author":{"gitId":"-"},"content":".split-pane {","lastModifiedDate":"2016-08-15"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    -fx-border-radius: 1;","lastModifiedDate":"2016-08-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2016-08-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":".list-view {","lastModifiedDate":"2017-03-02"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    -fx-padding: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2018-01-10"},{"lineNumber":94,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":96,"author":{"gitId":"-"},"content":".list-cell {","lastModifiedDate":"2016-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    -fx-label-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    -fx-graphic-text-gap : 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":".list-cell:filled:even {","lastModifiedDate":"2017-03-02"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    -fx-background-color: #3c3e3f;","lastModifiedDate":"2017-03-02"},{"lineNumber":104,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":106,"author":{"gitId":"-"},"content":".list-cell:filled:odd {","lastModifiedDate":"2017-03-02"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    -fx-background-color: #515658;","lastModifiedDate":"2017-03-02"},{"lineNumber":108,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":110,"author":{"gitId":"-"},"content":".list-cell:filled:selected {","lastModifiedDate":"2017-03-02"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    -fx-background-color: #424d5f;","lastModifiedDate":"2017-03-02"},{"lineNumber":112,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":114,"author":{"gitId":"-"},"content":".list-cell:filled:selected #cardPane {","lastModifiedDate":"2017-03-02"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    -fx-border-color: #3e7b91;","lastModifiedDate":"2017-03-02"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2017-03-02"},{"lineNumber":117,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":119,"author":{"gitId":"-"},"content":".list-cell .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2017-03-02"},{"lineNumber":121,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":".cell_big_label {","lastModifiedDate":"2016-08-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Open Sans Semibold\";","lastModifiedDate":"2021-08-28"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    -fx-font-size: 16px;","lastModifiedDate":"2016-08-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    -fx-text-fill: #010504;","lastModifiedDate":"2016-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":".cell_small_label {","lastModifiedDate":"2016-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Open Sans Regular\";","lastModifiedDate":"2021-08-28"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    -fx-font-size: 13px;","lastModifiedDate":"2017-03-02"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    -fx-text-fill: #010504;","lastModifiedDate":"2016-08-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":".stack-pane {","lastModifiedDate":"2018-04-01"},{"lineNumber":136,"author":{"gitId":"-"},"content":"     -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":137,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":".pane-with-border {","lastModifiedDate":"2017-05-15"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2017-05-09"},{"lineNumber":141,"author":{"gitId":"-"},"content":"     -fx-border-color: derive(#1d1d1d, 10%);","lastModifiedDate":"2017-05-09"},{"lineNumber":142,"author":{"gitId":"-"},"content":"     -fx-border-top-width: 1px;","lastModifiedDate":"2017-05-09"},{"lineNumber":143,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-09"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":145,"author":{"gitId":"-"},"content":".status-bar {","lastModifiedDate":"2016-08-08"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2018-12-08"},{"lineNumber":147,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":149,"author":{"gitId":"-"},"content":".result-display {","lastModifiedDate":"2016-09-14"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2017-03-02"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Open Sans Light\";","lastModifiedDate":"2021-08-28"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    -fx-font-size: 13pt;","lastModifiedDate":"2017-03-02"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2017-03-02"},{"lineNumber":154,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":156,"author":{"gitId":"-"},"content":".result-display .label {","lastModifiedDate":"2016-09-14"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    -fx-text-fill: black !important;","lastModifiedDate":"2016-09-14"},{"lineNumber":158,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":160,"author":{"gitId":"-"},"content":".status-bar .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Open Sans Light\";","lastModifiedDate":"2021-08-28"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    -fx-padding: 4px;","lastModifiedDate":"2018-12-08"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    -fx-pref-height: 30px;","lastModifiedDate":"2018-12-08"},{"lineNumber":165,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":167,"author":{"gitId":"-"},"content":".status-bar-with-border {","lastModifiedDate":"2016-08-08"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    -fx-border-color: derive(#1d1d1d, 25%);","lastModifiedDate":"2016-08-15"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    -fx-border-width: 1px;","lastModifiedDate":"2016-08-08"},{"lineNumber":171,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":173,"author":{"gitId":"-"},"content":".status-bar-with-border .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":175,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":177,"author":{"gitId":"-"},"content":".grid-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    -fx-border-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    -fx-border-width: 1px;","lastModifiedDate":"2016-08-08"},{"lineNumber":181,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":183,"author":{"gitId":"-"},"content":".grid-pane .stack-pane {","lastModifiedDate":"2018-04-01"},{"lineNumber":184,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":185,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":187,"author":{"gitId":"-"},"content":".context-menu {","lastModifiedDate":"2016-08-08"},{"lineNumber":188,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 50%);","lastModifiedDate":"2016-08-15"},{"lineNumber":189,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":191,"author":{"gitId":"-"},"content":".context-menu .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":192,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":193,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":195,"author":{"gitId":"-"},"content":".menu-bar {","lastModifiedDate":"2016-08-08"},{"lineNumber":196,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":197,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":198,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":199,"author":{"gitId":"-"},"content":".menu-bar .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":200,"author":{"gitId":"-"},"content":"    -fx-font-size: 14pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":201,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Open Sans Light\";","lastModifiedDate":"2021-08-28"},{"lineNumber":202,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.9;","lastModifiedDate":"2016-08-08"},{"lineNumber":204,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":206,"author":{"gitId":"-"},"content":".menu .left-container {","lastModifiedDate":"2016-08-08"},{"lineNumber":207,"author":{"gitId":"-"},"content":"    -fx-background-color: black;","lastModifiedDate":"2016-08-08"},{"lineNumber":208,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":210,"author":{"gitId":"-"},"content":"/*","lastModifiedDate":"2016-08-08"},{"lineNumber":211,"author":{"gitId":"-"},"content":" * Metro style Push Button","lastModifiedDate":"2016-08-08"},{"lineNumber":212,"author":{"gitId":"-"},"content":" * Author: Pedro Duque Vieira","lastModifiedDate":"2016-08-08"},{"lineNumber":213,"author":{"gitId":"-"},"content":" * http://pixelduke.wordpress.com/2012/10/23/jmetro-windows-8-controls-on-java/","lastModifiedDate":"2016-08-08"},{"lineNumber":214,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":215,"author":{"gitId":"-"},"content":".button {","lastModifiedDate":"2016-08-08"},{"lineNumber":216,"author":{"gitId":"-"},"content":"    -fx-padding: 5 22 5 22;","lastModifiedDate":"2016-08-08"},{"lineNumber":217,"author":{"gitId":"-"},"content":"    -fx-border-color: #e2e2e2;","lastModifiedDate":"2016-08-08"},{"lineNumber":218,"author":{"gitId":"-"},"content":"    -fx-border-width: 2;","lastModifiedDate":"2016-08-08"},{"lineNumber":219,"author":{"gitId":"-"},"content":"    -fx-background-radius: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":220,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":221,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Open Sans Regular\";","lastModifiedDate":"2021-08-28"},{"lineNumber":222,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":223,"author":{"gitId":"-"},"content":"    -fx-text-fill: #d8d8d8;","lastModifiedDate":"2016-08-08"},{"lineNumber":224,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0 0 0 0, 0, 1, 2;","lastModifiedDate":"2016-08-08"},{"lineNumber":225,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":227,"author":{"gitId":"-"},"content":".button:hover {","lastModifiedDate":"2016-08-08"},{"lineNumber":228,"author":{"gitId":"-"},"content":"    -fx-background-color: #3a3a3a;","lastModifiedDate":"2016-08-08"},{"lineNumber":229,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":230,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":231,"author":{"gitId":"-"},"content":".button:pressed, .button:default:hover:pressed {","lastModifiedDate":"2016-08-08"},{"lineNumber":232,"author":{"gitId":"-"},"content":"  -fx-background-color: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":233,"author":{"gitId":"-"},"content":"  -fx-text-fill: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":234,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":236,"author":{"gitId":"-"},"content":".button:focused {","lastModifiedDate":"2016-08-08"},{"lineNumber":237,"author":{"gitId":"-"},"content":"    -fx-border-color: white, white;","lastModifiedDate":"2016-08-08"},{"lineNumber":238,"author":{"gitId":"-"},"content":"    -fx-border-width: 1, 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":239,"author":{"gitId":"-"},"content":"    -fx-border-style: solid, segments(1, 1);","lastModifiedDate":"2016-08-08"},{"lineNumber":240,"author":{"gitId":"-"},"content":"    -fx-border-radius: 0, 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":241,"author":{"gitId":"-"},"content":"    -fx-border-insets: 1 1 1 1, 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":242,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":243,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":244,"author":{"gitId":"-"},"content":".button:disabled, .button:default:disabled {","lastModifiedDate":"2016-08-08"},{"lineNumber":245,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.4;","lastModifiedDate":"2016-08-08"},{"lineNumber":246,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":247,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":248,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":249,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":250,"author":{"gitId":"-"},"content":".button:default {","lastModifiedDate":"2016-08-08"},{"lineNumber":251,"author":{"gitId":"-"},"content":"    -fx-background-color: -fx-focus-color;","lastModifiedDate":"2016-08-08"},{"lineNumber":252,"author":{"gitId":"-"},"content":"    -fx-text-fill: #ffffff;","lastModifiedDate":"2016-08-08"},{"lineNumber":253,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":254,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":255,"author":{"gitId":"-"},"content":".button:default:hover {","lastModifiedDate":"2016-08-08"},{"lineNumber":256,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(-fx-focus-color, 30%);","lastModifiedDate":"2016-08-08"},{"lineNumber":257,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":258,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":259,"author":{"gitId":"-"},"content":".dialog-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":260,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":261,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":262,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":263,"author":{"gitId":"-"},"content":".dialog-pane \u003e *.button-bar \u003e *.container {","lastModifiedDate":"2016-08-08"},{"lineNumber":264,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":265,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":266,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":267,"author":{"gitId":"-"},"content":".dialog-pane \u003e *.label.content {","lastModifiedDate":"2016-08-08"},{"lineNumber":268,"author":{"gitId":"-"},"content":"    -fx-font-size: 14px;","lastModifiedDate":"2016-08-08"},{"lineNumber":269,"author":{"gitId":"-"},"content":"    -fx-font-weight: bold;","lastModifiedDate":"2016-08-08"},{"lineNumber":270,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":271,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":272,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":273,"author":{"gitId":"-"},"content":".dialog-pane:header *.header-panel {","lastModifiedDate":"2016-08-08"},{"lineNumber":274,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 25%);","lastModifiedDate":"2016-08-15"},{"lineNumber":275,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":276,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":277,"author":{"gitId":"-"},"content":".dialog-pane:header *.header-panel *.label {","lastModifiedDate":"2016-08-08"},{"lineNumber":278,"author":{"gitId":"-"},"content":"    -fx-font-size: 18px;","lastModifiedDate":"2016-08-08"},{"lineNumber":279,"author":{"gitId":"-"},"content":"    -fx-font-style: italic;","lastModifiedDate":"2016-08-08"},{"lineNumber":280,"author":{"gitId":"-"},"content":"    -fx-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":281,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":282,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":283,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":284,"author":{"gitId":"Moley456"},"content":".tab-pane {","lastModifiedDate":"2021-10-12"},{"lineNumber":285,"author":{"gitId":"Moley456"},"content":"    -fx-tab-min-width:90px;","lastModifiedDate":"2021-10-12"},{"lineNumber":286,"author":{"gitId":"Moley456"},"content":"    -fx-tab-min-height:30px;","lastModifiedDate":"2021-10-12"},{"lineNumber":287,"author":{"gitId":"Moley456"},"content":"}","lastModifiedDate":"2021-10-12"},{"lineNumber":288,"author":{"gitId":"Moley456"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":289,"author":{"gitId":"Moley456"},"content":".tab {","lastModifiedDate":"2021-10-12"},{"lineNumber":290,"author":{"gitId":"Moley456"},"content":"    -fx-font-size: 15;","lastModifiedDate":"2021-10-12"},{"lineNumber":291,"author":{"gitId":"Moley456"},"content":"    -fx-background-color: #0492c2;","lastModifiedDate":"2021-10-12"},{"lineNumber":292,"author":{"gitId":"Moley456"},"content":"}","lastModifiedDate":"2021-10-12"},{"lineNumber":293,"author":{"gitId":"Moley456"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":294,"author":{"gitId":"Moley456"},"content":".tab: selected {","lastModifiedDate":"2021-10-12"},{"lineNumber":295,"author":{"gitId":"Moley456"},"content":"    -fx-background-color: white;","lastModifiedDate":"2021-10-12"},{"lineNumber":296,"author":{"gitId":"Moley456"},"content":"}","lastModifiedDate":"2021-10-12"},{"lineNumber":297,"author":{"gitId":"Moley456"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":298,"author":{"gitId":"Moley456"},"content":".tab: selected .focus-indicator {","lastModifiedDate":"2021-10-12"},{"lineNumber":299,"author":{"gitId":"Moley456"},"content":"    -fx-border-color: transparent;","lastModifiedDate":"2021-10-12"},{"lineNumber":300,"author":{"gitId":"Moley456"},"content":"}","lastModifiedDate":"2021-10-12"},{"lineNumber":301,"author":{"gitId":"Moley456"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":302,"author":{"gitId":"Moley456"},"content":".tab-pane\u003e*.tab-header-area\u003e*.tab-header-background","lastModifiedDate":"2021-10-12"},{"lineNumber":303,"author":{"gitId":"Moley456"},"content":"{","lastModifiedDate":"2021-10-12"},{"lineNumber":304,"author":{"gitId":"Moley456"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":305,"author":{"gitId":"Moley456"},"content":"   -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2021-10-12"},{"lineNumber":306,"author":{"gitId":"Moley456"},"content":"}","lastModifiedDate":"2021-10-12"},{"lineNumber":307,"author":{"gitId":"Moley456"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":308,"author":{"gitId":"-"},"content":".scroll-bar {","lastModifiedDate":"2017-03-02"},{"lineNumber":309,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2017-03-02"},{"lineNumber":310,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":311,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":312,"author":{"gitId":"-"},"content":".scroll-bar .thumb {","lastModifiedDate":"2016-08-15"},{"lineNumber":313,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 50%);","lastModifiedDate":"2016-08-15"},{"lineNumber":314,"author":{"gitId":"-"},"content":"    -fx-background-insets: 3;","lastModifiedDate":"2016-08-15"},{"lineNumber":315,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":316,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":317,"author":{"gitId":"-"},"content":".scroll-bar .increment-button, .scroll-bar .decrement-button {","lastModifiedDate":"2016-08-15"},{"lineNumber":318,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-15"},{"lineNumber":319,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-15"},{"lineNumber":320,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":321,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":322,"author":{"gitId":"-"},"content":".scroll-bar .increment-arrow, .scroll-bar .decrement-arrow {","lastModifiedDate":"2016-08-15"},{"lineNumber":323,"author":{"gitId":"-"},"content":"    -fx-shape: \" \";","lastModifiedDate":"2016-08-15"},{"lineNumber":324,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"},{"lineNumber":325,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":326,"author":{"gitId":"-"},"content":".scroll-bar:vertical .increment-arrow, .scroll-bar:vertical .decrement-arrow {","lastModifiedDate":"2016-08-18"},{"lineNumber":327,"author":{"gitId":"-"},"content":"    -fx-padding: 1 8 1 8;","lastModifiedDate":"2016-08-15"},{"lineNumber":328,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":329,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":330,"author":{"gitId":"-"},"content":".scroll-bar:horizontal .increment-arrow, .scroll-bar:horizontal .decrement-arrow {","lastModifiedDate":"2016-08-18"},{"lineNumber":331,"author":{"gitId":"-"},"content":"    -fx-padding: 8 1 8 1;","lastModifiedDate":"2016-08-18"},{"lineNumber":332,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"},{"lineNumber":333,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":334,"author":{"gitId":"-"},"content":"#cardPane {","lastModifiedDate":"2016-08-08"},{"lineNumber":335,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":336,"author":{"gitId":"-"},"content":"    -fx-border-width: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":337,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":338,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":339,"author":{"gitId":"-"},"content":"#commandTypeLabel {","lastModifiedDate":"2016-08-08"},{"lineNumber":340,"author":{"gitId":"-"},"content":"    -fx-font-size: 11px;","lastModifiedDate":"2016-08-08"},{"lineNumber":341,"author":{"gitId":"-"},"content":"    -fx-text-fill: #F70D1A;","lastModifiedDate":"2016-08-08"},{"lineNumber":342,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":343,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":344,"author":{"gitId":"-"},"content":"#commandTextField {","lastModifiedDate":"2017-03-02"},{"lineNumber":345,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent #383838 transparent #383838;","lastModifiedDate":"2017-03-02"},{"lineNumber":346,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":347,"author":{"gitId":"-"},"content":"    -fx-border-color: #383838 #383838 #ffffff #383838;","lastModifiedDate":"2017-03-02"},{"lineNumber":348,"author":{"gitId":"-"},"content":"    -fx-border-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":349,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2017-03-02"},{"lineNumber":350,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Open Sans Light\";","lastModifiedDate":"2021-08-28"},{"lineNumber":351,"author":{"gitId":"-"},"content":"    -fx-font-size: 13pt;","lastModifiedDate":"2017-03-02"},{"lineNumber":352,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2017-03-02"},{"lineNumber":353,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":354,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":355,"author":{"gitId":"-"},"content":"#filterField, #personListPanel, #personWebpage {","lastModifiedDate":"2016-08-15"},{"lineNumber":356,"author":{"gitId":"-"},"content":"    -fx-effect: innershadow(gaussian, black, 10, 0, 0, 0);","lastModifiedDate":"2016-08-15"},{"lineNumber":357,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":358,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":359,"author":{"gitId":"-"},"content":"#resultDisplay .content {","lastModifiedDate":"2017-03-02"},{"lineNumber":360,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent, #383838, transparent, #383838;","lastModifiedDate":"2017-03-02"},{"lineNumber":361,"author":{"gitId":"-"},"content":"    -fx-background-radius: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":362,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":363,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":364,"author":{"gitId":"-"},"content":"#tags {","lastModifiedDate":"2016-12-18"},{"lineNumber":365,"author":{"gitId":"-"},"content":"    -fx-hgap: 7;","lastModifiedDate":"2016-12-18"},{"lineNumber":366,"author":{"gitId":"-"},"content":"    -fx-vgap: 3;","lastModifiedDate":"2016-12-18"},{"lineNumber":367,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-18"},{"lineNumber":368,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":369,"author":{"gitId":"-"},"content":"#tags .label {","lastModifiedDate":"2016-12-18"},{"lineNumber":370,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-12-18"},{"lineNumber":371,"author":{"gitId":"-"},"content":"    -fx-background-color: #3e7b91;","lastModifiedDate":"2017-03-02"},{"lineNumber":372,"author":{"gitId":"-"},"content":"    -fx-padding: 1 3 1 3;","lastModifiedDate":"2016-12-18"},{"lineNumber":373,"author":{"gitId":"-"},"content":"    -fx-border-radius: 2;","lastModifiedDate":"2016-12-18"},{"lineNumber":374,"author":{"gitId":"-"},"content":"    -fx-background-radius: 2;","lastModifiedDate":"2016-12-18"},{"lineNumber":375,"author":{"gitId":"-"},"content":"    -fx-font-size: 11;","lastModifiedDate":"2016-12-18"},{"lineNumber":376,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-18"}],"authorContributionMap":{"Moley456":24,"-":352}},{"path":"src/main/resources/view/FacilityListCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Shruthi0310"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-10-05"},{"lineNumber":2,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":3,"author":{"gitId":"Shruthi0310"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2021-10-05"},{"lineNumber":4,"author":{"gitId":"Shruthi0310"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2021-10-05"},{"lineNumber":5,"author":{"gitId":"Shruthi0310"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2021-10-05"},{"lineNumber":6,"author":{"gitId":"Shruthi0310"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2021-10-05"},{"lineNumber":7,"author":{"gitId":"Shruthi0310"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2021-10-05"},{"lineNumber":8,"author":{"gitId":"Shruthi0310"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2021-10-05"},{"lineNumber":9,"author":{"gitId":"Shruthi0310"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2021-10-05"},{"lineNumber":10,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":11,"author":{"gitId":"Shruthi0310"},"content":"\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-10-05"},{"lineNumber":12,"author":{"gitId":"Shruthi0310"},"content":"    \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2021-10-05"},{"lineNumber":13,"author":{"gitId":"Shruthi0310"},"content":"        \u003ccolumnConstraints\u003e","lastModifiedDate":"2021-10-05"},{"lineNumber":14,"author":{"gitId":"Shruthi0310"},"content":"            \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\" /\u003e","lastModifiedDate":"2021-10-05"},{"lineNumber":15,"author":{"gitId":"Shruthi0310"},"content":"        \u003c/columnConstraints\u003e","lastModifiedDate":"2021-10-05"},{"lineNumber":16,"author":{"gitId":"Shruthi0310"},"content":"        \u003cVBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"105\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2021-10-05"},{"lineNumber":17,"author":{"gitId":"Shruthi0310"},"content":"            \u003cpadding\u003e","lastModifiedDate":"2021-10-05"},{"lineNumber":18,"author":{"gitId":"Shruthi0310"},"content":"                \u003cInsets top\u003d\"5\" right\u003d\"5\" bottom\u003d\"5\" left\u003d\"15\" /\u003e","lastModifiedDate":"2021-10-05"},{"lineNumber":19,"author":{"gitId":"Shruthi0310"},"content":"            \u003c/padding\u003e","lastModifiedDate":"2021-10-05"},{"lineNumber":20,"author":{"gitId":"Shruthi0310"},"content":"            \u003cHBox spacing\u003d\"5\" alignment\u003d\"CENTER_LEFT\"\u003e","lastModifiedDate":"2021-10-05"},{"lineNumber":21,"author":{"gitId":"Shruthi0310"},"content":"                \u003cLabel fx:id\u003d\"listIndex\" styleClass\u003d\"cell_big_label\"\u003e","lastModifiedDate":"2021-10-05"},{"lineNumber":22,"author":{"gitId":"Shruthi0310"},"content":"                    \u003cminWidth\u003e","lastModifiedDate":"2021-10-05"},{"lineNumber":23,"author":{"gitId":"Shruthi0310"},"content":"                        \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2021-10-05"},{"lineNumber":24,"author":{"gitId":"Shruthi0310"},"content":"                        \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2021-10-05"},{"lineNumber":25,"author":{"gitId":"Shruthi0310"},"content":"                    \u003c/minWidth\u003e","lastModifiedDate":"2021-10-05"},{"lineNumber":26,"author":{"gitId":"Shruthi0310"},"content":"                \u003c/Label\u003e","lastModifiedDate":"2021-10-05"},{"lineNumber":27,"author":{"gitId":"Shruthi0310"},"content":"                \u003cLabel fx:id\u003d\"name\" text\u003d\"\\$name\" styleClass\u003d\"cell_big_label\" /\u003e","lastModifiedDate":"2021-10-05"},{"lineNumber":28,"author":{"gitId":"YoYoCiti"},"content":"                \u003cVBox.margin\u003e","lastModifiedDate":"2021-10-24"},{"lineNumber":29,"author":{"gitId":"YoYoCiti"},"content":"                    \u003cInsets top\u003d\"10.0\" /\u003e","lastModifiedDate":"2021-10-24"},{"lineNumber":30,"author":{"gitId":"YoYoCiti"},"content":"                \u003c/VBox.margin\u003e","lastModifiedDate":"2021-10-24"},{"lineNumber":31,"author":{"gitId":"Shruthi0310"},"content":"            \u003c/HBox\u003e","lastModifiedDate":"2021-10-05"},{"lineNumber":32,"author":{"gitId":"Shruthi0310"},"content":"            \u003cLabel fx:id\u003d\"loc\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$location\" /\u003e","lastModifiedDate":"2021-10-05"},{"lineNumber":33,"author":{"gitId":"Shruthi0310"},"content":"            \u003cLabel fx:id\u003d\"time\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$time\" /\u003e","lastModifiedDate":"2021-10-05"},{"lineNumber":34,"author":{"gitId":"Shruthi0310"},"content":"            \u003cLabel fx:id\u003d\"capacity\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$capacity\" /\u003e","lastModifiedDate":"2021-10-05"},{"lineNumber":35,"author":{"gitId":"Shruthi0310"},"content":"            \u003cLabel fx:id\u003d\"personAllocated\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$personAllocated\"/\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":36,"author":{"gitId":"Shruthi0310"},"content":"        \u003c/VBox\u003e","lastModifiedDate":"2021-10-05"},{"lineNumber":37,"author":{"gitId":"Shruthi0310"},"content":"    \u003c/GridPane\u003e","lastModifiedDate":"2021-10-05"},{"lineNumber":38,"author":{"gitId":"Shruthi0310"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2021-10-05"}],"authorContributionMap":{"YoYoCiti":3,"Shruthi0310":35}},{"path":"src/main/resources/view/FacilityListPanel.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Shruthi0310"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-10-05"},{"lineNumber":2,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":3,"author":{"gitId":"Shruthi0310"},"content":"\u003c?import javafx.scene.control.ListView?\u003e","lastModifiedDate":"2021-10-05"},{"lineNumber":4,"author":{"gitId":"Shruthi0310"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2021-10-05"},{"lineNumber":5,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":6,"author":{"gitId":"Shruthi0310"},"content":"\u003cVBox xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-10-05"},{"lineNumber":7,"author":{"gitId":"Shruthi0310"},"content":"    \u003cListView fx:id\u003d\"facilityListView\" VBox.vgrow\u003d\"ALWAYS\"/\u003e","lastModifiedDate":"2021-10-05"},{"lineNumber":8,"author":{"gitId":"Shruthi0310"},"content":"\u003c/VBox\u003e","lastModifiedDate":"2021-10-05"}],"authorContributionMap":{"Shruthi0310":8}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import java.net.URL?\u003e","lastModifiedDate":"2016-08-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.Scene?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Menu?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuBar?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuItem?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":9,"author":{"gitId":"Moley456"},"content":"\u003c?import javafx.scene.control.Tab?\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":10,"author":{"gitId":"Moley456"},"content":"\u003c?import javafx.scene.control.TabPane?\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.image.Image?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":12,"author":{"gitId":"Moley456"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":15,"author":{"gitId":"Moley456"},"content":"\u003c?import javafx.stage.Stage?\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":17,"author":{"gitId":"Moley456"},"content":"\u003cfx:root minHeight\u003d\"600\" minWidth\u003d\"450\" onCloseRequest\u003d\"#handleExit\" title\u003d\"SportsPA\" type\u003d\"javafx.stage.Stage\"","lastModifiedDate":"2021-10-12"},{"lineNumber":18,"author":{"gitId":"Moley456"},"content":"         xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    \u003cicons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        \u003cImage url\u003d\"@/images/address_book_32.png\" /\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    \u003c/icons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    \u003cscene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        \u003cScene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            \u003cstylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"                \u003cURL value\u003d\"@Fonts.css\" /\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":26,"author":{"gitId":"-"},"content":"                \u003cURL value\u003d\"@DarkTheme.css\" /\u003e","lastModifiedDate":"2016-08-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"                \u003cURL value\u003d\"@Extensions.css\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            \u003c/stylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            \u003cVBox\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":31,"author":{"gitId":"-"},"content":"                \u003cMenuBar fx:id\u003d\"menuBar\" VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2017-06-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"                    \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"File\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"                        \u003cMenuItem mnemonicParsing\u003d\"false\" onAction\u003d\"#handleExit\" text\u003d\"Exit\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"                    \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"                    \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"Help\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"                        \u003cMenuItem fx:id\u003d\"helpMenuItem\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleHelp\" text\u003d\"Help\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"                    \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"                \u003c/MenuBar\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":40,"author":{"gitId":"Moley456"},"content":"                \u003cStackPane fx:id\u003d\"commandBoxPlaceholder\" styleClass\u003d\"pane-with-border\" VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"                    \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":42,"author":{"gitId":"Moley456"},"content":"                        \u003cInsets bottom\u003d\"5\" left\u003d\"10\" right\u003d\"10\" top\u003d\"5\" /\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"                    \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":44,"author":{"gitId":"-"},"content":"                \u003c/StackPane\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":46,"author":{"gitId":"Moley456"},"content":"                \u003cStackPane fx:id\u003d\"resultDisplayPlaceholder\" maxHeight\u003d\"100\" minHeight\u003d\"100\" prefHeight\u003d\"100\"","lastModifiedDate":"2021-10-12"},{"lineNumber":47,"author":{"gitId":"Moley456"},"content":"                           styleClass\u003d\"pane-with-border\" VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"                    \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":49,"author":{"gitId":"Moley456"},"content":"                        \u003cInsets bottom\u003d\"5\" left\u003d\"10\" right\u003d\"10\" top\u003d\"5\" /\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":50,"author":{"gitId":"-"},"content":"                    \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":51,"author":{"gitId":"-"},"content":"                \u003c/StackPane\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":53,"author":{"gitId":"Moley456"},"content":"                \u003cVBox fx:id\u003d\"personList\" minWidth\u003d\"340\" prefWidth\u003d\"340\" styleClass\u003d\"pane-with-border\" VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":54,"author":{"gitId":"-"},"content":"                    \u003cpadding\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":55,"author":{"gitId":"Moley456"},"content":"                        \u003cInsets bottom\u003d\"10\" left\u003d\"10\" right\u003d\"10\" top\u003d\"10\" /\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":56,"author":{"gitId":"-"},"content":"                    \u003c/padding\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":57,"author":{"gitId":"YoYoCiti"},"content":"               \u003cTabPane fx:id\u003d\"tabsPlaceholder\" prefHeight\u003d\"200.0\" prefWidth\u003d\"200.0\"","lastModifiedDate":"2021-10-24"},{"lineNumber":58,"author":{"gitId":"YoYoCiti"},"content":"                        tabClosingPolicy\u003d\"UNAVAILABLE\" VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2021-10-24"},{"lineNumber":59,"author":{"gitId":"Moley456"},"content":"                 \u003ctabs\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":60,"author":{"gitId":"Moley456"},"content":"                   \u003cTab text\u003d\"Members\"\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":61,"author":{"gitId":"Moley456"},"content":"                     \u003ccontent\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":62,"author":{"gitId":"Moley456"},"content":"                       \u003cAnchorPane minHeight\u003d\"0.0\" minWidth\u003d\"0.0\" prefWidth\u003d\"200.0\"\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":63,"author":{"gitId":"Moley456"},"content":"                              \u003cchildren\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":64,"author":{"gitId":"Moley456"},"content":"                                      \u003cStackPane fx:id\u003d\"personListPanelPlaceholder\" AnchorPane.bottomAnchor\u003d\"0.0\"","lastModifiedDate":"2021-10-12"},{"lineNumber":65,"author":{"gitId":"Moley456"},"content":"                                                 AnchorPane.leftAnchor\u003d\"0.0\" AnchorPane.rightAnchor\u003d\"0.0\"","lastModifiedDate":"2021-10-12"},{"lineNumber":66,"author":{"gitId":"Moley456"},"content":"                                                 AnchorPane.topAnchor\u003d\"0.0\" /\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":67,"author":{"gitId":"Moley456"},"content":"                              \u003c/children\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":68,"author":{"gitId":"Moley456"},"content":"                           \u003c/AnchorPane\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":69,"author":{"gitId":"Moley456"},"content":"                     \u003c/content\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":70,"author":{"gitId":"Moley456"},"content":"                   \u003c/Tab\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":71,"author":{"gitId":"Moley456"},"content":"                   \u003cTab text\u003d\"Facilities\"\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":72,"author":{"gitId":"Moley456"},"content":"                     \u003ccontent\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":73,"author":{"gitId":"Moley456"},"content":"                       \u003cAnchorPane minHeight\u003d\"0.0\" minWidth\u003d\"0.0\" prefHeight\u003d\"180.0\" prefWidth\u003d\"200.0\"\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":74,"author":{"gitId":"Moley456"},"content":"                              \u003cchildren\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":75,"author":{"gitId":"Moley456"},"content":"                                      \u003cStackPane fx:id\u003d\"facilityListPanelPlaceholder\" AnchorPane.bottomAnchor\u003d\"0.0\"","lastModifiedDate":"2021-10-12"},{"lineNumber":76,"author":{"gitId":"Moley456"},"content":"                                                 AnchorPane.leftAnchor\u003d\"0.0\" AnchorPane.rightAnchor\u003d\"0.0\"","lastModifiedDate":"2021-10-12"},{"lineNumber":77,"author":{"gitId":"Moley456"},"content":"                                                 AnchorPane.topAnchor\u003d\"0.0\" /\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":78,"author":{"gitId":"Moley456"},"content":"                              \u003c/children\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":79,"author":{"gitId":"Moley456"},"content":"                           \u003c/AnchorPane\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":80,"author":{"gitId":"Moley456"},"content":"                     \u003c/content\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":81,"author":{"gitId":"Moley456"},"content":"                   \u003c/Tab\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":82,"author":{"gitId":"Moley456"},"content":"                 \u003c/tabs\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":83,"author":{"gitId":"Moley456"},"content":"               \u003c/TabPane\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":84,"author":{"gitId":"Shruthi0310"},"content":"                \u003c/VBox\u003e","lastModifiedDate":"2021-10-05"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":86,"author":{"gitId":"-"},"content":"                                     \u003cStackPane fx:id\u003d\"statusbarPlaceholder\" VBox.vgrow\u003d\"NEVER\" /\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        \u003c/Scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    \u003c/scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":90,"author":{"gitId":"-"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2017-11-29"}],"authorContributionMap":{"YoYoCiti":2,"Moley456":38,"Shruthi0310":1,"-":49}},{"path":"src/main/resources/view/PersonListCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.FlowPane?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"  \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    \u003ccolumnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"      \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\" /\u003e","lastModifiedDate":"2017-03-28"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    \u003c/columnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    \u003cVBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"105\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2017-03-28"},{"lineNumber":18,"author":{"gitId":"-"},"content":"      \u003cpadding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        \u003cInsets top\u003d\"5\" right\u003d\"5\" bottom\u003d\"5\" left\u003d\"15\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"      \u003c/padding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"      \u003cHBox spacing\u003d\"5\" alignment\u003d\"CENTER_LEFT\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"cell_big_label\"\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"          \u003cminWidth\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"            \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"          \u003c/minWidth\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        \u003c/Label\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        \u003cLabel fx:id\u003d\"name\" text\u003d\"\\$first\" styleClass\u003d\"cell_big_label\" /\u003e","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"      \u003c/HBox\u003e","lastModifiedDate":"2016-09-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"      \u003cFlowPane fx:id\u003d\"tags\" /\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":31,"author":{"gitId":"-"},"content":"      \u003cLabel fx:id\u003d\"phone\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$phone\" /\u003e","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"felix-ong"},"content":"      \u003cLabel fx:id\u003d\"availability\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$availability\" /\u003e","lastModifiedDate":"2021-10-10"},{"lineNumber":33,"author":{"gitId":"Shruthi0310"},"content":"      \u003cLabel fx:id\u003d\"todayAttendance\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$todayAttendance\"/\u003e","lastModifiedDate":"2021-10-21"},{"lineNumber":34,"author":{"gitId":"Shruthi0310"},"content":"      \u003cLabel fx:id\u003d\"totalAttendance\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$todayAttendance\"/\u003e","lastModifiedDate":"2021-10-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"  \u003c/GridPane\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"Shruthi0310":2,"-":34,"felix-ong":1}},{"path":"src/test/data/JsonAddressBookStorageTest/invalidAndValidFacilityAddressBook.json","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Moley456"},"content":"{","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"Moley456"},"content":"  \"members\": [],","lastModifiedDate":"2021-10-11"},{"lineNumber":3,"author":{"gitId":"Moley456"},"content":"  \"facilities\": [ {","lastModifiedDate":"2021-10-11"},{"lineNumber":4,"author":{"gitId":"Moley456"},"content":"    \"name\": \"Valid Facility \",","lastModifiedDate":"2021-10-11"},{"lineNumber":5,"author":{"gitId":"Moley456"},"content":"    \"location\": \"Tampines Hub Field\",","lastModifiedDate":"2021-10-11"},{"lineNumber":6,"author":{"gitId":"Moley456"},"content":"    \"time\": \"2000\",","lastModifiedDate":"2021-10-11"},{"lineNumber":7,"author":{"gitId":"Moley456"},"content":"    \"capacity\": \"4\",","lastModifiedDate":"2021-10-27"},{"lineNumber":8,"author":{"gitId":"Moley456"},"content":"    \"allocationList\": [ ]","lastModifiedDate":"2021-10-27"},{"lineNumber":9,"author":{"gitId":"Moley456"},"content":"  }, {","lastModifiedDate":"2021-10-11"},{"lineNumber":10,"author":{"gitId":"Moley456"},"content":"    \"name\": \"Facility with Invalid Location Field\",","lastModifiedDate":"2021-10-11"},{"lineNumber":11,"author":{"gitId":"Moley456"},"content":"    \"location\": \"Tampines Hub Field!\",","lastModifiedDate":"2021-10-11"},{"lineNumber":12,"author":{"gitId":"Moley456"},"content":"    \"time\": \"2000\",","lastModifiedDate":"2021-10-11"},{"lineNumber":13,"author":{"gitId":"Moley456"},"content":"    \"capacity\": \"4\",","lastModifiedDate":"2021-10-27"},{"lineNumber":14,"author":{"gitId":"Moley456"},"content":"    \"allocationList\": [ ]","lastModifiedDate":"2021-10-27"},{"lineNumber":15,"author":{"gitId":"Moley456"},"content":"  } ]","lastModifiedDate":"2021-10-11"},{"lineNumber":16,"author":{"gitId":"Moley456"},"content":"}","lastModifiedDate":"2021-10-11"}],"authorContributionMap":{"Moley456":16}},{"path":"src/test/data/JsonAddressBookStorageTest/invalidAndValidMemberAddressBook.json","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Moley456"},"content":"{","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"Moley456"},"content":"  \"members\": [ {","lastModifiedDate":"2021-10-11"},{"lineNumber":3,"author":{"gitId":"Moley456"},"content":"    \"name\": \"Valid Person\",","lastModifiedDate":"2021-10-11"},{"lineNumber":4,"author":{"gitId":"felix-ong"},"content":"    \"phone\": \"9482424\",","lastModifiedDate":"2021-10-12"},{"lineNumber":5,"author":{"gitId":"felix-ong"},"content":"    \"availability\": []","lastModifiedDate":"2021-10-16"},{"lineNumber":6,"author":{"gitId":"Moley456"},"content":"  }, {","lastModifiedDate":"2021-10-11"},{"lineNumber":7,"author":{"gitId":"Moley456"},"content":"    \"name\": \"Person With Invalid Phone Field\",","lastModifiedDate":"2021-10-11"},{"lineNumber":8,"author":{"gitId":"Moley456"},"content":"    \"phone\": \"948asdf2424\"","lastModifiedDate":"2021-10-11"},{"lineNumber":9,"author":{"gitId":"Moley456"},"content":"  } ],","lastModifiedDate":"2021-10-11"},{"lineNumber":10,"author":{"gitId":"Moley456"},"content":"  \"facilities\": []","lastModifiedDate":"2021-10-11"},{"lineNumber":11,"author":{"gitId":"Moley456"},"content":"}","lastModifiedDate":"2021-10-11"}],"authorContributionMap":{"Moley456":9,"felix-ong":2}},{"path":"src/test/data/JsonAddressBookStorageTest/invalidFacilityAddressBook.json","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Moley456"},"content":"{","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"Moley456"},"content":"  \"members\": [],","lastModifiedDate":"2021-10-11"},{"lineNumber":3,"author":{"gitId":"Moley456"},"content":"  \"facilities\": [ {","lastModifiedDate":"2021-10-11"},{"lineNumber":4,"author":{"gitId":"Moley456"},"content":"    \"name\" : \"Facility with invalid time field\",","lastModifiedDate":"2021-10-11"},{"lineNumber":5,"author":{"gitId":"Moley456"},"content":"    \"location\": \"Tampines Hub Field\",","lastModifiedDate":"2021-10-11"},{"lineNumber":6,"author":{"gitId":"Moley456"},"content":"    \"time\": \"200\",","lastModifiedDate":"2021-10-11"},{"lineNumber":7,"author":{"gitId":"Moley456"},"content":"    \"capacity\": \"4\",","lastModifiedDate":"2021-10-27"},{"lineNumber":8,"author":{"gitId":"Moley456"},"content":"    \"allocationList\": [ ]","lastModifiedDate":"2021-10-27"},{"lineNumber":9,"author":{"gitId":"Moley456"},"content":"  } ]","lastModifiedDate":"2021-10-11"},{"lineNumber":10,"author":{"gitId":"Moley456"},"content":"}","lastModifiedDate":"2021-10-11"}],"authorContributionMap":{"Moley456":10}},{"path":"src/test/data/JsonAddressBookStorageTest/invalidMemberAddressBook.json","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Moley456"},"content":"{","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"Moley456"},"content":"  \"members\": [ {","lastModifiedDate":"2021-10-11"},{"lineNumber":3,"author":{"gitId":"Moley456"},"content":"    \"name\": \"Person with invalid name field: Ha!ns Mu@ster\",","lastModifiedDate":"2021-10-11"},{"lineNumber":4,"author":{"gitId":"Moley456"},"content":"    \"phone\": \"9482424\"","lastModifiedDate":"2021-10-11"},{"lineNumber":5,"author":{"gitId":"Moley456"},"content":"  } ],","lastModifiedDate":"2021-10-11"},{"lineNumber":6,"author":{"gitId":"Moley456"},"content":"  \"facilities\": []","lastModifiedDate":"2021-10-11"},{"lineNumber":7,"author":{"gitId":"Moley456"},"content":"}","lastModifiedDate":"2021-10-11"}],"authorContributionMap":{"Moley456":7}},{"path":"src/test/data/JsonSerializableAddressBookTest/duplicateFacilityAddressBook.json","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Moley456"},"content":"{","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"Moley456"},"content":"  \"members\" : [ ],","lastModifiedDate":"2021-10-11"},{"lineNumber":3,"author":{"gitId":"Moley456"},"content":"  \"facilities\" : [ {","lastModifiedDate":"2021-10-11"},{"lineNumber":4,"author":{"gitId":"Moley456"},"content":"    \"name\" : \"Court 1\",","lastModifiedDate":"2021-10-11"},{"lineNumber":5,"author":{"gitId":"Moley456"},"content":"    \"location\" : \"Tampines Hub Field\",","lastModifiedDate":"2021-10-11"},{"lineNumber":6,"author":{"gitId":"Moley456"},"content":"    \"time\" : \"1500\",","lastModifiedDate":"2021-10-11"},{"lineNumber":7,"author":{"gitId":"Moley456"},"content":"    \"capacity\" : \"4\",","lastModifiedDate":"2021-10-27"},{"lineNumber":8,"author":{"gitId":"Moley456"},"content":"    \"allocationList\": [ ]","lastModifiedDate":"2021-10-27"},{"lineNumber":9,"author":{"gitId":"Moley456"},"content":"  }, {","lastModifiedDate":"2021-10-11"},{"lineNumber":10,"author":{"gitId":"Moley456"},"content":"    \"name\" : \"Court 1\",","lastModifiedDate":"2021-10-11"},{"lineNumber":11,"author":{"gitId":"Moley456"},"content":"    \"location\" : \"Tampines Hub Field\",","lastModifiedDate":"2021-10-11"},{"lineNumber":12,"author":{"gitId":"Moley456"},"content":"    \"time\" : \"2000\",","lastModifiedDate":"2021-10-11"},{"lineNumber":13,"author":{"gitId":"Moley456"},"content":"    \"capacity\" : \"4\",","lastModifiedDate":"2021-10-27"},{"lineNumber":14,"author":{"gitId":"Moley456"},"content":"    \"allocationList\": [ ]","lastModifiedDate":"2021-10-27"},{"lineNumber":15,"author":{"gitId":"Moley456"},"content":"  } ]","lastModifiedDate":"2021-10-11"},{"lineNumber":16,"author":{"gitId":"Moley456"},"content":"}","lastModifiedDate":"2021-10-11"}],"authorContributionMap":{"Moley456":16}},{"path":"src/test/data/JsonSerializableAddressBookTest/duplicateMemberAddressBook.json","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Moley456"},"content":"{","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"Moley456"},"content":"  \"members\": [ {","lastModifiedDate":"2021-10-11"},{"lineNumber":3,"author":{"gitId":"Moley456"},"content":"    \"name\": \"Alice Pauline\",","lastModifiedDate":"2021-10-11"},{"lineNumber":4,"author":{"gitId":"felix-ong"},"content":"    \"phone\": \"94351253\",","lastModifiedDate":"2021-10-12"},{"lineNumber":5,"author":{"gitId":"Shruthi0310"},"content":"    \"availability\": [],","lastModifiedDate":"2021-10-23"},{"lineNumber":6,"author":{"gitId":"Shruthi0310"},"content":"    \"totalAttendance\": 0,","lastModifiedDate":"2021-10-21"},{"lineNumber":7,"author":{"gitId":"Shruthi0310"},"content":"    \"todayAttendance\": false","lastModifiedDate":"2021-10-21"},{"lineNumber":8,"author":{"gitId":"Moley456"},"content":"  }, {","lastModifiedDate":"2021-10-11"},{"lineNumber":9,"author":{"gitId":"Moley456"},"content":"    \"name\": \"Alice Pauline\",","lastModifiedDate":"2021-10-11"},{"lineNumber":10,"author":{"gitId":"felix-ong"},"content":"    \"phone\": \"94343423\",","lastModifiedDate":"2021-10-12"},{"lineNumber":11,"author":{"gitId":"Shruthi0310"},"content":"    \"availability\": [],","lastModifiedDate":"2021-10-23"},{"lineNumber":12,"author":{"gitId":"Shruthi0310"},"content":"    \"totalAttendance\": 0,","lastModifiedDate":"2021-10-21"},{"lineNumber":13,"author":{"gitId":"Shruthi0310"},"content":"    \"todayAttendance\": false","lastModifiedDate":"2021-10-21"},{"lineNumber":14,"author":{"gitId":"Moley456"},"content":"  }],","lastModifiedDate":"2021-10-11"},{"lineNumber":15,"author":{"gitId":"Moley456"},"content":"  \"facilities\": []","lastModifiedDate":"2021-10-11"},{"lineNumber":16,"author":{"gitId":"Moley456"},"content":"}","lastModifiedDate":"2021-10-11"}],"authorContributionMap":{"Moley456":8,"Shruthi0310":6,"felix-ong":2}},{"path":"src/test/data/JsonSerializableAddressBookTest/invalidFacilityAddressBook.json","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Moley456"},"content":"{","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"Moley456"},"content":"  \"members\" : [ ],","lastModifiedDate":"2021-10-11"},{"lineNumber":3,"author":{"gitId":"Moley456"},"content":"  \"facilities\" : [ {","lastModifiedDate":"2021-10-11"},{"lineNumber":4,"author":{"gitId":"Moley456"},"content":"    \"name\" : \"Court 1!\",","lastModifiedDate":"2021-10-11"},{"lineNumber":5,"author":{"gitId":"Moley456"},"content":"    \"location\" : \"Tampines Hub Field\",","lastModifiedDate":"2021-10-11"},{"lineNumber":6,"author":{"gitId":"Moley456"},"content":"    \"time\" : \"1500\",","lastModifiedDate":"2021-10-11"},{"lineNumber":7,"author":{"gitId":"Moley456"},"content":"    \"capacity\" : \"4\",","lastModifiedDate":"2021-10-27"},{"lineNumber":8,"author":{"gitId":"Moley456"},"content":"    \"allocationList\": [ ]","lastModifiedDate":"2021-10-27"},{"lineNumber":9,"author":{"gitId":"Moley456"},"content":"  } ]","lastModifiedDate":"2021-10-11"},{"lineNumber":10,"author":{"gitId":"Moley456"},"content":"}","lastModifiedDate":"2021-10-11"}],"authorContributionMap":{"Moley456":10}},{"path":"src/test/data/JsonSerializableAddressBookTest/invalidMemberAddressBook.json","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Moley456"},"content":"{","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"Moley456"},"content":"  \"members\": [ {","lastModifiedDate":"2021-10-11"},{"lineNumber":3,"author":{"gitId":"Moley456"},"content":"    \"name\": \"H@ns Muster\",","lastModifiedDate":"2021-10-11"},{"lineNumber":4,"author":{"gitId":"felix-ong"},"content":"    \"phone\": \"9482424\",","lastModifiedDate":"2021-10-12"},{"lineNumber":5,"author":{"gitId":"felix-ong"},"content":"    \"availability\": []","lastModifiedDate":"2021-10-16"},{"lineNumber":6,"author":{"gitId":"Moley456"},"content":"  } ],","lastModifiedDate":"2021-10-11"},{"lineNumber":7,"author":{"gitId":"Moley456"},"content":"  \"facilities\": []","lastModifiedDate":"2021-10-11"},{"lineNumber":8,"author":{"gitId":"Moley456"},"content":"}","lastModifiedDate":"2021-10-11"}],"authorContributionMap":{"Moley456":6,"felix-ong":2}},{"path":"src/test/data/JsonSerializableAddressBookTest/typicalFacilitiesAddressBook.json","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Moley456"},"content":"{","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"Moley456"},"content":"  \"members\" : [ ],","lastModifiedDate":"2021-10-11"},{"lineNumber":3,"author":{"gitId":"Moley456"},"content":"  \"facilities\" : [ {","lastModifiedDate":"2021-10-11"},{"lineNumber":4,"author":{"gitId":"Moley456"},"content":"    \"name\" : \"Court 1\",","lastModifiedDate":"2021-10-11"},{"lineNumber":5,"author":{"gitId":"Moley456"},"content":"    \"location\" : \"Tampines Hub Field\",","lastModifiedDate":"2021-10-11"},{"lineNumber":6,"author":{"gitId":"Moley456"},"content":"    \"time\" : \"1500\",","lastModifiedDate":"2021-10-11"},{"lineNumber":7,"author":{"gitId":"Moley456"},"content":"    \"capacity\" : \"4\",","lastModifiedDate":"2021-10-27"},{"lineNumber":8,"author":{"gitId":"Moley456"},"content":"    \"allocationList\": [ ]","lastModifiedDate":"2021-10-27"},{"lineNumber":9,"author":{"gitId":"Moley456"},"content":"  }, {","lastModifiedDate":"2021-10-11"},{"lineNumber":10,"author":{"gitId":"Moley456"},"content":"    \"name\" : \"Court 1\",","lastModifiedDate":"2021-10-11"},{"lineNumber":11,"author":{"gitId":"Moley456"},"content":"    \"location\" : \"Kent Ridge Sports Hall 5\",","lastModifiedDate":"2021-10-11"},{"lineNumber":12,"author":{"gitId":"Moley456"},"content":"    \"time\" : \"1500\",","lastModifiedDate":"2021-10-11"},{"lineNumber":13,"author":{"gitId":"Moley456"},"content":"    \"capacity\" : \"4\",","lastModifiedDate":"2021-10-27"},{"lineNumber":14,"author":{"gitId":"Moley456"},"content":"    \"allocationList\": [ ]","lastModifiedDate":"2021-10-27"},{"lineNumber":15,"author":{"gitId":"Moley456"},"content":"  }, {","lastModifiedDate":"2021-10-11"},{"lineNumber":16,"author":{"gitId":"Moley456"},"content":"    \"name\" : \"Court 2\",","lastModifiedDate":"2021-10-11"},{"lineNumber":17,"author":{"gitId":"Moley456"},"content":"    \"location\" : \"Kent Ridge Sports Hall 5\",","lastModifiedDate":"2021-10-11"},{"lineNumber":18,"author":{"gitId":"Moley456"},"content":"    \"time\" : \"1500\",","lastModifiedDate":"2021-10-11"},{"lineNumber":19,"author":{"gitId":"Moley456"},"content":"    \"capacity\" : \"4\",","lastModifiedDate":"2021-10-27"},{"lineNumber":20,"author":{"gitId":"Moley456"},"content":"    \"allocationList\": [ ]","lastModifiedDate":"2021-10-27"},{"lineNumber":21,"author":{"gitId":"Moley456"},"content":"  }, {","lastModifiedDate":"2021-10-11"},{"lineNumber":22,"author":{"gitId":"Moley456"},"content":"    \"name\" : \"Court 20\",","lastModifiedDate":"2021-10-11"},{"lineNumber":23,"author":{"gitId":"Moley456"},"content":"    \"location\" : \"University Town Sports Hall 1\",","lastModifiedDate":"2021-10-11"},{"lineNumber":24,"author":{"gitId":"Moley456"},"content":"    \"time\" : \"1600\",","lastModifiedDate":"2021-10-11"},{"lineNumber":25,"author":{"gitId":"Moley456"},"content":"    \"capacity\" : \"4\",","lastModifiedDate":"2021-10-27"},{"lineNumber":26,"author":{"gitId":"Moley456"},"content":"    \"allocationList\": [ ]","lastModifiedDate":"2021-10-27"},{"lineNumber":27,"author":{"gitId":"Moley456"},"content":"  }, {","lastModifiedDate":"2021-10-11"},{"lineNumber":28,"author":{"gitId":"Moley456"},"content":"    \"name\" : \"Court 21\",","lastModifiedDate":"2021-10-11"},{"lineNumber":29,"author":{"gitId":"Moley456"},"content":"    \"location\" : \"University Town Sports Hall 1\",","lastModifiedDate":"2021-10-11"},{"lineNumber":30,"author":{"gitId":"Moley456"},"content":"    \"time\" : \"1600\",","lastModifiedDate":"2021-10-11"},{"lineNumber":31,"author":{"gitId":"Moley456"},"content":"    \"capacity\" : \"4\",","lastModifiedDate":"2021-10-27"},{"lineNumber":32,"author":{"gitId":"Moley456"},"content":"    \"allocationList\": [ ]","lastModifiedDate":"2021-10-27"},{"lineNumber":33,"author":{"gitId":"Moley456"},"content":"  }, {","lastModifiedDate":"2021-10-11"},{"lineNumber":34,"author":{"gitId":"Moley456"},"content":"    \"name\" : \"Court 1\",","lastModifiedDate":"2021-10-11"},{"lineNumber":35,"author":{"gitId":"Moley456"},"content":"    \"location\" : \"Kent Ridge Outdoor Tennis Courts\",","lastModifiedDate":"2021-10-11"},{"lineNumber":36,"author":{"gitId":"Moley456"},"content":"    \"time\" : \"1900\",","lastModifiedDate":"2021-10-11"},{"lineNumber":37,"author":{"gitId":"Moley456"},"content":"    \"capacity\" : \"5\",","lastModifiedDate":"2021-10-27"},{"lineNumber":38,"author":{"gitId":"Moley456"},"content":"    \"allocationList\": [ ]","lastModifiedDate":"2021-10-27"},{"lineNumber":39,"author":{"gitId":"Moley456"},"content":"  }, {","lastModifiedDate":"2021-10-11"},{"lineNumber":40,"author":{"gitId":"Moley456"},"content":"    \"name\" : \"Court 10\",","lastModifiedDate":"2021-10-11"},{"lineNumber":41,"author":{"gitId":"Moley456"},"content":"    \"location\" : \"Kent Ridge Outdoor Tennis Courts\",","lastModifiedDate":"2021-10-11"},{"lineNumber":42,"author":{"gitId":"Moley456"},"content":"    \"time\" : \"1900\",","lastModifiedDate":"2021-10-11"},{"lineNumber":43,"author":{"gitId":"Moley456"},"content":"    \"capacity\" : \"5\",","lastModifiedDate":"2021-10-27"},{"lineNumber":44,"author":{"gitId":"Moley456"},"content":"    \"allocationList\": [ ]","lastModifiedDate":"2021-10-27"},{"lineNumber":45,"author":{"gitId":"Moley456"},"content":"  }, {","lastModifiedDate":"2021-10-11"},{"lineNumber":46,"author":{"gitId":"Moley456"},"content":"    \"name\" : \"Section A\",","lastModifiedDate":"2021-10-11"},{"lineNumber":47,"author":{"gitId":"Moley456"},"content":"    \"location\" : \"UTown Field\",","lastModifiedDate":"2021-10-11"},{"lineNumber":48,"author":{"gitId":"Moley456"},"content":"    \"time\" : \"1400\",","lastModifiedDate":"2021-10-11"},{"lineNumber":49,"author":{"gitId":"Moley456"},"content":"    \"capacity\" : \"10\",","lastModifiedDate":"2021-10-27"},{"lineNumber":50,"author":{"gitId":"Moley456"},"content":"    \"allocationList\": [ ]","lastModifiedDate":"2021-10-27"},{"lineNumber":51,"author":{"gitId":"Moley456"},"content":"  } ]","lastModifiedDate":"2021-10-11"},{"lineNumber":52,"author":{"gitId":"Moley456"},"content":"}","lastModifiedDate":"2021-10-11"}],"authorContributionMap":{"Moley456":52}},{"path":"src/test/data/JsonSerializableAddressBookTest/typicalMembersAddressBook.json","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Moley456"},"content":"{","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"felix-ong"},"content":"  \"_comment\": \"AddressBook save file which contains the same Person values as in TypicalPersons#getTypicalPersons()\",","lastModifiedDate":"2021-10-12"},{"lineNumber":3,"author":{"gitId":"Moley456"},"content":"  \"members\" : [ {","lastModifiedDate":"2021-10-11"},{"lineNumber":4,"author":{"gitId":"Moley456"},"content":"    \"name\" : \"Alice Pauline\",","lastModifiedDate":"2021-10-11"},{"lineNumber":5,"author":{"gitId":"felix-ong"},"content":"    \"phone\" : \"94351253\",","lastModifiedDate":"2021-10-12"},{"lineNumber":6,"author":{"gitId":"Shruthi0310"},"content":"    \"availability\": [],","lastModifiedDate":"2021-10-23"},{"lineNumber":7,"author":{"gitId":"Shruthi0310"},"content":"    \"todayAttendance\": false,","lastModifiedDate":"2021-10-21"},{"lineNumber":8,"author":{"gitId":"Shruthi0310"},"content":"    \"totalAttendance\": 0","lastModifiedDate":"2021-10-21"},{"lineNumber":9,"author":{"gitId":"Moley456"},"content":"  }, {","lastModifiedDate":"2021-10-11"},{"lineNumber":10,"author":{"gitId":"Moley456"},"content":"    \"name\" : \"Benson Meier\",","lastModifiedDate":"2021-10-11"},{"lineNumber":11,"author":{"gitId":"felix-ong"},"content":"    \"phone\" : \"98765432\",","lastModifiedDate":"2021-10-12"},{"lineNumber":12,"author":{"gitId":"Shruthi0310"},"content":"    \"availability\": [],","lastModifiedDate":"2021-10-23"},{"lineNumber":13,"author":{"gitId":"Shruthi0310"},"content":"    \"todayAttendance\": false,","lastModifiedDate":"2021-10-21"},{"lineNumber":14,"author":{"gitId":"Shruthi0310"},"content":"    \"totalAttendance\": 0","lastModifiedDate":"2021-10-21"},{"lineNumber":15,"author":{"gitId":"Moley456"},"content":"  }, {","lastModifiedDate":"2021-10-11"},{"lineNumber":16,"author":{"gitId":"Moley456"},"content":"    \"name\" : \"Carl Kurz\",","lastModifiedDate":"2021-10-11"},{"lineNumber":17,"author":{"gitId":"felix-ong"},"content":"    \"phone\" : \"95352563\",","lastModifiedDate":"2021-10-12"},{"lineNumber":18,"author":{"gitId":"Shruthi0310"},"content":"    \"availability\": [],","lastModifiedDate":"2021-10-23"},{"lineNumber":19,"author":{"gitId":"Shruthi0310"},"content":"    \"todayAttendance\": false,","lastModifiedDate":"2021-10-21"},{"lineNumber":20,"author":{"gitId":"Shruthi0310"},"content":"    \"totalAttendance\": 0","lastModifiedDate":"2021-10-21"},{"lineNumber":21,"author":{"gitId":"Moley456"},"content":"  }, {","lastModifiedDate":"2021-10-11"},{"lineNumber":22,"author":{"gitId":"Moley456"},"content":"    \"name\" : \"Daniel Meier\",","lastModifiedDate":"2021-10-11"},{"lineNumber":23,"author":{"gitId":"felix-ong"},"content":"    \"phone\" : \"87652533\",","lastModifiedDate":"2021-10-12"},{"lineNumber":24,"author":{"gitId":"Shruthi0310"},"content":"    \"availability\": [],","lastModifiedDate":"2021-10-23"},{"lineNumber":25,"author":{"gitId":"Shruthi0310"},"content":"    \"todayAttendance\": false,","lastModifiedDate":"2021-10-21"},{"lineNumber":26,"author":{"gitId":"Shruthi0310"},"content":"    \"totalAttendance\": 0","lastModifiedDate":"2021-10-21"},{"lineNumber":27,"author":{"gitId":"Moley456"},"content":"  }, {","lastModifiedDate":"2021-10-11"},{"lineNumber":28,"author":{"gitId":"Moley456"},"content":"    \"name\" : \"Elle Meyer\",","lastModifiedDate":"2021-10-11"},{"lineNumber":29,"author":{"gitId":"felix-ong"},"content":"    \"phone\" : \"9482224\",","lastModifiedDate":"2021-10-12"},{"lineNumber":30,"author":{"gitId":"Shruthi0310"},"content":"    \"availability\": [],","lastModifiedDate":"2021-10-23"},{"lineNumber":31,"author":{"gitId":"Shruthi0310"},"content":"    \"todayAttendance\": false,","lastModifiedDate":"2021-10-21"},{"lineNumber":32,"author":{"gitId":"Shruthi0310"},"content":"    \"totalAttendance\": 0","lastModifiedDate":"2021-10-21"},{"lineNumber":33,"author":{"gitId":"Moley456"},"content":"  }, {","lastModifiedDate":"2021-10-11"},{"lineNumber":34,"author":{"gitId":"Moley456"},"content":"    \"name\" : \"Fiona Kunz\",","lastModifiedDate":"2021-10-11"},{"lineNumber":35,"author":{"gitId":"felix-ong"},"content":"    \"phone\" : \"9482427\",","lastModifiedDate":"2021-10-12"},{"lineNumber":36,"author":{"gitId":"Shruthi0310"},"content":"    \"availability\": [],","lastModifiedDate":"2021-10-23"},{"lineNumber":37,"author":{"gitId":"Shruthi0310"},"content":"    \"todayAttendance\": false,","lastModifiedDate":"2021-10-21"},{"lineNumber":38,"author":{"gitId":"Shruthi0310"},"content":"    \"totalAttendance\": 0","lastModifiedDate":"2021-10-21"},{"lineNumber":39,"author":{"gitId":"Moley456"},"content":"  }, {","lastModifiedDate":"2021-10-11"},{"lineNumber":40,"author":{"gitId":"Moley456"},"content":"    \"name\" : \"George Best\",","lastModifiedDate":"2021-10-11"},{"lineNumber":41,"author":{"gitId":"felix-ong"},"content":"    \"phone\" : \"9482442\",","lastModifiedDate":"2021-10-12"},{"lineNumber":42,"author":{"gitId":"Shruthi0310"},"content":"    \"availability\": [],","lastModifiedDate":"2021-10-23"},{"lineNumber":43,"author":{"gitId":"Shruthi0310"},"content":"    \"todayAttendance\": false,","lastModifiedDate":"2021-10-21"},{"lineNumber":44,"author":{"gitId":"Shruthi0310"},"content":"    \"totalAttendance\": 0","lastModifiedDate":"2021-10-21"},{"lineNumber":45,"author":{"gitId":"Moley456"},"content":"  } ],","lastModifiedDate":"2021-10-11"},{"lineNumber":46,"author":{"gitId":"Moley456"},"content":"  \"facilities\": []","lastModifiedDate":"2021-10-11"},{"lineNumber":47,"author":{"gitId":"Moley456"},"content":"}","lastModifiedDate":"2021-10-11"}],"authorContributionMap":{"Moley456":18,"Shruthi0310":21,"felix-ong":8}},{"path":"src/test/java/seedu/address/commons/util/StringUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.util;","lastModifiedDate":"2016-09-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class StringUtilTest {","lastModifiedDate":"2016-09-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    //---------------- Tests for isNonZeroUnsignedInteger --------------------------------------","lastModifiedDate":"2019-02-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void isNonZeroUnsignedInteger() {","lastModifiedDate":"2019-02-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        // EP: empty strings","lastModifiedDate":"2016-10-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"\")); // Boundary value","lastModifiedDate":"2017-06-02"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"  \"));","lastModifiedDate":"2017-06-02"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        // EP: not a number","lastModifiedDate":"2016-10-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"a\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"aaa\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        // EP: zero","lastModifiedDate":"2016-10-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"0\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":28,"author":{"gitId":"tsinyee"},"content":"        assertFalse(StringUtil.isNonNegativeUnsignedInteger(\"+0\"));","lastModifiedDate":"2021-10-28"},{"lineNumber":29,"author":{"gitId":"tsinyee"},"content":"        assertFalse(StringUtil.isNonNegativeUnsignedInteger(\"-0\"));","lastModifiedDate":"2021-10-28"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // EP: zero as prefix","lastModifiedDate":"2017-06-02"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.isNonZeroUnsignedInteger(\"01\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        // EP: signed numbers","lastModifiedDate":"2016-10-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"-1\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"+1\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        // EP: numbers with white space","lastModifiedDate":"2016-10-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\" 10 \")); // Leading/trailing spaces","lastModifiedDate":"2017-06-02"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"1 0\")); // Spaces in the middle","lastModifiedDate":"2017-06-02"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        // EP: number larger than Integer.MAX_VALUE","lastModifiedDate":"2017-06-02"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(Long.toString(Integer.MAX_VALUE + 1)));","lastModifiedDate":"2017-06-02"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        // EP: valid numbers, should return true","lastModifiedDate":"2016-10-12"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.isNonZeroUnsignedInteger(\"1\")); // Boundary value","lastModifiedDate":"2017-06-02"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.isNonZeroUnsignedInteger(\"10\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":50,"author":{"gitId":"tsinyee"},"content":"    @Test","lastModifiedDate":"2021-10-28"},{"lineNumber":51,"author":{"gitId":"tsinyee"},"content":"    public void isNonNegativeUnsignedInteger() {","lastModifiedDate":"2021-10-28"},{"lineNumber":52,"author":{"gitId":"tsinyee"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":53,"author":{"gitId":"tsinyee"},"content":"        // EP: empty strings","lastModifiedDate":"2021-10-28"},{"lineNumber":54,"author":{"gitId":"tsinyee"},"content":"        assertFalse(StringUtil.isNonNegativeUnsignedInteger(\"\")); // Boundary value","lastModifiedDate":"2021-10-28"},{"lineNumber":55,"author":{"gitId":"tsinyee"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"  \"));","lastModifiedDate":"2021-10-28"},{"lineNumber":56,"author":{"gitId":"tsinyee"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":57,"author":{"gitId":"tsinyee"},"content":"        // EP: not a number","lastModifiedDate":"2021-10-28"},{"lineNumber":58,"author":{"gitId":"tsinyee"},"content":"        assertFalse(StringUtil.isNonNegativeUnsignedInteger(\"a\"));","lastModifiedDate":"2021-10-28"},{"lineNumber":59,"author":{"gitId":"tsinyee"},"content":"        assertFalse(StringUtil.isNonNegativeUnsignedInteger(\"aaa\"));","lastModifiedDate":"2021-10-28"},{"lineNumber":60,"author":{"gitId":"tsinyee"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":61,"author":{"gitId":"tsinyee"},"content":"        // EP: zero","lastModifiedDate":"2021-10-28"},{"lineNumber":62,"author":{"gitId":"tsinyee"},"content":"        assertTrue(StringUtil.isNonNegativeUnsignedInteger(\"0\"));","lastModifiedDate":"2021-10-28"},{"lineNumber":63,"author":{"gitId":"tsinyee"},"content":"        assertFalse(StringUtil.isNonNegativeUnsignedInteger(\"+0\"));","lastModifiedDate":"2021-10-28"},{"lineNumber":64,"author":{"gitId":"tsinyee"},"content":"        assertFalse(StringUtil.isNonNegativeUnsignedInteger(\"-0\"));","lastModifiedDate":"2021-10-28"},{"lineNumber":65,"author":{"gitId":"tsinyee"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":66,"author":{"gitId":"tsinyee"},"content":"        // EP: zero as prefix","lastModifiedDate":"2021-10-28"},{"lineNumber":67,"author":{"gitId":"tsinyee"},"content":"        assertTrue(StringUtil.isNonNegativeUnsignedInteger(\"01\"));","lastModifiedDate":"2021-10-28"},{"lineNumber":68,"author":{"gitId":"tsinyee"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":69,"author":{"gitId":"tsinyee"},"content":"        // EP: signed numbers","lastModifiedDate":"2021-10-28"},{"lineNumber":70,"author":{"gitId":"tsinyee"},"content":"        assertFalse(StringUtil.isNonNegativeUnsignedInteger(\"-1\"));","lastModifiedDate":"2021-10-28"},{"lineNumber":71,"author":{"gitId":"tsinyee"},"content":"        assertFalse(StringUtil.isNonNegativeUnsignedInteger(\"+1\"));","lastModifiedDate":"2021-10-28"},{"lineNumber":72,"author":{"gitId":"tsinyee"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":73,"author":{"gitId":"tsinyee"},"content":"        // EP: numbers with white space","lastModifiedDate":"2021-10-28"},{"lineNumber":74,"author":{"gitId":"tsinyee"},"content":"        assertFalse(StringUtil.isNonNegativeUnsignedInteger(\" 10 \")); // Leading/trailing spaces","lastModifiedDate":"2021-10-28"},{"lineNumber":75,"author":{"gitId":"tsinyee"},"content":"        assertFalse(StringUtil.isNonNegativeUnsignedInteger(\"1 0\")); // Spaces in the middle","lastModifiedDate":"2021-10-28"},{"lineNumber":76,"author":{"gitId":"tsinyee"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":77,"author":{"gitId":"tsinyee"},"content":"        // EP: number larger than Integer.MAX_VALUE","lastModifiedDate":"2021-10-28"},{"lineNumber":78,"author":{"gitId":"tsinyee"},"content":"        assertFalse(StringUtil.isNonNegativeUnsignedInteger(Long.toString(Integer.MAX_VALUE + 1)));","lastModifiedDate":"2021-10-28"},{"lineNumber":79,"author":{"gitId":"tsinyee"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":80,"author":{"gitId":"tsinyee"},"content":"        // EP: valid numbers, should return true","lastModifiedDate":"2021-10-28"},{"lineNumber":81,"author":{"gitId":"tsinyee"},"content":"        assertTrue(StringUtil.isNonNegativeUnsignedInteger(\"1\")); // Boundary value","lastModifiedDate":"2021-10-28"},{"lineNumber":82,"author":{"gitId":"tsinyee"},"content":"        assertTrue(StringUtil.isNonNegativeUnsignedInteger(\"10\"));","lastModifiedDate":"2021-10-28"},{"lineNumber":83,"author":{"gitId":"tsinyee"},"content":"    }","lastModifiedDate":"2021-10-28"},{"lineNumber":84,"author":{"gitId":"tsinyee"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    //---------------- Tests for containsWordIgnoreCase --------------------------------------","lastModifiedDate":"2016-10-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     * Invalid equivalence partitions for word: null, empty, multiple words","lastModifiedDate":"2016-10-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     * Invalid equivalence partitions for sentence: null","lastModifiedDate":"2016-10-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * The four test cases below test one invalid input at a time.","lastModifiedDate":"2016-10-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_nullWord_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":96,"author":{"gitId":"tsinyee"},"content":"        assertThrows(NullPointerException.class, () -\u003e StringUtil","lastModifiedDate":"2021-10-31"},{"lineNumber":97,"author":{"gitId":"tsinyee"},"content":"                .containsWordIgnoreCase(\"typical sentence\", null));","lastModifiedDate":"2021-10-31"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_emptyWord_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, \"Word parameter cannot be empty\", ()","lastModifiedDate":"2019-03-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"            -\u003e StringUtil.containsWordIgnoreCase(\"typical sentence\", \"  \"));","lastModifiedDate":"2019-03-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-10-31"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_multipleWords_throwsIllegalArgumentException() {","lastModifiedDate":"2021-10-31"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, \"Word parameter should be a single word\", ()","lastModifiedDate":"2021-10-31"},{"lineNumber":109,"author":{"gitId":"-"},"content":"            -\u003e StringUtil.containsWordIgnoreCase(\"typical sentence\", \"aaa BBB\"));","lastModifiedDate":"2021-10-31"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-31"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_nullSentence_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e StringUtil.containsWordIgnoreCase(null, \"abc\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-13"},{"lineNumber":118,"author":{"gitId":"-"},"content":"     * Valid equivalence partitions for word:","lastModifiedDate":"2016-10-13"},{"lineNumber":119,"author":{"gitId":"-"},"content":"     *   - any word","lastModifiedDate":"2016-10-13"},{"lineNumber":120,"author":{"gitId":"-"},"content":"     *   - word containing symbols/numbers","lastModifiedDate":"2016-10-13"},{"lineNumber":121,"author":{"gitId":"-"},"content":"     *   - word with leading/trailing spaces","lastModifiedDate":"2016-10-13"},{"lineNumber":122,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13"},{"lineNumber":123,"author":{"gitId":"-"},"content":"     * Valid equivalence partitions for sentence:","lastModifiedDate":"2016-10-13"},{"lineNumber":124,"author":{"gitId":"-"},"content":"     *   - empty string","lastModifiedDate":"2016-10-13"},{"lineNumber":125,"author":{"gitId":"-"},"content":"     *   - one word","lastModifiedDate":"2016-10-13"},{"lineNumber":126,"author":{"gitId":"-"},"content":"     *   - multiple words","lastModifiedDate":"2016-10-13"},{"lineNumber":127,"author":{"gitId":"-"},"content":"     *   - sentence with extra spaces","lastModifiedDate":"2016-10-13"},{"lineNumber":128,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13"},{"lineNumber":129,"author":{"gitId":"-"},"content":"     * Possible scenarios returning true:","lastModifiedDate":"2016-10-13"},{"lineNumber":130,"author":{"gitId":"-"},"content":"     *   - matches first word in sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":131,"author":{"gitId":"-"},"content":"     *   - last word in sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":132,"author":{"gitId":"-"},"content":"     *   - middle word in sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":133,"author":{"gitId":"-"},"content":"     *   - matches multiple words","lastModifiedDate":"2016-10-13"},{"lineNumber":134,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13"},{"lineNumber":135,"author":{"gitId":"-"},"content":"     * Possible scenarios returning false:","lastModifiedDate":"2016-10-13"},{"lineNumber":136,"author":{"gitId":"-"},"content":"     *   - query word matches part of a sentence word","lastModifiedDate":"2016-10-13"},{"lineNumber":137,"author":{"gitId":"-"},"content":"     *   - sentence word matches part of the query word","lastModifiedDate":"2016-10-13"},{"lineNumber":138,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13"},{"lineNumber":139,"author":{"gitId":"-"},"content":"     * The test method below tries to verify all above with a reasonably low number of test cases.","lastModifiedDate":"2016-10-13"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_validInputs_correctResult() {","lastModifiedDate":"2016-10-13"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        // Empty sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(\"\", \"abc\")); // Boundary case","lastModifiedDate":"2016-10-13"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(\"    \", \"123\"));","lastModifiedDate":"2016-10-13"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        // Matches a partial word only","lastModifiedDate":"2016-10-13"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(\"aaa bbb ccc\", \"bb\")); // Sentence word bigger than query word","lastModifiedDate":"2016-10-13"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(\"aaa bbb ccc\", \"bbbb\")); // Query word bigger than sentence word","lastModifiedDate":"2016-10-13"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        // Matches word in the sentence, different upper/lower case letters","lastModifiedDate":"2016-10-13"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"aaa bBb ccc\", \"Bbb\")); // First word (boundary case)","lastModifiedDate":"2016-10-13"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"aaa bBb ccc@1\", \"CCc@1\")); // Last word (boundary case)","lastModifiedDate":"2016-10-13"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"  AAA   bBb   ccc  \", \"aaa\")); // Sentence has extra spaces","lastModifiedDate":"2016-10-13"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"Aaa\", \"aaa\")); // Only one word in sentence (boundary case)","lastModifiedDate":"2016-10-13"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"aaa bbb ccc\", \"  ccc  \")); // Leading/trailing spaces","lastModifiedDate":"2016-10-13"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        // Matches multiple words in sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"AAA bBb ccc  bbb\", \"bbB\"));","lastModifiedDate":"2016-10-13"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    //---------------- Tests for getDetails --------------------------------------","lastModifiedDate":"2016-10-13"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-13"},{"lineNumber":167,"author":{"gitId":"-"},"content":"     * Equivalence Partitions: null, valid throwable object","lastModifiedDate":"2016-10-13"},{"lineNumber":168,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    public void getDetails_exceptionGiven() {","lastModifiedDate":"2016-09-30"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.getDetails(new FileNotFoundException(\"file not found\"))","lastModifiedDate":"2019-03-14"},{"lineNumber":173,"author":{"gitId":"-"},"content":"            .contains(\"java.io.FileNotFoundException: file not found\"));","lastModifiedDate":"2019-03-14"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    public void getDetails_nullGiven_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e StringUtil.getDetails(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":181,"author":{"gitId":"tsinyee"},"content":"    //---------------- Tests for isValidBooleanValue --------------------------------------","lastModifiedDate":"2021-10-28"},{"lineNumber":182,"author":{"gitId":"tsinyee"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":183,"author":{"gitId":"tsinyee"},"content":"    @Test","lastModifiedDate":"2021-10-28"},{"lineNumber":184,"author":{"gitId":"tsinyee"},"content":"    public void isValidBooleanValue_validInputs_returnsTrue() {","lastModifiedDate":"2021-10-28"},{"lineNumber":185,"author":{"gitId":"tsinyee"},"content":"        assertTrue(StringUtil.isValidBooleanValue(\"false\"));","lastModifiedDate":"2021-10-28"},{"lineNumber":186,"author":{"gitId":"tsinyee"},"content":"        assertTrue(StringUtil.isValidBooleanValue(\"falSe\"));","lastModifiedDate":"2021-10-28"},{"lineNumber":187,"author":{"gitId":"tsinyee"},"content":"        assertTrue(StringUtil.isValidBooleanValue(\"true\"));","lastModifiedDate":"2021-10-28"},{"lineNumber":188,"author":{"gitId":"tsinyee"},"content":"    }","lastModifiedDate":"2021-10-28"},{"lineNumber":189,"author":{"gitId":"tsinyee"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":190,"author":{"gitId":"tsinyee"},"content":"    @Test","lastModifiedDate":"2021-10-28"},{"lineNumber":191,"author":{"gitId":"tsinyee"},"content":"    public void isValidBooleanValue_invalidInputs_returnsFalse() {","lastModifiedDate":"2021-10-28"},{"lineNumber":192,"author":{"gitId":"tsinyee"},"content":"        assertFalse(StringUtil.isValidBooleanValue(\" false \"));","lastModifiedDate":"2021-10-28"},{"lineNumber":193,"author":{"gitId":"tsinyee"},"content":"        assertFalse(StringUtil.isValidBooleanValue(\"1\"));","lastModifiedDate":"2021-10-28"},{"lineNumber":194,"author":{"gitId":"tsinyee"},"content":"        assertFalse(StringUtil.isValidBooleanValue(\"t rue\"));","lastModifiedDate":"2021-10-28"},{"lineNumber":195,"author":{"gitId":"tsinyee"},"content":"    }","lastModifiedDate":"2021-10-28"},{"lineNumber":196,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"-":142,"tsinyee":54}},{"path":"src/test/java/seedu/address/logic/LogicManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"felix-ong"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_MEMBER_DISPLAYED_INDEX;","lastModifiedDate":"2021-10-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"felix-ong"},"content":"import static seedu.address.logic.commands.CommandTestUtil.AVAILABILITY_DESC_AMY;","lastModifiedDate":"2021-10-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2021-10-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2021-10-12"},{"lineNumber":9,"author":{"gitId":"tsinyee"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_Y2;","lastModifiedDate":"2021-10-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-12-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":20,"author":{"gitId":"tsinyee"},"content":"import seedu.address.logic.commands.AddMemberCommand;","lastModifiedDate":"2021-10-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2017-01-18"},{"lineNumber":22,"author":{"gitId":"tsinyee"},"content":"import seedu.address.logic.commands.ListMemberCommand;","lastModifiedDate":"2021-10-10"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2016-09-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2016-09-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-12-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-05-31"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonAddressBookStorage;","lastModifiedDate":"2018-12-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonUserPrefsStorage;","lastModifiedDate":"2018-12-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.storage.StorageManager;","lastModifiedDate":"2018-12-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2018-12-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"public class LogicManagerTest {","lastModifiedDate":"2016-09-22"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private static final IOException DUMMY_IO_EXCEPTION \u003d new IOException(\"dummy exception\");","lastModifiedDate":"2018-12-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public Path temporaryFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2017-06-20"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2018-12-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2019-04-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d","lastModifiedDate":"2019-04-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"                new JsonAddressBookStorage(temporaryFolder.resolve(\"addressBook.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(temporaryFolder.resolve(\"userPrefs.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        StorageManager storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2018-12-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-20"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void execute_invalidCommandFormat_throwsParseException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        String invalidCommand \u003d \"uicfhmowqewca\";","lastModifiedDate":"2017-06-20"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertParseException(invalidCommand, MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-06-20"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-14"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void execute_commandExecutionError_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":61,"author":{"gitId":"tsinyee"},"content":"        String deleteCommand \u003d \"deletem 9\";","lastModifiedDate":"2021-10-11"},{"lineNumber":62,"author":{"gitId":"felix-ong"},"content":"        assertCommandException(deleteCommand, MESSAGE_INVALID_MEMBER_DISPLAYED_INDEX);","lastModifiedDate":"2021-10-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public void execute_validCommand_success() throws Exception {","lastModifiedDate":"2019-03-14"},{"lineNumber":67,"author":{"gitId":"tsinyee"},"content":"        String listMemberCommand \u003d ListMemberCommand.COMMAND_WORD;","lastModifiedDate":"2021-10-10"},{"lineNumber":68,"author":{"gitId":"tsinyee"},"content":"        assertCommandSuccess(listMemberCommand, ListMemberCommand.MESSAGE_SUCCESS, model);","lastModifiedDate":"2021-10-10"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public void execute_storageThrowsIoException_throwsCommandException() {","lastModifiedDate":"2019-04-25"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        // Setup LogicManager with JsonAddressBookIoExceptionThrowingStub","lastModifiedDate":"2018-12-09"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d","lastModifiedDate":"2018-12-09"},{"lineNumber":75,"author":{"gitId":"-"},"content":"                new JsonAddressBookIoExceptionThrowingStub(temporaryFolder.resolve(\"ioExceptionAddressBook.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d","lastModifiedDate":"2019-04-25"},{"lineNumber":77,"author":{"gitId":"-"},"content":"                new JsonUserPrefsStorage(temporaryFolder.resolve(\"ioExceptionUserPrefs.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        StorageManager storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2018-12-09"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        // Execute add command","lastModifiedDate":"2018-12-09"},{"lineNumber":82,"author":{"gitId":"felix-ong"},"content":"        String addMemberCommandWord \u003d","lastModifiedDate":"2021-10-12"},{"lineNumber":83,"author":{"gitId":"tsinyee"},"content":"                AddMemberCommand.COMMAND_WORD + NAME_DESC_AMY + PHONE_DESC_AMY + AVAILABILITY_DESC_AMY + TAG_DESC_Y2;","lastModifiedDate":"2021-10-21"},{"lineNumber":84,"author":{"gitId":"tsinyee"},"content":"        Person expectedPerson \u003d new PersonBuilder(AMY).build();","lastModifiedDate":"2021-10-10"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        ModelManager expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-12-09"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        expectedModel.addPerson(expectedPerson);","lastModifiedDate":"2018-12-09"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d LogicManager.FILE_OPS_ERROR_MESSAGE + DUMMY_IO_EXCEPTION;","lastModifiedDate":"2018-12-09"},{"lineNumber":88,"author":{"gitId":"tsinyee"},"content":"        assertCommandFailure(addMemberCommandWord, CommandException.class, expectedMessage, expectedModel);","lastModifiedDate":"2021-10-10"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public void getFilteredPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e logic.getFilteredPersonList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":94,"author":{"gitId":"YoYoCiti"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":95,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":96,"author":{"gitId":"YoYoCiti"},"content":"    @Test","lastModifiedDate":"2021-10-06"},{"lineNumber":97,"author":{"gitId":"YoYoCiti"},"content":"    public void getFilteredFacilityList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2021-10-06"},{"lineNumber":98,"author":{"gitId":"YoYoCiti"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e logic.getFilteredFacilityList().remove(0));","lastModifiedDate":"2021-10-06"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * - no exceptions are thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * - the feedback message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    private void assertCommandSuccess(String inputCommand, String expectedMessage,","lastModifiedDate":"2019-03-14"},{"lineNumber":109,"author":{"gitId":"-"},"content":"            Model expectedModel) throws CommandException, ParseException {","lastModifiedDate":"2019-03-14"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        CommandResult result \u003d logic.execute(inputCommand);","lastModifiedDate":"2019-03-14"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        assertEquals(expectedMessage, result.getFeedbackToUser());","lastModifiedDate":"2019-03-14"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2019-03-14"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":116,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a ParseException is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":117,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":118,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    private void assertParseException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-03-11"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, ParseException.class, expectedMessage);","lastModifiedDate":"2017-03-11"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-14"},{"lineNumber":124,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a CommandException is thrown and that the result message is correct.","lastModifiedDate":"2017-06-14"},{"lineNumber":125,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":126,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-14"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    private void assertCommandException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-06-14"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, CommandException.class, expectedMessage);","lastModifiedDate":"2017-06-14"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":132,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that the exception is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":133,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":134,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":136,"author":{"gitId":"-"},"content":"            String expectedMessage) {","lastModifiedDate":"2019-03-14"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-05-31"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, expectedException, expectedMessage, expectedModel);","lastModifiedDate":"2019-03-14"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":142,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":143,"author":{"gitId":"-"},"content":"     * - the {@code expectedException} is thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":144,"author":{"gitId":"-"},"content":"     * - the resulting error message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":145,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":146,"author":{"gitId":"-"},"content":"     * @see #assertCommandSuccess(String, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":147,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":149,"author":{"gitId":"-"},"content":"            String expectedMessage, Model expectedModel) {","lastModifiedDate":"2017-05-31"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        assertThrows(expectedException, expectedMessage, () -\u003e logic.execute(inputCommand));","lastModifiedDate":"2019-03-14"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2017-05-31"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-19"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":155,"author":{"gitId":"-"},"content":"     * A stub class to throw an {@code IOException} when the save method is called.","lastModifiedDate":"2018-12-09"},{"lineNumber":156,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    private static class JsonAddressBookIoExceptionThrowingStub extends JsonAddressBookStorage {","lastModifiedDate":"2018-12-09"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        private JsonAddressBookIoExceptionThrowingStub(Path filePath) {","lastModifiedDate":"2018-12-09"},{"lineNumber":159,"author":{"gitId":"-"},"content":"            super(filePath);","lastModifiedDate":"2018-12-09"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        public void saveAddressBook(ReadOnlyAddressBook addressBook, Path filePath) throws IOException {","lastModifiedDate":"2018-12-09"},{"lineNumber":164,"author":{"gitId":"-"},"content":"            throw DUMMY_IO_EXCEPTION;","lastModifiedDate":"2018-12-09"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":167,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"YoYoCiti":5,"-":149,"felix-ong":4,"tsinyee":9}},{"path":"src/test/java/seedu/address/logic/commands/AddAliasCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"YoYoCiti"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-10-17"},{"lineNumber":2,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":3,"author":{"gitId":"YoYoCiti"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-17"},{"lineNumber":4,"author":{"gitId":"YoYoCiti"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-17"},{"lineNumber":5,"author":{"gitId":"YoYoCiti"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-10-17"},{"lineNumber":6,"author":{"gitId":"YoYoCiti"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-17"},{"lineNumber":7,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":8,"author":{"gitId":"YoYoCiti"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-17"},{"lineNumber":9,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":10,"author":{"gitId":"YoYoCiti"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-10-17"},{"lineNumber":11,"author":{"gitId":"YoYoCiti"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2021-10-17"},{"lineNumber":12,"author":{"gitId":"YoYoCiti"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2021-10-17"},{"lineNumber":13,"author":{"gitId":"YoYoCiti"},"content":"import seedu.address.model.alias.Alias;","lastModifiedDate":"2021-10-18"},{"lineNumber":14,"author":{"gitId":"YoYoCiti"},"content":"import seedu.address.model.alias.CommandWord;","lastModifiedDate":"2021-10-18"},{"lineNumber":15,"author":{"gitId":"YoYoCiti"},"content":"import seedu.address.model.alias.Shortcut;","lastModifiedDate":"2021-10-18"},{"lineNumber":16,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":17,"author":{"gitId":"YoYoCiti"},"content":"public class AddAliasCommandTest {","lastModifiedDate":"2021-10-17"},{"lineNumber":18,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":19,"author":{"gitId":"YoYoCiti"},"content":"    @Test","lastModifiedDate":"2021-10-17"},{"lineNumber":20,"author":{"gitId":"YoYoCiti"},"content":"    public void constructor_null_exceptionThrown() {","lastModifiedDate":"2021-10-17"},{"lineNumber":21,"author":{"gitId":"YoYoCiti"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AddAliasCommand(null));","lastModifiedDate":"2021-10-18"},{"lineNumber":22,"author":{"gitId":"YoYoCiti"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":23,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":24,"author":{"gitId":"YoYoCiti"},"content":"    @Test","lastModifiedDate":"2021-10-17"},{"lineNumber":25,"author":{"gitId":"YoYoCiti"},"content":"    public void execute_addAlias_success() {","lastModifiedDate":"2021-10-17"},{"lineNumber":26,"author":{"gitId":"YoYoCiti"},"content":"        ModelManager model \u003d new ModelManager();","lastModifiedDate":"2021-10-17"},{"lineNumber":27,"author":{"gitId":"YoYoCiti"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2021-10-17"},{"lineNumber":28,"author":{"gitId":"YoYoCiti"},"content":"        Alias alias \u003d new Alias(new Shortcut(\"lf\"), new CommandWord(\"listf\"));","lastModifiedDate":"2021-10-18"},{"lineNumber":29,"author":{"gitId":"YoYoCiti"},"content":"        expectedModel.addAlias(alias);","lastModifiedDate":"2021-10-18"},{"lineNumber":30,"author":{"gitId":"YoYoCiti"},"content":"        String expectedMessage \u003d String.format(AddAliasCommand.MESSAGE_SUCCESS, \"listf\", \"lf\");","lastModifiedDate":"2021-10-17"},{"lineNumber":31,"author":{"gitId":"YoYoCiti"},"content":"        assertCommandSuccess(new AddAliasCommand(alias),","lastModifiedDate":"2021-10-18"},{"lineNumber":32,"author":{"gitId":"YoYoCiti"},"content":"                model, expectedMessage, expectedModel);","lastModifiedDate":"2021-10-17"},{"lineNumber":33,"author":{"gitId":"YoYoCiti"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":34,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":35,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":36,"author":{"gitId":"YoYoCiti"},"content":"    @Test","lastModifiedDate":"2021-10-17"},{"lineNumber":37,"author":{"gitId":"YoYoCiti"},"content":"    public void equals() {","lastModifiedDate":"2021-10-17"},{"lineNumber":38,"author":{"gitId":"YoYoCiti"},"content":"        AddAliasCommand command1 \u003d new AddAliasCommand(new Alias(new Shortcut(\"lf\"), new CommandWord(\"listf\")));","lastModifiedDate":"2021-10-18"},{"lineNumber":39,"author":{"gitId":"YoYoCiti"},"content":"        AddAliasCommand command2 \u003d new AddAliasCommand(new Alias(new Shortcut(\"lyf\"), new CommandWord(\"listf\")));","lastModifiedDate":"2021-10-18"},{"lineNumber":40,"author":{"gitId":"YoYoCiti"},"content":"        AddAliasCommand command1Copy \u003d new AddAliasCommand(new Alias(new Shortcut(\"lf\"), new CommandWord(\"listf\")));","lastModifiedDate":"2021-10-18"},{"lineNumber":41,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":42,"author":{"gitId":"YoYoCiti"},"content":"        assertTrue(command1.equals(command1));","lastModifiedDate":"2021-10-17"},{"lineNumber":43,"author":{"gitId":"YoYoCiti"},"content":"        assertTrue(command1.equals(command1Copy));","lastModifiedDate":"2021-10-17"},{"lineNumber":44,"author":{"gitId":"YoYoCiti"},"content":"        assertFalse(command1.equals(command2));","lastModifiedDate":"2021-10-17"},{"lineNumber":45,"author":{"gitId":"YoYoCiti"},"content":"        assertFalse(command1.equals(null));","lastModifiedDate":"2021-10-17"},{"lineNumber":46,"author":{"gitId":"YoYoCiti"},"content":"        assertFalse(command1.equals(\"10\"));","lastModifiedDate":"2021-10-17"},{"lineNumber":47,"author":{"gitId":"YoYoCiti"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":48,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":49,"author":{"gitId":"YoYoCiti"},"content":"}","lastModifiedDate":"2021-10-17"}],"authorContributionMap":{"YoYoCiti":49}},{"path":"src/test/java/seedu/address/logic/commands/AddFacilityCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Shruthi0310"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-10-05"},{"lineNumber":2,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":3,"author":{"gitId":"Shruthi0310"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-05"},{"lineNumber":4,"author":{"gitId":"Shruthi0310"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-05"},{"lineNumber":5,"author":{"gitId":"YoYoCiti"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-10-12"},{"lineNumber":6,"author":{"gitId":"Shruthi0310"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-05"},{"lineNumber":7,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":8,"author":{"gitId":"Shruthi0310"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-06"},{"lineNumber":9,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":10,"author":{"gitId":"YoYoCiti"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-10-12"},{"lineNumber":11,"author":{"gitId":"Shruthi0310"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2021-10-06"},{"lineNumber":12,"author":{"gitId":"YoYoCiti"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2021-10-12"},{"lineNumber":13,"author":{"gitId":"Shruthi0310"},"content":"import seedu.address.model.facility.Capacity;","lastModifiedDate":"2021-10-06"},{"lineNumber":14,"author":{"gitId":"Shruthi0310"},"content":"import seedu.address.model.facility.Facility;","lastModifiedDate":"2021-10-06"},{"lineNumber":15,"author":{"gitId":"Shruthi0310"},"content":"import seedu.address.model.facility.FacilityName;","lastModifiedDate":"2021-10-06"},{"lineNumber":16,"author":{"gitId":"Shruthi0310"},"content":"import seedu.address.model.facility.Location;","lastModifiedDate":"2021-10-06"},{"lineNumber":17,"author":{"gitId":"Shruthi0310"},"content":"import seedu.address.model.facility.Time;","lastModifiedDate":"2021-10-06"},{"lineNumber":18,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":19,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":20,"author":{"gitId":"Shruthi0310"},"content":"public class AddFacilityCommandTest {","lastModifiedDate":"2021-10-05"},{"lineNumber":21,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":22,"author":{"gitId":"Shruthi0310"},"content":"    @Test","lastModifiedDate":"2021-10-05"},{"lineNumber":23,"author":{"gitId":"Shruthi0310"},"content":"    public void constructor_null_exceptionThrown() {","lastModifiedDate":"2021-10-05"},{"lineNumber":24,"author":{"gitId":"Shruthi0310"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AddFacilityCommand(null));","lastModifiedDate":"2021-10-05"},{"lineNumber":25,"author":{"gitId":"Shruthi0310"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":26,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":27,"author":{"gitId":"Shruthi0310"},"content":"    @Test","lastModifiedDate":"2021-10-05"},{"lineNumber":28,"author":{"gitId":"Shruthi0310"},"content":"    public void execute_addSuccessful() {","lastModifiedDate":"2021-10-05"},{"lineNumber":29,"author":{"gitId":"Shruthi0310"},"content":"        ModelManager model \u003d new ModelManager();","lastModifiedDate":"2021-10-05"},{"lineNumber":30,"author":{"gitId":"felix-ong"},"content":"        Facility facility \u003d new Facility(new FacilityName(\"Court\"), new Location(\"Loc\"), new Time(\"1500\"),","lastModifiedDate":"2021-10-30"},{"lineNumber":31,"author":{"gitId":"Shruthi0310"},"content":"                new Capacity(\"5\"));","lastModifiedDate":"2021-10-05"},{"lineNumber":32,"author":{"gitId":"YoYoCiti"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2021-10-12"},{"lineNumber":33,"author":{"gitId":"YoYoCiti"},"content":"        expectedModel.addFacility(facility);","lastModifiedDate":"2021-10-12"},{"lineNumber":34,"author":{"gitId":"YoYoCiti"},"content":"        AddFacilityCommand command \u003d new AddFacilityCommand(facility);","lastModifiedDate":"2021-10-12"},{"lineNumber":35,"author":{"gitId":"YoYoCiti"},"content":"        String expectedMessage \u003d String.format(AddFacilityCommand.MESSAGE_SUCCESS, facility);","lastModifiedDate":"2021-10-12"},{"lineNumber":36,"author":{"gitId":"YoYoCiti"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-10-12"},{"lineNumber":37,"author":{"gitId":"Shruthi0310"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":38,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":39,"author":{"gitId":"Shruthi0310"},"content":"    @Test","lastModifiedDate":"2021-10-05"},{"lineNumber":40,"author":{"gitId":"Shruthi0310"},"content":"    public void equals() {","lastModifiedDate":"2021-10-05"},{"lineNumber":41,"author":{"gitId":"felix-ong"},"content":"        Facility court \u003d new Facility(new FacilityName(\"Court\"), new Location(\"Loc\"), new Time(\"1500\"),","lastModifiedDate":"2021-10-30"},{"lineNumber":42,"author":{"gitId":"Shruthi0310"},"content":"                new Capacity(\"5\"));","lastModifiedDate":"2021-10-05"},{"lineNumber":43,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":44,"author":{"gitId":"felix-ong"},"content":"        Facility field \u003d new Facility(new FacilityName(\"Field\"), new Location(\"Test\"), new Time(\"1300\"),","lastModifiedDate":"2021-10-30"},{"lineNumber":45,"author":{"gitId":"Shruthi0310"},"content":"                new Capacity(\"10\"));","lastModifiedDate":"2021-10-05"},{"lineNumber":46,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":47,"author":{"gitId":"Shruthi0310"},"content":"        AddFacilityCommand addCourtCommand \u003d new AddFacilityCommand(court);","lastModifiedDate":"2021-10-05"},{"lineNumber":48,"author":{"gitId":"Shruthi0310"},"content":"        AddFacilityCommand addCourtCommandCopy \u003d new AddFacilityCommand(court);","lastModifiedDate":"2021-10-05"},{"lineNumber":49,"author":{"gitId":"Shruthi0310"},"content":"        AddFacilityCommand addFieldCommand \u003d new AddFacilityCommand(field);","lastModifiedDate":"2021-10-05"},{"lineNumber":50,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":51,"author":{"gitId":"Shruthi0310"},"content":"        assertTrue(addCourtCommand.equals(addCourtCommand));","lastModifiedDate":"2021-10-05"},{"lineNumber":52,"author":{"gitId":"Shruthi0310"},"content":"        assertTrue(addCourtCommand.equals(addCourtCommandCopy));","lastModifiedDate":"2021-10-05"},{"lineNumber":53,"author":{"gitId":"Shruthi0310"},"content":"        assertFalse(addCourtCommand.equals(addFieldCommand));","lastModifiedDate":"2021-10-05"},{"lineNumber":54,"author":{"gitId":"Shruthi0310"},"content":"        assertFalse(addCourtCommand.equals(null));","lastModifiedDate":"2021-10-05"},{"lineNumber":55,"author":{"gitId":"Shruthi0310"},"content":"        assertFalse(addCourtCommand.equals(\"10\"));","lastModifiedDate":"2021-10-05"},{"lineNumber":56,"author":{"gitId":"Shruthi0310"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":57,"author":{"gitId":"Shruthi0310"},"content":"}","lastModifiedDate":"2021-10-05"}],"authorContributionMap":{"YoYoCiti":8,"Shruthi0310":46,"felix-ong":3}},{"path":"src/test/java/seedu/address/logic/commands/AddMemberCommandIntegrationTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2017-07-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":5,"author":{"gitId":"YoYoCiti"},"content":"import static seedu.address.testutil.TypicalAddressBook.getTypicalAddressBook;","lastModifiedDate":"2021-10-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-15"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-15"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-15"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-06-15"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-06-15"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-15"},{"lineNumber":17,"author":{"gitId":"tsinyee"},"content":" * Contains integration tests (interaction with the Model) for {@code AddMemberCommand}.","lastModifiedDate":"2021-10-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-15"},{"lineNumber":19,"author":{"gitId":"tsinyee"},"content":"public class AddMemberCommandIntegrationTest {","lastModifiedDate":"2021-10-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private Model model;","lastModifiedDate":"2017-06-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2017-06-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public void execute_newPerson_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-06-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-06-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        expectedModel.addPerson(validPerson);","lastModifiedDate":"2017-06-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":35,"author":{"gitId":"tsinyee"},"content":"        assertCommandSuccess(new AddMemberCommand(validPerson), model,","lastModifiedDate":"2021-10-05"},{"lineNumber":36,"author":{"gitId":"tsinyee"},"content":"                String.format(AddMemberCommand.MESSAGE_SUCCESS, validPerson), expectedModel);","lastModifiedDate":"2021-10-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public void execute_duplicatePerson_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        Person personInList \u003d model.getAddressBook().getPersonList().get(0);","lastModifiedDate":"2018-01-10"},{"lineNumber":42,"author":{"gitId":"tsinyee"},"content":"        assertCommandFailure(new AddMemberCommand(personInList), model, AddMemberCommand.MESSAGE_DUPLICATE_MEMBER);","lastModifiedDate":"2021-10-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-15"}],"authorContributionMap":{"YoYoCiti":1,"-":39,"tsinyee":5}},{"path":"src/test/java/seedu/address/logic/commands/AddMemberCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-05-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-01-10"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-05-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-12"},{"lineNumber":12,"author":{"gitId":"Shruthi0310"},"content":"import java.util.List;","lastModifiedDate":"2021-10-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":19,"author":{"gitId":"Shruthi0310"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-10-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-05-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-05-04"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-05-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2017-05-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":25,"author":{"gitId":"YoYoCiti"},"content":"import seedu.address.model.alias.Alias;","lastModifiedDate":"2021-10-18"},{"lineNumber":26,"author":{"gitId":"YoYoCiti"},"content":"import seedu.address.model.alias.AliasMap;","lastModifiedDate":"2021-10-18"},{"lineNumber":27,"author":{"gitId":"YoYoCiti"},"content":"import seedu.address.model.alias.CommandWord;","lastModifiedDate":"2021-10-18"},{"lineNumber":28,"author":{"gitId":"YoYoCiti"},"content":"import seedu.address.model.alias.Shortcut;","lastModifiedDate":"2021-10-18"},{"lineNumber":29,"author":{"gitId":"YoYoCiti"},"content":"import seedu.address.model.facility.Facility;","lastModifiedDate":"2021-09-29"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-05-12"},{"lineNumber":31,"author":{"gitId":"tsinyee"},"content":"import seedu.address.model.sort.SortOrder;","lastModifiedDate":"2021-10-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-05-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":34,"author":{"gitId":"tsinyee"},"content":"public class AddMemberCommandTest {","lastModifiedDate":"2021-10-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void constructor_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":38,"author":{"gitId":"tsinyee"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AddMemberCommand(null));","lastModifiedDate":"2021-10-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void execute_personAcceptedByModel_addSuccessful() throws Exception {","lastModifiedDate":"2017-05-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        ModelStubAcceptingPersonAdded modelStub \u003d new ModelStubAcceptingPersonAdded();","lastModifiedDate":"2017-05-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-05-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":46,"author":{"gitId":"tsinyee"},"content":"        CommandResult commandResult \u003d new AddMemberCommand(validPerson).execute(modelStub);","lastModifiedDate":"2021-10-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":48,"author":{"gitId":"tsinyee"},"content":"        assertEquals(String.format(AddMemberCommand.MESSAGE_SUCCESS, validPerson), commandResult.getFeedbackToUser());","lastModifiedDate":"2021-10-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertEquals(Arrays.asList(validPerson), modelStub.personsAdded);","lastModifiedDate":"2017-05-12"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void execute_duplicatePerson_throwsCommandException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-05-12"},{"lineNumber":55,"author":{"gitId":"felix-ong"},"content":"        AddMemberCommand addMemberCommand \u003d new AddMemberCommand(validPerson);","lastModifiedDate":"2021-10-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        ModelStub modelStub \u003d new ModelStubWithPerson(validPerson);","lastModifiedDate":"2018-08-07"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":58,"author":{"gitId":"tsinyee"},"content":"        assertThrows(CommandException.class,","lastModifiedDate":"2021-10-05"},{"lineNumber":59,"author":{"gitId":"YoYoCiti"},"content":"                AddMemberCommand.MESSAGE_DUPLICATE_MEMBER, () -\u003e addMemberCommand.execute(modelStub));","lastModifiedDate":"2021-10-09"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-22"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        Person alice \u003d new PersonBuilder().withName(\"Alice\").build();","lastModifiedDate":"2017-06-22"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        Person bob \u003d new PersonBuilder().withName(\"Bob\").build();","lastModifiedDate":"2017-06-22"},{"lineNumber":66,"author":{"gitId":"tsinyee"},"content":"        AddMemberCommand addAliceCommand \u003d new AddMemberCommand(alice);","lastModifiedDate":"2021-10-05"},{"lineNumber":67,"author":{"gitId":"tsinyee"},"content":"        AddMemberCommand addBobCommand \u003d new AddMemberCommand(bob);","lastModifiedDate":"2021-10-05"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":73,"author":{"gitId":"tsinyee"},"content":"        AddMemberCommand addAliceCommandCopy \u003d new AddMemberCommand(alice);","lastModifiedDate":"2021-10-05"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommandCopy));","lastModifiedDate":"2017-06-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(1));","lastModifiedDate":"2017-06-22"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(null));","lastModifiedDate":"2017-06-22"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(addBobCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":87,"author":{"gitId":"Moley456"},"content":"     * A default model stub that have all the methods failing.","lastModifiedDate":"2021-10-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    private class ModelStub implements Model {","lastModifiedDate":"2017-05-12"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":92,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":112,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-11-27"},{"lineNumber":117,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":120,"author":{"gitId":"YoYoCiti"},"content":"        @Override","lastModifiedDate":"2021-10-17"},{"lineNumber":121,"author":{"gitId":"YoYoCiti"},"content":"        public AliasMap getAliases() {","lastModifiedDate":"2021-10-18"},{"lineNumber":122,"author":{"gitId":"YoYoCiti"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-17"},{"lineNumber":123,"author":{"gitId":"YoYoCiti"},"content":"        }","lastModifiedDate":"2021-10-17"},{"lineNumber":124,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":125,"author":{"gitId":"YoYoCiti"},"content":"        @Override","lastModifiedDate":"2021-10-17"},{"lineNumber":126,"author":{"gitId":"YoYoCiti"},"content":"        public void addAlias(Alias alias) {","lastModifiedDate":"2021-10-18"},{"lineNumber":127,"author":{"gitId":"YoYoCiti"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-17"},{"lineNumber":128,"author":{"gitId":"YoYoCiti"},"content":"        }","lastModifiedDate":"2021-10-17"},{"lineNumber":129,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":130,"author":{"gitId":"YoYoCiti"},"content":"        @Override","lastModifiedDate":"2021-10-17"},{"lineNumber":131,"author":{"gitId":"YoYoCiti"},"content":"        public CommandWord removeAlias(Shortcut shortcut) {","lastModifiedDate":"2021-10-18"},{"lineNumber":132,"author":{"gitId":"YoYoCiti"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-17"},{"lineNumber":133,"author":{"gitId":"YoYoCiti"},"content":"        }","lastModifiedDate":"2021-10-17"},{"lineNumber":134,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        public void addPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":137,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":140,"author":{"gitId":"Shruthi0310"},"content":"        @Override","lastModifiedDate":"2021-10-05"},{"lineNumber":141,"author":{"gitId":"Shruthi0310"},"content":"        public void addFacility(Facility facility) {","lastModifiedDate":"2021-10-05"},{"lineNumber":142,"author":{"gitId":"Shruthi0310"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-05"},{"lineNumber":143,"author":{"gitId":"Shruthi0310"},"content":"        }","lastModifiedDate":"2021-10-05"},{"lineNumber":144,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":145,"author":{"gitId":"Shruthi0310"},"content":"        @Override","lastModifiedDate":"2021-10-12"},{"lineNumber":146,"author":{"gitId":"YoYoCiti"},"content":"        public int split(Predicate\u003cPerson\u003e person) {","lastModifiedDate":"2021-10-26"},{"lineNumber":147,"author":{"gitId":"Shruthi0310"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-12"},{"lineNumber":148,"author":{"gitId":"Shruthi0310"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":149,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        public void setAddressBook(ReadOnlyAddressBook newData) {","lastModifiedDate":"2018-11-27"},{"lineNumber":152,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2017-05-12"},{"lineNumber":157,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-06"},{"lineNumber":162,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-06"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":165,"author":{"gitId":"YoYoCiti"},"content":"        @Override","lastModifiedDate":"2021-10-12"},{"lineNumber":166,"author":{"gitId":"YoYoCiti"},"content":"        public boolean hasFacility(Facility facility) {","lastModifiedDate":"2021-10-12"},{"lineNumber":167,"author":{"gitId":"YoYoCiti"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-12"},{"lineNumber":168,"author":{"gitId":"YoYoCiti"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":169,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        public void deletePerson(Person target) {","lastModifiedDate":"2018-08-08"},{"lineNumber":172,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":175,"author":{"gitId":"YoYoCiti"},"content":"        @Override","lastModifiedDate":"2021-10-08"},{"lineNumber":176,"author":{"gitId":"YoYoCiti"},"content":"        public void deleteFacility(Facility target) {","lastModifiedDate":"2021-10-08"},{"lineNumber":177,"author":{"gitId":"YoYoCiti"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-08"},{"lineNumber":178,"author":{"gitId":"YoYoCiti"},"content":"        }","lastModifiedDate":"2021-10-08"},{"lineNumber":179,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":182,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":185,"author":{"gitId":"YoYoCiti"},"content":"        @Override","lastModifiedDate":"2021-10-12"},{"lineNumber":186,"author":{"gitId":"YoYoCiti"},"content":"        public void setFacility(Facility target, Facility editedFacility) {","lastModifiedDate":"2021-10-12"},{"lineNumber":187,"author":{"gitId":"YoYoCiti"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-12"},{"lineNumber":188,"author":{"gitId":"YoYoCiti"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":189,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":190,"author":{"gitId":"Shruthi0310"},"content":"        @Override","lastModifiedDate":"2021-10-21"},{"lineNumber":191,"author":{"gitId":"Shruthi0310"},"content":"        public void resetTodayAttendance() {","lastModifiedDate":"2021-10-21"},{"lineNumber":192,"author":{"gitId":"Shruthi0310"},"content":"            throw new AssertionError(\"This method should not be called\");","lastModifiedDate":"2021-10-21"},{"lineNumber":193,"author":{"gitId":"Shruthi0310"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":194,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":195,"author":{"gitId":"Shruthi0310"},"content":"        @Override","lastModifiedDate":"2021-10-21"},{"lineNumber":196,"author":{"gitId":"Shruthi0310"},"content":"        public void markMembersAttendance(List\u003cIndex\u003e indices) {","lastModifiedDate":"2021-10-21"},{"lineNumber":197,"author":{"gitId":"Shruthi0310"},"content":"            throw new AssertionError(\"This method should not be called\");","lastModifiedDate":"2021-10-21"},{"lineNumber":198,"author":{"gitId":"Shruthi0310"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":199,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":200,"author":{"gitId":"Shruthi0310"},"content":"        @Override","lastModifiedDate":"2021-10-21"},{"lineNumber":201,"author":{"gitId":"Shruthi0310"},"content":"        public void markOneMemberAttendance(Person person) {","lastModifiedDate":"2021-10-21"},{"lineNumber":202,"author":{"gitId":"Shruthi0310"},"content":"            throw new AssertionError(\"This method should not be called\");","lastModifiedDate":"2021-10-21"},{"lineNumber":203,"author":{"gitId":"Shruthi0310"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":204,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":205,"author":{"gitId":"Shruthi0310"},"content":"        @Override","lastModifiedDate":"2021-10-21"},{"lineNumber":206,"author":{"gitId":"Shruthi0310"},"content":"        public void unmarkMembersAttendance(List\u003cIndex\u003e indices) {","lastModifiedDate":"2021-10-21"},{"lineNumber":207,"author":{"gitId":"Shruthi0310"},"content":"            throw new AssertionError(\"This method should not be called\");","lastModifiedDate":"2021-10-21"},{"lineNumber":208,"author":{"gitId":"Shruthi0310"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":209,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":210,"author":{"gitId":"Shruthi0310"},"content":"        @Override","lastModifiedDate":"2021-10-21"},{"lineNumber":211,"author":{"gitId":"Shruthi0310"},"content":"        public void unmarkOneMemberAttendance(Person person) {","lastModifiedDate":"2021-10-21"},{"lineNumber":212,"author":{"gitId":"Shruthi0310"},"content":"            throw new AssertionError(\"This method should not be called\");","lastModifiedDate":"2021-10-21"},{"lineNumber":213,"author":{"gitId":"Shruthi0310"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":214,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":215,"author":{"gitId":"Shruthi0310"},"content":"        @Override","lastModifiedDate":"2021-10-21"},{"lineNumber":216,"author":{"gitId":"Shruthi0310"},"content":"        public boolean isWithinListIndex(List\u003cIndex\u003e indices) {","lastModifiedDate":"2021-10-21"},{"lineNumber":217,"author":{"gitId":"Shruthi0310"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-21"},{"lineNumber":218,"author":{"gitId":"Shruthi0310"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":219,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":220,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":221,"author":{"gitId":"-"},"content":"        public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":222,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":223,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":224,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":225,"author":{"gitId":"Shruthi0310"},"content":"        @Override","lastModifiedDate":"2021-10-05"},{"lineNumber":226,"author":{"gitId":"Shruthi0310"},"content":"        public ObservableList\u003cFacility\u003e getFilteredFacilityList() {","lastModifiedDate":"2021-10-05"},{"lineNumber":227,"author":{"gitId":"Shruthi0310"},"content":"            throw new AssertionError(\"This method should not be called\");","lastModifiedDate":"2021-10-05"},{"lineNumber":228,"author":{"gitId":"Shruthi0310"},"content":"        }","lastModifiedDate":"2021-10-05"},{"lineNumber":229,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":230,"author":{"gitId":"Moley456"},"content":"        @Override","lastModifiedDate":"2021-10-23"},{"lineNumber":231,"author":{"gitId":"Moley456"},"content":"        public Person getSamePerson(Person person) {","lastModifiedDate":"2021-10-23"},{"lineNumber":232,"author":{"gitId":"Moley456"},"content":"            throw new AssertionError(\"This method should not be called\");","lastModifiedDate":"2021-10-23"},{"lineNumber":233,"author":{"gitId":"Moley456"},"content":"        }","lastModifiedDate":"2021-10-23"},{"lineNumber":234,"author":{"gitId":"Moley456"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":235,"author":{"gitId":"YoYoCiti"},"content":"        @Override","lastModifiedDate":"2021-10-06"},{"lineNumber":236,"author":{"gitId":"YoYoCiti"},"content":"        public void resetFacilityList() {","lastModifiedDate":"2021-10-06"},{"lineNumber":237,"author":{"gitId":"YoYoCiti"},"content":"            throw new AssertionError(\"This method should not be called\");","lastModifiedDate":"2021-10-06"},{"lineNumber":238,"author":{"gitId":"YoYoCiti"},"content":"        }","lastModifiedDate":"2021-10-06"},{"lineNumber":239,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":240,"author":{"gitId":"felix-ong"},"content":"        @Override","lastModifiedDate":"2021-10-09"},{"lineNumber":241,"author":{"gitId":"felix-ong"},"content":"        public void resetMemberList() {","lastModifiedDate":"2021-10-09"},{"lineNumber":242,"author":{"gitId":"felix-ong"},"content":"            throw new AssertionError(\"This method should not be called\");","lastModifiedDate":"2021-10-09"},{"lineNumber":243,"author":{"gitId":"felix-ong"},"content":"        }","lastModifiedDate":"2021-10-09"},{"lineNumber":244,"author":{"gitId":"felix-ong"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":245,"author":{"gitId":"tsinyee"},"content":"        @Override","lastModifiedDate":"2021-10-19"},{"lineNumber":246,"author":{"gitId":"tsinyee"},"content":"        public void sortMemberList(SortOrder sortOrder) {","lastModifiedDate":"2021-10-24"},{"lineNumber":247,"author":{"gitId":"tsinyee"},"content":"            throw new AssertionError(\"This method should not be called\");","lastModifiedDate":"2021-10-19"},{"lineNumber":248,"author":{"gitId":"tsinyee"},"content":"        }","lastModifiedDate":"2021-10-19"},{"lineNumber":249,"author":{"gitId":"tsinyee"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":250,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":251,"author":{"gitId":"-"},"content":"        public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2018-01-10"},{"lineNumber":252,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":253,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":254,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":255,"author":{"gitId":"YoYoCiti"},"content":"        @Override","lastModifiedDate":"2021-09-29"},{"lineNumber":256,"author":{"gitId":"YoYoCiti"},"content":"        public void updateFilteredFacilityList(Predicate\u003cFacility\u003e predicate) {","lastModifiedDate":"2021-09-29"},{"lineNumber":257,"author":{"gitId":"YoYoCiti"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-09-29"},{"lineNumber":258,"author":{"gitId":"YoYoCiti"},"content":"        }","lastModifiedDate":"2021-09-29"},{"lineNumber":259,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":260,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":261,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":262,"author":{"gitId":"-"},"content":"     * A Model stub that contains a single person.","lastModifiedDate":"2018-08-07"},{"lineNumber":263,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":264,"author":{"gitId":"-"},"content":"    private class ModelStubWithPerson extends ModelStub {","lastModifiedDate":"2018-08-07"},{"lineNumber":265,"author":{"gitId":"-"},"content":"        private final Person person;","lastModifiedDate":"2018-08-07"},{"lineNumber":266,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":267,"author":{"gitId":"-"},"content":"        ModelStubWithPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":268,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":269,"author":{"gitId":"-"},"content":"            this.person \u003d person;","lastModifiedDate":"2018-08-07"},{"lineNumber":270,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":271,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":272,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":273,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":274,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":275,"author":{"gitId":"-"},"content":"            return this.person.isSamePerson(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":276,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":277,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":278,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":279,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":280,"author":{"gitId":"-"},"content":"     * A Model stub that always accept the person being added.","lastModifiedDate":"2017-05-12"},{"lineNumber":281,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":282,"author":{"gitId":"-"},"content":"    private class ModelStubAcceptingPersonAdded extends ModelStub {","lastModifiedDate":"2017-05-12"},{"lineNumber":283,"author":{"gitId":"-"},"content":"        final ArrayList\u003cPerson\u003e personsAdded \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2017-05-12"},{"lineNumber":284,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":285,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-07"},{"lineNumber":286,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":287,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":288,"author":{"gitId":"-"},"content":"            return personsAdded.stream().anyMatch(person::isSamePerson);","lastModifiedDate":"2018-08-07"},{"lineNumber":289,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":290,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":291,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":292,"author":{"gitId":"-"},"content":"        public void addPerson(Person person) {","lastModifiedDate":"2018-08-08"},{"lineNumber":293,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":294,"author":{"gitId":"-"},"content":"            personsAdded.add(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":295,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":296,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":297,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":298,"author":{"gitId":"-"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2017-05-04"},{"lineNumber":299,"author":{"gitId":"-"},"content":"            return new AddressBook();","lastModifiedDate":"2017-05-04"},{"lineNumber":300,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":301,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":302,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":303,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-12"}],"authorContributionMap":{"YoYoCiti":47,"Shruthi0310":46,"Moley456":6,"-":184,"tsinyee":14,"felix-ong":6}},{"path":"src/test/java/seedu/address/logic/commands/ClearAttendanceCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Shruthi0310"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-10-21"},{"lineNumber":2,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":3,"author":{"gitId":"Shruthi0310"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-10-21"},{"lineNumber":4,"author":{"gitId":"Shruthi0310"},"content":"import static seedu.address.testutil.TypicalAddressBook.getTypicalAddressBook;","lastModifiedDate":"2021-10-21"},{"lineNumber":5,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":6,"author":{"gitId":"Shruthi0310"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-21"},{"lineNumber":7,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":8,"author":{"gitId":"Shruthi0310"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2021-10-22"},{"lineNumber":9,"author":{"gitId":"Shruthi0310"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-10-21"},{"lineNumber":10,"author":{"gitId":"Shruthi0310"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2021-10-21"},{"lineNumber":11,"author":{"gitId":"Shruthi0310"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2021-10-21"},{"lineNumber":12,"author":{"gitId":"Shruthi0310"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2021-10-21"},{"lineNumber":13,"author":{"gitId":"Shruthi0310"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2021-10-22"},{"lineNumber":14,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":15,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":16,"author":{"gitId":"Shruthi0310"},"content":"class ClearAttendanceCommandTest {","lastModifiedDate":"2021-10-21"},{"lineNumber":17,"author":{"gitId":"Shruthi0310"},"content":"    private Model model \u003d new ModelManager(new AddressBook(getTypicalAddressBook()), new UserPrefs());","lastModifiedDate":"2021-10-22"},{"lineNumber":18,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":19,"author":{"gitId":"Shruthi0310"},"content":"    @Test","lastModifiedDate":"2021-10-21"},{"lineNumber":20,"author":{"gitId":"Shruthi0310"},"content":"    public void execute_someMembersPresent_success() {","lastModifiedDate":"2021-10-22"},{"lineNumber":21,"author":{"gitId":"Shruthi0310"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2021-10-22"},{"lineNumber":22,"author":{"gitId":"Shruthi0310"},"content":"        person.setPresent();","lastModifiedDate":"2021-10-22"},{"lineNumber":23,"author":{"gitId":"Shruthi0310"},"content":"        model.addPerson(person);","lastModifiedDate":"2021-10-22"},{"lineNumber":24,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":25,"author":{"gitId":"Shruthi0310"},"content":"        ClearAttendanceCommand command \u003d new ClearAttendanceCommand();","lastModifiedDate":"2021-10-21"},{"lineNumber":26,"author":{"gitId":"Shruthi0310"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2021-10-21"},{"lineNumber":27,"author":{"gitId":"Shruthi0310"},"content":"        expectedModel.resetTodayAttendance();","lastModifiedDate":"2021-10-21"},{"lineNumber":28,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":29,"author":{"gitId":"Shruthi0310"},"content":"        assertCommandSuccess(command, model, ClearAttendanceCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2021-10-21"},{"lineNumber":30,"author":{"gitId":"Shruthi0310"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":31,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":32,"author":{"gitId":"Shruthi0310"},"content":"    @Test","lastModifiedDate":"2021-10-21"},{"lineNumber":33,"author":{"gitId":"Shruthi0310"},"content":"    public void execute_allMembersAbsent_success() {","lastModifiedDate":"2021-10-21"},{"lineNumber":34,"author":{"gitId":"Shruthi0310"},"content":"        Model model \u003d new ModelManager(new AddressBook(getTypicalAddressBook()), new UserPrefs());","lastModifiedDate":"2021-10-22"},{"lineNumber":35,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":36,"author":{"gitId":"Shruthi0310"},"content":"        ClearAttendanceCommand command \u003d new ClearAttendanceCommand();","lastModifiedDate":"2021-10-21"},{"lineNumber":37,"author":{"gitId":"Shruthi0310"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2021-10-21"},{"lineNumber":38,"author":{"gitId":"Shruthi0310"},"content":"        expectedModel.resetTodayAttendance();","lastModifiedDate":"2021-10-21"},{"lineNumber":39,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":40,"author":{"gitId":"Shruthi0310"},"content":"        assertCommandSuccess(command, model, ClearAttendanceCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2021-10-21"},{"lineNumber":41,"author":{"gitId":"Shruthi0310"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":42,"author":{"gitId":"Shruthi0310"},"content":"}","lastModifiedDate":"2021-10-21"}],"authorContributionMap":{"Shruthi0310":42}},{"path":"src/test/java/seedu/address/logic/commands/ClearFacilitiesCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"YoYoCiti"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-10-09"},{"lineNumber":2,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":3,"author":{"gitId":"YoYoCiti"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-10-09"},{"lineNumber":4,"author":{"gitId":"YoYoCiti"},"content":"import static seedu.address.testutil.TypicalAddressBook.getTypicalAddressBook;","lastModifiedDate":"2021-10-09"},{"lineNumber":5,"author":{"gitId":"YoYoCiti"},"content":"import static seedu.address.testutil.TypicalAddressBook.getTypicalAddressBookEmptyFacilityList;","lastModifiedDate":"2021-10-09"},{"lineNumber":6,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":7,"author":{"gitId":"YoYoCiti"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-09"},{"lineNumber":8,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":9,"author":{"gitId":"YoYoCiti"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-10-09"},{"lineNumber":10,"author":{"gitId":"YoYoCiti"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2021-10-09"},{"lineNumber":11,"author":{"gitId":"YoYoCiti"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2021-10-09"},{"lineNumber":12,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":13,"author":{"gitId":"YoYoCiti"},"content":"public class ClearFacilitiesCommandTest {","lastModifiedDate":"2021-10-09"},{"lineNumber":14,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":15,"author":{"gitId":"YoYoCiti"},"content":"    @Test","lastModifiedDate":"2021-10-09"},{"lineNumber":16,"author":{"gitId":"YoYoCiti"},"content":"    public void execute_emptySportsPA_success() {","lastModifiedDate":"2021-10-09"},{"lineNumber":17,"author":{"gitId":"YoYoCiti"},"content":"        Model model \u003d new ModelManager();","lastModifiedDate":"2021-10-09"},{"lineNumber":18,"author":{"gitId":"YoYoCiti"},"content":"        Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2021-10-09"},{"lineNumber":19,"author":{"gitId":"YoYoCiti"},"content":"        assertCommandSuccess(","lastModifiedDate":"2021-10-09"},{"lineNumber":20,"author":{"gitId":"YoYoCiti"},"content":"                new ClearFacilitiesCommand(), model, ClearFacilitiesCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2021-10-09"},{"lineNumber":21,"author":{"gitId":"YoYoCiti"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":22,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":23,"author":{"gitId":"YoYoCiti"},"content":"    @Test","lastModifiedDate":"2021-10-09"},{"lineNumber":24,"author":{"gitId":"YoYoCiti"},"content":"    public void execute_nonEmptySportsPA_success() {","lastModifiedDate":"2021-10-09"},{"lineNumber":25,"author":{"gitId":"YoYoCiti"},"content":"        Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2021-10-09"},{"lineNumber":26,"author":{"gitId":"YoYoCiti"},"content":"        Model expectedModel \u003d new ModelManager(getTypicalAddressBookEmptyFacilityList(), new UserPrefs());","lastModifiedDate":"2021-10-09"},{"lineNumber":27,"author":{"gitId":"YoYoCiti"},"content":"        assertCommandSuccess(","lastModifiedDate":"2021-10-09"},{"lineNumber":28,"author":{"gitId":"YoYoCiti"},"content":"                new ClearFacilitiesCommand(), model, ClearFacilitiesCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2021-10-09"},{"lineNumber":29,"author":{"gitId":"YoYoCiti"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":30,"author":{"gitId":"YoYoCiti"},"content":"}","lastModifiedDate":"2021-10-09"}],"authorContributionMap":{"YoYoCiti":30}},{"path":"src/test/java/seedu/address/logic/commands/ClearMembersCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":4,"author":{"gitId":"YoYoCiti"},"content":"import static seedu.address.testutil.TypicalAddressBook.getTypicalAddressBook;","lastModifiedDate":"2021-10-09"},{"lineNumber":5,"author":{"gitId":"felix-ong"},"content":"import static seedu.address.testutil.TypicalAddressBook.getTypicalAddressBookEmptyMemberList;","lastModifiedDate":"2021-10-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":13,"author":{"gitId":"felix-ong"},"content":"public class ClearMembersCommandTest {","lastModifiedDate":"2021-09-30"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void execute_emptyAddressBook_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        Model model \u003d new ModelManager();","lastModifiedDate":"2017-06-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":20,"author":{"gitId":"felix-ong"},"content":"        assertCommandSuccess(new ClearMembersCommand(), model, ClearMembersCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2021-09-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void execute_nonEmptyAddressBook_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":26,"author":{"gitId":"felix-ong"},"content":"        Model expectedModel \u003d new ModelManager(getTypicalAddressBookEmptyMemberList(), new UserPrefs());","lastModifiedDate":"2021-10-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":28,"author":{"gitId":"felix-ong"},"content":"        assertCommandSuccess(new ClearMembersCommand(), model, ClearMembersCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2021-09-30"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-08"}],"authorContributionMap":{"YoYoCiti":1,"-":25,"felix-ong":5}},{"path":"src/test/java/seedu/address/logic/commands/CommandResultTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2018-12-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class CommandResultTest {","lastModifiedDate":"2018-12-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-12-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        CommandResult commandResult \u003d new CommandResult(\"feedback\");","lastModifiedDate":"2018-12-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2018-12-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        assertTrue(commandResult.equals(new CommandResult(\"feedback\")));","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        assertTrue(commandResult.equals(new CommandResult(\"feedback\", false, false)));","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"YoYoCiti"},"content":"        assertTrue(new CommandResult(\"feedback\",","lastModifiedDate":"2021-10-24"},{"lineNumber":19,"author":{"gitId":"YoYoCiti"},"content":"                false, false, true, false).equals(","lastModifiedDate":"2021-10-24"},{"lineNumber":20,"author":{"gitId":"YoYoCiti"},"content":"                new CommandResult(\"feedback\", false, true, false)));","lastModifiedDate":"2021-10-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-12-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertTrue(commandResult.equals(commandResult));","lastModifiedDate":"2018-12-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(null));","lastModifiedDate":"2018-12-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(0.5f));","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // different feedbackToUser value -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(new CommandResult(\"different\")));","lastModifiedDate":"2018-12-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        // different showHelp value -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(new CommandResult(\"feedback\", true, false)));","lastModifiedDate":"2018-12-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        // different exit value -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(new CommandResult(\"feedback\", false, true)));","lastModifiedDate":"2018-12-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void hashcode() {","lastModifiedDate":"2018-12-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        CommandResult commandResult \u003d new CommandResult(\"feedback\");","lastModifiedDate":"2018-12-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        // same values -\u003e returns same hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertEquals(commandResult.hashCode(), new CommandResult(\"feedback\").hashCode());","lastModifiedDate":"2018-12-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // different feedbackToUser value -\u003e returns different hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertNotEquals(commandResult.hashCode(), new CommandResult(\"different\").hashCode());","lastModifiedDate":"2018-12-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // different showHelp value -\u003e returns different hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertNotEquals(commandResult.hashCode(), new CommandResult(\"feedback\", true, false).hashCode());","lastModifiedDate":"2018-12-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        // different exit value -\u003e returns different hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertNotEquals(commandResult.hashCode(), new CommandResult(\"feedback\", false, true).hashCode());","lastModifiedDate":"2018-12-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":57,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-12-09"}],"authorContributionMap":{"YoYoCiti":3,"-":54}},{"path":"src/test/java/seedu/address/logic/commands/CommandTestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"felix-ong"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_AVAILABILITY;","lastModifiedDate":"2021-10-12"},{"lineNumber":6,"author":{"gitId":"felix-ong"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_CAPACITY;","lastModifiedDate":"2021-10-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2021-10-12"},{"lineNumber":8,"author":{"gitId":"felix-ong"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_LOCATION;","lastModifiedDate":"2021-10-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2021-10-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2021-10-12"},{"lineNumber":11,"author":{"gitId":"tsinyee"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_SORT_ORDER;","lastModifiedDate":"2021-10-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2021-10-25"},{"lineNumber":13,"author":{"gitId":"felix-ong"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TIME;","lastModifiedDate":"2021-10-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-06-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-07-20"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2018-01-31"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-06-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-06-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-05"},{"lineNumber":24,"author":{"gitId":"YoYoCiti"},"content":"import seedu.address.model.facility.Facility;","lastModifiedDate":"2021-10-09"},{"lineNumber":25,"author":{"gitId":"YoYoCiti"},"content":"import seedu.address.model.facility.LocationContainsKeywordsPredicate;","lastModifiedDate":"2021-10-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-07-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":28,"author":{"gitId":"tsinyee"},"content":"import seedu.address.testutil.EditMemberDescriptorBuilder;","lastModifiedDate":"2021-10-10"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":" * Contains helper methods for testing commands.","lastModifiedDate":"2017-06-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"public class CommandTestUtil {","lastModifiedDate":"2017-06-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_AMY \u003d \"Amy Bee\";","lastModifiedDate":"2017-07-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_BOB \u003d \"Bob Choo\";","lastModifiedDate":"2017-07-05"},{"lineNumber":37,"author":{"gitId":"Moley456"},"content":"    public static final String VALID_NAME_CHARLIE \u003d \"Charlie\";","lastModifiedDate":"2021-10-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static final String VALID_PHONE_AMY \u003d \"11111111\";","lastModifiedDate":"2017-07-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public static final String VALID_PHONE_BOB \u003d \"22222222\";","lastModifiedDate":"2017-07-05"},{"lineNumber":40,"author":{"gitId":"Moley456"},"content":"    public static final String VALID_PHONE_CHARLIE \u003d \"33333333\";","lastModifiedDate":"2021-10-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public static final String VALID_EMAIL_AMY \u003d \"amy@example.com\";","lastModifiedDate":"2017-07-05"},{"lineNumber":42,"author":{"gitId":"felix-ong"},"content":"    public static final String VALID_AVAILABILITY_AMY \u003d \"1 2 3\";","lastModifiedDate":"2021-10-16"},{"lineNumber":43,"author":{"gitId":"felix-ong"},"content":"    public static final String VALID_AVAILABILITY_BOB \u003d \"1 2 3\";","lastModifiedDate":"2021-10-16"},{"lineNumber":44,"author":{"gitId":"Moley456"},"content":"    public static final String VALID_AVAILABILITY_CHARLIE \u003d \"1 2 3\";","lastModifiedDate":"2021-10-23"},{"lineNumber":45,"author":{"gitId":"tsinyee"},"content":"    public static final String VALID_TAG_EXCO \u003d \"exco\";","lastModifiedDate":"2021-10-21"},{"lineNumber":46,"author":{"gitId":"tsinyee"},"content":"    public static final String VALID_TAG_Y2 \u003d \"y2\";","lastModifiedDate":"2021-10-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":48,"author":{"gitId":"Shruthi0310"},"content":"    public static final String VALID_FACILITY_NAME_COURT \u003d \"Court 1\";","lastModifiedDate":"2021-10-05"},{"lineNumber":49,"author":{"gitId":"Shruthi0310"},"content":"    public static final String VALID_LOCATION_COURT \u003d \"University Sports Hall\";","lastModifiedDate":"2021-10-05"},{"lineNumber":50,"author":{"gitId":"tsinyee"},"content":"    public static final String VALID_TIME_COURT \u003d \"1130\";","lastModifiedDate":"2021-10-12"},{"lineNumber":51,"author":{"gitId":"Shruthi0310"},"content":"    public static final String VALID_CAPACITY_COURT \u003d \"5\";","lastModifiedDate":"2021-10-05"},{"lineNumber":52,"author":{"gitId":"Shruthi0310"},"content":"    public static final String VALID_FACILITY_NAME_FIELD \u003d \"NUS Field 2\";","lastModifiedDate":"2021-10-05"},{"lineNumber":53,"author":{"gitId":"Shruthi0310"},"content":"    public static final String VALID_LOCATION_FIELD \u003d \"Opp University Hall\";","lastModifiedDate":"2021-10-05"},{"lineNumber":54,"author":{"gitId":"tsinyee"},"content":"    public static final String VALID_TIME_FIELD \u003d \"1330\";","lastModifiedDate":"2021-10-12"},{"lineNumber":55,"author":{"gitId":"Shruthi0310"},"content":"    public static final String VALID_CAPACITY_FIELD \u003d \"8\";","lastModifiedDate":"2021-10-05"},{"lineNumber":56,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":57,"author":{"gitId":"tsinyee"},"content":"    public static final String VALID_SORT_ORDER_NAME \u003d \"name\";","lastModifiedDate":"2021-10-24"},{"lineNumber":58,"author":{"gitId":"tsinyee"},"content":"    public static final String VALID_SORT_ORDER_TAG \u003d \"tag\";","lastModifiedDate":"2021-10-24"},{"lineNumber":59,"author":{"gitId":"tsinyee"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":60,"author":{"gitId":"Shruthi0310"},"content":"    public static final String NAME_DESC_COURT \u003d \" \" + PREFIX_NAME + VALID_FACILITY_NAME_COURT;","lastModifiedDate":"2021-10-05"},{"lineNumber":61,"author":{"gitId":"Shruthi0310"},"content":"    public static final String LOCATION_DESC_COURT \u003d \" \" + PREFIX_LOCATION + VALID_LOCATION_COURT;","lastModifiedDate":"2021-10-05"},{"lineNumber":62,"author":{"gitId":"Shruthi0310"},"content":"    public static final String TIME_DESC_COURT \u003d \" \" + PREFIX_TIME + VALID_TIME_COURT;","lastModifiedDate":"2021-10-05"},{"lineNumber":63,"author":{"gitId":"Shruthi0310"},"content":"    public static final String CAPACITY_DESC_COURT \u003d \" \" + PREFIX_CAPACITY + VALID_CAPACITY_COURT;","lastModifiedDate":"2021-10-05"},{"lineNumber":64,"author":{"gitId":"Shruthi0310"},"content":"    public static final String NAME_DESC_FIELD \u003d \" \" + PREFIX_NAME + VALID_FACILITY_NAME_FIELD;","lastModifiedDate":"2021-10-05"},{"lineNumber":65,"author":{"gitId":"Shruthi0310"},"content":"    public static final String LOCATION_DESC_FIELD \u003d \" \" + PREFIX_LOCATION + VALID_LOCATION_FIELD;","lastModifiedDate":"2021-10-05"},{"lineNumber":66,"author":{"gitId":"Shruthi0310"},"content":"    public static final String TIME_DESC_FIELD \u003d \" \" + PREFIX_TIME + VALID_TIME_FIELD;","lastModifiedDate":"2021-10-05"},{"lineNumber":67,"author":{"gitId":"Shruthi0310"},"content":"    public static final String CAPACITY_DESC_FIELD \u003d \" \" + PREFIX_CAPACITY + VALID_CAPACITY_FIELD;","lastModifiedDate":"2021-10-05"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_AMY \u003d \" \" + PREFIX_NAME + VALID_NAME_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_BOB \u003d \" \" + PREFIX_NAME + VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public static final String PHONE_DESC_AMY \u003d \" \" + PREFIX_PHONE + VALID_PHONE_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public static final String PHONE_DESC_BOB \u003d \" \" + PREFIX_PHONE + VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public static final String EMAIL_DESC_AMY \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":74,"author":{"gitId":"tsinyee"},"content":"    public static final String TAG_DESC_Y2 \u003d \" \" + PREFIX_TAG + VALID_TAG_Y2;","lastModifiedDate":"2021-10-21"},{"lineNumber":75,"author":{"gitId":"tsinyee"},"content":"    public static final String TAG_DESC_EXCO \u003d \" \" + PREFIX_TAG + VALID_TAG_EXCO;","lastModifiedDate":"2021-10-21"},{"lineNumber":76,"author":{"gitId":"felix-ong"},"content":"    public static final String AVAILABILITY_DESC_AMY \u003d \" \" + PREFIX_AVAILABILITY + VALID_AVAILABILITY_AMY;","lastModifiedDate":"2021-10-12"},{"lineNumber":77,"author":{"gitId":"felix-ong"},"content":"    public static final String AVAILABILITY_DESC_BOB \u003d \" \" + PREFIX_AVAILABILITY + VALID_AVAILABILITY_BOB;","lastModifiedDate":"2021-10-12"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public static final String INVALID_NAME_DESC \u003d \" \" + PREFIX_NAME + \"James\u0026\"; // \u0027\u0026\u0027 not allowed in names","lastModifiedDate":"2017-07-05"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public static final String INVALID_PHONE_DESC \u003d \" \" + PREFIX_PHONE + \"911a\"; // \u0027a\u0027 not allowed in phones","lastModifiedDate":"2017-07-05"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public static final String INVALID_TAG_DESC \u003d \" \" + PREFIX_TAG + \"hubby*\"; // \u0027*\u0027 not allowed in tags","lastModifiedDate":"2017-07-05"},{"lineNumber":82,"author":{"gitId":"felix-ong"},"content":"    // must be integers","lastModifiedDate":"2021-10-16"},{"lineNumber":83,"author":{"gitId":"felix-ong"},"content":"    public static final String INVALID_AVAILABILITY_DESC \u003d \" \" + PREFIX_AVAILABILITY + \"one two three\";","lastModifiedDate":"2021-10-16"},{"lineNumber":84,"author":{"gitId":"tsinyee"},"content":"    public static final String INVALID_SORT_ORDER_DESC \u003d \" \" + PREFIX_SORT_ORDER + \"aa bb cc\";","lastModifiedDate":"2021-10-24"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_WHITESPACE \u003d \"\\t  \\r  \\n\";","lastModifiedDate":"2017-12-23"},{"lineNumber":87,"author":{"gitId":"tsinyee"},"content":"    public static final String INVALID_PREAMBLE \u003d \"NonEmptyPreamble\";","lastModifiedDate":"2021-10-28"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":89,"author":{"gitId":"tsinyee"},"content":"    public static final String SORT_ORDER_DESC_TAG \u003d \" \" + PREFIX_SORT_ORDER + VALID_SORT_ORDER_TAG;","lastModifiedDate":"2021-10-24"},{"lineNumber":90,"author":{"gitId":"tsinyee"},"content":"    public static final String SORT_ORDER_DESC_NAME \u003d \" \" + PREFIX_SORT_ORDER + VALID_SORT_ORDER_NAME;","lastModifiedDate":"2021-10-24"},{"lineNumber":91,"author":{"gitId":"tsinyee"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":92,"author":{"gitId":"tsinyee"},"content":"    public static final EditMemberCommand.EditPersonDescriptor DESC_AMY;","lastModifiedDate":"2021-10-10"},{"lineNumber":93,"author":{"gitId":"tsinyee"},"content":"    public static final EditMemberCommand.EditPersonDescriptor DESC_BOB;","lastModifiedDate":"2021-10-10"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    static {","lastModifiedDate":"2017-07-05"},{"lineNumber":96,"author":{"gitId":"tsinyee"},"content":"        DESC_AMY \u003d new EditMemberDescriptorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2021-10-10"},{"lineNumber":97,"author":{"gitId":"tsinyee"},"content":"                .withPhone(VALID_PHONE_AMY).withTags(VALID_TAG_Y2).build();","lastModifiedDate":"2021-10-21"},{"lineNumber":98,"author":{"gitId":"tsinyee"},"content":"        DESC_BOB \u003d new EditMemberDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2021-10-10"},{"lineNumber":99,"author":{"gitId":"tsinyee"},"content":"                .withPhone(VALID_PHONE_BOB).withTags(VALID_TAG_EXCO, VALID_TAG_Y2).build();","lastModifiedDate":"2021-10-21"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-05"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * - the returned {@link CommandResult} matches {@code expectedCommandResult} \u003cbr\u003e","lastModifiedDate":"2018-12-09"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     * - the {@code actualModel} matches {@code expectedModel}","lastModifiedDate":"2019-01-25"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, CommandResult expectedCommandResult,","lastModifiedDate":"2019-01-25"},{"lineNumber":108,"author":{"gitId":"-"},"content":"            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":110,"author":{"gitId":"-"},"content":"            CommandResult result \u003d command.execute(actualModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":111,"author":{"gitId":"-"},"content":"            assertEquals(expectedCommandResult, result);","lastModifiedDate":"2018-12-09"},{"lineNumber":112,"author":{"gitId":"-"},"content":"            assertEquals(expectedModel, actualModel);","lastModifiedDate":"2017-06-05"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        } catch (CommandException ce) {","lastModifiedDate":"2017-08-15"},{"lineNumber":114,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"Execution of command should not fail.\", ce);","lastModifiedDate":"2017-08-15"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":119,"author":{"gitId":"-"},"content":"     * Convenience wrapper to {@link #assertCommandSuccess(Command, Model, CommandResult, Model)}","lastModifiedDate":"2019-01-25"},{"lineNumber":120,"author":{"gitId":"-"},"content":"     * that takes a string {@code expectedMessage}.","lastModifiedDate":"2018-12-09"},{"lineNumber":121,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, String expectedMessage,","lastModifiedDate":"2019-01-25"},{"lineNumber":123,"author":{"gitId":"-"},"content":"            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":124,"author":{"gitId":"YoYoCiti"},"content":"        CommandResult expectedCommandResult;","lastModifiedDate":"2021-10-24"},{"lineNumber":125,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":126,"author":{"gitId":"YoYoCiti"},"content":"        if (isFacilityCommand(command)) {","lastModifiedDate":"2021-10-24"},{"lineNumber":127,"author":{"gitId":"YoYoCiti"},"content":"            expectedCommandResult \u003d new CommandResult(expectedMessage, false,","lastModifiedDate":"2021-10-24"},{"lineNumber":128,"author":{"gitId":"YoYoCiti"},"content":"                    true, false);","lastModifiedDate":"2021-10-24"},{"lineNumber":129,"author":{"gitId":"YoYoCiti"},"content":"        } else if (isMemberCommand(command)) {","lastModifiedDate":"2021-10-24"},{"lineNumber":130,"author":{"gitId":"YoYoCiti"},"content":"            expectedCommandResult \u003d new CommandResult(expectedMessage, false,","lastModifiedDate":"2021-10-24"},{"lineNumber":131,"author":{"gitId":"YoYoCiti"},"content":"                    false, true);","lastModifiedDate":"2021-10-24"},{"lineNumber":132,"author":{"gitId":"YoYoCiti"},"content":"        } else {","lastModifiedDate":"2021-10-24"},{"lineNumber":133,"author":{"gitId":"YoYoCiti"},"content":"            expectedCommandResult \u003d new CommandResult(expectedMessage);","lastModifiedDate":"2021-10-24"},{"lineNumber":134,"author":{"gitId":"YoYoCiti"},"content":"        }","lastModifiedDate":"2021-10-24"},{"lineNumber":135,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, actualModel, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":139,"author":{"gitId":"YoYoCiti"},"content":"    /**","lastModifiedDate":"2021-10-24"},{"lineNumber":140,"author":{"gitId":"YoYoCiti"},"content":"     * Checks if the given command should select the Facility Tab.","lastModifiedDate":"2021-10-24"},{"lineNumber":141,"author":{"gitId":"YoYoCiti"},"content":"     */","lastModifiedDate":"2021-10-24"},{"lineNumber":142,"author":{"gitId":"YoYoCiti"},"content":"    private static boolean isFacilityCommand(Command command) {","lastModifiedDate":"2021-10-24"},{"lineNumber":143,"author":{"gitId":"YoYoCiti"},"content":"        return command instanceof AddFacilityCommand","lastModifiedDate":"2021-10-24"},{"lineNumber":144,"author":{"gitId":"YoYoCiti"},"content":"                || command instanceof ClearFacilitiesCommand","lastModifiedDate":"2021-10-24"},{"lineNumber":145,"author":{"gitId":"YoYoCiti"},"content":"                || command instanceof DeleteFacilityCommand","lastModifiedDate":"2021-10-24"},{"lineNumber":146,"author":{"gitId":"YoYoCiti"},"content":"                || command instanceof EditFacilityCommand","lastModifiedDate":"2021-10-24"},{"lineNumber":147,"author":{"gitId":"YoYoCiti"},"content":"                || command instanceof FindFacilityCommand","lastModifiedDate":"2021-10-24"},{"lineNumber":148,"author":{"gitId":"YoYoCiti"},"content":"                || command instanceof ListFacilityCommand","lastModifiedDate":"2021-10-24"},{"lineNumber":149,"author":{"gitId":"YoYoCiti"},"content":"                || command instanceof SplitCommand;","lastModifiedDate":"2021-10-24"},{"lineNumber":150,"author":{"gitId":"YoYoCiti"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":151,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":152,"author":{"gitId":"YoYoCiti"},"content":"    /**","lastModifiedDate":"2021-10-24"},{"lineNumber":153,"author":{"gitId":"YoYoCiti"},"content":"     * Checks if the given command should select the Member Tab.","lastModifiedDate":"2021-10-24"},{"lineNumber":154,"author":{"gitId":"YoYoCiti"},"content":"     */","lastModifiedDate":"2021-10-24"},{"lineNumber":155,"author":{"gitId":"YoYoCiti"},"content":"    private static boolean isMemberCommand(Command command) {","lastModifiedDate":"2021-10-24"},{"lineNumber":156,"author":{"gitId":"YoYoCiti"},"content":"        return command instanceof AddMemberCommand","lastModifiedDate":"2021-10-24"},{"lineNumber":157,"author":{"gitId":"YoYoCiti"},"content":"                || command instanceof ClearMembersCommand","lastModifiedDate":"2021-10-24"},{"lineNumber":158,"author":{"gitId":"YoYoCiti"},"content":"                || command instanceof DeleteMemberCommand","lastModifiedDate":"2021-10-24"},{"lineNumber":159,"author":{"gitId":"YoYoCiti"},"content":"                || command instanceof EditMemberCommand","lastModifiedDate":"2021-10-24"},{"lineNumber":160,"author":{"gitId":"YoYoCiti"},"content":"                || command instanceof FindMemberCommand","lastModifiedDate":"2021-10-24"},{"lineNumber":161,"author":{"gitId":"YoYoCiti"},"content":"                || command instanceof ListMemberCommand","lastModifiedDate":"2021-10-24"},{"lineNumber":162,"author":{"gitId":"YoYoCiti"},"content":"                || command instanceof SetMemberAvailabilityCommand","lastModifiedDate":"2021-10-24"},{"lineNumber":163,"author":{"gitId":"YoYoCiti"},"content":"                || command instanceof SortMemberCommand","lastModifiedDate":"2021-10-24"},{"lineNumber":164,"author":{"gitId":"YoYoCiti"},"content":"                || command instanceof ClearAttendanceCommand","lastModifiedDate":"2021-10-24"},{"lineNumber":165,"author":{"gitId":"YoYoCiti"},"content":"                || command instanceof MarkAttendanceCommand","lastModifiedDate":"2021-10-24"},{"lineNumber":166,"author":{"gitId":"YoYoCiti"},"content":"                || command instanceof UnmarkAttendanceCommand;","lastModifiedDate":"2021-10-24"},{"lineNumber":167,"author":{"gitId":"YoYoCiti"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":168,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":170,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":171,"author":{"gitId":"-"},"content":"     * - a {@code CommandException} is thrown \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":172,"author":{"gitId":"-"},"content":"     * - the CommandException message matches {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":173,"author":{"gitId":"-"},"content":"     * - the address book, filtered person list and selected person in {@code actualModel} remain unchanged","lastModifiedDate":"2019-01-25"},{"lineNumber":174,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    public static void assertCommandFailure(Command command, Model actualModel, String expectedMessage) {","lastModifiedDate":"2019-01-25"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        // we are unable to defensively copy the model for comparison later, so we can","lastModifiedDate":"2017-06-05"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        // only do so by copying its components.","lastModifiedDate":"2017-06-05"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        AddressBook expectedAddressBook \u003d new AddressBook(actualModel.getAddressBook());","lastModifiedDate":"2017-06-05"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e expectedFilteredList \u003d new ArrayList\u003c\u003e(actualModel.getFilteredPersonList());","lastModifiedDate":"2018-01-10"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        assertThrows(CommandException.class, expectedMessage, () -\u003e command.execute(actualModel));","lastModifiedDate":"2019-05-03"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddressBook, actualModel.getAddressBook());","lastModifiedDate":"2017-06-05"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        assertEquals(expectedFilteredList, actualModel.getFilteredPersonList());","lastModifiedDate":"2017-06-05"},{"lineNumber":184,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-20"},{"lineNumber":186,"author":{"gitId":"-"},"content":"     * Updates {@code model}\u0027s filtered list to show only the person at the given {@code targetIndex} in the","lastModifiedDate":"2018-01-31"},{"lineNumber":187,"author":{"gitId":"-"},"content":"     * {@code model}\u0027s address book.","lastModifiedDate":"2018-01-31"},{"lineNumber":188,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-20"},{"lineNumber":189,"author":{"gitId":"-"},"content":"    public static void showPersonAtIndex(Model model, Index targetIndex) {","lastModifiedDate":"2018-01-31"},{"lineNumber":190,"author":{"gitId":"-"},"content":"        assertTrue(targetIndex.getZeroBased() \u003c model.getFilteredPersonList().size());","lastModifiedDate":"2018-01-31"},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-31"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        Person person \u003d model.getFilteredPersonList().get(targetIndex.getZeroBased());","lastModifiedDate":"2018-01-31"},{"lineNumber":193,"author":{"gitId":"-"},"content":"        final String[] splitName \u003d person.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2017-07-20"},{"lineNumber":194,"author":{"gitId":"tsinyee"},"content":"        model.updateFilteredPersonList(new NameContainsKeywordsPredicate(Arrays.asList(splitName[0].toLowerCase())));","lastModifiedDate":"2021-10-31"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":196,"author":{"gitId":"-"},"content":"        assertEquals(1, model.getFilteredPersonList().size());","lastModifiedDate":"2018-02-08"},{"lineNumber":197,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-20"},{"lineNumber":198,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":199,"author":{"gitId":"YoYoCiti"},"content":"    /**","lastModifiedDate":"2021-10-09"},{"lineNumber":200,"author":{"gitId":"YoYoCiti"},"content":"     * Updates {@code model}\u0027s filtered facility list to show only the facility at the given {@code targetIndex} in the","lastModifiedDate":"2021-10-09"},{"lineNumber":201,"author":{"gitId":"YoYoCiti"},"content":"     * {@code model}\u0027s address book.","lastModifiedDate":"2021-10-09"},{"lineNumber":202,"author":{"gitId":"YoYoCiti"},"content":"     */","lastModifiedDate":"2021-10-09"},{"lineNumber":203,"author":{"gitId":"YoYoCiti"},"content":"    public static void showFacilityAtIndex(Model model, Index targetIndex) {","lastModifiedDate":"2021-10-09"},{"lineNumber":204,"author":{"gitId":"YoYoCiti"},"content":"        assertTrue(targetIndex.getZeroBased() \u003c model.getFilteredFacilityList().size());","lastModifiedDate":"2021-10-09"},{"lineNumber":205,"author":{"gitId":"YoYoCiti"},"content":"        Facility facility \u003d model.getFilteredFacilityList().get(targetIndex.getZeroBased());","lastModifiedDate":"2021-10-09"},{"lineNumber":206,"author":{"gitId":"YoYoCiti"},"content":"        final String[] splitLocation \u003d facility.getLocation().location.split(\"\\\\s+\");","lastModifiedDate":"2021-10-09"},{"lineNumber":207,"author":{"gitId":"YoYoCiti"},"content":"        model.updateFilteredFacilityList(new LocationContainsKeywordsPredicate(Arrays.asList(splitLocation[0])));","lastModifiedDate":"2021-10-09"},{"lineNumber":208,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":209,"author":{"gitId":"YoYoCiti"},"content":"        assertEquals(1, model.getFilteredFacilityList().size());","lastModifiedDate":"2021-10-09"},{"lineNumber":210,"author":{"gitId":"YoYoCiti"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":211,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":212,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"YoYoCiti":57,"Moley456":3,"Shruthi0310":15,"-":104,"felix-ong":10,"tsinyee":23}},{"path":"src/test/java/seedu/address/logic/commands/DeleteAliasCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"YoYoCiti"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-10-17"},{"lineNumber":2,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":3,"author":{"gitId":"YoYoCiti"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2021-10-17"},{"lineNumber":4,"author":{"gitId":"YoYoCiti"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-10-17"},{"lineNumber":5,"author":{"gitId":"YoYoCiti"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-17"},{"lineNumber":6,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":7,"author":{"gitId":"YoYoCiti"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-17"},{"lineNumber":8,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":9,"author":{"gitId":"YoYoCiti"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-10-17"},{"lineNumber":10,"author":{"gitId":"YoYoCiti"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2021-10-17"},{"lineNumber":11,"author":{"gitId":"YoYoCiti"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2021-10-17"},{"lineNumber":12,"author":{"gitId":"YoYoCiti"},"content":"import seedu.address.model.alias.Alias;","lastModifiedDate":"2021-10-18"},{"lineNumber":13,"author":{"gitId":"YoYoCiti"},"content":"import seedu.address.model.alias.CommandWord;","lastModifiedDate":"2021-10-18"},{"lineNumber":14,"author":{"gitId":"YoYoCiti"},"content":"import seedu.address.model.alias.Shortcut;","lastModifiedDate":"2021-10-18"},{"lineNumber":15,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":16,"author":{"gitId":"YoYoCiti"},"content":"public class DeleteAliasCommandTest {","lastModifiedDate":"2021-10-17"},{"lineNumber":17,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":18,"author":{"gitId":"YoYoCiti"},"content":"    @Test","lastModifiedDate":"2021-10-17"},{"lineNumber":19,"author":{"gitId":"YoYoCiti"},"content":"    public void constructor_null_exceptionThrown() {","lastModifiedDate":"2021-10-17"},{"lineNumber":20,"author":{"gitId":"YoYoCiti"},"content":"        assertThrows(NullPointerException.class, () -\u003e new DeleteAliasCommand(null));","lastModifiedDate":"2021-10-17"},{"lineNumber":21,"author":{"gitId":"YoYoCiti"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":22,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":23,"author":{"gitId":"YoYoCiti"},"content":"    @Test","lastModifiedDate":"2021-10-17"},{"lineNumber":24,"author":{"gitId":"YoYoCiti"},"content":"    public void execute_deleteAlias_success() {","lastModifiedDate":"2021-10-17"},{"lineNumber":25,"author":{"gitId":"YoYoCiti"},"content":"        ModelManager model \u003d new ModelManager();","lastModifiedDate":"2021-10-17"},{"lineNumber":26,"author":{"gitId":"YoYoCiti"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2021-10-17"},{"lineNumber":27,"author":{"gitId":"YoYoCiti"},"content":"        model.addAlias(new Alias(new Shortcut(\"lf\"), new CommandWord(\"listf\")));","lastModifiedDate":"2021-10-18"},{"lineNumber":28,"author":{"gitId":"YoYoCiti"},"content":"        String expectedMessage \u003d String.format(DeleteAliasCommand.MESSAGE_SUCCESS, \"listf\", \"lf\");","lastModifiedDate":"2021-10-17"},{"lineNumber":29,"author":{"gitId":"YoYoCiti"},"content":"        assertCommandSuccess(new DeleteAliasCommand(new Shortcut(\"lf\")), model, expectedMessage, expectedModel);","lastModifiedDate":"2021-10-18"},{"lineNumber":30,"author":{"gitId":"YoYoCiti"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":31,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":32,"author":{"gitId":"YoYoCiti"},"content":"    @Test","lastModifiedDate":"2021-10-17"},{"lineNumber":33,"author":{"gitId":"YoYoCiti"},"content":"    public void execute_aliasDoesNotExist_throwsCommandException() {","lastModifiedDate":"2021-10-17"},{"lineNumber":34,"author":{"gitId":"YoYoCiti"},"content":"        ModelManager model \u003d new ModelManager();","lastModifiedDate":"2021-10-17"},{"lineNumber":35,"author":{"gitId":"YoYoCiti"},"content":"        assertCommandFailure(new DeleteAliasCommand(new Shortcut(\"lf\")), model,","lastModifiedDate":"2021-10-18"},{"lineNumber":36,"author":{"gitId":"YoYoCiti"},"content":"                String.format(DeleteAliasCommand.MESSAGE_ALIAS_DOES_NOT_EXIST, \"lf\"));","lastModifiedDate":"2021-10-17"},{"lineNumber":37,"author":{"gitId":"YoYoCiti"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":38,"author":{"gitId":"YoYoCiti"},"content":"}","lastModifiedDate":"2021-10-17"}],"authorContributionMap":{"YoYoCiti":38}},{"path":"src/test/java/seedu/address/logic/commands/DeleteFacilityCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"YoYoCiti"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-10-08"},{"lineNumber":2,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":3,"author":{"gitId":"YoYoCiti"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-08"},{"lineNumber":4,"author":{"gitId":"YoYoCiti"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-08"},{"lineNumber":5,"author":{"gitId":"YoYoCiti"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2021-10-09"},{"lineNumber":6,"author":{"gitId":"YoYoCiti"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-10-09"},{"lineNumber":7,"author":{"gitId":"YoYoCiti"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showFacilityAtIndex;","lastModifiedDate":"2021-10-09"},{"lineNumber":8,"author":{"gitId":"YoYoCiti"},"content":"import static seedu.address.testutil.TypicalAddressBook.getTypicalAddressBook;","lastModifiedDate":"2021-10-09"},{"lineNumber":9,"author":{"gitId":"YoYoCiti"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST;","lastModifiedDate":"2021-10-09"},{"lineNumber":10,"author":{"gitId":"YoYoCiti"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND;","lastModifiedDate":"2021-10-09"},{"lineNumber":11,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":12,"author":{"gitId":"YoYoCiti"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-08"},{"lineNumber":13,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":14,"author":{"gitId":"YoYoCiti"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2021-10-09"},{"lineNumber":15,"author":{"gitId":"YoYoCiti"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-10-09"},{"lineNumber":16,"author":{"gitId":"YoYoCiti"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-10-09"},{"lineNumber":17,"author":{"gitId":"YoYoCiti"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2021-10-09"},{"lineNumber":18,"author":{"gitId":"YoYoCiti"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2021-10-09"},{"lineNumber":19,"author":{"gitId":"YoYoCiti"},"content":"import seedu.address.model.facility.Facility;","lastModifiedDate":"2021-10-09"},{"lineNumber":20,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":21,"author":{"gitId":"YoYoCiti"},"content":"/**","lastModifiedDate":"2021-10-08"},{"lineNumber":22,"author":{"gitId":"YoYoCiti"},"content":" * Contains integration tests (interaction with the Mode) and unit tests for {@code DeleteFacilityCommand}.","lastModifiedDate":"2021-10-09"},{"lineNumber":23,"author":{"gitId":"YoYoCiti"},"content":" */","lastModifiedDate":"2021-10-08"},{"lineNumber":24,"author":{"gitId":"YoYoCiti"},"content":"public class DeleteFacilityCommandTest {","lastModifiedDate":"2021-10-08"},{"lineNumber":25,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":26,"author":{"gitId":"YoYoCiti"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2021-10-09"},{"lineNumber":27,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":28,"author":{"gitId":"YoYoCiti"},"content":"    @Test","lastModifiedDate":"2021-10-09"},{"lineNumber":29,"author":{"gitId":"YoYoCiti"},"content":"    public void execute_validIndexUnfilteredList_success() {","lastModifiedDate":"2021-10-09"},{"lineNumber":30,"author":{"gitId":"YoYoCiti"},"content":"        Facility facilityToDelete \u003d model.getFilteredFacilityList().get(INDEX_FIRST.getZeroBased());","lastModifiedDate":"2021-10-09"},{"lineNumber":31,"author":{"gitId":"YoYoCiti"},"content":"        DeleteFacilityCommand command \u003d new DeleteFacilityCommand(INDEX_FIRST);","lastModifiedDate":"2021-10-09"},{"lineNumber":32,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":33,"author":{"gitId":"YoYoCiti"},"content":"        String expectedMessage \u003d String.format(DeleteFacilityCommand.MESSAGE_DELETE_FACILITY_SUCCESS, facilityToDelete);","lastModifiedDate":"2021-10-09"},{"lineNumber":34,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":35,"author":{"gitId":"YoYoCiti"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2021-10-09"},{"lineNumber":36,"author":{"gitId":"YoYoCiti"},"content":"        expectedModel.deleteFacility(facilityToDelete);","lastModifiedDate":"2021-10-09"},{"lineNumber":37,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":38,"author":{"gitId":"YoYoCiti"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-10-09"},{"lineNumber":39,"author":{"gitId":"YoYoCiti"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":40,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":41,"author":{"gitId":"YoYoCiti"},"content":"    @Test","lastModifiedDate":"2021-10-09"},{"lineNumber":42,"author":{"gitId":"YoYoCiti"},"content":"    public void execute_validIndexUnfilteredList_throwsCommandException() {","lastModifiedDate":"2021-10-09"},{"lineNumber":43,"author":{"gitId":"YoYoCiti"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredFacilityList().size() + 1);","lastModifiedDate":"2021-10-09"},{"lineNumber":44,"author":{"gitId":"YoYoCiti"},"content":"        DeleteFacilityCommand command \u003d new DeleteFacilityCommand(outOfBoundIndex);","lastModifiedDate":"2021-10-09"},{"lineNumber":45,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":46,"author":{"gitId":"YoYoCiti"},"content":"        assertCommandFailure(command, model, Messages.MESSAGE_INVALID_FACILITY_DISPLAYED_INDEX);","lastModifiedDate":"2021-10-09"},{"lineNumber":47,"author":{"gitId":"YoYoCiti"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":48,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":49,"author":{"gitId":"YoYoCiti"},"content":"    @Test","lastModifiedDate":"2021-10-09"},{"lineNumber":50,"author":{"gitId":"YoYoCiti"},"content":"    public void execute_validIndexFilteredList_success() {","lastModifiedDate":"2021-10-09"},{"lineNumber":51,"author":{"gitId":"YoYoCiti"},"content":"        showFacilityAtIndex(model, INDEX_FIRST);","lastModifiedDate":"2021-10-09"},{"lineNumber":52,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":53,"author":{"gitId":"YoYoCiti"},"content":"        Facility facilityToDelete \u003d model.getFilteredFacilityList().get(INDEX_FIRST.getZeroBased());","lastModifiedDate":"2021-10-09"},{"lineNumber":54,"author":{"gitId":"YoYoCiti"},"content":"        DeleteFacilityCommand command \u003d new DeleteFacilityCommand(INDEX_FIRST);","lastModifiedDate":"2021-10-09"},{"lineNumber":55,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":56,"author":{"gitId":"YoYoCiti"},"content":"        String expectedMessage \u003d String.format(DeleteFacilityCommand.MESSAGE_DELETE_FACILITY_SUCCESS, facilityToDelete);","lastModifiedDate":"2021-10-09"},{"lineNumber":57,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":58,"author":{"gitId":"YoYoCiti"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2021-10-09"},{"lineNumber":59,"author":{"gitId":"YoYoCiti"},"content":"        expectedModel.deleteFacility(facilityToDelete);","lastModifiedDate":"2021-10-09"},{"lineNumber":60,"author":{"gitId":"YoYoCiti"},"content":"        showNoFacility(expectedModel);","lastModifiedDate":"2021-10-09"},{"lineNumber":61,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":62,"author":{"gitId":"YoYoCiti"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-10-09"},{"lineNumber":63,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":64,"author":{"gitId":"YoYoCiti"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":65,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":66,"author":{"gitId":"YoYoCiti"},"content":"    @Test","lastModifiedDate":"2021-10-09"},{"lineNumber":67,"author":{"gitId":"YoYoCiti"},"content":"    public void execute_invalidIndexFilteredList_throwsCommandException() {","lastModifiedDate":"2021-10-09"},{"lineNumber":68,"author":{"gitId":"YoYoCiti"},"content":"        showFacilityAtIndex(model, INDEX_FIRST);","lastModifiedDate":"2021-10-09"},{"lineNumber":69,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":70,"author":{"gitId":"YoYoCiti"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND;","lastModifiedDate":"2021-10-09"},{"lineNumber":71,"author":{"gitId":"YoYoCiti"},"content":"        // ensures that outOfBoundIndex still in bounds of SportsPA facility list","lastModifiedDate":"2021-10-09"},{"lineNumber":72,"author":{"gitId":"YoYoCiti"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getFacilityList().size());","lastModifiedDate":"2021-10-09"},{"lineNumber":73,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":74,"author":{"gitId":"YoYoCiti"},"content":"        DeleteFacilityCommand command \u003d new DeleteFacilityCommand(outOfBoundIndex);","lastModifiedDate":"2021-10-09"},{"lineNumber":75,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":76,"author":{"gitId":"YoYoCiti"},"content":"        assertCommandFailure(command, model, Messages.MESSAGE_INVALID_FACILITY_DISPLAYED_INDEX);","lastModifiedDate":"2021-10-09"},{"lineNumber":77,"author":{"gitId":"YoYoCiti"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":78,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":79,"author":{"gitId":"YoYoCiti"},"content":"    @Test","lastModifiedDate":"2021-10-08"},{"lineNumber":80,"author":{"gitId":"YoYoCiti"},"content":"    public void equals() {","lastModifiedDate":"2021-10-08"},{"lineNumber":81,"author":{"gitId":"YoYoCiti"},"content":"        DeleteFacilityCommand deleteFacilFirstCommand \u003d new DeleteFacilityCommand(INDEX_FIRST);","lastModifiedDate":"2021-10-09"},{"lineNumber":82,"author":{"gitId":"YoYoCiti"},"content":"        DeleteFacilityCommand deleteFacilSecondCommand \u003d new DeleteFacilityCommand(INDEX_SECOND);","lastModifiedDate":"2021-10-09"},{"lineNumber":83,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":84,"author":{"gitId":"YoYoCiti"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-10-08"},{"lineNumber":85,"author":{"gitId":"YoYoCiti"},"content":"        assertTrue(deleteFacilFirstCommand.equals(deleteFacilFirstCommand));","lastModifiedDate":"2021-10-08"},{"lineNumber":86,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":87,"author":{"gitId":"YoYoCiti"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2021-10-08"},{"lineNumber":88,"author":{"gitId":"YoYoCiti"},"content":"        DeleteFacilityCommand deleteFacilFirstCommandCopy \u003d new DeleteFacilityCommand(INDEX_FIRST);","lastModifiedDate":"2021-10-09"},{"lineNumber":89,"author":{"gitId":"YoYoCiti"},"content":"        assertTrue(deleteFacilFirstCommand.equals(deleteFacilFirstCommandCopy));","lastModifiedDate":"2021-10-08"},{"lineNumber":90,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":91,"author":{"gitId":"YoYoCiti"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2021-10-08"},{"lineNumber":92,"author":{"gitId":"YoYoCiti"},"content":"        assertFalse(deleteFacilFirstCommand.equals(1));","lastModifiedDate":"2021-10-08"},{"lineNumber":93,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":94,"author":{"gitId":"YoYoCiti"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-10-08"},{"lineNumber":95,"author":{"gitId":"YoYoCiti"},"content":"        assertFalse(deleteFacilFirstCommand.equals(null));","lastModifiedDate":"2021-10-08"},{"lineNumber":96,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":97,"author":{"gitId":"YoYoCiti"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2021-10-08"},{"lineNumber":98,"author":{"gitId":"YoYoCiti"},"content":"        assertFalse(deleteFacilFirstCommand.equals(deleteFacilSecondCommand));","lastModifiedDate":"2021-10-08"},{"lineNumber":99,"author":{"gitId":"YoYoCiti"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":100,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":101,"author":{"gitId":"YoYoCiti"},"content":"    /**","lastModifiedDate":"2021-10-09"},{"lineNumber":102,"author":{"gitId":"YoYoCiti"},"content":"     * Updates {@code model}\u0027s filtered facility list to show no one.","lastModifiedDate":"2021-10-09"},{"lineNumber":103,"author":{"gitId":"YoYoCiti"},"content":"     */","lastModifiedDate":"2021-10-09"},{"lineNumber":104,"author":{"gitId":"YoYoCiti"},"content":"    private void showNoFacility(Model model) {","lastModifiedDate":"2021-10-09"},{"lineNumber":105,"author":{"gitId":"YoYoCiti"},"content":"        model.updateFilteredFacilityList(f -\u003e false);","lastModifiedDate":"2021-10-09"},{"lineNumber":106,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":107,"author":{"gitId":"YoYoCiti"},"content":"        assertTrue(model.getFilteredFacilityList().isEmpty());","lastModifiedDate":"2021-10-09"},{"lineNumber":108,"author":{"gitId":"YoYoCiti"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":109,"author":{"gitId":"YoYoCiti"},"content":"}","lastModifiedDate":"2021-10-08"}],"authorContributionMap":{"YoYoCiti":109}},{"path":"src/test/java/seedu/address/logic/commands/DeleteMemberCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2018-01-31"},{"lineNumber":8,"author":{"gitId":"YoYoCiti"},"content":"import static seedu.address.testutil.TypicalAddressBook.getTypicalAddressBook;","lastModifiedDate":"2021-10-09"},{"lineNumber":9,"author":{"gitId":"YoYoCiti"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST;","lastModifiedDate":"2021-10-09"},{"lineNumber":10,"author":{"gitId":"YoYoCiti"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND;","lastModifiedDate":"2021-10-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2017-06-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-06-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for","lastModifiedDate":"2020-12-16"},{"lineNumber":23,"author":{"gitId":"tsinyee"},"content":" * {@code DeleteMemberCommand}.","lastModifiedDate":"2021-10-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":25,"author":{"gitId":"tsinyee"},"content":"public class DeleteMemberCommandTest {","lastModifiedDate":"2021-10-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void execute_validIndexUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":31,"author":{"gitId":"YoYoCiti"},"content":"        Person personToDelete \u003d model.getFilteredPersonList().get(INDEX_FIRST.getZeroBased());","lastModifiedDate":"2021-10-09"},{"lineNumber":32,"author":{"gitId":"tsinyee"},"content":"        DeleteMemberCommand deleteMemberCommand \u003d new DeleteMemberCommand(INDEX_FIRST);","lastModifiedDate":"2021-10-11"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":34,"author":{"gitId":"tsinyee"},"content":"        String expectedMessage \u003d String.format(DeleteMemberCommand.MESSAGE_DELETE_PERSON_SUCCESS, personToDelete);","lastModifiedDate":"2021-10-11"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-06-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        expectedModel.deletePerson(personToDelete);","lastModifiedDate":"2017-06-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":39,"author":{"gitId":"tsinyee"},"content":"        assertCommandSuccess(deleteMemberCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-10-11"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void execute_invalidIndexUnfilteredList_throwsCommandException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPersonList().size() + 1);","lastModifiedDate":"2017-06-05"},{"lineNumber":45,"author":{"gitId":"tsinyee"},"content":"        DeleteMemberCommand deleteMemberCommand \u003d new DeleteMemberCommand(outOfBoundIndex);","lastModifiedDate":"2021-10-11"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":47,"author":{"gitId":"tsinyee"},"content":"        assertCommandFailure(deleteMemberCommand, model, Messages.MESSAGE_INVALID_MEMBER_DISPLAYED_INDEX);","lastModifiedDate":"2021-10-11"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void execute_validIndexFilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":52,"author":{"gitId":"YoYoCiti"},"content":"        showPersonAtIndex(model, INDEX_FIRST);","lastModifiedDate":"2021-10-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":54,"author":{"gitId":"YoYoCiti"},"content":"        Person personToDelete \u003d model.getFilteredPersonList().get(INDEX_FIRST.getZeroBased());","lastModifiedDate":"2021-10-09"},{"lineNumber":55,"author":{"gitId":"tsinyee"},"content":"        DeleteMemberCommand deleteMemberCommand \u003d new DeleteMemberCommand(INDEX_FIRST);","lastModifiedDate":"2021-10-11"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":57,"author":{"gitId":"tsinyee"},"content":"        String expectedMessage \u003d String.format(deleteMemberCommand.MESSAGE_DELETE_PERSON_SUCCESS, personToDelete);","lastModifiedDate":"2021-10-11"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-06-05"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        expectedModel.deletePerson(personToDelete);","lastModifiedDate":"2017-06-05"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        showNoPerson(expectedModel);","lastModifiedDate":"2017-06-05"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":63,"author":{"gitId":"tsinyee"},"content":"        assertCommandSuccess(deleteMemberCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-10-11"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void execute_invalidIndexFilteredList_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":68,"author":{"gitId":"YoYoCiti"},"content":"        showPersonAtIndex(model, INDEX_FIRST);","lastModifiedDate":"2021-10-09"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":70,"author":{"gitId":"YoYoCiti"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND;","lastModifiedDate":"2021-10-09"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2017-06-05"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getPersonList().size());","lastModifiedDate":"2017-06-05"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":74,"author":{"gitId":"tsinyee"},"content":"        DeleteMemberCommand deleteMemberCommand \u003d new DeleteMemberCommand(outOfBoundIndex);","lastModifiedDate":"2021-10-11"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":76,"author":{"gitId":"tsinyee"},"content":"        assertCommandFailure(deleteMemberCommand, model, Messages.MESSAGE_INVALID_MEMBER_DISPLAYED_INDEX);","lastModifiedDate":"2021-10-11"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-01-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-08-08"},{"lineNumber":81,"author":{"gitId":"tsinyee"},"content":"        DeleteMemberCommand deleteFirstCommand \u003d new DeleteMemberCommand(INDEX_FIRST);","lastModifiedDate":"2021-10-11"},{"lineNumber":82,"author":{"gitId":"tsinyee"},"content":"        DeleteMemberCommand deleteSecondCommand \u003d new DeleteMemberCommand(INDEX_SECOND);","lastModifiedDate":"2021-10-11"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":88,"author":{"gitId":"tsinyee"},"content":"        DeleteMemberCommand deleteFirstCommandCopy \u003d new DeleteMemberCommand(INDEX_FIRST);","lastModifiedDate":"2021-10-11"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommandCopy));","lastModifiedDate":"2017-06-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(1));","lastModifiedDate":"2017-06-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(null));","lastModifiedDate":"2017-06-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(deleteSecondCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * Updates {@code model}\u0027s filtered list to show no one.","lastModifiedDate":"2017-06-05"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    private void showNoPerson(Model model) {","lastModifiedDate":"2017-06-05"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(p -\u003e false);","lastModifiedDate":"2017-06-12"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        assertTrue(model.getFilteredPersonList().isEmpty());","lastModifiedDate":"2018-02-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":109,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"YoYoCiti":8,"-":86,"tsinyee":15}},{"path":"src/test/java/seedu/address/logic/commands/EditFacilityCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"YoYoCiti"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-10-12"},{"lineNumber":2,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":3,"author":{"gitId":"YoYoCiti"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-12"},{"lineNumber":4,"author":{"gitId":"YoYoCiti"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-12"},{"lineNumber":5,"author":{"gitId":"YoYoCiti"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_FACILITY_NAME_COURT;","lastModifiedDate":"2021-10-12"},{"lineNumber":6,"author":{"gitId":"YoYoCiti"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_FACILITY_NAME_FIELD;","lastModifiedDate":"2021-10-12"},{"lineNumber":7,"author":{"gitId":"YoYoCiti"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_LOCATION_COURT;","lastModifiedDate":"2021-10-12"},{"lineNumber":8,"author":{"gitId":"YoYoCiti"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_LOCATION_FIELD;","lastModifiedDate":"2021-10-12"},{"lineNumber":9,"author":{"gitId":"YoYoCiti"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2021-10-12"},{"lineNumber":10,"author":{"gitId":"YoYoCiti"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-10-12"},{"lineNumber":11,"author":{"gitId":"YoYoCiti"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showFacilityAtIndex;","lastModifiedDate":"2021-10-12"},{"lineNumber":12,"author":{"gitId":"YoYoCiti"},"content":"import static seedu.address.testutil.TypicalAddressBook.getTypicalAddressBook;","lastModifiedDate":"2021-10-12"},{"lineNumber":13,"author":{"gitId":"YoYoCiti"},"content":"import static seedu.address.testutil.TypicalFacilities.TAMPINES_HUB_FIELD_SECTION_B;","lastModifiedDate":"2021-11-01"},{"lineNumber":14,"author":{"gitId":"YoYoCiti"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST;","lastModifiedDate":"2021-10-12"},{"lineNumber":15,"author":{"gitId":"YoYoCiti"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND;","lastModifiedDate":"2021-10-12"},{"lineNumber":16,"author":{"gitId":"YoYoCiti"},"content":"import static seedu.address.testutil.TypicalPersons.AMY;","lastModifiedDate":"2021-11-01"},{"lineNumber":17,"author":{"gitId":"YoYoCiti"},"content":"import static seedu.address.testutil.TypicalPersons.BOB;","lastModifiedDate":"2021-11-01"},{"lineNumber":18,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":19,"author":{"gitId":"YoYoCiti"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-12"},{"lineNumber":20,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":21,"author":{"gitId":"YoYoCiti"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2021-10-12"},{"lineNumber":22,"author":{"gitId":"YoYoCiti"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-10-12"},{"lineNumber":23,"author":{"gitId":"YoYoCiti"},"content":"import seedu.address.logic.commands.EditFacilityCommand.EditFacilityDescriptor;","lastModifiedDate":"2021-10-12"},{"lineNumber":24,"author":{"gitId":"YoYoCiti"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2021-10-12"},{"lineNumber":25,"author":{"gitId":"YoYoCiti"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-10-12"},{"lineNumber":26,"author":{"gitId":"YoYoCiti"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2021-10-12"},{"lineNumber":27,"author":{"gitId":"YoYoCiti"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2021-10-12"},{"lineNumber":28,"author":{"gitId":"YoYoCiti"},"content":"import seedu.address.model.facility.Facility;","lastModifiedDate":"2021-10-12"},{"lineNumber":29,"author":{"gitId":"YoYoCiti"},"content":"import seedu.address.model.person.PersonAvailableOnDayPredicate;","lastModifiedDate":"2021-11-01"},{"lineNumber":30,"author":{"gitId":"YoYoCiti"},"content":"import seedu.address.testutil.EditFacilityDescriptorBuilder;","lastModifiedDate":"2021-10-12"},{"lineNumber":31,"author":{"gitId":"YoYoCiti"},"content":"import seedu.address.testutil.FacilityBuilder;","lastModifiedDate":"2021-10-12"},{"lineNumber":32,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":33,"author":{"gitId":"YoYoCiti"},"content":"/**","lastModifiedDate":"2021-10-12"},{"lineNumber":34,"author":{"gitId":"YoYoCiti"},"content":" * Contains integration tests (interaction with the Model) and unit tests for EditFacilityCommand.","lastModifiedDate":"2021-10-12"},{"lineNumber":35,"author":{"gitId":"YoYoCiti"},"content":" */","lastModifiedDate":"2021-10-12"},{"lineNumber":36,"author":{"gitId":"YoYoCiti"},"content":"public class EditFacilityCommandTest {","lastModifiedDate":"2021-10-12"},{"lineNumber":37,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":38,"author":{"gitId":"YoYoCiti"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2021-10-12"},{"lineNumber":39,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":40,"author":{"gitId":"YoYoCiti"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":41,"author":{"gitId":"YoYoCiti"},"content":"    public void execute_allFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2021-10-12"},{"lineNumber":42,"author":{"gitId":"YoYoCiti"},"content":"        Facility editedFacility \u003d new FacilityBuilder().build();","lastModifiedDate":"2021-10-12"},{"lineNumber":43,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":44,"author":{"gitId":"YoYoCiti"},"content":"        EditFacilityDescriptor descriptor \u003d new EditFacilityDescriptorBuilder(editedFacility).build();","lastModifiedDate":"2021-10-12"},{"lineNumber":45,"author":{"gitId":"YoYoCiti"},"content":"        EditFacilityCommand command \u003d new EditFacilityCommand(INDEX_FIRST, descriptor);","lastModifiedDate":"2021-10-12"},{"lineNumber":46,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":47,"author":{"gitId":"YoYoCiti"},"content":"        String expectedMessage \u003d String.format(EditFacilityCommand.MESSAGE_EDIT_FACILITY_SUCCESS, editedFacility);","lastModifiedDate":"2021-10-12"},{"lineNumber":48,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":49,"author":{"gitId":"YoYoCiti"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2021-10-12"},{"lineNumber":50,"author":{"gitId":"YoYoCiti"},"content":"        expectedModel.setFacility(model.getFilteredFacilityList().get(0), editedFacility);","lastModifiedDate":"2021-10-12"},{"lineNumber":51,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":52,"author":{"gitId":"YoYoCiti"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-10-12"},{"lineNumber":53,"author":{"gitId":"YoYoCiti"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":54,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":55,"author":{"gitId":"YoYoCiti"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":56,"author":{"gitId":"YoYoCiti"},"content":"    public void execute_someFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2021-10-12"},{"lineNumber":57,"author":{"gitId":"YoYoCiti"},"content":"        Index indexLastFacility \u003d Index.fromOneBased(model.getFilteredFacilityList().size());","lastModifiedDate":"2021-10-12"},{"lineNumber":58,"author":{"gitId":"YoYoCiti"},"content":"        Facility lastFacility \u003d model.getFilteredFacilityList().get(indexLastFacility.getZeroBased());","lastModifiedDate":"2021-10-12"},{"lineNumber":59,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":60,"author":{"gitId":"YoYoCiti"},"content":"        FacilityBuilder facilityInList \u003d new FacilityBuilder(lastFacility);","lastModifiedDate":"2021-10-12"},{"lineNumber":61,"author":{"gitId":"YoYoCiti"},"content":"        Facility editedFacility \u003d facilityInList.withFacilityName(VALID_FACILITY_NAME_COURT)","lastModifiedDate":"2021-10-12"},{"lineNumber":62,"author":{"gitId":"YoYoCiti"},"content":"                .withLocation(VALID_LOCATION_COURT).build();","lastModifiedDate":"2021-10-12"},{"lineNumber":63,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":64,"author":{"gitId":"YoYoCiti"},"content":"        EditFacilityDescriptor descriptor \u003d","lastModifiedDate":"2021-10-12"},{"lineNumber":65,"author":{"gitId":"YoYoCiti"},"content":"                new EditFacilityDescriptorBuilder().withFacilityName(VALID_FACILITY_NAME_COURT)","lastModifiedDate":"2021-10-12"},{"lineNumber":66,"author":{"gitId":"YoYoCiti"},"content":"                        .withLocation(VALID_LOCATION_COURT).build();","lastModifiedDate":"2021-10-12"},{"lineNumber":67,"author":{"gitId":"YoYoCiti"},"content":"        EditFacilityCommand command \u003d new EditFacilityCommand(indexLastFacility, descriptor);","lastModifiedDate":"2021-10-12"},{"lineNumber":68,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":69,"author":{"gitId":"YoYoCiti"},"content":"        String expectedMessage \u003d String.format(EditFacilityCommand.MESSAGE_EDIT_FACILITY_SUCCESS, editedFacility);","lastModifiedDate":"2021-10-12"},{"lineNumber":70,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":71,"author":{"gitId":"YoYoCiti"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2021-10-12"},{"lineNumber":72,"author":{"gitId":"YoYoCiti"},"content":"        expectedModel.setFacility(lastFacility, editedFacility);","lastModifiedDate":"2021-10-12"},{"lineNumber":73,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":74,"author":{"gitId":"YoYoCiti"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-10-12"},{"lineNumber":75,"author":{"gitId":"YoYoCiti"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":76,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":77,"author":{"gitId":"YoYoCiti"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":78,"author":{"gitId":"YoYoCiti"},"content":"    public void execute_noFieldSpecifiedUnfilteredList_success() {","lastModifiedDate":"2021-10-12"},{"lineNumber":79,"author":{"gitId":"YoYoCiti"},"content":"        EditFacilityCommand command \u003d new EditFacilityCommand(INDEX_FIRST, new EditFacilityDescriptor());","lastModifiedDate":"2021-10-12"},{"lineNumber":80,"author":{"gitId":"YoYoCiti"},"content":"        Facility editedFacility \u003d model.getFilteredFacilityList().get(INDEX_FIRST.getZeroBased());","lastModifiedDate":"2021-10-12"},{"lineNumber":81,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":82,"author":{"gitId":"YoYoCiti"},"content":"        String expectedMessage \u003d String.format(EditFacilityCommand.MESSAGE_EDIT_FACILITY_SUCCESS, editedFacility);","lastModifiedDate":"2021-10-12"},{"lineNumber":83,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":84,"author":{"gitId":"YoYoCiti"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2021-10-12"},{"lineNumber":85,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":86,"author":{"gitId":"YoYoCiti"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-10-12"},{"lineNumber":87,"author":{"gitId":"YoYoCiti"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":88,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":89,"author":{"gitId":"YoYoCiti"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":90,"author":{"gitId":"YoYoCiti"},"content":"    public void execute_filteredList_success() {","lastModifiedDate":"2021-10-12"},{"lineNumber":91,"author":{"gitId":"YoYoCiti"},"content":"        showFacilityAtIndex(model, INDEX_FIRST);","lastModifiedDate":"2021-10-12"},{"lineNumber":92,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":93,"author":{"gitId":"YoYoCiti"},"content":"        Facility facilityInFilteredList \u003d model.getFilteredFacilityList().get(INDEX_FIRST.getZeroBased());","lastModifiedDate":"2021-10-12"},{"lineNumber":94,"author":{"gitId":"YoYoCiti"},"content":"        Facility editedFacility \u003d new FacilityBuilder(facilityInFilteredList)","lastModifiedDate":"2021-10-12"},{"lineNumber":95,"author":{"gitId":"YoYoCiti"},"content":"                .withFacilityName(VALID_FACILITY_NAME_COURT).build();","lastModifiedDate":"2021-10-12"},{"lineNumber":96,"author":{"gitId":"YoYoCiti"},"content":"        EditFacilityCommand command \u003d new EditFacilityCommand(INDEX_FIRST,","lastModifiedDate":"2021-10-12"},{"lineNumber":97,"author":{"gitId":"YoYoCiti"},"content":"                new EditFacilityDescriptorBuilder().withFacilityName(VALID_FACILITY_NAME_COURT).build());","lastModifiedDate":"2021-10-12"},{"lineNumber":98,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":99,"author":{"gitId":"YoYoCiti"},"content":"        String expectedMessage \u003d String.format(EditFacilityCommand.MESSAGE_EDIT_FACILITY_SUCCESS, editedFacility);","lastModifiedDate":"2021-10-12"},{"lineNumber":100,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":101,"author":{"gitId":"YoYoCiti"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2021-10-12"},{"lineNumber":102,"author":{"gitId":"YoYoCiti"},"content":"        expectedModel.setFacility(model.getFilteredFacilityList().get(0), editedFacility);","lastModifiedDate":"2021-10-12"},{"lineNumber":103,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":104,"author":{"gitId":"YoYoCiti"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-10-12"},{"lineNumber":105,"author":{"gitId":"YoYoCiti"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":106,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":107,"author":{"gitId":"YoYoCiti"},"content":"    @Test","lastModifiedDate":"2021-11-01"},{"lineNumber":108,"author":{"gitId":"YoYoCiti"},"content":"    public void execute_unfilteredListCapacityBelowNumberOfAllocations_clearsAllocation() {","lastModifiedDate":"2021-11-01"},{"lineNumber":109,"author":{"gitId":"YoYoCiti"},"content":"        Model model \u003d new ModelManager(new AddressBook(), new UserPrefs());","lastModifiedDate":"2021-11-01"},{"lineNumber":110,"author":{"gitId":"YoYoCiti"},"content":"        Facility facility \u003d new FacilityBuilder(TAMPINES_HUB_FIELD_SECTION_B).build();","lastModifiedDate":"2021-11-01"},{"lineNumber":111,"author":{"gitId":"YoYoCiti"},"content":"        Facility editedFacility \u003d new FacilityBuilder(facility)","lastModifiedDate":"2021-11-01"},{"lineNumber":112,"author":{"gitId":"YoYoCiti"},"content":"                .withCapacity(\"1\").build();","lastModifiedDate":"2021-11-01"},{"lineNumber":113,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":114,"author":{"gitId":"YoYoCiti"},"content":"        model.addPerson(AMY);","lastModifiedDate":"2021-11-01"},{"lineNumber":115,"author":{"gitId":"YoYoCiti"},"content":"        model.addPerson(BOB);","lastModifiedDate":"2021-11-01"},{"lineNumber":116,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":117,"author":{"gitId":"YoYoCiti"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2021-11-01"},{"lineNumber":118,"author":{"gitId":"YoYoCiti"},"content":"        expectedModel.addFacility(editedFacility);","lastModifiedDate":"2021-11-01"},{"lineNumber":119,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":120,"author":{"gitId":"YoYoCiti"},"content":"        model.addFacility(facility);","lastModifiedDate":"2021-11-01"},{"lineNumber":121,"author":{"gitId":"YoYoCiti"},"content":"        model.split(new PersonAvailableOnDayPredicate(1));","lastModifiedDate":"2021-11-01"},{"lineNumber":122,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":123,"author":{"gitId":"YoYoCiti"},"content":"        EditFacilityDescriptor descriptor \u003d","lastModifiedDate":"2021-11-01"},{"lineNumber":124,"author":{"gitId":"YoYoCiti"},"content":"                new EditFacilityDescriptorBuilder(facility).withCapacity(\"1\").build();","lastModifiedDate":"2021-11-01"},{"lineNumber":125,"author":{"gitId":"YoYoCiti"},"content":"        EditFacilityCommand command \u003d new EditFacilityCommand(INDEX_FIRST, descriptor);","lastModifiedDate":"2021-11-01"},{"lineNumber":126,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":127,"author":{"gitId":"YoYoCiti"},"content":"        String expectedMessage \u003d String.format(EditFacilityCommand.MESSAGE_EDIT_FACILITY_SUCCESS, editedFacility);","lastModifiedDate":"2021-11-01"},{"lineNumber":128,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":129,"author":{"gitId":"YoYoCiti"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-11-01"},{"lineNumber":130,"author":{"gitId":"YoYoCiti"},"content":"    }","lastModifiedDate":"2021-11-01"},{"lineNumber":131,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":132,"author":{"gitId":"YoYoCiti"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":133,"author":{"gitId":"YoYoCiti"},"content":"    public void execute_duplicateFacilityUnfilteredList_failure() {","lastModifiedDate":"2021-10-12"},{"lineNumber":134,"author":{"gitId":"YoYoCiti"},"content":"        Facility firstFacility \u003d model.getFilteredFacilityList().get(INDEX_FIRST.getZeroBased());","lastModifiedDate":"2021-10-12"},{"lineNumber":135,"author":{"gitId":"YoYoCiti"},"content":"        EditFacilityDescriptor descriptor \u003d new EditFacilityDescriptorBuilder(firstFacility).build();","lastModifiedDate":"2021-10-12"},{"lineNumber":136,"author":{"gitId":"YoYoCiti"},"content":"        EditFacilityCommand command \u003d new EditFacilityCommand(INDEX_SECOND, descriptor);","lastModifiedDate":"2021-10-12"},{"lineNumber":137,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":138,"author":{"gitId":"YoYoCiti"},"content":"        assertCommandFailure(command, model, EditFacilityCommand.MESSAGE_DUPLICATE_FACILITY);","lastModifiedDate":"2021-10-12"},{"lineNumber":139,"author":{"gitId":"YoYoCiti"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":140,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":141,"author":{"gitId":"YoYoCiti"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":142,"author":{"gitId":"YoYoCiti"},"content":"    public void execute_duplicateFacilityFilteredList() {","lastModifiedDate":"2021-10-12"},{"lineNumber":143,"author":{"gitId":"YoYoCiti"},"content":"        showFacilityAtIndex(model, INDEX_FIRST);","lastModifiedDate":"2021-10-12"},{"lineNumber":144,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":145,"author":{"gitId":"YoYoCiti"},"content":"        Facility facilityInList \u003d model.getAddressBook().getFacilityList().get(INDEX_SECOND.getZeroBased());","lastModifiedDate":"2021-10-12"},{"lineNumber":146,"author":{"gitId":"YoYoCiti"},"content":"        EditFacilityCommand command \u003d new EditFacilityCommand(INDEX_FIRST,","lastModifiedDate":"2021-10-12"},{"lineNumber":147,"author":{"gitId":"YoYoCiti"},"content":"                new EditFacilityDescriptorBuilder(facilityInList).build());","lastModifiedDate":"2021-10-12"},{"lineNumber":148,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":149,"author":{"gitId":"YoYoCiti"},"content":"        assertCommandFailure(command, model, EditFacilityCommand.MESSAGE_DUPLICATE_FACILITY);","lastModifiedDate":"2021-10-12"},{"lineNumber":150,"author":{"gitId":"YoYoCiti"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":151,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":152,"author":{"gitId":"YoYoCiti"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":153,"author":{"gitId":"YoYoCiti"},"content":"    public void execute_invalidFacilityIndexUnfilteredList_failure() {","lastModifiedDate":"2021-10-12"},{"lineNumber":154,"author":{"gitId":"YoYoCiti"},"content":"        Index outOfBoundsIndex \u003d Index.fromOneBased(model.getFilteredFacilityList().size() + 1);","lastModifiedDate":"2021-10-12"},{"lineNumber":155,"author":{"gitId":"YoYoCiti"},"content":"        EditFacilityDescriptor descriptor \u003d new EditFacilityDescriptorBuilder()","lastModifiedDate":"2021-10-12"},{"lineNumber":156,"author":{"gitId":"YoYoCiti"},"content":"                .withFacilityName(VALID_FACILITY_NAME_COURT).build();","lastModifiedDate":"2021-10-12"},{"lineNumber":157,"author":{"gitId":"YoYoCiti"},"content":"        EditFacilityCommand command \u003d new EditFacilityCommand(outOfBoundsIndex, descriptor);","lastModifiedDate":"2021-10-12"},{"lineNumber":158,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":159,"author":{"gitId":"YoYoCiti"},"content":"        assertCommandFailure(command, model, Messages.MESSAGE_INVALID_FACILITY_DISPLAYED_INDEX);","lastModifiedDate":"2021-10-12"},{"lineNumber":160,"author":{"gitId":"YoYoCiti"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":161,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":162,"author":{"gitId":"YoYoCiti"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":163,"author":{"gitId":"YoYoCiti"},"content":"    public void execute_invalidFacilityIndexFilteredList_failure() {","lastModifiedDate":"2021-10-12"},{"lineNumber":164,"author":{"gitId":"YoYoCiti"},"content":"        showFacilityAtIndex(model, INDEX_FIRST);","lastModifiedDate":"2021-10-12"},{"lineNumber":165,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":166,"author":{"gitId":"YoYoCiti"},"content":"        Index outOfBoundsIndex \u003d INDEX_SECOND;","lastModifiedDate":"2021-10-12"},{"lineNumber":167,"author":{"gitId":"YoYoCiti"},"content":"        assertTrue(outOfBoundsIndex.getZeroBased() \u003c model.getAddressBook().getFacilityList().size());","lastModifiedDate":"2021-10-12"},{"lineNumber":168,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":169,"author":{"gitId":"YoYoCiti"},"content":"        EditFacilityDescriptor descriptor \u003d new EditFacilityDescriptorBuilder()","lastModifiedDate":"2021-10-12"},{"lineNumber":170,"author":{"gitId":"YoYoCiti"},"content":"                .withFacilityName(VALID_FACILITY_NAME_COURT).build();","lastModifiedDate":"2021-10-12"},{"lineNumber":171,"author":{"gitId":"YoYoCiti"},"content":"        EditFacilityCommand command \u003d new EditFacilityCommand(outOfBoundsIndex, descriptor);","lastModifiedDate":"2021-10-12"},{"lineNumber":172,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":173,"author":{"gitId":"YoYoCiti"},"content":"        assertCommandFailure(command, model, Messages.MESSAGE_INVALID_FACILITY_DISPLAYED_INDEX);","lastModifiedDate":"2021-10-12"},{"lineNumber":174,"author":{"gitId":"YoYoCiti"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":175,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":176,"author":{"gitId":"YoYoCiti"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":177,"author":{"gitId":"YoYoCiti"},"content":"    public void equals() {","lastModifiedDate":"2021-10-12"},{"lineNumber":178,"author":{"gitId":"YoYoCiti"},"content":"        EditFacilityDescriptor desc1 \u003d new EditFacilityDescriptorBuilder().withFacilityName(VALID_FACILITY_NAME_COURT)","lastModifiedDate":"2021-10-12"},{"lineNumber":179,"author":{"gitId":"YoYoCiti"},"content":"                .withLocation(VALID_LOCATION_COURT).build();","lastModifiedDate":"2021-10-12"},{"lineNumber":180,"author":{"gitId":"YoYoCiti"},"content":"        EditFacilityDescriptor desc2 \u003d new EditFacilityDescriptorBuilder().withFacilityName(VALID_FACILITY_NAME_FIELD)","lastModifiedDate":"2021-10-12"},{"lineNumber":181,"author":{"gitId":"YoYoCiti"},"content":"                .withLocation(VALID_LOCATION_FIELD).build();","lastModifiedDate":"2021-10-12"},{"lineNumber":182,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":183,"author":{"gitId":"YoYoCiti"},"content":"        final EditFacilityCommand standardCommand \u003d new EditFacilityCommand(INDEX_FIRST, desc1);","lastModifiedDate":"2021-10-12"},{"lineNumber":184,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":185,"author":{"gitId":"YoYoCiti"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2021-10-12"},{"lineNumber":186,"author":{"gitId":"YoYoCiti"},"content":"        EditFacilityDescriptor copyDescriptor \u003d new EditFacilityDescriptor(desc1);","lastModifiedDate":"2021-10-12"},{"lineNumber":187,"author":{"gitId":"YoYoCiti"},"content":"        EditFacilityCommand commandWithSameValues \u003d new EditFacilityCommand(INDEX_FIRST, copyDescriptor);","lastModifiedDate":"2021-10-12"},{"lineNumber":188,"author":{"gitId":"YoYoCiti"},"content":"        assertTrue(standardCommand.equals(commandWithSameValues));","lastModifiedDate":"2021-10-12"},{"lineNumber":189,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":190,"author":{"gitId":"YoYoCiti"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-10-12"},{"lineNumber":191,"author":{"gitId":"YoYoCiti"},"content":"        assertTrue(standardCommand.equals(standardCommand));","lastModifiedDate":"2021-10-12"},{"lineNumber":192,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":193,"author":{"gitId":"YoYoCiti"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-10-12"},{"lineNumber":194,"author":{"gitId":"YoYoCiti"},"content":"        assertFalse(standardCommand.equals(null));","lastModifiedDate":"2021-10-12"},{"lineNumber":195,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":196,"author":{"gitId":"YoYoCiti"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2021-10-12"},{"lineNumber":197,"author":{"gitId":"YoYoCiti"},"content":"        assertFalse(standardCommand.equals(new ClearMembersCommand()));","lastModifiedDate":"2021-10-12"},{"lineNumber":198,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":199,"author":{"gitId":"YoYoCiti"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2021-10-12"},{"lineNumber":200,"author":{"gitId":"YoYoCiti"},"content":"        assertFalse(standardCommand.equals(new EditFacilityCommand(INDEX_SECOND, desc1)));","lastModifiedDate":"2021-10-12"},{"lineNumber":201,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":202,"author":{"gitId":"YoYoCiti"},"content":"        // different descriptor -\u003e returns false","lastModifiedDate":"2021-10-12"},{"lineNumber":203,"author":{"gitId":"YoYoCiti"},"content":"        assertFalse(standardCommand.equals(new EditFacilityCommand(INDEX_FIRST, desc2)));","lastModifiedDate":"2021-10-12"},{"lineNumber":204,"author":{"gitId":"YoYoCiti"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":205,"author":{"gitId":"YoYoCiti"},"content":"}","lastModifiedDate":"2021-10-12"}],"authorContributionMap":{"YoYoCiti":205}},{"path":"src/test/java/seedu/address/logic/commands/EditFacilityDescriptorTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"YoYoCiti"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-10-12"},{"lineNumber":2,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":3,"author":{"gitId":"YoYoCiti"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-12"},{"lineNumber":4,"author":{"gitId":"YoYoCiti"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-12"},{"lineNumber":5,"author":{"gitId":"YoYoCiti"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_FACILITY_NAME_COURT;","lastModifiedDate":"2021-10-12"},{"lineNumber":6,"author":{"gitId":"YoYoCiti"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_FACILITY_NAME_FIELD;","lastModifiedDate":"2021-10-12"},{"lineNumber":7,"author":{"gitId":"YoYoCiti"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_LOCATION_COURT;","lastModifiedDate":"2021-10-12"},{"lineNumber":8,"author":{"gitId":"YoYoCiti"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_LOCATION_FIELD;","lastModifiedDate":"2021-10-12"},{"lineNumber":9,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":10,"author":{"gitId":"YoYoCiti"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-12"},{"lineNumber":11,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":12,"author":{"gitId":"YoYoCiti"},"content":"import seedu.address.testutil.EditFacilityDescriptorBuilder;","lastModifiedDate":"2021-10-12"},{"lineNumber":13,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":14,"author":{"gitId":"YoYoCiti"},"content":"public class EditFacilityDescriptorTest {","lastModifiedDate":"2021-10-12"},{"lineNumber":15,"author":{"gitId":"YoYoCiti"},"content":"    private EditFacilityCommand.EditFacilityDescriptor desc1 \u003d","lastModifiedDate":"2021-10-12"},{"lineNumber":16,"author":{"gitId":"YoYoCiti"},"content":"            new EditFacilityDescriptorBuilder()","lastModifiedDate":"2021-10-12"},{"lineNumber":17,"author":{"gitId":"YoYoCiti"},"content":"                    .withFacilityName(VALID_FACILITY_NAME_COURT)","lastModifiedDate":"2021-10-12"},{"lineNumber":18,"author":{"gitId":"YoYoCiti"},"content":"                    .withLocation(VALID_LOCATION_COURT).build();","lastModifiedDate":"2021-10-12"},{"lineNumber":19,"author":{"gitId":"YoYoCiti"},"content":"    private EditFacilityCommand.EditFacilityDescriptor desc2 \u003d","lastModifiedDate":"2021-10-12"},{"lineNumber":20,"author":{"gitId":"YoYoCiti"},"content":"            new EditFacilityDescriptorBuilder()","lastModifiedDate":"2021-10-12"},{"lineNumber":21,"author":{"gitId":"YoYoCiti"},"content":"                    .withFacilityName(VALID_FACILITY_NAME_FIELD)","lastModifiedDate":"2021-10-12"},{"lineNumber":22,"author":{"gitId":"YoYoCiti"},"content":"                    .withLocation(VALID_LOCATION_FIELD).build();","lastModifiedDate":"2021-10-12"},{"lineNumber":23,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":24,"author":{"gitId":"YoYoCiti"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":25,"author":{"gitId":"YoYoCiti"},"content":"    public void equals() {","lastModifiedDate":"2021-10-12"},{"lineNumber":26,"author":{"gitId":"YoYoCiti"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2021-10-12"},{"lineNumber":27,"author":{"gitId":"YoYoCiti"},"content":"        EditFacilityCommand.EditFacilityDescriptor descriptorWithSameValues \u003d","lastModifiedDate":"2021-10-12"},{"lineNumber":28,"author":{"gitId":"YoYoCiti"},"content":"                new EditFacilityCommand.EditFacilityDescriptor(desc1);","lastModifiedDate":"2021-10-12"},{"lineNumber":29,"author":{"gitId":"YoYoCiti"},"content":"        assertTrue(desc1.equals(descriptorWithSameValues));","lastModifiedDate":"2021-10-12"},{"lineNumber":30,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":31,"author":{"gitId":"YoYoCiti"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-10-12"},{"lineNumber":32,"author":{"gitId":"YoYoCiti"},"content":"        assertTrue(desc1.equals(desc1));","lastModifiedDate":"2021-10-12"},{"lineNumber":33,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":34,"author":{"gitId":"YoYoCiti"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-10-12"},{"lineNumber":35,"author":{"gitId":"YoYoCiti"},"content":"        assertFalse(desc1.equals(null));","lastModifiedDate":"2021-10-12"},{"lineNumber":36,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":37,"author":{"gitId":"YoYoCiti"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2021-10-12"},{"lineNumber":38,"author":{"gitId":"YoYoCiti"},"content":"        assertFalse(desc1.equals(5));","lastModifiedDate":"2021-10-12"},{"lineNumber":39,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":40,"author":{"gitId":"YoYoCiti"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2021-10-12"},{"lineNumber":41,"author":{"gitId":"YoYoCiti"},"content":"        assertFalse(desc1.equals(desc2));","lastModifiedDate":"2021-10-12"},{"lineNumber":42,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":43,"author":{"gitId":"YoYoCiti"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2021-10-12"},{"lineNumber":44,"author":{"gitId":"YoYoCiti"},"content":"        EditFacilityCommand.EditFacilityDescriptor editedDesc1 \u003d","lastModifiedDate":"2021-10-12"},{"lineNumber":45,"author":{"gitId":"YoYoCiti"},"content":"                new EditFacilityDescriptorBuilder(desc1)","lastModifiedDate":"2021-10-12"},{"lineNumber":46,"author":{"gitId":"YoYoCiti"},"content":"                        .withFacilityName(VALID_FACILITY_NAME_FIELD).build();","lastModifiedDate":"2021-10-12"},{"lineNumber":47,"author":{"gitId":"YoYoCiti"},"content":"        assertFalse(desc1.equals(desc2));","lastModifiedDate":"2021-10-12"},{"lineNumber":48,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":49,"author":{"gitId":"YoYoCiti"},"content":"        // different location -\u003e returns false","lastModifiedDate":"2021-10-12"},{"lineNumber":50,"author":{"gitId":"YoYoCiti"},"content":"        editedDesc1 \u003d new EditFacilityDescriptorBuilder(desc1)","lastModifiedDate":"2021-10-12"},{"lineNumber":51,"author":{"gitId":"YoYoCiti"},"content":"                .withLocation(VALID_LOCATION_FIELD).build();","lastModifiedDate":"2021-10-12"},{"lineNumber":52,"author":{"gitId":"YoYoCiti"},"content":"        assertFalse(desc1.equals(editedDesc1));","lastModifiedDate":"2021-10-12"},{"lineNumber":53,"author":{"gitId":"YoYoCiti"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":54,"author":{"gitId":"YoYoCiti"},"content":"}","lastModifiedDate":"2021-10-12"}],"authorContributionMap":{"YoYoCiti":54}},{"path":"src/test/java/seedu/address/logic/commands/EditMemberCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-05-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"tsinyee"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_EXCO;","lastModifiedDate":"2021-10-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2018-01-31"},{"lineNumber":13,"author":{"gitId":"YoYoCiti"},"content":"import static seedu.address.testutil.TypicalAddressBook.getTypicalAddressBook;","lastModifiedDate":"2021-10-09"},{"lineNumber":14,"author":{"gitId":"YoYoCiti"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST;","lastModifiedDate":"2021-10-09"},{"lineNumber":15,"author":{"gitId":"YoYoCiti"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND;","lastModifiedDate":"2021-10-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2017-05-04"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":21,"author":{"gitId":"tsinyee"},"content":"import seedu.address.logic.commands.EditMemberCommand.EditPersonDescriptor;","lastModifiedDate":"2021-10-10"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-05-04"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-05-04"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-05-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-05-04"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-05-04"},{"lineNumber":27,"author":{"gitId":"tsinyee"},"content":"import seedu.address.testutil.EditMemberDescriptorBuilder;","lastModifiedDate":"2021-10-10"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-05-04"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-04"},{"lineNumber":31,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for EditCommand.","lastModifiedDate":"2020-12-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-04"},{"lineNumber":33,"author":{"gitId":"tsinyee"},"content":"public class EditMemberCommandTest {","lastModifiedDate":"2021-10-10"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public void execute_allFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-05-26"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":41,"author":{"gitId":"tsinyee"},"content":"        EditPersonDescriptor descriptor \u003d new EditMemberDescriptorBuilder(editedPerson).build();","lastModifiedDate":"2021-10-10"},{"lineNumber":42,"author":{"gitId":"YoYoCiti"},"content":"        EditMemberCommand editCommand \u003d new EditMemberCommand(INDEX_FIRST, descriptor);","lastModifiedDate":"2021-10-11"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":44,"author":{"gitId":"tsinyee"},"content":"        String expectedMessage \u003d String.format(EditMemberCommand.MESSAGE_EDIT_PERSON_SUCCESS, editedPerson);","lastModifiedDate":"2021-10-10"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2017-06-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        expectedModel.setPerson(model.getFilteredPersonList().get(0), editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":53,"author":{"gitId":"tsinyee"},"content":"    public void execute_onlyPhoneSpecifiedUnfilteredList_success() {","lastModifiedDate":"2021-10-10"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        Index indexLastPerson \u003d Index.fromOneBased(model.getFilteredPersonList().size());","lastModifiedDate":"2017-05-18"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        Person lastPerson \u003d model.getFilteredPersonList().get(indexLastPerson.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        PersonBuilder personInList \u003d new PersonBuilder(lastPerson);","lastModifiedDate":"2017-05-18"},{"lineNumber":58,"author":{"gitId":"tsinyee"},"content":"        Person editedPerson \u003d personInList.withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2021-10-10"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":60,"author":{"gitId":"tsinyee"},"content":"        EditPersonDescriptor descriptor \u003d new EditMemberDescriptorBuilder().withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2021-10-10"},{"lineNumber":61,"author":{"gitId":"tsinyee"},"content":"        EditMemberCommand editCommand \u003d new EditMemberCommand(indexLastPerson, descriptor);","lastModifiedDate":"2021-10-21"},{"lineNumber":62,"author":{"gitId":"tsinyee"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":63,"author":{"gitId":"tsinyee"},"content":"        String expectedMessage \u003d String.format(EditMemberCommand.MESSAGE_EDIT_PERSON_SUCCESS, editedPerson);","lastModifiedDate":"2021-10-21"},{"lineNumber":64,"author":{"gitId":"tsinyee"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":65,"author":{"gitId":"tsinyee"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2021-10-21"},{"lineNumber":66,"author":{"gitId":"tsinyee"},"content":"        expectedModel.setPerson(lastPerson, editedPerson);","lastModifiedDate":"2021-10-21"},{"lineNumber":67,"author":{"gitId":"tsinyee"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":68,"author":{"gitId":"tsinyee"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-10-21"},{"lineNumber":69,"author":{"gitId":"tsinyee"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":70,"author":{"gitId":"tsinyee"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":71,"author":{"gitId":"tsinyee"},"content":"    @Test","lastModifiedDate":"2021-10-21"},{"lineNumber":72,"author":{"gitId":"tsinyee"},"content":"    public void execute_onlyTagsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2021-10-21"},{"lineNumber":73,"author":{"gitId":"tsinyee"},"content":"        Index indexLastPerson \u003d Index.fromOneBased(model.getFilteredPersonList().size());","lastModifiedDate":"2021-10-21"},{"lineNumber":74,"author":{"gitId":"tsinyee"},"content":"        Person lastPerson \u003d model.getFilteredPersonList().get(indexLastPerson.getZeroBased());","lastModifiedDate":"2021-10-21"},{"lineNumber":75,"author":{"gitId":"tsinyee"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":76,"author":{"gitId":"tsinyee"},"content":"        PersonBuilder personInList \u003d new PersonBuilder(lastPerson);","lastModifiedDate":"2021-10-21"},{"lineNumber":77,"author":{"gitId":"tsinyee"},"content":"        Person editedPerson \u003d personInList.withTags(VALID_TAG_EXCO).build();","lastModifiedDate":"2021-10-21"},{"lineNumber":78,"author":{"gitId":"tsinyee"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":79,"author":{"gitId":"tsinyee"},"content":"        EditPersonDescriptor descriptor \u003d new EditMemberDescriptorBuilder().withTags(VALID_TAG_EXCO).build();","lastModifiedDate":"2021-10-21"},{"lineNumber":80,"author":{"gitId":"tsinyee"},"content":"        EditMemberCommand editCommand \u003d new EditMemberCommand(indexLastPerson, descriptor);","lastModifiedDate":"2021-10-10"},{"lineNumber":81,"author":{"gitId":"tsinyee"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":82,"author":{"gitId":"tsinyee"},"content":"        String expectedMessage \u003d String.format(EditMemberCommand.MESSAGE_EDIT_PERSON_SUCCESS, editedPerson);","lastModifiedDate":"2021-10-10"},{"lineNumber":83,"author":{"gitId":"tsinyee"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":84,"author":{"gitId":"tsinyee"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2021-10-10"},{"lineNumber":85,"author":{"gitId":"tsinyee"},"content":"        expectedModel.setPerson(lastPerson, editedPerson);","lastModifiedDate":"2021-10-10"},{"lineNumber":86,"author":{"gitId":"tsinyee"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":87,"author":{"gitId":"tsinyee"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-10-10"},{"lineNumber":88,"author":{"gitId":"tsinyee"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":89,"author":{"gitId":"tsinyee"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":90,"author":{"gitId":"tsinyee"},"content":"    @Test","lastModifiedDate":"2021-10-10"},{"lineNumber":91,"author":{"gitId":"tsinyee"},"content":"    public void execute_onlyNameSpecifiedUnfilteredList_success() {","lastModifiedDate":"2021-10-10"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        Index indexLastPerson \u003d Index.fromOneBased(model.getFilteredPersonList().size());","lastModifiedDate":"2017-05-18"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        Person lastPerson \u003d model.getFilteredPersonList().get(indexLastPerson.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        PersonBuilder personInList \u003d new PersonBuilder(lastPerson);","lastModifiedDate":"2017-05-18"},{"lineNumber":96,"author":{"gitId":"tsinyee"},"content":"        Person editedPerson \u003d personInList.withName(VALID_NAME_BOB).build();","lastModifiedDate":"2021-10-10"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":98,"author":{"gitId":"tsinyee"},"content":"        EditPersonDescriptor descriptor \u003d new EditMemberDescriptorBuilder().withName(VALID_NAME_BOB).build();","lastModifiedDate":"2021-10-10"},{"lineNumber":99,"author":{"gitId":"tsinyee"},"content":"        EditMemberCommand editCommand \u003d new EditMemberCommand(indexLastPerson, descriptor);","lastModifiedDate":"2021-10-10"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":101,"author":{"gitId":"tsinyee"},"content":"        String expectedMessage \u003d String.format(EditMemberCommand.MESSAGE_EDIT_PERSON_SUCCESS, editedPerson);","lastModifiedDate":"2021-10-10"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2017-05-18"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        expectedModel.setPerson(lastPerson, editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    public void execute_noFieldSpecifiedUnfilteredList_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":112,"author":{"gitId":"YoYoCiti"},"content":"        EditMemberCommand editCommand \u003d new EditMemberCommand(INDEX_FIRST, new EditPersonDescriptor());","lastModifiedDate":"2021-10-11"},{"lineNumber":113,"author":{"gitId":"YoYoCiti"},"content":"        Person editedPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST.getZeroBased());","lastModifiedDate":"2021-10-09"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":115,"author":{"gitId":"tsinyee"},"content":"        String expectedMessage \u003d String.format(EditMemberCommand.MESSAGE_EDIT_PERSON_SUCCESS, editedPerson);","lastModifiedDate":"2021-10-10"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2017-05-18"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    public void execute_filteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":124,"author":{"gitId":"YoYoCiti"},"content":"        showPersonAtIndex(model, INDEX_FIRST);","lastModifiedDate":"2021-10-09"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":126,"author":{"gitId":"YoYoCiti"},"content":"        Person personInFilteredList \u003d model.getFilteredPersonList().get(INDEX_FIRST.getZeroBased());","lastModifiedDate":"2021-10-09"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d new PersonBuilder(personInFilteredList).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2017-05-18"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":129,"author":{"gitId":"YoYoCiti"},"content":"        EditMemberCommand editCommand \u003d new EditMemberCommand(INDEX_FIRST,","lastModifiedDate":"2021-10-11"},{"lineNumber":130,"author":{"gitId":"tsinyee"},"content":"                new EditMemberDescriptorBuilder().withName(VALID_NAME_BOB).build());","lastModifiedDate":"2021-10-10"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":132,"author":{"gitId":"tsinyee"},"content":"        String expectedMessage \u003d String.format(EditMemberCommand.MESSAGE_EDIT_PERSON_SUCCESS, editedPerson);","lastModifiedDate":"2021-10-10"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2017-05-18"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        expectedModel.setPerson(model.getFilteredPersonList().get(0), editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    public void execute_duplicatePersonUnfilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":143,"author":{"gitId":"YoYoCiti"},"content":"        Person firstPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST.getZeroBased());","lastModifiedDate":"2021-10-09"},{"lineNumber":144,"author":{"gitId":"tsinyee"},"content":"        EditPersonDescriptor descriptor \u003d new EditMemberDescriptorBuilder(firstPerson).build();","lastModifiedDate":"2021-10-10"},{"lineNumber":145,"author":{"gitId":"YoYoCiti"},"content":"        EditMemberCommand editCommand \u003d new EditMemberCommand(INDEX_SECOND, descriptor);","lastModifiedDate":"2021-10-11"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":147,"author":{"gitId":"tsinyee"},"content":"        assertCommandFailure(editCommand, model, EditMemberCommand.MESSAGE_DUPLICATE_MEMBER);","lastModifiedDate":"2021-10-10"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    public void execute_duplicatePersonFilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":152,"author":{"gitId":"YoYoCiti"},"content":"        showPersonAtIndex(model, INDEX_FIRST);","lastModifiedDate":"2021-10-09"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        // edit person in filtered list into a duplicate in address book","lastModifiedDate":"2017-05-18"},{"lineNumber":155,"author":{"gitId":"YoYoCiti"},"content":"        Person personInList \u003d model.getAddressBook().getPersonList().get(INDEX_SECOND.getZeroBased());","lastModifiedDate":"2021-10-09"},{"lineNumber":156,"author":{"gitId":"YoYoCiti"},"content":"        EditMemberCommand editCommand \u003d new EditMemberCommand(INDEX_FIRST,","lastModifiedDate":"2021-10-11"},{"lineNumber":157,"author":{"gitId":"tsinyee"},"content":"                new EditMemberDescriptorBuilder(personInList).build());","lastModifiedDate":"2021-10-10"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":159,"author":{"gitId":"tsinyee"},"content":"        assertCommandFailure(editCommand, model, EditMemberCommand.MESSAGE_DUPLICATE_MEMBER);","lastModifiedDate":"2021-10-10"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    public void execute_invalidPersonIndexUnfilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPersonList().size() + 1);","lastModifiedDate":"2017-05-18"},{"lineNumber":165,"author":{"gitId":"tsinyee"},"content":"        EditPersonDescriptor descriptor \u003d new EditMemberDescriptorBuilder().withName(VALID_NAME_BOB).build();","lastModifiedDate":"2021-10-10"},{"lineNumber":166,"author":{"gitId":"tsinyee"},"content":"        EditMemberCommand editCommand \u003d new EditMemberCommand(outOfBoundIndex, descriptor);","lastModifiedDate":"2021-10-10"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":168,"author":{"gitId":"felix-ong"},"content":"        assertCommandFailure(editCommand, model, Messages.MESSAGE_INVALID_MEMBER_DISPLAYED_INDEX);","lastModifiedDate":"2021-10-05"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-18"},{"lineNumber":172,"author":{"gitId":"-"},"content":"     * Edit filtered list where index is larger than size of filtered list,","lastModifiedDate":"2017-05-18"},{"lineNumber":173,"author":{"gitId":"-"},"content":"     * but smaller than size of address book","lastModifiedDate":"2017-05-18"},{"lineNumber":174,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-18"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    public void execute_invalidPersonIndexFilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":177,"author":{"gitId":"YoYoCiti"},"content":"        showPersonAtIndex(model, INDEX_FIRST);","lastModifiedDate":"2021-10-09"},{"lineNumber":178,"author":{"gitId":"YoYoCiti"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND;","lastModifiedDate":"2021-10-09"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2017-05-18"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getPersonList().size());","lastModifiedDate":"2017-05-18"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":182,"author":{"gitId":"tsinyee"},"content":"        EditMemberCommand editCommand \u003d new EditMemberCommand(outOfBoundIndex,","lastModifiedDate":"2021-10-10"},{"lineNumber":183,"author":{"gitId":"tsinyee"},"content":"                new EditMemberDescriptorBuilder().withName(VALID_NAME_BOB).build());","lastModifiedDate":"2021-10-10"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":185,"author":{"gitId":"felix-ong"},"content":"        assertCommandFailure(editCommand, model, Messages.MESSAGE_INVALID_MEMBER_DISPLAYED_INDEX);","lastModifiedDate":"2021-10-05"},{"lineNumber":186,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":188,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-01-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-08-08"},{"lineNumber":190,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":191,"author":{"gitId":"YoYoCiti"},"content":"        final EditMemberCommand standardCommand \u003d new EditMemberCommand(INDEX_FIRST, DESC_AMY);","lastModifiedDate":"2021-10-11"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":193,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-08"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        EditPersonDescriptor copyDescriptor \u003d new EditPersonDescriptor(DESC_AMY);","lastModifiedDate":"2017-05-08"},{"lineNumber":195,"author":{"gitId":"YoYoCiti"},"content":"        EditMemberCommand commandWithSameValues \u003d new EditMemberCommand(INDEX_FIRST, copyDescriptor);","lastModifiedDate":"2021-10-11"},{"lineNumber":196,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":197,"author":{"gitId":"-"},"content":"        assertTrue(standardCommand.equals(commandWithSameValues));","lastModifiedDate":"2017-05-08"},{"lineNumber":198,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":199,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-08"},{"lineNumber":200,"author":{"gitId":"-"},"content":"        assertTrue(standardCommand.equals(standardCommand));","lastModifiedDate":"2017-05-08"},{"lineNumber":201,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":202,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":203,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(null));","lastModifiedDate":"2017-05-08"},{"lineNumber":204,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":206,"author":{"gitId":"felix-ong"},"content":"        assertFalse(standardCommand.equals(new ClearMembersCommand()));","lastModifiedDate":"2021-09-30"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":208,"author":{"gitId":"-"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":209,"author":{"gitId":"YoYoCiti"},"content":"        assertFalse(standardCommand.equals(new EditMemberCommand(INDEX_SECOND, DESC_AMY)));","lastModifiedDate":"2021-10-11"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":211,"author":{"gitId":"-"},"content":"        // different descriptor -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":212,"author":{"gitId":"YoYoCiti"},"content":"        assertFalse(standardCommand.equals(new EditMemberCommand(INDEX_FIRST, DESC_BOB)));","lastModifiedDate":"2021-10-11"},{"lineNumber":213,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":215,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-08"}],"authorContributionMap":{"YoYoCiti":22,"-":135,"tsinyee":55,"felix-ong":3}},{"path":"src/test/java/seedu/address/logic/commands/EditMemberDescriptorTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-05-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"tsinyee"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_EXCO;","lastModifiedDate":"2021-10-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":13,"author":{"gitId":"tsinyee"},"content":"import seedu.address.logic.commands.EditMemberCommand.EditPersonDescriptor;","lastModifiedDate":"2021-10-10"},{"lineNumber":14,"author":{"gitId":"tsinyee"},"content":"import seedu.address.testutil.EditMemberDescriptorBuilder;","lastModifiedDate":"2021-10-10"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":16,"author":{"gitId":"tsinyee"},"content":"public class EditMemberDescriptorTest {","lastModifiedDate":"2021-10-10"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptorWithSameValues \u003d new EditPersonDescriptor(DESC_AMY);","lastModifiedDate":"2017-05-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        assertTrue(DESC_AMY.equals(descriptorWithSameValues));","lastModifiedDate":"2017-05-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertTrue(DESC_AMY.equals(DESC_AMY));","lastModifiedDate":"2017-05-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(null));","lastModifiedDate":"2017-05-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(5));","lastModifiedDate":"2017-05-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(DESC_BOB));","lastModifiedDate":"2017-05-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":37,"author":{"gitId":"tsinyee"},"content":"        EditPersonDescriptor editedAmy \u003d new EditMemberDescriptorBuilder(DESC_AMY).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2021-10-10"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        // different phone -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":41,"author":{"gitId":"tsinyee"},"content":"        editedAmy \u003d new EditMemberDescriptorBuilder(DESC_AMY).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2021-10-10"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        // different tags -\u003e returns false","lastModifiedDate":"2021-10-21"},{"lineNumber":45,"author":{"gitId":"tsinyee"},"content":"        editedAmy \u003d new EditMemberDescriptorBuilder(DESC_AMY).withTags(VALID_TAG_EXCO).build();","lastModifiedDate":"2021-10-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2021-10-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-05"}],"authorContributionMap":{"-":41,"tsinyee":7}},{"path":"src/test/java/seedu/address/logic/commands/FindFacilityCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"YoYoCiti"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-10-06"},{"lineNumber":2,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":3,"author":{"gitId":"YoYoCiti"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-09"},{"lineNumber":4,"author":{"gitId":"YoYoCiti"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-06"},{"lineNumber":5,"author":{"gitId":"YoYoCiti"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-06"},{"lineNumber":6,"author":{"gitId":"YoYoCiti"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-10-09"},{"lineNumber":7,"author":{"gitId":"YoYoCiti"},"content":"import static seedu.address.testutil.TypicalAddressBook.getTypicalAddressBook;","lastModifiedDate":"2021-10-09"},{"lineNumber":8,"author":{"gitId":"YoYoCiti"},"content":"import static seedu.address.testutil.TypicalFacilities.KENT_RIDGE_OUTDOOR_TENNIS_COURTS_COURT_1;","lastModifiedDate":"2021-10-09"},{"lineNumber":9,"author":{"gitId":"YoYoCiti"},"content":"import static seedu.address.testutil.TypicalFacilities.KENT_RIDGE_OUTDOOR_TENNIS_COURTS_COURT_10;","lastModifiedDate":"2021-10-09"},{"lineNumber":10,"author":{"gitId":"YoYoCiti"},"content":"import static seedu.address.testutil.TypicalFacilities.UTOWN_FIELD_SECTION_A;","lastModifiedDate":"2021-10-09"},{"lineNumber":11,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":12,"author":{"gitId":"YoYoCiti"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-10-09"},{"lineNumber":13,"author":{"gitId":"YoYoCiti"},"content":"import java.util.Collections;","lastModifiedDate":"2021-10-06"},{"lineNumber":14,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":15,"author":{"gitId":"YoYoCiti"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-06"},{"lineNumber":16,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":17,"author":{"gitId":"YoYoCiti"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2021-10-09"},{"lineNumber":18,"author":{"gitId":"YoYoCiti"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-10-09"},{"lineNumber":19,"author":{"gitId":"YoYoCiti"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2021-10-09"},{"lineNumber":20,"author":{"gitId":"YoYoCiti"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2021-10-09"},{"lineNumber":21,"author":{"gitId":"YoYoCiti"},"content":"import seedu.address.model.facility.LocationContainsKeywordsPredicate;","lastModifiedDate":"2021-10-06"},{"lineNumber":22,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":23,"author":{"gitId":"YoYoCiti"},"content":"/**","lastModifiedDate":"2021-10-06"},{"lineNumber":24,"author":{"gitId":"YoYoCiti"},"content":" * Contains integration tests for {@code FindFacilityCommand}.","lastModifiedDate":"2021-10-09"},{"lineNumber":25,"author":{"gitId":"YoYoCiti"},"content":" */","lastModifiedDate":"2021-10-06"},{"lineNumber":26,"author":{"gitId":"YoYoCiti"},"content":"public class FindFacilityCommandTest {","lastModifiedDate":"2021-10-06"},{"lineNumber":27,"author":{"gitId":"YoYoCiti"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2021-10-09"},{"lineNumber":28,"author":{"gitId":"YoYoCiti"},"content":"    private Model expectedModel \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2021-10-09"},{"lineNumber":29,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":30,"author":{"gitId":"YoYoCiti"},"content":"    @Test","lastModifiedDate":"2021-10-06"},{"lineNumber":31,"author":{"gitId":"YoYoCiti"},"content":"    public void equals() {","lastModifiedDate":"2021-10-06"},{"lineNumber":32,"author":{"gitId":"YoYoCiti"},"content":"        LocationContainsKeywordsPredicate firstPred \u003d","lastModifiedDate":"2021-10-06"},{"lineNumber":33,"author":{"gitId":"YoYoCiti"},"content":"                new LocationContainsKeywordsPredicate(Collections.singletonList(\"first\"));","lastModifiedDate":"2021-10-06"},{"lineNumber":34,"author":{"gitId":"YoYoCiti"},"content":"        LocationContainsKeywordsPredicate secondPred \u003d","lastModifiedDate":"2021-10-06"},{"lineNumber":35,"author":{"gitId":"YoYoCiti"},"content":"                new LocationContainsKeywordsPredicate(Collections.singletonList(\"second\"));","lastModifiedDate":"2021-10-06"},{"lineNumber":36,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":37,"author":{"gitId":"YoYoCiti"},"content":"        FindFacilityCommand findFacilFirstCommand \u003d new FindFacilityCommand(firstPred);","lastModifiedDate":"2021-10-06"},{"lineNumber":38,"author":{"gitId":"YoYoCiti"},"content":"        FindFacilityCommand findFacilSecondCommand \u003d new FindFacilityCommand(secondPred);","lastModifiedDate":"2021-10-06"},{"lineNumber":39,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":40,"author":{"gitId":"YoYoCiti"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-10-06"},{"lineNumber":41,"author":{"gitId":"YoYoCiti"},"content":"        assertTrue(findFacilFirstCommand.equals(findFacilFirstCommand));","lastModifiedDate":"2021-10-06"},{"lineNumber":42,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":43,"author":{"gitId":"YoYoCiti"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2021-10-06"},{"lineNumber":44,"author":{"gitId":"YoYoCiti"},"content":"        FindFacilityCommand findFacilFirstCommandCopy \u003d new FindFacilityCommand(firstPred);","lastModifiedDate":"2021-10-06"},{"lineNumber":45,"author":{"gitId":"YoYoCiti"},"content":"        assertTrue(findFacilFirstCommand.equals(findFacilFirstCommandCopy));","lastModifiedDate":"2021-10-06"},{"lineNumber":46,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":47,"author":{"gitId":"YoYoCiti"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2021-10-06"},{"lineNumber":48,"author":{"gitId":"YoYoCiti"},"content":"        assertFalse(findFacilFirstCommand.equals(1));","lastModifiedDate":"2021-10-06"},{"lineNumber":49,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":50,"author":{"gitId":"YoYoCiti"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-10-06"},{"lineNumber":51,"author":{"gitId":"YoYoCiti"},"content":"        assertFalse(findFacilFirstCommand.equals(null));","lastModifiedDate":"2021-10-06"},{"lineNumber":52,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":53,"author":{"gitId":"YoYoCiti"},"content":"        // different facility -\u003e returns false","lastModifiedDate":"2021-10-06"},{"lineNumber":54,"author":{"gitId":"YoYoCiti"},"content":"        assertFalse(findFacilFirstCommand.equals(findFacilSecondCommand));","lastModifiedDate":"2021-10-06"},{"lineNumber":55,"author":{"gitId":"YoYoCiti"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":56,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":57,"author":{"gitId":"YoYoCiti"},"content":"    @Test","lastModifiedDate":"2021-10-09"},{"lineNumber":58,"author":{"gitId":"YoYoCiti"},"content":"    public void execute_zeroKeywords_noFacilityFound() {","lastModifiedDate":"2021-10-09"},{"lineNumber":59,"author":{"gitId":"YoYoCiti"},"content":"        String expectedMessage \u003d String.format(Messages.MESSAGE_FACILITIES_LISTED_OVERVIEW, 0);","lastModifiedDate":"2021-10-09"},{"lineNumber":60,"author":{"gitId":"YoYoCiti"},"content":"        LocationContainsKeywordsPredicate predicate \u003d preparePredicate(\"  \");","lastModifiedDate":"2021-10-09"},{"lineNumber":61,"author":{"gitId":"YoYoCiti"},"content":"        FindFacilityCommand command \u003d new FindFacilityCommand(predicate);","lastModifiedDate":"2021-10-09"},{"lineNumber":62,"author":{"gitId":"YoYoCiti"},"content":"        expectedModel.updateFilteredFacilityList(predicate);","lastModifiedDate":"2021-10-09"},{"lineNumber":63,"author":{"gitId":"YoYoCiti"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-10-09"},{"lineNumber":64,"author":{"gitId":"YoYoCiti"},"content":"        assertEquals(Collections.emptyList(), model.getFilteredFacilityList());","lastModifiedDate":"2021-10-09"},{"lineNumber":65,"author":{"gitId":"YoYoCiti"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":66,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":67,"author":{"gitId":"YoYoCiti"},"content":"    @Test","lastModifiedDate":"2021-10-09"},{"lineNumber":68,"author":{"gitId":"YoYoCiti"},"content":"    public void execute_multipleKeywords_multipleFacilitiesFound() {","lastModifiedDate":"2021-10-09"},{"lineNumber":69,"author":{"gitId":"YoYoCiti"},"content":"        String expectedMessage \u003d String.format(Messages.MESSAGE_FACILITIES_LISTED_OVERVIEW, 3);","lastModifiedDate":"2021-10-09"},{"lineNumber":70,"author":{"gitId":"YoYoCiti"},"content":"        LocationContainsKeywordsPredicate predicate \u003d preparePredicate(\"Tennis Utown\");","lastModifiedDate":"2021-10-09"},{"lineNumber":71,"author":{"gitId":"YoYoCiti"},"content":"        FindFacilityCommand command \u003d new FindFacilityCommand(predicate);","lastModifiedDate":"2021-10-09"},{"lineNumber":72,"author":{"gitId":"YoYoCiti"},"content":"        expectedModel.updateFilteredFacilityList(predicate);","lastModifiedDate":"2021-10-09"},{"lineNumber":73,"author":{"gitId":"YoYoCiti"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-10-09"},{"lineNumber":74,"author":{"gitId":"YoYoCiti"},"content":"        assertEquals(Arrays.asList(","lastModifiedDate":"2021-10-09"},{"lineNumber":75,"author":{"gitId":"YoYoCiti"},"content":"                        KENT_RIDGE_OUTDOOR_TENNIS_COURTS_COURT_1,","lastModifiedDate":"2021-10-09"},{"lineNumber":76,"author":{"gitId":"YoYoCiti"},"content":"                        KENT_RIDGE_OUTDOOR_TENNIS_COURTS_COURT_10,","lastModifiedDate":"2021-10-09"},{"lineNumber":77,"author":{"gitId":"YoYoCiti"},"content":"                        UTOWN_FIELD_SECTION_A),","lastModifiedDate":"2021-10-09"},{"lineNumber":78,"author":{"gitId":"YoYoCiti"},"content":"                model.getFilteredFacilityList());","lastModifiedDate":"2021-10-09"},{"lineNumber":79,"author":{"gitId":"YoYoCiti"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":80,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":81,"author":{"gitId":"YoYoCiti"},"content":"    /**","lastModifiedDate":"2021-10-09"},{"lineNumber":82,"author":{"gitId":"YoYoCiti"},"content":"     * Parses {@code userInput} into a {@code LocationContainsKeywordsPredicate}.","lastModifiedDate":"2021-10-09"},{"lineNumber":83,"author":{"gitId":"YoYoCiti"},"content":"     */","lastModifiedDate":"2021-10-09"},{"lineNumber":84,"author":{"gitId":"YoYoCiti"},"content":"    private LocationContainsKeywordsPredicate preparePredicate(String userInput) {","lastModifiedDate":"2021-10-09"},{"lineNumber":85,"author":{"gitId":"YoYoCiti"},"content":"        return new LocationContainsKeywordsPredicate(Arrays.asList(userInput.split(\"\\\\s+\")));","lastModifiedDate":"2021-10-09"},{"lineNumber":86,"author":{"gitId":"YoYoCiti"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":87,"author":{"gitId":"YoYoCiti"},"content":"}","lastModifiedDate":"2021-10-06"}],"authorContributionMap":{"YoYoCiti":87}},{"path":"src/test/java/seedu/address/logic/commands/FindMemberCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"felix-ong"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_MEMBERS_LISTED_OVERVIEW;","lastModifiedDate":"2021-10-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2018-08-08"},{"lineNumber":8,"author":{"gitId":"tsinyee"},"content":"import static seedu.address.testutil.TypicalAddressBook.getTypicalAddressBookToFind;","lastModifiedDate":"2021-10-31"},{"lineNumber":9,"author":{"gitId":"tsinyee"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2021-10-31"},{"lineNumber":10,"author":{"gitId":"tsinyee"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE_TAN;","lastModifiedDate":"2021-10-31"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) for {@code FindCommand}.","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"felix-ong"},"content":"public class FindMemberCommandTest {","lastModifiedDate":"2021-09-30"},{"lineNumber":26,"author":{"gitId":"tsinyee"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBookToFind(), new UserPrefs());","lastModifiedDate":"2021-10-31"},{"lineNumber":27,"author":{"gitId":"tsinyee"},"content":"    private Model expectedModel \u003d new ModelManager(getTypicalAddressBookToFind(), new UserPrefs());","lastModifiedDate":"2021-10-31"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-06-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate firstPredicate \u003d","lastModifiedDate":"2017-06-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"                new NameContainsKeywordsPredicate(Collections.singletonList(\"first\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate secondPredicate \u003d","lastModifiedDate":"2017-06-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"                new NameContainsKeywordsPredicate(Collections.singletonList(\"second\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":36,"author":{"gitId":"felix-ong"},"content":"        FindMemberCommand findFirstCommand \u003d new FindMemberCommand(firstPredicate);","lastModifiedDate":"2021-09-30"},{"lineNumber":37,"author":{"gitId":"felix-ong"},"content":"        FindMemberCommand findSecondCommand \u003d new FindMemberCommand(secondPredicate);","lastModifiedDate":"2021-09-30"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":43,"author":{"gitId":"felix-ong"},"content":"        FindMemberCommand findFirstCommandCopy \u003d new FindMemberCommand(firstPredicate);","lastModifiedDate":"2021-09-30"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommandCopy));","lastModifiedDate":"2017-06-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(1));","lastModifiedDate":"2017-06-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(null));","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(findSecondCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void execute_zeroKeywords_noPersonFound() {","lastModifiedDate":"2017-08-15"},{"lineNumber":58,"author":{"gitId":"felix-ong"},"content":"        String expectedMessage \u003d String.format(MESSAGE_MEMBERS_LISTED_OVERVIEW, 0);","lastModifiedDate":"2021-10-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d preparePredicate(\" \");","lastModifiedDate":"2018-08-08"},{"lineNumber":60,"author":{"gitId":"felix-ong"},"content":"        FindMemberCommand command \u003d new FindMemberCommand(predicate);","lastModifiedDate":"2021-09-30"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertEquals(Collections.emptyList(), model.getFilteredPersonList());","lastModifiedDate":"2018-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void execute_multipleKeywords_multiplePersonsFound() {","lastModifiedDate":"2017-08-15"},{"lineNumber":68,"author":{"gitId":"tsinyee"},"content":"        String expectedMessage \u003d String.format(MESSAGE_MEMBERS_LISTED_OVERVIEW, 2);","lastModifiedDate":"2021-10-31"},{"lineNumber":69,"author":{"gitId":"tsinyee"},"content":"        NameContainsKeywordsPredicate predicate \u003d preparePredicate(\"alice\");","lastModifiedDate":"2021-10-31"},{"lineNumber":70,"author":{"gitId":"felix-ong"},"content":"        FindMemberCommand command \u003d new FindMemberCommand(predicate);","lastModifiedDate":"2021-09-30"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":73,"author":{"gitId":"tsinyee"},"content":"        assertEquals(Arrays.asList(ALICE, ALICE_TAN), model.getFilteredPersonList());","lastModifiedDate":"2021-10-31"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-12"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     * Parses {@code userInput} into a {@code NameContainsKeywordsPredicate}.","lastModifiedDate":"2018-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-12"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    private NameContainsKeywordsPredicate preparePredicate(String userInput) {","lastModifiedDate":"2018-08-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        return new NameContainsKeywordsPredicate(Arrays.asList(userInput.split(\"\\\\s+\")));","lastModifiedDate":"2018-08-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":82,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"-":66,"felix-ong":8,"tsinyee":8}},{"path":"src/test/java/seedu/address/logic/commands/ImportCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Moley456"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-10-23"},{"lineNumber":2,"author":{"gitId":"Moley456"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":3,"author":{"gitId":"Moley456"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-26"},{"lineNumber":4,"author":{"gitId":"Moley456"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-10-23"},{"lineNumber":5,"author":{"gitId":"Moley456"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-26"},{"lineNumber":6,"author":{"gitId":"Moley456"},"content":"import static seedu.address.testutil.TypicalAddressBook.getTypicalAddressBook;","lastModifiedDate":"2021-10-23"},{"lineNumber":7,"author":{"gitId":"Moley456"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2021-10-23"},{"lineNumber":8,"author":{"gitId":"Moley456"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE_DIFFERENT_PHONE;","lastModifiedDate":"2021-10-23"},{"lineNumber":9,"author":{"gitId":"Moley456"},"content":"import static seedu.address.testutil.TypicalPersons.HOON;","lastModifiedDate":"2021-10-23"},{"lineNumber":10,"author":{"gitId":"Moley456"},"content":"import static seedu.address.testutil.TypicalPersons.IDA;","lastModifiedDate":"2021-10-23"},{"lineNumber":11,"author":{"gitId":"Moley456"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":12,"author":{"gitId":"Moley456"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-23"},{"lineNumber":13,"author":{"gitId":"Moley456"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":14,"author":{"gitId":"Moley456"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-26"},{"lineNumber":15,"author":{"gitId":"Moley456"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-10-23"},{"lineNumber":16,"author":{"gitId":"Moley456"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2021-10-23"},{"lineNumber":17,"author":{"gitId":"Moley456"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2021-10-23"},{"lineNumber":18,"author":{"gitId":"Moley456"},"content":"import seedu.address.model.person.Availability;","lastModifiedDate":"2021-10-26"},{"lineNumber":19,"author":{"gitId":"Moley456"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2021-10-26"},{"lineNumber":20,"author":{"gitId":"Moley456"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2021-10-26"},{"lineNumber":21,"author":{"gitId":"Moley456"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2021-10-26"},{"lineNumber":22,"author":{"gitId":"Moley456"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":23,"author":{"gitId":"Moley456"},"content":"public class ImportCommandTest {","lastModifiedDate":"2021-10-23"},{"lineNumber":24,"author":{"gitId":"Moley456"},"content":"    private final Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2021-10-23"},{"lineNumber":25,"author":{"gitId":"Moley456"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":26,"author":{"gitId":"Moley456"},"content":"    @Test","lastModifiedDate":"2021-10-23"},{"lineNumber":27,"author":{"gitId":"Moley456"},"content":"    public void execute_personNotInAddressBook_listOfPersonAddedWithNoReplacement() {","lastModifiedDate":"2021-10-23"},{"lineNumber":28,"author":{"gitId":"Moley456"},"content":"        String testFilePath \u003d \"src/test/data/ImportCommandTest/SamePersonNotInAddressBook.csv\";","lastModifiedDate":"2021-10-26"},{"lineNumber":29,"author":{"gitId":"Moley456"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2021-10-23"},{"lineNumber":30,"author":{"gitId":"Moley456"},"content":"        expectedModel.addPerson(HOON);","lastModifiedDate":"2021-10-23"},{"lineNumber":31,"author":{"gitId":"Moley456"},"content":"        expectedModel.addPerson(IDA);","lastModifiedDate":"2021-10-23"},{"lineNumber":32,"author":{"gitId":"Moley456"},"content":"        assertCommandSuccess(new ImportCommand(testFilePath), model, ImportCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2021-10-26"},{"lineNumber":33,"author":{"gitId":"Moley456"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":34,"author":{"gitId":"Moley456"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":35,"author":{"gitId":"Moley456"},"content":"    @Test","lastModifiedDate":"2021-10-23"},{"lineNumber":36,"author":{"gitId":"Moley456"},"content":"    public void execute_personInAddressBook_listOfPersonAddedWithReplacement() {","lastModifiedDate":"2021-10-23"},{"lineNumber":37,"author":{"gitId":"Moley456"},"content":"        String testFilePath \u003d \"src/test/data/ImportCommandTest/SamePersonInAddressBook.csv\";","lastModifiedDate":"2021-10-26"},{"lineNumber":38,"author":{"gitId":"Moley456"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2021-10-23"},{"lineNumber":39,"author":{"gitId":"Moley456"},"content":"        expectedModel.addPerson(HOON);","lastModifiedDate":"2021-10-23"},{"lineNumber":40,"author":{"gitId":"Moley456"},"content":"        expectedModel.setPerson(ALICE, ALICE_DIFFERENT_PHONE);","lastModifiedDate":"2021-10-23"},{"lineNumber":41,"author":{"gitId":"Moley456"},"content":"        assertCommandSuccess(new ImportCommand(testFilePath), model, ImportCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2021-10-26"},{"lineNumber":42,"author":{"gitId":"Moley456"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":43,"author":{"gitId":"Moley456"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":44,"author":{"gitId":"Moley456"},"content":"    @Test","lastModifiedDate":"2021-10-26"},{"lineNumber":45,"author":{"gitId":"Moley456"},"content":"    public void execute_invalidNameImportFile_throwsCommandException() {","lastModifiedDate":"2021-10-26"},{"lineNumber":46,"author":{"gitId":"Moley456"},"content":"        String testFilePath \u003d \"src/test/data/ImportCommandTest/InvalidNameImportFile.csv\";","lastModifiedDate":"2021-10-26"},{"lineNumber":47,"author":{"gitId":"Moley456"},"content":"        String expectedMessage \u003d Name.MESSAGE_CONSTRAINTS + \"\\nPlease fix the error in the CSV file and try again\";","lastModifiedDate":"2021-10-28"},{"lineNumber":48,"author":{"gitId":"Moley456"},"content":"        ImportCommand importCommand \u003d new ImportCommand(testFilePath);","lastModifiedDate":"2021-10-26"},{"lineNumber":49,"author":{"gitId":"Moley456"},"content":"        assertThrows(CommandException.class, expectedMessage, () -\u003e importCommand.execute(model));","lastModifiedDate":"2021-10-28"},{"lineNumber":50,"author":{"gitId":"Moley456"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":51,"author":{"gitId":"Moley456"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":52,"author":{"gitId":"Moley456"},"content":"    @Test","lastModifiedDate":"2021-10-26"},{"lineNumber":53,"author":{"gitId":"Moley456"},"content":"    public void execute_invalidPhoneImportFile_throwsCommandException() {","lastModifiedDate":"2021-10-26"},{"lineNumber":54,"author":{"gitId":"Moley456"},"content":"        String testFilePath \u003d \"src/test/data/ImportCommandTest/InvalidPhoneImportFile.csv\";","lastModifiedDate":"2021-10-26"},{"lineNumber":55,"author":{"gitId":"Moley456"},"content":"        String expectedMessage \u003d Phone.MESSAGE_CONSTRAINTS + \"\\nPlease fix the error in the CSV file and try again\";","lastModifiedDate":"2021-10-28"},{"lineNumber":56,"author":{"gitId":"Moley456"},"content":"        ImportCommand importCommand \u003d new ImportCommand(testFilePath);","lastModifiedDate":"2021-10-26"},{"lineNumber":57,"author":{"gitId":"Moley456"},"content":"        assertThrows(CommandException.class, expectedMessage, () -\u003e importCommand.execute(model));","lastModifiedDate":"2021-10-28"},{"lineNumber":58,"author":{"gitId":"Moley456"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":59,"author":{"gitId":"Moley456"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":60,"author":{"gitId":"Moley456"},"content":"    @Test","lastModifiedDate":"2021-10-26"},{"lineNumber":61,"author":{"gitId":"Moley456"},"content":"    public void execute_invalidAvailabilityImportFile_throwsCommandException() {","lastModifiedDate":"2021-10-26"},{"lineNumber":62,"author":{"gitId":"Moley456"},"content":"        String testFilePath \u003d \"src/test/data/ImportCommandTest/InvalidAvailabilityImportFile.csv\";","lastModifiedDate":"2021-10-26"},{"lineNumber":63,"author":{"gitId":"Moley456"},"content":"        String expectedMessage \u003d Availability.MESSAGE_CONSTRAINTS","lastModifiedDate":"2021-10-28"},{"lineNumber":64,"author":{"gitId":"Moley456"},"content":"                + \"\\nPlease fix the error in the CSV file and try again\";","lastModifiedDate":"2021-10-28"},{"lineNumber":65,"author":{"gitId":"Moley456"},"content":"        ImportCommand importCommand \u003d new ImportCommand(testFilePath);","lastModifiedDate":"2021-10-26"},{"lineNumber":66,"author":{"gitId":"Moley456"},"content":"        assertThrows(CommandException.class, expectedMessage, () -\u003e importCommand.execute(model));","lastModifiedDate":"2021-10-28"},{"lineNumber":67,"author":{"gitId":"Moley456"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":68,"author":{"gitId":"Moley456"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":69,"author":{"gitId":"Moley456"},"content":"    @Test","lastModifiedDate":"2021-10-26"},{"lineNumber":70,"author":{"gitId":"Moley456"},"content":"    public void execute_invalidTagsImportFile_throwsCommandException() {","lastModifiedDate":"2021-10-26"},{"lineNumber":71,"author":{"gitId":"Moley456"},"content":"        String testFilePath \u003d \"src/test/data/ImportCommandTest/InvalidTagsImportFile.csv\";","lastModifiedDate":"2021-10-26"},{"lineNumber":72,"author":{"gitId":"Moley456"},"content":"        String expectedMessage \u003d Tag.MESSAGE_CONSTRAINTS + \"\\nPlease fix the error in the CSV file and try again\";","lastModifiedDate":"2021-10-28"},{"lineNumber":73,"author":{"gitId":"Moley456"},"content":"        ImportCommand importCommand \u003d new ImportCommand(testFilePath);","lastModifiedDate":"2021-10-26"},{"lineNumber":74,"author":{"gitId":"Moley456"},"content":"        assertThrows(CommandException.class, expectedMessage, () -\u003e importCommand.execute(model));","lastModifiedDate":"2021-10-28"},{"lineNumber":75,"author":{"gitId":"Moley456"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":76,"author":{"gitId":"Moley456"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":77,"author":{"gitId":"Moley456"},"content":"    @Test","lastModifiedDate":"2021-10-26"},{"lineNumber":78,"author":{"gitId":"Moley456"},"content":"    public void execute_invalidFormatImportFile_throwsCommandException() {","lastModifiedDate":"2021-10-26"},{"lineNumber":79,"author":{"gitId":"Moley456"},"content":"        String testFilePath \u003d \"src/test/data/ImportCommandTest/InvalidFormatImportFile.csv\";","lastModifiedDate":"2021-10-26"},{"lineNumber":80,"author":{"gitId":"Moley456"},"content":"        ImportCommand importCommand \u003d new ImportCommand(testFilePath);","lastModifiedDate":"2021-10-26"},{"lineNumber":81,"author":{"gitId":"Moley456"},"content":"        assertThrows(CommandException.class, String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2021-10-26"},{"lineNumber":82,"author":{"gitId":"Moley456"},"content":"                ImportCommand.MESSAGE_USAGE), () -\u003e importCommand.execute(model));","lastModifiedDate":"2021-10-26"},{"lineNumber":83,"author":{"gitId":"Moley456"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":84,"author":{"gitId":"Moley456"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":85,"author":{"gitId":"Moley456"},"content":"    @Test","lastModifiedDate":"2021-10-26"},{"lineNumber":86,"author":{"gitId":"Moley456"},"content":"    public void execute_fileNotFound_throwsCommandException() {","lastModifiedDate":"2021-10-26"},{"lineNumber":87,"author":{"gitId":"Moley456"},"content":"        String testFilePath \u003d \"src/test/data/ImportCommandParserTest/FileNotFound.csv\";","lastModifiedDate":"2021-10-26"},{"lineNumber":88,"author":{"gitId":"Moley456"},"content":"        ImportCommand importCommand \u003d new ImportCommand(testFilePath);","lastModifiedDate":"2021-10-26"},{"lineNumber":89,"author":{"gitId":"Moley456"},"content":"        assertThrows(CommandException.class,","lastModifiedDate":"2021-10-26"},{"lineNumber":90,"author":{"gitId":"Moley456"},"content":"                String.format(ImportCommand.MESSAGE_FILE_NOT_FOUND, testFilePath), () -\u003e importCommand.execute(model));","lastModifiedDate":"2021-10-26"},{"lineNumber":91,"author":{"gitId":"Moley456"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":92,"author":{"gitId":"Moley456"},"content":"}","lastModifiedDate":"2021-10-23"}],"authorContributionMap":{"Moley456":92}},{"path":"src/test/java/seedu/address/logic/commands/ListFacilityCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"YoYoCiti"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-10-09"},{"lineNumber":2,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":3,"author":{"gitId":"YoYoCiti"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-10-09"},{"lineNumber":4,"author":{"gitId":"YoYoCiti"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showFacilityAtIndex;","lastModifiedDate":"2021-10-09"},{"lineNumber":5,"author":{"gitId":"YoYoCiti"},"content":"import static seedu.address.testutil.TypicalAddressBook.getTypicalAddressBook;","lastModifiedDate":"2021-10-09"},{"lineNumber":6,"author":{"gitId":"YoYoCiti"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST;","lastModifiedDate":"2021-10-09"},{"lineNumber":7,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":8,"author":{"gitId":"YoYoCiti"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2021-10-09"},{"lineNumber":9,"author":{"gitId":"YoYoCiti"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-09"},{"lineNumber":10,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":11,"author":{"gitId":"YoYoCiti"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-10-09"},{"lineNumber":12,"author":{"gitId":"YoYoCiti"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2021-10-09"},{"lineNumber":13,"author":{"gitId":"YoYoCiti"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2021-10-09"},{"lineNumber":14,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":15,"author":{"gitId":"YoYoCiti"},"content":"/**","lastModifiedDate":"2021-10-09"},{"lineNumber":16,"author":{"gitId":"YoYoCiti"},"content":" * Contains integration tests (interaction with the Model) and unit tests for ListFacilityCommand.","lastModifiedDate":"2021-10-09"},{"lineNumber":17,"author":{"gitId":"YoYoCiti"},"content":" */","lastModifiedDate":"2021-10-09"},{"lineNumber":18,"author":{"gitId":"YoYoCiti"},"content":"public class ListFacilityCommandTest {","lastModifiedDate":"2021-10-09"},{"lineNumber":19,"author":{"gitId":"YoYoCiti"},"content":"    private Model model;","lastModifiedDate":"2021-10-09"},{"lineNumber":20,"author":{"gitId":"YoYoCiti"},"content":"    private Model expectedModel;","lastModifiedDate":"2021-10-09"},{"lineNumber":21,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":22,"author":{"gitId":"YoYoCiti"},"content":"    @BeforeEach","lastModifiedDate":"2021-10-09"},{"lineNumber":23,"author":{"gitId":"YoYoCiti"},"content":"    public void setUp() {","lastModifiedDate":"2021-10-09"},{"lineNumber":24,"author":{"gitId":"YoYoCiti"},"content":"        model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2021-10-09"},{"lineNumber":25,"author":{"gitId":"YoYoCiti"},"content":"        expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2021-10-09"},{"lineNumber":26,"author":{"gitId":"YoYoCiti"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":27,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":28,"author":{"gitId":"YoYoCiti"},"content":"    @Test","lastModifiedDate":"2021-10-09"},{"lineNumber":29,"author":{"gitId":"YoYoCiti"},"content":"    public void execute_facilityListIsNotFiltered_showsSameList() {","lastModifiedDate":"2021-10-09"},{"lineNumber":30,"author":{"gitId":"YoYoCiti"},"content":"        assertCommandSuccess(new ListFacilityCommand(), model, ListFacilityCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2021-10-09"},{"lineNumber":31,"author":{"gitId":"YoYoCiti"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":32,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":33,"author":{"gitId":"YoYoCiti"},"content":"    @Test","lastModifiedDate":"2021-10-09"},{"lineNumber":34,"author":{"gitId":"YoYoCiti"},"content":"    public void execute_facilityListIsFiltered_showsEverything() {","lastModifiedDate":"2021-10-09"},{"lineNumber":35,"author":{"gitId":"YoYoCiti"},"content":"        showFacilityAtIndex(model, INDEX_FIRST);","lastModifiedDate":"2021-10-09"},{"lineNumber":36,"author":{"gitId":"YoYoCiti"},"content":"        assertCommandSuccess(new ListFacilityCommand(), model, ListFacilityCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2021-10-09"},{"lineNumber":37,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":38,"author":{"gitId":"YoYoCiti"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":39,"author":{"gitId":"YoYoCiti"},"content":"}","lastModifiedDate":"2021-10-09"}],"authorContributionMap":{"YoYoCiti":39}},{"path":"src/test/java/seedu/address/logic/commands/ListMemberCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2018-01-31"},{"lineNumber":5,"author":{"gitId":"YoYoCiti"},"content":"import static seedu.address.testutil.TypicalAddressBook.getTypicalAddressBook;","lastModifiedDate":"2021-10-09"},{"lineNumber":6,"author":{"gitId":"YoYoCiti"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST;","lastModifiedDate":"2021-10-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"tsinyee"},"content":" * Contains integration tests (interaction with the Model) and unit tests for ListMemberCommand.","lastModifiedDate":"2021-10-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"tsinyee"},"content":"public class ListMemberCommandTest {","lastModifiedDate":"2021-10-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private Model model;","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private Model expectedModel;","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void execute_listIsNotFiltered_showsSameList() {","lastModifiedDate":"2017-08-15"},{"lineNumber":31,"author":{"gitId":"tsinyee"},"content":"        assertCommandSuccess(new ListMemberCommand(), model, ListMemberCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2021-10-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public void execute_listIsFiltered_showsEverything() {","lastModifiedDate":"2017-08-15"},{"lineNumber":36,"author":{"gitId":"YoYoCiti"},"content":"        showPersonAtIndex(model, INDEX_FIRST);","lastModifiedDate":"2021-10-09"},{"lineNumber":37,"author":{"gitId":"tsinyee"},"content":"        assertCommandSuccess(new ListMemberCommand(), model, ListMemberCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2021-10-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"YoYoCiti":3,"-":32,"tsinyee":4}},{"path":"src/test/java/seedu/address/logic/commands/MarkAttendanceCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Shruthi0310"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-10-21"},{"lineNumber":2,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":3,"author":{"gitId":"Shruthi0310"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-21"},{"lineNumber":4,"author":{"gitId":"Shruthi0310"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-21"},{"lineNumber":5,"author":{"gitId":"Shruthi0310"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2021-10-21"},{"lineNumber":6,"author":{"gitId":"Shruthi0310"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-10-21"},{"lineNumber":7,"author":{"gitId":"Shruthi0310"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST;","lastModifiedDate":"2021-10-21"},{"lineNumber":8,"author":{"gitId":"Shruthi0310"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND;","lastModifiedDate":"2021-10-21"},{"lineNumber":9,"author":{"gitId":"Shruthi0310"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_THIRD;","lastModifiedDate":"2021-10-21"},{"lineNumber":10,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":11,"author":{"gitId":"Shruthi0310"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-10-21"},{"lineNumber":12,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":13,"author":{"gitId":"Shruthi0310"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-21"},{"lineNumber":14,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":15,"author":{"gitId":"Shruthi0310"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2021-10-21"},{"lineNumber":16,"author":{"gitId":"Shruthi0310"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-10-21"},{"lineNumber":17,"author":{"gitId":"Shruthi0310"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-10-21"},{"lineNumber":18,"author":{"gitId":"Shruthi0310"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2021-10-21"},{"lineNumber":19,"author":{"gitId":"Shruthi0310"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2021-10-21"},{"lineNumber":20,"author":{"gitId":"Shruthi0310"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2021-10-22"},{"lineNumber":21,"author":{"gitId":"Shruthi0310"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2021-10-22"},{"lineNumber":22,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":23,"author":{"gitId":"Shruthi0310"},"content":"public class MarkAttendanceCommandTest {","lastModifiedDate":"2021-10-21"},{"lineNumber":24,"author":{"gitId":"Shruthi0310"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2021-10-22"},{"lineNumber":25,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":26,"author":{"gitId":"Shruthi0310"},"content":"    @Test","lastModifiedDate":"2021-10-21"},{"lineNumber":27,"author":{"gitId":"Shruthi0310"},"content":"    public void execute_validIndices_success() {","lastModifiedDate":"2021-10-21"},{"lineNumber":28,"author":{"gitId":"Shruthi0310"},"content":"        Person firstPerson \u003d new PersonBuilder().withName(\"John\").build();","lastModifiedDate":"2021-10-22"},{"lineNumber":29,"author":{"gitId":"Shruthi0310"},"content":"        Person secondPerson \u003d new PersonBuilder().withName(\"Mat\").build();","lastModifiedDate":"2021-10-22"},{"lineNumber":30,"author":{"gitId":"Shruthi0310"},"content":"        model.addPerson(firstPerson);","lastModifiedDate":"2021-10-22"},{"lineNumber":31,"author":{"gitId":"Shruthi0310"},"content":"        model.addPerson(secondPerson);","lastModifiedDate":"2021-10-22"},{"lineNumber":32,"author":{"gitId":"Shruthi0310"},"content":"        MarkAttendanceCommand command \u003d new MarkAttendanceCommand(Arrays.asList(INDEX_FIRST, INDEX_SECOND));","lastModifiedDate":"2021-10-21"},{"lineNumber":33,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":34,"author":{"gitId":"Shruthi0310"},"content":"        String expectedMessage \u003d MarkAttendanceCommand.MESSAGE_SUCCESS;","lastModifiedDate":"2021-10-21"},{"lineNumber":35,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":36,"author":{"gitId":"Shruthi0310"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2021-10-21"},{"lineNumber":37,"author":{"gitId":"Shruthi0310"},"content":"        expectedModel.markMembersAttendance(Arrays.asList(INDEX_FIRST, INDEX_SECOND));","lastModifiedDate":"2021-10-21"},{"lineNumber":38,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":39,"author":{"gitId":"Shruthi0310"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-10-21"},{"lineNumber":40,"author":{"gitId":"Shruthi0310"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":41,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":42,"author":{"gitId":"Shruthi0310"},"content":"    @Test","lastModifiedDate":"2021-10-21"},{"lineNumber":43,"author":{"gitId":"Shruthi0310"},"content":"    public void execute_invalidIndices_throwsCommandException() {","lastModifiedDate":"2021-10-21"},{"lineNumber":44,"author":{"gitId":"Shruthi0310"},"content":"        Index outOfBoundsIndex \u003d Index.fromOneBased(model.getFilteredPersonList().size() + 1);","lastModifiedDate":"2021-10-21"},{"lineNumber":45,"author":{"gitId":"Shruthi0310"},"content":"        MarkAttendanceCommand command \u003d new MarkAttendanceCommand(Arrays.asList(outOfBoundsIndex));","lastModifiedDate":"2021-10-21"},{"lineNumber":46,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":47,"author":{"gitId":"Shruthi0310"},"content":"        assertCommandFailure(command, model, Messages.MESSAGE_INVALID_MEMBER_DISPLAYED_INDEX);","lastModifiedDate":"2021-10-21"},{"lineNumber":48,"author":{"gitId":"Shruthi0310"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":49,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":50,"author":{"gitId":"Shruthi0310"},"content":"    @Test","lastModifiedDate":"2021-10-21"},{"lineNumber":51,"author":{"gitId":"Shruthi0310"},"content":"    public void equals() {","lastModifiedDate":"2021-10-21"},{"lineNumber":52,"author":{"gitId":"Shruthi0310"},"content":"        MarkAttendanceCommand markFirstCommand \u003d new MarkAttendanceCommand(Arrays.asList(INDEX_FIRST, INDEX_THIRD));","lastModifiedDate":"2021-10-21"},{"lineNumber":53,"author":{"gitId":"Shruthi0310"},"content":"        MarkAttendanceCommand markSecondCommand \u003d new MarkAttendanceCommand(Arrays.asList(INDEX_SECOND));","lastModifiedDate":"2021-10-21"},{"lineNumber":54,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":55,"author":{"gitId":"Shruthi0310"},"content":"        assertTrue(markFirstCommand.equals(markFirstCommand));","lastModifiedDate":"2021-10-21"},{"lineNumber":56,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":57,"author":{"gitId":"Shruthi0310"},"content":"        MarkAttendanceCommand markFirstCommandCopy \u003d new MarkAttendanceCommand(Arrays.asList(INDEX_FIRST,","lastModifiedDate":"2021-10-21"},{"lineNumber":58,"author":{"gitId":"Shruthi0310"},"content":"                INDEX_THIRD));","lastModifiedDate":"2021-10-21"},{"lineNumber":59,"author":{"gitId":"Shruthi0310"},"content":"        assertTrue(markFirstCommand.equals(markFirstCommandCopy));","lastModifiedDate":"2021-10-21"},{"lineNumber":60,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":61,"author":{"gitId":"Shruthi0310"},"content":"        assertFalse(markFirstCommand.equals(markSecondCommand));","lastModifiedDate":"2021-10-21"},{"lineNumber":62,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":63,"author":{"gitId":"Shruthi0310"},"content":"        assertFalse(markFirstCommand.equals(null));","lastModifiedDate":"2021-10-21"},{"lineNumber":64,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":65,"author":{"gitId":"Shruthi0310"},"content":"        assertFalse(markFirstCommand.equals(\"1\"));","lastModifiedDate":"2021-10-21"},{"lineNumber":66,"author":{"gitId":"Shruthi0310"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":67,"author":{"gitId":"Shruthi0310"},"content":"}","lastModifiedDate":"2021-10-21"}],"authorContributionMap":{"Shruthi0310":67}},{"path":"src/test/java/seedu/address/logic/commands/SetMemberAvailabilityCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"felix-ong"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-10-16"},{"lineNumber":2,"author":{"gitId":"felix-ong"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":3,"author":{"gitId":"felix-ong"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-16"},{"lineNumber":4,"author":{"gitId":"felix-ong"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-16"},{"lineNumber":5,"author":{"gitId":"felix-ong"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-16"},{"lineNumber":6,"author":{"gitId":"felix-ong"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":7,"author":{"gitId":"felix-ong"},"content":"import java.time.DayOfWeek;","lastModifiedDate":"2021-10-16"},{"lineNumber":8,"author":{"gitId":"felix-ong"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-16"},{"lineNumber":9,"author":{"gitId":"felix-ong"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-10-16"},{"lineNumber":10,"author":{"gitId":"felix-ong"},"content":"import java.util.List;","lastModifiedDate":"2021-10-16"},{"lineNumber":11,"author":{"gitId":"felix-ong"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":12,"author":{"gitId":"felix-ong"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-16"},{"lineNumber":13,"author":{"gitId":"felix-ong"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":14,"author":{"gitId":"felix-ong"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-10-16"},{"lineNumber":15,"author":{"gitId":"felix-ong"},"content":"import seedu.address.logic.parser.ParserUtil;","lastModifiedDate":"2021-10-16"},{"lineNumber":16,"author":{"gitId":"felix-ong"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-16"},{"lineNumber":17,"author":{"gitId":"felix-ong"},"content":"import seedu.address.model.person.Availability;","lastModifiedDate":"2021-10-16"},{"lineNumber":18,"author":{"gitId":"felix-ong"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":19,"author":{"gitId":"felix-ong"},"content":"public class SetMemberAvailabilityCommandTest {","lastModifiedDate":"2021-10-16"},{"lineNumber":20,"author":{"gitId":"felix-ong"},"content":"    @Test","lastModifiedDate":"2021-10-16"},{"lineNumber":21,"author":{"gitId":"felix-ong"},"content":"    public void constructor_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2021-10-16"},{"lineNumber":22,"author":{"gitId":"felix-ong"},"content":"        assertThrows(NullPointerException.class, () -\u003e new SetMemberAvailabilityCommand(null, null));","lastModifiedDate":"2021-10-16"},{"lineNumber":23,"author":{"gitId":"felix-ong"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":24,"author":{"gitId":"felix-ong"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":25,"author":{"gitId":"felix-ong"},"content":"    @Test","lastModifiedDate":"2021-10-16"},{"lineNumber":26,"author":{"gitId":"felix-ong"},"content":"    public void equals() throws ParseException {","lastModifiedDate":"2021-10-16"},{"lineNumber":27,"author":{"gitId":"felix-ong"},"content":"        List\u003cIndex\u003e firstIndices \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-16"},{"lineNumber":28,"author":{"gitId":"felix-ong"},"content":"        String firstIndicesString \u003d \"1 2 3\";","lastModifiedDate":"2021-10-16"},{"lineNumber":29,"author":{"gitId":"felix-ong"},"content":"        String[] firstIndicesArray \u003d firstIndicesString.split(\" \");","lastModifiedDate":"2021-10-16"},{"lineNumber":30,"author":{"gitId":"felix-ong"},"content":"        for (String s : firstIndicesArray) {","lastModifiedDate":"2021-10-16"},{"lineNumber":31,"author":{"gitId":"felix-ong"},"content":"            firstIndices.add(ParserUtil.parseIndex(s));","lastModifiedDate":"2021-10-16"},{"lineNumber":32,"author":{"gitId":"felix-ong"},"content":"        }","lastModifiedDate":"2021-10-16"},{"lineNumber":33,"author":{"gitId":"felix-ong"},"content":"        List\u003cIndex\u003e secondIndices \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-16"},{"lineNumber":34,"author":{"gitId":"felix-ong"},"content":"        String secondIndicesString \u003d \"4 5 6\";","lastModifiedDate":"2021-10-16"},{"lineNumber":35,"author":{"gitId":"felix-ong"},"content":"        String[] secondIndicesArray \u003d secondIndicesString.split(\" \");","lastModifiedDate":"2021-10-16"},{"lineNumber":36,"author":{"gitId":"felix-ong"},"content":"        for (String s : secondIndicesArray) {","lastModifiedDate":"2021-10-16"},{"lineNumber":37,"author":{"gitId":"felix-ong"},"content":"            secondIndices.add(ParserUtil.parseIndex(s));","lastModifiedDate":"2021-10-16"},{"lineNumber":38,"author":{"gitId":"felix-ong"},"content":"        }","lastModifiedDate":"2021-10-16"},{"lineNumber":39,"author":{"gitId":"felix-ong"},"content":"        List\u003cDayOfWeek\u003e firstAvailability \u003d Arrays.asList(DayOfWeek.MONDAY);","lastModifiedDate":"2021-10-16"},{"lineNumber":40,"author":{"gitId":"felix-ong"},"content":"        List\u003cDayOfWeek\u003e secondAvailability \u003d Arrays.asList(DayOfWeek.TUESDAY);","lastModifiedDate":"2021-10-16"},{"lineNumber":41,"author":{"gitId":"felix-ong"},"content":"        SetMemberAvailabilityCommand firstCommand \u003d","lastModifiedDate":"2021-10-16"},{"lineNumber":42,"author":{"gitId":"felix-ong"},"content":"                new SetMemberAvailabilityCommand(firstIndices, new Availability(firstAvailability));","lastModifiedDate":"2021-10-16"},{"lineNumber":43,"author":{"gitId":"felix-ong"},"content":"        SetMemberAvailabilityCommand secondCommand \u003d","lastModifiedDate":"2021-10-16"},{"lineNumber":44,"author":{"gitId":"felix-ong"},"content":"                new SetMemberAvailabilityCommand(secondIndices, new Availability(secondAvailability));","lastModifiedDate":"2021-10-16"},{"lineNumber":45,"author":{"gitId":"felix-ong"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":46,"author":{"gitId":"felix-ong"},"content":"        assertTrue(firstCommand.equals(firstCommand));","lastModifiedDate":"2021-10-16"},{"lineNumber":47,"author":{"gitId":"felix-ong"},"content":"        assertFalse(firstCommand.equals(secondCommand));","lastModifiedDate":"2021-10-16"},{"lineNumber":48,"author":{"gitId":"felix-ong"},"content":"        assertFalse(firstCommand.equals(null));","lastModifiedDate":"2021-10-16"},{"lineNumber":49,"author":{"gitId":"felix-ong"},"content":"        assertFalse(firstCommand.equals(1));","lastModifiedDate":"2021-10-16"},{"lineNumber":50,"author":{"gitId":"felix-ong"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":51,"author":{"gitId":"felix-ong"},"content":"}","lastModifiedDate":"2021-10-16"}],"authorContributionMap":{"felix-ong":51}},{"path":"src/test/java/seedu/address/logic/commands/ShowAliasesCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"YoYoCiti"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-10-17"},{"lineNumber":2,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":3,"author":{"gitId":"YoYoCiti"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-10-17"},{"lineNumber":4,"author":{"gitId":"YoYoCiti"},"content":"import static seedu.address.testutil.TypicalAddressBook.getTypicalAddressBook;","lastModifiedDate":"2021-10-17"},{"lineNumber":5,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":6,"author":{"gitId":"YoYoCiti"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2021-10-17"},{"lineNumber":7,"author":{"gitId":"YoYoCiti"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-17"},{"lineNumber":8,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":9,"author":{"gitId":"YoYoCiti"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-10-17"},{"lineNumber":10,"author":{"gitId":"YoYoCiti"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2021-10-17"},{"lineNumber":11,"author":{"gitId":"YoYoCiti"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2021-10-17"},{"lineNumber":12,"author":{"gitId":"YoYoCiti"},"content":"import seedu.address.model.alias.Alias;","lastModifiedDate":"2021-10-18"},{"lineNumber":13,"author":{"gitId":"YoYoCiti"},"content":"import seedu.address.model.alias.CommandWord;","lastModifiedDate":"2021-10-18"},{"lineNumber":14,"author":{"gitId":"YoYoCiti"},"content":"import seedu.address.model.alias.Shortcut;","lastModifiedDate":"2021-10-18"},{"lineNumber":15,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":16,"author":{"gitId":"YoYoCiti"},"content":"public class ShowAliasesCommandTest {","lastModifiedDate":"2021-10-17"},{"lineNumber":17,"author":{"gitId":"YoYoCiti"},"content":"    private Model model;","lastModifiedDate":"2021-10-17"},{"lineNumber":18,"author":{"gitId":"YoYoCiti"},"content":"    private Model expectedModel;","lastModifiedDate":"2021-10-17"},{"lineNumber":19,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":20,"author":{"gitId":"YoYoCiti"},"content":"    @BeforeEach","lastModifiedDate":"2021-10-17"},{"lineNumber":21,"author":{"gitId":"YoYoCiti"},"content":"    public void setUp() {","lastModifiedDate":"2021-10-17"},{"lineNumber":22,"author":{"gitId":"YoYoCiti"},"content":"        model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2021-10-17"},{"lineNumber":23,"author":{"gitId":"YoYoCiti"},"content":"        model.addAlias(new Alias(new Shortcut(\"lf\"), new CommandWord(\"listf\")));","lastModifiedDate":"2021-10-18"},{"lineNumber":24,"author":{"gitId":"YoYoCiti"},"content":"        expectedModel \u003d new ModelManager(model.getAddressBook(), model.getUserPrefs());","lastModifiedDate":"2021-10-17"},{"lineNumber":25,"author":{"gitId":"YoYoCiti"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":26,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":27,"author":{"gitId":"YoYoCiti"},"content":"    @Test","lastModifiedDate":"2021-10-17"},{"lineNumber":28,"author":{"gitId":"YoYoCiti"},"content":"    public void execute_showsCorrectList() {","lastModifiedDate":"2021-10-17"},{"lineNumber":29,"author":{"gitId":"YoYoCiti"},"content":"        String expectedList \u003d model.getAliases().toString();","lastModifiedDate":"2021-10-17"},{"lineNumber":30,"author":{"gitId":"YoYoCiti"},"content":"        assertCommandSuccess(new ShowAliasesCommand(), model,","lastModifiedDate":"2021-10-17"},{"lineNumber":31,"author":{"gitId":"YoYoCiti"},"content":"                String.format(ShowAliasesCommand.MESSAGE_SUCCESS, expectedList),","lastModifiedDate":"2021-10-17"},{"lineNumber":32,"author":{"gitId":"YoYoCiti"},"content":"                expectedModel);","lastModifiedDate":"2021-10-17"},{"lineNumber":33,"author":{"gitId":"YoYoCiti"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":34,"author":{"gitId":"YoYoCiti"},"content":"}","lastModifiedDate":"2021-10-17"}],"authorContributionMap":{"YoYoCiti":34}},{"path":"src/test/java/seedu/address/logic/commands/SortMemberCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"tsinyee"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-10-19"},{"lineNumber":2,"author":{"gitId":"tsinyee"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":3,"author":{"gitId":"tsinyee"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-24"},{"lineNumber":4,"author":{"gitId":"tsinyee"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-24"},{"lineNumber":5,"author":{"gitId":"tsinyee"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-10-19"},{"lineNumber":6,"author":{"gitId":"tsinyee"},"content":"import static seedu.address.testutil.TypicalAddressBook.getUnsortedNameAddressBook;","lastModifiedDate":"2021-10-24"},{"lineNumber":7,"author":{"gitId":"tsinyee"},"content":"import static seedu.address.testutil.TypicalAddressBook.getUnsortedTagAddressBook;","lastModifiedDate":"2021-10-24"},{"lineNumber":8,"author":{"gitId":"tsinyee"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":9,"author":{"gitId":"tsinyee"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-19"},{"lineNumber":10,"author":{"gitId":"tsinyee"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":11,"author":{"gitId":"tsinyee"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-10-19"},{"lineNumber":12,"author":{"gitId":"tsinyee"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2021-10-19"},{"lineNumber":13,"author":{"gitId":"tsinyee"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2021-10-19"},{"lineNumber":14,"author":{"gitId":"tsinyee"},"content":"import seedu.address.model.sort.SortOrder;","lastModifiedDate":"2021-10-24"},{"lineNumber":15,"author":{"gitId":"tsinyee"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":16,"author":{"gitId":"tsinyee"},"content":"public class SortMemberCommandTest {","lastModifiedDate":"2021-10-19"},{"lineNumber":17,"author":{"gitId":"tsinyee"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":18,"author":{"gitId":"tsinyee"},"content":"    private SortOrder byName \u003d new SortOrder(\"name\");","lastModifiedDate":"2021-10-24"},{"lineNumber":19,"author":{"gitId":"tsinyee"},"content":"    private SortOrder byTag \u003d new SortOrder(\"tag\");","lastModifiedDate":"2021-10-24"},{"lineNumber":20,"author":{"gitId":"tsinyee"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":21,"author":{"gitId":"tsinyee"},"content":"    @Test","lastModifiedDate":"2021-10-24"},{"lineNumber":22,"author":{"gitId":"tsinyee"},"content":"    public void equals() {","lastModifiedDate":"2021-10-24"},{"lineNumber":23,"author":{"gitId":"tsinyee"},"content":"        SortOrder byName \u003d new SortOrder(\"name\");","lastModifiedDate":"2021-10-24"},{"lineNumber":24,"author":{"gitId":"tsinyee"},"content":"        SortOrder byTag \u003d new SortOrder(\"tag\");","lastModifiedDate":"2021-10-24"},{"lineNumber":25,"author":{"gitId":"tsinyee"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":26,"author":{"gitId":"tsinyee"},"content":"        SortMemberCommand sortByNameCommand \u003d new SortMemberCommand(byName);","lastModifiedDate":"2021-10-24"},{"lineNumber":27,"author":{"gitId":"tsinyee"},"content":"        SortMemberCommand sortByTagCommand \u003d new SortMemberCommand(byTag);","lastModifiedDate":"2021-10-24"},{"lineNumber":28,"author":{"gitId":"tsinyee"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":29,"author":{"gitId":"tsinyee"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-10-24"},{"lineNumber":30,"author":{"gitId":"tsinyee"},"content":"        assertTrue(sortByNameCommand.equals(sortByNameCommand));","lastModifiedDate":"2021-10-24"},{"lineNumber":31,"author":{"gitId":"tsinyee"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":32,"author":{"gitId":"tsinyee"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2021-10-24"},{"lineNumber":33,"author":{"gitId":"tsinyee"},"content":"        SortMemberCommand sortByTagCommandCopy \u003d new SortMemberCommand(byTag);","lastModifiedDate":"2021-10-24"},{"lineNumber":34,"author":{"gitId":"tsinyee"},"content":"        assertTrue(sortByTagCommand.equals(sortByTagCommandCopy));","lastModifiedDate":"2021-10-24"},{"lineNumber":35,"author":{"gitId":"tsinyee"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":36,"author":{"gitId":"tsinyee"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2021-10-24"},{"lineNumber":37,"author":{"gitId":"tsinyee"},"content":"        assertFalse(sortByNameCommand.equals(1));","lastModifiedDate":"2021-10-24"},{"lineNumber":38,"author":{"gitId":"tsinyee"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":39,"author":{"gitId":"tsinyee"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-10-24"},{"lineNumber":40,"author":{"gitId":"tsinyee"},"content":"        assertFalse(sortByNameCommand.equals(null));","lastModifiedDate":"2021-10-24"},{"lineNumber":41,"author":{"gitId":"tsinyee"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":42,"author":{"gitId":"tsinyee"},"content":"        // different sort order -\u003e returns false","lastModifiedDate":"2021-10-24"},{"lineNumber":43,"author":{"gitId":"tsinyee"},"content":"        assertFalse(sortByNameCommand.equals(sortByTagCommand));","lastModifiedDate":"2021-10-24"},{"lineNumber":44,"author":{"gitId":"tsinyee"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":45,"author":{"gitId":"tsinyee"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":46,"author":{"gitId":"tsinyee"},"content":"    @Test","lastModifiedDate":"2021-10-24"},{"lineNumber":47,"author":{"gitId":"tsinyee"},"content":"    public void execute_unsortedListIsNotFiltered_isSortedByName() {","lastModifiedDate":"2021-10-24"},{"lineNumber":48,"author":{"gitId":"tsinyee"},"content":"        Model model \u003d new ModelManager(getUnsortedNameAddressBook(), new UserPrefs());","lastModifiedDate":"2021-10-24"},{"lineNumber":49,"author":{"gitId":"tsinyee"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2021-10-24"},{"lineNumber":50,"author":{"gitId":"tsinyee"},"content":"        SortMemberCommand command \u003d new SortMemberCommand(byName);","lastModifiedDate":"2021-10-24"},{"lineNumber":51,"author":{"gitId":"tsinyee"},"content":"        expectedModel.sortMemberList(byName);","lastModifiedDate":"2021-10-24"},{"lineNumber":52,"author":{"gitId":"tsinyee"},"content":"        expectedModel.updateFilteredPersonList(Model.PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2021-10-24"},{"lineNumber":53,"author":{"gitId":"tsinyee"},"content":"        String expectedMessage \u003d String.format(SortMemberCommand.MESSAGE_SUCCESS, byName);","lastModifiedDate":"2021-10-24"},{"lineNumber":54,"author":{"gitId":"tsinyee"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-10-24"},{"lineNumber":55,"author":{"gitId":"tsinyee"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":56,"author":{"gitId":"tsinyee"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":57,"author":{"gitId":"tsinyee"},"content":"    @Test","lastModifiedDate":"2021-10-24"},{"lineNumber":58,"author":{"gitId":"tsinyee"},"content":"    public void execute_unsortedListIsNotFiltered_isSortedByTag() {","lastModifiedDate":"2021-10-24"},{"lineNumber":59,"author":{"gitId":"tsinyee"},"content":"        Model model \u003d new ModelManager(getUnsortedTagAddressBook(), new UserPrefs());","lastModifiedDate":"2021-10-24"},{"lineNumber":60,"author":{"gitId":"tsinyee"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2021-10-24"},{"lineNumber":61,"author":{"gitId":"tsinyee"},"content":"        SortMemberCommand command \u003d new SortMemberCommand(byTag);","lastModifiedDate":"2021-10-24"},{"lineNumber":62,"author":{"gitId":"tsinyee"},"content":"        expectedModel.sortMemberList(byTag);","lastModifiedDate":"2021-10-24"},{"lineNumber":63,"author":{"gitId":"tsinyee"},"content":"        expectedModel.updateFilteredPersonList(Model.PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2021-10-24"},{"lineNumber":64,"author":{"gitId":"tsinyee"},"content":"        String expectedMessage \u003d String.format(SortMemberCommand.MESSAGE_SUCCESS, byTag);","lastModifiedDate":"2021-10-24"},{"lineNumber":65,"author":{"gitId":"tsinyee"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-10-24"},{"lineNumber":66,"author":{"gitId":"tsinyee"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":67,"author":{"gitId":"tsinyee"},"content":"}","lastModifiedDate":"2021-10-19"}],"authorContributionMap":{"tsinyee":67}},{"path":"src/test/java/seedu/address/logic/commands/SplitCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Shruthi0310"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-10-12"},{"lineNumber":2,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":3,"author":{"gitId":"Shruthi0310"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-12"},{"lineNumber":4,"author":{"gitId":"Shruthi0310"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-12"},{"lineNumber":5,"author":{"gitId":"YoYoCiti"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2021-10-26"},{"lineNumber":6,"author":{"gitId":"Shruthi0310"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-10-12"},{"lineNumber":7,"author":{"gitId":"Shruthi0310"},"content":"import static seedu.address.testutil.TypicalAddressBook.getTypicalAddressBook;","lastModifiedDate":"2021-10-12"},{"lineNumber":8,"author":{"gitId":"YoYoCiti"},"content":"import static seedu.address.testutil.TypicalPersons.AMY;","lastModifiedDate":"2021-10-26"},{"lineNumber":9,"author":{"gitId":"YoYoCiti"},"content":"import static seedu.address.testutil.TypicalPersons.BOB;","lastModifiedDate":"2021-10-26"},{"lineNumber":10,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":11,"author":{"gitId":"felix-ong"},"content":"import java.time.DayOfWeek;","lastModifiedDate":"2021-10-19"},{"lineNumber":12,"author":{"gitId":"felix-ong"},"content":"import java.time.format.TextStyle;","lastModifiedDate":"2021-10-19"},{"lineNumber":13,"author":{"gitId":"felix-ong"},"content":"import java.util.Locale;","lastModifiedDate":"2021-10-19"},{"lineNumber":14,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":15,"author":{"gitId":"Shruthi0310"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-12"},{"lineNumber":16,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":17,"author":{"gitId":"Shruthi0310"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2021-10-22"},{"lineNumber":18,"author":{"gitId":"Shruthi0310"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-10-12"},{"lineNumber":19,"author":{"gitId":"Shruthi0310"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2021-10-12"},{"lineNumber":20,"author":{"gitId":"Shruthi0310"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2021-10-12"},{"lineNumber":21,"author":{"gitId":"YoYoCiti"},"content":"import seedu.address.model.facility.Facility;","lastModifiedDate":"2021-10-26"},{"lineNumber":22,"author":{"gitId":"Shruthi0310"},"content":"import seedu.address.model.person.PersonAvailableOnDayPredicate;","lastModifiedDate":"2021-10-12"},{"lineNumber":23,"author":{"gitId":"YoYoCiti"},"content":"import seedu.address.testutil.FacilityBuilder;","lastModifiedDate":"2021-10-26"},{"lineNumber":24,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":25,"author":{"gitId":"Shruthi0310"},"content":"public class SplitCommandTest {","lastModifiedDate":"2021-10-12"},{"lineNumber":26,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":27,"author":{"gitId":"Shruthi0310"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":28,"author":{"gitId":"Shruthi0310"},"content":"    public void execute_validDay_success() {","lastModifiedDate":"2021-10-12"},{"lineNumber":29,"author":{"gitId":"YoYoCiti"},"content":"        Model model \u003d new ModelManager(new AddressBook(), new UserPrefs());","lastModifiedDate":"2021-10-26"},{"lineNumber":30,"author":{"gitId":"YoYoCiti"},"content":"        SplitCommand command \u003d new SplitCommand(1);","lastModifiedDate":"2021-10-26"},{"lineNumber":31,"author":{"gitId":"YoYoCiti"},"content":"        model.addPerson(AMY);","lastModifiedDate":"2021-10-26"},{"lineNumber":32,"author":{"gitId":"YoYoCiti"},"content":"        Facility f \u003d new FacilityBuilder().withCapacity(\"1\").build();","lastModifiedDate":"2021-10-26"},{"lineNumber":33,"author":{"gitId":"YoYoCiti"},"content":"        model.addFacility(f);","lastModifiedDate":"2021-10-26"},{"lineNumber":34,"author":{"gitId":"YoYoCiti"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2021-10-26"},{"lineNumber":35,"author":{"gitId":"felix-ong"},"content":"        PersonAvailableOnDayPredicate predicate \u003d new PersonAvailableOnDayPredicate(1);","lastModifiedDate":"2021-10-16"},{"lineNumber":36,"author":{"gitId":"Shruthi0310"},"content":"        expectedModel.split(predicate);","lastModifiedDate":"2021-10-12"},{"lineNumber":37,"author":{"gitId":"YoYoCiti"},"content":"        assertCommandSuccess(command, model, String.format(SplitCommand.MESSAGE_SUCCESS,","lastModifiedDate":"2021-10-26"},{"lineNumber":38,"author":{"gitId":"YoYoCiti"},"content":"                DayOfWeek.of(1).getDisplayName(TextStyle.FULL, Locale.getDefault())), expectedModel);","lastModifiedDate":"2021-10-26"},{"lineNumber":39,"author":{"gitId":"Shruthi0310"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":40,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":41,"author":{"gitId":"YoYoCiti"},"content":"    @Test","lastModifiedDate":"2021-10-26"},{"lineNumber":42,"author":{"gitId":"YoYoCiti"},"content":"    public void execute_noMembersAvailable_throwsCommandException() {","lastModifiedDate":"2021-10-26"},{"lineNumber":43,"author":{"gitId":"YoYoCiti"},"content":"        Model model \u003d new ModelManager(new AddressBook(getTypicalAddressBook()), new UserPrefs());","lastModifiedDate":"2021-10-26"},{"lineNumber":44,"author":{"gitId":"YoYoCiti"},"content":"        SplitCommand command \u003d new SplitCommand(1);","lastModifiedDate":"2021-10-26"},{"lineNumber":45,"author":{"gitId":"YoYoCiti"},"content":"        assertCommandFailure(command, model, String.format(","lastModifiedDate":"2021-10-26"},{"lineNumber":46,"author":{"gitId":"YoYoCiti"},"content":"                SplitCommand.MESSAGE_NO_MEMBERS_AVAILABLE,","lastModifiedDate":"2021-10-26"},{"lineNumber":47,"author":{"gitId":"YoYoCiti"},"content":"                DayOfWeek.of(1).getDisplayName(TextStyle.FULL, Locale.getDefault())));","lastModifiedDate":"2021-10-26"},{"lineNumber":48,"author":{"gitId":"YoYoCiti"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":49,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":50,"author":{"gitId":"YoYoCiti"},"content":"    @Test","lastModifiedDate":"2021-10-26"},{"lineNumber":51,"author":{"gitId":"YoYoCiti"},"content":"    public void execute_emptyMemberList_throwsCommandException() {","lastModifiedDate":"2021-10-26"},{"lineNumber":52,"author":{"gitId":"YoYoCiti"},"content":"        SplitCommand command \u003d new SplitCommand(1);","lastModifiedDate":"2021-10-26"},{"lineNumber":53,"author":{"gitId":"YoYoCiti"},"content":"        Model model \u003d new ModelManager(new AddressBook(), new UserPrefs());","lastModifiedDate":"2021-10-26"},{"lineNumber":54,"author":{"gitId":"YoYoCiti"},"content":"        assertCommandFailure(command, model, String.format(","lastModifiedDate":"2021-10-26"},{"lineNumber":55,"author":{"gitId":"YoYoCiti"},"content":"                SplitCommand.MESSAGE_NO_MEMBERS_AVAILABLE,","lastModifiedDate":"2021-10-26"},{"lineNumber":56,"author":{"gitId":"YoYoCiti"},"content":"                DayOfWeek.of(1).getDisplayName(TextStyle.FULL, Locale.getDefault())));","lastModifiedDate":"2021-10-26"},{"lineNumber":57,"author":{"gitId":"YoYoCiti"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":58,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":59,"author":{"gitId":"YoYoCiti"},"content":"    @Test","lastModifiedDate":"2021-10-26"},{"lineNumber":60,"author":{"gitId":"YoYoCiti"},"content":"    public void execute_insufficientFacilities_throwsCommandException() {","lastModifiedDate":"2021-10-26"},{"lineNumber":61,"author":{"gitId":"YoYoCiti"},"content":"        SplitCommand command \u003d new SplitCommand(1);","lastModifiedDate":"2021-10-26"},{"lineNumber":62,"author":{"gitId":"YoYoCiti"},"content":"        Model model \u003d new ModelManager(new AddressBook(), new UserPrefs());","lastModifiedDate":"2021-10-26"},{"lineNumber":63,"author":{"gitId":"YoYoCiti"},"content":"        Facility f \u003d new FacilityBuilder().withCapacity(\"1\").build();","lastModifiedDate":"2021-10-26"},{"lineNumber":64,"author":{"gitId":"YoYoCiti"},"content":"        model.addFacility(f);","lastModifiedDate":"2021-10-26"},{"lineNumber":65,"author":{"gitId":"YoYoCiti"},"content":"        model.addPerson(AMY);","lastModifiedDate":"2021-10-26"},{"lineNumber":66,"author":{"gitId":"YoYoCiti"},"content":"        model.addPerson(BOB);","lastModifiedDate":"2021-10-26"},{"lineNumber":67,"author":{"gitId":"YoYoCiti"},"content":"        String expectedMessage \u003d String.format(SplitCommand.MESSAGE_INSUFFICIENT_FACILITIES,","lastModifiedDate":"2021-10-26"},{"lineNumber":68,"author":{"gitId":"YoYoCiti"},"content":"                DayOfWeek.of(1).getDisplayName(TextStyle.FULL, Locale.getDefault()), 1);","lastModifiedDate":"2021-10-26"},{"lineNumber":69,"author":{"gitId":"YoYoCiti"},"content":"        assertCommandFailure(command, model, expectedMessage);","lastModifiedDate":"2021-10-26"},{"lineNumber":70,"author":{"gitId":"YoYoCiti"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":71,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":72,"author":{"gitId":"YoYoCiti"},"content":"    @Test","lastModifiedDate":"2021-10-26"},{"lineNumber":73,"author":{"gitId":"YoYoCiti"},"content":"    public void execute_emptyFacilityList_throwsCommandException() {","lastModifiedDate":"2021-10-26"},{"lineNumber":74,"author":{"gitId":"YoYoCiti"},"content":"        SplitCommand command \u003d new SplitCommand(1);","lastModifiedDate":"2021-10-26"},{"lineNumber":75,"author":{"gitId":"YoYoCiti"},"content":"        Model model \u003d new ModelManager(new AddressBook(), new UserPrefs());","lastModifiedDate":"2021-10-26"},{"lineNumber":76,"author":{"gitId":"YoYoCiti"},"content":"        model.addPerson(AMY);","lastModifiedDate":"2021-10-26"},{"lineNumber":77,"author":{"gitId":"YoYoCiti"},"content":"        model.addPerson(BOB);","lastModifiedDate":"2021-10-26"},{"lineNumber":78,"author":{"gitId":"YoYoCiti"},"content":"        String expectedMessage \u003d String.format(SplitCommand.MESSAGE_INSUFFICIENT_FACILITIES,","lastModifiedDate":"2021-10-26"},{"lineNumber":79,"author":{"gitId":"YoYoCiti"},"content":"                DayOfWeek.of(1).getDisplayName(TextStyle.FULL, Locale.getDefault()), 2);","lastModifiedDate":"2021-10-26"},{"lineNumber":80,"author":{"gitId":"YoYoCiti"},"content":"        assertCommandFailure(command, model, expectedMessage);","lastModifiedDate":"2021-10-26"},{"lineNumber":81,"author":{"gitId":"YoYoCiti"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":82,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":83,"author":{"gitId":"Shruthi0310"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":84,"author":{"gitId":"Shruthi0310"},"content":"    public void equals() {","lastModifiedDate":"2021-10-12"},{"lineNumber":85,"author":{"gitId":"felix-ong"},"content":"        SplitCommand firstCommand \u003d new SplitCommand(1);","lastModifiedDate":"2021-10-16"},{"lineNumber":86,"author":{"gitId":"felix-ong"},"content":"        SplitCommand secondCommand \u003d new SplitCommand(2);","lastModifiedDate":"2021-10-16"},{"lineNumber":87,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":88,"author":{"gitId":"Shruthi0310"},"content":"        assertTrue(firstCommand.equals(firstCommand));","lastModifiedDate":"2021-10-12"},{"lineNumber":89,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":90,"author":{"gitId":"felix-ong"},"content":"        SplitCommand firstCommandCopy \u003d new SplitCommand(1);","lastModifiedDate":"2021-10-16"},{"lineNumber":91,"author":{"gitId":"Shruthi0310"},"content":"        assertTrue(firstCommand.equals(firstCommandCopy));","lastModifiedDate":"2021-10-12"},{"lineNumber":92,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":93,"author":{"gitId":"Shruthi0310"},"content":"        assertFalse(firstCommand.equals(secondCommand));","lastModifiedDate":"2021-10-12"},{"lineNumber":94,"author":{"gitId":"Shruthi0310"},"content":"        assertFalse(firstCommand.equals(null));","lastModifiedDate":"2021-10-12"},{"lineNumber":95,"author":{"gitId":"Shruthi0310"},"content":"        assertFalse(firstCommand.equals(1));","lastModifiedDate":"2021-10-12"},{"lineNumber":96,"author":{"gitId":"Shruthi0310"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":97,"author":{"gitId":"Shruthi0310"},"content":"}","lastModifiedDate":"2021-10-12"}],"authorContributionMap":{"YoYoCiti":56,"Shruthi0310":34,"felix-ong":7}},{"path":"src/test/java/seedu/address/logic/commands/UnmarkAttendanceCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Shruthi0310"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-10-21"},{"lineNumber":2,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":3,"author":{"gitId":"Shruthi0310"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-21"},{"lineNumber":4,"author":{"gitId":"Shruthi0310"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-21"},{"lineNumber":5,"author":{"gitId":"Shruthi0310"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2021-10-21"},{"lineNumber":6,"author":{"gitId":"Shruthi0310"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-10-21"},{"lineNumber":7,"author":{"gitId":"Shruthi0310"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST;","lastModifiedDate":"2021-10-21"},{"lineNumber":8,"author":{"gitId":"Shruthi0310"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND;","lastModifiedDate":"2021-10-21"},{"lineNumber":9,"author":{"gitId":"Shruthi0310"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_THIRD;","lastModifiedDate":"2021-10-21"},{"lineNumber":10,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":11,"author":{"gitId":"Shruthi0310"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-10-21"},{"lineNumber":12,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":13,"author":{"gitId":"Shruthi0310"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-21"},{"lineNumber":14,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":15,"author":{"gitId":"Shruthi0310"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2021-10-21"},{"lineNumber":16,"author":{"gitId":"Shruthi0310"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-10-21"},{"lineNumber":17,"author":{"gitId":"Shruthi0310"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-10-21"},{"lineNumber":18,"author":{"gitId":"Shruthi0310"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2021-10-21"},{"lineNumber":19,"author":{"gitId":"Shruthi0310"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2021-10-21"},{"lineNumber":20,"author":{"gitId":"Shruthi0310"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2021-10-21"},{"lineNumber":21,"author":{"gitId":"Shruthi0310"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2021-10-21"},{"lineNumber":22,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":23,"author":{"gitId":"Shruthi0310"},"content":"class UnmarkAttendanceCommandTest {","lastModifiedDate":"2021-10-21"},{"lineNumber":24,"author":{"gitId":"Shruthi0310"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2021-10-21"},{"lineNumber":25,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":26,"author":{"gitId":"Shruthi0310"},"content":"    @Test","lastModifiedDate":"2021-10-21"},{"lineNumber":27,"author":{"gitId":"Shruthi0310"},"content":"    void execute_validIndices_success() {","lastModifiedDate":"2021-10-21"},{"lineNumber":28,"author":{"gitId":"Shruthi0310"},"content":"        Person firstPerson \u003d new PersonBuilder().withName(\"John\").build();","lastModifiedDate":"2021-10-21"},{"lineNumber":29,"author":{"gitId":"Shruthi0310"},"content":"        Person secondPerson \u003d new PersonBuilder().withName(\"Mat\").build();","lastModifiedDate":"2021-10-21"},{"lineNumber":30,"author":{"gitId":"Shruthi0310"},"content":"        model.addPerson(firstPerson);","lastModifiedDate":"2021-10-21"},{"lineNumber":31,"author":{"gitId":"Shruthi0310"},"content":"        model.addPerson(secondPerson);","lastModifiedDate":"2021-10-21"},{"lineNumber":32,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":33,"author":{"gitId":"Shruthi0310"},"content":"        UnmarkAttendanceCommand command \u003d new UnmarkAttendanceCommand(Arrays.asList(INDEX_FIRST, INDEX_SECOND));","lastModifiedDate":"2021-10-21"},{"lineNumber":34,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":35,"author":{"gitId":"Shruthi0310"},"content":"        String expectedMessage \u003d UnmarkAttendanceCommand.MESSAGE_SUCCESS;","lastModifiedDate":"2021-10-21"},{"lineNumber":36,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":37,"author":{"gitId":"Shruthi0310"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2021-10-21"},{"lineNumber":38,"author":{"gitId":"Shruthi0310"},"content":"        expectedModel.unmarkMembersAttendance(Arrays.asList(INDEX_FIRST, INDEX_SECOND));","lastModifiedDate":"2021-10-21"},{"lineNumber":39,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":40,"author":{"gitId":"Shruthi0310"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-10-21"},{"lineNumber":41,"author":{"gitId":"Shruthi0310"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":42,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":43,"author":{"gitId":"Shruthi0310"},"content":"    @Test","lastModifiedDate":"2021-10-21"},{"lineNumber":44,"author":{"gitId":"Shruthi0310"},"content":"    public void execute_invalidIndices_throwsCommandException() {","lastModifiedDate":"2021-10-21"},{"lineNumber":45,"author":{"gitId":"Shruthi0310"},"content":"        Index outOfBoundsIndex \u003d Index.fromOneBased(model.getFilteredPersonList().size() + 1);","lastModifiedDate":"2021-10-21"},{"lineNumber":46,"author":{"gitId":"Shruthi0310"},"content":"        UnmarkAttendanceCommand command \u003d new UnmarkAttendanceCommand(Arrays.asList(outOfBoundsIndex));","lastModifiedDate":"2021-10-21"},{"lineNumber":47,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":48,"author":{"gitId":"Shruthi0310"},"content":"        assertCommandFailure(command, model, Messages.MESSAGE_INVALID_MEMBER_DISPLAYED_INDEX);","lastModifiedDate":"2021-10-21"},{"lineNumber":49,"author":{"gitId":"Shruthi0310"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":50,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":51,"author":{"gitId":"Shruthi0310"},"content":"    @Test","lastModifiedDate":"2021-10-21"},{"lineNumber":52,"author":{"gitId":"Shruthi0310"},"content":"    public void equals() {","lastModifiedDate":"2021-10-21"},{"lineNumber":53,"author":{"gitId":"Shruthi0310"},"content":"        UnmarkAttendanceCommand firstCommand \u003d new UnmarkAttendanceCommand(Arrays.asList(INDEX_FIRST, INDEX_SECOND));","lastModifiedDate":"2021-10-21"},{"lineNumber":54,"author":{"gitId":"Shruthi0310"},"content":"        UnmarkAttendanceCommand secondCommand \u003d new UnmarkAttendanceCommand(Arrays.asList(INDEX_THIRD));","lastModifiedDate":"2021-10-21"},{"lineNumber":55,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":56,"author":{"gitId":"Shruthi0310"},"content":"        assertTrue(firstCommand.equals(firstCommand));","lastModifiedDate":"2021-10-21"},{"lineNumber":57,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":58,"author":{"gitId":"Shruthi0310"},"content":"        UnmarkAttendanceCommand firstCommandCopy \u003d new UnmarkAttendanceCommand(Arrays.asList(INDEX_FIRST,","lastModifiedDate":"2021-10-21"},{"lineNumber":59,"author":{"gitId":"Shruthi0310"},"content":"                INDEX_SECOND));","lastModifiedDate":"2021-10-21"},{"lineNumber":60,"author":{"gitId":"Shruthi0310"},"content":"        assertTrue(firstCommand.equals(firstCommandCopy));","lastModifiedDate":"2021-10-21"},{"lineNumber":61,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":62,"author":{"gitId":"Shruthi0310"},"content":"        assertFalse(firstCommand.equals(secondCommand));","lastModifiedDate":"2021-10-21"},{"lineNumber":63,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":64,"author":{"gitId":"Shruthi0310"},"content":"        assertFalse(firstCommand.equals(null));","lastModifiedDate":"2021-10-21"},{"lineNumber":65,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":66,"author":{"gitId":"Shruthi0310"},"content":"        assertFalse(firstCommand.equals(\"1\"));","lastModifiedDate":"2021-10-21"},{"lineNumber":67,"author":{"gitId":"Shruthi0310"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":68,"author":{"gitId":"Shruthi0310"},"content":"}","lastModifiedDate":"2021-10-21"}],"authorContributionMap":{"Shruthi0310":68}},{"path":"src/test/java/seedu/address/logic/parser/AddAliasCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"YoYoCiti"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-10-17"},{"lineNumber":2,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":3,"author":{"gitId":"YoYoCiti"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-17"},{"lineNumber":4,"author":{"gitId":"YoYoCiti"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PREAMBLE_WHITESPACE;","lastModifiedDate":"2021-10-17"},{"lineNumber":5,"author":{"gitId":"YoYoCiti"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_COMMAND_WORD;","lastModifiedDate":"2021-10-17"},{"lineNumber":6,"author":{"gitId":"YoYoCiti"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_SHORTCUT;","lastModifiedDate":"2021-10-18"},{"lineNumber":7,"author":{"gitId":"YoYoCiti"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2021-10-17"},{"lineNumber":8,"author":{"gitId":"YoYoCiti"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2021-10-17"},{"lineNumber":9,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":10,"author":{"gitId":"YoYoCiti"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-17"},{"lineNumber":11,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":12,"author":{"gitId":"YoYoCiti"},"content":"import seedu.address.logic.commands.AddAliasCommand;","lastModifiedDate":"2021-10-17"},{"lineNumber":13,"author":{"gitId":"YoYoCiti"},"content":"import seedu.address.model.alias.Alias;","lastModifiedDate":"2021-10-18"},{"lineNumber":14,"author":{"gitId":"YoYoCiti"},"content":"import seedu.address.model.alias.CommandWord;","lastModifiedDate":"2021-10-18"},{"lineNumber":15,"author":{"gitId":"YoYoCiti"},"content":"import seedu.address.model.alias.Shortcut;","lastModifiedDate":"2021-10-18"},{"lineNumber":16,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":17,"author":{"gitId":"YoYoCiti"},"content":"public class AddAliasCommandParserTest {","lastModifiedDate":"2021-10-17"},{"lineNumber":18,"author":{"gitId":"YoYoCiti"},"content":"    private AddAliasCommandParser parser \u003d new AddAliasCommandParser();","lastModifiedDate":"2021-10-17"},{"lineNumber":19,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":20,"author":{"gitId":"YoYoCiti"},"content":"    @Test","lastModifiedDate":"2021-10-17"},{"lineNumber":21,"author":{"gitId":"YoYoCiti"},"content":"    public void parse_allFieldsPresent_success() {","lastModifiedDate":"2021-10-17"},{"lineNumber":22,"author":{"gitId":"YoYoCiti"},"content":"        String shortcut \u003d \"lf\";","lastModifiedDate":"2021-10-18"},{"lineNumber":23,"author":{"gitId":"YoYoCiti"},"content":"        String command \u003d \"listf\";","lastModifiedDate":"2021-10-17"},{"lineNumber":24,"author":{"gitId":"YoYoCiti"},"content":"        assertParseSuccess(parser, PREAMBLE_WHITESPACE","lastModifiedDate":"2021-10-17"},{"lineNumber":25,"author":{"gitId":"YoYoCiti"},"content":"                + \" \" + PREFIX_SHORTCUT + shortcut","lastModifiedDate":"2021-10-18"},{"lineNumber":26,"author":{"gitId":"YoYoCiti"},"content":"                + \" \" + PREFIX_COMMAND_WORD + command,","lastModifiedDate":"2021-10-18"},{"lineNumber":27,"author":{"gitId":"YoYoCiti"},"content":"                new AddAliasCommand(new Alias(new Shortcut(shortcut), new CommandWord(command))));","lastModifiedDate":"2021-10-18"},{"lineNumber":28,"author":{"gitId":"YoYoCiti"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":29,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":30,"author":{"gitId":"YoYoCiti"},"content":"    @Test","lastModifiedDate":"2021-10-17"},{"lineNumber":31,"author":{"gitId":"YoYoCiti"},"content":"    public void parse_compulsoryFieldMissing_failure() {","lastModifiedDate":"2021-10-17"},{"lineNumber":32,"author":{"gitId":"YoYoCiti"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddAliasCommand.MESSAGE_USAGE);","lastModifiedDate":"2021-10-17"},{"lineNumber":33,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":34,"author":{"gitId":"YoYoCiti"},"content":"        // missing alias prefix","lastModifiedDate":"2021-10-17"},{"lineNumber":35,"author":{"gitId":"YoYoCiti"},"content":"        assertParseFailure(parser, \"lf cw/listf\", expectedMessage);","lastModifiedDate":"2021-10-17"},{"lineNumber":36,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":37,"author":{"gitId":"YoYoCiti"},"content":"        // missing command word prefix","lastModifiedDate":"2021-10-17"},{"lineNumber":38,"author":{"gitId":"YoYoCiti"},"content":"        assertParseFailure(parser, \"a/lf listf\", expectedMessage);","lastModifiedDate":"2021-10-17"},{"lineNumber":39,"author":{"gitId":"YoYoCiti"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":40,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":41,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":42,"author":{"gitId":"YoYoCiti"},"content":"}","lastModifiedDate":"2021-10-17"}],"authorContributionMap":{"YoYoCiti":42}},{"path":"src/test/java/seedu/address/logic/parser/AddFacilityCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Shruthi0310"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-10-05"},{"lineNumber":2,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":3,"author":{"gitId":"Shruthi0310"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-05"},{"lineNumber":4,"author":{"gitId":"Shruthi0310"},"content":"import static seedu.address.logic.commands.CommandTestUtil.CAPACITY_DESC_COURT;","lastModifiedDate":"2021-10-06"},{"lineNumber":5,"author":{"gitId":"Shruthi0310"},"content":"import static seedu.address.logic.commands.CommandTestUtil.CAPACITY_DESC_FIELD;","lastModifiedDate":"2021-10-06"},{"lineNumber":6,"author":{"gitId":"Shruthi0310"},"content":"import static seedu.address.logic.commands.CommandTestUtil.LOCATION_DESC_COURT;","lastModifiedDate":"2021-10-06"},{"lineNumber":7,"author":{"gitId":"Shruthi0310"},"content":"import static seedu.address.logic.commands.CommandTestUtil.LOCATION_DESC_FIELD;","lastModifiedDate":"2021-10-06"},{"lineNumber":8,"author":{"gitId":"Shruthi0310"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_COURT;","lastModifiedDate":"2021-10-06"},{"lineNumber":9,"author":{"gitId":"Shruthi0310"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_FIELD;","lastModifiedDate":"2021-10-06"},{"lineNumber":10,"author":{"gitId":"Shruthi0310"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PREAMBLE_WHITESPACE;","lastModifiedDate":"2021-10-06"},{"lineNumber":11,"author":{"gitId":"Shruthi0310"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TIME_DESC_COURT;","lastModifiedDate":"2021-10-06"},{"lineNumber":12,"author":{"gitId":"Shruthi0310"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TIME_DESC_FIELD;","lastModifiedDate":"2021-10-06"},{"lineNumber":13,"author":{"gitId":"Shruthi0310"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_CAPACITY_COURT;","lastModifiedDate":"2021-10-06"},{"lineNumber":14,"author":{"gitId":"Shruthi0310"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_FACILITY_NAME_COURT;","lastModifiedDate":"2021-10-06"},{"lineNumber":15,"author":{"gitId":"Shruthi0310"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_LOCATION_COURT;","lastModifiedDate":"2021-10-06"},{"lineNumber":16,"author":{"gitId":"Shruthi0310"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TIME_COURT;","lastModifiedDate":"2021-10-06"},{"lineNumber":17,"author":{"gitId":"Shruthi0310"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2021-10-05"},{"lineNumber":18,"author":{"gitId":"Shruthi0310"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2021-10-05"},{"lineNumber":19,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":20,"author":{"gitId":"Shruthi0310"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-06"},{"lineNumber":21,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":22,"author":{"gitId":"Shruthi0310"},"content":"import seedu.address.logic.commands.AddFacilityCommand;","lastModifiedDate":"2021-10-06"},{"lineNumber":23,"author":{"gitId":"Shruthi0310"},"content":"import seedu.address.model.facility.Capacity;","lastModifiedDate":"2021-10-06"},{"lineNumber":24,"author":{"gitId":"Shruthi0310"},"content":"import seedu.address.model.facility.Facility;","lastModifiedDate":"2021-10-06"},{"lineNumber":25,"author":{"gitId":"Shruthi0310"},"content":"import seedu.address.model.facility.FacilityName;","lastModifiedDate":"2021-10-06"},{"lineNumber":26,"author":{"gitId":"Shruthi0310"},"content":"import seedu.address.model.facility.Location;","lastModifiedDate":"2021-10-06"},{"lineNumber":27,"author":{"gitId":"Shruthi0310"},"content":"import seedu.address.model.facility.Time;","lastModifiedDate":"2021-10-06"},{"lineNumber":28,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":29,"author":{"gitId":"Shruthi0310"},"content":"class AddFacilityCommandParserTest {","lastModifiedDate":"2021-10-05"},{"lineNumber":30,"author":{"gitId":"Shruthi0310"},"content":"    private AddFacilityCommandParser parser \u003d new AddFacilityCommandParser();","lastModifiedDate":"2021-10-05"},{"lineNumber":31,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":32,"author":{"gitId":"Shruthi0310"},"content":"    @Test","lastModifiedDate":"2021-10-05"},{"lineNumber":33,"author":{"gitId":"Shruthi0310"},"content":"    public void parse_allFieldsPresent_success() {","lastModifiedDate":"2021-10-05"},{"lineNumber":34,"author":{"gitId":"Shruthi0310"},"content":"        Facility facility \u003d new Facility(new FacilityName(\"Court 1\"), new Location(\"University Sports Hall\"),","lastModifiedDate":"2021-10-05"},{"lineNumber":35,"author":{"gitId":"tsinyee"},"content":"                new Time(\"1130\"), new Capacity(\"5\"));","lastModifiedDate":"2021-10-12"},{"lineNumber":36,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":37,"author":{"gitId":"Shruthi0310"},"content":"        assertParseSuccess(parser, NAME_DESC_COURT + LOCATION_DESC_COURT + TIME_DESC_COURT + CAPACITY_DESC_COURT,","lastModifiedDate":"2021-10-05"},{"lineNumber":38,"author":{"gitId":"Shruthi0310"},"content":"                new AddFacilityCommand(facility));","lastModifiedDate":"2021-10-05"},{"lineNumber":39,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":40,"author":{"gitId":"Shruthi0310"},"content":"        assertParseSuccess(parser, PREAMBLE_WHITESPACE + NAME_DESC_COURT + LOCATION_DESC_COURT + TIME_DESC_COURT","lastModifiedDate":"2021-10-05"},{"lineNumber":41,"author":{"gitId":"Shruthi0310"},"content":"                        + CAPACITY_DESC_COURT, new AddFacilityCommand(facility));","lastModifiedDate":"2021-10-05"},{"lineNumber":42,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":43,"author":{"gitId":"Shruthi0310"},"content":"        assertParseSuccess(parser, NAME_DESC_FIELD + NAME_DESC_COURT + LOCATION_DESC_COURT + TIME_DESC_COURT","lastModifiedDate":"2021-10-05"},{"lineNumber":44,"author":{"gitId":"Shruthi0310"},"content":"                        + CAPACITY_DESC_COURT, new AddFacilityCommand(facility));","lastModifiedDate":"2021-10-05"},{"lineNumber":45,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":46,"author":{"gitId":"Shruthi0310"},"content":"        assertParseSuccess(parser, NAME_DESC_COURT + LOCATION_DESC_FIELD + LOCATION_DESC_COURT + TIME_DESC_COURT","lastModifiedDate":"2021-10-05"},{"lineNumber":47,"author":{"gitId":"Shruthi0310"},"content":"                + CAPACITY_DESC_COURT, new AddFacilityCommand(facility));","lastModifiedDate":"2021-10-05"},{"lineNumber":48,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":49,"author":{"gitId":"Shruthi0310"},"content":"        assertParseSuccess(parser, NAME_DESC_COURT + LOCATION_DESC_COURT + TIME_DESC_FIELD + TIME_DESC_COURT","lastModifiedDate":"2021-10-05"},{"lineNumber":50,"author":{"gitId":"Shruthi0310"},"content":"                + CAPACITY_DESC_COURT, new AddFacilityCommand(facility));","lastModifiedDate":"2021-10-05"},{"lineNumber":51,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":52,"author":{"gitId":"Shruthi0310"},"content":"        assertParseSuccess(parser, NAME_DESC_COURT + LOCATION_DESC_COURT + TIME_DESC_COURT","lastModifiedDate":"2021-10-05"},{"lineNumber":53,"author":{"gitId":"Shruthi0310"},"content":"                + CAPACITY_DESC_FIELD + CAPACITY_DESC_COURT, new AddFacilityCommand(facility));","lastModifiedDate":"2021-10-05"},{"lineNumber":54,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":55,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":56,"author":{"gitId":"Shruthi0310"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":57,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":58,"author":{"gitId":"Shruthi0310"},"content":"    @Test","lastModifiedDate":"2021-10-05"},{"lineNumber":59,"author":{"gitId":"Shruthi0310"},"content":"    public void parse_fieldsMissing_exceptionThrown() {","lastModifiedDate":"2021-10-05"},{"lineNumber":60,"author":{"gitId":"Shruthi0310"},"content":"        Facility facility \u003d new Facility(new FacilityName(\"Court 1\"), new Location(\"University Sports Hall\"),","lastModifiedDate":"2021-10-05"},{"lineNumber":61,"author":{"gitId":"tsinyee"},"content":"                new Time(\"1130\"), new Capacity(\"5\"));","lastModifiedDate":"2021-10-12"},{"lineNumber":62,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":63,"author":{"gitId":"Shruthi0310"},"content":"        //missing name","lastModifiedDate":"2021-10-05"},{"lineNumber":64,"author":{"gitId":"Shruthi0310"},"content":"        assertParseFailure(parser, LOCATION_DESC_COURT + TIME_DESC_COURT + CAPACITY_DESC_COURT,","lastModifiedDate":"2021-10-05"},{"lineNumber":65,"author":{"gitId":"Shruthi0310"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddFacilityCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-05"},{"lineNumber":66,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":67,"author":{"gitId":"Shruthi0310"},"content":"        //missing location","lastModifiedDate":"2021-10-05"},{"lineNumber":68,"author":{"gitId":"Shruthi0310"},"content":"        assertParseFailure(parser, NAME_DESC_COURT + TIME_DESC_COURT + CAPACITY_DESC_COURT,","lastModifiedDate":"2021-10-05"},{"lineNumber":69,"author":{"gitId":"Shruthi0310"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddFacilityCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-05"},{"lineNumber":70,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":71,"author":{"gitId":"Shruthi0310"},"content":"        //missing time","lastModifiedDate":"2021-10-05"},{"lineNumber":72,"author":{"gitId":"Shruthi0310"},"content":"        assertParseFailure(parser, NAME_DESC_COURT + LOCATION_DESC_COURT + CAPACITY_DESC_COURT,","lastModifiedDate":"2021-10-05"},{"lineNumber":73,"author":{"gitId":"Shruthi0310"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddFacilityCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-05"},{"lineNumber":74,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":75,"author":{"gitId":"Shruthi0310"},"content":"        //missing capacity","lastModifiedDate":"2021-10-05"},{"lineNumber":76,"author":{"gitId":"Shruthi0310"},"content":"        assertParseFailure(parser, NAME_DESC_COURT + LOCATION_DESC_COURT + TIME_DESC_COURT,","lastModifiedDate":"2021-10-05"},{"lineNumber":77,"author":{"gitId":"Shruthi0310"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddFacilityCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-05"},{"lineNumber":78,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":79,"author":{"gitId":"Shruthi0310"},"content":"        //missing name prefix","lastModifiedDate":"2021-10-05"},{"lineNumber":80,"author":{"gitId":"Shruthi0310"},"content":"        assertParseFailure(parser, VALID_FACILITY_NAME_COURT + LOCATION_DESC_COURT + TIME_DESC_COURT","lastModifiedDate":"2021-10-05"},{"lineNumber":81,"author":{"gitId":"Shruthi0310"},"content":"                + CAPACITY_DESC_COURT, String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddFacilityCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-05"},{"lineNumber":82,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":83,"author":{"gitId":"Shruthi0310"},"content":"        //missing location prefix","lastModifiedDate":"2021-10-05"},{"lineNumber":84,"author":{"gitId":"Shruthi0310"},"content":"        assertParseFailure(parser, NAME_DESC_COURT + VALID_LOCATION_COURT + TIME_DESC_COURT","lastModifiedDate":"2021-10-05"},{"lineNumber":85,"author":{"gitId":"Shruthi0310"},"content":"                + CAPACITY_DESC_COURT, String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddFacilityCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-05"},{"lineNumber":86,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":87,"author":{"gitId":"Shruthi0310"},"content":"        //missing time prefix","lastModifiedDate":"2021-10-05"},{"lineNumber":88,"author":{"gitId":"Shruthi0310"},"content":"        assertParseFailure(parser, NAME_DESC_COURT + LOCATION_DESC_COURT + VALID_TIME_COURT","lastModifiedDate":"2021-10-05"},{"lineNumber":89,"author":{"gitId":"Shruthi0310"},"content":"                + CAPACITY_DESC_COURT, String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddFacilityCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-05"},{"lineNumber":90,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":91,"author":{"gitId":"Shruthi0310"},"content":"        //missing capacity prefix","lastModifiedDate":"2021-10-05"},{"lineNumber":92,"author":{"gitId":"Shruthi0310"},"content":"        assertParseFailure(parser, NAME_DESC_COURT + LOCATION_DESC_COURT + TIME_DESC_COURT + VALID_CAPACITY_COURT,","lastModifiedDate":"2021-10-06"},{"lineNumber":93,"author":{"gitId":"Shruthi0310"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddFacilityCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-06"},{"lineNumber":94,"author":{"gitId":"Shruthi0310"},"content":"        //missing all prefixes","lastModifiedDate":"2021-10-05"},{"lineNumber":95,"author":{"gitId":"Shruthi0310"},"content":"        assertParseFailure(parser, VALID_FACILITY_NAME_COURT + VALID_LOCATION_COURT + VALID_TIME_COURT","lastModifiedDate":"2021-10-05"},{"lineNumber":96,"author":{"gitId":"Shruthi0310"},"content":"                + VALID_CAPACITY_COURT, String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2021-10-06"},{"lineNumber":97,"author":{"gitId":"Shruthi0310"},"content":"                AddFacilityCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-06"},{"lineNumber":98,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":99,"author":{"gitId":"Shruthi0310"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":100,"author":{"gitId":"Shruthi0310"},"content":"}","lastModifiedDate":"2021-10-05"}],"authorContributionMap":{"Shruthi0310":98,"tsinyee":2}},{"path":"src/test/java/seedu/address/logic/parser/AddMemberCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-06-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-06-15"},{"lineNumber":4,"author":{"gitId":"tsinyee"},"content":"import static seedu.address.logic.commands.CommandTestUtil.AVAILABILITY_DESC_AMY;","lastModifiedDate":"2021-10-21"},{"lineNumber":5,"author":{"gitId":"tsinyee"},"content":"import static seedu.address.logic.commands.CommandTestUtil.AVAILABILITY_DESC_BOB;","lastModifiedDate":"2021-10-21"},{"lineNumber":6,"author":{"gitId":"tsinyee"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2021-10-21"},{"lineNumber":7,"author":{"gitId":"tsinyee"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_PHONE_DESC;","lastModifiedDate":"2021-10-21"},{"lineNumber":8,"author":{"gitId":"tsinyee"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_TAG_DESC;","lastModifiedDate":"2021-10-21"},{"lineNumber":9,"author":{"gitId":"tsinyee"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2021-10-21"},{"lineNumber":10,"author":{"gitId":"tsinyee"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_BOB;","lastModifiedDate":"2021-10-21"},{"lineNumber":11,"author":{"gitId":"tsinyee"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2021-10-21"},{"lineNumber":12,"author":{"gitId":"tsinyee"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_BOB;","lastModifiedDate":"2021-10-21"},{"lineNumber":13,"author":{"gitId":"tsinyee"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PREAMBLE_WHITESPACE;","lastModifiedDate":"2021-10-21"},{"lineNumber":14,"author":{"gitId":"tsinyee"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_EXCO;","lastModifiedDate":"2021-10-21"},{"lineNumber":15,"author":{"gitId":"tsinyee"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_Y2;","lastModifiedDate":"2021-10-21"},{"lineNumber":16,"author":{"gitId":"tsinyee"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2021-10-21"},{"lineNumber":17,"author":{"gitId":"tsinyee"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2021-10-21"},{"lineNumber":18,"author":{"gitId":"tsinyee"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_EXCO;","lastModifiedDate":"2021-10-21"},{"lineNumber":19,"author":{"gitId":"tsinyee"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_Y2;","lastModifiedDate":"2021-10-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":22,"author":{"gitId":"tsinyee"},"content":"import static seedu.address.testutil.TypicalPersons.AMY;","lastModifiedDate":"2021-10-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BOB;","lastModifiedDate":"2018-07-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":27,"author":{"gitId":"tsinyee"},"content":"import seedu.address.logic.commands.AddMemberCommand;","lastModifiedDate":"2021-10-05"},{"lineNumber":28,"author":{"gitId":"Shruthi0310"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-06-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-06-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-06-15"},{"lineNumber":32,"author":{"gitId":"tsinyee"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2021-10-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-06-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":35,"author":{"gitId":"tsinyee"},"content":"public class AddMemberCommandParserTest {","lastModifiedDate":"2021-10-05"},{"lineNumber":36,"author":{"gitId":"tsinyee"},"content":"    private AddMemberCommandParser parser \u003d new AddMemberCommandParser();","lastModifiedDate":"2021-10-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":39,"author":{"gitId":"Shruthi0310"},"content":"    public void parse_allFieldsPresent_success() throws ParseException {","lastModifiedDate":"2021-10-23"},{"lineNumber":40,"author":{"gitId":"tsinyee"},"content":"        Person expectedPerson \u003d new PersonBuilder(BOB).withTags(VALID_TAG_Y2).build();","lastModifiedDate":"2021-10-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        // whitespace only preamble","lastModifiedDate":"2017-12-23"},{"lineNumber":43,"author":{"gitId":"tsinyee"},"content":"        assertParseSuccess(parser, PREAMBLE_WHITESPACE + NAME_DESC_BOB + PHONE_DESC_BOB + AVAILABILITY_DESC_BOB","lastModifiedDate":"2021-10-21"},{"lineNumber":44,"author":{"gitId":"tsinyee"},"content":"                        + TAG_DESC_Y2, new AddMemberCommand(expectedPerson));","lastModifiedDate":"2021-10-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        // multiple names - last name accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":47,"author":{"gitId":"tsinyee"},"content":"        assertParseSuccess(parser, NAME_DESC_AMY + NAME_DESC_BOB + PHONE_DESC_BOB + AVAILABILITY_DESC_BOB","lastModifiedDate":"2021-10-21"},{"lineNumber":48,"author":{"gitId":"tsinyee"},"content":"                        + TAG_DESC_Y2, new AddMemberCommand(expectedPerson));","lastModifiedDate":"2021-10-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        // multiple phones - last phone accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":51,"author":{"gitId":"tsinyee"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_AMY + PHONE_DESC_BOB + AVAILABILITY_DESC_BOB","lastModifiedDate":"2021-10-21"},{"lineNumber":52,"author":{"gitId":"tsinyee"},"content":"                + TAG_DESC_Y2, new AddMemberCommand(expectedPerson));","lastModifiedDate":"2021-10-21"},{"lineNumber":53,"author":{"gitId":"tsinyee"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":54,"author":{"gitId":"tsinyee"},"content":"        // multiple tags - all accepted","lastModifiedDate":"2021-10-21"},{"lineNumber":55,"author":{"gitId":"tsinyee"},"content":"        Person expectedPersonMultipleTags \u003d new PersonBuilder(BOB).withTags(VALID_TAG_EXCO, VALID_TAG_Y2)","lastModifiedDate":"2021-10-21"},{"lineNumber":56,"author":{"gitId":"tsinyee"},"content":"                .build();","lastModifiedDate":"2021-10-21"},{"lineNumber":57,"author":{"gitId":"tsinyee"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_BOB + AVAILABILITY_DESC_BOB + TAG_DESC_EXCO + TAG_DESC_Y2,","lastModifiedDate":"2021-10-21"},{"lineNumber":58,"author":{"gitId":"tsinyee"},"content":"                new AddMemberCommand(expectedPersonMultipleTags));","lastModifiedDate":"2021-10-21"},{"lineNumber":59,"author":{"gitId":"tsinyee"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":60,"author":{"gitId":"tsinyee"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":61,"author":{"gitId":"tsinyee"},"content":"    @Test","lastModifiedDate":"2021-10-21"},{"lineNumber":62,"author":{"gitId":"tsinyee"},"content":"    public void parse_optionalTagMissing_success() {","lastModifiedDate":"2021-10-21"},{"lineNumber":63,"author":{"gitId":"tsinyee"},"content":"        // zero tags","lastModifiedDate":"2021-10-21"},{"lineNumber":64,"author":{"gitId":"tsinyee"},"content":"        Person expectedPerson \u003d new PersonBuilder(AMY).withTags().build();","lastModifiedDate":"2021-10-21"},{"lineNumber":65,"author":{"gitId":"tsinyee"},"content":"        assertParseSuccess(parser, NAME_DESC_AMY + PHONE_DESC_AMY + AVAILABILITY_DESC_AMY,","lastModifiedDate":"2021-10-21"},{"lineNumber":66,"author":{"gitId":"tsinyee"},"content":"                new AddMemberCommand(expectedPerson));","lastModifiedDate":"2021-10-21"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public void parse_compulsoryFieldMissing_failure() {","lastModifiedDate":"2017-06-15"},{"lineNumber":71,"author":{"gitId":"tsinyee"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddMemberCommand.MESSAGE_USAGE);","lastModifiedDate":"2021-10-05"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        // missing name prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":74,"author":{"gitId":"tsinyee"},"content":"        assertParseFailure(parser, VALID_NAME_BOB + PHONE_DESC_BOB, expectedMessage);","lastModifiedDate":"2021-10-21"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        // missing phone prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":77,"author":{"gitId":"tsinyee"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + VALID_PHONE_BOB, expectedMessage);","lastModifiedDate":"2021-10-21"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2017-06-15"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        // invalid name","lastModifiedDate":"2017-06-15"},{"lineNumber":83,"author":{"gitId":"tsinyee"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + PHONE_DESC_BOB + AVAILABILITY_DESC_BOB + TAG_DESC_EXCO","lastModifiedDate":"2021-10-21"},{"lineNumber":84,"author":{"gitId":"tsinyee"},"content":"                + TAG_DESC_Y2, Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-21"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":86,"author":{"gitId":"tsinyee"},"content":"        // invalid phone","lastModifiedDate":"2021-10-10"},{"lineNumber":87,"author":{"gitId":"tsinyee"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + INVALID_PHONE_DESC + AVAILABILITY_DESC_BOB + TAG_DESC_EXCO","lastModifiedDate":"2021-10-21"},{"lineNumber":88,"author":{"gitId":"tsinyee"},"content":"                + TAG_DESC_Y2, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-21"},{"lineNumber":89,"author":{"gitId":"tsinyee"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":90,"author":{"gitId":"tsinyee"},"content":"        // invalid tag","lastModifiedDate":"2021-10-21"},{"lineNumber":91,"author":{"gitId":"tsinyee"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + INVALID_TAG_DESC + VALID_TAG_Y2,","lastModifiedDate":"2021-10-21"},{"lineNumber":92,"author":{"gitId":"tsinyee"},"content":"                Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-21"},{"lineNumber":93,"author":{"gitId":"tsinyee"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":94,"author":{"gitId":"tsinyee"},"content":"        // two invalid values, only first invalid value reported","lastModifiedDate":"2021-10-21"},{"lineNumber":95,"author":{"gitId":"tsinyee"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + PHONE_DESC_BOB + INVALID_TAG_DESC,","lastModifiedDate":"2021-10-21"},{"lineNumber":96,"author":{"gitId":"tsinyee"},"content":"                Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-21"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":98,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-15"}],"authorContributionMap":{"Shruthi0310":2,"-":38,"tsinyee":58}},{"path":"src/test/java/seedu/address/logic/parser/AddressBookParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-06-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2017-05-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":8,"author":{"gitId":"YoYoCiti"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST;","lastModifiedDate":"2021-10-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":12,"author":{"gitId":"tsinyee"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2021-10-28"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2017-06-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":17,"author":{"gitId":"YoYoCiti"},"content":"import seedu.address.logic.commands.AddAliasCommand;","lastModifiedDate":"2021-10-17"},{"lineNumber":18,"author":{"gitId":"Shruthi0310"},"content":"import seedu.address.logic.commands.AddFacilityCommand;","lastModifiedDate":"2021-10-05"},{"lineNumber":19,"author":{"gitId":"tsinyee"},"content":"import seedu.address.logic.commands.AddMemberCommand;","lastModifiedDate":"2021-10-07"},{"lineNumber":20,"author":{"gitId":"Shruthi0310"},"content":"import seedu.address.logic.commands.ClearAttendanceCommand;","lastModifiedDate":"2021-10-21"},{"lineNumber":21,"author":{"gitId":"tsinyee"},"content":"import seedu.address.logic.commands.ClearFacilitiesCommand;","lastModifiedDate":"2021-10-07"},{"lineNumber":22,"author":{"gitId":"felix-ong"},"content":"import seedu.address.logic.commands.ClearMembersCommand;","lastModifiedDate":"2021-09-30"},{"lineNumber":23,"author":{"gitId":"YoYoCiti"},"content":"import seedu.address.logic.commands.DeleteAliasCommand;","lastModifiedDate":"2021-10-17"},{"lineNumber":24,"author":{"gitId":"YoYoCiti"},"content":"import seedu.address.logic.commands.DeleteFacilityCommand;","lastModifiedDate":"2021-10-11"},{"lineNumber":25,"author":{"gitId":"tsinyee"},"content":"import seedu.address.logic.commands.DeleteMemberCommand;","lastModifiedDate":"2021-10-11"},{"lineNumber":26,"author":{"gitId":"YoYoCiti"},"content":"import seedu.address.logic.commands.EditFacilityCommand;","lastModifiedDate":"2021-10-12"},{"lineNumber":27,"author":{"gitId":"tsinyee"},"content":"import seedu.address.logic.commands.EditMemberCommand;","lastModifiedDate":"2021-10-10"},{"lineNumber":28,"author":{"gitId":"tsinyee"},"content":"import seedu.address.logic.commands.EditMemberCommand.EditPersonDescriptor;","lastModifiedDate":"2021-10-10"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ExitCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":30,"author":{"gitId":"Moley456"},"content":"import seedu.address.logic.commands.ExportCommand;","lastModifiedDate":"2021-10-27"},{"lineNumber":31,"author":{"gitId":"tsinyee"},"content":"import seedu.address.logic.commands.FindFacilityCommand;","lastModifiedDate":"2021-10-07"},{"lineNumber":32,"author":{"gitId":"felix-ong"},"content":"import seedu.address.logic.commands.FindMemberCommand;","lastModifiedDate":"2021-09-30"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.HelpCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":34,"author":{"gitId":"Moley456"},"content":"import seedu.address.logic.commands.ImportCommand;","lastModifiedDate":"2021-10-23"},{"lineNumber":35,"author":{"gitId":"tsinyee"},"content":"import seedu.address.logic.commands.ListFacilityCommand;","lastModifiedDate":"2021-10-07"},{"lineNumber":36,"author":{"gitId":"tsinyee"},"content":"import seedu.address.logic.commands.ListMemberCommand;","lastModifiedDate":"2021-10-07"},{"lineNumber":37,"author":{"gitId":"YoYoCiti"},"content":"import seedu.address.logic.commands.ShowAliasesCommand;","lastModifiedDate":"2021-10-17"},{"lineNumber":38,"author":{"gitId":"tsinyee"},"content":"import seedu.address.logic.commands.SortMemberCommand;","lastModifiedDate":"2021-10-23"},{"lineNumber":39,"author":{"gitId":"Shruthi0310"},"content":"import seedu.address.logic.commands.SplitCommand;","lastModifiedDate":"2021-10-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-05-24"},{"lineNumber":41,"author":{"gitId":"YoYoCiti"},"content":"import seedu.address.model.alias.Alias;","lastModifiedDate":"2021-10-18"},{"lineNumber":42,"author":{"gitId":"YoYoCiti"},"content":"import seedu.address.model.alias.AliasMap;","lastModifiedDate":"2021-10-18"},{"lineNumber":43,"author":{"gitId":"YoYoCiti"},"content":"import seedu.address.model.alias.CommandWord;","lastModifiedDate":"2021-10-18"},{"lineNumber":44,"author":{"gitId":"YoYoCiti"},"content":"import seedu.address.model.alias.Shortcut;","lastModifiedDate":"2021-10-18"},{"lineNumber":45,"author":{"gitId":"Shruthi0310"},"content":"import seedu.address.model.facility.Facility;","lastModifiedDate":"2021-10-06"},{"lineNumber":46,"author":{"gitId":"YoYoCiti"},"content":"import seedu.address.model.facility.LocationContainsKeywordsPredicate;","lastModifiedDate":"2021-10-06"},{"lineNumber":47,"author":{"gitId":"tsinyee"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2021-10-28"},{"lineNumber":48,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":49,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"tsinyee"},"content":"import seedu.address.model.person.PersonMatchesKeywordsPredicate;","lastModifiedDate":"2021-10-28"},{"lineNumber":51,"author":{"gitId":"YoYoCiti"},"content":"import seedu.address.testutil.EditFacilityDescriptorBuilder;","lastModifiedDate":"2021-10-12"},{"lineNumber":52,"author":{"gitId":"tsinyee"},"content":"import seedu.address.testutil.EditMemberDescriptorBuilder;","lastModifiedDate":"2021-10-10"},{"lineNumber":53,"author":{"gitId":"Shruthi0310"},"content":"import seedu.address.testutil.FacilityBuilder;","lastModifiedDate":"2021-10-12"},{"lineNumber":54,"author":{"gitId":"YoYoCiti"},"content":"import seedu.address.testutil.FacilityUtil;","lastModifiedDate":"2021-10-12"},{"lineNumber":55,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-06-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonUtil;","lastModifiedDate":"2017-06-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"public class AddressBookParserTest {","lastModifiedDate":"2017-07-07"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    private final AddressBookParser parser \u003d new AddressBookParser();","lastModifiedDate":"2017-07-07"},{"lineNumber":61,"author":{"gitId":"YoYoCiti"},"content":"    private final AliasMap aliases \u003d new AliasMap();","lastModifiedDate":"2021-10-18"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":64,"author":{"gitId":"tsinyee"},"content":"    public void parseCommand_addMember() throws Exception {","lastModifiedDate":"2021-10-07"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2017-06-27"},{"lineNumber":66,"author":{"gitId":"YoYoCiti"},"content":"        AddMemberCommand command \u003d","lastModifiedDate":"2021-10-17"},{"lineNumber":67,"author":{"gitId":"YoYoCiti"},"content":"                (AddMemberCommand) parser.parseCommand(PersonUtil.getAddMemberCommand(person), aliases);","lastModifiedDate":"2021-10-17"},{"lineNumber":68,"author":{"gitId":"tsinyee"},"content":"        assertEquals(new AddMemberCommand(person), command);","lastModifiedDate":"2021-10-06"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":71,"author":{"gitId":"Shruthi0310"},"content":"    @Test","lastModifiedDate":"2021-10-05"},{"lineNumber":72,"author":{"gitId":"Shruthi0310"},"content":"    public void parseCommand_addFacility() throws ParseException {","lastModifiedDate":"2021-10-05"},{"lineNumber":73,"author":{"gitId":"Shruthi0310"},"content":"        Facility facility \u003d new FacilityBuilder()","lastModifiedDate":"2021-10-12"},{"lineNumber":74,"author":{"gitId":"Shruthi0310"},"content":"                .withFacilityName(\"Court 1\")","lastModifiedDate":"2021-10-12"},{"lineNumber":75,"author":{"gitId":"Shruthi0310"},"content":"                .withLocation(\"University Sports Hall\")","lastModifiedDate":"2021-10-12"},{"lineNumber":76,"author":{"gitId":"Shruthi0310"},"content":"                .withCapacity(\"5\")","lastModifiedDate":"2021-10-12"},{"lineNumber":77,"author":{"gitId":"Shruthi0310"},"content":"                .withTime(\"1130\").build();","lastModifiedDate":"2021-10-12"},{"lineNumber":78,"author":{"gitId":"Shruthi0310"},"content":"        AddFacilityCommand command \u003d (AddFacilityCommand) parser.parseCommand(\"addf \"","lastModifiedDate":"2021-10-05"},{"lineNumber":79,"author":{"gitId":"YoYoCiti"},"content":"                + \"n/Court 1 l/University Sports Hall t/1130 c/5\", aliases);","lastModifiedDate":"2021-10-17"},{"lineNumber":80,"author":{"gitId":"Shruthi0310"},"content":"        assertEquals(new AddFacilityCommand(facility), command);","lastModifiedDate":"2021-10-05"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public void parseCommand_clear() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":85,"author":{"gitId":"YoYoCiti"},"content":"        assertTrue(parser.parseCommand(ClearMembersCommand.COMMAND_WORD, aliases) instanceof ClearMembersCommand);","lastModifiedDate":"2021-10-17"},{"lineNumber":86,"author":{"gitId":"YoYoCiti"},"content":"        assertTrue(parser.parseCommand(ClearMembersCommand.COMMAND_WORD + \" 3\", aliases)","lastModifiedDate":"2021-10-17"},{"lineNumber":87,"author":{"gitId":"YoYoCiti"},"content":"                instanceof ClearMembersCommand);","lastModifiedDate":"2021-10-17"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":90,"author":{"gitId":"Shruthi0310"},"content":"    @Test","lastModifiedDate":"2021-10-21"},{"lineNumber":91,"author":{"gitId":"Shruthi0310"},"content":"    public void parseCommand_cleara() throws ParseException {","lastModifiedDate":"2021-10-21"},{"lineNumber":92,"author":{"gitId":"Shruthi0310"},"content":"        assertTrue(parser.parseCommand(ClearAttendanceCommand.COMMAND_WORD, aliases) instanceof ClearAttendanceCommand);","lastModifiedDate":"2021-10-23"},{"lineNumber":93,"author":{"gitId":"Shruthi0310"},"content":"        assertTrue(parser.parseCommand(ClearAttendanceCommand.COMMAND_WORD","lastModifiedDate":"2021-10-21"},{"lineNumber":94,"author":{"gitId":"Shruthi0310"},"content":"                + \" 1\", aliases) instanceof ClearAttendanceCommand);","lastModifiedDate":"2021-10-23"},{"lineNumber":95,"author":{"gitId":"Shruthi0310"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":96,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":97,"author":{"gitId":"YoYoCiti"},"content":"    @Test","lastModifiedDate":"2021-10-04"},{"lineNumber":98,"author":{"gitId":"YoYoCiti"},"content":"    public void parseCommand_clearf() throws Exception {","lastModifiedDate":"2021-10-04"},{"lineNumber":99,"author":{"gitId":"YoYoCiti"},"content":"        assertTrue(parser.parseCommand(ClearFacilitiesCommand.COMMAND_WORD, aliases) instanceof ClearFacilitiesCommand);","lastModifiedDate":"2021-10-17"},{"lineNumber":100,"author":{"gitId":"YoYoCiti"},"content":"        assertTrue(parser.parseCommand(ClearFacilitiesCommand.COMMAND_WORD + \" 3\", aliases)","lastModifiedDate":"2021-10-17"},{"lineNumber":101,"author":{"gitId":"YoYoCiti"},"content":"                instanceof ClearFacilitiesCommand);","lastModifiedDate":"2021-10-04"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-04"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    public void parseCommand_delete() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":106,"author":{"gitId":"tsinyee"},"content":"        DeleteMemberCommand command \u003d (DeleteMemberCommand) parser.parseCommand(","lastModifiedDate":"2021-10-11"},{"lineNumber":107,"author":{"gitId":"YoYoCiti"},"content":"                DeleteMemberCommand.COMMAND_WORD + \" \" + INDEX_FIRST.getOneBased(), aliases);","lastModifiedDate":"2021-10-17"},{"lineNumber":108,"author":{"gitId":"tsinyee"},"content":"        assertEquals(new DeleteMemberCommand(INDEX_FIRST), command);","lastModifiedDate":"2021-10-11"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":111,"author":{"gitId":"YoYoCiti"},"content":"    @Test","lastModifiedDate":"2021-10-11"},{"lineNumber":112,"author":{"gitId":"YoYoCiti"},"content":"    public void parseCommand_deletef() throws Exception {","lastModifiedDate":"2021-10-11"},{"lineNumber":113,"author":{"gitId":"YoYoCiti"},"content":"        DeleteFacilityCommand command \u003d (DeleteFacilityCommand) parser.parseCommand(","lastModifiedDate":"2021-10-11"},{"lineNumber":114,"author":{"gitId":"YoYoCiti"},"content":"                DeleteFacilityCommand.COMMAND_WORD + \" \" + INDEX_FIRST.getOneBased(), aliases);","lastModifiedDate":"2021-10-17"},{"lineNumber":115,"author":{"gitId":"YoYoCiti"},"content":"        assertEquals(new DeleteFacilityCommand(INDEX_FIRST), command);","lastModifiedDate":"2021-10-11"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    public void parseCommand_edit() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2017-06-27"},{"lineNumber":121,"author":{"gitId":"tsinyee"},"content":"        EditPersonDescriptor descriptor \u003d new EditMemberDescriptorBuilder(person).build();","lastModifiedDate":"2021-10-10"},{"lineNumber":122,"author":{"gitId":"tsinyee"},"content":"        EditMemberCommand command \u003d (EditMemberCommand) parser.parseCommand(EditMemberCommand.COMMAND_WORD + \" \"","lastModifiedDate":"2021-10-10"},{"lineNumber":123,"author":{"gitId":"YoYoCiti"},"content":"                + INDEX_FIRST.getOneBased() + \" \" + PersonUtil.getEditPersonDescriptorDetails(descriptor), aliases);","lastModifiedDate":"2021-10-17"},{"lineNumber":124,"author":{"gitId":"YoYoCiti"},"content":"        assertEquals(new EditMemberCommand(INDEX_FIRST, descriptor), command);","lastModifiedDate":"2021-10-11"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":127,"author":{"gitId":"YoYoCiti"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":128,"author":{"gitId":"YoYoCiti"},"content":"    public void parseCommand_editf() throws Exception {","lastModifiedDate":"2021-10-12"},{"lineNumber":129,"author":{"gitId":"YoYoCiti"},"content":"        Facility facility \u003d new FacilityBuilder().build();","lastModifiedDate":"2021-10-12"},{"lineNumber":130,"author":{"gitId":"YoYoCiti"},"content":"        EditFacilityCommand.EditFacilityDescriptor descriptor \u003d new EditFacilityDescriptorBuilder(facility).build();","lastModifiedDate":"2021-10-12"},{"lineNumber":131,"author":{"gitId":"YoYoCiti"},"content":"        EditFacilityCommand command \u003d (EditFacilityCommand) parser.parseCommand(","lastModifiedDate":"2021-10-12"},{"lineNumber":132,"author":{"gitId":"YoYoCiti"},"content":"                EditFacilityCommand.COMMAND_WORD + \" \" + INDEX_FIRST.getOneBased() + \" \"","lastModifiedDate":"2021-10-12"},{"lineNumber":133,"author":{"gitId":"YoYoCiti"},"content":"                        + FacilityUtil.getEditFacilityDescriptorDetails(descriptor), aliases);","lastModifiedDate":"2021-10-17"},{"lineNumber":134,"author":{"gitId":"YoYoCiti"},"content":"        assertEquals(new EditFacilityCommand(INDEX_FIRST, descriptor), command);","lastModifiedDate":"2021-10-12"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    public void parseCommand_exit() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":139,"author":{"gitId":"YoYoCiti"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD, aliases) instanceof ExitCommand);","lastModifiedDate":"2021-10-17"},{"lineNumber":140,"author":{"gitId":"YoYoCiti"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD + \" 3\", aliases) instanceof ExitCommand);","lastModifiedDate":"2021-10-17"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    public void parseCommand_find() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":145,"author":{"gitId":"tsinyee"},"content":"        Name name \u003d new Name(\"baz\");","lastModifiedDate":"2021-10-28"},{"lineNumber":146,"author":{"gitId":"felix-ong"},"content":"        FindMemberCommand command \u003d (FindMemberCommand) parser.parseCommand(","lastModifiedDate":"2021-09-30"},{"lineNumber":147,"author":{"gitId":"tsinyee"},"content":"                FindMemberCommand.COMMAND_WORD + \" n/baz\", aliases);","lastModifiedDate":"2021-10-28"},{"lineNumber":148,"author":{"gitId":"tsinyee"},"content":"        Predicate\u003cPerson\u003e predicate \u003d x -\u003e true;","lastModifiedDate":"2021-10-28"},{"lineNumber":149,"author":{"gitId":"tsinyee"},"content":"        predicate \u003d predicate.and(new NameContainsKeywordsPredicate(Arrays.asList(\"baz\")));","lastModifiedDate":"2021-10-28"},{"lineNumber":150,"author":{"gitId":"tsinyee"},"content":"        PersonMatchesKeywordsPredicate testPredicate \u003d","lastModifiedDate":"2021-10-28"},{"lineNumber":151,"author":{"gitId":"tsinyee"},"content":"                new PersonMatchesKeywordsPredicate.Builder().setName(name).setPredicate(predicate).build();","lastModifiedDate":"2021-10-28"},{"lineNumber":152,"author":{"gitId":"tsinyee"},"content":"        assertEquals(new FindMemberCommand(testPredicate), command);","lastModifiedDate":"2021-10-28"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":155,"author":{"gitId":"YoYoCiti"},"content":"    @Test","lastModifiedDate":"2021-10-04"},{"lineNumber":156,"author":{"gitId":"YoYoCiti"},"content":"    public void parseCommand_findFacility() throws Exception {","lastModifiedDate":"2021-10-04"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        List\u003cString\u003e keywords \u003d Arrays.asList(\"foo\", \"bar\", \"baz\");","lastModifiedDate":"2021-10-04"},{"lineNumber":158,"author":{"gitId":"YoYoCiti"},"content":"        FindFacilityCommand command \u003d (FindFacilityCommand) parser.parseCommand(","lastModifiedDate":"2021-10-04"},{"lineNumber":159,"author":{"gitId":"YoYoCiti"},"content":"                FindFacilityCommand.COMMAND_WORD","lastModifiedDate":"2021-10-04"},{"lineNumber":160,"author":{"gitId":"YoYoCiti"},"content":"                        + \" \" + keywords.stream().collect(Collectors.joining(\" \")), aliases);","lastModifiedDate":"2021-10-17"},{"lineNumber":161,"author":{"gitId":"YoYoCiti"},"content":"        assertEquals(new FindFacilityCommand(new LocationContainsKeywordsPredicate(keywords)), command);","lastModifiedDate":"2021-10-04"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    public void parseCommand_help() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":166,"author":{"gitId":"YoYoCiti"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD, aliases) instanceof HelpCommand);","lastModifiedDate":"2021-10-17"},{"lineNumber":167,"author":{"gitId":"YoYoCiti"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD + \" 3\", aliases) instanceof HelpCommand);","lastModifiedDate":"2021-10-17"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":171,"author":{"gitId":"tsinyee"},"content":"    public void parseCommand_listm() throws Exception {","lastModifiedDate":"2021-10-07"},{"lineNumber":172,"author":{"gitId":"YoYoCiti"},"content":"        assertTrue(parser.parseCommand(ListMemberCommand.COMMAND_WORD, aliases) instanceof ListMemberCommand);","lastModifiedDate":"2021-10-17"},{"lineNumber":173,"author":{"gitId":"YoYoCiti"},"content":"        assertTrue(parser.parseCommand(ListMemberCommand.COMMAND_WORD + \" 3\", aliases) instanceof ListMemberCommand);","lastModifiedDate":"2021-10-17"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":176,"author":{"gitId":"YoYoCiti"},"content":"    @Test","lastModifiedDate":"2021-10-06"},{"lineNumber":177,"author":{"gitId":"YoYoCiti"},"content":"    public void parseCommand_listf() throws Exception {","lastModifiedDate":"2021-10-06"},{"lineNumber":178,"author":{"gitId":"YoYoCiti"},"content":"        assertTrue(parser.parseCommand(ListFacilityCommand.COMMAND_WORD, aliases) instanceof ListFacilityCommand);","lastModifiedDate":"2021-10-17"},{"lineNumber":179,"author":{"gitId":"YoYoCiti"},"content":"        assertTrue(parser.parseCommand(","lastModifiedDate":"2021-10-06"},{"lineNumber":180,"author":{"gitId":"YoYoCiti"},"content":"                ListFacilityCommand.COMMAND_WORD + \" 3\", aliases) instanceof ListFacilityCommand);","lastModifiedDate":"2021-10-17"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":183,"author":{"gitId":"Shruthi0310"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":184,"author":{"gitId":"Shruthi0310"},"content":"    public void parseCommand_split() throws Exception {","lastModifiedDate":"2021-10-12"},{"lineNumber":185,"author":{"gitId":"YoYoCiti"},"content":"        assertEquals(new SplitCommand(1),","lastModifiedDate":"2021-10-19"},{"lineNumber":186,"author":{"gitId":"YoYoCiti"},"content":"                parser.parseCommand(SplitCommand.COMMAND_WORD + \" 1\", aliases));","lastModifiedDate":"2021-10-19"},{"lineNumber":187,"author":{"gitId":"YoYoCiti"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":188,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":189,"author":{"gitId":"YoYoCiti"},"content":"    @Test","lastModifiedDate":"2021-10-17"},{"lineNumber":190,"author":{"gitId":"YoYoCiti"},"content":"    public void parseCommand_addAlias() throws Exception {","lastModifiedDate":"2021-10-17"},{"lineNumber":191,"author":{"gitId":"YoYoCiti"},"content":"        AddAliasCommand command \u003d (AddAliasCommand) parser","lastModifiedDate":"2021-10-17"},{"lineNumber":192,"author":{"gitId":"YoYoCiti"},"content":"                .parseCommand(AddAliasCommand.COMMAND_WORD + \" s/lf cw/listf\", aliases);","lastModifiedDate":"2021-10-18"},{"lineNumber":193,"author":{"gitId":"YoYoCiti"},"content":"        assertEquals(new AddAliasCommand(new Alias(new Shortcut(\"lf\"), new CommandWord(\"listf\"))), command);","lastModifiedDate":"2021-10-18"},{"lineNumber":194,"author":{"gitId":"YoYoCiti"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":195,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":196,"author":{"gitId":"YoYoCiti"},"content":"    @Test","lastModifiedDate":"2021-10-17"},{"lineNumber":197,"author":{"gitId":"YoYoCiti"},"content":"    public void parseCommand_listfInputIsAnAlias_success() throws Exception {","lastModifiedDate":"2021-10-17"},{"lineNumber":198,"author":{"gitId":"YoYoCiti"},"content":"        String alias \u003d \"lf\";","lastModifiedDate":"2021-10-17"},{"lineNumber":199,"author":{"gitId":"YoYoCiti"},"content":"        AliasMap aliases \u003d new AliasMap();","lastModifiedDate":"2021-10-18"},{"lineNumber":200,"author":{"gitId":"YoYoCiti"},"content":"        aliases.add(new Alias(new Shortcut(alias), new CommandWord(\"listf\")));","lastModifiedDate":"2021-10-18"},{"lineNumber":201,"author":{"gitId":"YoYoCiti"},"content":"        ListFacilityCommand command \u003d (ListFacilityCommand) parser.parseCommand(alias, aliases);","lastModifiedDate":"2021-10-17"},{"lineNumber":202,"author":{"gitId":"YoYoCiti"},"content":"        assertTrue(command instanceof ListFacilityCommand);","lastModifiedDate":"2021-10-17"},{"lineNumber":203,"author":{"gitId":"YoYoCiti"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":204,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":205,"author":{"gitId":"YoYoCiti"},"content":"    @Test","lastModifiedDate":"2021-10-17"},{"lineNumber":206,"author":{"gitId":"YoYoCiti"},"content":"    public void parseCommand_addmInputIsAnAlias_success() throws Exception {","lastModifiedDate":"2021-10-17"},{"lineNumber":207,"author":{"gitId":"YoYoCiti"},"content":"        String alias \u003d \"af\";","lastModifiedDate":"2021-10-17"},{"lineNumber":208,"author":{"gitId":"YoYoCiti"},"content":"        AliasMap aliases \u003d new AliasMap();","lastModifiedDate":"2021-10-18"},{"lineNumber":209,"author":{"gitId":"YoYoCiti"},"content":"        aliases.add(new Alias(new Shortcut(alias), new CommandWord(\"addf\")));","lastModifiedDate":"2021-10-18"},{"lineNumber":210,"author":{"gitId":"YoYoCiti"},"content":"        Facility facility \u003d new FacilityBuilder()","lastModifiedDate":"2021-10-17"},{"lineNumber":211,"author":{"gitId":"YoYoCiti"},"content":"                .withFacilityName(\"Court 1\")","lastModifiedDate":"2021-10-17"},{"lineNumber":212,"author":{"gitId":"YoYoCiti"},"content":"                .withLocation(\"University Sports Hall\")","lastModifiedDate":"2021-10-17"},{"lineNumber":213,"author":{"gitId":"YoYoCiti"},"content":"                .withCapacity(\"5\")","lastModifiedDate":"2021-10-17"},{"lineNumber":214,"author":{"gitId":"YoYoCiti"},"content":"                .withTime(\"1130\").build();","lastModifiedDate":"2021-10-17"},{"lineNumber":215,"author":{"gitId":"YoYoCiti"},"content":"        AddFacilityCommand command \u003d (AddFacilityCommand) parser.parseCommand(\"af \"","lastModifiedDate":"2021-10-17"},{"lineNumber":216,"author":{"gitId":"YoYoCiti"},"content":"                + \"n/Court 1 l/University Sports Hall t/1130 c/5\", aliases);","lastModifiedDate":"2021-10-17"},{"lineNumber":217,"author":{"gitId":"YoYoCiti"},"content":"        assertEquals(new AddFacilityCommand(facility), command);","lastModifiedDate":"2021-10-17"},{"lineNumber":218,"author":{"gitId":"Shruthi0310"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":219,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":220,"author":{"gitId":"YoYoCiti"},"content":"    @Test","lastModifiedDate":"2021-10-17"},{"lineNumber":221,"author":{"gitId":"YoYoCiti"},"content":"    public void parseCommand_deleteAlias_success() throws Exception {","lastModifiedDate":"2021-10-17"},{"lineNumber":222,"author":{"gitId":"YoYoCiti"},"content":"        DeleteAliasCommand command \u003d (DeleteAliasCommand) parser","lastModifiedDate":"2021-10-17"},{"lineNumber":223,"author":{"gitId":"YoYoCiti"},"content":"                .parseCommand(DeleteAliasCommand.COMMAND_WORD + \" lf\", aliases);","lastModifiedDate":"2021-10-17"},{"lineNumber":224,"author":{"gitId":"YoYoCiti"},"content":"        assertEquals(new DeleteAliasCommand(new Shortcut(\"lf\")), command);","lastModifiedDate":"2021-10-18"},{"lineNumber":225,"author":{"gitId":"YoYoCiti"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":226,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":227,"author":{"gitId":"YoYoCiti"},"content":"    @Test","lastModifiedDate":"2021-10-17"},{"lineNumber":228,"author":{"gitId":"YoYoCiti"},"content":"    public void parseCommand_showAlias_success() throws Exception {","lastModifiedDate":"2021-10-17"},{"lineNumber":229,"author":{"gitId":"YoYoCiti"},"content":"        assertTrue(parser.parseCommand(ShowAliasesCommand.COMMAND_WORD, aliases) instanceof ShowAliasesCommand);","lastModifiedDate":"2021-10-17"},{"lineNumber":230,"author":{"gitId":"YoYoCiti"},"content":"        assertTrue(parser.parseCommand(","lastModifiedDate":"2021-10-17"},{"lineNumber":231,"author":{"gitId":"YoYoCiti"},"content":"                ShowAliasesCommand.COMMAND_WORD + \" 3\", aliases) instanceof ShowAliasesCommand);","lastModifiedDate":"2021-10-17"},{"lineNumber":232,"author":{"gitId":"Shruthi0310"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":233,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":234,"author":{"gitId":"Moley456"},"content":"    @Test","lastModifiedDate":"2021-10-23"},{"lineNumber":235,"author":{"gitId":"Moley456"},"content":"    public void parseCommand_importCommand() throws Exception {","lastModifiedDate":"2021-10-23"},{"lineNumber":236,"author":{"gitId":"Moley456"},"content":"        String filePath \u003d \" src/test/data/ImportCommandParserTest/typicalImportFile.csv\";","lastModifiedDate":"2021-10-23"},{"lineNumber":237,"author":{"gitId":"Moley456"},"content":"        assertTrue(parser","lastModifiedDate":"2021-10-23"},{"lineNumber":238,"author":{"gitId":"Moley456"},"content":"                .parseCommand(ImportCommand.COMMAND_WORD + filePath, aliases) instanceof ImportCommand);","lastModifiedDate":"2021-10-23"},{"lineNumber":239,"author":{"gitId":"Moley456"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":240,"author":{"gitId":"Moley456"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":241,"author":{"gitId":"Moley456"},"content":"    @Test","lastModifiedDate":"2021-10-27"},{"lineNumber":242,"author":{"gitId":"Moley456"},"content":"    public void parseCommand_exportCommand() throws Exception {","lastModifiedDate":"2021-10-27"},{"lineNumber":243,"author":{"gitId":"Moley456"},"content":"        assertTrue(parser.parseCommand(ExportCommand.COMMAND_WORD, aliases) instanceof ExportCommand);","lastModifiedDate":"2021-10-27"},{"lineNumber":244,"author":{"gitId":"Moley456"},"content":"        assertTrue(parser.parseCommand(","lastModifiedDate":"2021-10-27"},{"lineNumber":245,"author":{"gitId":"Moley456"},"content":"                ExportCommand.COMMAND_WORD + \" 3\", aliases) instanceof ExportCommand);","lastModifiedDate":"2021-10-27"},{"lineNumber":246,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":247,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":248,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-10-23"},{"lineNumber":249,"author":{"gitId":"tsinyee"},"content":"    public void parseCommand_sortm() throws Exception {","lastModifiedDate":"2021-10-23"},{"lineNumber":250,"author":{"gitId":"tsinyee"},"content":"        assertTrue(parser.parseCommand(SortMemberCommand.COMMAND_WORD + \" by/name\", aliases)","lastModifiedDate":"2021-10-25"},{"lineNumber":251,"author":{"gitId":"tsinyee"},"content":"                instanceof SortMemberCommand);","lastModifiedDate":"2021-10-25"},{"lineNumber":252,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":253,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":254,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":255,"author":{"gitId":"-"},"content":"    public void parseCommand_unrecognisedInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":256,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE), ()","lastModifiedDate":"2019-03-23"},{"lineNumber":257,"author":{"gitId":"YoYoCiti"},"content":"            -\u003e parser.parseCommand(\"\", aliases));","lastModifiedDate":"2021-10-17"},{"lineNumber":258,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":259,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":260,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":261,"author":{"gitId":"-"},"content":"    public void parseCommand_unknownCommand_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":262,"author":{"gitId":"YoYoCiti"},"content":"        assertThrows(ParseException.class,","lastModifiedDate":"2021-10-17"},{"lineNumber":263,"author":{"gitId":"YoYoCiti"},"content":"                MESSAGE_UNKNOWN_COMMAND, () -\u003e parser.parseCommand(\"unknownCommand\", aliases));","lastModifiedDate":"2021-10-17"},{"lineNumber":264,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":265,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24"}],"authorContributionMap":{"YoYoCiti":106,"Shruthi0310":27,"Moley456":14,"-":85,"tsinyee":30,"felix-ong":3}},{"path":"src/test/java/seedu/address/logic/parser/DeleteAliasCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"YoYoCiti"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-10-17"},{"lineNumber":2,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":3,"author":{"gitId":"YoYoCiti"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-19"},{"lineNumber":4,"author":{"gitId":"YoYoCiti"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2021-10-17"},{"lineNumber":5,"author":{"gitId":"YoYoCiti"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2021-10-17"},{"lineNumber":6,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":7,"author":{"gitId":"YoYoCiti"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-17"},{"lineNumber":8,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":9,"author":{"gitId":"YoYoCiti"},"content":"import seedu.address.logic.commands.DeleteAliasCommand;","lastModifiedDate":"2021-10-17"},{"lineNumber":10,"author":{"gitId":"YoYoCiti"},"content":"import seedu.address.model.alias.Shortcut;","lastModifiedDate":"2021-10-18"},{"lineNumber":11,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":12,"author":{"gitId":"YoYoCiti"},"content":"public class DeleteAliasCommandParserTest {","lastModifiedDate":"2021-10-17"},{"lineNumber":13,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":14,"author":{"gitId":"YoYoCiti"},"content":"    private DeleteAliasCommandParser parser \u003d new DeleteAliasCommandParser();","lastModifiedDate":"2021-10-17"},{"lineNumber":15,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":16,"author":{"gitId":"YoYoCiti"},"content":"    @Test","lastModifiedDate":"2021-10-17"},{"lineNumber":17,"author":{"gitId":"YoYoCiti"},"content":"    public void parse_validArgs_returnsDeleteAliasCommand() {","lastModifiedDate":"2021-10-17"},{"lineNumber":18,"author":{"gitId":"YoYoCiti"},"content":"        // No leading and trailing whitespaces","lastModifiedDate":"2021-10-17"},{"lineNumber":19,"author":{"gitId":"YoYoCiti"},"content":"        assertParseSuccess(parser, \"lf\", new DeleteAliasCommand(new Shortcut(\"lf\")));","lastModifiedDate":"2021-10-18"},{"lineNumber":20,"author":{"gitId":"YoYoCiti"},"content":"        // Multiple whitespaces","lastModifiedDate":"2021-10-17"},{"lineNumber":21,"author":{"gitId":"YoYoCiti"},"content":"        assertParseSuccess(parser, \"    \\n \\t  lf  \\t\", new DeleteAliasCommand(new Shortcut(\"lf\")));","lastModifiedDate":"2021-10-18"},{"lineNumber":22,"author":{"gitId":"YoYoCiti"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":23,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":24,"author":{"gitId":"YoYoCiti"},"content":"    @Test","lastModifiedDate":"2021-10-17"},{"lineNumber":25,"author":{"gitId":"YoYoCiti"},"content":"    public void parse_emptyArg_throwsParseException() {","lastModifiedDate":"2021-10-17"},{"lineNumber":26,"author":{"gitId":"YoYoCiti"},"content":"        assertParseFailure(parser, \"      \",","lastModifiedDate":"2021-10-17"},{"lineNumber":27,"author":{"gitId":"YoYoCiti"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteAliasCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-19"},{"lineNumber":28,"author":{"gitId":"YoYoCiti"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":29,"author":{"gitId":"YoYoCiti"},"content":"}","lastModifiedDate":"2021-10-17"}],"authorContributionMap":{"YoYoCiti":29}},{"path":"src/test/java/seedu/address/logic/parser/DeleteFacilityCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"YoYoCiti"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-10-08"},{"lineNumber":2,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":3,"author":{"gitId":"YoYoCiti"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-08"},{"lineNumber":4,"author":{"gitId":"YoYoCiti"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2021-10-08"},{"lineNumber":5,"author":{"gitId":"YoYoCiti"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2021-10-08"},{"lineNumber":6,"author":{"gitId":"YoYoCiti"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST;","lastModifiedDate":"2021-10-09"},{"lineNumber":7,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":8,"author":{"gitId":"YoYoCiti"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-08"},{"lineNumber":9,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":10,"author":{"gitId":"YoYoCiti"},"content":"import seedu.address.logic.commands.DeleteFacilityCommand;","lastModifiedDate":"2021-10-08"},{"lineNumber":11,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":12,"author":{"gitId":"YoYoCiti"},"content":"/**","lastModifiedDate":"2021-10-08"},{"lineNumber":13,"author":{"gitId":"YoYoCiti"},"content":" * Performs unit tests for {@code DeleteFacilityCommandParser}.","lastModifiedDate":"2021-10-08"},{"lineNumber":14,"author":{"gitId":"YoYoCiti"},"content":" */","lastModifiedDate":"2021-10-08"},{"lineNumber":15,"author":{"gitId":"YoYoCiti"},"content":"public class DeleteFacilityCommandParserTest {","lastModifiedDate":"2021-10-08"},{"lineNumber":16,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":17,"author":{"gitId":"YoYoCiti"},"content":"    private DeleteFacilityCommandParser parser \u003d new DeleteFacilityCommandParser();","lastModifiedDate":"2021-10-08"},{"lineNumber":18,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":19,"author":{"gitId":"YoYoCiti"},"content":"    @Test","lastModifiedDate":"2021-10-08"},{"lineNumber":20,"author":{"gitId":"YoYoCiti"},"content":"    public void parse_validArgs_returnsDeleteFacilityCommand() {","lastModifiedDate":"2021-10-08"},{"lineNumber":21,"author":{"gitId":"YoYoCiti"},"content":"        assertParseSuccess(parser, \"1\", new DeleteFacilityCommand(INDEX_FIRST));","lastModifiedDate":"2021-10-09"},{"lineNumber":22,"author":{"gitId":"YoYoCiti"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":23,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":24,"author":{"gitId":"YoYoCiti"},"content":"    @Test","lastModifiedDate":"2021-10-08"},{"lineNumber":25,"author":{"gitId":"YoYoCiti"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2021-10-08"},{"lineNumber":26,"author":{"gitId":"YoYoCiti"},"content":"        assertParseFailure(parser, \"a\", String.format(","lastModifiedDate":"2021-10-08"},{"lineNumber":27,"author":{"gitId":"YoYoCiti"},"content":"                MESSAGE_INVALID_COMMAND_FORMAT, DeleteFacilityCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-08"},{"lineNumber":28,"author":{"gitId":"YoYoCiti"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":29,"author":{"gitId":"YoYoCiti"},"content":"}","lastModifiedDate":"2021-10-08"}],"authorContributionMap":{"YoYoCiti":29}},{"path":"src/test/java/seedu/address/logic/parser/DeleteMemberCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-06-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-06-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":6,"author":{"gitId":"YoYoCiti"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST;","lastModifiedDate":"2021-10-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":10,"author":{"gitId":"tsinyee"},"content":"import seedu.address.logic.commands.DeleteMemberCommand;","lastModifiedDate":"2021-10-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * As we are only doing white-box testing, our test cases do not cover path variations","lastModifiedDate":"2017-06-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * outside of the DeleteCommand code. For example, inputs \"1\" and \"1 abc\" take the","lastModifiedDate":"2017-06-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * same path through the DeleteCommand, and therefore we test only one of them.","lastModifiedDate":"2017-06-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * The path variation for those two cases occur inside the ParserUtil, and","lastModifiedDate":"2017-06-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * therefore should be covered by the ParserUtilTest.","lastModifiedDate":"2017-06-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-09"},{"lineNumber":19,"author":{"gitId":"tsinyee"},"content":"public class DeleteMemberCommandParserTest {","lastModifiedDate":"2021-10-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":21,"author":{"gitId":"tsinyee"},"content":"    private DeleteMemberCommandParser parser \u003d new DeleteMemberCommandParser();","lastModifiedDate":"2021-10-11"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void parse_validArgs_returnsDeleteCommand() {","lastModifiedDate":"2017-08-15"},{"lineNumber":25,"author":{"gitId":"tsinyee"},"content":"        assertParseSuccess(parser, \"1\", new DeleteMemberCommand(INDEX_FIRST));","lastModifiedDate":"2021-10-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":30,"author":{"gitId":"tsinyee"},"content":"        assertParseFailure(parser, \"a\", String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2021-10-11"},{"lineNumber":31,"author":{"gitId":"tsinyee"},"content":"                DeleteMemberCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-11"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-09"}],"authorContributionMap":{"YoYoCiti":1,"-":26,"tsinyee":6}},{"path":"src/test/java/seedu/address/logic/parser/EditFacilityCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"YoYoCiti"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-10-12"},{"lineNumber":2,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":3,"author":{"gitId":"YoYoCiti"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-12"},{"lineNumber":4,"author":{"gitId":"YoYoCiti"},"content":"import static seedu.address.logic.commands.CommandTestUtil.CAPACITY_DESC_COURT;","lastModifiedDate":"2021-10-12"},{"lineNumber":5,"author":{"gitId":"YoYoCiti"},"content":"import static seedu.address.logic.commands.CommandTestUtil.CAPACITY_DESC_FIELD;","lastModifiedDate":"2021-10-12"},{"lineNumber":6,"author":{"gitId":"YoYoCiti"},"content":"import static seedu.address.logic.commands.CommandTestUtil.LOCATION_DESC_COURT;","lastModifiedDate":"2021-10-12"},{"lineNumber":7,"author":{"gitId":"YoYoCiti"},"content":"import static seedu.address.logic.commands.CommandTestUtil.LOCATION_DESC_FIELD;","lastModifiedDate":"2021-10-12"},{"lineNumber":8,"author":{"gitId":"YoYoCiti"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_COURT;","lastModifiedDate":"2021-10-12"},{"lineNumber":9,"author":{"gitId":"YoYoCiti"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_FIELD;","lastModifiedDate":"2021-10-12"},{"lineNumber":10,"author":{"gitId":"YoYoCiti"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TIME_DESC_COURT;","lastModifiedDate":"2021-10-12"},{"lineNumber":11,"author":{"gitId":"YoYoCiti"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TIME_DESC_FIELD;","lastModifiedDate":"2021-10-12"},{"lineNumber":12,"author":{"gitId":"YoYoCiti"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_CAPACITY_COURT;","lastModifiedDate":"2021-10-12"},{"lineNumber":13,"author":{"gitId":"YoYoCiti"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_CAPACITY_FIELD;","lastModifiedDate":"2021-10-12"},{"lineNumber":14,"author":{"gitId":"YoYoCiti"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_FACILITY_NAME_COURT;","lastModifiedDate":"2021-10-12"},{"lineNumber":15,"author":{"gitId":"YoYoCiti"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_FACILITY_NAME_FIELD;","lastModifiedDate":"2021-10-12"},{"lineNumber":16,"author":{"gitId":"YoYoCiti"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_LOCATION_COURT;","lastModifiedDate":"2021-10-12"},{"lineNumber":17,"author":{"gitId":"YoYoCiti"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_LOCATION_FIELD;","lastModifiedDate":"2021-10-12"},{"lineNumber":18,"author":{"gitId":"YoYoCiti"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TIME_COURT;","lastModifiedDate":"2021-10-12"},{"lineNumber":19,"author":{"gitId":"YoYoCiti"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TIME_FIELD;","lastModifiedDate":"2021-10-12"},{"lineNumber":20,"author":{"gitId":"YoYoCiti"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2021-10-12"},{"lineNumber":21,"author":{"gitId":"YoYoCiti"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2021-10-12"},{"lineNumber":22,"author":{"gitId":"YoYoCiti"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST;","lastModifiedDate":"2021-10-12"},{"lineNumber":23,"author":{"gitId":"YoYoCiti"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND;","lastModifiedDate":"2021-10-12"},{"lineNumber":24,"author":{"gitId":"YoYoCiti"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_THIRD;","lastModifiedDate":"2021-10-12"},{"lineNumber":25,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":26,"author":{"gitId":"YoYoCiti"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-12"},{"lineNumber":27,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":28,"author":{"gitId":"YoYoCiti"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-10-12"},{"lineNumber":29,"author":{"gitId":"YoYoCiti"},"content":"import seedu.address.logic.commands.EditFacilityCommand;","lastModifiedDate":"2021-10-12"},{"lineNumber":30,"author":{"gitId":"YoYoCiti"},"content":"import seedu.address.testutil.EditFacilityDescriptorBuilder;","lastModifiedDate":"2021-10-12"},{"lineNumber":31,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":32,"author":{"gitId":"YoYoCiti"},"content":"public class EditFacilityCommandParserTest {","lastModifiedDate":"2021-10-12"},{"lineNumber":33,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":34,"author":{"gitId":"YoYoCiti"},"content":"    private static final String MESSAGE_INVALID_FORMAT \u003d","lastModifiedDate":"2021-10-12"},{"lineNumber":35,"author":{"gitId":"YoYoCiti"},"content":"            String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditFacilityCommand.MESSAGE_USAGE);","lastModifiedDate":"2021-10-12"},{"lineNumber":36,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":37,"author":{"gitId":"YoYoCiti"},"content":"    private EditFacilityCommandParser parser \u003d new EditFacilityCommandParser();","lastModifiedDate":"2021-10-12"},{"lineNumber":38,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":39,"author":{"gitId":"YoYoCiti"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":40,"author":{"gitId":"YoYoCiti"},"content":"    public void parse_missingParts_failure() {","lastModifiedDate":"2021-10-12"},{"lineNumber":41,"author":{"gitId":"YoYoCiti"},"content":"        // no index specified","lastModifiedDate":"2021-10-12"},{"lineNumber":42,"author":{"gitId":"YoYoCiti"},"content":"        assertParseFailure(parser, VALID_FACILITY_NAME_COURT, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2021-10-12"},{"lineNumber":43,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":44,"author":{"gitId":"YoYoCiti"},"content":"        // no field specified","lastModifiedDate":"2021-10-12"},{"lineNumber":45,"author":{"gitId":"YoYoCiti"},"content":"        assertParseFailure(parser, \"1\", EditFacilityCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2021-11-01"},{"lineNumber":46,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":47,"author":{"gitId":"YoYoCiti"},"content":"        // no index and no field specified","lastModifiedDate":"2021-10-12"},{"lineNumber":48,"author":{"gitId":"YoYoCiti"},"content":"        assertParseFailure(parser, \"\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2021-10-12"},{"lineNumber":49,"author":{"gitId":"YoYoCiti"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":50,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":51,"author":{"gitId":"YoYoCiti"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":52,"author":{"gitId":"YoYoCiti"},"content":"    public void parse_invalidPreamble_failure() {","lastModifiedDate":"2021-10-12"},{"lineNumber":53,"author":{"gitId":"YoYoCiti"},"content":"        // negative index","lastModifiedDate":"2021-10-12"},{"lineNumber":54,"author":{"gitId":"YoYoCiti"},"content":"        assertParseFailure(parser, \"-5\" + NAME_DESC_COURT, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2021-10-12"},{"lineNumber":55,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":56,"author":{"gitId":"YoYoCiti"},"content":"        // zero index","lastModifiedDate":"2021-10-12"},{"lineNumber":57,"author":{"gitId":"YoYoCiti"},"content":"        assertParseFailure(parser, \"0\" + NAME_DESC_COURT, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2021-10-12"},{"lineNumber":58,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":59,"author":{"gitId":"YoYoCiti"},"content":"        // invalid arguments being parsed as preamble","lastModifiedDate":"2021-10-12"},{"lineNumber":60,"author":{"gitId":"YoYoCiti"},"content":"        assertParseFailure(parser, \"1 some random string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2021-10-12"},{"lineNumber":61,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":62,"author":{"gitId":"YoYoCiti"},"content":"        // invalid prefix being parsed as preamble","lastModifiedDate":"2021-10-12"},{"lineNumber":63,"author":{"gitId":"YoYoCiti"},"content":"        assertParseFailure(parser, \"1 i/ string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2021-10-12"},{"lineNumber":64,"author":{"gitId":"YoYoCiti"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":65,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":66,"author":{"gitId":"YoYoCiti"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":67,"author":{"gitId":"YoYoCiti"},"content":"    public void parse_allFieldsSpecified_success() {","lastModifiedDate":"2021-10-12"},{"lineNumber":68,"author":{"gitId":"YoYoCiti"},"content":"        Index targetIndex \u003d INDEX_SECOND;","lastModifiedDate":"2021-10-12"},{"lineNumber":69,"author":{"gitId":"YoYoCiti"},"content":"        String userInput \u003d targetIndex.getOneBased() + NAME_DESC_COURT + LOCATION_DESC_COURT","lastModifiedDate":"2021-10-12"},{"lineNumber":70,"author":{"gitId":"YoYoCiti"},"content":"                + CAPACITY_DESC_COURT + TIME_DESC_COURT;","lastModifiedDate":"2021-10-12"},{"lineNumber":71,"author":{"gitId":"YoYoCiti"},"content":"        EditFacilityCommand.EditFacilityDescriptor descriptor \u003d new EditFacilityDescriptorBuilder()","lastModifiedDate":"2021-10-12"},{"lineNumber":72,"author":{"gitId":"YoYoCiti"},"content":"                .withFacilityName(VALID_FACILITY_NAME_COURT).withLocation(VALID_LOCATION_COURT)","lastModifiedDate":"2021-10-12"},{"lineNumber":73,"author":{"gitId":"YoYoCiti"},"content":"                .withCapacity(VALID_CAPACITY_COURT).withTime(VALID_TIME_COURT).build();","lastModifiedDate":"2021-10-12"},{"lineNumber":74,"author":{"gitId":"YoYoCiti"},"content":"        EditFacilityCommand expectedCommand \u003d new EditFacilityCommand(targetIndex, descriptor);","lastModifiedDate":"2021-10-12"},{"lineNumber":75,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":76,"author":{"gitId":"YoYoCiti"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2021-10-12"},{"lineNumber":77,"author":{"gitId":"YoYoCiti"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":78,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":79,"author":{"gitId":"YoYoCiti"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":80,"author":{"gitId":"YoYoCiti"},"content":"    public void parse_someFieldsSpecified_success() {","lastModifiedDate":"2021-10-12"},{"lineNumber":81,"author":{"gitId":"YoYoCiti"},"content":"        Index targetIndex \u003d INDEX_FIRST;","lastModifiedDate":"2021-10-12"},{"lineNumber":82,"author":{"gitId":"YoYoCiti"},"content":"        String userInput \u003d targetIndex.getOneBased() + NAME_DESC_COURT + LOCATION_DESC_COURT;","lastModifiedDate":"2021-10-12"},{"lineNumber":83,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":84,"author":{"gitId":"YoYoCiti"},"content":"        EditFacilityCommand.EditFacilityDescriptor descriptor \u003d new EditFacilityDescriptorBuilder()","lastModifiedDate":"2021-10-12"},{"lineNumber":85,"author":{"gitId":"YoYoCiti"},"content":"                .withFacilityName(VALID_FACILITY_NAME_COURT).withLocation(VALID_LOCATION_COURT).build();","lastModifiedDate":"2021-10-12"},{"lineNumber":86,"author":{"gitId":"YoYoCiti"},"content":"        EditFacilityCommand expectedCommand \u003d new EditFacilityCommand(targetIndex, descriptor);","lastModifiedDate":"2021-10-12"},{"lineNumber":87,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":88,"author":{"gitId":"YoYoCiti"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2021-10-12"},{"lineNumber":89,"author":{"gitId":"YoYoCiti"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":90,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":91,"author":{"gitId":"YoYoCiti"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":92,"author":{"gitId":"YoYoCiti"},"content":"    public void parse_oneFieldSpecified_success() {","lastModifiedDate":"2021-10-12"},{"lineNumber":93,"author":{"gitId":"YoYoCiti"},"content":"        // name","lastModifiedDate":"2021-10-12"},{"lineNumber":94,"author":{"gitId":"YoYoCiti"},"content":"        Index targetIndex \u003d INDEX_THIRD;","lastModifiedDate":"2021-10-12"},{"lineNumber":95,"author":{"gitId":"YoYoCiti"},"content":"        String userInput \u003d targetIndex.getOneBased() + NAME_DESC_COURT;","lastModifiedDate":"2021-10-12"},{"lineNumber":96,"author":{"gitId":"YoYoCiti"},"content":"        EditFacilityCommand.EditFacilityDescriptor descriptor \u003d new EditFacilityDescriptorBuilder()","lastModifiedDate":"2021-10-12"},{"lineNumber":97,"author":{"gitId":"YoYoCiti"},"content":"                .withFacilityName(VALID_FACILITY_NAME_COURT).build();","lastModifiedDate":"2021-10-12"},{"lineNumber":98,"author":{"gitId":"YoYoCiti"},"content":"        EditFacilityCommand expectedCommand \u003d new EditFacilityCommand(targetIndex, descriptor);","lastModifiedDate":"2021-10-12"},{"lineNumber":99,"author":{"gitId":"YoYoCiti"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2021-10-12"},{"lineNumber":100,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":101,"author":{"gitId":"YoYoCiti"},"content":"        // location","lastModifiedDate":"2021-10-12"},{"lineNumber":102,"author":{"gitId":"YoYoCiti"},"content":"        userInput \u003d targetIndex.getOneBased() + LOCATION_DESC_COURT;","lastModifiedDate":"2021-10-12"},{"lineNumber":103,"author":{"gitId":"YoYoCiti"},"content":"        descriptor \u003d new EditFacilityDescriptorBuilder()","lastModifiedDate":"2021-10-12"},{"lineNumber":104,"author":{"gitId":"YoYoCiti"},"content":"                .withLocation(VALID_LOCATION_COURT).build();","lastModifiedDate":"2021-10-12"},{"lineNumber":105,"author":{"gitId":"YoYoCiti"},"content":"        expectedCommand \u003d new EditFacilityCommand(targetIndex, descriptor);","lastModifiedDate":"2021-10-12"},{"lineNumber":106,"author":{"gitId":"YoYoCiti"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2021-10-12"},{"lineNumber":107,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":108,"author":{"gitId":"YoYoCiti"},"content":"        // time","lastModifiedDate":"2021-10-12"},{"lineNumber":109,"author":{"gitId":"YoYoCiti"},"content":"        userInput \u003d targetIndex.getOneBased() + TIME_DESC_COURT;","lastModifiedDate":"2021-10-12"},{"lineNumber":110,"author":{"gitId":"YoYoCiti"},"content":"        descriptor \u003d new EditFacilityDescriptorBuilder()","lastModifiedDate":"2021-10-12"},{"lineNumber":111,"author":{"gitId":"YoYoCiti"},"content":"                .withTime(VALID_TIME_COURT).build();","lastModifiedDate":"2021-10-12"},{"lineNumber":112,"author":{"gitId":"YoYoCiti"},"content":"        expectedCommand \u003d new EditFacilityCommand(targetIndex, descriptor);","lastModifiedDate":"2021-10-12"},{"lineNumber":113,"author":{"gitId":"YoYoCiti"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2021-10-12"},{"lineNumber":114,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":115,"author":{"gitId":"YoYoCiti"},"content":"        // capacity","lastModifiedDate":"2021-10-12"},{"lineNumber":116,"author":{"gitId":"YoYoCiti"},"content":"        userInput \u003d targetIndex.getOneBased() + CAPACITY_DESC_COURT;","lastModifiedDate":"2021-10-12"},{"lineNumber":117,"author":{"gitId":"YoYoCiti"},"content":"        descriptor \u003d new EditFacilityDescriptorBuilder()","lastModifiedDate":"2021-10-12"},{"lineNumber":118,"author":{"gitId":"YoYoCiti"},"content":"                .withCapacity(VALID_CAPACITY_COURT).build();","lastModifiedDate":"2021-10-12"},{"lineNumber":119,"author":{"gitId":"YoYoCiti"},"content":"        expectedCommand \u003d new EditFacilityCommand(targetIndex, descriptor);","lastModifiedDate":"2021-10-12"},{"lineNumber":120,"author":{"gitId":"YoYoCiti"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2021-10-12"},{"lineNumber":121,"author":{"gitId":"YoYoCiti"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":122,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":123,"author":{"gitId":"YoYoCiti"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":124,"author":{"gitId":"YoYoCiti"},"content":"    public void parse_multipleRepeatedFields_acceptsLast() {","lastModifiedDate":"2021-10-12"},{"lineNumber":125,"author":{"gitId":"YoYoCiti"},"content":"        Index targetIndex \u003d INDEX_FIRST;","lastModifiedDate":"2021-10-12"},{"lineNumber":126,"author":{"gitId":"YoYoCiti"},"content":"        String userInput \u003d targetIndex.getOneBased()","lastModifiedDate":"2021-10-12"},{"lineNumber":127,"author":{"gitId":"YoYoCiti"},"content":"                + NAME_DESC_COURT + LOCATION_DESC_COURT + CAPACITY_DESC_COURT + TIME_DESC_COURT","lastModifiedDate":"2021-10-12"},{"lineNumber":128,"author":{"gitId":"YoYoCiti"},"content":"                + NAME_DESC_COURT + LOCATION_DESC_COURT + CAPACITY_DESC_COURT + TIME_DESC_COURT","lastModifiedDate":"2021-10-12"},{"lineNumber":129,"author":{"gitId":"YoYoCiti"},"content":"                + NAME_DESC_FIELD + LOCATION_DESC_FIELD + CAPACITY_DESC_FIELD + TIME_DESC_FIELD;","lastModifiedDate":"2021-10-12"},{"lineNumber":130,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":131,"author":{"gitId":"YoYoCiti"},"content":"        EditFacilityCommand.EditFacilityDescriptor descriptor \u003d new EditFacilityDescriptorBuilder()","lastModifiedDate":"2021-10-12"},{"lineNumber":132,"author":{"gitId":"YoYoCiti"},"content":"                .withFacilityName(VALID_FACILITY_NAME_FIELD).withLocation(VALID_LOCATION_FIELD)","lastModifiedDate":"2021-10-12"},{"lineNumber":133,"author":{"gitId":"YoYoCiti"},"content":"                .withCapacity(VALID_CAPACITY_FIELD).withTime(VALID_TIME_FIELD).build();","lastModifiedDate":"2021-10-12"},{"lineNumber":134,"author":{"gitId":"YoYoCiti"},"content":"        EditFacilityCommand expectedCommand \u003d new EditFacilityCommand(targetIndex, descriptor);","lastModifiedDate":"2021-10-12"},{"lineNumber":135,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":136,"author":{"gitId":"YoYoCiti"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2021-10-12"},{"lineNumber":137,"author":{"gitId":"YoYoCiti"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":138,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":139,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":140,"author":{"gitId":"YoYoCiti"},"content":"}","lastModifiedDate":"2021-10-12"}],"authorContributionMap":{"YoYoCiti":140}},{"path":"src/test/java/seedu/address/logic/parser/EditMemberCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-05-04"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_PHONE_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"tsinyee"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_TAG_DESC;","lastModifiedDate":"2021-10-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"tsinyee"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_EXCO;","lastModifiedDate":"2021-10-21"},{"lineNumber":11,"author":{"gitId":"tsinyee"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_Y2;","lastModifiedDate":"2021-10-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":15,"author":{"gitId":"tsinyee"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_EXCO;","lastModifiedDate":"2021-10-21"},{"lineNumber":16,"author":{"gitId":"tsinyee"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_Y2;","lastModifiedDate":"2021-10-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-05-04"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":20,"author":{"gitId":"tsinyee"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST;","lastModifiedDate":"2021-10-21"},{"lineNumber":21,"author":{"gitId":"tsinyee"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND;","lastModifiedDate":"2021-10-21"},{"lineNumber":22,"author":{"gitId":"tsinyee"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_THIRD;","lastModifiedDate":"2021-10-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":27,"author":{"gitId":"tsinyee"},"content":"import seedu.address.logic.commands.EditMemberCommand;","lastModifiedDate":"2021-10-10"},{"lineNumber":28,"author":{"gitId":"tsinyee"},"content":"import seedu.address.logic.commands.EditMemberCommand.EditPersonDescriptor;","lastModifiedDate":"2021-10-10"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-05-04"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-05-04"},{"lineNumber":31,"author":{"gitId":"tsinyee"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2021-10-21"},{"lineNumber":32,"author":{"gitId":"tsinyee"},"content":"import seedu.address.testutil.EditMemberDescriptorBuilder;","lastModifiedDate":"2021-10-10"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":34,"author":{"gitId":"tsinyee"},"content":"public class EditMemberCommandParserTest {","lastModifiedDate":"2021-10-10"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private static final String TAG_EMPTY \u003d \" \" + PREFIX_TAG;","lastModifiedDate":"2017-05-04"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private static final String MESSAGE_INVALID_FORMAT \u003d","lastModifiedDate":"2017-05-04"},{"lineNumber":39,"author":{"gitId":"tsinyee"},"content":"            String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditMemberCommand.MESSAGE_USAGE);","lastModifiedDate":"2021-10-10"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":41,"author":{"gitId":"tsinyee"},"content":"    private EditMemberCommandParser parser \u003d new EditMemberCommandParser();","lastModifiedDate":"2021-10-10"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public void parse_missingParts_failure() {","lastModifiedDate":"2017-05-04"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        // no index specified","lastModifiedDate":"2017-05-04"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, VALID_NAME_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // no field specified","lastModifiedDate":"2017-05-04"},{"lineNumber":49,"author":{"gitId":"tsinyee"},"content":"        assertParseFailure(parser, \"1\", EditMemberCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2021-10-10"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // no index and no field specified","lastModifiedDate":"2017-05-04"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void parse_invalidPreamble_failure() {","lastModifiedDate":"2017-06-06"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        // negative index","lastModifiedDate":"2017-05-04"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"-5\" + NAME_DESC_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        // zero index","lastModifiedDate":"2017-06-06"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"0\" + NAME_DESC_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-06"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        // invalid arguments being parsed as preamble","lastModifiedDate":"2017-06-06"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1 some random string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-06"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        // invalid prefix being parsed as preamble","lastModifiedDate":"2017-06-06"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1 i/ string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2017-05-04"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_NAME_DESC, Name.MESSAGE_CONSTRAINTS); // invalid name","lastModifiedDate":"2018-09-22"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_PHONE_DESC, Phone.MESSAGE_CONSTRAINTS); // invalid phone","lastModifiedDate":"2018-09-22"},{"lineNumber":74,"author":{"gitId":"tsinyee"},"content":"        assertParseFailure(parser, \"1\" + INVALID_TAG_DESC, Tag.MESSAGE_CONSTRAINTS); // invalid tag","lastModifiedDate":"2021-10-21"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":76,"author":{"gitId":"tsinyee"},"content":"        // invalid phone followed by valid tag","lastModifiedDate":"2021-10-21"},{"lineNumber":77,"author":{"gitId":"tsinyee"},"content":"        assertParseFailure(parser, \"1\" + INVALID_PHONE_DESC + TAG_DESC_Y2, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-21"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        // valid phone followed by invalid phone. The test case for invalid phone followed by valid phone","lastModifiedDate":"2017-05-04"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        // is tested at {@code parse_invalidValueFollowedByValidValue_success()}","lastModifiedDate":"2017-05-04"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + PHONE_DESC_BOB + INVALID_PHONE_DESC, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":83,"author":{"gitId":"tsinyee"},"content":"        // while parsing {@code PREFIX_TAG} alone will reset the tags of the {@code Person} being edited,","lastModifiedDate":"2021-10-21"},{"lineNumber":84,"author":{"gitId":"tsinyee"},"content":"        // parsing it together with a valid tag results in error","lastModifiedDate":"2021-10-21"},{"lineNumber":85,"author":{"gitId":"tsinyee"},"content":"        assertParseFailure(parser, \"1\" + TAG_DESC_Y2 + TAG_DESC_EXCO + TAG_EMPTY, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-21"},{"lineNumber":86,"author":{"gitId":"tsinyee"},"content":"        assertParseFailure(parser, \"1\" + TAG_DESC_Y2 + TAG_EMPTY + TAG_DESC_EXCO, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-21"},{"lineNumber":87,"author":{"gitId":"tsinyee"},"content":"        assertParseFailure(parser, \"1\" + TAG_EMPTY + TAG_DESC_Y2 + TAG_DESC_EXCO, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-21"},{"lineNumber":88,"author":{"gitId":"tsinyee"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        // multiple invalid values, but only the first invalid value is captured","lastModifiedDate":"2017-05-04"},{"lineNumber":90,"author":{"gitId":"tsinyee"},"content":"        assertParseFailure(parser, \"1\" + INVALID_NAME_DESC + VALID_PHONE_AMY,","lastModifiedDate":"2021-10-10"},{"lineNumber":91,"author":{"gitId":"-"},"content":"                Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    public void parse_allFieldsSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":96,"author":{"gitId":"YoYoCiti"},"content":"        Index targetIndex \u003d INDEX_SECOND;","lastModifiedDate":"2021-10-11"},{"lineNumber":97,"author":{"gitId":"tsinyee"},"content":"        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_BOB + NAME_DESC_AMY;","lastModifiedDate":"2021-10-10"},{"lineNumber":98,"author":{"gitId":"tsinyee"},"content":"        EditPersonDescriptor descriptor \u003d new EditMemberDescriptorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2021-10-10"},{"lineNumber":99,"author":{"gitId":"tsinyee"},"content":"                .withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2021-10-10"},{"lineNumber":100,"author":{"gitId":"tsinyee"},"content":"        EditMemberCommand expectedCommand \u003d new EditMemberCommand(targetIndex, descriptor);","lastModifiedDate":"2021-10-10"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":106,"author":{"gitId":"tsinyee"},"content":"    public void parse_onlyPhoneSpecified_success() {","lastModifiedDate":"2021-10-10"},{"lineNumber":107,"author":{"gitId":"YoYoCiti"},"content":"        Index targetIndex \u003d INDEX_FIRST;","lastModifiedDate":"2021-10-11"},{"lineNumber":108,"author":{"gitId":"tsinyee"},"content":"        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_BOB;","lastModifiedDate":"2021-10-10"},{"lineNumber":109,"author":{"gitId":"tsinyee"},"content":"        EditPersonDescriptor descriptor \u003d new EditMemberDescriptorBuilder().withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2021-10-10"},{"lineNumber":110,"author":{"gitId":"tsinyee"},"content":"        EditMemberCommand expectedCommand \u003d new EditMemberCommand(targetIndex, descriptor);","lastModifiedDate":"2021-10-10"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":116,"author":{"gitId":"tsinyee"},"content":"    public void parse_onlyNameSpecified_success() {","lastModifiedDate":"2021-10-10"},{"lineNumber":117,"author":{"gitId":"YoYoCiti"},"content":"        Index targetIndex \u003d INDEX_THIRD;","lastModifiedDate":"2021-10-11"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + NAME_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":119,"author":{"gitId":"tsinyee"},"content":"        EditPersonDescriptor descriptor \u003d new EditMemberDescriptorBuilder().withName(VALID_NAME_AMY).build();","lastModifiedDate":"2021-10-10"},{"lineNumber":120,"author":{"gitId":"tsinyee"},"content":"        EditMemberCommand expectedCommand \u003d new EditMemberCommand(targetIndex, descriptor);","lastModifiedDate":"2021-10-10"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":124,"author":{"gitId":"tsinyee"},"content":"    @Test","lastModifiedDate":"2021-10-21"},{"lineNumber":125,"author":{"gitId":"tsinyee"},"content":"    public void parse_onlyTagsSpecified_success() {","lastModifiedDate":"2021-10-21"},{"lineNumber":126,"author":{"gitId":"tsinyee"},"content":"        Index targetIndex \u003d INDEX_THIRD;","lastModifiedDate":"2021-10-21"},{"lineNumber":127,"author":{"gitId":"tsinyee"},"content":"        String userInput \u003d targetIndex.getOneBased() + TAG_DESC_Y2;","lastModifiedDate":"2021-10-21"},{"lineNumber":128,"author":{"gitId":"tsinyee"},"content":"        EditPersonDescriptor descriptor \u003d new EditMemberDescriptorBuilder().withTags(VALID_TAG_Y2).build();","lastModifiedDate":"2021-10-21"},{"lineNumber":129,"author":{"gitId":"tsinyee"},"content":"        EditMemberCommand expectedCommand \u003d new EditMemberCommand(targetIndex, descriptor);","lastModifiedDate":"2021-10-21"},{"lineNumber":130,"author":{"gitId":"tsinyee"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2021-10-21"},{"lineNumber":131,"author":{"gitId":"tsinyee"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":132,"author":{"gitId":"tsinyee"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    public void parse_multipleRepeatedFields_acceptsLast() {","lastModifiedDate":"2017-08-15"},{"lineNumber":135,"author":{"gitId":"YoYoCiti"},"content":"        Index targetIndex \u003d INDEX_FIRST;","lastModifiedDate":"2021-10-11"},{"lineNumber":136,"author":{"gitId":"tsinyee"},"content":"        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_AMY + TAG_DESC_Y2 + PHONE_DESC_AMY","lastModifiedDate":"2021-10-21"},{"lineNumber":137,"author":{"gitId":"tsinyee"},"content":"                + TAG_DESC_Y2 + PHONE_DESC_BOB + TAG_DESC_EXCO;","lastModifiedDate":"2021-10-21"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":139,"author":{"gitId":"tsinyee"},"content":"        EditPersonDescriptor descriptor \u003d new EditMemberDescriptorBuilder().withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2021-10-21"},{"lineNumber":140,"author":{"gitId":"tsinyee"},"content":"                .withTags(VALID_TAG_Y2, VALID_TAG_EXCO).build();","lastModifiedDate":"2021-10-21"},{"lineNumber":141,"author":{"gitId":"tsinyee"},"content":"        EditMemberCommand expectedCommand \u003d new EditMemberCommand(targetIndex, descriptor);","lastModifiedDate":"2021-10-10"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    public void parse_invalidValueFollowedByValidValue_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        // no other valid values specified","lastModifiedDate":"2017-05-04"},{"lineNumber":149,"author":{"gitId":"YoYoCiti"},"content":"        Index targetIndex \u003d INDEX_FIRST;","lastModifiedDate":"2021-10-11"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + INVALID_PHONE_DESC + PHONE_DESC_BOB;","lastModifiedDate":"2017-05-25"},{"lineNumber":151,"author":{"gitId":"tsinyee"},"content":"        EditPersonDescriptor descriptor \u003d new EditMemberDescriptorBuilder().withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2021-10-10"},{"lineNumber":152,"author":{"gitId":"tsinyee"},"content":"        EditMemberCommand expectedCommand \u003d new EditMemberCommand(targetIndex, descriptor);","lastModifiedDate":"2021-10-10"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":154,"author":{"gitId":"tsinyee"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":155,"author":{"gitId":"tsinyee"},"content":"        // other valid values specified","lastModifiedDate":"2021-10-21"},{"lineNumber":156,"author":{"gitId":"tsinyee"},"content":"        userInput \u003d targetIndex.getOneBased() + INVALID_PHONE_DESC + PHONE_DESC_BOB + TAG_DESC_EXCO + TAG_DESC_Y2;","lastModifiedDate":"2021-10-21"},{"lineNumber":157,"author":{"gitId":"tsinyee"},"content":"        descriptor \u003d new EditMemberDescriptorBuilder().withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2021-10-21"},{"lineNumber":158,"author":{"gitId":"tsinyee"},"content":"                .withTags(VALID_TAG_EXCO, VALID_TAG_Y2).build();","lastModifiedDate":"2021-10-21"},{"lineNumber":159,"author":{"gitId":"tsinyee"},"content":"        expectedCommand \u003d new EditMemberCommand(targetIndex, descriptor);","lastModifiedDate":"2021-10-21"},{"lineNumber":160,"author":{"gitId":"tsinyee"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2021-10-21"},{"lineNumber":161,"author":{"gitId":"tsinyee"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":162,"author":{"gitId":"tsinyee"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":163,"author":{"gitId":"tsinyee"},"content":"    @Test","lastModifiedDate":"2021-10-21"},{"lineNumber":164,"author":{"gitId":"tsinyee"},"content":"    public void parse_resetTags_success() {","lastModifiedDate":"2021-10-21"},{"lineNumber":165,"author":{"gitId":"tsinyee"},"content":"        Index targetIndex \u003d INDEX_THIRD;","lastModifiedDate":"2021-10-21"},{"lineNumber":166,"author":{"gitId":"tsinyee"},"content":"        String userInput \u003d targetIndex.getOneBased() + TAG_EMPTY;","lastModifiedDate":"2021-10-21"},{"lineNumber":167,"author":{"gitId":"tsinyee"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":168,"author":{"gitId":"tsinyee"},"content":"        EditPersonDescriptor descriptor \u003d new EditMemberDescriptorBuilder().withTags().build();","lastModifiedDate":"2021-10-21"},{"lineNumber":169,"author":{"gitId":"tsinyee"},"content":"        EditMemberCommand expectedCommand \u003d new EditMemberCommand(targetIndex, descriptor);","lastModifiedDate":"2021-10-21"},{"lineNumber":170,"author":{"gitId":"tsinyee"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":171,"author":{"gitId":"tsinyee"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2021-10-21"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":173,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-04"}],"authorContributionMap":{"YoYoCiti":5,"-":97,"tsinyee":71}},{"path":"src/test/java/seedu/address/logic/parser/FindFacilityCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"YoYoCiti"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-09-29"},{"lineNumber":2,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":3,"author":{"gitId":"YoYoCiti"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-09-29"},{"lineNumber":4,"author":{"gitId":"YoYoCiti"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2021-09-29"},{"lineNumber":5,"author":{"gitId":"YoYoCiti"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2021-09-29"},{"lineNumber":6,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":7,"author":{"gitId":"YoYoCiti"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-09-29"},{"lineNumber":8,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":9,"author":{"gitId":"YoYoCiti"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-09-29"},{"lineNumber":10,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":11,"author":{"gitId":"YoYoCiti"},"content":"import seedu.address.logic.commands.FindFacilityCommand;","lastModifiedDate":"2021-09-29"},{"lineNumber":12,"author":{"gitId":"YoYoCiti"},"content":"import seedu.address.model.facility.LocationContainsKeywordsPredicate;","lastModifiedDate":"2021-09-29"},{"lineNumber":13,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":14,"author":{"gitId":"YoYoCiti"},"content":"public class FindFacilityCommandParserTest {","lastModifiedDate":"2021-09-29"},{"lineNumber":15,"author":{"gitId":"YoYoCiti"},"content":"    private FindFacilityCommandParser parser \u003d new FindFacilityCommandParser();","lastModifiedDate":"2021-09-29"},{"lineNumber":16,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":17,"author":{"gitId":"YoYoCiti"},"content":"    @Test","lastModifiedDate":"2021-09-29"},{"lineNumber":18,"author":{"gitId":"YoYoCiti"},"content":"    public void parse_emptyArg_throwsParseException() {","lastModifiedDate":"2021-09-29"},{"lineNumber":19,"author":{"gitId":"YoYoCiti"},"content":"        assertParseFailure(parser, \"     \",","lastModifiedDate":"2021-09-29"},{"lineNumber":20,"author":{"gitId":"YoYoCiti"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindFacilityCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-09-29"},{"lineNumber":21,"author":{"gitId":"YoYoCiti"},"content":"    }","lastModifiedDate":"2021-09-29"},{"lineNumber":22,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":23,"author":{"gitId":"YoYoCiti"},"content":"    @Test","lastModifiedDate":"2021-09-29"},{"lineNumber":24,"author":{"gitId":"YoYoCiti"},"content":"    public void parse_validArgs_returnsFindFacilityCommand() {","lastModifiedDate":"2021-09-29"},{"lineNumber":25,"author":{"gitId":"YoYoCiti"},"content":"        //No leading and trailing whitespaces","lastModifiedDate":"2021-09-29"},{"lineNumber":26,"author":{"gitId":"YoYoCiti"},"content":"        FindFacilityCommand expectedFindFacilityCommand \u003d","lastModifiedDate":"2021-09-29"},{"lineNumber":27,"author":{"gitId":"YoYoCiti"},"content":"                new FindFacilityCommand(new LocationContainsKeywordsPredicate(Arrays.asList(\"Utown\", \"Redhill\")));","lastModifiedDate":"2021-09-29"},{"lineNumber":28,"author":{"gitId":"YoYoCiti"},"content":"        assertParseSuccess(parser, \"Utown Redhill\", expectedFindFacilityCommand);","lastModifiedDate":"2021-09-29"},{"lineNumber":29,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":30,"author":{"gitId":"YoYoCiti"},"content":"        //Multiple whitespaces between keywords","lastModifiedDate":"2021-09-29"},{"lineNumber":31,"author":{"gitId":"YoYoCiti"},"content":"        assertParseSuccess(parser, \"  \\n Utown \\n \\t Redhill  \\t\", expectedFindFacilityCommand);","lastModifiedDate":"2021-09-29"},{"lineNumber":32,"author":{"gitId":"YoYoCiti"},"content":"    }","lastModifiedDate":"2021-09-29"},{"lineNumber":33,"author":{"gitId":"YoYoCiti"},"content":"}","lastModifiedDate":"2021-09-29"}],"authorContributionMap":{"YoYoCiti":33}},{"path":"src/test/java/seedu/address/logic/parser/FindMemberCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-06-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-06-27"},{"lineNumber":4,"author":{"gitId":"tsinyee"},"content":"import static seedu.address.logic.commands.CommandTestUtil.AVAILABILITY_DESC_AMY;","lastModifiedDate":"2021-10-28"},{"lineNumber":5,"author":{"gitId":"tsinyee"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_AVAILABILITY_DESC;","lastModifiedDate":"2021-10-28"},{"lineNumber":6,"author":{"gitId":"tsinyee"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2021-10-28"},{"lineNumber":7,"author":{"gitId":"tsinyee"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_PREAMBLE;","lastModifiedDate":"2021-10-28"},{"lineNumber":8,"author":{"gitId":"tsinyee"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_TAG_DESC;","lastModifiedDate":"2021-10-28"},{"lineNumber":9,"author":{"gitId":"tsinyee"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2021-10-28"},{"lineNumber":10,"author":{"gitId":"tsinyee"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_BOB;","lastModifiedDate":"2021-10-28"},{"lineNumber":11,"author":{"gitId":"tsinyee"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2021-10-28"},{"lineNumber":12,"author":{"gitId":"tsinyee"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_EXCO;","lastModifiedDate":"2021-10-28"},{"lineNumber":13,"author":{"gitId":"tsinyee"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2021-10-28"},{"lineNumber":14,"author":{"gitId":"tsinyee"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2021-10-28"},{"lineNumber":15,"author":{"gitId":"tsinyee"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2021-10-28"},{"lineNumber":16,"author":{"gitId":"tsinyee"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_EXCO;","lastModifiedDate":"2021-10-28"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":20,"author":{"gitId":"tsinyee"},"content":"import java.time.DayOfWeek;","lastModifiedDate":"2021-10-28"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-27"},{"lineNumber":22,"author":{"gitId":"tsinyee"},"content":"import java.util.Collections;","lastModifiedDate":"2021-10-28"},{"lineNumber":23,"author":{"gitId":"tsinyee"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2021-10-28"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":27,"author":{"gitId":"felix-ong"},"content":"import seedu.address.logic.commands.FindMemberCommand;","lastModifiedDate":"2021-09-30"},{"lineNumber":28,"author":{"gitId":"tsinyee"},"content":"import seedu.address.model.person.Availability;","lastModifiedDate":"2021-10-28"},{"lineNumber":29,"author":{"gitId":"tsinyee"},"content":"import seedu.address.model.person.AvailabilityContainsKeywordsPredicate;","lastModifiedDate":"2021-10-28"},{"lineNumber":30,"author":{"gitId":"tsinyee"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2021-10-28"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":32,"author":{"gitId":"tsinyee"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2021-10-28"},{"lineNumber":33,"author":{"gitId":"tsinyee"},"content":"import seedu.address.model.person.PersonMatchesKeywordsPredicate;","lastModifiedDate":"2021-10-28"},{"lineNumber":34,"author":{"gitId":"tsinyee"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2021-10-28"},{"lineNumber":35,"author":{"gitId":"tsinyee"},"content":"import seedu.address.model.person.PhoneContainsKeywordsPredicate;","lastModifiedDate":"2021-10-28"},{"lineNumber":36,"author":{"gitId":"tsinyee"},"content":"import seedu.address.model.person.TodayAttendance;","lastModifiedDate":"2021-10-28"},{"lineNumber":37,"author":{"gitId":"tsinyee"},"content":"import seedu.address.model.person.TodayAttendanceContainsKeywordsPredicate;","lastModifiedDate":"2021-10-28"},{"lineNumber":38,"author":{"gitId":"tsinyee"},"content":"import seedu.address.model.person.TotalAttendance;","lastModifiedDate":"2021-10-28"},{"lineNumber":39,"author":{"gitId":"tsinyee"},"content":"import seedu.address.model.person.TotalAttendanceContainsKeywordsPredicate;","lastModifiedDate":"2021-10-28"},{"lineNumber":40,"author":{"gitId":"tsinyee"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2021-10-28"},{"lineNumber":41,"author":{"gitId":"tsinyee"},"content":"import seedu.address.model.tag.TagsContainKeywordsPredicate;","lastModifiedDate":"2021-10-28"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":43,"author":{"gitId":"felix-ong"},"content":"public class FindMemberCommandParserTest {","lastModifiedDate":"2021-09-30"},{"lineNumber":44,"author":{"gitId":"tsinyee"},"content":"    private static final String MESSAGE_INVALID_FORMAT \u003d","lastModifiedDate":"2021-10-28"},{"lineNumber":45,"author":{"gitId":"tsinyee"},"content":"            String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindMemberCommand.MESSAGE_USAGE);","lastModifiedDate":"2021-10-28"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":47,"author":{"gitId":"felix-ong"},"content":"    private FindMemberCommandParser parser \u003d new FindMemberCommandParser();","lastModifiedDate":"2021-09-30"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":49,"author":{"gitId":"tsinyee"},"content":"    // valid name keywords","lastModifiedDate":"2021-10-28"},{"lineNumber":50,"author":{"gitId":"tsinyee"},"content":"    private final Name amyName \u003d new Name(VALID_NAME_AMY);","lastModifiedDate":"2021-10-28"},{"lineNumber":51,"author":{"gitId":"tsinyee"},"content":"    private final Name bobName \u003d new Name(VALID_NAME_BOB);","lastModifiedDate":"2021-10-28"},{"lineNumber":52,"author":{"gitId":"tsinyee"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":53,"author":{"gitId":"tsinyee"},"content":"    // valid phone","lastModifiedDate":"2021-10-28"},{"lineNumber":54,"author":{"gitId":"tsinyee"},"content":"    private final Phone phone \u003d new Phone(VALID_PHONE_AMY);","lastModifiedDate":"2021-10-28"},{"lineNumber":55,"author":{"gitId":"tsinyee"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":56,"author":{"gitId":"tsinyee"},"content":"    // valid tags","lastModifiedDate":"2021-10-28"},{"lineNumber":57,"author":{"gitId":"tsinyee"},"content":"    private final Tag excoTag \u003d new Tag(VALID_TAG_EXCO);","lastModifiedDate":"2021-10-28"},{"lineNumber":58,"author":{"gitId":"tsinyee"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":59,"author":{"gitId":"tsinyee"},"content":"    // valid availability","lastModifiedDate":"2021-10-28"},{"lineNumber":60,"author":{"gitId":"tsinyee"},"content":"    private final Availability availability \u003d","lastModifiedDate":"2021-10-28"},{"lineNumber":61,"author":{"gitId":"tsinyee"},"content":"            new Availability(Arrays.asList(DayOfWeek.MONDAY, DayOfWeek.TUESDAY, DayOfWeek.WEDNESDAY));","lastModifiedDate":"2021-10-28"},{"lineNumber":62,"author":{"gitId":"tsinyee"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":63,"author":{"gitId":"tsinyee"},"content":"    // valid today attendance","lastModifiedDate":"2021-10-28"},{"lineNumber":64,"author":{"gitId":"tsinyee"},"content":"    private final TodayAttendance todayAttendance \u003d new TodayAttendance(true);","lastModifiedDate":"2021-10-28"},{"lineNumber":65,"author":{"gitId":"tsinyee"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":66,"author":{"gitId":"tsinyee"},"content":"    // valid total attendance","lastModifiedDate":"2021-10-28"},{"lineNumber":67,"author":{"gitId":"tsinyee"},"content":"    private final TotalAttendance totalAttendance \u003d new TotalAttendance(3);","lastModifiedDate":"2021-10-28"},{"lineNumber":68,"author":{"gitId":"tsinyee"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":69,"author":{"gitId":"tsinyee"},"content":"    // predicates","lastModifiedDate":"2021-10-28"},{"lineNumber":70,"author":{"gitId":"tsinyee"},"content":"    private final Predicate\u003cPerson\u003e namePredicate \u003d","lastModifiedDate":"2021-10-28"},{"lineNumber":71,"author":{"gitId":"tsinyee"},"content":"            new NameContainsKeywordsPredicate(Collections.singletonList(VALID_NAME_AMY));","lastModifiedDate":"2021-10-28"},{"lineNumber":72,"author":{"gitId":"tsinyee"},"content":"    private final Predicate\u003cPerson\u003e phonePredicate \u003d","lastModifiedDate":"2021-10-28"},{"lineNumber":73,"author":{"gitId":"tsinyee"},"content":"            new PhoneContainsKeywordsPredicate(Collections.singletonList(phone));","lastModifiedDate":"2021-10-28"},{"lineNumber":74,"author":{"gitId":"tsinyee"},"content":"    private final Predicate\u003cPerson\u003e singleTagPredicate \u003d","lastModifiedDate":"2021-10-28"},{"lineNumber":75,"author":{"gitId":"tsinyee"},"content":"            new TagsContainKeywordsPredicate(Collections.singletonList(excoTag));","lastModifiedDate":"2021-10-28"},{"lineNumber":76,"author":{"gitId":"tsinyee"},"content":"    private final Predicate\u003cPerson\u003e availabilityPredicate \u003d","lastModifiedDate":"2021-10-28"},{"lineNumber":77,"author":{"gitId":"tsinyee"},"content":"            new AvailabilityContainsKeywordsPredicate(Collections.singletonList(availability));","lastModifiedDate":"2021-10-28"},{"lineNumber":78,"author":{"gitId":"tsinyee"},"content":"    private final Predicate\u003cPerson\u003e todayAttendancePredicate \u003d","lastModifiedDate":"2021-10-28"},{"lineNumber":79,"author":{"gitId":"tsinyee"},"content":"            new TodayAttendanceContainsKeywordsPredicate(Collections.singletonList(todayAttendance));","lastModifiedDate":"2021-10-28"},{"lineNumber":80,"author":{"gitId":"tsinyee"},"content":"    private final Predicate\u003cPerson\u003e totalAttendancePredicate \u003d","lastModifiedDate":"2021-10-28"},{"lineNumber":81,"author":{"gitId":"tsinyee"},"content":"            new TotalAttendanceContainsKeywordsPredicate(Collections.singletonList(totalAttendance));","lastModifiedDate":"2021-10-28"},{"lineNumber":82,"author":{"gitId":"tsinyee"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public void parse_emptyArg_throwsParseException() {","lastModifiedDate":"2017-06-27"},{"lineNumber":85,"author":{"gitId":"felix-ong"},"content":"        assertParseFailure(parser, \"     \",","lastModifiedDate":"2021-09-30"},{"lineNumber":86,"author":{"gitId":"felix-ong"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindMemberCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-09-30"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":90,"author":{"gitId":"tsinyee"},"content":"    public void parse_oneFieldSpecified_success() {","lastModifiedDate":"2021-10-28"},{"lineNumber":91,"author":{"gitId":"tsinyee"},"content":"        // valid name","lastModifiedDate":"2021-10-28"},{"lineNumber":92,"author":{"gitId":"tsinyee"},"content":"        Predicate\u003cPerson\u003e predicate \u003d x -\u003e true;","lastModifiedDate":"2021-10-28"},{"lineNumber":93,"author":{"gitId":"tsinyee"},"content":"        Predicate\u003cPerson\u003e personPredicate \u003d predicate.and(namePredicate);","lastModifiedDate":"2021-10-28"},{"lineNumber":94,"author":{"gitId":"tsinyee"},"content":"        PersonMatchesKeywordsPredicate testPredicate \u003d","lastModifiedDate":"2021-10-28"},{"lineNumber":95,"author":{"gitId":"tsinyee"},"content":"                new PersonMatchesKeywordsPredicate.Builder().setName(amyName).setPredicate(personPredicate).build();","lastModifiedDate":"2021-10-28"},{"lineNumber":96,"author":{"gitId":"tsinyee"},"content":"        FindMemberCommand expectedCommand \u003d new FindMemberCommand(testPredicate);","lastModifiedDate":"2021-10-28"},{"lineNumber":97,"author":{"gitId":"tsinyee"},"content":"        assertParseSuccess(parser, NAME_DESC_AMY, expectedCommand);","lastModifiedDate":"2021-10-28"},{"lineNumber":98,"author":{"gitId":"tsinyee"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":99,"author":{"gitId":"tsinyee"},"content":"        // valid phone","lastModifiedDate":"2021-10-28"},{"lineNumber":100,"author":{"gitId":"tsinyee"},"content":"        personPredicate \u003d predicate.and(phonePredicate);","lastModifiedDate":"2021-10-28"},{"lineNumber":101,"author":{"gitId":"tsinyee"},"content":"        testPredicate \u003d new PersonMatchesKeywordsPredicate.Builder()","lastModifiedDate":"2021-10-28"},{"lineNumber":102,"author":{"gitId":"tsinyee"},"content":"                .setPhone(phone).setPredicate(personPredicate).build();","lastModifiedDate":"2021-10-28"},{"lineNumber":103,"author":{"gitId":"tsinyee"},"content":"        expectedCommand \u003d new FindMemberCommand(testPredicate);","lastModifiedDate":"2021-10-28"},{"lineNumber":104,"author":{"gitId":"tsinyee"},"content":"        assertParseSuccess(parser, PHONE_DESC_AMY, expectedCommand);","lastModifiedDate":"2021-10-28"},{"lineNumber":105,"author":{"gitId":"tsinyee"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":106,"author":{"gitId":"tsinyee"},"content":"        // valid tag","lastModifiedDate":"2021-10-28"},{"lineNumber":107,"author":{"gitId":"tsinyee"},"content":"        personPredicate \u003d predicate.and(singleTagPredicate);","lastModifiedDate":"2021-10-28"},{"lineNumber":108,"author":{"gitId":"tsinyee"},"content":"        testPredicate \u003d new PersonMatchesKeywordsPredicate.Builder()","lastModifiedDate":"2021-10-28"},{"lineNumber":109,"author":{"gitId":"tsinyee"},"content":"                .setTags(Collections.singletonList(excoTag)).setPredicate(personPredicate).build();","lastModifiedDate":"2021-10-28"},{"lineNumber":110,"author":{"gitId":"tsinyee"},"content":"        expectedCommand \u003d new FindMemberCommand(testPredicate);","lastModifiedDate":"2021-10-28"},{"lineNumber":111,"author":{"gitId":"tsinyee"},"content":"        assertParseSuccess(parser, TAG_DESC_EXCO, expectedCommand);","lastModifiedDate":"2021-10-28"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":113,"author":{"gitId":"tsinyee"},"content":"        // valid availability","lastModifiedDate":"2021-10-28"},{"lineNumber":114,"author":{"gitId":"tsinyee"},"content":"        personPredicate \u003d predicate.and(availabilityPredicate);","lastModifiedDate":"2021-10-28"},{"lineNumber":115,"author":{"gitId":"tsinyee"},"content":"        testPredicate \u003d new PersonMatchesKeywordsPredicate.Builder()","lastModifiedDate":"2021-10-28"},{"lineNumber":116,"author":{"gitId":"tsinyee"},"content":"                .setAvailability(availability).setPredicate(personPredicate).build();","lastModifiedDate":"2021-10-28"},{"lineNumber":117,"author":{"gitId":"tsinyee"},"content":"        expectedCommand \u003d new FindMemberCommand(testPredicate);","lastModifiedDate":"2021-10-28"},{"lineNumber":118,"author":{"gitId":"tsinyee"},"content":"        assertParseSuccess(parser, AVAILABILITY_DESC_AMY, expectedCommand);","lastModifiedDate":"2021-10-28"},{"lineNumber":119,"author":{"gitId":"tsinyee"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":120,"author":{"gitId":"tsinyee"},"content":"        // valid today attendance","lastModifiedDate":"2021-10-28"},{"lineNumber":121,"author":{"gitId":"tsinyee"},"content":"        personPredicate \u003d predicate.and(todayAttendancePredicate);","lastModifiedDate":"2021-10-28"},{"lineNumber":122,"author":{"gitId":"tsinyee"},"content":"        testPredicate \u003d new PersonMatchesKeywordsPredicate.Builder()","lastModifiedDate":"2021-10-28"},{"lineNumber":123,"author":{"gitId":"tsinyee"},"content":"                .setTodayAttendance(todayAttendance).setPredicate(personPredicate).build();","lastModifiedDate":"2021-10-28"},{"lineNumber":124,"author":{"gitId":"tsinyee"},"content":"        expectedCommand \u003d new FindMemberCommand(testPredicate);","lastModifiedDate":"2021-10-28"},{"lineNumber":125,"author":{"gitId":"tsinyee"},"content":"        assertParseSuccess(parser, \" tda/true\", expectedCommand);","lastModifiedDate":"2021-10-28"},{"lineNumber":126,"author":{"gitId":"tsinyee"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":127,"author":{"gitId":"tsinyee"},"content":"        // valid total attendance","lastModifiedDate":"2021-10-28"},{"lineNumber":128,"author":{"gitId":"tsinyee"},"content":"        personPredicate \u003d predicate.and(totalAttendancePredicate);","lastModifiedDate":"2021-10-28"},{"lineNumber":129,"author":{"gitId":"tsinyee"},"content":"        testPredicate \u003d new PersonMatchesKeywordsPredicate.Builder()","lastModifiedDate":"2021-10-28"},{"lineNumber":130,"author":{"gitId":"tsinyee"},"content":"                .setTotalAttendance(totalAttendance).setPredicate(personPredicate).build();","lastModifiedDate":"2021-10-28"},{"lineNumber":131,"author":{"gitId":"tsinyee"},"content":"        expectedCommand \u003d new FindMemberCommand(testPredicate);","lastModifiedDate":"2021-10-28"},{"lineNumber":132,"author":{"gitId":"tsinyee"},"content":"        assertParseSuccess(parser, \" tta/3\", expectedCommand);","lastModifiedDate":"2021-10-28"},{"lineNumber":133,"author":{"gitId":"tsinyee"},"content":"    }","lastModifiedDate":"2021-10-28"},{"lineNumber":134,"author":{"gitId":"tsinyee"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":135,"author":{"gitId":"tsinyee"},"content":"    @Test","lastModifiedDate":"2021-10-28"},{"lineNumber":136,"author":{"gitId":"tsinyee"},"content":"    public void parse_someFieldsSpecified_success() {","lastModifiedDate":"2021-10-28"},{"lineNumber":137,"author":{"gitId":"tsinyee"},"content":"        Predicate\u003cPerson\u003e predicate \u003d x -\u003e true;","lastModifiedDate":"2021-10-28"},{"lineNumber":138,"author":{"gitId":"tsinyee"},"content":"        predicate \u003d predicate.and(namePredicate);","lastModifiedDate":"2021-10-28"},{"lineNumber":139,"author":{"gitId":"tsinyee"},"content":"        predicate \u003d predicate.and(availabilityPredicate);","lastModifiedDate":"2021-10-28"},{"lineNumber":140,"author":{"gitId":"tsinyee"},"content":"        PersonMatchesKeywordsPredicate testPredicate \u003d new PersonMatchesKeywordsPredicate.Builder().setName(amyName)","lastModifiedDate":"2021-10-28"},{"lineNumber":141,"author":{"gitId":"tsinyee"},"content":"                        .setAvailability(availability).setPredicate(predicate).build();","lastModifiedDate":"2021-10-28"},{"lineNumber":142,"author":{"gitId":"tsinyee"},"content":"        FindMemberCommand expectedCommand \u003d new FindMemberCommand(testPredicate);","lastModifiedDate":"2021-10-28"},{"lineNumber":143,"author":{"gitId":"tsinyee"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":144,"author":{"gitId":"tsinyee"},"content":"        assertParseSuccess(parser, NAME_DESC_AMY + AVAILABILITY_DESC_AMY, expectedCommand);","lastModifiedDate":"2021-10-28"},{"lineNumber":145,"author":{"gitId":"tsinyee"},"content":"        // switch order","lastModifiedDate":"2021-10-28"},{"lineNumber":146,"author":{"gitId":"tsinyee"},"content":"        assertParseSuccess(parser, AVAILABILITY_DESC_AMY + NAME_DESC_AMY, expectedCommand);","lastModifiedDate":"2021-10-28"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":149,"author":{"gitId":"tsinyee"},"content":"    @Test","lastModifiedDate":"2021-10-28"},{"lineNumber":150,"author":{"gitId":"tsinyee"},"content":"    public void parse_invalidValueFollowedByValidValue_success() {","lastModifiedDate":"2021-10-28"},{"lineNumber":151,"author":{"gitId":"tsinyee"},"content":"        Predicate\u003cPerson\u003e predicate \u003d x -\u003e true;","lastModifiedDate":"2021-10-28"},{"lineNumber":152,"author":{"gitId":"tsinyee"},"content":"        predicate \u003d predicate.and(namePredicate);","lastModifiedDate":"2021-10-28"},{"lineNumber":153,"author":{"gitId":"tsinyee"},"content":"        PersonMatchesKeywordsPredicate testPredicate \u003d","lastModifiedDate":"2021-10-28"},{"lineNumber":154,"author":{"gitId":"tsinyee"},"content":"                new PersonMatchesKeywordsPredicate.Builder().setName(amyName).setPredicate(predicate).build();","lastModifiedDate":"2021-10-28"},{"lineNumber":155,"author":{"gitId":"tsinyee"},"content":"        FindMemberCommand expectedCommand \u003d new FindMemberCommand(testPredicate);","lastModifiedDate":"2021-10-28"},{"lineNumber":156,"author":{"gitId":"tsinyee"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":157,"author":{"gitId":"tsinyee"},"content":"        assertParseSuccess(parser, INVALID_NAME_DESC + NAME_DESC_AMY, expectedCommand);","lastModifiedDate":"2021-10-28"},{"lineNumber":158,"author":{"gitId":"tsinyee"},"content":"    }","lastModifiedDate":"2021-10-28"},{"lineNumber":159,"author":{"gitId":"tsinyee"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":160,"author":{"gitId":"tsinyee"},"content":"    @Test","lastModifiedDate":"2021-10-28"},{"lineNumber":161,"author":{"gitId":"tsinyee"},"content":"    public void parse_multipleRepeatedFields_acceptsLast() {","lastModifiedDate":"2021-10-28"},{"lineNumber":162,"author":{"gitId":"tsinyee"},"content":"        Predicate\u003cPerson\u003e predicate \u003d x -\u003e true;","lastModifiedDate":"2021-10-28"},{"lineNumber":163,"author":{"gitId":"tsinyee"},"content":"        predicate \u003d predicate.and(namePredicate);","lastModifiedDate":"2021-10-28"},{"lineNumber":164,"author":{"gitId":"tsinyee"},"content":"        PersonMatchesKeywordsPredicate testPredicate \u003d","lastModifiedDate":"2021-10-28"},{"lineNumber":165,"author":{"gitId":"tsinyee"},"content":"                new PersonMatchesKeywordsPredicate.Builder().setName(amyName).setPredicate(predicate).build();","lastModifiedDate":"2021-10-28"},{"lineNumber":166,"author":{"gitId":"tsinyee"},"content":"        FindMemberCommand expectedCommand \u003d new FindMemberCommand(testPredicate);","lastModifiedDate":"2021-10-28"},{"lineNumber":167,"author":{"gitId":"tsinyee"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":168,"author":{"gitId":"tsinyee"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + NAME_DESC_AMY, expectedCommand);","lastModifiedDate":"2021-10-28"},{"lineNumber":169,"author":{"gitId":"tsinyee"},"content":"    }","lastModifiedDate":"2021-10-28"},{"lineNumber":170,"author":{"gitId":"tsinyee"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":171,"author":{"gitId":"tsinyee"},"content":"    @Test","lastModifiedDate":"2021-10-28"},{"lineNumber":172,"author":{"gitId":"tsinyee"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2021-10-28"},{"lineNumber":173,"author":{"gitId":"tsinyee"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC, Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-28"},{"lineNumber":174,"author":{"gitId":"tsinyee"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":175,"author":{"gitId":"tsinyee"},"content":"        // invalid tag","lastModifiedDate":"2021-10-28"},{"lineNumber":176,"author":{"gitId":"tsinyee"},"content":"        assertParseFailure(parser, INVALID_TAG_DESC, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-28"},{"lineNumber":177,"author":{"gitId":"tsinyee"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":178,"author":{"gitId":"tsinyee"},"content":"        // invalid tag argument ahead of valid tag","lastModifiedDate":"2021-10-28"},{"lineNumber":179,"author":{"gitId":"tsinyee"},"content":"        assertParseFailure(parser, INVALID_TAG_DESC + TAG_DESC_EXCO, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-28"},{"lineNumber":180,"author":{"gitId":"tsinyee"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":181,"author":{"gitId":"tsinyee"},"content":"        // multiple invalid values, but only the first invalid value is captured","lastModifiedDate":"2021-10-28"},{"lineNumber":182,"author":{"gitId":"tsinyee"},"content":"        assertParseFailure(parser, NAME_DESC_AMY + INVALID_AVAILABILITY_DESC + INVALID_TAG_DESC,","lastModifiedDate":"2021-10-28"},{"lineNumber":183,"author":{"gitId":"tsinyee"},"content":"                Availability.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-28"},{"lineNumber":184,"author":{"gitId":"tsinyee"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":185,"author":{"gitId":"tsinyee"},"content":"        // empty field","lastModifiedDate":"2021-10-28"},{"lineNumber":186,"author":{"gitId":"tsinyee"},"content":"        assertParseFailure(parser, \" n/  \", Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-28"},{"lineNumber":187,"author":{"gitId":"tsinyee"},"content":"    }","lastModifiedDate":"2021-10-28"},{"lineNumber":188,"author":{"gitId":"tsinyee"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":189,"author":{"gitId":"tsinyee"},"content":"    @Test","lastModifiedDate":"2021-10-28"},{"lineNumber":190,"author":{"gitId":"tsinyee"},"content":"    public void parse_invalidPreamble_failure() {","lastModifiedDate":"2021-10-28"},{"lineNumber":191,"author":{"gitId":"tsinyee"},"content":"        // invalid arguments being parsed as preamble","lastModifiedDate":"2021-10-28"},{"lineNumber":192,"author":{"gitId":"tsinyee"},"content":"        assertParseFailure(parser, INVALID_PREAMBLE, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2021-10-28"},{"lineNumber":193,"author":{"gitId":"tsinyee"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":194,"author":{"gitId":"tsinyee"},"content":"        // invalid prefix being parsed as preamble","lastModifiedDate":"2021-10-28"},{"lineNumber":195,"author":{"gitId":"tsinyee"},"content":"        assertParseFailure(parser, \"i/ string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2021-10-28"},{"lineNumber":196,"author":{"gitId":"tsinyee"},"content":"    }","lastModifiedDate":"2021-10-28"},{"lineNumber":197,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-27"}],"authorContributionMap":{"-":23,"tsinyee":169,"felix-ong":5}},{"path":"src/test/java/seedu/address/logic/parser/ImportCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Moley456"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-10-23"},{"lineNumber":2,"author":{"gitId":"Moley456"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":3,"author":{"gitId":"Moley456"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-23"},{"lineNumber":4,"author":{"gitId":"Moley456"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2021-10-23"},{"lineNumber":5,"author":{"gitId":"Moley456"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":6,"author":{"gitId":"Moley456"},"content":"import java.nio.file.Path;","lastModifiedDate":"2021-10-23"},{"lineNumber":7,"author":{"gitId":"Moley456"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2021-10-23"},{"lineNumber":8,"author":{"gitId":"Moley456"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":9,"author":{"gitId":"Moley456"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-23"},{"lineNumber":10,"author":{"gitId":"Moley456"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":11,"author":{"gitId":"Moley456"},"content":"import seedu.address.logic.commands.ImportCommand;","lastModifiedDate":"2021-10-23"},{"lineNumber":12,"author":{"gitId":"Moley456"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":13,"author":{"gitId":"Moley456"},"content":"public class ImportCommandParserTest {","lastModifiedDate":"2021-10-23"},{"lineNumber":14,"author":{"gitId":"Moley456"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":15,"author":{"gitId":"Moley456"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"ImportCommandParserTest\");","lastModifiedDate":"2021-10-23"},{"lineNumber":16,"author":{"gitId":"Moley456"},"content":"    private static final Path TYPICAL_IMPORT_FILE \u003d TEST_DATA_FOLDER.resolve(\"typicalImportFile.csv\");","lastModifiedDate":"2021-10-23"},{"lineNumber":17,"author":{"gitId":"Moley456"},"content":"    private static final Path INVALID_FORMAT_FILE \u003d TEST_DATA_FOLDER.resolve(\"typicalImportFile.csv\");","lastModifiedDate":"2021-10-23"},{"lineNumber":18,"author":{"gitId":"Moley456"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":19,"author":{"gitId":"Moley456"},"content":"    private final ImportCommandParser parser \u003d new ImportCommandParser();","lastModifiedDate":"2021-10-23"},{"lineNumber":20,"author":{"gitId":"Moley456"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":21,"author":{"gitId":"Moley456"},"content":"    @Test","lastModifiedDate":"2021-10-23"},{"lineNumber":22,"author":{"gitId":"Moley456"},"content":"    public void parse_emptyArg_throwsParseException() {","lastModifiedDate":"2021-10-23"},{"lineNumber":23,"author":{"gitId":"Moley456"},"content":"        assertParseFailure(parser, \"     \",","lastModifiedDate":"2021-10-23"},{"lineNumber":24,"author":{"gitId":"Moley456"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, ImportCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-23"},{"lineNumber":25,"author":{"gitId":"Moley456"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":26,"author":{"gitId":"Moley456"},"content":"}","lastModifiedDate":"2021-10-23"}],"authorContributionMap":{"Moley456":26}},{"path":"src/test/java/seedu/address/logic/parser/MarkAttendanceCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Shruthi0310"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-10-21"},{"lineNumber":2,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":3,"author":{"gitId":"Shruthi0310"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2021-10-21"},{"lineNumber":4,"author":{"gitId":"Shruthi0310"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2021-10-21"},{"lineNumber":5,"author":{"gitId":"Shruthi0310"},"content":"import static seedu.address.logic.parser.ParserUtil.MESSAGE_INVALID_INDEX;","lastModifiedDate":"2021-10-21"},{"lineNumber":6,"author":{"gitId":"Shruthi0310"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST;","lastModifiedDate":"2021-10-21"},{"lineNumber":7,"author":{"gitId":"Shruthi0310"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_THIRD;","lastModifiedDate":"2021-10-21"},{"lineNumber":8,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":9,"author":{"gitId":"Shruthi0310"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-10-21"},{"lineNumber":10,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":11,"author":{"gitId":"Shruthi0310"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-21"},{"lineNumber":12,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":13,"author":{"gitId":"Shruthi0310"},"content":"import seedu.address.logic.commands.MarkAttendanceCommand;","lastModifiedDate":"2021-10-21"},{"lineNumber":14,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":15,"author":{"gitId":"Shruthi0310"},"content":"class MarkAttendanceCommandParserTest {","lastModifiedDate":"2021-10-21"},{"lineNumber":16,"author":{"gitId":"Shruthi0310"},"content":"    private MarkAttendanceCommandParser parser \u003d new MarkAttendanceCommandParser();","lastModifiedDate":"2021-10-21"},{"lineNumber":17,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":18,"author":{"gitId":"Shruthi0310"},"content":"    @Test","lastModifiedDate":"2021-10-21"},{"lineNumber":19,"author":{"gitId":"Shruthi0310"},"content":"    public void parse_validArgs_returnsMarkAttendanceCommand() {","lastModifiedDate":"2021-10-21"},{"lineNumber":20,"author":{"gitId":"Shruthi0310"},"content":"        assertParseSuccess(parser, \"1 3\", new MarkAttendanceCommand(Arrays.asList(INDEX_FIRST,","lastModifiedDate":"2021-10-21"},{"lineNumber":21,"author":{"gitId":"Shruthi0310"},"content":"                INDEX_THIRD)));","lastModifiedDate":"2021-10-21"},{"lineNumber":22,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":23,"author":{"gitId":"Shruthi0310"},"content":"        assertParseSuccess(parser, \"1 \\n   3\", new MarkAttendanceCommand(Arrays.asList(INDEX_FIRST,","lastModifiedDate":"2021-10-21"},{"lineNumber":24,"author":{"gitId":"Shruthi0310"},"content":"                INDEX_THIRD)));","lastModifiedDate":"2021-10-21"},{"lineNumber":25,"author":{"gitId":"Shruthi0310"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":26,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":27,"author":{"gitId":"Shruthi0310"},"content":"    @Test","lastModifiedDate":"2021-10-21"},{"lineNumber":28,"author":{"gitId":"Shruthi0310"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2021-10-21"},{"lineNumber":29,"author":{"gitId":"Shruthi0310"},"content":"        assertParseFailure(parser, \"a\", MESSAGE_INVALID_INDEX);","lastModifiedDate":"2021-10-21"},{"lineNumber":30,"author":{"gitId":"Shruthi0310"},"content":"        assertParseFailure(parser, \"-1\", MESSAGE_INVALID_INDEX);","lastModifiedDate":"2021-10-21"},{"lineNumber":31,"author":{"gitId":"Shruthi0310"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":32,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":33,"author":{"gitId":"Shruthi0310"},"content":"}","lastModifiedDate":"2021-10-21"}],"authorContributionMap":{"Shruthi0310":33}},{"path":"src/test/java/seedu/address/logic/parser/ParserUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.ParserUtil.MESSAGE_INVALID_INDEX;","lastModifiedDate":"2017-06-02"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":7,"author":{"gitId":"YoYoCiti"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST;","lastModifiedDate":"2021-10-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-05-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-05-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-05-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-07-10"},{"lineNumber":17,"author":{"gitId":"YoYoCiti"},"content":"import seedu.address.model.alias.CommandWord;","lastModifiedDate":"2021-10-18"},{"lineNumber":18,"author":{"gitId":"YoYoCiti"},"content":"import seedu.address.model.alias.Shortcut;","lastModifiedDate":"2021-10-18"},{"lineNumber":19,"author":{"gitId":"Shruthi0310"},"content":"import seedu.address.model.facility.Capacity;","lastModifiedDate":"2021-10-05"},{"lineNumber":20,"author":{"gitId":"Shruthi0310"},"content":"import seedu.address.model.facility.FacilityName;","lastModifiedDate":"2021-10-05"},{"lineNumber":21,"author":{"gitId":"Shruthi0310"},"content":"import seedu.address.model.facility.Location;","lastModifiedDate":"2021-10-05"},{"lineNumber":22,"author":{"gitId":"Shruthi0310"},"content":"import seedu.address.model.facility.Time;","lastModifiedDate":"2021-10-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2021-10-28"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2021-10-28"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2021-10-28"},{"lineNumber":26,"author":{"gitId":"tsinyee"},"content":"import seedu.address.model.person.TodayAttendance;","lastModifiedDate":"2021-10-28"},{"lineNumber":27,"author":{"gitId":"tsinyee"},"content":"import seedu.address.model.person.TotalAttendance;","lastModifiedDate":"2021-10-28"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-05-22"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":30,"author":{"gitId":"tsinyee"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":31,"author":{"gitId":"-"},"content":"public class ParserUtilTest {","lastModifiedDate":"2017-05-22"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2017-05-22"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private static final String INVALID_PHONE \u003d \"+651234\";","lastModifiedDate":"2017-05-22"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private static final String INVALID_ADDRESS \u003d \" \";","lastModifiedDate":"2017-05-22"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private static final String INVALID_TAG \u003d \"#friend\";","lastModifiedDate":"2017-05-22"},{"lineNumber":36,"author":{"gitId":"tsinyee"},"content":"    private static final String INVALID_TODAY_ATTENDANCE \u003d \"f\";","lastModifiedDate":"2021-10-28"},{"lineNumber":37,"author":{"gitId":"tsinyee"},"content":"    private static final String INVALID_TOTAL_ATTENDANCE \u003d \"-10\";","lastModifiedDate":"2021-10-28"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private static final String VALID_NAME \u003d \"Rachel Walker\";","lastModifiedDate":"2017-05-22"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private static final String VALID_PHONE \u003d \"123456\";","lastModifiedDate":"2017-05-22"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private static final String VALID_ADDRESS \u003d \"123 Main Street #0505\";","lastModifiedDate":"2017-05-22"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private static final String VALID_TAG_1 \u003d \"friend\";","lastModifiedDate":"2017-05-22"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    private static final String VALID_TAG_2 \u003d \"neighbour\";","lastModifiedDate":"2017-05-22"},{"lineNumber":44,"author":{"gitId":"tsinyee"},"content":"    private static final String VALID_TODAY_ATTENDANCE \u003d \"false\";","lastModifiedDate":"2021-10-28"},{"lineNumber":45,"author":{"gitId":"tsinyee"},"content":"    private static final String VALID_TOTAL_ATTENDANCE \u003d \"3\";","lastModifiedDate":"2021-10-28"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":47,"author":{"gitId":"tsinyee"},"content":"    private static final String INVALID_FACILITY_NAME \u003d \"Cour+\";","lastModifiedDate":"2021-10-12"},{"lineNumber":48,"author":{"gitId":"tsinyee"},"content":"    private static final String INVALID_FACILITY_LOCATION \u003d \"University H@ll\";","lastModifiedDate":"2021-10-12"},{"lineNumber":49,"author":{"gitId":"tsinyee"},"content":"    private static final String INVALID_FACILITY_TIME \u003d \"555\";","lastModifiedDate":"2021-10-12"},{"lineNumber":50,"author":{"gitId":"tsinyee"},"content":"    private static final String INVALID_FACILITY_CAPACITY \u003d \"Z\";","lastModifiedDate":"2021-10-12"},{"lineNumber":51,"author":{"gitId":"tsinyee"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":52,"author":{"gitId":"tsinyee"},"content":"    private static final String VALID_FACILITY_NAME \u003d \"Court\";","lastModifiedDate":"2021-10-12"},{"lineNumber":53,"author":{"gitId":"tsinyee"},"content":"    private static final String VALID_FACILITY_LOCATION \u003d \"University Hall\";","lastModifiedDate":"2021-10-12"},{"lineNumber":54,"author":{"gitId":"tsinyee"},"content":"    private static final String VALID_FACILITY_TIME \u003d \"1130\";","lastModifiedDate":"2021-10-12"},{"lineNumber":55,"author":{"gitId":"tsinyee"},"content":"    private static final String VALID_FACILITY_CAPACITY \u003d \"5\";","lastModifiedDate":"2021-10-12"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    private static final String WHITESPACE \u003d \" \\t\\r\\n\";","lastModifiedDate":"2017-05-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void parseIndex_invalidInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseIndex(\"10 a\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void parseIndex_outOfRangeInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, MESSAGE_INVALID_INDEX, ()","lastModifiedDate":"2019-03-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"            -\u003e ParserUtil.parseIndex(Long.toString(Integer.MAX_VALUE + 1)));","lastModifiedDate":"2019-03-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public void parseIndex_validInput_success() throws Exception {","lastModifiedDate":"2017-05-26"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        // No whitespaces","lastModifiedDate":"2017-05-26"},{"lineNumber":73,"author":{"gitId":"YoYoCiti"},"content":"        assertEquals(INDEX_FIRST, ParserUtil.parseIndex(\"1\"));","lastModifiedDate":"2021-10-09"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        // Leading and trailing whitespaces","lastModifiedDate":"2017-05-26"},{"lineNumber":76,"author":{"gitId":"YoYoCiti"},"content":"        assertEquals(INDEX_FIRST, ParserUtil.parseIndex(\"  1  \"));","lastModifiedDate":"2021-10-09"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":79,"author":{"gitId":"Shruthi0310"},"content":"    @Test","lastModifiedDate":"2021-10-05"},{"lineNumber":80,"author":{"gitId":"Shruthi0310"},"content":"    public void parseFacilityName_null_exceptionThrown() {","lastModifiedDate":"2021-10-05"},{"lineNumber":81,"author":{"gitId":"Shruthi0310"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseFacilityName((String) null));","lastModifiedDate":"2021-10-05"},{"lineNumber":82,"author":{"gitId":"Shruthi0310"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":83,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":84,"author":{"gitId":"Shruthi0310"},"content":"    @Test","lastModifiedDate":"2021-10-05"},{"lineNumber":85,"author":{"gitId":"tsinyee"},"content":"    public void parseFacilityName_invalidValue_throwsParseException() {","lastModifiedDate":"2021-10-12"},{"lineNumber":86,"author":{"gitId":"tsinyee"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseFacilityName(INVALID_FACILITY_NAME));","lastModifiedDate":"2021-10-12"},{"lineNumber":87,"author":{"gitId":"tsinyee"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":88,"author":{"gitId":"tsinyee"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":89,"author":{"gitId":"tsinyee"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":90,"author":{"gitId":"tsinyee"},"content":"    public void parseFacilityName_valueWithoutWhiteSpace_returnsFacilityName() throws Exception {","lastModifiedDate":"2021-10-12"},{"lineNumber":91,"author":{"gitId":"tsinyee"},"content":"        FacilityName name \u003d new FacilityName(VALID_FACILITY_NAME);","lastModifiedDate":"2021-10-12"},{"lineNumber":92,"author":{"gitId":"tsinyee"},"content":"        assertEquals(name, ParserUtil.parseFacilityName(VALID_FACILITY_NAME));","lastModifiedDate":"2021-10-12"},{"lineNumber":93,"author":{"gitId":"Shruthi0310"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":94,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":95,"author":{"gitId":"Shruthi0310"},"content":"    @Test","lastModifiedDate":"2021-10-05"},{"lineNumber":96,"author":{"gitId":"tsinyee"},"content":"    public void parseFacilityName_valueWithWhiteSpace_returnsTrimmedName() throws Exception {","lastModifiedDate":"2021-10-12"},{"lineNumber":97,"author":{"gitId":"tsinyee"},"content":"        FacilityName name \u003d new FacilityName(VALID_FACILITY_NAME);","lastModifiedDate":"2021-10-12"},{"lineNumber":98,"author":{"gitId":"tsinyee"},"content":"        assertEquals(name, ParserUtil.parseFacilityName(WHITESPACE + VALID_FACILITY_NAME + WHITESPACE));","lastModifiedDate":"2021-10-12"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":101,"author":{"gitId":"Shruthi0310"},"content":"    @Test","lastModifiedDate":"2021-10-05"},{"lineNumber":102,"author":{"gitId":"Shruthi0310"},"content":"    public void parseLocation_null_exceptionThrown() {","lastModifiedDate":"2021-10-05"},{"lineNumber":103,"author":{"gitId":"Shruthi0310"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseLocation((String) null));","lastModifiedDate":"2021-10-05"},{"lineNumber":104,"author":{"gitId":"Shruthi0310"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":105,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":106,"author":{"gitId":"Shruthi0310"},"content":"    @Test","lastModifiedDate":"2021-10-05"},{"lineNumber":107,"author":{"gitId":"tsinyee"},"content":"    public void parseLocation_invalidValue_throwsParseException() {","lastModifiedDate":"2021-10-12"},{"lineNumber":108,"author":{"gitId":"tsinyee"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseLocation(INVALID_FACILITY_LOCATION));","lastModifiedDate":"2021-10-12"},{"lineNumber":109,"author":{"gitId":"Shruthi0310"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":110,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":111,"author":{"gitId":"Shruthi0310"},"content":"    @Test","lastModifiedDate":"2021-10-05"},{"lineNumber":112,"author":{"gitId":"tsinyee"},"content":"    public void parseLocation_valueWithoutWhiteSpace_returnsLocation() throws Exception {","lastModifiedDate":"2021-10-12"},{"lineNumber":113,"author":{"gitId":"tsinyee"},"content":"        Location location \u003d new Location(VALID_FACILITY_LOCATION);","lastModifiedDate":"2021-10-12"},{"lineNumber":114,"author":{"gitId":"tsinyee"},"content":"        assertEquals(location, ParserUtil.parseLocation(VALID_FACILITY_LOCATION));","lastModifiedDate":"2021-10-12"},{"lineNumber":115,"author":{"gitId":"tsinyee"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":116,"author":{"gitId":"tsinyee"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":117,"author":{"gitId":"tsinyee"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":118,"author":{"gitId":"tsinyee"},"content":"    public void parseLocation_valueWithWhiteSpace_returnsTrimmedLocation() throws Exception {","lastModifiedDate":"2021-10-12"},{"lineNumber":119,"author":{"gitId":"tsinyee"},"content":"        Location location \u003d new Location(VALID_FACILITY_LOCATION);","lastModifiedDate":"2021-10-12"},{"lineNumber":120,"author":{"gitId":"tsinyee"},"content":"        assertEquals(location, ParserUtil.parseLocation(WHITESPACE + VALID_FACILITY_LOCATION + WHITESPACE));","lastModifiedDate":"2021-10-12"},{"lineNumber":121,"author":{"gitId":"Shruthi0310"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":122,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":123,"author":{"gitId":"Shruthi0310"},"content":"    @Test","lastModifiedDate":"2021-10-05"},{"lineNumber":124,"author":{"gitId":"Shruthi0310"},"content":"    public void parseTime_null_exceptionThrown() {","lastModifiedDate":"2021-10-05"},{"lineNumber":125,"author":{"gitId":"Shruthi0310"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseTime((String) null));","lastModifiedDate":"2021-10-05"},{"lineNumber":126,"author":{"gitId":"Shruthi0310"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":127,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":128,"author":{"gitId":"Shruthi0310"},"content":"    @Test","lastModifiedDate":"2021-10-05"},{"lineNumber":129,"author":{"gitId":"tsinyee"},"content":"    public void parseTime_invalidValue_throwsParseException() {","lastModifiedDate":"2021-10-12"},{"lineNumber":130,"author":{"gitId":"tsinyee"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseTime(INVALID_FACILITY_TIME));","lastModifiedDate":"2021-10-12"},{"lineNumber":131,"author":{"gitId":"Shruthi0310"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":132,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":133,"author":{"gitId":"Shruthi0310"},"content":"    @Test","lastModifiedDate":"2021-10-05"},{"lineNumber":134,"author":{"gitId":"tsinyee"},"content":"    public void parseTime_valueWithoutWhiteSpace_returnsTime() throws Exception {","lastModifiedDate":"2021-10-12"},{"lineNumber":135,"author":{"gitId":"tsinyee"},"content":"        Time time \u003d new Time(VALID_FACILITY_TIME);","lastModifiedDate":"2021-10-12"},{"lineNumber":136,"author":{"gitId":"tsinyee"},"content":"        assertEquals(time, ParserUtil.parseTime(VALID_FACILITY_TIME));","lastModifiedDate":"2021-10-12"},{"lineNumber":137,"author":{"gitId":"tsinyee"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":138,"author":{"gitId":"tsinyee"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":139,"author":{"gitId":"tsinyee"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":140,"author":{"gitId":"tsinyee"},"content":"    public void parseTime_valueWithWhiteSpace_returnsTrimmedTime() throws Exception {","lastModifiedDate":"2021-10-12"},{"lineNumber":141,"author":{"gitId":"tsinyee"},"content":"        Time time \u003d new Time(VALID_FACILITY_TIME);","lastModifiedDate":"2021-10-12"},{"lineNumber":142,"author":{"gitId":"tsinyee"},"content":"        assertEquals(time, ParserUtil.parseTime(WHITESPACE + VALID_FACILITY_TIME + WHITESPACE));","lastModifiedDate":"2021-10-12"},{"lineNumber":143,"author":{"gitId":"Shruthi0310"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":144,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":145,"author":{"gitId":"Shruthi0310"},"content":"    @Test","lastModifiedDate":"2021-10-05"},{"lineNumber":146,"author":{"gitId":"Shruthi0310"},"content":"    public void parseCapacity_null_exceptionThrown() {","lastModifiedDate":"2021-10-05"},{"lineNumber":147,"author":{"gitId":"Shruthi0310"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseCapacity((String) null));","lastModifiedDate":"2021-10-05"},{"lineNumber":148,"author":{"gitId":"Shruthi0310"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":149,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":150,"author":{"gitId":"Shruthi0310"},"content":"    @Test","lastModifiedDate":"2021-10-05"},{"lineNumber":151,"author":{"gitId":"tsinyee"},"content":"    public void parseCapacity_invalidValue_throwsParseException() {","lastModifiedDate":"2021-10-12"},{"lineNumber":152,"author":{"gitId":"tsinyee"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseCapacity(INVALID_FACILITY_CAPACITY));","lastModifiedDate":"2021-10-12"},{"lineNumber":153,"author":{"gitId":"Shruthi0310"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":154,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":155,"author":{"gitId":"Shruthi0310"},"content":"    @Test","lastModifiedDate":"2021-10-05"},{"lineNumber":156,"author":{"gitId":"tsinyee"},"content":"    public void parseCapacity_valueWithoutWhiteSpace_returnsCapacity() throws Exception {","lastModifiedDate":"2021-10-12"},{"lineNumber":157,"author":{"gitId":"tsinyee"},"content":"        Capacity capacity \u003d new Capacity(VALID_FACILITY_CAPACITY);","lastModifiedDate":"2021-10-12"},{"lineNumber":158,"author":{"gitId":"tsinyee"},"content":"        assertEquals(capacity, ParserUtil.parseCapacity(VALID_FACILITY_CAPACITY));","lastModifiedDate":"2021-10-12"},{"lineNumber":159,"author":{"gitId":"Shruthi0310"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":160,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":161,"author":{"gitId":"tsinyee"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":162,"author":{"gitId":"tsinyee"},"content":"    public void parseCapacity_valueWithWhiteSpace_returnsTrimmedCapacity() throws Exception {","lastModifiedDate":"2021-10-12"},{"lineNumber":163,"author":{"gitId":"tsinyee"},"content":"        Capacity capacity \u003d new Capacity(VALID_FACILITY_CAPACITY);","lastModifiedDate":"2021-10-12"},{"lineNumber":164,"author":{"gitId":"tsinyee"},"content":"        assertEquals(capacity, ParserUtil.parseCapacity(WHITESPACE + VALID_FACILITY_CAPACITY + WHITESPACE));","lastModifiedDate":"2021-10-12"},{"lineNumber":165,"author":{"gitId":"tsinyee"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":166,"author":{"gitId":"tsinyee"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":167,"author":{"gitId":"tsinyee"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":168,"author":{"gitId":"tsinyee"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    public void parseName_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-29"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseName((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    public void parseName_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseName(INVALID_NAME));","lastModifiedDate":"2019-03-14"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    public void parseName_validValueWithoutWhitespace_returnsName() throws Exception {","lastModifiedDate":"2017-05-29"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        Name expectedName \u003d new Name(VALID_NAME);","lastModifiedDate":"2017-05-22"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        assertEquals(expectedName, ParserUtil.parseName(VALID_NAME));","lastModifiedDate":"2017-05-29"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-29"},{"lineNumber":186,"author":{"gitId":"-"},"content":"    public void parseName_validValueWithWhitespace_returnsTrimmedName() throws Exception {","lastModifiedDate":"2017-05-29"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        String nameWithWhitespace \u003d WHITESPACE + VALID_NAME + WHITESPACE;","lastModifiedDate":"2017-05-29"},{"lineNumber":188,"author":{"gitId":"-"},"content":"        Name expectedName \u003d new Name(VALID_NAME);","lastModifiedDate":"2017-05-29"},{"lineNumber":189,"author":{"gitId":"-"},"content":"        assertEquals(expectedName, ParserUtil.parseName(nameWithWhitespace));","lastModifiedDate":"2017-05-29"},{"lineNumber":190,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":192,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":193,"author":{"gitId":"-"},"content":"    public void parsePhone_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parsePhone((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":195,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":197,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":198,"author":{"gitId":"-"},"content":"    public void parsePhone_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":199,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parsePhone(INVALID_PHONE));","lastModifiedDate":"2019-03-14"},{"lineNumber":200,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":201,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":202,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    public void parsePhone_validValueWithoutWhitespace_returnsPhone() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":204,"author":{"gitId":"-"},"content":"        Phone expectedPhone \u003d new Phone(VALID_PHONE);","lastModifiedDate":"2017-05-22"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        assertEquals(expectedPhone, ParserUtil.parsePhone(VALID_PHONE));","lastModifiedDate":"2017-05-30"},{"lineNumber":206,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":208,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    public void parsePhone_validValueWithWhitespace_returnsTrimmedPhone() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":210,"author":{"gitId":"-"},"content":"        String phoneWithWhitespace \u003d WHITESPACE + VALID_PHONE + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":211,"author":{"gitId":"-"},"content":"        Phone expectedPhone \u003d new Phone(VALID_PHONE);","lastModifiedDate":"2017-05-30"},{"lineNumber":212,"author":{"gitId":"-"},"content":"        assertEquals(expectedPhone, ParserUtil.parsePhone(phoneWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":213,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":215,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":216,"author":{"gitId":"-"},"content":"    public void parseAddress_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":217,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseAddress((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":218,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":220,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":221,"author":{"gitId":"-"},"content":"    public void parseAddress_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":222,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseAddress(INVALID_ADDRESS));","lastModifiedDate":"2019-03-14"},{"lineNumber":223,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":224,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":225,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":226,"author":{"gitId":"-"},"content":"    public void parseAddress_validValueWithoutWhitespace_returnsAddress() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":227,"author":{"gitId":"-"},"content":"        Address expectedAddress \u003d new Address(VALID_ADDRESS);","lastModifiedDate":"2017-05-22"},{"lineNumber":228,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddress, ParserUtil.parseAddress(VALID_ADDRESS));","lastModifiedDate":"2017-05-30"},{"lineNumber":229,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":230,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":231,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":232,"author":{"gitId":"-"},"content":"    public void parseAddress_validValueWithWhitespace_returnsTrimmedAddress() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":233,"author":{"gitId":"-"},"content":"        String addressWithWhitespace \u003d WHITESPACE + VALID_ADDRESS + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":234,"author":{"gitId":"-"},"content":"        Address expectedAddress \u003d new Address(VALID_ADDRESS);","lastModifiedDate":"2017-05-30"},{"lineNumber":235,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddress, ParserUtil.parseAddress(addressWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":236,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":237,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":238,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":239,"author":{"gitId":"-"},"content":"    public void parseTag_null_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseTag(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":242,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":243,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":244,"author":{"gitId":"-"},"content":"    public void parseTag_invalidValue_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":245,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseTag(INVALID_TAG));","lastModifiedDate":"2019-03-23"},{"lineNumber":246,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":247,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":248,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":249,"author":{"gitId":"-"},"content":"    public void parseTag_validValueWithoutWhitespace_returnsTag() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":250,"author":{"gitId":"-"},"content":"        Tag expectedTag \u003d new Tag(VALID_TAG_1);","lastModifiedDate":"2017-05-30"},{"lineNumber":251,"author":{"gitId":"-"},"content":"        assertEquals(expectedTag, ParserUtil.parseTag(VALID_TAG_1));","lastModifiedDate":"2017-05-30"},{"lineNumber":252,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":253,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":254,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":255,"author":{"gitId":"-"},"content":"    public void parseTag_validValueWithWhitespace_returnsTrimmedTag() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":256,"author":{"gitId":"-"},"content":"        String tagWithWhitespace \u003d WHITESPACE + VALID_TAG_1 + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":257,"author":{"gitId":"-"},"content":"        Tag expectedTag \u003d new Tag(VALID_TAG_1);","lastModifiedDate":"2017-05-30"},{"lineNumber":258,"author":{"gitId":"-"},"content":"        assertEquals(expectedTag, ParserUtil.parseTag(tagWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":259,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":260,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":261,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":262,"author":{"gitId":"-"},"content":"    public void parseTags_null_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":263,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseTags(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":264,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":265,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":266,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":267,"author":{"gitId":"-"},"content":"    public void parseTags_collectionWithInvalidTags_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":268,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseTags(Arrays.asList(VALID_TAG_1, INVALID_TAG)));","lastModifiedDate":"2019-03-23"},{"lineNumber":269,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":270,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":271,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":272,"author":{"gitId":"-"},"content":"    public void parseTags_emptyCollection_returnsEmptySet() throws Exception {","lastModifiedDate":"2017-05-22"},{"lineNumber":273,"author":{"gitId":"-"},"content":"        assertTrue(ParserUtil.parseTags(Collections.emptyList()).isEmpty());","lastModifiedDate":"2017-05-22"},{"lineNumber":274,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":275,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":276,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":277,"author":{"gitId":"-"},"content":"    public void parseTags_collectionWithValidTags_returnsTagSet() throws Exception {","lastModifiedDate":"2017-05-22"},{"lineNumber":278,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e actualTagSet \u003d ParserUtil.parseTags(Arrays.asList(VALID_TAG_1, VALID_TAG_2));","lastModifiedDate":"2017-05-22"},{"lineNumber":279,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e expectedTagSet \u003d new HashSet\u003cTag\u003e(Arrays.asList(new Tag(VALID_TAG_1), new Tag(VALID_TAG_2)));","lastModifiedDate":"2017-05-22"},{"lineNumber":280,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":281,"author":{"gitId":"-"},"content":"        assertEquals(expectedTagSet, actualTagSet);","lastModifiedDate":"2017-05-22"},{"lineNumber":282,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":283,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":284,"author":{"gitId":"tsinyee"},"content":"    @Test","lastModifiedDate":"2021-10-28"},{"lineNumber":285,"author":{"gitId":"tsinyee"},"content":"    public void parseTodayAttendance_null_throwsNullPointerException() {","lastModifiedDate":"2021-10-28"},{"lineNumber":286,"author":{"gitId":"tsinyee"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseTodayAttendance((String) null));","lastModifiedDate":"2021-10-28"},{"lineNumber":287,"author":{"gitId":"tsinyee"},"content":"    }","lastModifiedDate":"2021-10-28"},{"lineNumber":288,"author":{"gitId":"tsinyee"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":289,"author":{"gitId":"tsinyee"},"content":"    @Test","lastModifiedDate":"2021-10-28"},{"lineNumber":290,"author":{"gitId":"tsinyee"},"content":"    public void parseTodayAttendance_invalidValue_throwsParseException() {","lastModifiedDate":"2021-10-28"},{"lineNumber":291,"author":{"gitId":"tsinyee"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseTodayAttendance(INVALID_TODAY_ATTENDANCE));","lastModifiedDate":"2021-10-28"},{"lineNumber":292,"author":{"gitId":"tsinyee"},"content":"    }","lastModifiedDate":"2021-10-28"},{"lineNumber":293,"author":{"gitId":"tsinyee"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":294,"author":{"gitId":"tsinyee"},"content":"    @Test","lastModifiedDate":"2021-10-28"},{"lineNumber":295,"author":{"gitId":"tsinyee"},"content":"    public void parseTodayAttendance_validValueWithoutWhitespace_returnsTodayAttendance() throws Exception {","lastModifiedDate":"2021-10-28"},{"lineNumber":296,"author":{"gitId":"tsinyee"},"content":"        TodayAttendance expectedTodayAttendance \u003d new TodayAttendance(false);","lastModifiedDate":"2021-10-28"},{"lineNumber":297,"author":{"gitId":"tsinyee"},"content":"        assertEquals(expectedTodayAttendance, ParserUtil.parseTodayAttendance(VALID_TODAY_ATTENDANCE));","lastModifiedDate":"2021-10-28"},{"lineNumber":298,"author":{"gitId":"tsinyee"},"content":"    }","lastModifiedDate":"2021-10-28"},{"lineNumber":299,"author":{"gitId":"tsinyee"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":300,"author":{"gitId":"tsinyee"},"content":"    @Test","lastModifiedDate":"2021-10-28"},{"lineNumber":301,"author":{"gitId":"tsinyee"},"content":"    public void parseTodayAttendance_validValueWithWhitespace_returnsTodayAttendance() throws Exception {","lastModifiedDate":"2021-10-28"},{"lineNumber":302,"author":{"gitId":"tsinyee"},"content":"        String todayAttendanceWithWhiteSpace \u003d WHITESPACE + VALID_TODAY_ATTENDANCE + WHITESPACE;","lastModifiedDate":"2021-10-28"},{"lineNumber":303,"author":{"gitId":"tsinyee"},"content":"        TodayAttendance expectedTodayAttendance \u003d new TodayAttendance(false);","lastModifiedDate":"2021-10-28"},{"lineNumber":304,"author":{"gitId":"tsinyee"},"content":"        assertEquals(expectedTodayAttendance, ParserUtil.parseTodayAttendance(todayAttendanceWithWhiteSpace));","lastModifiedDate":"2021-10-28"},{"lineNumber":305,"author":{"gitId":"tsinyee"},"content":"    }","lastModifiedDate":"2021-10-28"},{"lineNumber":306,"author":{"gitId":"tsinyee"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":307,"author":{"gitId":"tsinyee"},"content":"    @Test","lastModifiedDate":"2021-10-28"},{"lineNumber":308,"author":{"gitId":"tsinyee"},"content":"    public void parseTotalAttendance_null_throwsNullPointerException() {","lastModifiedDate":"2021-10-28"},{"lineNumber":309,"author":{"gitId":"tsinyee"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseTotalAttendance((String) null));","lastModifiedDate":"2021-10-28"},{"lineNumber":310,"author":{"gitId":"tsinyee"},"content":"    }","lastModifiedDate":"2021-10-28"},{"lineNumber":311,"author":{"gitId":"tsinyee"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":312,"author":{"gitId":"tsinyee"},"content":"    @Test","lastModifiedDate":"2021-10-28"},{"lineNumber":313,"author":{"gitId":"tsinyee"},"content":"    public void parseTotalAttendance_invalidValue_throwsParseException() {","lastModifiedDate":"2021-10-28"},{"lineNumber":314,"author":{"gitId":"tsinyee"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseTotalAttendance(INVALID_TOTAL_ATTENDANCE));","lastModifiedDate":"2021-10-28"},{"lineNumber":315,"author":{"gitId":"tsinyee"},"content":"    }","lastModifiedDate":"2021-10-28"},{"lineNumber":316,"author":{"gitId":"tsinyee"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":317,"author":{"gitId":"tsinyee"},"content":"    @Test","lastModifiedDate":"2021-10-28"},{"lineNumber":318,"author":{"gitId":"tsinyee"},"content":"    public void parseTotalAttendance_validValueWithoutWhitespace_returnsTotalAttendance() throws Exception {","lastModifiedDate":"2021-10-28"},{"lineNumber":319,"author":{"gitId":"tsinyee"},"content":"        TotalAttendance expectedTotalAttendance \u003d new TotalAttendance(3);","lastModifiedDate":"2021-10-28"},{"lineNumber":320,"author":{"gitId":"tsinyee"},"content":"        assertEquals(expectedTotalAttendance, ParserUtil.parseTotalAttendance(VALID_TOTAL_ATTENDANCE));","lastModifiedDate":"2021-10-28"},{"lineNumber":321,"author":{"gitId":"tsinyee"},"content":"    }","lastModifiedDate":"2021-10-28"},{"lineNumber":322,"author":{"gitId":"tsinyee"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":323,"author":{"gitId":"tsinyee"},"content":"    @Test","lastModifiedDate":"2021-10-28"},{"lineNumber":324,"author":{"gitId":"tsinyee"},"content":"    public void parseTotalAttendance_validValueWithWhitespace_returnsTotalAttendance() throws Exception {","lastModifiedDate":"2021-10-28"},{"lineNumber":325,"author":{"gitId":"tsinyee"},"content":"        String totalAttendanceWithWhiteSpace \u003d WHITESPACE + VALID_TOTAL_ATTENDANCE + WHITESPACE;","lastModifiedDate":"2021-10-28"},{"lineNumber":326,"author":{"gitId":"tsinyee"},"content":"        TotalAttendance expectedTotalAttendance \u003d new TotalAttendance(3);","lastModifiedDate":"2021-10-28"},{"lineNumber":327,"author":{"gitId":"tsinyee"},"content":"        assertEquals(expectedTotalAttendance, ParserUtil.parseTotalAttendance(totalAttendanceWithWhiteSpace));","lastModifiedDate":"2021-10-28"},{"lineNumber":328,"author":{"gitId":"tsinyee"},"content":"    }","lastModifiedDate":"2021-10-28"},{"lineNumber":329,"author":{"gitId":"tsinyee"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":330,"author":{"gitId":"YoYoCiti"},"content":"    @Test","lastModifiedDate":"2021-10-18"},{"lineNumber":331,"author":{"gitId":"YoYoCiti"},"content":"    public void parseShortcut_null_throwsNullPointerException() {","lastModifiedDate":"2021-10-18"},{"lineNumber":332,"author":{"gitId":"YoYoCiti"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseShortcut((String) null));","lastModifiedDate":"2021-10-18"},{"lineNumber":333,"author":{"gitId":"YoYoCiti"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":334,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":335,"author":{"gitId":"YoYoCiti"},"content":"    @Test","lastModifiedDate":"2021-10-18"},{"lineNumber":336,"author":{"gitId":"YoYoCiti"},"content":"    public void parseShortcut_invalidValue_throwsParseException() {","lastModifiedDate":"2021-10-18"},{"lineNumber":337,"author":{"gitId":"YoYoCiti"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseShortcut(\"   \"));","lastModifiedDate":"2021-10-18"},{"lineNumber":338,"author":{"gitId":"YoYoCiti"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":339,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":340,"author":{"gitId":"YoYoCiti"},"content":"    @Test","lastModifiedDate":"2021-10-18"},{"lineNumber":341,"author":{"gitId":"YoYoCiti"},"content":"    public void parseShortcut_validValueWithoutWhitespace_returnsShortcut() throws Exception {","lastModifiedDate":"2021-10-18"},{"lineNumber":342,"author":{"gitId":"YoYoCiti"},"content":"        Shortcut expectedShortcut \u003d new Shortcut(\"lf\");","lastModifiedDate":"2021-10-18"},{"lineNumber":343,"author":{"gitId":"YoYoCiti"},"content":"        assertEquals(expectedShortcut, ParserUtil.parseShortcut(\"lf\"));","lastModifiedDate":"2021-10-18"},{"lineNumber":344,"author":{"gitId":"YoYoCiti"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":345,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":346,"author":{"gitId":"YoYoCiti"},"content":"    @Test","lastModifiedDate":"2021-10-18"},{"lineNumber":347,"author":{"gitId":"YoYoCiti"},"content":"    public void parseShortcut_validValueWithWhitespace_returnsTrimmedShortcut() throws Exception {","lastModifiedDate":"2021-10-18"},{"lineNumber":348,"author":{"gitId":"YoYoCiti"},"content":"        String shortcutWithWhitespace \u003d WHITESPACE + \"lf\" + WHITESPACE;","lastModifiedDate":"2021-10-18"},{"lineNumber":349,"author":{"gitId":"YoYoCiti"},"content":"        Shortcut expectedShortcut \u003d new Shortcut(\"lf\");","lastModifiedDate":"2021-10-18"},{"lineNumber":350,"author":{"gitId":"YoYoCiti"},"content":"        assertEquals(expectedShortcut, ParserUtil.parseShortcut(shortcutWithWhitespace));","lastModifiedDate":"2021-10-18"},{"lineNumber":351,"author":{"gitId":"YoYoCiti"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":352,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":353,"author":{"gitId":"YoYoCiti"},"content":"    @Test","lastModifiedDate":"2021-10-18"},{"lineNumber":354,"author":{"gitId":"YoYoCiti"},"content":"    public void parseCommandWord_null_throwsNullPointerException() {","lastModifiedDate":"2021-10-18"},{"lineNumber":355,"author":{"gitId":"YoYoCiti"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseCommandWord((String) null));","lastModifiedDate":"2021-10-18"},{"lineNumber":356,"author":{"gitId":"YoYoCiti"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":357,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":358,"author":{"gitId":"YoYoCiti"},"content":"    @Test","lastModifiedDate":"2021-10-18"},{"lineNumber":359,"author":{"gitId":"YoYoCiti"},"content":"    public void parseCommandWord_invalidValue_throwsParseException() {","lastModifiedDate":"2021-10-18"},{"lineNumber":360,"author":{"gitId":"YoYoCiti"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseCommandWord(\"   \"));","lastModifiedDate":"2021-10-18"},{"lineNumber":361,"author":{"gitId":"YoYoCiti"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseCommandWord(\"bing\"));","lastModifiedDate":"2021-10-18"},{"lineNumber":362,"author":{"gitId":"YoYoCiti"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":363,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":364,"author":{"gitId":"YoYoCiti"},"content":"    @Test","lastModifiedDate":"2021-10-18"},{"lineNumber":365,"author":{"gitId":"YoYoCiti"},"content":"    public void parseCommandWord_validValueWithoutWhitespace_returnsCommandWord() throws Exception {","lastModifiedDate":"2021-10-18"},{"lineNumber":366,"author":{"gitId":"YoYoCiti"},"content":"        CommandWord expectedCommandWord \u003d new CommandWord(\"listf\");","lastModifiedDate":"2021-10-18"},{"lineNumber":367,"author":{"gitId":"YoYoCiti"},"content":"        assertEquals(expectedCommandWord, ParserUtil.parseCommandWord(\"listf\"));","lastModifiedDate":"2021-10-18"},{"lineNumber":368,"author":{"gitId":"YoYoCiti"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":369,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":370,"author":{"gitId":"YoYoCiti"},"content":"    @Test","lastModifiedDate":"2021-10-18"},{"lineNumber":371,"author":{"gitId":"YoYoCiti"},"content":"    public void parseCommandWord_validValueWithWhitespace_returnsTrimmedCommandWord() throws Exception {","lastModifiedDate":"2021-10-18"},{"lineNumber":372,"author":{"gitId":"YoYoCiti"},"content":"        String commandWordWithWhitespace \u003d WHITESPACE + \"listf\" + WHITESPACE;","lastModifiedDate":"2021-10-18"},{"lineNumber":373,"author":{"gitId":"YoYoCiti"},"content":"        CommandWord expectedCommandWord \u003d new CommandWord(\"listf\");","lastModifiedDate":"2021-10-18"},{"lineNumber":374,"author":{"gitId":"YoYoCiti"},"content":"        assertEquals(expectedCommandWord, ParserUtil.parseCommandWord(commandWordWithWhitespace));","lastModifiedDate":"2021-10-18"},{"lineNumber":375,"author":{"gitId":"YoYoCiti"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":376,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-22"}],"authorContributionMap":{"YoYoCiti":52,"Shruthi0310":46,"-":170,"tsinyee":108}},{"path":"src/test/java/seedu/address/logic/parser/SetMemberAvailabilityCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"felix-ong"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-10-16"},{"lineNumber":2,"author":{"gitId":"felix-ong"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":3,"author":{"gitId":"felix-ong"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-16"},{"lineNumber":4,"author":{"gitId":"felix-ong"},"content":"import static seedu.address.logic.commands.CommandTestUtil.AVAILABILITY_DESC_BOB;","lastModifiedDate":"2021-10-16"},{"lineNumber":5,"author":{"gitId":"felix-ong"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_AVAILABILITY_DESC;","lastModifiedDate":"2021-10-16"},{"lineNumber":6,"author":{"gitId":"YoYoCiti"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_BOB;","lastModifiedDate":"2021-10-19"},{"lineNumber":7,"author":{"gitId":"felix-ong"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2021-10-16"},{"lineNumber":8,"author":{"gitId":"felix-ong"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2021-10-16"},{"lineNumber":9,"author":{"gitId":"felix-ong"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":10,"author":{"gitId":"felix-ong"},"content":"import java.time.DayOfWeek;","lastModifiedDate":"2021-10-16"},{"lineNumber":11,"author":{"gitId":"felix-ong"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-16"},{"lineNumber":12,"author":{"gitId":"felix-ong"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-10-16"},{"lineNumber":13,"author":{"gitId":"felix-ong"},"content":"import java.util.List;","lastModifiedDate":"2021-10-16"},{"lineNumber":14,"author":{"gitId":"felix-ong"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":15,"author":{"gitId":"felix-ong"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-16"},{"lineNumber":16,"author":{"gitId":"felix-ong"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":17,"author":{"gitId":"felix-ong"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-10-16"},{"lineNumber":18,"author":{"gitId":"felix-ong"},"content":"import seedu.address.logic.commands.SetMemberAvailabilityCommand;","lastModifiedDate":"2021-10-16"},{"lineNumber":19,"author":{"gitId":"felix-ong"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-16"},{"lineNumber":20,"author":{"gitId":"felix-ong"},"content":"import seedu.address.model.person.Availability;","lastModifiedDate":"2021-10-16"},{"lineNumber":21,"author":{"gitId":"felix-ong"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":22,"author":{"gitId":"felix-ong"},"content":"public class SetMemberAvailabilityCommandParserTest {","lastModifiedDate":"2021-10-16"},{"lineNumber":23,"author":{"gitId":"felix-ong"},"content":"    private SetMemberAvailabilityCommandParser parser \u003d new SetMemberAvailabilityCommandParser();","lastModifiedDate":"2021-10-16"},{"lineNumber":24,"author":{"gitId":"felix-ong"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":25,"author":{"gitId":"felix-ong"},"content":"    @Test","lastModifiedDate":"2021-10-16"},{"lineNumber":26,"author":{"gitId":"felix-ong"},"content":"    public void parse_emptyArgs_exceptionThrown() {","lastModifiedDate":"2021-10-16"},{"lineNumber":27,"author":{"gitId":"felix-ong"},"content":"        assertParseFailure(parser, \" \",","lastModifiedDate":"2021-10-16"},{"lineNumber":28,"author":{"gitId":"felix-ong"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, SetMemberAvailabilityCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-16"},{"lineNumber":29,"author":{"gitId":"felix-ong"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":30,"author":{"gitId":"felix-ong"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":31,"author":{"gitId":"felix-ong"},"content":"    @Test","lastModifiedDate":"2021-10-16"},{"lineNumber":32,"author":{"gitId":"felix-ong"},"content":"    public void parse_emptyIndices_exceptionThrown() {","lastModifiedDate":"2021-10-16"},{"lineNumber":33,"author":{"gitId":"felix-ong"},"content":"        assertParseFailure(parser, AVAILABILITY_DESC_BOB,","lastModifiedDate":"2021-10-16"},{"lineNumber":34,"author":{"gitId":"felix-ong"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, SetMemberAvailabilityCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-16"},{"lineNumber":35,"author":{"gitId":"felix-ong"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":36,"author":{"gitId":"felix-ong"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":37,"author":{"gitId":"felix-ong"},"content":"    @Test","lastModifiedDate":"2021-10-16"},{"lineNumber":38,"author":{"gitId":"felix-ong"},"content":"    public void parse_multipleIndicesMultipleAvailability_success() throws ParseException {","lastModifiedDate":"2021-10-16"},{"lineNumber":39,"author":{"gitId":"felix-ong"},"content":"        List\u003cIndex\u003e expectedIndices \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-16"},{"lineNumber":40,"author":{"gitId":"felix-ong"},"content":"        String indicesString \u003d \"1 2 3\";","lastModifiedDate":"2021-10-16"},{"lineNumber":41,"author":{"gitId":"felix-ong"},"content":"        String[] indicesArray \u003d indicesString.split(\" \");","lastModifiedDate":"2021-10-16"},{"lineNumber":42,"author":{"gitId":"felix-ong"},"content":"        for (String s : indicesArray) {","lastModifiedDate":"2021-10-16"},{"lineNumber":43,"author":{"gitId":"felix-ong"},"content":"            expectedIndices.add(ParserUtil.parseIndex(s));","lastModifiedDate":"2021-10-16"},{"lineNumber":44,"author":{"gitId":"felix-ong"},"content":"        }","lastModifiedDate":"2021-10-16"},{"lineNumber":45,"author":{"gitId":"felix-ong"},"content":"        List\u003cDayOfWeek\u003e expectedAvailability \u003d Arrays.asList(DayOfWeek.MONDAY, DayOfWeek.TUESDAY, DayOfWeek.WEDNESDAY);","lastModifiedDate":"2021-10-16"},{"lineNumber":46,"author":{"gitId":"felix-ong"},"content":"        assertParseSuccess(parser, \"1 2 3\" + AVAILABILITY_DESC_BOB,","lastModifiedDate":"2021-10-16"},{"lineNumber":47,"author":{"gitId":"felix-ong"},"content":"                new SetMemberAvailabilityCommand(expectedIndices, new Availability(expectedAvailability)));","lastModifiedDate":"2021-10-16"},{"lineNumber":48,"author":{"gitId":"felix-ong"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":49,"author":{"gitId":"felix-ong"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":50,"author":{"gitId":"felix-ong"},"content":"    @Test","lastModifiedDate":"2021-10-16"},{"lineNumber":51,"author":{"gitId":"felix-ong"},"content":"    public void parse_compulsoryFieldMissing_failure() {","lastModifiedDate":"2021-10-16"},{"lineNumber":52,"author":{"gitId":"felix-ong"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2021-10-16"},{"lineNumber":53,"author":{"gitId":"felix-ong"},"content":"                SetMemberAvailabilityCommand.MESSAGE_USAGE);","lastModifiedDate":"2021-10-16"},{"lineNumber":54,"author":{"gitId":"felix-ong"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":55,"author":{"gitId":"felix-ong"},"content":"        // missing index/indices","lastModifiedDate":"2021-10-16"},{"lineNumber":56,"author":{"gitId":"felix-ong"},"content":"        assertParseFailure(parser, AVAILABILITY_DESC_BOB, expectedMessage);","lastModifiedDate":"2021-10-16"},{"lineNumber":57,"author":{"gitId":"felix-ong"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":58,"author":{"gitId":"felix-ong"},"content":"        // missing availability prefix","lastModifiedDate":"2021-10-16"},{"lineNumber":59,"author":{"gitId":"YoYoCiti"},"content":"        assertParseFailure(parser, \"1 2 3\" + NAME_DESC_BOB, expectedMessage);","lastModifiedDate":"2021-10-19"},{"lineNumber":60,"author":{"gitId":"felix-ong"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":61,"author":{"gitId":"felix-ong"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":62,"author":{"gitId":"felix-ong"},"content":"    @Test","lastModifiedDate":"2021-10-16"},{"lineNumber":63,"author":{"gitId":"felix-ong"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2021-10-16"},{"lineNumber":64,"author":{"gitId":"felix-ong"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2021-10-16"},{"lineNumber":65,"author":{"gitId":"felix-ong"},"content":"                SetMemberAvailabilityCommand.MESSAGE_USAGE);","lastModifiedDate":"2021-10-16"},{"lineNumber":66,"author":{"gitId":"felix-ong"},"content":"        // invalid index/indices","lastModifiedDate":"2021-10-16"},{"lineNumber":67,"author":{"gitId":"felix-ong"},"content":"        assertParseFailure(parser, \"one two three\" + AVAILABILITY_DESC_BOB, expectedMessage);","lastModifiedDate":"2021-10-16"},{"lineNumber":68,"author":{"gitId":"felix-ong"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":69,"author":{"gitId":"felix-ong"},"content":"        // invalid availability","lastModifiedDate":"2021-10-16"},{"lineNumber":70,"author":{"gitId":"felix-ong"},"content":"        assertParseFailure(parser, \"1 2 3\" + INVALID_AVAILABILITY_DESC, Availability.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-16"},{"lineNumber":71,"author":{"gitId":"felix-ong"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":72,"author":{"gitId":"felix-ong"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":73,"author":{"gitId":"felix-ong"},"content":"    @Test","lastModifiedDate":"2021-10-16"},{"lineNumber":74,"author":{"gitId":"felix-ong"},"content":"    public void parse_emptyAvailability_success() throws ParseException {","lastModifiedDate":"2021-10-16"},{"lineNumber":75,"author":{"gitId":"felix-ong"},"content":"        List\u003cIndex\u003e expectedIndices \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-16"},{"lineNumber":76,"author":{"gitId":"felix-ong"},"content":"        String indicesString \u003d \"1 2 3\";","lastModifiedDate":"2021-10-16"},{"lineNumber":77,"author":{"gitId":"felix-ong"},"content":"        String[] indicesArray \u003d indicesString.split(\" \");","lastModifiedDate":"2021-10-16"},{"lineNumber":78,"author":{"gitId":"felix-ong"},"content":"        for (String s : indicesArray) {","lastModifiedDate":"2021-10-16"},{"lineNumber":79,"author":{"gitId":"felix-ong"},"content":"            expectedIndices.add(ParserUtil.parseIndex(s));","lastModifiedDate":"2021-10-16"},{"lineNumber":80,"author":{"gitId":"felix-ong"},"content":"        }","lastModifiedDate":"2021-10-16"},{"lineNumber":81,"author":{"gitId":"felix-ong"},"content":"        assertParseSuccess(parser, \"1 2 3\" + \" d/\",","lastModifiedDate":"2021-10-16"},{"lineNumber":82,"author":{"gitId":"felix-ong"},"content":"                new SetMemberAvailabilityCommand(expectedIndices, new Availability(new ArrayList\u003c\u003e())));","lastModifiedDate":"2021-10-16"},{"lineNumber":83,"author":{"gitId":"felix-ong"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":84,"author":{"gitId":"felix-ong"},"content":"}","lastModifiedDate":"2021-10-16"}],"authorContributionMap":{"YoYoCiti":2,"felix-ong":82}},{"path":"src/test/java/seedu/address/logic/parser/SortMemberCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"tsinyee"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-10-24"},{"lineNumber":2,"author":{"gitId":"tsinyee"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":3,"author":{"gitId":"tsinyee"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-24"},{"lineNumber":4,"author":{"gitId":"tsinyee"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_SORT_ORDER_DESC;","lastModifiedDate":"2021-10-24"},{"lineNumber":5,"author":{"gitId":"tsinyee"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PREAMBLE_WHITESPACE;","lastModifiedDate":"2021-10-24"},{"lineNumber":6,"author":{"gitId":"tsinyee"},"content":"import static seedu.address.logic.commands.CommandTestUtil.SORT_ORDER_DESC_NAME;","lastModifiedDate":"2021-10-24"},{"lineNumber":7,"author":{"gitId":"tsinyee"},"content":"import static seedu.address.logic.commands.CommandTestUtil.SORT_ORDER_DESC_TAG;","lastModifiedDate":"2021-10-24"},{"lineNumber":8,"author":{"gitId":"tsinyee"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_SORT_ORDER_NAME;","lastModifiedDate":"2021-10-24"},{"lineNumber":9,"author":{"gitId":"tsinyee"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2021-10-24"},{"lineNumber":10,"author":{"gitId":"tsinyee"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2021-10-24"},{"lineNumber":11,"author":{"gitId":"tsinyee"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":12,"author":{"gitId":"tsinyee"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-24"},{"lineNumber":13,"author":{"gitId":"tsinyee"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":14,"author":{"gitId":"tsinyee"},"content":"import seedu.address.logic.commands.SortMemberCommand;","lastModifiedDate":"2021-10-24"},{"lineNumber":15,"author":{"gitId":"tsinyee"},"content":"import seedu.address.model.sort.SortOrder;","lastModifiedDate":"2021-10-24"},{"lineNumber":16,"author":{"gitId":"tsinyee"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":17,"author":{"gitId":"tsinyee"},"content":"public class SortMemberCommandParserTest {","lastModifiedDate":"2021-10-24"},{"lineNumber":18,"author":{"gitId":"tsinyee"},"content":"    private SortMemberCommandParser parser \u003d new SortMemberCommandParser();","lastModifiedDate":"2021-10-24"},{"lineNumber":19,"author":{"gitId":"tsinyee"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":20,"author":{"gitId":"tsinyee"},"content":"    @Test","lastModifiedDate":"2021-10-24"},{"lineNumber":21,"author":{"gitId":"tsinyee"},"content":"    public void parse_allFieldsPresent_success() {","lastModifiedDate":"2021-10-24"},{"lineNumber":22,"author":{"gitId":"tsinyee"},"content":"        SortOrder expectedSortOrder \u003d new SortOrder(VALID_SORT_ORDER_NAME);","lastModifiedDate":"2021-10-24"},{"lineNumber":23,"author":{"gitId":"tsinyee"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":24,"author":{"gitId":"tsinyee"},"content":"        // whitespace only preamble","lastModifiedDate":"2021-10-24"},{"lineNumber":25,"author":{"gitId":"tsinyee"},"content":"        assertParseSuccess(parser, PREAMBLE_WHITESPACE + SORT_ORDER_DESC_NAME,","lastModifiedDate":"2021-10-24"},{"lineNumber":26,"author":{"gitId":"tsinyee"},"content":"                new SortMemberCommand(expectedSortOrder));","lastModifiedDate":"2021-10-24"},{"lineNumber":27,"author":{"gitId":"tsinyee"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":28,"author":{"gitId":"tsinyee"},"content":"        // multiple sort orders - last sort order accepted","lastModifiedDate":"2021-10-24"},{"lineNumber":29,"author":{"gitId":"tsinyee"},"content":"        assertParseSuccess(parser, SORT_ORDER_DESC_TAG + SORT_ORDER_DESC_NAME,","lastModifiedDate":"2021-10-24"},{"lineNumber":30,"author":{"gitId":"tsinyee"},"content":"                new SortMemberCommand(expectedSortOrder));","lastModifiedDate":"2021-10-24"},{"lineNumber":31,"author":{"gitId":"tsinyee"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":32,"author":{"gitId":"tsinyee"},"content":"        // invalid sort order followed by valid sort order","lastModifiedDate":"2021-10-24"},{"lineNumber":33,"author":{"gitId":"tsinyee"},"content":"        assertParseSuccess(parser, INVALID_SORT_ORDER_DESC + SORT_ORDER_DESC_NAME,","lastModifiedDate":"2021-10-24"},{"lineNumber":34,"author":{"gitId":"tsinyee"},"content":"                new SortMemberCommand(expectedSortOrder));","lastModifiedDate":"2021-10-24"},{"lineNumber":35,"author":{"gitId":"tsinyee"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":36,"author":{"gitId":"tsinyee"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":37,"author":{"gitId":"tsinyee"},"content":"    @Test","lastModifiedDate":"2021-10-24"},{"lineNumber":38,"author":{"gitId":"tsinyee"},"content":"    public void parse_compulsoryFieldMissing_failure() {","lastModifiedDate":"2021-10-24"},{"lineNumber":39,"author":{"gitId":"tsinyee"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, SortMemberCommand.MESSAGE_USAGE);","lastModifiedDate":"2021-10-24"},{"lineNumber":40,"author":{"gitId":"tsinyee"},"content":"        // missing sort order prefix","lastModifiedDate":"2021-10-24"},{"lineNumber":41,"author":{"gitId":"tsinyee"},"content":"        assertParseFailure(parser, VALID_SORT_ORDER_NAME, expectedMessage);","lastModifiedDate":"2021-10-24"},{"lineNumber":42,"author":{"gitId":"tsinyee"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":43,"author":{"gitId":"tsinyee"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":44,"author":{"gitId":"tsinyee"},"content":"    @Test","lastModifiedDate":"2021-10-24"},{"lineNumber":45,"author":{"gitId":"tsinyee"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2021-10-24"},{"lineNumber":46,"author":{"gitId":"tsinyee"},"content":"        // invalid sort order","lastModifiedDate":"2021-10-24"},{"lineNumber":47,"author":{"gitId":"tsinyee"},"content":"        assertParseFailure(parser, INVALID_SORT_ORDER_DESC, SortOrder.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-24"},{"lineNumber":48,"author":{"gitId":"tsinyee"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":49,"author":{"gitId":"tsinyee"},"content":"        // valid sort order followed by invalid sort order","lastModifiedDate":"2021-10-24"},{"lineNumber":50,"author":{"gitId":"tsinyee"},"content":"        assertParseFailure(parser, SORT_ORDER_DESC_NAME + INVALID_SORT_ORDER_DESC, SortOrder.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-24"},{"lineNumber":51,"author":{"gitId":"tsinyee"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":52,"author":{"gitId":"tsinyee"},"content":"}","lastModifiedDate":"2021-10-24"}],"authorContributionMap":{"tsinyee":52}},{"path":"src/test/java/seedu/address/logic/parser/SplitCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Shruthi0310"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-10-12"},{"lineNumber":2,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":3,"author":{"gitId":"Shruthi0310"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-12"},{"lineNumber":4,"author":{"gitId":"Shruthi0310"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2021-10-12"},{"lineNumber":5,"author":{"gitId":"Shruthi0310"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2021-10-12"},{"lineNumber":6,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":7,"author":{"gitId":"Shruthi0310"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-12"},{"lineNumber":8,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":9,"author":{"gitId":"Shruthi0310"},"content":"import seedu.address.logic.commands.SplitCommand;","lastModifiedDate":"2021-10-12"},{"lineNumber":10,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":11,"author":{"gitId":"Shruthi0310"},"content":"public class SplitCommandParserTest {","lastModifiedDate":"2021-10-12"},{"lineNumber":12,"author":{"gitId":"Shruthi0310"},"content":"    private SplitCommandParser parser \u003d new SplitCommandParser();","lastModifiedDate":"2021-10-12"},{"lineNumber":13,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":14,"author":{"gitId":"Shruthi0310"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":15,"author":{"gitId":"Shruthi0310"},"content":"    public void parse_emptyArgs_exceptionThrown() {","lastModifiedDate":"2021-10-12"},{"lineNumber":16,"author":{"gitId":"Shruthi0310"},"content":"        assertParseFailure(parser, \"      \",","lastModifiedDate":"2021-10-12"},{"lineNumber":17,"author":{"gitId":"Shruthi0310"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, SplitCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-12"},{"lineNumber":18,"author":{"gitId":"Shruthi0310"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":19,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":20,"author":{"gitId":"Shruthi0310"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":21,"author":{"gitId":"Shruthi0310"},"content":"    public void parse_validArgs_returnsSplitCommand() {","lastModifiedDate":"2021-10-12"},{"lineNumber":22,"author":{"gitId":"felix-ong"},"content":"        SplitCommand expectedSplitCommand \u003d new SplitCommand(1);","lastModifiedDate":"2021-10-16"},{"lineNumber":23,"author":{"gitId":"felix-ong"},"content":"        assertParseSuccess(parser, \"1\", expectedSplitCommand);","lastModifiedDate":"2021-10-16"},{"lineNumber":24,"author":{"gitId":"felix-ong"},"content":"        assertParseSuccess(parser, \"\\n  \\t 1  \\t \", expectedSplitCommand);","lastModifiedDate":"2021-10-16"},{"lineNumber":25,"author":{"gitId":"Shruthi0310"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":26,"author":{"gitId":"felix-ong"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":27,"author":{"gitId":"felix-ong"},"content":"    @Test","lastModifiedDate":"2021-10-19"},{"lineNumber":28,"author":{"gitId":"felix-ong"},"content":"    public void parse_invalidArgs_returnsSplitCommand() {","lastModifiedDate":"2021-10-19"},{"lineNumber":29,"author":{"gitId":"felix-ong"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, SplitCommand.MESSAGE_USAGE);","lastModifiedDate":"2021-10-19"},{"lineNumber":30,"author":{"gitId":"felix-ong"},"content":"        assertParseFailure(parser, \"0\", expectedMessage);","lastModifiedDate":"2021-10-19"},{"lineNumber":31,"author":{"gitId":"felix-ong"},"content":"        assertParseFailure(parser, \"8\", expectedMessage);","lastModifiedDate":"2021-10-19"},{"lineNumber":32,"author":{"gitId":"felix-ong"},"content":"        assertParseFailure(parser, \"one\", expectedMessage);","lastModifiedDate":"2021-10-19"},{"lineNumber":33,"author":{"gitId":"felix-ong"},"content":"        assertParseFailure(parser, \"seven\", expectedMessage);","lastModifiedDate":"2021-10-19"},{"lineNumber":34,"author":{"gitId":"felix-ong"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":35,"author":{"gitId":"Shruthi0310"},"content":"}","lastModifiedDate":"2021-10-12"}],"authorContributionMap":{"Shruthi0310":23,"felix-ong":12}},{"path":"src/test/java/seedu/address/logic/parser/UnmarkAttendanceCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Shruthi0310"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-10-21"},{"lineNumber":2,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":3,"author":{"gitId":"Shruthi0310"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2021-10-21"},{"lineNumber":4,"author":{"gitId":"Shruthi0310"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2021-10-21"},{"lineNumber":5,"author":{"gitId":"Shruthi0310"},"content":"import static seedu.address.logic.parser.ParserUtil.MESSAGE_INVALID_INDEX;","lastModifiedDate":"2021-10-21"},{"lineNumber":6,"author":{"gitId":"Shruthi0310"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST;","lastModifiedDate":"2021-10-21"},{"lineNumber":7,"author":{"gitId":"Shruthi0310"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_THIRD;","lastModifiedDate":"2021-10-21"},{"lineNumber":8,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":9,"author":{"gitId":"Shruthi0310"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-10-21"},{"lineNumber":10,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":11,"author":{"gitId":"Shruthi0310"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-21"},{"lineNumber":12,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":13,"author":{"gitId":"Shruthi0310"},"content":"import seedu.address.logic.commands.UnmarkAttendanceCommand;","lastModifiedDate":"2021-10-21"},{"lineNumber":14,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":15,"author":{"gitId":"Shruthi0310"},"content":"class UnmarkAttendanceCommandParserTest {","lastModifiedDate":"2021-10-21"},{"lineNumber":16,"author":{"gitId":"Shruthi0310"},"content":"    private UnmarkAttendanceCommandParser parser \u003d new UnmarkAttendanceCommandParser();","lastModifiedDate":"2021-10-21"},{"lineNumber":17,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":18,"author":{"gitId":"Shruthi0310"},"content":"    @Test","lastModifiedDate":"2021-10-21"},{"lineNumber":19,"author":{"gitId":"Shruthi0310"},"content":"    public void parse_validArgs_returnsUnmarkAttendanceCommand() {","lastModifiedDate":"2021-10-21"},{"lineNumber":20,"author":{"gitId":"Shruthi0310"},"content":"        assertParseSuccess(parser, \"1 3\", new UnmarkAttendanceCommand(Arrays.asList(INDEX_FIRST,","lastModifiedDate":"2021-10-21"},{"lineNumber":21,"author":{"gitId":"Shruthi0310"},"content":"                INDEX_THIRD)));","lastModifiedDate":"2021-10-21"},{"lineNumber":22,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":23,"author":{"gitId":"Shruthi0310"},"content":"        assertParseSuccess(parser, \"1  \\n 3\", new UnmarkAttendanceCommand(Arrays.asList(INDEX_FIRST,","lastModifiedDate":"2021-10-21"},{"lineNumber":24,"author":{"gitId":"Shruthi0310"},"content":"                INDEX_THIRD)));","lastModifiedDate":"2021-10-21"},{"lineNumber":25,"author":{"gitId":"Shruthi0310"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":26,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":27,"author":{"gitId":"Shruthi0310"},"content":"    @Test","lastModifiedDate":"2021-10-21"},{"lineNumber":28,"author":{"gitId":"Shruthi0310"},"content":"    public void parse_invalidArgs_throwsCommandException() {","lastModifiedDate":"2021-10-21"},{"lineNumber":29,"author":{"gitId":"Shruthi0310"},"content":"        assertParseFailure(parser, \"a\", MESSAGE_INVALID_INDEX);","lastModifiedDate":"2021-10-21"},{"lineNumber":30,"author":{"gitId":"Shruthi0310"},"content":"        assertParseFailure(parser, \"-1\", MESSAGE_INVALID_INDEX);","lastModifiedDate":"2021-10-21"},{"lineNumber":31,"author":{"gitId":"Shruthi0310"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":32,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":33,"author":{"gitId":"Shruthi0310"},"content":"}","lastModifiedDate":"2021-10-21"}],"authorContributionMap":{"Shruthi0310":33}},{"path":"src/test/java/seedu/address/model/AddressBookTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-12-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":7,"author":{"gitId":"YoYoCiti"},"content":"import static seedu.address.testutil.TypicalAddressBook.getTypicalAddressBook;","lastModifiedDate":"2021-10-09"},{"lineNumber":8,"author":{"gitId":"Shruthi0310"},"content":"import static seedu.address.testutil.TypicalAddressBook.getTypicalAddressBookEmptyFacilityList;","lastModifiedDate":"2021-10-22"},{"lineNumber":9,"author":{"gitId":"Shruthi0310"},"content":"import static seedu.address.testutil.TypicalFacilities.FIELD;","lastModifiedDate":"2021-10-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2017-07-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2016-12-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2016-12-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2016-12-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2016-12-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-12-24"},{"lineNumber":21,"author":{"gitId":"Shruthi0310"},"content":"import javafx.collections.transformation.FilteredList;","lastModifiedDate":"2021-10-12"},{"lineNumber":22,"author":{"gitId":"Shruthi0310"},"content":"import seedu.address.model.facility.Facility;","lastModifiedDate":"2021-10-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-12-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.DuplicatePersonException;","lastModifiedDate":"2018-08-07"},{"lineNumber":25,"author":{"gitId":"Shruthi0310"},"content":"import seedu.address.testutil.FacilityBuilder;","lastModifiedDate":"2021-10-22"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2018-04-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"public class AddressBookTest {","lastModifiedDate":"2016-12-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private final AddressBook addressBook \u003d new AddressBook();","lastModifiedDate":"2016-12-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public void constructor() {","lastModifiedDate":"2016-12-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertEquals(Collections.emptyList(), addressBook.getPersonList());","lastModifiedDate":"2016-12-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public void resetData_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e addressBook.resetData(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void resetData_withValidReadOnlyAddressBook_replacesData() {","lastModifiedDate":"2016-12-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        AddressBook newData \u003d getTypicalAddressBook();","lastModifiedDate":"2017-07-19"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        addressBook.resetData(newData);","lastModifiedDate":"2016-12-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertEquals(newData, addressBook);","lastModifiedDate":"2016-12-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void resetData_withDuplicatePersons_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-07"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // Two persons with the same identity fields","lastModifiedDate":"2018-04-19"},{"lineNumber":52,"author":{"gitId":"tsinyee"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).build();","lastModifiedDate":"2021-10-10"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e newPersons \u003d Arrays.asList(ALICE, editedAlice);","lastModifiedDate":"2018-04-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        AddressBookStub newData \u003d new AddressBookStub(newPersons);","lastModifiedDate":"2018-03-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e addressBook.resetData(newData));","lastModifiedDate":"2019-03-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void hasPerson_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-06"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e addressBook.hasPerson(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void hasPerson_personNotInAddressBook_returnsFalse() {","lastModifiedDate":"2018-08-06"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertFalse(addressBook.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public void hasPerson_personInAddressBook_returnsTrue() {","lastModifiedDate":"2018-08-07"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        addressBook.addPerson(ALICE);","lastModifiedDate":"2018-08-06"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertTrue(addressBook.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public void hasPerson_personWithSameIdentityFieldsInAddressBook_returnsTrue() {","lastModifiedDate":"2018-08-07"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        addressBook.addPerson(ALICE);","lastModifiedDate":"2018-08-06"},{"lineNumber":78,"author":{"gitId":"tsinyee"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).build();","lastModifiedDate":"2021-10-10"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertTrue(addressBook.hasPerson(editedAlice));","lastModifiedDate":"2018-08-06"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void getPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e addressBook.getPersonList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":87,"author":{"gitId":"Shruthi0310"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":88,"author":{"gitId":"Shruthi0310"},"content":"    public void split_noPersonsInFilteredList_noChangesToFacilities() {","lastModifiedDate":"2021-10-12"},{"lineNumber":89,"author":{"gitId":"Shruthi0310"},"content":"        ObservableList\u003cPerson\u003e emptyPersonsList \u003d FXCollections.emptyObservableList();","lastModifiedDate":"2021-10-12"},{"lineNumber":90,"author":{"gitId":"Shruthi0310"},"content":"        FilteredList\u003cPerson\u003e emptyList \u003d new FilteredList\u003c\u003e(emptyPersonsList);","lastModifiedDate":"2021-10-12"},{"lineNumber":91,"author":{"gitId":"Shruthi0310"},"content":"        ObservableList\u003cFacility\u003e facilities \u003d addressBook.getFacilityList();","lastModifiedDate":"2021-10-12"},{"lineNumber":92,"author":{"gitId":"Shruthi0310"},"content":"        addressBook.split(emptyList);","lastModifiedDate":"2021-10-12"},{"lineNumber":93,"author":{"gitId":"Shruthi0310"},"content":"        assertEquals(facilities, addressBook.getFacilityList());","lastModifiedDate":"2021-10-12"},{"lineNumber":94,"author":{"gitId":"Shruthi0310"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":95,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":96,"author":{"gitId":"Shruthi0310"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":97,"author":{"gitId":"Shruthi0310"},"content":"    public void split_personPresentInFilteredList_facilitiesUpdate() {","lastModifiedDate":"2021-10-12"},{"lineNumber":98,"author":{"gitId":"Shruthi0310"},"content":"        AddressBook newData \u003d new AddressBook(getTypicalAddressBookEmptyFacilityList());","lastModifiedDate":"2021-10-22"},{"lineNumber":99,"author":{"gitId":"Shruthi0310"},"content":"        Facility firstFacility \u003d new FacilityBuilder(FIELD).build();","lastModifiedDate":"2021-10-22"},{"lineNumber":100,"author":{"gitId":"Shruthi0310"},"content":"        newData.addFacility(firstFacility);","lastModifiedDate":"2021-10-22"},{"lineNumber":101,"author":{"gitId":"Shruthi0310"},"content":"        FilteredList\u003cPerson\u003e filteredList \u003d new FilteredList\u003c\u003e(newData.getPersonList());","lastModifiedDate":"2021-10-22"},{"lineNumber":102,"author":{"gitId":"Shruthi0310"},"content":"        newData.split(filteredList);","lastModifiedDate":"2021-10-22"},{"lineNumber":103,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":104,"author":{"gitId":"Shruthi0310"},"content":"        Facility withAllocatedMembers \u003d new FacilityBuilder(FIELD).build();","lastModifiedDate":"2021-10-22"},{"lineNumber":105,"author":{"gitId":"Shruthi0310"},"content":"        for (Person person : filteredList) {","lastModifiedDate":"2021-10-22"},{"lineNumber":106,"author":{"gitId":"Shruthi0310"},"content":"            withAllocatedMembers.addPersonToFacility(person);","lastModifiedDate":"2021-10-22"},{"lineNumber":107,"author":{"gitId":"Shruthi0310"},"content":"        }","lastModifiedDate":"2021-10-22"},{"lineNumber":108,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":109,"author":{"gitId":"Shruthi0310"},"content":"        AddressBook expected \u003d new AddressBook(getTypicalAddressBookEmptyFacilityList());","lastModifiedDate":"2021-10-22"},{"lineNumber":110,"author":{"gitId":"Shruthi0310"},"content":"        expected.addFacility(withAllocatedMembers);","lastModifiedDate":"2021-10-22"},{"lineNumber":111,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":112,"author":{"gitId":"Shruthi0310"},"content":"        assertEquals(expected, newData);","lastModifiedDate":"2021-10-12"},{"lineNumber":113,"author":{"gitId":"Shruthi0310"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":114,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-24"},{"lineNumber":116,"author":{"gitId":"-"},"content":"     * A stub ReadOnlyAddressBook whose persons list can violate interface constraints.","lastModifiedDate":"2018-03-29"},{"lineNumber":117,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-24"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    private static class AddressBookStub implements ReadOnlyAddressBook {","lastModifiedDate":"2016-12-24"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        private final ObservableList\u003cPerson\u003e persons \u003d FXCollections.observableArrayList();","lastModifiedDate":"2018-01-10"},{"lineNumber":120,"author":{"gitId":"Shruthi0310"},"content":"        private final ObservableList\u003cFacility\u003e facilities \u003d FXCollections.observableArrayList();","lastModifiedDate":"2021-10-05"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        AddressBookStub(Collection\u003cPerson\u003e persons) {","lastModifiedDate":"2018-03-29"},{"lineNumber":123,"author":{"gitId":"-"},"content":"            this.persons.setAll(persons);","lastModifiedDate":"2016-12-24"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-12-24"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        public ObservableList\u003cPerson\u003e getPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":128,"author":{"gitId":"-"},"content":"            return persons;","lastModifiedDate":"2016-12-24"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":130,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":131,"author":{"gitId":"Shruthi0310"},"content":"        @Override","lastModifiedDate":"2021-10-05"},{"lineNumber":132,"author":{"gitId":"Shruthi0310"},"content":"        public ObservableList\u003cFacility\u003e getFacilityList() {","lastModifiedDate":"2021-10-05"},{"lineNumber":133,"author":{"gitId":"Shruthi0310"},"content":"            return facilities;","lastModifiedDate":"2021-10-05"},{"lineNumber":134,"author":{"gitId":"Shruthi0310"},"content":"        }","lastModifiedDate":"2021-10-05"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":137,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-24"}],"authorContributionMap":{"YoYoCiti":1,"Shruthi0310":39,"-":95,"tsinyee":2}},{"path":"src/test/java/seedu/address/model/ModelManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2017-05-31"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"Moley456"},"content":"import static org.junit.jupiter.api.Assertions.assertNull;","lastModifiedDate":"2021-10-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2017-08-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":9,"author":{"gitId":"Shruthi0310"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST;","lastModifiedDate":"2021-10-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2017-07-19"},{"lineNumber":11,"author":{"gitId":"Moley456"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE_DIFFERENT_PHONE;","lastModifiedDate":"2021-10-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BENSON;","lastModifiedDate":"2017-07-19"},{"lineNumber":13,"author":{"gitId":"Moley456"},"content":"import static seedu.address.testutil.TypicalPersons.BOB;","lastModifiedDate":"2021-10-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-31"},{"lineNumber":18,"author":{"gitId":"Shruthi0310"},"content":"import java.util.List;","lastModifiedDate":"2021-10-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":23,"author":{"gitId":"Shruthi0310"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-10-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"Shruthi0310"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2021-10-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.testutil.AddressBookBuilder;","lastModifiedDate":"2017-05-31"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":28,"author":{"gitId":"-"},"content":"public class ModelManagerTest {","lastModifiedDate":"2017-05-31"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private ModelManager modelManager \u003d new ModelManager();","lastModifiedDate":"2018-08-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public void constructor() {","lastModifiedDate":"2018-11-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertEquals(new UserPrefs(), modelManager.getUserPrefs());","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertEquals(new GuiSettings(), modelManager.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertEquals(new AddressBook(), new AddressBook(modelManager.getAddressBook()));","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public void setUserPrefs_nullUserPrefs_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setUserPrefs(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void setUserPrefs_validUserPrefs_copiesUserPrefs() {","lastModifiedDate":"2018-12-06"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(Paths.get(\"address/book/file/path\"));","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(new GuiSettings(1, 2, 3, 4));","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        modelManager.setUserPrefs(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertEquals(userPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        // Modifying userPrefs should not modify modelManager\u0027s userPrefs","lastModifiedDate":"2018-12-06"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        UserPrefs oldUserPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(Paths.get(\"new/address/book/file/path\"));","lastModifiedDate":"2018-12-06"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertEquals(oldUserPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2018-12-06"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public void setGuiSettings_nullGuiSettings_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setGuiSettings(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public void setGuiSettings_validGuiSettings_setsGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(1, 2, 3, 4);","lastModifiedDate":"2018-11-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        modelManager.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertEquals(guiSettings, modelManager.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath_nullPath_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setAddressBookFilePath(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath_validPath_setsAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        Path path \u003d Paths.get(\"address/book/file/path\");","lastModifiedDate":"2018-11-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        modelManager.setAddressBookFilePath(path);","lastModifiedDate":"2018-11-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertEquals(path, modelManager.getAddressBookFilePath());","lastModifiedDate":"2018-11-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void hasPerson_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-06"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.hasPerson(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public void hasPerson_personNotInAddressBook_returnsFalse() {","lastModifiedDate":"2018-08-06"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    public void hasPerson_personInAddressBook_returnsTrue() {","lastModifiedDate":"2018-08-07"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        modelManager.addPerson(ALICE);","lastModifiedDate":"2018-08-06"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":98,"author":{"gitId":"Moley456"},"content":"    @Test","lastModifiedDate":"2021-10-23"},{"lineNumber":99,"author":{"gitId":"Moley456"},"content":"    public void getSamePerson_personWithSameNameInAddressBook_returnsPersonWithSameName() {","lastModifiedDate":"2021-10-23"},{"lineNumber":100,"author":{"gitId":"Moley456"},"content":"        modelManager.addPerson(ALICE);","lastModifiedDate":"2021-10-23"},{"lineNumber":101,"author":{"gitId":"Moley456"},"content":"        assertEquals(modelManager.getSamePerson(ALICE_DIFFERENT_PHONE), ALICE);","lastModifiedDate":"2021-10-23"},{"lineNumber":102,"author":{"gitId":"Moley456"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":103,"author":{"gitId":"Moley456"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":104,"author":{"gitId":"Moley456"},"content":"    @Test","lastModifiedDate":"2021-10-23"},{"lineNumber":105,"author":{"gitId":"Moley456"},"content":"    public void getSamePerson_personWithSameNameNotInAddressBook_returnsNull() {","lastModifiedDate":"2021-10-23"},{"lineNumber":106,"author":{"gitId":"Moley456"},"content":"        assertNull(modelManager.getSamePerson(BOB));","lastModifiedDate":"2021-10-23"},{"lineNumber":107,"author":{"gitId":"Moley456"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":108,"author":{"gitId":"Moley456"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    public void getFilteredPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e modelManager.getFilteredPersonList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":114,"author":{"gitId":"YoYoCiti"},"content":"    @Test","lastModifiedDate":"2021-10-09"},{"lineNumber":115,"author":{"gitId":"YoYoCiti"},"content":"    public void getFilteredFacilityList_modifyList_throwsUnsupportedOperationsException() {","lastModifiedDate":"2021-10-09"},{"lineNumber":116,"author":{"gitId":"YoYoCiti"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e modelManager.getFilteredFacilityList().remove(0));","lastModifiedDate":"2021-10-09"},{"lineNumber":117,"author":{"gitId":"YoYoCiti"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":118,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":119,"author":{"gitId":"Shruthi0310"},"content":"    @Test","lastModifiedDate":"2021-10-21"},{"lineNumber":120,"author":{"gitId":"Shruthi0310"},"content":"    public void isWithinListIndex_validIndicies_returnsFalse() {","lastModifiedDate":"2021-10-21"},{"lineNumber":121,"author":{"gitId":"Shruthi0310"},"content":"        Person toAdd \u003d ALICE;","lastModifiedDate":"2021-10-21"},{"lineNumber":122,"author":{"gitId":"Shruthi0310"},"content":"        modelManager.addPerson(toAdd);","lastModifiedDate":"2021-10-21"},{"lineNumber":123,"author":{"gitId":"Shruthi0310"},"content":"        List\u003cIndex\u003e indices \u003d Arrays.asList(INDEX_FIRST);","lastModifiedDate":"2021-10-21"},{"lineNumber":124,"author":{"gitId":"Shruthi0310"},"content":"        assertTrue(modelManager.isWithinListIndex(indices));","lastModifiedDate":"2021-10-21"},{"lineNumber":125,"author":{"gitId":"Shruthi0310"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":126,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":127,"author":{"gitId":"Shruthi0310"},"content":"    @Test","lastModifiedDate":"2021-10-21"},{"lineNumber":128,"author":{"gitId":"Shruthi0310"},"content":"    public void isWithinListIndex_invalidIndices_returnsTrue() {","lastModifiedDate":"2021-10-21"},{"lineNumber":129,"author":{"gitId":"Shruthi0310"},"content":"        Index outOfBoundsIndex \u003d Index.fromOneBased(modelManager.getFilteredPersonList().size() + 1);","lastModifiedDate":"2021-10-21"},{"lineNumber":130,"author":{"gitId":"Shruthi0310"},"content":"        List\u003cIndex\u003e indices \u003d Arrays.asList(outOfBoundsIndex);","lastModifiedDate":"2021-10-21"},{"lineNumber":131,"author":{"gitId":"Shruthi0310"},"content":"        assertFalse(modelManager.isWithinListIndex(indices));","lastModifiedDate":"2021-10-21"},{"lineNumber":132,"author":{"gitId":"Shruthi0310"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-31"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        AddressBook addressBook \u003d new AddressBookBuilder().withPerson(ALICE).withPerson(BENSON).build();","lastModifiedDate":"2017-07-19"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        AddressBook differentAddressBook \u003d new AddressBook();","lastModifiedDate":"2017-05-31"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-05-31"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-31"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        modelManager \u003d new ModelManager(addressBook, userPrefs);","lastModifiedDate":"2018-08-06"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        ModelManager modelManagerCopy \u003d new ModelManager(addressBook, userPrefs);","lastModifiedDate":"2017-05-31"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.equals(modelManagerCopy));","lastModifiedDate":"2017-05-31"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-31"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.equals(modelManager));","lastModifiedDate":"2017-05-31"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(null));","lastModifiedDate":"2017-05-31"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(5));","lastModifiedDate":"2017-05-31"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        // different addressBook -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(new ModelManager(differentAddressBook, userPrefs)));","lastModifiedDate":"2017-05-31"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        // different filteredList -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        String[] keywords \u003d ALICE.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2017-07-19"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        modelManager.updateFilteredPersonList(new NameContainsKeywordsPredicate(Arrays.asList(keywords)));","lastModifiedDate":"2017-06-12"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(new ModelManager(addressBook, userPrefs)));","lastModifiedDate":"2017-05-31"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        // resets modelManager to initial state for upcoming tests","lastModifiedDate":"2017-08-05"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        modelManager.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        // different userPrefs -\u003e returns false","lastModifiedDate":"2018-11-27"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        UserPrefs differentUserPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-05-31"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        differentUserPrefs.setAddressBookFilePath(Paths.get(\"differentFilePath\"));","lastModifiedDate":"2018-08-09"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(new ModelManager(addressBook, differentUserPrefs)));","lastModifiedDate":"2018-11-27"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":169,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-31"}],"authorContributionMap":{"YoYoCiti":5,"Moley456":14,"Shruthi0310":18,"-":132}},{"path":"src/test/java/seedu/address/model/alias/AliasMapTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"YoYoCiti"},"content":"package seedu.address.model.alias;","lastModifiedDate":"2021-10-18"},{"lineNumber":2,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":3,"author":{"gitId":"YoYoCiti"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-17"},{"lineNumber":4,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":5,"author":{"gitId":"YoYoCiti"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-17"},{"lineNumber":6,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":7,"author":{"gitId":"YoYoCiti"},"content":"public class AliasMapTest {","lastModifiedDate":"2021-10-18"},{"lineNumber":8,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":9,"author":{"gitId":"YoYoCiti"},"content":"    @Test","lastModifiedDate":"2021-10-17"},{"lineNumber":10,"author":{"gitId":"YoYoCiti"},"content":"    public void convertAliasesIfPresent_present_success() {","lastModifiedDate":"2021-10-17"},{"lineNumber":11,"author":{"gitId":"YoYoCiti"},"content":"        AliasMap aliases \u003d new AliasMap();","lastModifiedDate":"2021-10-18"},{"lineNumber":12,"author":{"gitId":"YoYoCiti"},"content":"        aliases.add(new Alias(new Shortcut(\"lf\"), new CommandWord(\"listf\")));","lastModifiedDate":"2021-10-18"},{"lineNumber":13,"author":{"gitId":"YoYoCiti"},"content":"        assertEquals(\"listf\", aliases.convertAliasIfPresent(\"lf\"));","lastModifiedDate":"2021-10-17"},{"lineNumber":14,"author":{"gitId":"YoYoCiti"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":15,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":16,"author":{"gitId":"YoYoCiti"},"content":"    @Test","lastModifiedDate":"2021-10-17"},{"lineNumber":17,"author":{"gitId":"YoYoCiti"},"content":"    public void convertAliasesIfPresent_notPresent_success() {","lastModifiedDate":"2021-10-17"},{"lineNumber":18,"author":{"gitId":"YoYoCiti"},"content":"        AliasMap aliases \u003d new AliasMap();","lastModifiedDate":"2021-10-18"},{"lineNumber":19,"author":{"gitId":"YoYoCiti"},"content":"        assertEquals(\"listf\", aliases.convertAliasIfPresent(\"listf\"));","lastModifiedDate":"2021-10-17"},{"lineNumber":20,"author":{"gitId":"YoYoCiti"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":21,"author":{"gitId":"YoYoCiti"},"content":"}","lastModifiedDate":"2021-10-17"}],"authorContributionMap":{"YoYoCiti":21}},{"path":"src/test/java/seedu/address/model/alias/CommandWordTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"YoYoCiti"},"content":"package seedu.address.model.alias;","lastModifiedDate":"2021-10-18"},{"lineNumber":2,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":3,"author":{"gitId":"YoYoCiti"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-18"},{"lineNumber":4,"author":{"gitId":"YoYoCiti"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-18"},{"lineNumber":5,"author":{"gitId":"YoYoCiti"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-18"},{"lineNumber":6,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":7,"author":{"gitId":"YoYoCiti"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-18"},{"lineNumber":8,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":9,"author":{"gitId":"YoYoCiti"},"content":"public class CommandWordTest {","lastModifiedDate":"2021-10-18"},{"lineNumber":10,"author":{"gitId":"YoYoCiti"},"content":"    @Test","lastModifiedDate":"2021-10-18"},{"lineNumber":11,"author":{"gitId":"YoYoCiti"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2021-10-18"},{"lineNumber":12,"author":{"gitId":"YoYoCiti"},"content":"        assertThrows(NullPointerException.class, () -\u003e new CommandWord(null));","lastModifiedDate":"2021-10-18"},{"lineNumber":13,"author":{"gitId":"YoYoCiti"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":14,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":15,"author":{"gitId":"YoYoCiti"},"content":"    @Test","lastModifiedDate":"2021-10-18"},{"lineNumber":16,"author":{"gitId":"YoYoCiti"},"content":"    public void constructor_invalidCommandWord_throwsIllegalArgumentException() {","lastModifiedDate":"2021-10-18"},{"lineNumber":17,"author":{"gitId":"YoYoCiti"},"content":"        String invalidCommandWord \u003d \"bing\";","lastModifiedDate":"2021-10-18"},{"lineNumber":18,"author":{"gitId":"YoYoCiti"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new CommandWord(invalidCommandWord));","lastModifiedDate":"2021-10-18"},{"lineNumber":19,"author":{"gitId":"YoYoCiti"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":20,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":21,"author":{"gitId":"YoYoCiti"},"content":"    @Test","lastModifiedDate":"2021-10-18"},{"lineNumber":22,"author":{"gitId":"YoYoCiti"},"content":"    public void isValidCommandWord() {","lastModifiedDate":"2021-10-18"},{"lineNumber":23,"author":{"gitId":"YoYoCiti"},"content":"        // null command","lastModifiedDate":"2021-10-18"},{"lineNumber":24,"author":{"gitId":"YoYoCiti"},"content":"        assertThrows(NullPointerException.class, () -\u003e CommandWord.isValidCommandWord(null));","lastModifiedDate":"2021-10-18"},{"lineNumber":25,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":26,"author":{"gitId":"YoYoCiti"},"content":"        // invalid command","lastModifiedDate":"2021-10-18"},{"lineNumber":27,"author":{"gitId":"YoYoCiti"},"content":"        assertFalse(CommandWord.isValidCommandWord(\"\")); // empty string","lastModifiedDate":"2021-10-18"},{"lineNumber":28,"author":{"gitId":"YoYoCiti"},"content":"        assertFalse(CommandWord.isValidCommandWord(\" \")); // spaces only","lastModifiedDate":"2021-10-18"},{"lineNumber":29,"author":{"gitId":"YoYoCiti"},"content":"        assertFalse(CommandWord.isValidCommandWord(\"bingo\")); // Unknown command","lastModifiedDate":"2021-10-18"},{"lineNumber":30,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":31,"author":{"gitId":"YoYoCiti"},"content":"        // valid command","lastModifiedDate":"2021-10-18"},{"lineNumber":32,"author":{"gitId":"YoYoCiti"},"content":"        assertTrue(CommandWord.isValidCommandWord(\"listf\"));","lastModifiedDate":"2021-10-18"},{"lineNumber":33,"author":{"gitId":"YoYoCiti"},"content":"        assertTrue(CommandWord.isValidCommandWord(\"clearm\"));","lastModifiedDate":"2021-10-18"},{"lineNumber":34,"author":{"gitId":"YoYoCiti"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":35,"author":{"gitId":"YoYoCiti"},"content":"}","lastModifiedDate":"2021-10-18"}],"authorContributionMap":{"YoYoCiti":35}},{"path":"src/test/java/seedu/address/model/alias/ShortcutTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"YoYoCiti"},"content":"package seedu.address.model.alias;","lastModifiedDate":"2021-10-18"},{"lineNumber":2,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":3,"author":{"gitId":"YoYoCiti"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-18"},{"lineNumber":4,"author":{"gitId":"YoYoCiti"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-18"},{"lineNumber":5,"author":{"gitId":"YoYoCiti"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-18"},{"lineNumber":6,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":7,"author":{"gitId":"YoYoCiti"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-18"},{"lineNumber":8,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":9,"author":{"gitId":"YoYoCiti"},"content":"public class ShortcutTest {","lastModifiedDate":"2021-10-18"},{"lineNumber":10,"author":{"gitId":"YoYoCiti"},"content":"    @Test","lastModifiedDate":"2021-10-18"},{"lineNumber":11,"author":{"gitId":"YoYoCiti"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2021-10-18"},{"lineNumber":12,"author":{"gitId":"YoYoCiti"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Shortcut(null));","lastModifiedDate":"2021-10-18"},{"lineNumber":13,"author":{"gitId":"YoYoCiti"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":14,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":15,"author":{"gitId":"YoYoCiti"},"content":"    @Test","lastModifiedDate":"2021-10-18"},{"lineNumber":16,"author":{"gitId":"YoYoCiti"},"content":"    public void constructor_invalidShortcut_throwsIllegalArgumentException() {","lastModifiedDate":"2021-10-18"},{"lineNumber":17,"author":{"gitId":"YoYoCiti"},"content":"        String invalidShortcut \u003d \"\";","lastModifiedDate":"2021-10-18"},{"lineNumber":18,"author":{"gitId":"YoYoCiti"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Shortcut(invalidShortcut));","lastModifiedDate":"2021-10-18"},{"lineNumber":19,"author":{"gitId":"YoYoCiti"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":20,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":21,"author":{"gitId":"YoYoCiti"},"content":"    @Test","lastModifiedDate":"2021-10-18"},{"lineNumber":22,"author":{"gitId":"YoYoCiti"},"content":"    public void isValidShortcut() {","lastModifiedDate":"2021-10-18"},{"lineNumber":23,"author":{"gitId":"YoYoCiti"},"content":"        // null shortcut","lastModifiedDate":"2021-10-18"},{"lineNumber":24,"author":{"gitId":"YoYoCiti"},"content":"        assertThrows(NullPointerException.class, () -\u003e Shortcut.isValidShortcut(null));","lastModifiedDate":"2021-10-18"},{"lineNumber":25,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":26,"author":{"gitId":"YoYoCiti"},"content":"        // invalid shortcut","lastModifiedDate":"2021-10-18"},{"lineNumber":27,"author":{"gitId":"YoYoCiti"},"content":"        assertFalse(Shortcut.isValidShortcut(\"\")); // empty string","lastModifiedDate":"2021-10-18"},{"lineNumber":28,"author":{"gitId":"YoYoCiti"},"content":"        assertFalse(Shortcut.isValidShortcut(\" \")); // spaces only","lastModifiedDate":"2021-10-18"},{"lineNumber":29,"author":{"gitId":"YoYoCiti"},"content":"        assertFalse(Shortcut.isValidShortcut(\"listf\"));","lastModifiedDate":"2021-10-19"},{"lineNumber":30,"author":{"gitId":"YoYoCiti"},"content":"        assertFalse(Shortcut.isValidShortcut(\"list all the facilities\"));; // long names","lastModifiedDate":"2021-10-27"},{"lineNumber":31,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":32,"author":{"gitId":"YoYoCiti"},"content":"        // valid shortcut","lastModifiedDate":"2021-10-18"},{"lineNumber":33,"author":{"gitId":"YoYoCiti"},"content":"        assertTrue(Shortcut.isValidShortcut(\"lf\")); // alphabets only","lastModifiedDate":"2021-10-18"},{"lineNumber":34,"author":{"gitId":"YoYoCiti"},"content":"        assertTrue(Shortcut.isValidShortcut(\"23\")); // numbers only","lastModifiedDate":"2021-10-18"},{"lineNumber":35,"author":{"gitId":"YoYoCiti"},"content":"        assertTrue(Shortcut.isValidShortcut(\"lf2\"));; // alphanumeric characters","lastModifiedDate":"2021-10-18"},{"lineNumber":36,"author":{"gitId":"YoYoCiti"},"content":"        assertTrue(Shortcut.isValidShortcut(\"Lf\"));; // with capital letters","lastModifiedDate":"2021-10-18"},{"lineNumber":37,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":38,"author":{"gitId":"YoYoCiti"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":39,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":40,"author":{"gitId":"YoYoCiti"},"content":"}","lastModifiedDate":"2021-10-18"}],"authorContributionMap":{"YoYoCiti":40}},{"path":"src/test/java/seedu/address/model/facility/CapacityTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Shruthi0310"},"content":"package seedu.address.model.facility;","lastModifiedDate":"2021-10-05"},{"lineNumber":2,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":3,"author":{"gitId":"Shruthi0310"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-05"},{"lineNumber":4,"author":{"gitId":"Shruthi0310"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-05"},{"lineNumber":5,"author":{"gitId":"Shruthi0310"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-05"},{"lineNumber":6,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":7,"author":{"gitId":"Shruthi0310"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-06"},{"lineNumber":8,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":9,"author":{"gitId":"Shruthi0310"},"content":"public class CapacityTest {","lastModifiedDate":"2021-10-05"},{"lineNumber":10,"author":{"gitId":"Shruthi0310"},"content":"    @Test","lastModifiedDate":"2021-10-05"},{"lineNumber":11,"author":{"gitId":"felix-ong"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2021-10-30"},{"lineNumber":12,"author":{"gitId":"Shruthi0310"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Capacity(null));","lastModifiedDate":"2021-10-05"},{"lineNumber":13,"author":{"gitId":"Shruthi0310"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":14,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":15,"author":{"gitId":"felix-ong"},"content":"    @Test","lastModifiedDate":"2021-10-30"},{"lineNumber":16,"author":{"gitId":"felix-ong"},"content":"    public void constructor_invalidCapacity_throwsIllegalArgumentException() {","lastModifiedDate":"2021-10-30"},{"lineNumber":17,"author":{"gitId":"felix-ong"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Capacity(\"\"));","lastModifiedDate":"2021-10-30"},{"lineNumber":18,"author":{"gitId":"felix-ong"},"content":"        // beyond upper boundary","lastModifiedDate":"2021-10-30"},{"lineNumber":19,"author":{"gitId":"felix-ong"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Capacity(\"51\"));","lastModifiedDate":"2021-10-30"},{"lineNumber":20,"author":{"gitId":"felix-ong"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Capacity(\"500\"));","lastModifiedDate":"2021-10-30"},{"lineNumber":21,"author":{"gitId":"felix-ong"},"content":"        // beyond lower boundary","lastModifiedDate":"2021-10-30"},{"lineNumber":22,"author":{"gitId":"felix-ong"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Capacity(\"0\"));","lastModifiedDate":"2021-10-30"},{"lineNumber":23,"author":{"gitId":"felix-ong"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Capacity(\"-1\"));","lastModifiedDate":"2021-10-30"},{"lineNumber":24,"author":{"gitId":"felix-ong"},"content":"    }","lastModifiedDate":"2021-10-30"},{"lineNumber":25,"author":{"gitId":"felix-ong"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":26,"author":{"gitId":"felix-ong"},"content":"    @Test","lastModifiedDate":"2021-10-30"},{"lineNumber":27,"author":{"gitId":"felix-ong"},"content":"    public void isValidCapacity() {","lastModifiedDate":"2021-10-30"},{"lineNumber":28,"author":{"gitId":"felix-ong"},"content":"        // null capacity","lastModifiedDate":"2021-10-30"},{"lineNumber":29,"author":{"gitId":"felix-ong"},"content":"        assertThrows(NullPointerException.class, () -\u003e Capacity.isValidCapacity(null));","lastModifiedDate":"2021-10-30"},{"lineNumber":30,"author":{"gitId":"felix-ong"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":31,"author":{"gitId":"felix-ong"},"content":"        // valid capacities","lastModifiedDate":"2021-10-30"},{"lineNumber":32,"author":{"gitId":"felix-ong"},"content":"        assertTrue(Capacity.isValidCapacity(\"1\")); // lower boundary","lastModifiedDate":"2021-10-30"},{"lineNumber":33,"author":{"gitId":"felix-ong"},"content":"        assertTrue(Capacity.isValidCapacity(\"50\")); // upper boundary","lastModifiedDate":"2021-10-30"},{"lineNumber":34,"author":{"gitId":"felix-ong"},"content":"        assertTrue(Capacity.isValidCapacity(\"25\"));","lastModifiedDate":"2021-10-30"},{"lineNumber":35,"author":{"gitId":"felix-ong"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":36,"author":{"gitId":"felix-ong"},"content":"        // invalid capacities","lastModifiedDate":"2021-10-30"},{"lineNumber":37,"author":{"gitId":"felix-ong"},"content":"        assertFalse(Capacity.isValidCapacity(\"\")); // empty string","lastModifiedDate":"2021-10-30"},{"lineNumber":38,"author":{"gitId":"felix-ong"},"content":"        assertFalse(Capacity.isValidCapacity(\" \")); // spaces only","lastModifiedDate":"2021-10-30"},{"lineNumber":39,"author":{"gitId":"felix-ong"},"content":"        assertFalse(Capacity.isValidCapacity(\"51\")); // more than 50","lastModifiedDate":"2021-10-30"},{"lineNumber":40,"author":{"gitId":"felix-ong"},"content":"        assertFalse(Capacity.isValidCapacity(\"0\")); // less than 1","lastModifiedDate":"2021-10-30"},{"lineNumber":41,"author":{"gitId":"felix-ong"},"content":"    }","lastModifiedDate":"2021-10-30"},{"lineNumber":42,"author":{"gitId":"felix-ong"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":43,"author":{"gitId":"Shruthi0310"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":44,"author":{"gitId":"Shruthi0310"},"content":"    public void isWithinCapacity() {","lastModifiedDate":"2021-10-12"},{"lineNumber":45,"author":{"gitId":"Shruthi0310"},"content":"        Capacity capacity \u003d new Capacity(\"5\");","lastModifiedDate":"2021-10-12"},{"lineNumber":46,"author":{"gitId":"felix-ong"},"content":"        // within max capacity","lastModifiedDate":"2021-10-30"},{"lineNumber":47,"author":{"gitId":"Shruthi0310"},"content":"        assertTrue(capacity.isWithinCapacity(5));","lastModifiedDate":"2021-10-12"},{"lineNumber":48,"author":{"gitId":"Shruthi0310"},"content":"        assertTrue(capacity.isWithinCapacity(4));","lastModifiedDate":"2021-10-12"},{"lineNumber":49,"author":{"gitId":"felix-ong"},"content":"        assertTrue(capacity.isWithinCapacity(0));","lastModifiedDate":"2021-10-30"},{"lineNumber":50,"author":{"gitId":"felix-ong"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":51,"author":{"gitId":"felix-ong"},"content":"        // beyond max capacity","lastModifiedDate":"2021-10-30"},{"lineNumber":52,"author":{"gitId":"Shruthi0310"},"content":"        assertFalse(capacity.isWithinCapacity(6));","lastModifiedDate":"2021-10-12"},{"lineNumber":53,"author":{"gitId":"felix-ong"},"content":"        assertFalse(capacity.isWithinCapacity(50));","lastModifiedDate":"2021-10-30"},{"lineNumber":54,"author":{"gitId":"Shruthi0310"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":55,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":56,"author":{"gitId":"felix-ong"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":57,"author":{"gitId":"Shruthi0310"},"content":"    @Test","lastModifiedDate":"2021-10-05"},{"lineNumber":58,"author":{"gitId":"Shruthi0310"},"content":"    public void equals() {","lastModifiedDate":"2021-10-05"},{"lineNumber":59,"author":{"gitId":"Shruthi0310"},"content":"        Capacity capacity \u003d new Capacity(\"5\");","lastModifiedDate":"2021-10-05"},{"lineNumber":60,"author":{"gitId":"Shruthi0310"},"content":"        Capacity capacityCopy \u003d new Capacity(\"5\");","lastModifiedDate":"2021-10-05"},{"lineNumber":61,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":62,"author":{"gitId":"Shruthi0310"},"content":"        assertTrue(capacity.equals(capacityCopy));","lastModifiedDate":"2021-10-05"},{"lineNumber":63,"author":{"gitId":"Shruthi0310"},"content":"        assertTrue(capacity.equals(capacity));","lastModifiedDate":"2021-10-05"},{"lineNumber":64,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":65,"author":{"gitId":"Shruthi0310"},"content":"        assertFalse(capacity.equals(null));","lastModifiedDate":"2021-10-05"},{"lineNumber":66,"author":{"gitId":"Shruthi0310"},"content":"        Capacity differentCapacity \u003d new Capacity(\"10\");","lastModifiedDate":"2021-10-05"},{"lineNumber":67,"author":{"gitId":"Shruthi0310"},"content":"        assertFalse(capacity.equals(differentCapacity));","lastModifiedDate":"2021-10-05"},{"lineNumber":68,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":69,"author":{"gitId":"Shruthi0310"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":70,"author":{"gitId":"Shruthi0310"},"content":"}","lastModifiedDate":"2021-10-05"}],"authorContributionMap":{"Shruthi0310":35,"felix-ong":35}},{"path":"src/test/java/seedu/address/model/facility/FacilityNameTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Shruthi0310"},"content":"package seedu.address.model.facility;","lastModifiedDate":"2021-10-05"},{"lineNumber":2,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":3,"author":{"gitId":"Shruthi0310"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-05"},{"lineNumber":4,"author":{"gitId":"Shruthi0310"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-05"},{"lineNumber":5,"author":{"gitId":"Shruthi0310"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-05"},{"lineNumber":6,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":7,"author":{"gitId":"Shruthi0310"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-06"},{"lineNumber":8,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":9,"author":{"gitId":"Shruthi0310"},"content":"public class FacilityNameTest {","lastModifiedDate":"2021-10-05"},{"lineNumber":10,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":11,"author":{"gitId":"Shruthi0310"},"content":"    @Test","lastModifiedDate":"2021-10-05"},{"lineNumber":12,"author":{"gitId":"felix-ong"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2021-10-30"},{"lineNumber":13,"author":{"gitId":"Shruthi0310"},"content":"        assertThrows(NullPointerException.class, () -\u003e new FacilityName(null));","lastModifiedDate":"2021-10-05"},{"lineNumber":14,"author":{"gitId":"Shruthi0310"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":15,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":16,"author":{"gitId":"felix-ong"},"content":"    @Test","lastModifiedDate":"2021-10-30"},{"lineNumber":17,"author":{"gitId":"felix-ong"},"content":"    public void constructor_invalidFacilityName_throwsIllegalArgumentException() {","lastModifiedDate":"2021-10-30"},{"lineNumber":18,"author":{"gitId":"felix-ong"},"content":"        // below 1 character","lastModifiedDate":"2021-10-30"},{"lineNumber":19,"author":{"gitId":"felix-ong"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new FacilityName(\"\"));","lastModifiedDate":"2021-10-30"},{"lineNumber":20,"author":{"gitId":"felix-ong"},"content":"        // more than 50 characters","lastModifiedDate":"2021-10-30"},{"lineNumber":21,"author":{"gitId":"felix-ong"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new FacilityName(\"1111111111111\"","lastModifiedDate":"2021-10-30"},{"lineNumber":22,"author":{"gitId":"felix-ong"},"content":"                + \"11111111111111111111111111111111111111\"));","lastModifiedDate":"2021-10-30"},{"lineNumber":23,"author":{"gitId":"felix-ong"},"content":"        // non-alphanumeric characters","lastModifiedDate":"2021-10-30"},{"lineNumber":24,"author":{"gitId":"felix-ong"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new FacilityName(\"@#$\"));","lastModifiedDate":"2021-10-30"},{"lineNumber":25,"author":{"gitId":"felix-ong"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new FacilityName(\"NUS_SPORTS\"));","lastModifiedDate":"2021-10-30"},{"lineNumber":26,"author":{"gitId":"felix-ong"},"content":"    }","lastModifiedDate":"2021-10-30"},{"lineNumber":27,"author":{"gitId":"felix-ong"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":28,"author":{"gitId":"felix-ong"},"content":"    @Test","lastModifiedDate":"2021-10-30"},{"lineNumber":29,"author":{"gitId":"felix-ong"},"content":"    public void isValidFacilityName() {","lastModifiedDate":"2021-10-30"},{"lineNumber":30,"author":{"gitId":"felix-ong"},"content":"        // null facility name","lastModifiedDate":"2021-10-30"},{"lineNumber":31,"author":{"gitId":"felix-ong"},"content":"        assertThrows(NullPointerException.class, () -\u003e FacilityName.isValidFacilityName(null));","lastModifiedDate":"2021-10-30"},{"lineNumber":32,"author":{"gitId":"felix-ong"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":33,"author":{"gitId":"felix-ong"},"content":"        // valid facility name","lastModifiedDate":"2021-10-30"},{"lineNumber":34,"author":{"gitId":"felix-ong"},"content":"        assertTrue(FacilityName.isValidFacilityName(\"1\")); // 1 character(lower boundary)","lastModifiedDate":"2021-10-30"},{"lineNumber":35,"author":{"gitId":"felix-ong"},"content":"        assertTrue(FacilityName.isValidFacilityName(\"1111111111111\"","lastModifiedDate":"2021-10-30"},{"lineNumber":36,"author":{"gitId":"felix-ong"},"content":"                + \"1111111111111111111111111111111111111\")); // 50 characters(upper boundary)","lastModifiedDate":"2021-10-30"},{"lineNumber":37,"author":{"gitId":"felix-ong"},"content":"        assertTrue(FacilityName.isValidFacilityName(\"25\"));","lastModifiedDate":"2021-10-30"},{"lineNumber":38,"author":{"gitId":"felix-ong"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":39,"author":{"gitId":"felix-ong"},"content":"        // invalid facility name","lastModifiedDate":"2021-10-30"},{"lineNumber":40,"author":{"gitId":"felix-ong"},"content":"        assertFalse(FacilityName.isValidFacilityName(\"\")); // empty string","lastModifiedDate":"2021-10-30"},{"lineNumber":41,"author":{"gitId":"felix-ong"},"content":"        assertFalse(FacilityName.isValidFacilityName(\"\")); // // below 1 character","lastModifiedDate":"2021-10-30"},{"lineNumber":42,"author":{"gitId":"felix-ong"},"content":"        assertFalse(FacilityName.isValidFacilityName(\"1111111111111\"","lastModifiedDate":"2021-10-30"},{"lineNumber":43,"author":{"gitId":"felix-ong"},"content":"                + \"11111111111111111111111111111111111111\")); // more than 50 characters","lastModifiedDate":"2021-10-30"},{"lineNumber":44,"author":{"gitId":"felix-ong"},"content":"    }","lastModifiedDate":"2021-10-30"},{"lineNumber":45,"author":{"gitId":"felix-ong"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":46,"author":{"gitId":"Shruthi0310"},"content":"    @Test","lastModifiedDate":"2021-10-05"},{"lineNumber":47,"author":{"gitId":"Shruthi0310"},"content":"    public void equals() {","lastModifiedDate":"2021-10-05"},{"lineNumber":48,"author":{"gitId":"Shruthi0310"},"content":"        FacilityName name \u003d new FacilityName(\"Name\");","lastModifiedDate":"2021-10-05"},{"lineNumber":49,"author":{"gitId":"Shruthi0310"},"content":"        FacilityName nameCopy \u003d new FacilityName(\"Name\");","lastModifiedDate":"2021-10-05"},{"lineNumber":50,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":51,"author":{"gitId":"Shruthi0310"},"content":"        assertTrue(name.equals(nameCopy));","lastModifiedDate":"2021-10-05"},{"lineNumber":52,"author":{"gitId":"Shruthi0310"},"content":"        assertTrue(name.equals(name));","lastModifiedDate":"2021-10-05"},{"lineNumber":53,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":54,"author":{"gitId":"Shruthi0310"},"content":"        assertFalse(name.equals(null));","lastModifiedDate":"2021-10-05"},{"lineNumber":55,"author":{"gitId":"Shruthi0310"},"content":"        FacilityName differentName \u003d new FacilityName(\"Test\");","lastModifiedDate":"2021-10-05"},{"lineNumber":56,"author":{"gitId":"Shruthi0310"},"content":"        assertFalse(name.equals(differentName));","lastModifiedDate":"2021-10-05"},{"lineNumber":57,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":58,"author":{"gitId":"Shruthi0310"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":59,"author":{"gitId":"Shruthi0310"},"content":"}","lastModifiedDate":"2021-10-05"}],"authorContributionMap":{"Shruthi0310":28,"felix-ong":31}},{"path":"src/test/java/seedu/address/model/facility/FacilityTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Shruthi0310"},"content":"package seedu.address.model.facility;","lastModifiedDate":"2021-10-05"},{"lineNumber":2,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":3,"author":{"gitId":"Shruthi0310"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-12"},{"lineNumber":4,"author":{"gitId":"Shruthi0310"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-05"},{"lineNumber":5,"author":{"gitId":"Shruthi0310"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-05"},{"lineNumber":6,"author":{"gitId":"felix-ong"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_CAPACITY_COURT;","lastModifiedDate":"2021-10-30"},{"lineNumber":7,"author":{"gitId":"felix-ong"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_FACILITY_NAME_COURT;","lastModifiedDate":"2021-10-30"},{"lineNumber":8,"author":{"gitId":"felix-ong"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_LOCATION_COURT;","lastModifiedDate":"2021-10-30"},{"lineNumber":9,"author":{"gitId":"felix-ong"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TIME_COURT;","lastModifiedDate":"2021-10-30"},{"lineNumber":10,"author":{"gitId":"Shruthi0310"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-05"},{"lineNumber":11,"author":{"gitId":"felix-ong"},"content":"import static seedu.address.testutil.TypicalFacilities.FIELD;","lastModifiedDate":"2021-10-30"},{"lineNumber":12,"author":{"gitId":"felix-ong"},"content":"import static seedu.address.testutil.TypicalFacilities.KENT_RIDGE_SPORT_HALL_5_COURT_1;","lastModifiedDate":"2021-10-30"},{"lineNumber":13,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":14,"author":{"gitId":"YoYoCiti"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-11-01"},{"lineNumber":15,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":16,"author":{"gitId":"Shruthi0310"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-06"},{"lineNumber":17,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":18,"author":{"gitId":"Shruthi0310"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2021-10-12"},{"lineNumber":19,"author":{"gitId":"Shruthi0310"},"content":"import seedu.address.testutil.FacilityBuilder;","lastModifiedDate":"2021-10-12"},{"lineNumber":20,"author":{"gitId":"Shruthi0310"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2021-10-12"},{"lineNumber":21,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":22,"author":{"gitId":"Shruthi0310"},"content":"public class FacilityTest {","lastModifiedDate":"2021-10-05"},{"lineNumber":23,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":24,"author":{"gitId":"Shruthi0310"},"content":"    @Test","lastModifiedDate":"2021-10-05"},{"lineNumber":25,"author":{"gitId":"Shruthi0310"},"content":"    public void constructor_null_throwsException() {","lastModifiedDate":"2021-10-05"},{"lineNumber":26,"author":{"gitId":"felix-ong"},"content":"        // null name","lastModifiedDate":"2021-10-30"},{"lineNumber":27,"author":{"gitId":"Shruthi0310"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Facility(null, new Location(\"loc\"),","lastModifiedDate":"2021-10-05"},{"lineNumber":28,"author":{"gitId":"felix-ong"},"content":"                new Time(\"1111\"), new Capacity(\"5\")));","lastModifiedDate":"2021-10-30"},{"lineNumber":29,"author":{"gitId":"felix-ong"},"content":"        // null location","lastModifiedDate":"2021-10-30"},{"lineNumber":30,"author":{"gitId":"Shruthi0310"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Facility(new FacilityName(\"Court\"), null,","lastModifiedDate":"2021-10-05"},{"lineNumber":31,"author":{"gitId":"felix-ong"},"content":"                new Time(\"1111\"), new Capacity(\"5\")));","lastModifiedDate":"2021-10-30"},{"lineNumber":32,"author":{"gitId":"felix-ong"},"content":"        // null time","lastModifiedDate":"2021-10-30"},{"lineNumber":33,"author":{"gitId":"Shruthi0310"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Facility(new FacilityName(\"Court\"), new Location(\"loc\"),","lastModifiedDate":"2021-10-05"},{"lineNumber":34,"author":{"gitId":"Shruthi0310"},"content":"                null, new Capacity(\"5\")));","lastModifiedDate":"2021-10-05"},{"lineNumber":35,"author":{"gitId":"felix-ong"},"content":"        // null capacity","lastModifiedDate":"2021-10-30"},{"lineNumber":36,"author":{"gitId":"Shruthi0310"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Facility(new FacilityName(\"Court\"), new Location(\"loc\"),","lastModifiedDate":"2021-10-05"},{"lineNumber":37,"author":{"gitId":"felix-ong"},"content":"                new Time(\"1111\"), null));","lastModifiedDate":"2021-10-30"},{"lineNumber":38,"author":{"gitId":"YoYoCiti"},"content":"        // null person-allocated list","lastModifiedDate":"2021-11-01"},{"lineNumber":39,"author":{"gitId":"YoYoCiti"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Facility(new FacilityName(\"Court\"), new Location(\"loc\"),","lastModifiedDate":"2021-11-01"},{"lineNumber":40,"author":{"gitId":"YoYoCiti"},"content":"                new Time(\"1111\"), new Capacity(\"5\"), null));","lastModifiedDate":"2021-11-01"},{"lineNumber":41,"author":{"gitId":"Shruthi0310"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":42,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":43,"author":{"gitId":"Shruthi0310"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":44,"author":{"gitId":"Shruthi0310"},"content":"    public void getPersonAsString_success() {","lastModifiedDate":"2021-10-12"},{"lineNumber":45,"author":{"gitId":"Shruthi0310"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2021-10-12"},{"lineNumber":46,"author":{"gitId":"Shruthi0310"},"content":"        Person secondPerson \u003d new PersonBuilder().withName(\"Matt\").build();","lastModifiedDate":"2021-10-12"},{"lineNumber":47,"author":{"gitId":"Shruthi0310"},"content":"        Facility facility \u003d new FacilityBuilder().build();","lastModifiedDate":"2021-10-12"},{"lineNumber":48,"author":{"gitId":"Shruthi0310"},"content":"        facility.addPersonToFacility(person);","lastModifiedDate":"2021-10-12"},{"lineNumber":49,"author":{"gitId":"Shruthi0310"},"content":"        facility.addPersonToFacility(secondPerson);","lastModifiedDate":"2021-10-12"},{"lineNumber":50,"author":{"gitId":"YoYoCiti"},"content":"        assertEquals(\"Amy Bee, Matt\", facility.getPersonsAsString());","lastModifiedDate":"2021-10-26"},{"lineNumber":51,"author":{"gitId":"Shruthi0310"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":52,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":53,"author":{"gitId":"Shruthi0310"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":54,"author":{"gitId":"Shruthi0310"},"content":"    public void clearAllocationList_emptiesList() {","lastModifiedDate":"2021-10-12"},{"lineNumber":55,"author":{"gitId":"Shruthi0310"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2021-10-12"},{"lineNumber":56,"author":{"gitId":"Shruthi0310"},"content":"        Person secondPerson \u003d new PersonBuilder().withName(\"Matt\").build();","lastModifiedDate":"2021-10-12"},{"lineNumber":57,"author":{"gitId":"Shruthi0310"},"content":"        Facility facility \u003d new FacilityBuilder().build();","lastModifiedDate":"2021-10-12"},{"lineNumber":58,"author":{"gitId":"Shruthi0310"},"content":"        facility.addPersonToFacility(person);","lastModifiedDate":"2021-10-12"},{"lineNumber":59,"author":{"gitId":"Shruthi0310"},"content":"        facility.addPersonToFacility(secondPerson);","lastModifiedDate":"2021-10-12"},{"lineNumber":60,"author":{"gitId":"Shruthi0310"},"content":"        facility.clearAllocationList();","lastModifiedDate":"2021-10-12"},{"lineNumber":61,"author":{"gitId":"Shruthi0310"},"content":"        Facility expectedFacility \u003d new FacilityBuilder().build();","lastModifiedDate":"2021-10-12"},{"lineNumber":62,"author":{"gitId":"Shruthi0310"},"content":"        assertEquals(expectedFacility, facility);","lastModifiedDate":"2021-10-12"},{"lineNumber":63,"author":{"gitId":"Shruthi0310"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":64,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":65,"author":{"gitId":"felix-ong"},"content":"    @Test","lastModifiedDate":"2021-10-30"},{"lineNumber":66,"author":{"gitId":"felix-ong"},"content":"    public void isSameFacility() {","lastModifiedDate":"2021-10-30"},{"lineNumber":67,"author":{"gitId":"felix-ong"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-10-30"},{"lineNumber":68,"author":{"gitId":"felix-ong"},"content":"        assertTrue(FIELD.isSameFacility(FIELD));","lastModifiedDate":"2021-10-30"},{"lineNumber":69,"author":{"gitId":"felix-ong"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":70,"author":{"gitId":"felix-ong"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-10-30"},{"lineNumber":71,"author":{"gitId":"felix-ong"},"content":"        assertFalse(FIELD.isSameFacility(null));","lastModifiedDate":"2021-10-30"},{"lineNumber":72,"author":{"gitId":"felix-ong"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":73,"author":{"gitId":"felix-ong"},"content":"        // same name, same location, all other attributes different -\u003e returns true","lastModifiedDate":"2021-10-30"},{"lineNumber":74,"author":{"gitId":"felix-ong"},"content":"        Facility editedField \u003d new FacilityBuilder(FIELD).withTime(VALID_TIME_COURT).withCapacity(VALID_CAPACITY_COURT)","lastModifiedDate":"2021-10-30"},{"lineNumber":75,"author":{"gitId":"felix-ong"},"content":"               .build();","lastModifiedDate":"2021-10-30"},{"lineNumber":76,"author":{"gitId":"felix-ong"},"content":"        assertTrue(FIELD.isSameFacility(editedField));","lastModifiedDate":"2021-10-30"},{"lineNumber":77,"author":{"gitId":"felix-ong"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":78,"author":{"gitId":"felix-ong"},"content":"        // different name, all other attributes same -\u003e returns false","lastModifiedDate":"2021-10-30"},{"lineNumber":79,"author":{"gitId":"felix-ong"},"content":"        editedField \u003d new FacilityBuilder(FIELD).withFacilityName(VALID_FACILITY_NAME_COURT).build();","lastModifiedDate":"2021-10-30"},{"lineNumber":80,"author":{"gitId":"felix-ong"},"content":"        assertFalse(FIELD.isSameFacility(editedField));","lastModifiedDate":"2021-10-30"},{"lineNumber":81,"author":{"gitId":"felix-ong"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":82,"author":{"gitId":"felix-ong"},"content":"        // different location, all other attributes same -\u003e returns false","lastModifiedDate":"2021-10-30"},{"lineNumber":83,"author":{"gitId":"felix-ong"},"content":"        editedField \u003d new FacilityBuilder(FIELD).withLocation(VALID_LOCATION_COURT).build();","lastModifiedDate":"2021-10-30"},{"lineNumber":84,"author":{"gitId":"felix-ong"},"content":"        assertFalse(FIELD.isSameFacility(editedField));","lastModifiedDate":"2021-10-30"},{"lineNumber":85,"author":{"gitId":"felix-ong"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":86,"author":{"gitId":"felix-ong"},"content":"        // name differs in case, all other attributes same -\u003e returns false","lastModifiedDate":"2021-10-30"},{"lineNumber":87,"author":{"gitId":"felix-ong"},"content":"        Facility editedCourt \u003d new FacilityBuilder(KENT_RIDGE_SPORT_HALL_5_COURT_1)","lastModifiedDate":"2021-10-30"},{"lineNumber":88,"author":{"gitId":"felix-ong"},"content":"                .withFacilityName(VALID_FACILITY_NAME_COURT.toLowerCase()).build();","lastModifiedDate":"2021-10-30"},{"lineNumber":89,"author":{"gitId":"felix-ong"},"content":"        assertFalse(KENT_RIDGE_SPORT_HALL_5_COURT_1.isSameFacility(editedCourt));","lastModifiedDate":"2021-10-30"},{"lineNumber":90,"author":{"gitId":"felix-ong"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":91,"author":{"gitId":"felix-ong"},"content":"        // name has trailing spaces, all other attributes same -\u003e returns false","lastModifiedDate":"2021-10-30"},{"lineNumber":92,"author":{"gitId":"felix-ong"},"content":"        String nameWithTrailingSpaces \u003d VALID_FACILITY_NAME_COURT + \" \";","lastModifiedDate":"2021-10-30"},{"lineNumber":93,"author":{"gitId":"felix-ong"},"content":"        editedCourt \u003d new FacilityBuilder(KENT_RIDGE_SPORT_HALL_5_COURT_1)","lastModifiedDate":"2021-10-30"},{"lineNumber":94,"author":{"gitId":"felix-ong"},"content":"                .withFacilityName(nameWithTrailingSpaces).build();","lastModifiedDate":"2021-10-30"},{"lineNumber":95,"author":{"gitId":"felix-ong"},"content":"        assertFalse(KENT_RIDGE_SPORT_HALL_5_COURT_1.isSameFacility(editedCourt));","lastModifiedDate":"2021-10-30"},{"lineNumber":96,"author":{"gitId":"felix-ong"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":97,"author":{"gitId":"felix-ong"},"content":"        // location differs in case, all other attributes same -\u003e returns false","lastModifiedDate":"2021-10-30"},{"lineNumber":98,"author":{"gitId":"felix-ong"},"content":"        editedCourt \u003d new FacilityBuilder(KENT_RIDGE_SPORT_HALL_5_COURT_1)","lastModifiedDate":"2021-10-30"},{"lineNumber":99,"author":{"gitId":"felix-ong"},"content":"                .withLocation(VALID_LOCATION_COURT.toLowerCase()).build();","lastModifiedDate":"2021-10-30"},{"lineNumber":100,"author":{"gitId":"felix-ong"},"content":"        assertFalse(KENT_RIDGE_SPORT_HALL_5_COURT_1.isSameFacility(editedCourt));","lastModifiedDate":"2021-10-30"},{"lineNumber":101,"author":{"gitId":"felix-ong"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":102,"author":{"gitId":"felix-ong"},"content":"        // location has trailing spaces, all other attributes same -\u003e returns false","lastModifiedDate":"2021-10-30"},{"lineNumber":103,"author":{"gitId":"felix-ong"},"content":"        String locationWithTrailingSpaces \u003d VALID_LOCATION_COURT + \" \";","lastModifiedDate":"2021-10-30"},{"lineNumber":104,"author":{"gitId":"felix-ong"},"content":"        editedCourt \u003d new FacilityBuilder(KENT_RIDGE_SPORT_HALL_5_COURT_1)","lastModifiedDate":"2021-10-30"},{"lineNumber":105,"author":{"gitId":"felix-ong"},"content":"                .withLocation(locationWithTrailingSpaces).build();","lastModifiedDate":"2021-10-30"},{"lineNumber":106,"author":{"gitId":"felix-ong"},"content":"        assertFalse(KENT_RIDGE_SPORT_HALL_5_COURT_1.isSameFacility(editedCourt));","lastModifiedDate":"2021-10-30"},{"lineNumber":107,"author":{"gitId":"felix-ong"},"content":"    }","lastModifiedDate":"2021-10-30"},{"lineNumber":108,"author":{"gitId":"felix-ong"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":109,"author":{"gitId":"Shruthi0310"},"content":"    @Test","lastModifiedDate":"2021-10-05"},{"lineNumber":110,"author":{"gitId":"Shruthi0310"},"content":"    public void equals() {","lastModifiedDate":"2021-10-05"},{"lineNumber":111,"author":{"gitId":"Shruthi0310"},"content":"        Facility facility \u003d new Facility(new FacilityName(\"Court 1\"), new Location(\"University Sports Hall\"),","lastModifiedDate":"2021-10-05"},{"lineNumber":112,"author":{"gitId":"felix-ong"},"content":"                new Time(\"1130\"), new Capacity(\"10\"));","lastModifiedDate":"2021-10-30"},{"lineNumber":113,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":114,"author":{"gitId":"Shruthi0310"},"content":"        Facility facilityCopy \u003d new Facility(new FacilityName(\"Court 1\"), new Location(\"University Sports Hall\"),","lastModifiedDate":"2021-10-05"},{"lineNumber":115,"author":{"gitId":"YoYoCiti"},"content":"                new Time(\"1130\"), new Capacity(\"10\"), new ArrayList\u003c\u003e());","lastModifiedDate":"2021-11-01"},{"lineNumber":116,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":117,"author":{"gitId":"Shruthi0310"},"content":"        Facility differentFacility \u003d new Facility(new FacilityName(\"Field\"), new Location(\"Opp University Hall\"),","lastModifiedDate":"2021-10-05"},{"lineNumber":118,"author":{"gitId":"felix-ong"},"content":"                new Time(\"2045\"), new Capacity(\"5\"));","lastModifiedDate":"2021-10-30"},{"lineNumber":119,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":120,"author":{"gitId":"YoYoCiti"},"content":"        // same object","lastModifiedDate":"2021-11-01"},{"lineNumber":121,"author":{"gitId":"Shruthi0310"},"content":"        assertTrue(facility.equals(facility));","lastModifiedDate":"2021-10-05"},{"lineNumber":122,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":123,"author":{"gitId":"YoYoCiti"},"content":"        // facilities with same name and location","lastModifiedDate":"2021-11-01"},{"lineNumber":124,"author":{"gitId":"Shruthi0310"},"content":"        assertTrue(facility.equals(facilityCopy));","lastModifiedDate":"2021-10-05"},{"lineNumber":125,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":126,"author":{"gitId":"YoYoCiti"},"content":"        // null facility","lastModifiedDate":"2021-11-01"},{"lineNumber":127,"author":{"gitId":"Shruthi0310"},"content":"        assertFalse(facility.equals(null));","lastModifiedDate":"2021-10-05"},{"lineNumber":128,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":129,"author":{"gitId":"YoYoCiti"},"content":"        // not a facility","lastModifiedDate":"2021-11-01"},{"lineNumber":130,"author":{"gitId":"Shruthi0310"},"content":"        assertFalse(facility.equals(\"5\"));","lastModifiedDate":"2021-10-05"},{"lineNumber":131,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":132,"author":{"gitId":"YoYoCiti"},"content":"        // different facility","lastModifiedDate":"2021-11-01"},{"lineNumber":133,"author":{"gitId":"Shruthi0310"},"content":"        assertFalse(facility.equals(differentFacility));","lastModifiedDate":"2021-10-05"},{"lineNumber":134,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":135,"author":{"gitId":"Shruthi0310"},"content":"        Facility differentName \u003d new Facility(new FacilityName(\"Field\"), new Location(\"University Sports Hall\"),","lastModifiedDate":"2021-10-05"},{"lineNumber":136,"author":{"gitId":"felix-ong"},"content":"                new Time(\"1130\"), new Capacity(\"10\"));","lastModifiedDate":"2021-10-30"},{"lineNumber":137,"author":{"gitId":"Shruthi0310"},"content":"        assertFalse(facility.equals(differentName));","lastModifiedDate":"2021-10-05"},{"lineNumber":138,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":139,"author":{"gitId":"Shruthi0310"},"content":"        Facility differentLocation \u003d new Facility(new FacilityName(\"Court 1\"), new Location(\"Somewhere\"),","lastModifiedDate":"2021-10-05"},{"lineNumber":140,"author":{"gitId":"felix-ong"},"content":"                new Time(\"1130\"), new Capacity(\"10\"));","lastModifiedDate":"2021-10-30"},{"lineNumber":141,"author":{"gitId":"Shruthi0310"},"content":"        assertFalse(facility.equals(differentLocation));","lastModifiedDate":"2021-10-05"},{"lineNumber":142,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":143,"author":{"gitId":"Shruthi0310"},"content":"        Facility differentTime \u003d new Facility(new FacilityName(\"Court 1\"), new Location(\"University Sports Hall\"),","lastModifiedDate":"2021-10-05"},{"lineNumber":144,"author":{"gitId":"felix-ong"},"content":"                new Time(\"2030\"), new Capacity(\"10\"));","lastModifiedDate":"2021-10-30"},{"lineNumber":145,"author":{"gitId":"Shruthi0310"},"content":"        assertFalse(facility.equals(differentTime));","lastModifiedDate":"2021-10-05"},{"lineNumber":146,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":147,"author":{"gitId":"Shruthi0310"},"content":"        Facility differentCapacity \u003d new Facility(new FacilityName(\"Court 1\"), new Location(\"University Sports Hall\"),","lastModifiedDate":"2021-10-05"},{"lineNumber":148,"author":{"gitId":"felix-ong"},"content":"                new Time(\"1130\"), new Capacity(\"8\"));","lastModifiedDate":"2021-10-30"},{"lineNumber":149,"author":{"gitId":"Shruthi0310"},"content":"        assertFalse(facility.equals(differentCapacity));","lastModifiedDate":"2021-10-05"},{"lineNumber":150,"author":{"gitId":"Shruthi0310"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":151,"author":{"gitId":"Shruthi0310"},"content":"}","lastModifiedDate":"2021-10-05"}],"authorContributionMap":{"YoYoCiti":12,"Shruthi0310":76,"felix-ong":63}},{"path":"src/test/java/seedu/address/model/facility/LocationContainsKeywordsPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"YoYoCiti"},"content":"package seedu.address.model.facility;","lastModifiedDate":"2021-10-04"},{"lineNumber":2,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":3,"author":{"gitId":"YoYoCiti"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-04"},{"lineNumber":4,"author":{"gitId":"YoYoCiti"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-04"},{"lineNumber":5,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":6,"author":{"gitId":"YoYoCiti"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-10-04"},{"lineNumber":7,"author":{"gitId":"YoYoCiti"},"content":"import java.util.Collections;","lastModifiedDate":"2021-10-04"},{"lineNumber":8,"author":{"gitId":"YoYoCiti"},"content":"import java.util.List;","lastModifiedDate":"2021-10-04"},{"lineNumber":9,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":10,"author":{"gitId":"YoYoCiti"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-04"},{"lineNumber":11,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":12,"author":{"gitId":"YoYoCiti"},"content":"public class LocationContainsKeywordsPredicateTest {","lastModifiedDate":"2021-10-04"},{"lineNumber":13,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":14,"author":{"gitId":"YoYoCiti"},"content":"    @Test","lastModifiedDate":"2021-10-04"},{"lineNumber":15,"author":{"gitId":"YoYoCiti"},"content":"    public void equals() {","lastModifiedDate":"2021-10-04"},{"lineNumber":16,"author":{"gitId":"YoYoCiti"},"content":"        List\u003cString\u003e firstPredKeywordList \u003d Collections.singletonList(\"first\");","lastModifiedDate":"2021-10-04"},{"lineNumber":17,"author":{"gitId":"YoYoCiti"},"content":"        List\u003cString\u003e secondPredKeywordList \u003d Arrays.asList(\"first\", \"second\");","lastModifiedDate":"2021-10-04"},{"lineNumber":18,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":19,"author":{"gitId":"YoYoCiti"},"content":"        LocationContainsKeywordsPredicate firstPred \u003d new LocationContainsKeywordsPredicate(firstPredKeywordList);","lastModifiedDate":"2021-10-04"},{"lineNumber":20,"author":{"gitId":"YoYoCiti"},"content":"        LocationContainsKeywordsPredicate secondPred \u003d new LocationContainsKeywordsPredicate(secondPredKeywordList);","lastModifiedDate":"2021-10-04"},{"lineNumber":21,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":22,"author":{"gitId":"YoYoCiti"},"content":"        // same object -\u003e return true","lastModifiedDate":"2021-10-04"},{"lineNumber":23,"author":{"gitId":"YoYoCiti"},"content":"        assertTrue(firstPred.equals(firstPred));","lastModifiedDate":"2021-10-04"},{"lineNumber":24,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":25,"author":{"gitId":"YoYoCiti"},"content":"        // same values -\u003e return true","lastModifiedDate":"2021-10-04"},{"lineNumber":26,"author":{"gitId":"YoYoCiti"},"content":"        LocationContainsKeywordsPredicate firstPredCopy \u003d new LocationContainsKeywordsPredicate(firstPredKeywordList);","lastModifiedDate":"2021-10-04"},{"lineNumber":27,"author":{"gitId":"YoYoCiti"},"content":"        assertTrue(firstPred.equals(firstPredCopy));","lastModifiedDate":"2021-10-04"},{"lineNumber":28,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":29,"author":{"gitId":"YoYoCiti"},"content":"        // different types -\u003e return false","lastModifiedDate":"2021-10-04"},{"lineNumber":30,"author":{"gitId":"YoYoCiti"},"content":"        assertFalse(firstPred.equals(1));","lastModifiedDate":"2021-10-04"},{"lineNumber":31,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":32,"author":{"gitId":"YoYoCiti"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-10-04"},{"lineNumber":33,"author":{"gitId":"YoYoCiti"},"content":"        assertFalse(firstPred.equals(null));","lastModifiedDate":"2021-10-04"},{"lineNumber":34,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":35,"author":{"gitId":"YoYoCiti"},"content":"        // different facility -\u003e returns false","lastModifiedDate":"2021-10-04"},{"lineNumber":36,"author":{"gitId":"YoYoCiti"},"content":"        assertFalse(firstPred.equals(secondPred));","lastModifiedDate":"2021-10-04"},{"lineNumber":37,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":38,"author":{"gitId":"YoYoCiti"},"content":"    }","lastModifiedDate":"2021-10-04"},{"lineNumber":39,"author":{"gitId":"YoYoCiti"},"content":"}","lastModifiedDate":"2021-10-04"}],"authorContributionMap":{"YoYoCiti":39}},{"path":"src/test/java/seedu/address/model/facility/LocationTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Shruthi0310"},"content":"package seedu.address.model.facility;","lastModifiedDate":"2021-10-05"},{"lineNumber":2,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":3,"author":{"gitId":"Shruthi0310"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-05"},{"lineNumber":4,"author":{"gitId":"Shruthi0310"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-05"},{"lineNumber":5,"author":{"gitId":"Shruthi0310"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-05"},{"lineNumber":6,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":7,"author":{"gitId":"Shruthi0310"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-06"},{"lineNumber":8,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":9,"author":{"gitId":"Shruthi0310"},"content":"public class LocationTest {","lastModifiedDate":"2021-10-05"},{"lineNumber":10,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":11,"author":{"gitId":"Shruthi0310"},"content":"    @Test","lastModifiedDate":"2021-10-05"},{"lineNumber":12,"author":{"gitId":"felix-ong"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2021-10-30"},{"lineNumber":13,"author":{"gitId":"Shruthi0310"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Location(null));","lastModifiedDate":"2021-10-05"},{"lineNumber":14,"author":{"gitId":"Shruthi0310"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":15,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":16,"author":{"gitId":"felix-ong"},"content":"    @Test","lastModifiedDate":"2021-10-30"},{"lineNumber":17,"author":{"gitId":"felix-ong"},"content":"    public void constructor_invalidLocation_throwsIllegalArgumentException() {","lastModifiedDate":"2021-10-30"},{"lineNumber":18,"author":{"gitId":"felix-ong"},"content":"        // below 1 character","lastModifiedDate":"2021-10-30"},{"lineNumber":19,"author":{"gitId":"felix-ong"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Location(\"\"));","lastModifiedDate":"2021-10-30"},{"lineNumber":20,"author":{"gitId":"felix-ong"},"content":"        // more than 50 characters","lastModifiedDate":"2021-10-30"},{"lineNumber":21,"author":{"gitId":"felix-ong"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Location(\"1111111111111\"","lastModifiedDate":"2021-10-30"},{"lineNumber":22,"author":{"gitId":"felix-ong"},"content":"                + \"11111111111111111111111111111111111111\"));","lastModifiedDate":"2021-10-30"},{"lineNumber":23,"author":{"gitId":"felix-ong"},"content":"        // non-alphanumeric characters","lastModifiedDate":"2021-10-30"},{"lineNumber":24,"author":{"gitId":"felix-ong"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Location(\"@#$\"));","lastModifiedDate":"2021-10-30"},{"lineNumber":25,"author":{"gitId":"felix-ong"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Location(\"U_TOWN\"));","lastModifiedDate":"2021-10-30"},{"lineNumber":26,"author":{"gitId":"felix-ong"},"content":"    }","lastModifiedDate":"2021-10-30"},{"lineNumber":27,"author":{"gitId":"felix-ong"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":28,"author":{"gitId":"felix-ong"},"content":"    @Test","lastModifiedDate":"2021-10-30"},{"lineNumber":29,"author":{"gitId":"felix-ong"},"content":"    public void isValidLocation() {","lastModifiedDate":"2021-10-30"},{"lineNumber":30,"author":{"gitId":"felix-ong"},"content":"        // null location","lastModifiedDate":"2021-10-30"},{"lineNumber":31,"author":{"gitId":"felix-ong"},"content":"        assertThrows(NullPointerException.class, () -\u003e Location.isValidLocation(null));","lastModifiedDate":"2021-10-30"},{"lineNumber":32,"author":{"gitId":"felix-ong"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":33,"author":{"gitId":"felix-ong"},"content":"        // valid location","lastModifiedDate":"2021-10-30"},{"lineNumber":34,"author":{"gitId":"felix-ong"},"content":"        assertTrue(Location.isValidLocation(\"1\")); // 1 character(lower boundary)","lastModifiedDate":"2021-10-30"},{"lineNumber":35,"author":{"gitId":"felix-ong"},"content":"        assertTrue(Location.isValidLocation(\"1111111111111\"","lastModifiedDate":"2021-10-30"},{"lineNumber":36,"author":{"gitId":"felix-ong"},"content":"                + \"1111111111111111111111111111111111111\")); // 50 characters(upper boundary)","lastModifiedDate":"2021-10-30"},{"lineNumber":37,"author":{"gitId":"felix-ong"},"content":"        assertTrue(Location.isValidLocation(\"25\"));","lastModifiedDate":"2021-10-30"},{"lineNumber":38,"author":{"gitId":"felix-ong"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":39,"author":{"gitId":"felix-ong"},"content":"        // invalid location","lastModifiedDate":"2021-10-30"},{"lineNumber":40,"author":{"gitId":"felix-ong"},"content":"        assertFalse(Location.isValidLocation(\"\")); // empty string","lastModifiedDate":"2021-10-30"},{"lineNumber":41,"author":{"gitId":"felix-ong"},"content":"        assertFalse(Location.isValidLocation(\"\")); // // below 1 character","lastModifiedDate":"2021-10-30"},{"lineNumber":42,"author":{"gitId":"felix-ong"},"content":"        assertFalse(Location.isValidLocation(\"1111111111111\"","lastModifiedDate":"2021-10-30"},{"lineNumber":43,"author":{"gitId":"felix-ong"},"content":"                + \"11111111111111111111111111111111111111\")); // more than 50 characters","lastModifiedDate":"2021-10-30"},{"lineNumber":44,"author":{"gitId":"felix-ong"},"content":"    }","lastModifiedDate":"2021-10-30"},{"lineNumber":45,"author":{"gitId":"felix-ong"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":46,"author":{"gitId":"Shruthi0310"},"content":"    @Test","lastModifiedDate":"2021-10-05"},{"lineNumber":47,"author":{"gitId":"Shruthi0310"},"content":"    public void equals() {","lastModifiedDate":"2021-10-05"},{"lineNumber":48,"author":{"gitId":"Shruthi0310"},"content":"        Location location \u003d new Location(\"Location\");","lastModifiedDate":"2021-10-05"},{"lineNumber":49,"author":{"gitId":"Shruthi0310"},"content":"        Location locationCopy \u003d new Location(\"Location\");","lastModifiedDate":"2021-10-05"},{"lineNumber":50,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":51,"author":{"gitId":"Shruthi0310"},"content":"        assertTrue(location.equals(locationCopy));","lastModifiedDate":"2021-10-05"},{"lineNumber":52,"author":{"gitId":"Shruthi0310"},"content":"        assertTrue(location.equals(location));","lastModifiedDate":"2021-10-05"},{"lineNumber":53,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":54,"author":{"gitId":"Shruthi0310"},"content":"        assertFalse(location.equals(null));","lastModifiedDate":"2021-10-05"},{"lineNumber":55,"author":{"gitId":"Shruthi0310"},"content":"        Location differentLocation \u003d new Location(\"Somewhere\");","lastModifiedDate":"2021-10-05"},{"lineNumber":56,"author":{"gitId":"Shruthi0310"},"content":"        assertFalse(location.equals(differentLocation));","lastModifiedDate":"2021-10-05"},{"lineNumber":57,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":58,"author":{"gitId":"Shruthi0310"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":59,"author":{"gitId":"Shruthi0310"},"content":"}","lastModifiedDate":"2021-10-05"}],"authorContributionMap":{"Shruthi0310":28,"felix-ong":31}},{"path":"src/test/java/seedu/address/model/facility/TimeTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Shruthi0310"},"content":"package seedu.address.model.facility;","lastModifiedDate":"2021-10-05"},{"lineNumber":2,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":3,"author":{"gitId":"Shruthi0310"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-05"},{"lineNumber":4,"author":{"gitId":"Shruthi0310"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-05"},{"lineNumber":5,"author":{"gitId":"Shruthi0310"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-05"},{"lineNumber":6,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":7,"author":{"gitId":"Shruthi0310"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-06"},{"lineNumber":8,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":9,"author":{"gitId":"Shruthi0310"},"content":"public class TimeTest {","lastModifiedDate":"2021-10-05"},{"lineNumber":10,"author":{"gitId":"Shruthi0310"},"content":"    @Test","lastModifiedDate":"2021-10-05"},{"lineNumber":11,"author":{"gitId":"felix-ong"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2021-10-30"},{"lineNumber":12,"author":{"gitId":"Shruthi0310"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Time(null));","lastModifiedDate":"2021-10-05"},{"lineNumber":13,"author":{"gitId":"Shruthi0310"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":14,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":15,"author":{"gitId":"felix-ong"},"content":"    @Test","lastModifiedDate":"2021-10-30"},{"lineNumber":16,"author":{"gitId":"felix-ong"},"content":"    public void constructor_invalidTime_throwsIllegalArgumentException() {","lastModifiedDate":"2021-10-30"},{"lineNumber":17,"author":{"gitId":"felix-ong"},"content":"        // empty string","lastModifiedDate":"2021-10-30"},{"lineNumber":18,"author":{"gitId":"felix-ong"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Time(\"\"));","lastModifiedDate":"2021-10-30"},{"lineNumber":19,"author":{"gitId":"felix-ong"},"content":"        // more than 4 digits","lastModifiedDate":"2021-10-30"},{"lineNumber":20,"author":{"gitId":"felix-ong"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Time(\"11111\"));","lastModifiedDate":"2021-10-30"},{"lineNumber":21,"author":{"gitId":"felix-ong"},"content":"        // not digits","lastModifiedDate":"2021-10-30"},{"lineNumber":22,"author":{"gitId":"felix-ong"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Time(\"@#$\"));","lastModifiedDate":"2021-10-30"},{"lineNumber":23,"author":{"gitId":"felix-ong"},"content":"        // invalid time format","lastModifiedDate":"2021-10-30"},{"lineNumber":24,"author":{"gitId":"felix-ong"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Time(\"2400\"));","lastModifiedDate":"2021-10-30"},{"lineNumber":25,"author":{"gitId":"felix-ong"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Time(\"2360\"));","lastModifiedDate":"2021-10-30"},{"lineNumber":26,"author":{"gitId":"felix-ong"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Time(\"11:00\"));","lastModifiedDate":"2021-10-30"},{"lineNumber":27,"author":{"gitId":"felix-ong"},"content":"    }","lastModifiedDate":"2021-10-30"},{"lineNumber":28,"author":{"gitId":"felix-ong"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":29,"author":{"gitId":"felix-ong"},"content":"    @Test","lastModifiedDate":"2021-10-30"},{"lineNumber":30,"author":{"gitId":"felix-ong"},"content":"    public void isValidTime() {","lastModifiedDate":"2021-10-30"},{"lineNumber":31,"author":{"gitId":"felix-ong"},"content":"        // null time","lastModifiedDate":"2021-10-30"},{"lineNumber":32,"author":{"gitId":"felix-ong"},"content":"        assertThrows(NullPointerException.class, () -\u003e Time.isValidTime(null));","lastModifiedDate":"2021-10-30"},{"lineNumber":33,"author":{"gitId":"felix-ong"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":34,"author":{"gitId":"felix-ong"},"content":"        // valid time","lastModifiedDate":"2021-10-30"},{"lineNumber":35,"author":{"gitId":"felix-ong"},"content":"        assertTrue(Time.isValidTime(\"0000\"));","lastModifiedDate":"2021-10-30"},{"lineNumber":36,"author":{"gitId":"felix-ong"},"content":"        assertTrue(Time.isValidTime(\"2359\"));","lastModifiedDate":"2021-10-30"},{"lineNumber":37,"author":{"gitId":"felix-ong"},"content":"        assertTrue(Time.isValidTime(\"1234\"));","lastModifiedDate":"2021-10-30"},{"lineNumber":38,"author":{"gitId":"felix-ong"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":39,"author":{"gitId":"felix-ong"},"content":"        // invalid time","lastModifiedDate":"2021-10-30"},{"lineNumber":40,"author":{"gitId":"felix-ong"},"content":"        assertFalse(Time.isValidTime(\"\")); // empty string","lastModifiedDate":"2021-10-30"},{"lineNumber":41,"author":{"gitId":"felix-ong"},"content":"        assertFalse(Time.isValidTime(\"11:00\")); // invalid format","lastModifiedDate":"2021-10-30"},{"lineNumber":42,"author":{"gitId":"felix-ong"},"content":"        assertFalse(Time.isValidTime(\"#$%%\")); // not digits","lastModifiedDate":"2021-10-30"},{"lineNumber":43,"author":{"gitId":"felix-ong"},"content":"    }","lastModifiedDate":"2021-10-30"},{"lineNumber":44,"author":{"gitId":"felix-ong"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":45,"author":{"gitId":"Shruthi0310"},"content":"    @Test","lastModifiedDate":"2021-10-05"},{"lineNumber":46,"author":{"gitId":"Shruthi0310"},"content":"    public void equals() {","lastModifiedDate":"2021-10-05"},{"lineNumber":47,"author":{"gitId":"felix-ong"},"content":"        Time time \u003d new Time(\"1130\");","lastModifiedDate":"2021-10-30"},{"lineNumber":48,"author":{"gitId":"felix-ong"},"content":"        Time timeCopy \u003d new Time(\"1130\");","lastModifiedDate":"2021-10-30"},{"lineNumber":49,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":50,"author":{"gitId":"Shruthi0310"},"content":"        assertTrue(time.equals(timeCopy));","lastModifiedDate":"2021-10-05"},{"lineNumber":51,"author":{"gitId":"Shruthi0310"},"content":"        assertTrue(time.equals(time));","lastModifiedDate":"2021-10-05"},{"lineNumber":52,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":53,"author":{"gitId":"Shruthi0310"},"content":"        assertFalse(time.equals(null));","lastModifiedDate":"2021-10-05"},{"lineNumber":54,"author":{"gitId":"felix-ong"},"content":"        Time differentTime \u003d new Time(\"1520\");","lastModifiedDate":"2021-10-30"},{"lineNumber":55,"author":{"gitId":"Shruthi0310"},"content":"        assertFalse(time.equals(differentTime));","lastModifiedDate":"2021-10-05"},{"lineNumber":56,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":57,"author":{"gitId":"Shruthi0310"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":58,"author":{"gitId":"Shruthi0310"},"content":"}","lastModifiedDate":"2021-10-05"}],"authorContributionMap":{"Shruthi0310":24,"felix-ong":34}},{"path":"src/test/java/seedu/address/model/facility/UniqueFacilityListTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Shruthi0310"},"content":"package seedu.address.model.facility;","lastModifiedDate":"2021-10-05"},{"lineNumber":2,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":3,"author":{"gitId":"YoYoCiti"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-09"},{"lineNumber":4,"author":{"gitId":"Shruthi0310"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-05"},{"lineNumber":5,"author":{"gitId":"YoYoCiti"},"content":"import static seedu.address.testutil.TypicalFacilities.KENT_RIDGE_OUTDOOR_TENNIS_COURTS_COURT_1;","lastModifiedDate":"2021-10-09"},{"lineNumber":6,"author":{"gitId":"Shruthi0310"},"content":"import static seedu.address.testutil.TypicalFacilities.KENT_RIDGE_OUTDOOR_TENNIS_COURTS_COURT_10;","lastModifiedDate":"2021-10-12"},{"lineNumber":7,"author":{"gitId":"Shruthi0310"},"content":"import static seedu.address.testutil.TypicalFacilities.KENT_RIDGE_SPORT_HALL_5_COURT_1;","lastModifiedDate":"2021-10-12"},{"lineNumber":8,"author":{"gitId":"Shruthi0310"},"content":"import static seedu.address.testutil.TypicalFacilities.TAMPINES_HUB_FIELD_SECTION_B;","lastModifiedDate":"2021-10-12"},{"lineNumber":9,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":10,"author":{"gitId":"Shruthi0310"},"content":"import java.time.DayOfWeek;","lastModifiedDate":"2021-10-23"},{"lineNumber":11,"author":{"gitId":"Shruthi0310"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-10-12"},{"lineNumber":12,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":13,"author":{"gitId":"Shruthi0310"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-06"},{"lineNumber":14,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":15,"author":{"gitId":"Shruthi0310"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2021-10-12"},{"lineNumber":16,"author":{"gitId":"Shruthi0310"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-10-12"},{"lineNumber":17,"author":{"gitId":"Shruthi0310"},"content":"import javafx.collections.transformation.FilteredList;","lastModifiedDate":"2021-10-12"},{"lineNumber":18,"author":{"gitId":"Shruthi0310"},"content":"import seedu.address.model.facility.exceptions.DuplicateFacilityException;","lastModifiedDate":"2021-10-12"},{"lineNumber":19,"author":{"gitId":"Shruthi0310"},"content":"import seedu.address.model.facility.exceptions.FacilityNotFoundException;","lastModifiedDate":"2021-10-12"},{"lineNumber":20,"author":{"gitId":"Shruthi0310"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2021-10-12"},{"lineNumber":21,"author":{"gitId":"YoYoCiti"},"content":"import seedu.address.testutil.FacilityBuilder;","lastModifiedDate":"2021-10-12"},{"lineNumber":22,"author":{"gitId":"Shruthi0310"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2021-10-12"},{"lineNumber":23,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":24,"author":{"gitId":"Shruthi0310"},"content":"public class UniqueFacilityListTest {","lastModifiedDate":"2021-10-05"},{"lineNumber":25,"author":{"gitId":"Shruthi0310"},"content":"    public final UniqueFacilityList uniqueFacilityList \u003d new UniqueFacilityList();","lastModifiedDate":"2021-10-05"},{"lineNumber":26,"author":{"gitId":"YoYoCiti"},"content":"    public final Facility facility \u003d new Facility(","lastModifiedDate":"2021-10-08"},{"lineNumber":27,"author":{"gitId":"YoYoCiti"},"content":"            new FacilityName(\"Court 1\"),","lastModifiedDate":"2021-10-08"},{"lineNumber":28,"author":{"gitId":"YoYoCiti"},"content":"            new Location(\"Kent Ridge Sports Hall\"),","lastModifiedDate":"2021-10-08"},{"lineNumber":29,"author":{"gitId":"felix-ong"},"content":"            new Time(\"1300\"),","lastModifiedDate":"2021-10-30"},{"lineNumber":30,"author":{"gitId":"YoYoCiti"},"content":"            new Capacity(\"5\"));","lastModifiedDate":"2021-10-08"},{"lineNumber":31,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":32,"author":{"gitId":"Shruthi0310"},"content":"    @Test","lastModifiedDate":"2021-10-05"},{"lineNumber":33,"author":{"gitId":"Shruthi0310"},"content":"    public void add_null_exceptionThrown() {","lastModifiedDate":"2021-10-05"},{"lineNumber":34,"author":{"gitId":"Shruthi0310"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueFacilityList.add(null));","lastModifiedDate":"2021-10-05"},{"lineNumber":35,"author":{"gitId":"Shruthi0310"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":36,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":37,"author":{"gitId":"Shruthi0310"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":38,"author":{"gitId":"Shruthi0310"},"content":"    public void setFacility_replaceExistingFacility_success() {","lastModifiedDate":"2021-10-12"},{"lineNumber":39,"author":{"gitId":"Shruthi0310"},"content":"        uniqueFacilityList.add(KENT_RIDGE_OUTDOOR_TENNIS_COURTS_COURT_1);","lastModifiedDate":"2021-10-12"},{"lineNumber":40,"author":{"gitId":"Shruthi0310"},"content":"        uniqueFacilityList.add(TAMPINES_HUB_FIELD_SECTION_B);","lastModifiedDate":"2021-10-12"},{"lineNumber":41,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":42,"author":{"gitId":"Shruthi0310"},"content":"        Facility editedFacility \u003d KENT_RIDGE_OUTDOOR_TENNIS_COURTS_COURT_10;","lastModifiedDate":"2021-10-12"},{"lineNumber":43,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":44,"author":{"gitId":"Shruthi0310"},"content":"        UniqueFacilityList expectedList \u003d new UniqueFacilityList();","lastModifiedDate":"2021-10-12"},{"lineNumber":45,"author":{"gitId":"Shruthi0310"},"content":"        expectedList.add(KENT_RIDGE_OUTDOOR_TENNIS_COURTS_COURT_10);","lastModifiedDate":"2021-10-12"},{"lineNumber":46,"author":{"gitId":"Shruthi0310"},"content":"        expectedList.add(TAMPINES_HUB_FIELD_SECTION_B);","lastModifiedDate":"2021-10-12"},{"lineNumber":47,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":48,"author":{"gitId":"Shruthi0310"},"content":"        uniqueFacilityList.replaceFacility(KENT_RIDGE_OUTDOOR_TENNIS_COURTS_COURT_1, editedFacility);","lastModifiedDate":"2021-10-12"},{"lineNumber":49,"author":{"gitId":"Shruthi0310"},"content":"        assertEquals(expectedList, uniqueFacilityList);","lastModifiedDate":"2021-10-12"},{"lineNumber":50,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":51,"author":{"gitId":"Shruthi0310"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":52,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":53,"author":{"gitId":"Shruthi0310"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":54,"author":{"gitId":"Shruthi0310"},"content":"    public void allocateMembersToFacilities_addsMembersToFacilities_success() {","lastModifiedDate":"2021-10-12"},{"lineNumber":55,"author":{"gitId":"Shruthi0310"},"content":"        uniqueFacilityList.add(new FacilityBuilder(KENT_RIDGE_OUTDOOR_TENNIS_COURTS_COURT_1).build());","lastModifiedDate":"2021-10-22"},{"lineNumber":56,"author":{"gitId":"Shruthi0310"},"content":"        uniqueFacilityList.add(new FacilityBuilder(TAMPINES_HUB_FIELD_SECTION_B).build());","lastModifiedDate":"2021-10-22"},{"lineNumber":57,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":58,"author":{"gitId":"Shruthi0310"},"content":"        ObservableList\u003cPerson\u003e members \u003d FXCollections.observableArrayList();","lastModifiedDate":"2021-10-12"},{"lineNumber":59,"author":{"gitId":"Shruthi0310"},"content":"        Person firstMember \u003d new PersonBuilder().withAvailability(Arrays.asList(DayOfWeek.MONDAY,","lastModifiedDate":"2021-10-23"},{"lineNumber":60,"author":{"gitId":"Shruthi0310"},"content":"                DayOfWeek.FRIDAY)).build();","lastModifiedDate":"2021-10-23"},{"lineNumber":61,"author":{"gitId":"Shruthi0310"},"content":"        Person secondMember \u003d new PersonBuilder().withAvailability(Arrays.asList(DayOfWeek.MONDAY,","lastModifiedDate":"2021-10-23"},{"lineNumber":62,"author":{"gitId":"Shruthi0310"},"content":"                DayOfWeek.THURSDAY)).build();","lastModifiedDate":"2021-10-23"},{"lineNumber":63,"author":{"gitId":"Shruthi0310"},"content":"        members.add(firstMember);","lastModifiedDate":"2021-10-12"},{"lineNumber":64,"author":{"gitId":"Shruthi0310"},"content":"        members.add(secondMember);","lastModifiedDate":"2021-10-12"},{"lineNumber":65,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":66,"author":{"gitId":"Shruthi0310"},"content":"        Facility updatedFacility \u003d new FacilityBuilder(KENT_RIDGE_OUTDOOR_TENNIS_COURTS_COURT_1).build();","lastModifiedDate":"2021-10-22"},{"lineNumber":67,"author":{"gitId":"Shruthi0310"},"content":"        updatedFacility.addPersonToFacility(firstMember);","lastModifiedDate":"2021-10-12"},{"lineNumber":68,"author":{"gitId":"Shruthi0310"},"content":"        updatedFacility.addPersonToFacility(secondMember);","lastModifiedDate":"2021-10-12"},{"lineNumber":69,"author":{"gitId":"Shruthi0310"},"content":"        UniqueFacilityList expected \u003d new UniqueFacilityList();","lastModifiedDate":"2021-10-12"},{"lineNumber":70,"author":{"gitId":"Shruthi0310"},"content":"        expected.setFacilities(Arrays.asList(updatedFacility, TAMPINES_HUB_FIELD_SECTION_B));","lastModifiedDate":"2021-10-12"},{"lineNumber":71,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":72,"author":{"gitId":"Shruthi0310"},"content":"        FilteredList\u003cPerson\u003e toAllocate \u003d new FilteredList\u003cPerson\u003e(members);","lastModifiedDate":"2021-10-12"},{"lineNumber":73,"author":{"gitId":"Shruthi0310"},"content":"        uniqueFacilityList.allocateMembersToFacilities(toAllocate);","lastModifiedDate":"2021-10-12"},{"lineNumber":74,"author":{"gitId":"Shruthi0310"},"content":"        assertEquals(expected, uniqueFacilityList);","lastModifiedDate":"2021-10-12"},{"lineNumber":75,"author":{"gitId":"Shruthi0310"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":76,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":77,"author":{"gitId":"Shruthi0310"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":78,"author":{"gitId":"Shruthi0310"},"content":"    public void replaceFacility_replaceNonExistentFacility_exceptionThrown() {","lastModifiedDate":"2021-10-12"},{"lineNumber":79,"author":{"gitId":"Shruthi0310"},"content":"        uniqueFacilityList.add(KENT_RIDGE_OUTDOOR_TENNIS_COURTS_COURT_1);","lastModifiedDate":"2021-10-12"},{"lineNumber":80,"author":{"gitId":"Shruthi0310"},"content":"        uniqueFacilityList.add(TAMPINES_HUB_FIELD_SECTION_B);","lastModifiedDate":"2021-10-12"},{"lineNumber":81,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":82,"author":{"gitId":"Shruthi0310"},"content":"        Facility editedFacility \u003d KENT_RIDGE_OUTDOOR_TENNIS_COURTS_COURT_10;","lastModifiedDate":"2021-10-12"},{"lineNumber":83,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":84,"author":{"gitId":"Shruthi0310"},"content":"        assertThrows(FacilityNotFoundException.class, () -\u003e uniqueFacilityList","lastModifiedDate":"2021-10-12"},{"lineNumber":85,"author":{"gitId":"Shruthi0310"},"content":"                .replaceFacility(KENT_RIDGE_SPORT_HALL_5_COURT_1, editedFacility));","lastModifiedDate":"2021-10-12"},{"lineNumber":86,"author":{"gitId":"Shruthi0310"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":87,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":88,"author":{"gitId":"YoYoCiti"},"content":"    @Test","lastModifiedDate":"2021-10-08"},{"lineNumber":89,"author":{"gitId":"YoYoCiti"},"content":"    public void remove_nullFacility_throwsNullPointerException() {","lastModifiedDate":"2021-10-08"},{"lineNumber":90,"author":{"gitId":"YoYoCiti"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueFacilityList.remove(null));","lastModifiedDate":"2021-10-08"},{"lineNumber":91,"author":{"gitId":"YoYoCiti"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":92,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":93,"author":{"gitId":"YoYoCiti"},"content":"    @Test","lastModifiedDate":"2021-10-08"},{"lineNumber":94,"author":{"gitId":"YoYoCiti"},"content":"    public void remove_facilityDoesNotExist_throwsFacilityNotFoundException() {","lastModifiedDate":"2021-10-08"},{"lineNumber":95,"author":{"gitId":"YoYoCiti"},"content":"        assertThrows(FacilityNotFoundException.class, () -\u003e uniqueFacilityList.remove(facility));","lastModifiedDate":"2021-10-08"},{"lineNumber":96,"author":{"gitId":"YoYoCiti"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":97,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":98,"author":{"gitId":"YoYoCiti"},"content":"    @Test","lastModifiedDate":"2021-10-08"},{"lineNumber":99,"author":{"gitId":"YoYoCiti"},"content":"    public void remove_existingFacility_removesFacility() {","lastModifiedDate":"2021-10-08"},{"lineNumber":100,"author":{"gitId":"YoYoCiti"},"content":"        uniqueFacilityList.add(facility);","lastModifiedDate":"2021-10-08"},{"lineNumber":101,"author":{"gitId":"YoYoCiti"},"content":"        uniqueFacilityList.remove(facility);","lastModifiedDate":"2021-10-08"},{"lineNumber":102,"author":{"gitId":"YoYoCiti"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":103,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":104,"author":{"gitId":"YoYoCiti"},"content":"    @Test","lastModifiedDate":"2021-10-09"},{"lineNumber":105,"author":{"gitId":"YoYoCiti"},"content":"    public void resetFacilities_clearsFacilityList() {","lastModifiedDate":"2021-10-09"},{"lineNumber":106,"author":{"gitId":"YoYoCiti"},"content":"        uniqueFacilityList.add(KENT_RIDGE_OUTDOOR_TENNIS_COURTS_COURT_1);","lastModifiedDate":"2021-10-09"},{"lineNumber":107,"author":{"gitId":"YoYoCiti"},"content":"        uniqueFacilityList.resetFacilities();","lastModifiedDate":"2021-10-09"},{"lineNumber":108,"author":{"gitId":"YoYoCiti"},"content":"        UniqueFacilityList expectedUniqueFacilityList \u003d new UniqueFacilityList();","lastModifiedDate":"2021-10-09"},{"lineNumber":109,"author":{"gitId":"YoYoCiti"},"content":"        assertEquals(expectedUniqueFacilityList, uniqueFacilityList);","lastModifiedDate":"2021-10-09"},{"lineNumber":110,"author":{"gitId":"YoYoCiti"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":111,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":112,"author":{"gitId":"YoYoCiti"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":113,"author":{"gitId":"YoYoCiti"},"content":"    public void setFacility_nullTargetFacility_throwsNullPointerException() {","lastModifiedDate":"2021-10-12"},{"lineNumber":114,"author":{"gitId":"YoYoCiti"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueFacilityList","lastModifiedDate":"2021-10-12"},{"lineNumber":115,"author":{"gitId":"YoYoCiti"},"content":"                .setFacility(null, KENT_RIDGE_OUTDOOR_TENNIS_COURTS_COURT_1));","lastModifiedDate":"2021-10-12"},{"lineNumber":116,"author":{"gitId":"YoYoCiti"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":117,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":118,"author":{"gitId":"YoYoCiti"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":119,"author":{"gitId":"YoYoCiti"},"content":"    public void setFacility_nullEditedFacility_throwsNullPointerException() {","lastModifiedDate":"2021-10-12"},{"lineNumber":120,"author":{"gitId":"YoYoCiti"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueFacilityList","lastModifiedDate":"2021-10-12"},{"lineNumber":121,"author":{"gitId":"YoYoCiti"},"content":"                .setFacility(KENT_RIDGE_OUTDOOR_TENNIS_COURTS_COURT_1, null));","lastModifiedDate":"2021-10-12"},{"lineNumber":122,"author":{"gitId":"YoYoCiti"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":123,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":124,"author":{"gitId":"YoYoCiti"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":125,"author":{"gitId":"YoYoCiti"},"content":"    public void setFacility_targetFacilityNotInList_throwsFacilityNotFoundException() {","lastModifiedDate":"2021-10-12"},{"lineNumber":126,"author":{"gitId":"YoYoCiti"},"content":"        assertThrows(FacilityNotFoundException.class, () -\u003e uniqueFacilityList","lastModifiedDate":"2021-10-12"},{"lineNumber":127,"author":{"gitId":"YoYoCiti"},"content":"                .setFacility(KENT_RIDGE_OUTDOOR_TENNIS_COURTS_COURT_1, KENT_RIDGE_OUTDOOR_TENNIS_COURTS_COURT_1));","lastModifiedDate":"2021-10-12"},{"lineNumber":128,"author":{"gitId":"YoYoCiti"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":129,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":130,"author":{"gitId":"YoYoCiti"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":131,"author":{"gitId":"YoYoCiti"},"content":"    public void setFacility_editedFacilityIsSameFacility_success() {","lastModifiedDate":"2021-10-12"},{"lineNumber":132,"author":{"gitId":"YoYoCiti"},"content":"        uniqueFacilityList.add(KENT_RIDGE_OUTDOOR_TENNIS_COURTS_COURT_1);","lastModifiedDate":"2021-10-12"},{"lineNumber":133,"author":{"gitId":"YoYoCiti"},"content":"        uniqueFacilityList","lastModifiedDate":"2021-10-12"},{"lineNumber":134,"author":{"gitId":"YoYoCiti"},"content":"                .setFacility(KENT_RIDGE_OUTDOOR_TENNIS_COURTS_COURT_1, KENT_RIDGE_OUTDOOR_TENNIS_COURTS_COURT_1);","lastModifiedDate":"2021-10-12"},{"lineNumber":135,"author":{"gitId":"YoYoCiti"},"content":"        UniqueFacilityList expectedUniqueFacilityList \u003d new UniqueFacilityList();","lastModifiedDate":"2021-10-12"},{"lineNumber":136,"author":{"gitId":"YoYoCiti"},"content":"        expectedUniqueFacilityList.add(KENT_RIDGE_OUTDOOR_TENNIS_COURTS_COURT_1);","lastModifiedDate":"2021-10-12"},{"lineNumber":137,"author":{"gitId":"YoYoCiti"},"content":"        assertEquals(expectedUniqueFacilityList, uniqueFacilityList);","lastModifiedDate":"2021-10-12"},{"lineNumber":138,"author":{"gitId":"YoYoCiti"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":139,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":140,"author":{"gitId":"YoYoCiti"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":141,"author":{"gitId":"YoYoCiti"},"content":"    public void setFacility_editedFacilityHasSameParameter_success() {","lastModifiedDate":"2021-10-12"},{"lineNumber":142,"author":{"gitId":"YoYoCiti"},"content":"        uniqueFacilityList.add(KENT_RIDGE_OUTDOOR_TENNIS_COURTS_COURT_1);","lastModifiedDate":"2021-10-12"},{"lineNumber":143,"author":{"gitId":"YoYoCiti"},"content":"        Facility editedFacil \u003d new FacilityBuilder(KENT_RIDGE_OUTDOOR_TENNIS_COURTS_COURT_1).build();","lastModifiedDate":"2021-10-12"},{"lineNumber":144,"author":{"gitId":"YoYoCiti"},"content":"        uniqueFacilityList.setFacility(KENT_RIDGE_OUTDOOR_TENNIS_COURTS_COURT_1, editedFacil);","lastModifiedDate":"2021-10-12"},{"lineNumber":145,"author":{"gitId":"YoYoCiti"},"content":"        UniqueFacilityList expectedUniqueFacilityList \u003d new UniqueFacilityList();","lastModifiedDate":"2021-10-12"},{"lineNumber":146,"author":{"gitId":"YoYoCiti"},"content":"        expectedUniqueFacilityList.add(editedFacil);","lastModifiedDate":"2021-10-12"},{"lineNumber":147,"author":{"gitId":"YoYoCiti"},"content":"        assertEquals(expectedUniqueFacilityList, uniqueFacilityList);","lastModifiedDate":"2021-10-12"},{"lineNumber":148,"author":{"gitId":"YoYoCiti"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":149,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":150,"author":{"gitId":"YoYoCiti"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":151,"author":{"gitId":"YoYoCiti"},"content":"    public void setFacility_editedFacilityHasDifferentParameter_success() {","lastModifiedDate":"2021-10-12"},{"lineNumber":152,"author":{"gitId":"YoYoCiti"},"content":"        uniqueFacilityList.add(KENT_RIDGE_OUTDOOR_TENNIS_COURTS_COURT_1);","lastModifiedDate":"2021-10-12"},{"lineNumber":153,"author":{"gitId":"YoYoCiti"},"content":"        uniqueFacilityList","lastModifiedDate":"2021-10-12"},{"lineNumber":154,"author":{"gitId":"YoYoCiti"},"content":"                .setFacility(KENT_RIDGE_OUTDOOR_TENNIS_COURTS_COURT_1, KENT_RIDGE_SPORT_HALL_5_COURT_1);","lastModifiedDate":"2021-10-12"},{"lineNumber":155,"author":{"gitId":"YoYoCiti"},"content":"        UniqueFacilityList expectedUniqueFacilityList \u003d new UniqueFacilityList();","lastModifiedDate":"2021-10-12"},{"lineNumber":156,"author":{"gitId":"YoYoCiti"},"content":"        expectedUniqueFacilityList.add(KENT_RIDGE_SPORT_HALL_5_COURT_1);","lastModifiedDate":"2021-10-12"},{"lineNumber":157,"author":{"gitId":"YoYoCiti"},"content":"        assertEquals(expectedUniqueFacilityList, uniqueFacilityList);","lastModifiedDate":"2021-10-12"},{"lineNumber":158,"author":{"gitId":"YoYoCiti"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":159,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":160,"author":{"gitId":"YoYoCiti"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":161,"author":{"gitId":"YoYoCiti"},"content":"    public void setFacility_editedFacilityHasNonUniqueParameter_throwsDuplicateFacilityException() {","lastModifiedDate":"2021-10-12"},{"lineNumber":162,"author":{"gitId":"YoYoCiti"},"content":"        uniqueFacilityList.add(KENT_RIDGE_OUTDOOR_TENNIS_COURTS_COURT_1);","lastModifiedDate":"2021-10-12"},{"lineNumber":163,"author":{"gitId":"YoYoCiti"},"content":"        uniqueFacilityList.add(KENT_RIDGE_SPORT_HALL_5_COURT_1);","lastModifiedDate":"2021-10-12"},{"lineNumber":164,"author":{"gitId":"YoYoCiti"},"content":"        assertThrows(DuplicateFacilityException.class, () -\u003e uniqueFacilityList","lastModifiedDate":"2021-10-12"},{"lineNumber":165,"author":{"gitId":"YoYoCiti"},"content":"                .setFacility(KENT_RIDGE_OUTDOOR_TENNIS_COURTS_COURT_1, KENT_RIDGE_SPORT_HALL_5_COURT_1));","lastModifiedDate":"2021-10-12"},{"lineNumber":166,"author":{"gitId":"YoYoCiti"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":167,"author":{"gitId":"Shruthi0310"},"content":"}","lastModifiedDate":"2021-10-05"}],"authorContributionMap":{"YoYoCiti":87,"Shruthi0310":79,"felix-ong":1}},{"path":"src/test/java/seedu/address/model/person/AvailabilityContainsKeywordsPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"tsinyee"},"content":"package seedu.address.model.person;","lastModifiedDate":"2021-10-28"},{"lineNumber":2,"author":{"gitId":"tsinyee"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":3,"author":{"gitId":"tsinyee"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-28"},{"lineNumber":4,"author":{"gitId":"tsinyee"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-28"},{"lineNumber":5,"author":{"gitId":"tsinyee"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":6,"author":{"gitId":"tsinyee"},"content":"import java.time.DayOfWeek;","lastModifiedDate":"2021-10-28"},{"lineNumber":7,"author":{"gitId":"tsinyee"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-10-28"},{"lineNumber":8,"author":{"gitId":"tsinyee"},"content":"import java.util.Collections;","lastModifiedDate":"2021-10-28"},{"lineNumber":9,"author":{"gitId":"tsinyee"},"content":"import java.util.List;","lastModifiedDate":"2021-10-28"},{"lineNumber":10,"author":{"gitId":"tsinyee"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":11,"author":{"gitId":"tsinyee"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-28"},{"lineNumber":12,"author":{"gitId":"tsinyee"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":13,"author":{"gitId":"tsinyee"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2021-10-28"},{"lineNumber":14,"author":{"gitId":"tsinyee"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":15,"author":{"gitId":"tsinyee"},"content":"public class AvailabilityContainsKeywordsPredicateTest {","lastModifiedDate":"2021-10-28"},{"lineNumber":16,"author":{"gitId":"tsinyee"},"content":"    private final List\u003cDayOfWeek\u003e monList \u003d Collections.singletonList(DayOfWeek.MONDAY);","lastModifiedDate":"2021-10-28"},{"lineNumber":17,"author":{"gitId":"tsinyee"},"content":"    private final List\u003cDayOfWeek\u003e monTueList \u003d Arrays.asList(DayOfWeek.MONDAY, DayOfWeek.TUESDAY);","lastModifiedDate":"2021-10-28"},{"lineNumber":18,"author":{"gitId":"tsinyee"},"content":"    private final List\u003cDayOfWeek\u003e wedThuFriList \u003d","lastModifiedDate":"2021-10-28"},{"lineNumber":19,"author":{"gitId":"tsinyee"},"content":"            Arrays.asList(DayOfWeek.WEDNESDAY, DayOfWeek.THURSDAY, DayOfWeek.FRIDAY);","lastModifiedDate":"2021-10-28"},{"lineNumber":20,"author":{"gitId":"tsinyee"},"content":"    private final Availability mon \u003d new Availability(Collections.singletonList(DayOfWeek.MONDAY));","lastModifiedDate":"2021-10-28"},{"lineNumber":21,"author":{"gitId":"tsinyee"},"content":"    private final Availability monTue \u003d new Availability(Arrays.asList(DayOfWeek.MONDAY, DayOfWeek.TUESDAY));","lastModifiedDate":"2021-10-28"},{"lineNumber":22,"author":{"gitId":"tsinyee"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":23,"author":{"gitId":"tsinyee"},"content":"    @Test","lastModifiedDate":"2021-10-28"},{"lineNumber":24,"author":{"gitId":"tsinyee"},"content":"    public void equals() {","lastModifiedDate":"2021-10-28"},{"lineNumber":25,"author":{"gitId":"tsinyee"},"content":"        List\u003cAvailability\u003e firstPredicateKeywordList \u003d Collections.singletonList(mon);","lastModifiedDate":"2021-10-28"},{"lineNumber":26,"author":{"gitId":"tsinyee"},"content":"        List\u003cAvailability\u003e secondPredicateKeywordList \u003d Collections.singletonList(monTue);","lastModifiedDate":"2021-10-28"},{"lineNumber":27,"author":{"gitId":"tsinyee"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":28,"author":{"gitId":"tsinyee"},"content":"        AvailabilityContainsKeywordsPredicate firstPredicate \u003d","lastModifiedDate":"2021-10-28"},{"lineNumber":29,"author":{"gitId":"tsinyee"},"content":"                new AvailabilityContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2021-10-28"},{"lineNumber":30,"author":{"gitId":"tsinyee"},"content":"        AvailabilityContainsKeywordsPredicate secondPredicate \u003d","lastModifiedDate":"2021-10-28"},{"lineNumber":31,"author":{"gitId":"tsinyee"},"content":"                new AvailabilityContainsKeywordsPredicate(secondPredicateKeywordList);","lastModifiedDate":"2021-10-28"},{"lineNumber":32,"author":{"gitId":"tsinyee"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":33,"author":{"gitId":"tsinyee"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-10-28"},{"lineNumber":34,"author":{"gitId":"tsinyee"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));","lastModifiedDate":"2021-10-28"},{"lineNumber":35,"author":{"gitId":"tsinyee"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":36,"author":{"gitId":"tsinyee"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2021-10-28"},{"lineNumber":37,"author":{"gitId":"tsinyee"},"content":"        AvailabilityContainsKeywordsPredicate firstPredicateCopy \u003d","lastModifiedDate":"2021-10-28"},{"lineNumber":38,"author":{"gitId":"tsinyee"},"content":"                new AvailabilityContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2021-10-28"},{"lineNumber":39,"author":{"gitId":"tsinyee"},"content":"        assertTrue(firstPredicate.equals(firstPredicateCopy));","lastModifiedDate":"2021-10-28"},{"lineNumber":40,"author":{"gitId":"tsinyee"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":41,"author":{"gitId":"tsinyee"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2021-10-28"},{"lineNumber":42,"author":{"gitId":"tsinyee"},"content":"        assertFalse(firstPredicate.equals(1));","lastModifiedDate":"2021-10-28"},{"lineNumber":43,"author":{"gitId":"tsinyee"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":44,"author":{"gitId":"tsinyee"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-10-28"},{"lineNumber":45,"author":{"gitId":"tsinyee"},"content":"        assertFalse(firstPredicate.equals(null));","lastModifiedDate":"2021-10-28"},{"lineNumber":46,"author":{"gitId":"tsinyee"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":47,"author":{"gitId":"tsinyee"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2021-10-28"},{"lineNumber":48,"author":{"gitId":"tsinyee"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));","lastModifiedDate":"2021-10-28"},{"lineNumber":49,"author":{"gitId":"tsinyee"},"content":"    }","lastModifiedDate":"2021-10-28"},{"lineNumber":50,"author":{"gitId":"tsinyee"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":51,"author":{"gitId":"tsinyee"},"content":"    @Test","lastModifiedDate":"2021-10-28"},{"lineNumber":52,"author":{"gitId":"tsinyee"},"content":"    public void test_availContainsKeywords_returnsTrue() {","lastModifiedDate":"2021-10-28"},{"lineNumber":53,"author":{"gitId":"tsinyee"},"content":"        // person\u0027s availability exactly matches the given availability of 1 day","lastModifiedDate":"2021-10-28"},{"lineNumber":54,"author":{"gitId":"tsinyee"},"content":"        AvailabilityContainsKeywordsPredicate predicate \u003d","lastModifiedDate":"2021-10-28"},{"lineNumber":55,"author":{"gitId":"tsinyee"},"content":"                new AvailabilityContainsKeywordsPredicate(Collections.singletonList(mon));","lastModifiedDate":"2021-10-28"},{"lineNumber":56,"author":{"gitId":"tsinyee"},"content":"        assertTrue(predicate.test(new PersonBuilder().withAvailability(monList).build()));","lastModifiedDate":"2021-10-28"},{"lineNumber":57,"author":{"gitId":"tsinyee"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":58,"author":{"gitId":"tsinyee"},"content":"        // person\u0027s availability exactly matches the given availability of 2 days","lastModifiedDate":"2021-10-28"},{"lineNumber":59,"author":{"gitId":"tsinyee"},"content":"        predicate \u003d new AvailabilityContainsKeywordsPredicate(Collections.singletonList(monTue));","lastModifiedDate":"2021-10-28"},{"lineNumber":60,"author":{"gitId":"tsinyee"},"content":"        assertTrue(predicate.test(new PersonBuilder().withAvailability(monTueList).build()));","lastModifiedDate":"2021-10-28"},{"lineNumber":61,"author":{"gitId":"tsinyee"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":62,"author":{"gitId":"tsinyee"},"content":"        // person\u0027s availability includes the given availability","lastModifiedDate":"2021-10-28"},{"lineNumber":63,"author":{"gitId":"tsinyee"},"content":"        predicate \u003d new AvailabilityContainsKeywordsPredicate(Collections.singletonList(mon));","lastModifiedDate":"2021-10-28"},{"lineNumber":64,"author":{"gitId":"tsinyee"},"content":"        assertTrue(predicate.test(new PersonBuilder().withAvailability(monTueList).build()));","lastModifiedDate":"2021-10-28"},{"lineNumber":65,"author":{"gitId":"tsinyee"},"content":"    }","lastModifiedDate":"2021-10-28"},{"lineNumber":66,"author":{"gitId":"tsinyee"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":67,"author":{"gitId":"tsinyee"},"content":"    @Test","lastModifiedDate":"2021-10-28"},{"lineNumber":68,"author":{"gitId":"tsinyee"},"content":"    public void test_availDoesNotContainKeywords_returnsFalse() {","lastModifiedDate":"2021-10-28"},{"lineNumber":69,"author":{"gitId":"tsinyee"},"content":"        // zero keywords","lastModifiedDate":"2021-10-28"},{"lineNumber":70,"author":{"gitId":"tsinyee"},"content":"        AvailabilityContainsKeywordsPredicate predicate \u003d","lastModifiedDate":"2021-10-28"},{"lineNumber":71,"author":{"gitId":"tsinyee"},"content":"                new AvailabilityContainsKeywordsPredicate(Collections.emptyList());","lastModifiedDate":"2021-10-28"},{"lineNumber":72,"author":{"gitId":"tsinyee"},"content":"        assertFalse(predicate.test(new PersonBuilder().withAvailability(monList).build()));","lastModifiedDate":"2021-10-28"},{"lineNumber":73,"author":{"gitId":"tsinyee"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":74,"author":{"gitId":"tsinyee"},"content":"        // person\u0027s availability has zero matching days","lastModifiedDate":"2021-10-28"},{"lineNumber":75,"author":{"gitId":"tsinyee"},"content":"        predicate \u003d new AvailabilityContainsKeywordsPredicate(Collections.singletonList(monTue));","lastModifiedDate":"2021-10-28"},{"lineNumber":76,"author":{"gitId":"tsinyee"},"content":"        assertFalse(predicate.test(new PersonBuilder().withAvailability(wedThuFriList).build()));","lastModifiedDate":"2021-10-28"},{"lineNumber":77,"author":{"gitId":"tsinyee"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":78,"author":{"gitId":"tsinyee"},"content":"        // person\u0027s availability matches only 1 day out of 2 given days","lastModifiedDate":"2021-10-28"},{"lineNumber":79,"author":{"gitId":"tsinyee"},"content":"        predicate \u003d new AvailabilityContainsKeywordsPredicate(Collections.singletonList(monTue));","lastModifiedDate":"2021-10-28"},{"lineNumber":80,"author":{"gitId":"tsinyee"},"content":"        assertFalse(predicate.test(new PersonBuilder().withAvailability(monList).build()));","lastModifiedDate":"2021-10-28"},{"lineNumber":81,"author":{"gitId":"tsinyee"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":82,"author":{"gitId":"tsinyee"},"content":"        // person has default availability","lastModifiedDate":"2021-10-28"},{"lineNumber":83,"author":{"gitId":"tsinyee"},"content":"        predicate \u003d new AvailabilityContainsKeywordsPredicate(Collections.singletonList(monTue));","lastModifiedDate":"2021-10-28"},{"lineNumber":84,"author":{"gitId":"tsinyee"},"content":"        assertFalse(predicate.test(new PersonBuilder().build()));","lastModifiedDate":"2021-10-28"},{"lineNumber":85,"author":{"gitId":"tsinyee"},"content":"    }","lastModifiedDate":"2021-10-28"},{"lineNumber":86,"author":{"gitId":"tsinyee"},"content":"}","lastModifiedDate":"2021-10-28"}],"authorContributionMap":{"tsinyee":86}},{"path":"src/test/java/seedu/address/model/person/AvailabilityTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"felix-ong"},"content":"package seedu.address.model.person;","lastModifiedDate":"2021-10-16"},{"lineNumber":2,"author":{"gitId":"felix-ong"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":3,"author":{"gitId":"felix-ong"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-16"},{"lineNumber":4,"author":{"gitId":"felix-ong"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-16"},{"lineNumber":5,"author":{"gitId":"felix-ong"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-16"},{"lineNumber":6,"author":{"gitId":"felix-ong"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":7,"author":{"gitId":"tsinyee"},"content":"import java.time.DayOfWeek;","lastModifiedDate":"2021-10-22"},{"lineNumber":8,"author":{"gitId":"tsinyee"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-22"},{"lineNumber":9,"author":{"gitId":"felix-ong"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-10-16"},{"lineNumber":10,"author":{"gitId":"felix-ong"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":11,"author":{"gitId":"felix-ong"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-16"},{"lineNumber":12,"author":{"gitId":"felix-ong"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":13,"author":{"gitId":"tsinyee"},"content":"@SuppressWarnings(\"checkstyle:Regexp\")","lastModifiedDate":"2021-10-22"},{"lineNumber":14,"author":{"gitId":"felix-ong"},"content":"public class AvailabilityTest {","lastModifiedDate":"2021-10-16"},{"lineNumber":15,"author":{"gitId":"tsinyee"},"content":"    private final Availability emptyAvailability \u003d new Availability(new ArrayList\u003c\u003e());","lastModifiedDate":"2021-10-22"},{"lineNumber":16,"author":{"gitId":"tsinyee"},"content":"    private final Availability nonEmptyAvailability \u003d new Availability(new ArrayList\u003c\u003e(Arrays.asList","lastModifiedDate":"2021-10-22"},{"lineNumber":17,"author":{"gitId":"tsinyee"},"content":"            (DayOfWeek.MONDAY, DayOfWeek.THURSDAY, DayOfWeek.FRIDAY)));","lastModifiedDate":"2021-10-22"},{"lineNumber":18,"author":{"gitId":"tsinyee"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":19,"author":{"gitId":"felix-ong"},"content":"    @Test","lastModifiedDate":"2021-10-16"},{"lineNumber":20,"author":{"gitId":"felix-ong"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2021-10-16"},{"lineNumber":21,"author":{"gitId":"felix-ong"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Availability(null));","lastModifiedDate":"2021-10-16"},{"lineNumber":22,"author":{"gitId":"felix-ong"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":23,"author":{"gitId":"felix-ong"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":24,"author":{"gitId":"felix-ong"},"content":"    @Test","lastModifiedDate":"2021-10-16"},{"lineNumber":25,"author":{"gitId":"felix-ong"},"content":"    public void isValidAvailability() {","lastModifiedDate":"2021-10-16"},{"lineNumber":26,"author":{"gitId":"felix-ong"},"content":"        // null availability","lastModifiedDate":"2021-10-16"},{"lineNumber":27,"author":{"gitId":"felix-ong"},"content":"        assertThrows(NullPointerException.class, () -\u003e Availability.isValidAvailability(null));","lastModifiedDate":"2021-10-16"},{"lineNumber":28,"author":{"gitId":"felix-ong"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":29,"author":{"gitId":"felix-ong"},"content":"        // invalid availabilities","lastModifiedDate":"2021-10-16"},{"lineNumber":30,"author":{"gitId":"felix-ong"},"content":"        assertFalse(Availability.isValidAvailability(Arrays.asList(\"one\", \"two\"))); // not integer","lastModifiedDate":"2021-10-16"},{"lineNumber":31,"author":{"gitId":"felix-ong"},"content":"        assertFalse(Availability.isValidAvailability(Arrays.asList(\"0\", \"8\"))); // out of range","lastModifiedDate":"2021-10-16"},{"lineNumber":32,"author":{"gitId":"felix-ong"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":33,"author":{"gitId":"felix-ong"},"content":"        // valid availabilities","lastModifiedDate":"2021-10-16"},{"lineNumber":34,"author":{"gitId":"felix-ong"},"content":"        assertTrue(Availability.isValidAvailability(Arrays.asList(\"1\", \"2\")));","lastModifiedDate":"2021-10-16"},{"lineNumber":35,"author":{"gitId":"felix-ong"},"content":"        assertTrue(Availability.isValidAvailability(Arrays.asList(\"\")));","lastModifiedDate":"2021-10-16"},{"lineNumber":36,"author":{"gitId":"felix-ong"},"content":"        assertTrue(Availability.isValidAvailability(Arrays.asList(\"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\")));","lastModifiedDate":"2021-10-16"},{"lineNumber":37,"author":{"gitId":"felix-ong"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":38,"author":{"gitId":"tsinyee"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":39,"author":{"gitId":"tsinyee"},"content":"    @Test","lastModifiedDate":"2021-10-22"},{"lineNumber":40,"author":{"gitId":"tsinyee"},"content":"    public void isEmpty() {","lastModifiedDate":"2021-10-22"},{"lineNumber":41,"author":{"gitId":"tsinyee"},"content":"        Availability nullAvailability \u003d null;","lastModifiedDate":"2021-10-22"},{"lineNumber":42,"author":{"gitId":"tsinyee"},"content":"        // null availability","lastModifiedDate":"2021-10-22"},{"lineNumber":43,"author":{"gitId":"tsinyee"},"content":"        assertThrows(NullPointerException.class, () -\u003e nullAvailability.isEmpty());","lastModifiedDate":"2021-10-22"},{"lineNumber":44,"author":{"gitId":"tsinyee"},"content":"        // empty availability list","lastModifiedDate":"2021-10-22"},{"lineNumber":45,"author":{"gitId":"tsinyee"},"content":"        assertTrue(emptyAvailability.isEmpty());","lastModifiedDate":"2021-10-22"},{"lineNumber":46,"author":{"gitId":"tsinyee"},"content":"        // non-empty availability list","lastModifiedDate":"2021-10-22"},{"lineNumber":47,"author":{"gitId":"tsinyee"},"content":"        assertFalse(nonEmptyAvailability.isEmpty());","lastModifiedDate":"2021-10-22"},{"lineNumber":48,"author":{"gitId":"tsinyee"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":49,"author":{"gitId":"felix-ong"},"content":"}","lastModifiedDate":"2021-10-16"}],"authorContributionMap":{"felix-ong":31,"tsinyee":18}},{"path":"src/test/java/seedu/address/model/person/NameContainsKeywordsPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2017-06-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class NameContainsKeywordsPredicateTest {","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        List\u003cString\u003e firstPredicateKeywordList \u003d Collections.singletonList(\"first\");","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        List\u003cString\u003e secondPredicateKeywordList \u003d Arrays.asList(\"first\", \"second\");","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate firstPredicate \u003d new NameContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate secondPredicate \u003d new NameContainsKeywordsPredicate(secondPredicateKeywordList);","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate firstPredicateCopy \u003d new NameContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertTrue(firstPredicate.equals(firstPredicateCopy));","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(1));","lastModifiedDate":"2017-06-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(null));","lastModifiedDate":"2017-06-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));","lastModifiedDate":"2017-06-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void test_nameContainsKeywords_returnsTrue() {","lastModifiedDate":"2017-08-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // One keyword","lastModifiedDate":"2017-06-12"},{"lineNumber":44,"author":{"gitId":"tsinyee"},"content":"        NameContainsKeywordsPredicate predicate \u003d new NameContainsKeywordsPredicate(Collections.singletonList(\"alice\"));","lastModifiedDate":"2021-10-31"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertTrue(predicate.test(new PersonBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":47,"author":{"gitId":"tsinyee"},"content":"        // two words","lastModifiedDate":"2021-10-31"},{"lineNumber":48,"author":{"gitId":"tsinyee"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"john doe\"));","lastModifiedDate":"2021-10-31"},{"lineNumber":49,"author":{"gitId":"tsinyee"},"content":"        assertTrue(predicate.test(new PersonBuilder().withName(\"John Doe\").build()));","lastModifiedDate":"2021-10-31"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void test_nameDoesNotContainKeywords_returnsFalse() {","lastModifiedDate":"2017-08-15"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        // Zero keywords","lastModifiedDate":"2017-06-12"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d new NameContainsKeywordsPredicate(Collections.emptyList());","lastModifiedDate":"2017-06-12"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertFalse(predicate.test(new PersonBuilder().withName(\"Alice\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        // Non-matching keyword","lastModifiedDate":"2017-06-12"},{"lineNumber":59,"author":{"gitId":"tsinyee"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"carol\"));","lastModifiedDate":"2021-10-31"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertFalse(predicate.test(new PersonBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":62,"author":{"gitId":"tsinyee"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"john lim\"));","lastModifiedDate":"2021-10-31"},{"lineNumber":63,"author":{"gitId":"tsinyee"},"content":"        assertFalse(predicate.test(new PersonBuilder().withName(\"John Tan\").build()));","lastModifiedDate":"2021-10-31"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":65,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"-":58,"tsinyee":7}},{"path":"src/test/java/seedu/address/model/person/PersonAvailableOnDayPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Shruthi0310"},"content":"package seedu.address.model.person;","lastModifiedDate":"2021-10-12"},{"lineNumber":2,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":3,"author":{"gitId":"Shruthi0310"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-12"},{"lineNumber":4,"author":{"gitId":"Shruthi0310"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-12"},{"lineNumber":5,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":6,"author":{"gitId":"felix-ong"},"content":"import java.time.DayOfWeek;","lastModifiedDate":"2021-10-16"},{"lineNumber":7,"author":{"gitId":"felix-ong"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-10-16"},{"lineNumber":8,"author":{"gitId":"felix-ong"},"content":"import java.util.List;","lastModifiedDate":"2021-10-16"},{"lineNumber":9,"author":{"gitId":"felix-ong"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":10,"author":{"gitId":"Shruthi0310"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-12"},{"lineNumber":11,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":12,"author":{"gitId":"Shruthi0310"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2021-10-12"},{"lineNumber":13,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":14,"author":{"gitId":"Shruthi0310"},"content":"public class PersonAvailableOnDayPredicateTest {","lastModifiedDate":"2021-10-12"},{"lineNumber":15,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":16,"author":{"gitId":"Shruthi0310"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":17,"author":{"gitId":"Shruthi0310"},"content":"    public void test_personAvailableOnDay_returnsTrue() {","lastModifiedDate":"2021-10-12"},{"lineNumber":18,"author":{"gitId":"felix-ong"},"content":"        List\u003cDayOfWeek\u003e availability \u003d Arrays.asList(DayOfWeek.MONDAY, DayOfWeek.FRIDAY);","lastModifiedDate":"2021-10-16"},{"lineNumber":19,"author":{"gitId":"felix-ong"},"content":"        Person person \u003d new PersonBuilder().withAvailability(availability).build();","lastModifiedDate":"2021-10-16"},{"lineNumber":20,"author":{"gitId":"felix-ong"},"content":"        PersonAvailableOnDayPredicate predicate \u003d new PersonAvailableOnDayPredicate(1);","lastModifiedDate":"2021-10-16"},{"lineNumber":21,"author":{"gitId":"Shruthi0310"},"content":"        assertTrue(predicate.test(person));","lastModifiedDate":"2021-10-12"},{"lineNumber":22,"author":{"gitId":"Shruthi0310"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":23,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":24,"author":{"gitId":"Shruthi0310"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":25,"author":{"gitId":"Shruthi0310"},"content":"    public void test_personNotAvailableOnDay_returnsFalse() {","lastModifiedDate":"2021-10-12"},{"lineNumber":26,"author":{"gitId":"felix-ong"},"content":"        List\u003cDayOfWeek\u003e availability \u003d Arrays.asList(DayOfWeek.MONDAY, DayOfWeek.FRIDAY);","lastModifiedDate":"2021-10-16"},{"lineNumber":27,"author":{"gitId":"felix-ong"},"content":"        Person person \u003d new PersonBuilder().withAvailability(availability).build();","lastModifiedDate":"2021-10-16"},{"lineNumber":28,"author":{"gitId":"felix-ong"},"content":"        PersonAvailableOnDayPredicate predicate \u003d new PersonAvailableOnDayPredicate(3);","lastModifiedDate":"2021-10-16"},{"lineNumber":29,"author":{"gitId":"Shruthi0310"},"content":"        assertFalse(predicate.test(person));","lastModifiedDate":"2021-10-12"},{"lineNumber":30,"author":{"gitId":"Shruthi0310"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":31,"author":{"gitId":"Shruthi0310"},"content":"}","lastModifiedDate":"2021-10-12"}],"authorContributionMap":{"Shruthi0310":21,"felix-ong":10}},{"path":"src/test/java/seedu/address/model/person/PersonTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2018-03-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":3,"author":{"gitId":"Shruthi0310"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":8,"author":{"gitId":"tsinyee"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_EXCO;","lastModifiedDate":"2021-10-21"},{"lineNumber":9,"author":{"gitId":"tsinyee"},"content":"import static seedu.address.model.util.SampleDataUtil.getTagSet;","lastModifiedDate":"2021-10-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2018-04-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":14,"author":{"gitId":"felix-ong"},"content":"import java.time.DayOfWeek;","lastModifiedDate":"2021-10-16"},{"lineNumber":15,"author":{"gitId":"felix-ong"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-10-16"},{"lineNumber":16,"author":{"gitId":"felix-ong"},"content":"import java.util.List;","lastModifiedDate":"2021-10-16"},{"lineNumber":17,"author":{"gitId":"felix-ong"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2018-03-26"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class PersonTest {","lastModifiedDate":"2018-03-26"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-10-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public void asObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2021-10-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2021-10-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e person.getTags().remove(0));","lastModifiedDate":"2021-10-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":31,"author":{"gitId":"tsinyee"},"content":"    public void constructor_null_throwsException() {","lastModifiedDate":"2021-10-10"},{"lineNumber":32,"author":{"gitId":"felix-ong"},"content":"        List\u003cDayOfWeek\u003e validAvailability \u003d Arrays.asList(DayOfWeek.MONDAY);","lastModifiedDate":"2021-10-16"},{"lineNumber":33,"author":{"gitId":"felix-ong"},"content":"        assertThrows(NullPointerException.class, () -\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":34,"author":{"gitId":"tsinyee"},"content":"                new Person(new Name(null), new Phone(\"92929292\"), new Availability(validAvailability),","lastModifiedDate":"2021-10-21"},{"lineNumber":35,"author":{"gitId":"tsinyee"},"content":"                        getTagSet(\"y1\")));","lastModifiedDate":"2021-10-21"},{"lineNumber":36,"author":{"gitId":"felix-ong"},"content":"        assertThrows(NullPointerException.class, () -\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":37,"author":{"gitId":"tsinyee"},"content":"                new Person(new Name(\"Alice\"), new Phone(null), new Availability(validAvailability),","lastModifiedDate":"2021-10-21"},{"lineNumber":38,"author":{"gitId":"tsinyee"},"content":"                        getTagSet(\"exco\")));","lastModifiedDate":"2021-10-21"},{"lineNumber":39,"author":{"gitId":"felix-ong"},"content":"        assertThrows(NullPointerException.class, () -\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":40,"author":{"gitId":"tsinyee"},"content":"                new Person(new Name(\"Alice\"), new Phone(\"92929292\"), new Availability(null), null));","lastModifiedDate":"2021-10-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-19"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public void isSamePerson() {","lastModifiedDate":"2018-04-19"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.isSamePerson(ALICE));","lastModifiedDate":"2018-04-19"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.isSamePerson(null));","lastModifiedDate":"2018-04-19"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // same name, all other attributes different -\u003e returns true","lastModifiedDate":"2020-12-18"},{"lineNumber":52,"author":{"gitId":"tsinyee"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2021-10-10"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.isSamePerson(editedAlice));","lastModifiedDate":"2020-12-18"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // different name, all other attributes same -\u003e returns false","lastModifiedDate":"2020-12-18"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.isSamePerson(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        // name differs in case, all other attributes same -\u003e returns false","lastModifiedDate":"2020-12-18"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        Person editedBob \u003d new PersonBuilder(BOB).withName(VALID_NAME_BOB.toLowerCase()).build();","lastModifiedDate":"2020-12-18"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertFalse(BOB.isSamePerson(editedBob));","lastModifiedDate":"2020-12-18"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        // name has trailing spaces, all other attributes same -\u003e returns false","lastModifiedDate":"2020-12-18"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        String nameWithTrailingSpaces \u003d VALID_NAME_BOB + \" \";","lastModifiedDate":"2020-12-18"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        editedBob \u003d new PersonBuilder(BOB).withName(nameWithTrailingSpaces).build();","lastModifiedDate":"2020-12-18"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertFalse(BOB.isSamePerson(editedBob));","lastModifiedDate":"2020-12-18"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":69,"author":{"gitId":"Shruthi0310"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":70,"author":{"gitId":"Shruthi0310"},"content":"    public void isAvailableOnDay_success() {","lastModifiedDate":"2021-10-12"},{"lineNumber":71,"author":{"gitId":"Shruthi0310"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2021-10-12"},{"lineNumber":72,"author":{"gitId":"felix-ong"},"content":"        assertFalse(person.isAvailableOnDay(1));","lastModifiedDate":"2021-10-16"},{"lineNumber":73,"author":{"gitId":"felix-ong"},"content":"        person \u003d new PersonBuilder()","lastModifiedDate":"2021-10-16"},{"lineNumber":74,"author":{"gitId":"felix-ong"},"content":"                .withAvailability(\"1 2 4\").build();","lastModifiedDate":"2021-10-16"},{"lineNumber":75,"author":{"gitId":"felix-ong"},"content":"        assertTrue(person.isAvailableOnDay(1));","lastModifiedDate":"2021-10-16"},{"lineNumber":76,"author":{"gitId":"felix-ong"},"content":"        assertTrue(person.isAvailableOnDay(2));","lastModifiedDate":"2021-10-16"},{"lineNumber":77,"author":{"gitId":"felix-ong"},"content":"        assertFalse(person.isAvailableOnDay(5));","lastModifiedDate":"2021-10-16"},{"lineNumber":78,"author":{"gitId":"Shruthi0310"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":79,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":80,"author":{"gitId":"Shruthi0310"},"content":"    @Test","lastModifiedDate":"2021-10-21"},{"lineNumber":81,"author":{"gitId":"Shruthi0310"},"content":"    public void clearTodayAttendance_success() {","lastModifiedDate":"2021-10-21"},{"lineNumber":82,"author":{"gitId":"Shruthi0310"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2021-10-21"},{"lineNumber":83,"author":{"gitId":"Shruthi0310"},"content":"        person.setPresent();","lastModifiedDate":"2021-10-21"},{"lineNumber":84,"author":{"gitId":"Shruthi0310"},"content":"        person.clearTodayAttendance();","lastModifiedDate":"2021-10-21"},{"lineNumber":85,"author":{"gitId":"Shruthi0310"},"content":"        Person expectedPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2021-10-21"},{"lineNumber":86,"author":{"gitId":"Shruthi0310"},"content":"        expectedPerson.getTotalAttendance().incrementAttendance();","lastModifiedDate":"2021-10-21"},{"lineNumber":87,"author":{"gitId":"Shruthi0310"},"content":"        assertEquals(person, expectedPerson);","lastModifiedDate":"2021-10-21"},{"lineNumber":88,"author":{"gitId":"Shruthi0310"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":89,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-19"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-04-19"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        Person aliceCopy \u003d new PersonBuilder(ALICE).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.equals(aliceCopy));","lastModifiedDate":"2018-04-19"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.equals(ALICE));","lastModifiedDate":"2018-04-19"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(null));","lastModifiedDate":"2018-04-19"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        // different type -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(5));","lastModifiedDate":"2018-04-19"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(BOB));","lastModifiedDate":"2018-04-19"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        // different phone -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        // different tags -\u003e returns false","lastModifiedDate":"2021-10-21"},{"lineNumber":117,"author":{"gitId":"tsinyee"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withTags(VALID_TAG_EXCO).build();","lastModifiedDate":"2021-10-21"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2021-10-21"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":120,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-09-01"}],"authorContributionMap":{"Shruthi0310":16,"-":80,"tsinyee":10,"felix-ong":14}},{"path":"src/test/java/seedu/address/model/person/PhoneContainsKeywordsPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"tsinyee"},"content":"package seedu.address.model.person;","lastModifiedDate":"2021-10-28"},{"lineNumber":2,"author":{"gitId":"tsinyee"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":3,"author":{"gitId":"tsinyee"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":4,"author":{"gitId":"tsinyee"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-28"},{"lineNumber":5,"author":{"gitId":"tsinyee"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-28"},{"lineNumber":6,"author":{"gitId":"tsinyee"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2021-10-28"},{"lineNumber":7,"author":{"gitId":"tsinyee"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2021-10-28"},{"lineNumber":8,"author":{"gitId":"tsinyee"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":9,"author":{"gitId":"tsinyee"},"content":"import java.util.Collections;","lastModifiedDate":"2021-10-28"},{"lineNumber":10,"author":{"gitId":"tsinyee"},"content":"import java.util.List;","lastModifiedDate":"2021-10-28"},{"lineNumber":11,"author":{"gitId":"tsinyee"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":12,"author":{"gitId":"tsinyee"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-28"},{"lineNumber":13,"author":{"gitId":"tsinyee"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":14,"author":{"gitId":"tsinyee"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2021-10-28"},{"lineNumber":15,"author":{"gitId":"tsinyee"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":16,"author":{"gitId":"tsinyee"},"content":"public class PhoneContainsKeywordsPredicateTest {","lastModifiedDate":"2021-10-28"},{"lineNumber":17,"author":{"gitId":"tsinyee"},"content":"    private final List\u003cPhone\u003e firstPredicateKeywordList \u003d Collections.singletonList(new Phone(VALID_PHONE_AMY));","lastModifiedDate":"2021-10-28"},{"lineNumber":18,"author":{"gitId":"tsinyee"},"content":"    private final List\u003cPhone\u003e secondPredicateKeywordList \u003d Collections.singletonList(new Phone(VALID_PHONE_BOB));","lastModifiedDate":"2021-10-28"},{"lineNumber":19,"author":{"gitId":"tsinyee"},"content":"    @Test","lastModifiedDate":"2021-10-28"},{"lineNumber":20,"author":{"gitId":"tsinyee"},"content":"    public void equals() {","lastModifiedDate":"2021-10-28"},{"lineNumber":21,"author":{"gitId":"tsinyee"},"content":"        PhoneContainsKeywordsPredicate firstPredicate \u003d new PhoneContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2021-10-28"},{"lineNumber":22,"author":{"gitId":"tsinyee"},"content":"        PhoneContainsKeywordsPredicate secondPredicate \u003d new PhoneContainsKeywordsPredicate(secondPredicateKeywordList);","lastModifiedDate":"2021-10-28"},{"lineNumber":23,"author":{"gitId":"tsinyee"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":24,"author":{"gitId":"tsinyee"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-10-28"},{"lineNumber":25,"author":{"gitId":"tsinyee"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));","lastModifiedDate":"2021-10-28"},{"lineNumber":26,"author":{"gitId":"tsinyee"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":27,"author":{"gitId":"tsinyee"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2021-10-28"},{"lineNumber":28,"author":{"gitId":"tsinyee"},"content":"        PhoneContainsKeywordsPredicate firstPredicateCopy \u003d new PhoneContainsKeywordsPredicate(","lastModifiedDate":"2021-10-28"},{"lineNumber":29,"author":{"gitId":"tsinyee"},"content":"                firstPredicateKeywordList);","lastModifiedDate":"2021-10-28"},{"lineNumber":30,"author":{"gitId":"tsinyee"},"content":"        assertTrue(firstPredicate.equals(firstPredicateCopy));","lastModifiedDate":"2021-10-28"},{"lineNumber":31,"author":{"gitId":"tsinyee"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":32,"author":{"gitId":"tsinyee"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2021-10-28"},{"lineNumber":33,"author":{"gitId":"tsinyee"},"content":"        assertFalse(firstPredicate.equals(1));","lastModifiedDate":"2021-10-28"},{"lineNumber":34,"author":{"gitId":"tsinyee"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":35,"author":{"gitId":"tsinyee"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-10-28"},{"lineNumber":36,"author":{"gitId":"tsinyee"},"content":"        assertFalse(firstPredicate.equals(null));","lastModifiedDate":"2021-10-28"},{"lineNumber":37,"author":{"gitId":"tsinyee"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":38,"author":{"gitId":"tsinyee"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2021-10-28"},{"lineNumber":39,"author":{"gitId":"tsinyee"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));","lastModifiedDate":"2021-10-28"},{"lineNumber":40,"author":{"gitId":"tsinyee"},"content":"    }","lastModifiedDate":"2021-10-28"},{"lineNumber":41,"author":{"gitId":"tsinyee"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":42,"author":{"gitId":"tsinyee"},"content":"    @Test","lastModifiedDate":"2021-10-28"},{"lineNumber":43,"author":{"gitId":"tsinyee"},"content":"    public void test_phoneContainsKeywords_returnsTrue() {","lastModifiedDate":"2021-10-28"},{"lineNumber":44,"author":{"gitId":"tsinyee"},"content":"        // matching keyword","lastModifiedDate":"2021-10-28"},{"lineNumber":45,"author":{"gitId":"tsinyee"},"content":"        PhoneContainsKeywordsPredicate predicate \u003d new PhoneContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2021-10-28"},{"lineNumber":46,"author":{"gitId":"tsinyee"},"content":"        assertTrue(predicate.test(new PersonBuilder().withPhone(VALID_PHONE_AMY).build()));","lastModifiedDate":"2021-10-28"},{"lineNumber":47,"author":{"gitId":"tsinyee"},"content":"    }","lastModifiedDate":"2021-10-28"},{"lineNumber":48,"author":{"gitId":"tsinyee"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":49,"author":{"gitId":"tsinyee"},"content":"    @Test","lastModifiedDate":"2021-10-28"},{"lineNumber":50,"author":{"gitId":"tsinyee"},"content":"    public void test_phoneDoesNotContainKeywords_returnsFalse() {","lastModifiedDate":"2021-10-28"},{"lineNumber":51,"author":{"gitId":"tsinyee"},"content":"        // zero keywords","lastModifiedDate":"2021-10-28"},{"lineNumber":52,"author":{"gitId":"tsinyee"},"content":"        PhoneContainsKeywordsPredicate predicate \u003d new PhoneContainsKeywordsPredicate(Collections.emptyList());","lastModifiedDate":"2021-10-28"},{"lineNumber":53,"author":{"gitId":"tsinyee"},"content":"        assertFalse(predicate.test(new PersonBuilder().withPhone(VALID_PHONE_BOB).build()));","lastModifiedDate":"2021-10-28"},{"lineNumber":54,"author":{"gitId":"tsinyee"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":55,"author":{"gitId":"tsinyee"},"content":"        // non-matching keyword","lastModifiedDate":"2021-10-28"},{"lineNumber":56,"author":{"gitId":"tsinyee"},"content":"        predicate \u003d new PhoneContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2021-10-28"},{"lineNumber":57,"author":{"gitId":"tsinyee"},"content":"        assertFalse(predicate.test(new PersonBuilder().withPhone(VALID_PHONE_BOB).build()));","lastModifiedDate":"2021-10-28"},{"lineNumber":58,"author":{"gitId":"tsinyee"},"content":"    }","lastModifiedDate":"2021-10-28"},{"lineNumber":59,"author":{"gitId":"tsinyee"},"content":"}","lastModifiedDate":"2021-10-28"}],"authorContributionMap":{"tsinyee":59}},{"path":"src/test/java/seedu/address/model/person/PhoneTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2017-01-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class PhoneTest {","lastModifiedDate":"2017-01-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Phone(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void constructor_invalidPhone_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        String invalidPhone \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Phone(invalidPhone));","lastModifiedDate":"2019-03-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void isValidPhone() {","lastModifiedDate":"2017-01-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // null phone number","lastModifiedDate":"2017-12-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Phone.isValidPhone(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // invalid phone numbers","lastModifiedDate":"2017-01-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"\")); // empty string","lastModifiedDate":"2017-01-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\" \")); // spaces only","lastModifiedDate":"2017-01-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"91\")); // less than 3 numbers","lastModifiedDate":"2017-05-04"},{"lineNumber":31,"author":{"gitId":"YoYoCiti"},"content":"        assertFalse(Phone.isValidPhone(\"9128384984837382\")); // more than 15 numbers","lastModifiedDate":"2021-11-01"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"phone\")); // non-numeric","lastModifiedDate":"2017-01-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"9011p041\")); // alphabets within digits","lastModifiedDate":"2017-01-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"9312 1534\")); // spaces within digits","lastModifiedDate":"2017-01-16"},{"lineNumber":35,"author":{"gitId":"YoYoCiti"},"content":"        assertFalse(Phone.isValidPhone(\"+6592829374\")); // symbols within digits","lastModifiedDate":"2021-11-01"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        // valid phone numbers","lastModifiedDate":"2017-01-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertTrue(Phone.isValidPhone(\"911\")); // exactly 3 numbers","lastModifiedDate":"2017-05-04"},{"lineNumber":39,"author":{"gitId":"YoYoCiti"},"content":"        assertTrue(Phone.isValidPhone(\"123456789012345\")); // exactly 15 numbers","lastModifiedDate":"2021-11-01"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertTrue(Phone.isValidPhone(\"93121534\"));","lastModifiedDate":"2017-01-16"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-16"}],"authorContributionMap":{"YoYoCiti":3,"-":39}},{"path":"src/test/java/seedu/address/model/person/TodayAttendanceContainsKeywordsPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"tsinyee"},"content":"package seedu.address.model.person;","lastModifiedDate":"2021-10-28"},{"lineNumber":2,"author":{"gitId":"tsinyee"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":3,"author":{"gitId":"tsinyee"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-28"},{"lineNumber":4,"author":{"gitId":"tsinyee"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-28"},{"lineNumber":5,"author":{"gitId":"tsinyee"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":6,"author":{"gitId":"tsinyee"},"content":"import java.util.Collections;","lastModifiedDate":"2021-10-28"},{"lineNumber":7,"author":{"gitId":"tsinyee"},"content":"import java.util.List;","lastModifiedDate":"2021-10-28"},{"lineNumber":8,"author":{"gitId":"tsinyee"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":9,"author":{"gitId":"tsinyee"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-28"},{"lineNumber":10,"author":{"gitId":"tsinyee"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":11,"author":{"gitId":"tsinyee"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2021-10-28"},{"lineNumber":12,"author":{"gitId":"tsinyee"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":13,"author":{"gitId":"tsinyee"},"content":"public class TodayAttendanceContainsKeywordsPredicateTest {","lastModifiedDate":"2021-10-28"},{"lineNumber":14,"author":{"gitId":"tsinyee"},"content":"    private final List\u003cTodayAttendance\u003e truePredicateKeywordList \u003d Collections.singletonList(new TodayAttendance(true));","lastModifiedDate":"2021-10-28"},{"lineNumber":15,"author":{"gitId":"tsinyee"},"content":"    private final List\u003cTodayAttendance\u003e falsePredicateKeywordList \u003d","lastModifiedDate":"2021-10-28"},{"lineNumber":16,"author":{"gitId":"tsinyee"},"content":"            Collections.singletonList(new TodayAttendance(false));","lastModifiedDate":"2021-10-28"},{"lineNumber":17,"author":{"gitId":"tsinyee"},"content":"    @Test","lastModifiedDate":"2021-10-28"},{"lineNumber":18,"author":{"gitId":"tsinyee"},"content":"    public void equals() {","lastModifiedDate":"2021-10-28"},{"lineNumber":19,"author":{"gitId":"tsinyee"},"content":"        TodayAttendanceContainsKeywordsPredicate firstPredicate \u003d","lastModifiedDate":"2021-10-28"},{"lineNumber":20,"author":{"gitId":"tsinyee"},"content":"                new TodayAttendanceContainsKeywordsPredicate(truePredicateKeywordList);","lastModifiedDate":"2021-10-28"},{"lineNumber":21,"author":{"gitId":"tsinyee"},"content":"        TodayAttendanceContainsKeywordsPredicate secondPredicate \u003d","lastModifiedDate":"2021-10-28"},{"lineNumber":22,"author":{"gitId":"tsinyee"},"content":"                new TodayAttendanceContainsKeywordsPredicate(falsePredicateKeywordList);","lastModifiedDate":"2021-10-28"},{"lineNumber":23,"author":{"gitId":"tsinyee"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":24,"author":{"gitId":"tsinyee"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-10-28"},{"lineNumber":25,"author":{"gitId":"tsinyee"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));","lastModifiedDate":"2021-10-28"},{"lineNumber":26,"author":{"gitId":"tsinyee"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":27,"author":{"gitId":"tsinyee"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2021-10-28"},{"lineNumber":28,"author":{"gitId":"tsinyee"},"content":"        TodayAttendanceContainsKeywordsPredicate firstPredicateCopy \u003d","lastModifiedDate":"2021-10-28"},{"lineNumber":29,"author":{"gitId":"tsinyee"},"content":"                new TodayAttendanceContainsKeywordsPredicate(truePredicateKeywordList);","lastModifiedDate":"2021-10-28"},{"lineNumber":30,"author":{"gitId":"tsinyee"},"content":"        assertTrue(firstPredicate.equals(firstPredicateCopy));","lastModifiedDate":"2021-10-28"},{"lineNumber":31,"author":{"gitId":"tsinyee"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":32,"author":{"gitId":"tsinyee"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2021-10-28"},{"lineNumber":33,"author":{"gitId":"tsinyee"},"content":"        assertFalse(firstPredicate.equals(1));","lastModifiedDate":"2021-10-28"},{"lineNumber":34,"author":{"gitId":"tsinyee"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":35,"author":{"gitId":"tsinyee"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-10-28"},{"lineNumber":36,"author":{"gitId":"tsinyee"},"content":"        assertFalse(firstPredicate.equals(null));","lastModifiedDate":"2021-10-28"},{"lineNumber":37,"author":{"gitId":"tsinyee"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":38,"author":{"gitId":"tsinyee"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2021-10-28"},{"lineNumber":39,"author":{"gitId":"tsinyee"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));","lastModifiedDate":"2021-10-28"},{"lineNumber":40,"author":{"gitId":"tsinyee"},"content":"    }","lastModifiedDate":"2021-10-28"},{"lineNumber":41,"author":{"gitId":"tsinyee"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":42,"author":{"gitId":"tsinyee"},"content":"    @Test","lastModifiedDate":"2021-10-28"},{"lineNumber":43,"author":{"gitId":"tsinyee"},"content":"    public void test_todayAttendanceContainsKeywords_returnsTrue() {","lastModifiedDate":"2021-10-28"},{"lineNumber":44,"author":{"gitId":"tsinyee"},"content":"        // matching keyword","lastModifiedDate":"2021-10-28"},{"lineNumber":45,"author":{"gitId":"tsinyee"},"content":"        TodayAttendanceContainsKeywordsPredicate predicate \u003d","lastModifiedDate":"2021-10-28"},{"lineNumber":46,"author":{"gitId":"tsinyee"},"content":"                new TodayAttendanceContainsKeywordsPredicate(truePredicateKeywordList);","lastModifiedDate":"2021-10-28"},{"lineNumber":47,"author":{"gitId":"tsinyee"},"content":"        assertTrue(predicate.test(new PersonBuilder().withTodayAttendance(true).build()));","lastModifiedDate":"2021-10-28"},{"lineNumber":48,"author":{"gitId":"tsinyee"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":49,"author":{"gitId":"tsinyee"},"content":"        predicate \u003d new TodayAttendanceContainsKeywordsPredicate(falsePredicateKeywordList);","lastModifiedDate":"2021-10-28"},{"lineNumber":50,"author":{"gitId":"tsinyee"},"content":"        assertTrue(predicate.test(new PersonBuilder().withTodayAttendance(false).build()));","lastModifiedDate":"2021-10-28"},{"lineNumber":51,"author":{"gitId":"tsinyee"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":52,"author":{"gitId":"tsinyee"},"content":"    }","lastModifiedDate":"2021-10-28"},{"lineNumber":53,"author":{"gitId":"tsinyee"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":54,"author":{"gitId":"tsinyee"},"content":"    @Test","lastModifiedDate":"2021-10-28"},{"lineNumber":55,"author":{"gitId":"tsinyee"},"content":"    public void test_todayAttendanceDoesNotContainKeywords_returnFalse() {","lastModifiedDate":"2021-10-28"},{"lineNumber":56,"author":{"gitId":"tsinyee"},"content":"        // zero keywords","lastModifiedDate":"2021-10-28"},{"lineNumber":57,"author":{"gitId":"tsinyee"},"content":"        TodayAttendanceContainsKeywordsPredicate predicate \u003d","lastModifiedDate":"2021-10-28"},{"lineNumber":58,"author":{"gitId":"tsinyee"},"content":"                new TodayAttendanceContainsKeywordsPredicate(Collections.emptyList());","lastModifiedDate":"2021-10-28"},{"lineNumber":59,"author":{"gitId":"tsinyee"},"content":"        assertFalse(predicate.test(new PersonBuilder().build()));","lastModifiedDate":"2021-10-28"},{"lineNumber":60,"author":{"gitId":"tsinyee"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":61,"author":{"gitId":"tsinyee"},"content":"        // non-matching keyword","lastModifiedDate":"2021-10-28"},{"lineNumber":62,"author":{"gitId":"tsinyee"},"content":"        predicate \u003d new TodayAttendanceContainsKeywordsPredicate(truePredicateKeywordList);","lastModifiedDate":"2021-10-28"},{"lineNumber":63,"author":{"gitId":"tsinyee"},"content":"        assertFalse(predicate.test(new PersonBuilder().withTodayAttendance(false).build()));","lastModifiedDate":"2021-10-28"},{"lineNumber":64,"author":{"gitId":"tsinyee"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":65,"author":{"gitId":"tsinyee"},"content":"        predicate \u003d new TodayAttendanceContainsKeywordsPredicate(falsePredicateKeywordList);","lastModifiedDate":"2021-10-28"},{"lineNumber":66,"author":{"gitId":"tsinyee"},"content":"        assertFalse(predicate.test(new PersonBuilder().withTodayAttendance(true).build()));","lastModifiedDate":"2021-10-28"},{"lineNumber":67,"author":{"gitId":"tsinyee"},"content":"    }","lastModifiedDate":"2021-10-28"},{"lineNumber":68,"author":{"gitId":"tsinyee"},"content":"}","lastModifiedDate":"2021-10-28"}],"authorContributionMap":{"tsinyee":68}},{"path":"src/test/java/seedu/address/model/person/TodayAttendanceTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Shruthi0310"},"content":"package seedu.address.model.person;","lastModifiedDate":"2021-10-21"},{"lineNumber":2,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":3,"author":{"gitId":"Shruthi0310"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-21"},{"lineNumber":4,"author":{"gitId":"Shruthi0310"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-21"},{"lineNumber":5,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":6,"author":{"gitId":"Shruthi0310"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-21"},{"lineNumber":7,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":8,"author":{"gitId":"Shruthi0310"},"content":"class TodayAttendanceTest {","lastModifiedDate":"2021-10-21"},{"lineNumber":9,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":10,"author":{"gitId":"Shruthi0310"},"content":"    @Test","lastModifiedDate":"2021-10-21"},{"lineNumber":11,"author":{"gitId":"Shruthi0310"},"content":"    void equals() {","lastModifiedDate":"2021-10-21"},{"lineNumber":12,"author":{"gitId":"Shruthi0310"},"content":"        TodayAttendance firstTodayAttendance \u003d new TodayAttendance(true);","lastModifiedDate":"2021-10-21"},{"lineNumber":13,"author":{"gitId":"Shruthi0310"},"content":"        TodayAttendance secondTodayAttendance \u003d new TodayAttendance(false);","lastModifiedDate":"2021-10-21"},{"lineNumber":14,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":15,"author":{"gitId":"Shruthi0310"},"content":"        assertTrue(firstTodayAttendance.equals(firstTodayAttendance));","lastModifiedDate":"2021-10-21"},{"lineNumber":16,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":17,"author":{"gitId":"Shruthi0310"},"content":"        TodayAttendance firstTodayAttendanceCopy \u003d new TodayAttendance(true);","lastModifiedDate":"2021-10-21"},{"lineNumber":18,"author":{"gitId":"Shruthi0310"},"content":"        assertTrue(firstTodayAttendance.equals(firstTodayAttendanceCopy));","lastModifiedDate":"2021-10-21"},{"lineNumber":19,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":20,"author":{"gitId":"Shruthi0310"},"content":"        assertFalse(firstTodayAttendance.equals(secondTodayAttendance));","lastModifiedDate":"2021-10-21"},{"lineNumber":21,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":22,"author":{"gitId":"Shruthi0310"},"content":"        assertFalse(firstTodayAttendance.equals(null));","lastModifiedDate":"2021-10-21"},{"lineNumber":23,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":24,"author":{"gitId":"Shruthi0310"},"content":"        assertFalse(firstTodayAttendance.equals(\"1\"));","lastModifiedDate":"2021-10-21"},{"lineNumber":25,"author":{"gitId":"Shruthi0310"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":26,"author":{"gitId":"Shruthi0310"},"content":"}","lastModifiedDate":"2021-10-21"}],"authorContributionMap":{"Shruthi0310":26}},{"path":"src/test/java/seedu/address/model/person/TotalAttendanceContainsKeywordsPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"tsinyee"},"content":"package seedu.address.model.person;","lastModifiedDate":"2021-10-28"},{"lineNumber":2,"author":{"gitId":"tsinyee"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":3,"author":{"gitId":"tsinyee"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-28"},{"lineNumber":4,"author":{"gitId":"tsinyee"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-28"},{"lineNumber":5,"author":{"gitId":"tsinyee"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":6,"author":{"gitId":"tsinyee"},"content":"import java.util.Collections;","lastModifiedDate":"2021-10-28"},{"lineNumber":7,"author":{"gitId":"tsinyee"},"content":"import java.util.List;","lastModifiedDate":"2021-10-28"},{"lineNumber":8,"author":{"gitId":"tsinyee"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":9,"author":{"gitId":"tsinyee"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-28"},{"lineNumber":10,"author":{"gitId":"tsinyee"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":11,"author":{"gitId":"tsinyee"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2021-10-28"},{"lineNumber":12,"author":{"gitId":"tsinyee"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":13,"author":{"gitId":"tsinyee"},"content":"public class TotalAttendanceContainsKeywordsPredicateTest {","lastModifiedDate":"2021-10-28"},{"lineNumber":14,"author":{"gitId":"tsinyee"},"content":"    private final List\u003cTotalAttendance\u003e firstPredicateKeywordList \u003d Collections.singletonList(new TotalAttendance(0));","lastModifiedDate":"2021-10-28"},{"lineNumber":15,"author":{"gitId":"tsinyee"},"content":"    private final List\u003cTotalAttendance\u003e secondPredicateKeywordList \u003d Collections.singletonList(new TotalAttendance(10));","lastModifiedDate":"2021-10-28"},{"lineNumber":16,"author":{"gitId":"tsinyee"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":17,"author":{"gitId":"tsinyee"},"content":"    @Test","lastModifiedDate":"2021-10-28"},{"lineNumber":18,"author":{"gitId":"tsinyee"},"content":"    public void equals() {","lastModifiedDate":"2021-10-28"},{"lineNumber":19,"author":{"gitId":"tsinyee"},"content":"        TotalAttendanceContainsKeywordsPredicate firstPredicate \u003d","lastModifiedDate":"2021-10-28"},{"lineNumber":20,"author":{"gitId":"tsinyee"},"content":"                new TotalAttendanceContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2021-10-28"},{"lineNumber":21,"author":{"gitId":"tsinyee"},"content":"        TotalAttendanceContainsKeywordsPredicate secondPredicate \u003d","lastModifiedDate":"2021-10-28"},{"lineNumber":22,"author":{"gitId":"tsinyee"},"content":"                new TotalAttendanceContainsKeywordsPredicate(secondPredicateKeywordList);","lastModifiedDate":"2021-10-28"},{"lineNumber":23,"author":{"gitId":"tsinyee"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":24,"author":{"gitId":"tsinyee"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-10-28"},{"lineNumber":25,"author":{"gitId":"tsinyee"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));","lastModifiedDate":"2021-10-28"},{"lineNumber":26,"author":{"gitId":"tsinyee"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":27,"author":{"gitId":"tsinyee"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2021-10-28"},{"lineNumber":28,"author":{"gitId":"tsinyee"},"content":"        TotalAttendanceContainsKeywordsPredicate firstPredicateCopy \u003d","lastModifiedDate":"2021-10-28"},{"lineNumber":29,"author":{"gitId":"tsinyee"},"content":"                new TotalAttendanceContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2021-10-28"},{"lineNumber":30,"author":{"gitId":"tsinyee"},"content":"        assertTrue(firstPredicate.equals(firstPredicateCopy));","lastModifiedDate":"2021-10-28"},{"lineNumber":31,"author":{"gitId":"tsinyee"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":32,"author":{"gitId":"tsinyee"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2021-10-28"},{"lineNumber":33,"author":{"gitId":"tsinyee"},"content":"        assertFalse(firstPredicate.equals(1));","lastModifiedDate":"2021-10-28"},{"lineNumber":34,"author":{"gitId":"tsinyee"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":35,"author":{"gitId":"tsinyee"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-10-28"},{"lineNumber":36,"author":{"gitId":"tsinyee"},"content":"        assertFalse(firstPredicate.equals(null));","lastModifiedDate":"2021-10-28"},{"lineNumber":37,"author":{"gitId":"tsinyee"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":38,"author":{"gitId":"tsinyee"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2021-10-28"},{"lineNumber":39,"author":{"gitId":"tsinyee"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));","lastModifiedDate":"2021-10-28"},{"lineNumber":40,"author":{"gitId":"tsinyee"},"content":"    }","lastModifiedDate":"2021-10-28"},{"lineNumber":41,"author":{"gitId":"tsinyee"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":42,"author":{"gitId":"tsinyee"},"content":"    @Test","lastModifiedDate":"2021-10-28"},{"lineNumber":43,"author":{"gitId":"tsinyee"},"content":"    public void test_totalAttendanceContainsKeywords_returnTrue() {","lastModifiedDate":"2021-10-28"},{"lineNumber":44,"author":{"gitId":"tsinyee"},"content":"        // matching keyword","lastModifiedDate":"2021-10-28"},{"lineNumber":45,"author":{"gitId":"tsinyee"},"content":"        TotalAttendanceContainsKeywordsPredicate predicate \u003d","lastModifiedDate":"2021-10-28"},{"lineNumber":46,"author":{"gitId":"tsinyee"},"content":"                new TotalAttendanceContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2021-10-28"},{"lineNumber":47,"author":{"gitId":"tsinyee"},"content":"        assertTrue(predicate.test(new PersonBuilder().withTotalAttendance(0).build()));","lastModifiedDate":"2021-10-28"},{"lineNumber":48,"author":{"gitId":"tsinyee"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":49,"author":{"gitId":"tsinyee"},"content":"        predicate \u003d new TotalAttendanceContainsKeywordsPredicate(secondPredicateKeywordList);","lastModifiedDate":"2021-10-28"},{"lineNumber":50,"author":{"gitId":"tsinyee"},"content":"        assertTrue(predicate.test(new PersonBuilder().withTotalAttendance(10).build()));","lastModifiedDate":"2021-10-28"},{"lineNumber":51,"author":{"gitId":"tsinyee"},"content":"    }","lastModifiedDate":"2021-10-28"},{"lineNumber":52,"author":{"gitId":"tsinyee"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":53,"author":{"gitId":"tsinyee"},"content":"    @Test","lastModifiedDate":"2021-10-28"},{"lineNumber":54,"author":{"gitId":"tsinyee"},"content":"    public void test_totalAttendanceDoesNotContainKeywords_returnFalse() {","lastModifiedDate":"2021-10-28"},{"lineNumber":55,"author":{"gitId":"tsinyee"},"content":"        // zero keywords","lastModifiedDate":"2021-10-28"},{"lineNumber":56,"author":{"gitId":"tsinyee"},"content":"        TotalAttendanceContainsKeywordsPredicate predicate \u003d","lastModifiedDate":"2021-10-28"},{"lineNumber":57,"author":{"gitId":"tsinyee"},"content":"                new TotalAttendanceContainsKeywordsPredicate(Collections.emptyList());","lastModifiedDate":"2021-10-28"},{"lineNumber":58,"author":{"gitId":"tsinyee"},"content":"        assertFalse(predicate.test(new PersonBuilder().build()));","lastModifiedDate":"2021-10-28"},{"lineNumber":59,"author":{"gitId":"tsinyee"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":60,"author":{"gitId":"tsinyee"},"content":"        // non-matching keyword","lastModifiedDate":"2021-10-28"},{"lineNumber":61,"author":{"gitId":"tsinyee"},"content":"        predicate \u003d new TotalAttendanceContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2021-10-28"},{"lineNumber":62,"author":{"gitId":"tsinyee"},"content":"        assertFalse(predicate.test(new PersonBuilder().withTotalAttendance(10).build()));","lastModifiedDate":"2021-10-28"},{"lineNumber":63,"author":{"gitId":"tsinyee"},"content":"    }","lastModifiedDate":"2021-10-28"},{"lineNumber":64,"author":{"gitId":"tsinyee"},"content":"}","lastModifiedDate":"2021-10-28"}],"authorContributionMap":{"tsinyee":64}},{"path":"src/test/java/seedu/address/model/person/TotalAttendanceTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Shruthi0310"},"content":"package seedu.address.model.person;","lastModifiedDate":"2021-10-21"},{"lineNumber":2,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":3,"author":{"gitId":"Shruthi0310"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-21"},{"lineNumber":4,"author":{"gitId":"Shruthi0310"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-21"},{"lineNumber":5,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":6,"author":{"gitId":"Shruthi0310"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-21"},{"lineNumber":7,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":8,"author":{"gitId":"Shruthi0310"},"content":"class TotalAttendanceTest {","lastModifiedDate":"2021-10-21"},{"lineNumber":9,"author":{"gitId":"Shruthi0310"},"content":"    @Test","lastModifiedDate":"2021-10-21"},{"lineNumber":10,"author":{"gitId":"Shruthi0310"},"content":"    void equals() {","lastModifiedDate":"2021-10-21"},{"lineNumber":11,"author":{"gitId":"Shruthi0310"},"content":"        TotalAttendance firstTotalAttendance \u003d new TotalAttendance(1);","lastModifiedDate":"2021-10-21"},{"lineNumber":12,"author":{"gitId":"Shruthi0310"},"content":"        TotalAttendance secondTotalAttendance \u003d new TotalAttendance(2);","lastModifiedDate":"2021-10-21"},{"lineNumber":13,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":14,"author":{"gitId":"Shruthi0310"},"content":"        assertTrue(firstTotalAttendance.equals(firstTotalAttendance));","lastModifiedDate":"2021-10-21"},{"lineNumber":15,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":16,"author":{"gitId":"Shruthi0310"},"content":"        TotalAttendance firstTotalAttendanceCopy \u003d new TotalAttendance(1);","lastModifiedDate":"2021-10-21"},{"lineNumber":17,"author":{"gitId":"Shruthi0310"},"content":"        assertTrue(firstTotalAttendance.equals(firstTotalAttendanceCopy));","lastModifiedDate":"2021-10-21"},{"lineNumber":18,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":19,"author":{"gitId":"Shruthi0310"},"content":"        assertFalse(firstTotalAttendance.equals(secondTotalAttendance));","lastModifiedDate":"2021-10-21"},{"lineNumber":20,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":21,"author":{"gitId":"Shruthi0310"},"content":"        assertFalse(firstTotalAttendance.equals(null));","lastModifiedDate":"2021-10-21"},{"lineNumber":22,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":23,"author":{"gitId":"Shruthi0310"},"content":"        assertFalse(firstTotalAttendance.equals(\"1\"));","lastModifiedDate":"2021-10-21"},{"lineNumber":24,"author":{"gitId":"Shruthi0310"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":25,"author":{"gitId":"Shruthi0310"},"content":"}","lastModifiedDate":"2021-10-21"}],"authorContributionMap":{"Shruthi0310":25}},{"path":"src/test/java/seedu/address/model/person/UniquePersonListTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2018-08-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2018-08-08"},{"lineNumber":8,"author":{"gitId":"tsinyee"},"content":"import static seedu.address.testutil.TypicalPersons.AMY;","lastModifiedDate":"2021-10-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BOB;","lastModifiedDate":"2018-08-08"},{"lineNumber":10,"author":{"gitId":"tsinyee"},"content":"import static seedu.address.testutil.TypicalPersons.CHOO;","lastModifiedDate":"2021-10-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2018-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.DuplicatePersonException;","lastModifiedDate":"2018-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.PersonNotFoundException;","lastModifiedDate":"2018-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2018-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class UniquePersonListTest {","lastModifiedDate":"2017-09-01"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private final UniquePersonList uniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void contains_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.contains(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void contains_personNotInList_returnsFalse() {","lastModifiedDate":"2018-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(uniquePersonList.contains(ALICE));","lastModifiedDate":"2018-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void contains_personInList_returnsTrue() {","lastModifiedDate":"2018-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertTrue(uniquePersonList.contains(ALICE));","lastModifiedDate":"2018-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void contains_personWithSameIdentityFieldsInList_returnsTrue() {","lastModifiedDate":"2018-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":45,"author":{"gitId":"tsinyee"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).build();","lastModifiedDate":"2021-10-10"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertTrue(uniquePersonList.contains(editedAlice));","lastModifiedDate":"2018-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void add_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.add(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public void add_duplicatePerson_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e uniquePersonList.add(ALICE));","lastModifiedDate":"2019-03-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public void setPerson_nullTargetPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPerson(null, ALICE));","lastModifiedDate":"2019-03-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public void setPerson_nullEditedPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPerson(ALICE, null));","lastModifiedDate":"2019-03-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public void setPerson_targetPersonNotInList_throwsPersonNotFoundException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertThrows(PersonNotFoundException.class, () -\u003e uniquePersonList.setPerson(ALICE, ALICE));","lastModifiedDate":"2019-03-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonIsSamePerson_success() {","lastModifiedDate":"2018-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        uniquePersonList.setPerson(ALICE, ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonHasSameIdentity_success() {","lastModifiedDate":"2018-08-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":87,"author":{"gitId":"tsinyee"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).build();","lastModifiedDate":"2021-10-10"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        uniquePersonList.setPerson(ALICE, editedAlice);","lastModifiedDate":"2018-08-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(editedAlice);","lastModifiedDate":"2018-08-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonHasDifferentIdentity_success() {","lastModifiedDate":"2018-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        uniquePersonList.setPerson(ALICE, BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonHasNonUniqueIdentity_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        uniquePersonList.add(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e uniquePersonList.setPerson(ALICE, BOB));","lastModifiedDate":"2019-03-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    public void remove_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.remove(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    public void remove_personDoesNotExist_throwsPersonNotFoundException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        assertThrows(PersonNotFoundException.class, () -\u003e uniquePersonList.remove(ALICE));","lastModifiedDate":"2019-03-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    public void remove_existingPerson_removesPerson() {","lastModifiedDate":"2018-08-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        uniquePersonList.remove(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    public void setPersons_nullUniquePersonList_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPersons((UniquePersonList) null));","lastModifiedDate":"2019-03-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    public void setPersons_uniquePersonList_replacesOwnListWithProvidedUniquePersonList() {","lastModifiedDate":"2018-08-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        uniquePersonList.setPersons(expectedUniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    public void setPersons_nullList_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPersons((List\u003cPerson\u003e) null));","lastModifiedDate":"2019-03-23"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    public void setPersons_list_replacesOwnListWithProvidedList() {","lastModifiedDate":"2018-08-08"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e personList \u003d Collections.singletonList(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        uniquePersonList.setPersons(personList);","lastModifiedDate":"2018-08-08"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    public void setPersons_listWithDuplicatePersons_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e listWithDuplicatePersons \u003d Arrays.asList(ALICE, ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e uniquePersonList.setPersons(listWithDuplicatePersons));","lastModifiedDate":"2019-03-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":163,"author":{"gitId":"tsinyee"},"content":"    @Test","lastModifiedDate":"2021-10-19"},{"lineNumber":164,"author":{"gitId":"tsinyee"},"content":"    public void sortMemberByName_sortedCorrectly() {","lastModifiedDate":"2021-10-24"},{"lineNumber":165,"author":{"gitId":"tsinyee"},"content":"        uniquePersonList.add(BOB);","lastModifiedDate":"2021-10-19"},{"lineNumber":166,"author":{"gitId":"tsinyee"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2021-10-19"},{"lineNumber":167,"author":{"gitId":"tsinyee"},"content":"        uniquePersonList.sortMembersByName();","lastModifiedDate":"2021-10-24"},{"lineNumber":168,"author":{"gitId":"tsinyee"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2021-10-19"},{"lineNumber":169,"author":{"gitId":"tsinyee"},"content":"        expectedUniquePersonList.add(ALICE);","lastModifiedDate":"2021-10-19"},{"lineNumber":170,"author":{"gitId":"tsinyee"},"content":"        expectedUniquePersonList.add(BOB);","lastModifiedDate":"2021-10-19"},{"lineNumber":171,"author":{"gitId":"tsinyee"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2021-10-19"},{"lineNumber":172,"author":{"gitId":"tsinyee"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":173,"author":{"gitId":"tsinyee"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":174,"author":{"gitId":"tsinyee"},"content":"    @Test","lastModifiedDate":"2021-10-24"},{"lineNumber":175,"author":{"gitId":"tsinyee"},"content":"    public void sortMembersByTag_sortedCorrectly() {","lastModifiedDate":"2021-10-24"},{"lineNumber":176,"author":{"gitId":"tsinyee"},"content":"        uniquePersonList.add(AMY);","lastModifiedDate":"2021-10-24"},{"lineNumber":177,"author":{"gitId":"tsinyee"},"content":"        uniquePersonList.add(BOB);","lastModifiedDate":"2021-10-24"},{"lineNumber":178,"author":{"gitId":"tsinyee"},"content":"        uniquePersonList.add(CHOO);","lastModifiedDate":"2021-10-24"},{"lineNumber":179,"author":{"gitId":"tsinyee"},"content":"        uniquePersonList.sortMembersByTags();","lastModifiedDate":"2021-10-24"},{"lineNumber":180,"author":{"gitId":"tsinyee"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2021-10-24"},{"lineNumber":181,"author":{"gitId":"tsinyee"},"content":"        expectedUniquePersonList.add(BOB);","lastModifiedDate":"2021-10-24"},{"lineNumber":182,"author":{"gitId":"tsinyee"},"content":"        expectedUniquePersonList.add(AMY);","lastModifiedDate":"2021-10-24"},{"lineNumber":183,"author":{"gitId":"tsinyee"},"content":"        expectedUniquePersonList.add(CHOO);","lastModifiedDate":"2021-10-24"},{"lineNumber":184,"author":{"gitId":"tsinyee"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2021-10-24"},{"lineNumber":185,"author":{"gitId":"tsinyee"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":186,"author":{"gitId":"tsinyee"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":187,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":188,"author":{"gitId":"-"},"content":"    public void asUnmodifiableObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2018-04-05"},{"lineNumber":189,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, ()","lastModifiedDate":"2019-03-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"            -\u003e uniquePersonList.asUnmodifiableObservableList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":192,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-09-01"}],"authorContributionMap":{"-":164,"tsinyee":28}},{"path":"src/test/java/seedu/address/model/sort/SortOrderTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"tsinyee"},"content":"package seedu.address.model.sort;","lastModifiedDate":"2021-10-24"},{"lineNumber":2,"author":{"gitId":"tsinyee"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":3,"author":{"gitId":"tsinyee"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-24"},{"lineNumber":4,"author":{"gitId":"tsinyee"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-24"},{"lineNumber":5,"author":{"gitId":"tsinyee"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-24"},{"lineNumber":6,"author":{"gitId":"tsinyee"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":7,"author":{"gitId":"tsinyee"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-24"},{"lineNumber":8,"author":{"gitId":"tsinyee"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":9,"author":{"gitId":"tsinyee"},"content":"public class SortOrderTest {","lastModifiedDate":"2021-10-24"},{"lineNumber":10,"author":{"gitId":"tsinyee"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":11,"author":{"gitId":"tsinyee"},"content":"    @Test","lastModifiedDate":"2021-10-24"},{"lineNumber":12,"author":{"gitId":"tsinyee"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2021-10-24"},{"lineNumber":13,"author":{"gitId":"tsinyee"},"content":"        assertThrows(NullPointerException.class, () -\u003e new SortOrder(null));","lastModifiedDate":"2021-10-24"},{"lineNumber":14,"author":{"gitId":"tsinyee"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":15,"author":{"gitId":"tsinyee"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":16,"author":{"gitId":"tsinyee"},"content":"    @Test","lastModifiedDate":"2021-10-24"},{"lineNumber":17,"author":{"gitId":"tsinyee"},"content":"    public void constructor_invalidSortOrder_throwsIllegalArgumentException() {","lastModifiedDate":"2021-10-24"},{"lineNumber":18,"author":{"gitId":"tsinyee"},"content":"        String invalidSortOrder \u003d \"\";","lastModifiedDate":"2021-10-24"},{"lineNumber":19,"author":{"gitId":"tsinyee"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new SortOrder(invalidSortOrder));","lastModifiedDate":"2021-10-24"},{"lineNumber":20,"author":{"gitId":"tsinyee"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":21,"author":{"gitId":"tsinyee"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":22,"author":{"gitId":"tsinyee"},"content":"    @Test","lastModifiedDate":"2021-10-24"},{"lineNumber":23,"author":{"gitId":"tsinyee"},"content":"    public void isValidSortOrder() {","lastModifiedDate":"2021-10-24"},{"lineNumber":24,"author":{"gitId":"tsinyee"},"content":"        // null sort order","lastModifiedDate":"2021-10-24"},{"lineNumber":25,"author":{"gitId":"tsinyee"},"content":"        assertThrows(NullPointerException.class, () -\u003e SortOrder.isValidSortOrder(null));","lastModifiedDate":"2021-10-24"},{"lineNumber":26,"author":{"gitId":"tsinyee"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":27,"author":{"gitId":"tsinyee"},"content":"        // invalid sort order","lastModifiedDate":"2021-10-24"},{"lineNumber":28,"author":{"gitId":"tsinyee"},"content":"        assertFalse(SortOrder.isValidSortOrder(\"\")); // empty string","lastModifiedDate":"2021-10-24"},{"lineNumber":29,"author":{"gitId":"tsinyee"},"content":"        assertFalse(SortOrder.isValidSortOrder(\" \")); // spaces only","lastModifiedDate":"2021-10-24"},{"lineNumber":30,"author":{"gitId":"tsinyee"},"content":"        assertFalse(SortOrder.isValidSortOrder(\"foo\")); // unknown sort order","lastModifiedDate":"2021-10-24"},{"lineNumber":31,"author":{"gitId":"tsinyee"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":32,"author":{"gitId":"tsinyee"},"content":"        // valid sort order","lastModifiedDate":"2021-10-24"},{"lineNumber":33,"author":{"gitId":"tsinyee"},"content":"        assertTrue(SortOrder.isValidSortOrder(\"name\"));","lastModifiedDate":"2021-10-24"},{"lineNumber":34,"author":{"gitId":"tsinyee"},"content":"        assertTrue(SortOrder.isValidSortOrder(\"NAME\"));","lastModifiedDate":"2021-10-24"},{"lineNumber":35,"author":{"gitId":"tsinyee"},"content":"        assertTrue(SortOrder.isValidSortOrder(\"NaMe\"));","lastModifiedDate":"2021-10-24"},{"lineNumber":36,"author":{"gitId":"tsinyee"},"content":"        assertTrue(SortOrder.isValidSortOrder(\"TaG\"));","lastModifiedDate":"2021-10-24"},{"lineNumber":37,"author":{"gitId":"tsinyee"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":38,"author":{"gitId":"tsinyee"},"content":"}","lastModifiedDate":"2021-10-24"}],"authorContributionMap":{"tsinyee":38}},{"path":"src/test/java/seedu/address/model/tag/TagsContainKeywordsPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"tsinyee"},"content":"package seedu.address.model.tag;","lastModifiedDate":"2021-10-28"},{"lineNumber":2,"author":{"gitId":"tsinyee"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":3,"author":{"gitId":"tsinyee"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-28"},{"lineNumber":4,"author":{"gitId":"tsinyee"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-28"},{"lineNumber":5,"author":{"gitId":"tsinyee"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_EXCO;","lastModifiedDate":"2021-10-28"},{"lineNumber":6,"author":{"gitId":"tsinyee"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_Y2;","lastModifiedDate":"2021-10-28"},{"lineNumber":7,"author":{"gitId":"tsinyee"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":8,"author":{"gitId":"tsinyee"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-10-28"},{"lineNumber":9,"author":{"gitId":"tsinyee"},"content":"import java.util.Collections;","lastModifiedDate":"2021-10-28"},{"lineNumber":10,"author":{"gitId":"tsinyee"},"content":"import java.util.List;","lastModifiedDate":"2021-10-28"},{"lineNumber":11,"author":{"gitId":"tsinyee"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":12,"author":{"gitId":"tsinyee"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-28"},{"lineNumber":13,"author":{"gitId":"tsinyee"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":14,"author":{"gitId":"tsinyee"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2021-10-28"},{"lineNumber":15,"author":{"gitId":"tsinyee"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":16,"author":{"gitId":"tsinyee"},"content":"public class TagsContainKeywordsPredicateTest {","lastModifiedDate":"2021-10-28"},{"lineNumber":17,"author":{"gitId":"tsinyee"},"content":"    private final List\u003cTag\u003e firstPredicateKeywordList \u003d Arrays.asList(new Tag(VALID_TAG_EXCO), new Tag(VALID_TAG_Y2));","lastModifiedDate":"2021-10-28"},{"lineNumber":18,"author":{"gitId":"tsinyee"},"content":"    private final List\u003cTag\u003e secondPredicateKeywordList \u003d Arrays.asList(new Tag(VALID_TAG_EXCO));","lastModifiedDate":"2021-10-28"},{"lineNumber":19,"author":{"gitId":"tsinyee"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":20,"author":{"gitId":"tsinyee"},"content":"    @Test","lastModifiedDate":"2021-10-28"},{"lineNumber":21,"author":{"gitId":"tsinyee"},"content":"    public void equals() {","lastModifiedDate":"2021-10-28"},{"lineNumber":22,"author":{"gitId":"tsinyee"},"content":"        TagsContainKeywordsPredicate firstPredicate \u003d new TagsContainKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2021-10-28"},{"lineNumber":23,"author":{"gitId":"tsinyee"},"content":"        TagsContainKeywordsPredicate secondPredicate \u003d new TagsContainKeywordsPredicate(secondPredicateKeywordList);","lastModifiedDate":"2021-10-28"},{"lineNumber":24,"author":{"gitId":"tsinyee"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":25,"author":{"gitId":"tsinyee"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-10-28"},{"lineNumber":26,"author":{"gitId":"tsinyee"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));","lastModifiedDate":"2021-10-28"},{"lineNumber":27,"author":{"gitId":"tsinyee"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":28,"author":{"gitId":"tsinyee"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2021-10-28"},{"lineNumber":29,"author":{"gitId":"tsinyee"},"content":"        TagsContainKeywordsPredicate firstPredicateCopy \u003d new TagsContainKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2021-10-28"},{"lineNumber":30,"author":{"gitId":"tsinyee"},"content":"        assertTrue(firstPredicate.equals(firstPredicateCopy));","lastModifiedDate":"2021-10-28"},{"lineNumber":31,"author":{"gitId":"tsinyee"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":32,"author":{"gitId":"tsinyee"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2021-10-28"},{"lineNumber":33,"author":{"gitId":"tsinyee"},"content":"        assertFalse(firstPredicate.equals(1));","lastModifiedDate":"2021-10-28"},{"lineNumber":34,"author":{"gitId":"tsinyee"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":35,"author":{"gitId":"tsinyee"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-10-28"},{"lineNumber":36,"author":{"gitId":"tsinyee"},"content":"        assertFalse(firstPredicate.equals(null));","lastModifiedDate":"2021-10-28"},{"lineNumber":37,"author":{"gitId":"tsinyee"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":38,"author":{"gitId":"tsinyee"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2021-10-28"},{"lineNumber":39,"author":{"gitId":"tsinyee"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));","lastModifiedDate":"2021-10-28"},{"lineNumber":40,"author":{"gitId":"tsinyee"},"content":"    }","lastModifiedDate":"2021-10-28"},{"lineNumber":41,"author":{"gitId":"tsinyee"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":42,"author":{"gitId":"tsinyee"},"content":"    @Test","lastModifiedDate":"2021-10-28"},{"lineNumber":43,"author":{"gitId":"tsinyee"},"content":"    public void test_tagsContainKeywords_returnsTrue() {","lastModifiedDate":"2021-10-28"},{"lineNumber":44,"author":{"gitId":"tsinyee"},"content":"        // one keyword","lastModifiedDate":"2021-10-28"},{"lineNumber":45,"author":{"gitId":"tsinyee"},"content":"        TagsContainKeywordsPredicate predicate \u003d new TagsContainKeywordsPredicate(secondPredicateKeywordList);","lastModifiedDate":"2021-10-28"},{"lineNumber":46,"author":{"gitId":"tsinyee"},"content":"        assertTrue(predicate.test(new PersonBuilder().withTags(VALID_TAG_EXCO).build()));","lastModifiedDate":"2021-10-28"},{"lineNumber":47,"author":{"gitId":"tsinyee"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":48,"author":{"gitId":"tsinyee"},"content":"        // only one matching keyword","lastModifiedDate":"2021-10-28"},{"lineNumber":49,"author":{"gitId":"tsinyee"},"content":"        predicate \u003d new TagsContainKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2021-10-28"},{"lineNumber":50,"author":{"gitId":"tsinyee"},"content":"        assertTrue(predicate.test(new PersonBuilder().withTags(VALID_TAG_EXCO).build()));","lastModifiedDate":"2021-10-28"},{"lineNumber":51,"author":{"gitId":"tsinyee"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":52,"author":{"gitId":"tsinyee"},"content":"        // multiple keywords","lastModifiedDate":"2021-10-28"},{"lineNumber":53,"author":{"gitId":"tsinyee"},"content":"        predicate \u003d new TagsContainKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2021-10-28"},{"lineNumber":54,"author":{"gitId":"tsinyee"},"content":"        assertTrue(predicate.test(new PersonBuilder().withTags(VALID_TAG_EXCO, VALID_TAG_Y2).build()));","lastModifiedDate":"2021-10-28"},{"lineNumber":55,"author":{"gitId":"tsinyee"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":56,"author":{"gitId":"tsinyee"},"content":"        // mixed-case keywords","lastModifiedDate":"2021-10-28"},{"lineNumber":57,"author":{"gitId":"tsinyee"},"content":"        predicate \u003d new TagsContainKeywordsPredicate(Collections.singletonList(new Tag(\"exCo\")));","lastModifiedDate":"2021-10-28"},{"lineNumber":58,"author":{"gitId":"tsinyee"},"content":"        assertTrue(predicate.test(new PersonBuilder().withTags(VALID_TAG_EXCO).build()));","lastModifiedDate":"2021-10-28"},{"lineNumber":59,"author":{"gitId":"tsinyee"},"content":"    }","lastModifiedDate":"2021-10-28"},{"lineNumber":60,"author":{"gitId":"tsinyee"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":61,"author":{"gitId":"tsinyee"},"content":"    @Test","lastModifiedDate":"2021-10-28"},{"lineNumber":62,"author":{"gitId":"tsinyee"},"content":"    public void test_tagsDoesNotContainKeywords_returnsFalse() {","lastModifiedDate":"2021-10-28"},{"lineNumber":63,"author":{"gitId":"tsinyee"},"content":"        // zero keywords","lastModifiedDate":"2021-10-28"},{"lineNumber":64,"author":{"gitId":"tsinyee"},"content":"        TagsContainKeywordsPredicate predicate \u003d new TagsContainKeywordsPredicate(Collections.emptyList());","lastModifiedDate":"2021-10-28"},{"lineNumber":65,"author":{"gitId":"tsinyee"},"content":"        assertFalse(predicate.test(new PersonBuilder().withTags(VALID_TAG_EXCO).build()));","lastModifiedDate":"2021-10-28"},{"lineNumber":66,"author":{"gitId":"tsinyee"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":67,"author":{"gitId":"tsinyee"},"content":"        // non-matching keywords","lastModifiedDate":"2021-10-28"},{"lineNumber":68,"author":{"gitId":"tsinyee"},"content":"        predicate \u003d new TagsContainKeywordsPredicate(secondPredicateKeywordList);","lastModifiedDate":"2021-10-28"},{"lineNumber":69,"author":{"gitId":"tsinyee"},"content":"        assertFalse(predicate.test(new PersonBuilder().withTags(VALID_TAG_Y2).build()));","lastModifiedDate":"2021-10-28"},{"lineNumber":70,"author":{"gitId":"tsinyee"},"content":"    }","lastModifiedDate":"2021-10-28"},{"lineNumber":71,"author":{"gitId":"tsinyee"},"content":"}","lastModifiedDate":"2021-10-28"}],"authorContributionMap":{"tsinyee":71}},{"path":"src/test/java/seedu/address/storage/JsonAdaptedFacilityTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Moley456"},"content":"package seedu.address.storage;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"Moley456"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":3,"author":{"gitId":"Moley456"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-11"},{"lineNumber":4,"author":{"gitId":"Moley456"},"content":"import static seedu.address.storage.JsonAdaptedPerson.MISSING_FIELD_MESSAGE_FORMAT;","lastModifiedDate":"2021-10-11"},{"lineNumber":5,"author":{"gitId":"Moley456"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-11"},{"lineNumber":6,"author":{"gitId":"Shruthi0310"},"content":"import static seedu.address.testutil.TypicalFacilities.FIELD;","lastModifiedDate":"2021-10-22"},{"lineNumber":7,"author":{"gitId":"Moley456"},"content":"import static seedu.address.testutil.TypicalFacilities.KENT_RIDGE_SPORT_HALL_5_COURT_1;","lastModifiedDate":"2021-10-11"},{"lineNumber":8,"author":{"gitId":"Moley456"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":9,"author":{"gitId":"Moley456"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-27"},{"lineNumber":10,"author":{"gitId":"Moley456"},"content":"import java.util.List;","lastModifiedDate":"2021-10-27"},{"lineNumber":11,"author":{"gitId":"Moley456"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":12,"author":{"gitId":"Moley456"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-11"},{"lineNumber":13,"author":{"gitId":"Moley456"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":14,"author":{"gitId":"Moley456"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2021-10-11"},{"lineNumber":15,"author":{"gitId":"Moley456"},"content":"import seedu.address.model.facility.Capacity;","lastModifiedDate":"2021-10-11"},{"lineNumber":16,"author":{"gitId":"Moley456"},"content":"import seedu.address.model.facility.FacilityName;","lastModifiedDate":"2021-10-11"},{"lineNumber":17,"author":{"gitId":"Moley456"},"content":"import seedu.address.model.facility.Location;","lastModifiedDate":"2021-10-11"},{"lineNumber":18,"author":{"gitId":"Moley456"},"content":"import seedu.address.model.facility.Time;","lastModifiedDate":"2021-10-11"},{"lineNumber":19,"author":{"gitId":"Moley456"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":20,"author":{"gitId":"Moley456"},"content":"public class JsonAdaptedFacilityTest {","lastModifiedDate":"2021-10-11"},{"lineNumber":21,"author":{"gitId":"Moley456"},"content":"    private static final String INVALID_FACILITY_NAME \u003d \"Court 1!\";","lastModifiedDate":"2021-10-11"},{"lineNumber":22,"author":{"gitId":"Moley456"},"content":"    private static final String INVALID_LOCATION \u003d \"University Town Sports Hall @\";","lastModifiedDate":"2021-10-11"},{"lineNumber":23,"author":{"gitId":"Moley456"},"content":"    private static final String INVALID_TIME \u003d \"200\";","lastModifiedDate":"2021-10-11"},{"lineNumber":24,"author":{"gitId":"Moley456"},"content":"    private static final String INVALID_CAPACITY \u003d \"5a\";","lastModifiedDate":"2021-10-11"},{"lineNumber":25,"author":{"gitId":"Moley456"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":26,"author":{"gitId":"Moley456"},"content":"    private static final String VALID_FACILITY_NAME \u003d KENT_RIDGE_SPORT_HALL_5_COURT_1.getName().toString();","lastModifiedDate":"2021-10-11"},{"lineNumber":27,"author":{"gitId":"Moley456"},"content":"    private static final String VALID_LOCATION \u003d KENT_RIDGE_SPORT_HALL_5_COURT_1.getLocation().toString();","lastModifiedDate":"2021-10-11"},{"lineNumber":28,"author":{"gitId":"felix-ong"},"content":"    private static final String VALID_TIME \u003d KENT_RIDGE_SPORT_HALL_5_COURT_1.getTime().time;","lastModifiedDate":"2021-10-30"},{"lineNumber":29,"author":{"gitId":"Moley456"},"content":"    private static final String VALID_CAPACITY \u003d KENT_RIDGE_SPORT_HALL_5_COURT_1.getCapacity().toString();","lastModifiedDate":"2021-10-11"},{"lineNumber":30,"author":{"gitId":"Moley456"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":31,"author":{"gitId":"Moley456"},"content":"    private static final List\u003cJsonAdaptedPerson\u003e EMPTY_ALLOCATION_LIST \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-27"},{"lineNumber":32,"author":{"gitId":"Moley456"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":33,"author":{"gitId":"Moley456"},"content":"    @Test","lastModifiedDate":"2021-10-11"},{"lineNumber":34,"author":{"gitId":"Moley456"},"content":"    public void toModelType_validFacilityDetails_returnsFacility() throws Exception {","lastModifiedDate":"2021-10-11"},{"lineNumber":35,"author":{"gitId":"Shruthi0310"},"content":"        JsonAdaptedFacility facility \u003d new JsonAdaptedFacility(FIELD);","lastModifiedDate":"2021-10-22"},{"lineNumber":36,"author":{"gitId":"Shruthi0310"},"content":"        assertEquals(FIELD, facility.toModelType());","lastModifiedDate":"2021-10-22"},{"lineNumber":37,"author":{"gitId":"Moley456"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":38,"author":{"gitId":"Moley456"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":39,"author":{"gitId":"Moley456"},"content":"    @Test","lastModifiedDate":"2021-10-11"},{"lineNumber":40,"author":{"gitId":"Moley456"},"content":"    public void toModelType_invalidFacilityName_throwsIllegalValueException() {","lastModifiedDate":"2021-10-11"},{"lineNumber":41,"author":{"gitId":"Moley456"},"content":"        JsonAdaptedFacility facility \u003d","lastModifiedDate":"2021-10-11"},{"lineNumber":42,"author":{"gitId":"Moley456"},"content":"                new JsonAdaptedFacility(INVALID_FACILITY_NAME, VALID_LOCATION, VALID_TIME,","lastModifiedDate":"2021-10-27"},{"lineNumber":43,"author":{"gitId":"Moley456"},"content":"                        VALID_CAPACITY, EMPTY_ALLOCATION_LIST);","lastModifiedDate":"2021-10-27"},{"lineNumber":44,"author":{"gitId":"Moley456"},"content":"        String expectedMessage \u003d FacilityName.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2021-10-11"},{"lineNumber":45,"author":{"gitId":"Moley456"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, facility::toModelType);","lastModifiedDate":"2021-10-11"},{"lineNumber":46,"author":{"gitId":"Moley456"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":47,"author":{"gitId":"Moley456"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":48,"author":{"gitId":"Moley456"},"content":"    @Test","lastModifiedDate":"2021-10-11"},{"lineNumber":49,"author":{"gitId":"Moley456"},"content":"    public void toModelType_nullFacilityName_throwsIllegalValueException() {","lastModifiedDate":"2021-10-11"},{"lineNumber":50,"author":{"gitId":"Moley456"},"content":"        JsonAdaptedFacility facility \u003d new JsonAdaptedFacility(null, VALID_LOCATION, VALID_TIME,","lastModifiedDate":"2021-10-27"},{"lineNumber":51,"author":{"gitId":"Moley456"},"content":"                VALID_CAPACITY, EMPTY_ALLOCATION_LIST);","lastModifiedDate":"2021-10-27"},{"lineNumber":52,"author":{"gitId":"Moley456"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, FacilityName.class.getSimpleName());","lastModifiedDate":"2021-10-11"},{"lineNumber":53,"author":{"gitId":"Moley456"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, facility::toModelType);","lastModifiedDate":"2021-10-11"},{"lineNumber":54,"author":{"gitId":"Moley456"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":55,"author":{"gitId":"Moley456"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":56,"author":{"gitId":"Moley456"},"content":"    @Test","lastModifiedDate":"2021-10-11"},{"lineNumber":57,"author":{"gitId":"Moley456"},"content":"    public void toModelType_invalidLocation_throwsIllegalValueException() {","lastModifiedDate":"2021-10-11"},{"lineNumber":58,"author":{"gitId":"Moley456"},"content":"        JsonAdaptedFacility facility \u003d","lastModifiedDate":"2021-10-11"},{"lineNumber":59,"author":{"gitId":"Moley456"},"content":"                new JsonAdaptedFacility(VALID_FACILITY_NAME, INVALID_LOCATION, VALID_TIME,","lastModifiedDate":"2021-10-27"},{"lineNumber":60,"author":{"gitId":"Moley456"},"content":"                        VALID_CAPACITY, EMPTY_ALLOCATION_LIST);","lastModifiedDate":"2021-10-27"},{"lineNumber":61,"author":{"gitId":"Moley456"},"content":"        String expectedMessage \u003d Location.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2021-10-11"},{"lineNumber":62,"author":{"gitId":"Moley456"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, facility::toModelType);","lastModifiedDate":"2021-10-11"},{"lineNumber":63,"author":{"gitId":"Moley456"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":64,"author":{"gitId":"Moley456"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":65,"author":{"gitId":"Moley456"},"content":"    @Test","lastModifiedDate":"2021-10-11"},{"lineNumber":66,"author":{"gitId":"Moley456"},"content":"    public void toModelType_nullLocation_throwsIllegalValueException() {","lastModifiedDate":"2021-10-11"},{"lineNumber":67,"author":{"gitId":"Moley456"},"content":"        JsonAdaptedFacility facility \u003d new JsonAdaptedFacility(VALID_FACILITY_NAME, null,","lastModifiedDate":"2021-10-11"},{"lineNumber":68,"author":{"gitId":"Moley456"},"content":"                VALID_TIME, VALID_CAPACITY, EMPTY_ALLOCATION_LIST);","lastModifiedDate":"2021-10-27"},{"lineNumber":69,"author":{"gitId":"Moley456"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Location.class.getSimpleName());","lastModifiedDate":"2021-10-11"},{"lineNumber":70,"author":{"gitId":"Moley456"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, facility::toModelType);","lastModifiedDate":"2021-10-11"},{"lineNumber":71,"author":{"gitId":"Moley456"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":72,"author":{"gitId":"Moley456"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":73,"author":{"gitId":"Moley456"},"content":"    @Test","lastModifiedDate":"2021-10-11"},{"lineNumber":74,"author":{"gitId":"Moley456"},"content":"    public void toModelType_invalidTime_throwsIllegalValueException() {","lastModifiedDate":"2021-10-11"},{"lineNumber":75,"author":{"gitId":"Moley456"},"content":"        JsonAdaptedFacility facility \u003d","lastModifiedDate":"2021-10-11"},{"lineNumber":76,"author":{"gitId":"Moley456"},"content":"                new JsonAdaptedFacility(VALID_FACILITY_NAME, VALID_LOCATION, INVALID_TIME,","lastModifiedDate":"2021-10-27"},{"lineNumber":77,"author":{"gitId":"Moley456"},"content":"                        VALID_CAPACITY, EMPTY_ALLOCATION_LIST);","lastModifiedDate":"2021-10-27"},{"lineNumber":78,"author":{"gitId":"Moley456"},"content":"        String expectedMessage \u003d Time.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2021-10-11"},{"lineNumber":79,"author":{"gitId":"Moley456"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, facility::toModelType);","lastModifiedDate":"2021-10-11"},{"lineNumber":80,"author":{"gitId":"Moley456"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":81,"author":{"gitId":"Moley456"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":82,"author":{"gitId":"Moley456"},"content":"    @Test","lastModifiedDate":"2021-10-11"},{"lineNumber":83,"author":{"gitId":"Moley456"},"content":"    public void toModelType_nullTime_throwsIllegalValueException() {","lastModifiedDate":"2021-10-11"},{"lineNumber":84,"author":{"gitId":"Moley456"},"content":"        JsonAdaptedFacility facility \u003d new JsonAdaptedFacility(VALID_FACILITY_NAME, VALID_LOCATION,","lastModifiedDate":"2021-10-11"},{"lineNumber":85,"author":{"gitId":"Moley456"},"content":"                null, VALID_CAPACITY, EMPTY_ALLOCATION_LIST);","lastModifiedDate":"2021-10-27"},{"lineNumber":86,"author":{"gitId":"Moley456"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Time.class.getSimpleName());","lastModifiedDate":"2021-10-11"},{"lineNumber":87,"author":{"gitId":"Moley456"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, facility::toModelType);","lastModifiedDate":"2021-10-11"},{"lineNumber":88,"author":{"gitId":"Moley456"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":89,"author":{"gitId":"Moley456"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":90,"author":{"gitId":"Moley456"},"content":"    @Test","lastModifiedDate":"2021-10-11"},{"lineNumber":91,"author":{"gitId":"Moley456"},"content":"    public void toModelType_invalidCapacity_throwsIllegalValueException() {","lastModifiedDate":"2021-10-11"},{"lineNumber":92,"author":{"gitId":"Moley456"},"content":"        JsonAdaptedFacility facility \u003d","lastModifiedDate":"2021-10-11"},{"lineNumber":93,"author":{"gitId":"Moley456"},"content":"                new JsonAdaptedFacility(VALID_FACILITY_NAME, VALID_LOCATION, VALID_TIME,","lastModifiedDate":"2021-10-27"},{"lineNumber":94,"author":{"gitId":"Moley456"},"content":"                        INVALID_CAPACITY, EMPTY_ALLOCATION_LIST);","lastModifiedDate":"2021-10-27"},{"lineNumber":95,"author":{"gitId":"Moley456"},"content":"        String expectedMessage \u003d Capacity.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2021-10-11"},{"lineNumber":96,"author":{"gitId":"Moley456"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, facility::toModelType);","lastModifiedDate":"2021-10-11"},{"lineNumber":97,"author":{"gitId":"Moley456"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":98,"author":{"gitId":"Moley456"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":99,"author":{"gitId":"Moley456"},"content":"    @Test","lastModifiedDate":"2021-10-11"},{"lineNumber":100,"author":{"gitId":"Moley456"},"content":"    public void toModelType_nullCapacity_throwsIllegalValueException() {","lastModifiedDate":"2021-10-11"},{"lineNumber":101,"author":{"gitId":"Moley456"},"content":"        JsonAdaptedFacility facility \u003d new JsonAdaptedFacility(VALID_FACILITY_NAME, VALID_LOCATION,","lastModifiedDate":"2021-10-11"},{"lineNumber":102,"author":{"gitId":"Moley456"},"content":"                VALID_TIME, null, EMPTY_ALLOCATION_LIST);","lastModifiedDate":"2021-10-27"},{"lineNumber":103,"author":{"gitId":"Moley456"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Capacity.class.getSimpleName());","lastModifiedDate":"2021-10-11"},{"lineNumber":104,"author":{"gitId":"Moley456"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, facility::toModelType);","lastModifiedDate":"2021-10-11"},{"lineNumber":105,"author":{"gitId":"Moley456"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":106,"author":{"gitId":"Moley456"},"content":"}","lastModifiedDate":"2021-10-11"}],"authorContributionMap":{"Moley456":102,"Shruthi0310":3,"felix-ong":1}},{"path":"src/test/java/seedu/address/storage/JsonAdaptedPersonTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.storage.JsonAdaptedPerson.MISSING_FIELD_MESSAGE_FORMAT;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BENSON;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"felix-ong"},"content":"import java.time.DayOfWeek;","lastModifiedDate":"2021-10-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2021-10-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2021-10-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"Shruthi0310"},"content":"import seedu.address.model.person.TodayAttendance;","lastModifiedDate":"2021-10-21"},{"lineNumber":19,"author":{"gitId":"Shruthi0310"},"content":"import seedu.address.model.person.TotalAttendance;","lastModifiedDate":"2021-10-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class JsonAdaptedPersonTest {","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final String INVALID_PHONE \u003d \"+651234\";","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final String INVALID_TAG \u003d \"#friend\";","lastModifiedDate":"2021-10-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String VALID_NAME \u003d BENSON.getName().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private static final String VALID_PHONE \u003d BENSON.getPhone().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":29,"author":{"gitId":"Shruthi0310"},"content":"    private static final Integer TOTAL_ATTENDANCE \u003d 2;","lastModifiedDate":"2021-10-21"},{"lineNumber":30,"author":{"gitId":"Shruthi0310"},"content":"    private static final Boolean TODAY_ATTENDANCE \u003d true;","lastModifiedDate":"2021-10-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"felix-ong"},"content":"    private static final List\u003cDayOfWeek\u003e VALID_AVAILABILITY \u003d BENSON.getAvailability().values;","lastModifiedDate":"2021-10-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private static final List\u003cJsonAdaptedTag\u003e VALID_TAGS \u003d BENSON.getTags().stream()","lastModifiedDate":"2021-10-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            .map(JsonAdaptedTag::new)","lastModifiedDate":"2021-10-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            .collect(Collectors.toList());","lastModifiedDate":"2021-10-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public void toModelType_validPersonDetails_returnsPerson() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(BENSON);","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertEquals(BENSON, person.toModelType());","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void toModelType_invalidName_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"Shruthi0310"},"content":"                new JsonAdaptedPerson(INVALID_NAME, VALID_PHONE, VALID_AVAILABILITY,","lastModifiedDate":"2021-10-21"},{"lineNumber":48,"author":{"gitId":"Shruthi0310"},"content":"                        TODAY_ATTENDANCE, TOTAL_ATTENDANCE, VALID_TAGS);","lastModifiedDate":"2021-10-23"},{"lineNumber":49,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Name.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public void toModelType_nullName_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"Shruthi0310"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(null, VALID_PHONE, VALID_AVAILABILITY,","lastModifiedDate":"2021-10-21"},{"lineNumber":57,"author":{"gitId":"Shruthi0310"},"content":"                TODAY_ATTENDANCE, TOTAL_ATTENDANCE, VALID_TAGS);","lastModifiedDate":"2021-10-23"},{"lineNumber":58,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public void toModelType_invalidPhone_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"Shruthi0310"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, INVALID_PHONE, VALID_AVAILABILITY,","lastModifiedDate":"2021-10-21"},{"lineNumber":66,"author":{"gitId":"Shruthi0310"},"content":"                TODAY_ATTENDANCE, TOTAL_ATTENDANCE, VALID_TAGS);","lastModifiedDate":"2021-10-23"},{"lineNumber":67,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Phone.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public void toModelType_nullPhone_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":74,"author":{"gitId":"Shruthi0310"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, null, VALID_AVAILABILITY,","lastModifiedDate":"2021-10-21"},{"lineNumber":75,"author":{"gitId":"Shruthi0310"},"content":"                TODAY_ATTENDANCE, TOTAL_ATTENDANCE, VALID_TAGS);","lastModifiedDate":"2021-10-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-10-21"},{"lineNumber":81,"author":{"gitId":"Shruthi0310"},"content":"    public void toModelType_nullTodayAttendance_throwsIllegalValueException() {","lastModifiedDate":"2021-10-21"},{"lineNumber":82,"author":{"gitId":"Shruthi0310"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_AVAILABILITY,","lastModifiedDate":"2021-10-21"},{"lineNumber":83,"author":{"gitId":"Shruthi0310"},"content":"                null, TOTAL_ATTENDANCE, VALID_TAGS);","lastModifiedDate":"2021-10-23"},{"lineNumber":84,"author":{"gitId":"Shruthi0310"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, TodayAttendance.class.getSimpleName());","lastModifiedDate":"2021-10-21"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2021-10-21"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-10-21"},{"lineNumber":89,"author":{"gitId":"Shruthi0310"},"content":"    public void toModelType_nullTotalAttendance_throwsIllegalValueException() {","lastModifiedDate":"2021-10-21"},{"lineNumber":90,"author":{"gitId":"Shruthi0310"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_AVAILABILITY,","lastModifiedDate":"2021-10-21"},{"lineNumber":91,"author":{"gitId":"Shruthi0310"},"content":"                TODAY_ATTENDANCE, null, VALID_TAGS);","lastModifiedDate":"2021-10-23"},{"lineNumber":92,"author":{"gitId":"Shruthi0310"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, TotalAttendance.class.getSimpleName());","lastModifiedDate":"2021-10-21"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2021-10-21"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-10-21"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    public void toModelType_invalidTags_throwsIllegalValueException() {","lastModifiedDate":"2021-10-21"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        List\u003cJsonAdaptedTag\u003e invalidTags \u003d new ArrayList\u003c\u003e(VALID_TAGS);","lastModifiedDate":"2021-10-21"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        invalidTags.add(new JsonAdaptedTag(INVALID_TAG));","lastModifiedDate":"2021-10-21"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2021-10-21"},{"lineNumber":101,"author":{"gitId":"Shruthi0310"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_AVAILABILITY, TODAY_ATTENDANCE,","lastModifiedDate":"2021-10-23"},{"lineNumber":102,"author":{"gitId":"Shruthi0310"},"content":"                        TOTAL_ATTENDANCE, invalidTags);","lastModifiedDate":"2021-10-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, person::toModelType);","lastModifiedDate":"2021-10-21"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":105,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"Shruthi0310":27,"-":76,"felix-ong":2}},{"path":"src/test/java/seedu/address/storage/JsonAddressBookStorageTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":6,"author":{"gitId":"YoYoCiti"},"content":"import static seedu.address.testutil.TypicalAddressBook.getTypicalAddressBook;","lastModifiedDate":"2021-10-09"},{"lineNumber":7,"author":{"gitId":"Moley456"},"content":"import static seedu.address.testutil.TypicalFacilities.UNIVERSITY_TOWN_SPORTS_HALL_1_COURT_1;","lastModifiedDate":"2021-10-11"},{"lineNumber":8,"author":{"gitId":"Moley456"},"content":"import static seedu.address.testutil.TypicalFacilities.UNIVERSITY_TOWN_SPORTS_HALL_1_COURT_2;","lastModifiedDate":"2021-10-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.HOON;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.IDA;","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class JsonAddressBookStorageTest {","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonAddressBookStorageTest\");","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void readAddressBook_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e readAddressBook(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private java.util.Optional\u003cReadOnlyAddressBook\u003e readAddressBook(String filePath) throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        return new JsonAddressBookStorage(Paths.get(filePath)).readAddressBook(addToTestDataPathIfNotNull(filePath));","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private Path addToTestDataPathIfNotNull(String prefsFileInTestDataFolder) {","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        return prefsFileInTestDataFolder !\u003d null","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"                ? TEST_DATA_FOLDER.resolve(prefsFileInTestDataFolder)","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"                : null;","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public void read_missingFile_emptyResult() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertFalse(readAddressBook(\"NonExistentFile.json\").isPresent());","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void read_notJsonFormat_exceptionThrown() {","lastModifiedDate":"2019-03-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertThrows(DataConversionException.class, () -\u003e readAddressBook(\"notJsonFormatAddressBook.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"Moley456"},"content":"    public void readAddressBook_invalidMemberAddressBook_throwDataConversionException() {","lastModifiedDate":"2021-10-11"},{"lineNumber":57,"author":{"gitId":"Moley456"},"content":"        assertThrows(DataConversionException.class, () -\u003e readAddressBook(\"invalidMemberAddressBook.json\"));","lastModifiedDate":"2021-10-11"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"Moley456"},"content":"    public void readAddressBook_invalidAndValidMemberAddressBook_throwDataConversionException() {","lastModifiedDate":"2021-10-11"},{"lineNumber":62,"author":{"gitId":"Moley456"},"content":"        assertThrows(DataConversionException.class, () -\u003e readAddressBook(\"invalidAndValidMemberAddressBook.json\"));","lastModifiedDate":"2021-10-11"},{"lineNumber":63,"author":{"gitId":"Moley456"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":64,"author":{"gitId":"Moley456"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":65,"author":{"gitId":"Moley456"},"content":"    @Test","lastModifiedDate":"2021-10-11"},{"lineNumber":66,"author":{"gitId":"Moley456"},"content":"    public void readAddressBook_invalidFacilityAddressBook_throwDataConversionException() {","lastModifiedDate":"2021-10-11"},{"lineNumber":67,"author":{"gitId":"Moley456"},"content":"        assertThrows(DataConversionException.class, () -\u003e readAddressBook(\"invalidFacilityAddressBook.json\"));","lastModifiedDate":"2021-10-11"},{"lineNumber":68,"author":{"gitId":"Moley456"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":69,"author":{"gitId":"Moley456"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":70,"author":{"gitId":"Moley456"},"content":"    @Test","lastModifiedDate":"2021-10-11"},{"lineNumber":71,"author":{"gitId":"Moley456"},"content":"    public void readAddressBook_invalidAndValidFacilityAddressBook_throwDataConversionException() {","lastModifiedDate":"2021-10-11"},{"lineNumber":72,"author":{"gitId":"Moley456"},"content":"        assertThrows(DataConversionException.class, () -\u003e readAddressBook(\"invalidAndValidFacilityAddressBook.json\"));","lastModifiedDate":"2021-10-11"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public void readAndSaveAddressBook_allInOrder_success() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        Path filePath \u003d testFolder.resolve(\"TempAddressBook.json\");","lastModifiedDate":"2019-04-25"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        AddressBook original \u003d getTypicalAddressBook();","lastModifiedDate":"2018-08-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage jsonAddressBookStorage \u003d new JsonAddressBookStorage(filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        // Save in new file and read back","lastModifiedDate":"2018-08-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        jsonAddressBookStorage.saveAddressBook(original, filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        ReadOnlyAddressBook readBack \u003d jsonAddressBookStorage.readAddressBook(filePath).get();","lastModifiedDate":"2018-08-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        assertEquals(original, new AddressBook(readBack));","lastModifiedDate":"2018-08-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        // Modify data, overwrite exiting file, and read back","lastModifiedDate":"2018-08-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        original.addPerson(HOON);","lastModifiedDate":"2018-08-13"},{"lineNumber":88,"author":{"gitId":"Moley456"},"content":"        original.addFacility(UNIVERSITY_TOWN_SPORTS_HALL_1_COURT_1);","lastModifiedDate":"2021-10-11"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        original.removePerson(ALICE);","lastModifiedDate":"2018-08-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        jsonAddressBookStorage.saveAddressBook(original, filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        readBack \u003d jsonAddressBookStorage.readAddressBook(filePath).get();","lastModifiedDate":"2018-08-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        assertEquals(original, new AddressBook(readBack));","lastModifiedDate":"2018-08-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        // Save and read without specifying file path","lastModifiedDate":"2018-08-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        original.addPerson(IDA);","lastModifiedDate":"2018-08-13"},{"lineNumber":96,"author":{"gitId":"Moley456"},"content":"        original.addFacility(UNIVERSITY_TOWN_SPORTS_HALL_1_COURT_2);","lastModifiedDate":"2021-10-11"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        jsonAddressBookStorage.saveAddressBook(original); // file path not specified","lastModifiedDate":"2018-08-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        readBack \u003d jsonAddressBookStorage.readAddressBook().get(); // file path not specified","lastModifiedDate":"2018-08-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        assertEquals(original, new AddressBook(readBack));","lastModifiedDate":"2018-08-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    public void saveAddressBook_nullAddressBook_throwsNullPointerException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveAddressBook(null, \"SomeFile.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":109,"author":{"gitId":"-"},"content":"     * Saves {@code addressBook} at the specified {@code filePath}.","lastModifiedDate":"2018-08-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    private void saveAddressBook(ReadOnlyAddressBook addressBook, String filePath) {","lastModifiedDate":"2018-08-13"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-08-13"},{"lineNumber":113,"author":{"gitId":"-"},"content":"            new JsonAddressBookStorage(Paths.get(filePath))","lastModifiedDate":"2018-08-13"},{"lineNumber":114,"author":{"gitId":"-"},"content":"                    .saveAddressBook(addressBook, addToTestDataPathIfNotNull(filePath));","lastModifiedDate":"2018-08-13"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2018-08-13"},{"lineNumber":116,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"There should not be an error writing to the file.\", ioe);","lastModifiedDate":"2018-08-13"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    public void saveAddressBook_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveAddressBook(new AddressBook(), null));","lastModifiedDate":"2019-03-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":124,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"YoYoCiti":1,"Moley456":18,"-":105}},{"path":"src/test/java/seedu/address/storage/JsonSerializableAddressBookTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.JsonUtil;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"YoYoCiti"},"content":"import seedu.address.testutil.TypicalAddressBook;","lastModifiedDate":"2021-10-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class JsonSerializableAddressBookTest {","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonSerializableAddressBookTest\");","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"Moley456"},"content":"    private static final Path TYPICAL_MEMBERS_FILE \u003d TEST_DATA_FOLDER.resolve(\"typicalMembersAddressBook.json\");","lastModifiedDate":"2021-10-11"},{"lineNumber":20,"author":{"gitId":"Moley456"},"content":"    private static final Path TYPICAL_FACILITIES_FILE \u003d TEST_DATA_FOLDER.resolve(\"typicalFacilitiesAddressBook.json\");","lastModifiedDate":"2021-10-11"},{"lineNumber":21,"author":{"gitId":"Moley456"},"content":"    private static final Path INVALID_MEMBER_FILE \u003d TEST_DATA_FOLDER.resolve(\"invalidMemberAddressBook.json\");","lastModifiedDate":"2021-10-11"},{"lineNumber":22,"author":{"gitId":"Moley456"},"content":"    private static final Path INVALID_FACILITY_FILE \u003d TEST_DATA_FOLDER.resolve(\"invalidFacilityAddressBook.json\");","lastModifiedDate":"2021-10-11"},{"lineNumber":23,"author":{"gitId":"Moley456"},"content":"    private static final Path DUPLICATE_MEMBER_FILE \u003d TEST_DATA_FOLDER.resolve(\"duplicateMemberAddressBook.json\");","lastModifiedDate":"2021-10-11"},{"lineNumber":24,"author":{"gitId":"Moley456"},"content":"    private static final Path DUPLICATE_FACILITY_FILE \u003d TEST_DATA_FOLDER.resolve(\"duplicateFacilityAddressBook.json\");","lastModifiedDate":"2021-10-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"Moley456"},"content":"    public void toModelType_typicalMembersFile_success() throws Exception {","lastModifiedDate":"2021-10-11"},{"lineNumber":28,"author":{"gitId":"Moley456"},"content":"        JsonSerializableAddressBook dataFromFile \u003d JsonUtil.readJsonFile(TYPICAL_MEMBERS_FILE,","lastModifiedDate":"2021-10-11"},{"lineNumber":29,"author":{"gitId":"-"},"content":"                JsonSerializableAddressBook.class).get();","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        AddressBook addressBookFromFile \u003d dataFromFile.toModelType();","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"Moley456"},"content":"        AddressBook typicalMembersAddressBook \u003d TypicalAddressBook.getTypicalAddressBookEmptyFacilityList();","lastModifiedDate":"2021-10-11"},{"lineNumber":32,"author":{"gitId":"Shruthi0310"},"content":"        assertEquals(addressBookFromFile.getPersonList(), typicalMembersAddressBook.getPersonList());","lastModifiedDate":"2021-10-22"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"Moley456"},"content":"    public void toModelType_typicalFacilitiesFile_success() throws Exception {","lastModifiedDate":"2021-10-11"},{"lineNumber":37,"author":{"gitId":"Moley456"},"content":"        JsonSerializableAddressBook dataFromFile \u003d JsonUtil.readJsonFile(TYPICAL_FACILITIES_FILE,","lastModifiedDate":"2021-10-11"},{"lineNumber":38,"author":{"gitId":"Moley456"},"content":"                JsonSerializableAddressBook.class).get();","lastModifiedDate":"2021-10-11"},{"lineNumber":39,"author":{"gitId":"Moley456"},"content":"        AddressBook addressBookFromFile \u003d dataFromFile.toModelType();","lastModifiedDate":"2021-10-11"},{"lineNumber":40,"author":{"gitId":"Moley456"},"content":"        AddressBook typicalFacilitiesAddressBook \u003d TypicalAddressBook.getTypicalAddressBookEmptyMemberList();","lastModifiedDate":"2021-10-11"},{"lineNumber":41,"author":{"gitId":"Moley456"},"content":"        assertEquals(addressBookFromFile, typicalFacilitiesAddressBook);","lastModifiedDate":"2021-10-11"},{"lineNumber":42,"author":{"gitId":"Moley456"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":43,"author":{"gitId":"Moley456"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":44,"author":{"gitId":"Moley456"},"content":"    @Test","lastModifiedDate":"2021-10-11"},{"lineNumber":45,"author":{"gitId":"Moley456"},"content":"    public void toModelType_invalidMemberFile_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2021-10-11"},{"lineNumber":46,"author":{"gitId":"Moley456"},"content":"        JsonSerializableAddressBook dataFromFile \u003d JsonUtil.readJsonFile(INVALID_MEMBER_FILE,","lastModifiedDate":"2021-10-11"},{"lineNumber":47,"author":{"gitId":"Moley456"},"content":"                JsonSerializableAddressBook.class).get();","lastModifiedDate":"2021-10-11"},{"lineNumber":48,"author":{"gitId":"Moley456"},"content":"        assertThrows(IllegalValueException.class, dataFromFile::toModelType);","lastModifiedDate":"2021-10-11"},{"lineNumber":49,"author":{"gitId":"Moley456"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":50,"author":{"gitId":"Moley456"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":51,"author":{"gitId":"Moley456"},"content":"    @Test","lastModifiedDate":"2021-10-11"},{"lineNumber":52,"author":{"gitId":"Moley456"},"content":"    public void toModelType_invalidFacilitiesFile_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2021-10-11"},{"lineNumber":53,"author":{"gitId":"Moley456"},"content":"        JsonSerializableAddressBook dataFromFile \u003d JsonUtil.readJsonFile(INVALID_FACILITY_FILE,","lastModifiedDate":"2021-10-11"},{"lineNumber":54,"author":{"gitId":"-"},"content":"                JsonSerializableAddressBook.class).get();","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, dataFromFile::toModelType);","lastModifiedDate":"2019-03-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public void toModelType_duplicatePersons_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"Moley456"},"content":"        JsonSerializableAddressBook dataFromFile \u003d JsonUtil.readJsonFile(DUPLICATE_MEMBER_FILE,","lastModifiedDate":"2021-10-11"},{"lineNumber":61,"author":{"gitId":"-"},"content":"                JsonSerializableAddressBook.class).get();","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"tsinyee"},"content":"        assertThrows(IllegalValueException.class, JsonSerializableAddressBook.MESSAGE_DUPLICATE_MEMBER,","lastModifiedDate":"2021-10-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"                dataFromFile::toModelType);","lastModifiedDate":"2019-03-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":66,"author":{"gitId":"Moley456"},"content":"    @Test","lastModifiedDate":"2021-10-11"},{"lineNumber":67,"author":{"gitId":"Moley456"},"content":"    public void toModelType_duplicateFacilities_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2021-10-11"},{"lineNumber":68,"author":{"gitId":"Moley456"},"content":"        JsonSerializableAddressBook dataFromFile \u003d JsonUtil.readJsonFile(DUPLICATE_FACILITY_FILE,","lastModifiedDate":"2021-10-11"},{"lineNumber":69,"author":{"gitId":"-"},"content":"                JsonSerializableAddressBook.class).get();","lastModifiedDate":"2021-10-11"},{"lineNumber":70,"author":{"gitId":"Moley456"},"content":"        assertThrows(IllegalValueException.class, JsonSerializableAddressBook.MESSAGE_DUPLICATE_FACILITY,","lastModifiedDate":"2021-10-11"},{"lineNumber":71,"author":{"gitId":"-"},"content":"                dataFromFile::toModelType);","lastModifiedDate":"2021-10-11"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":74,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"YoYoCiti":1,"Moley456":32,"Shruthi0310":1,"-":39,"tsinyee":1}},{"path":"src/test/java/seedu/address/storage/JsonUserPrefsStorageTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2016-09-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2016-09-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":18,"author":{"gitId":"YoYoCiti"},"content":"import seedu.address.model.alias.AliasMap;","lastModifiedDate":"2021-10-18"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class JsonUserPrefsStorageTest {","lastModifiedDate":"2016-10-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonUserPrefsStorageTest\");","lastModifiedDate":"2018-04-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public void readUserPrefs_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e readUserPrefs(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private Optional\u003cUserPrefs\u003e readUserPrefs(String userPrefsFileInTestDataFolder) throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        Path prefsFilePath \u003d addToTestDataPathIfNotNull(userPrefsFileInTestDataFolder);","lastModifiedDate":"2018-04-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        return new JsonUserPrefsStorage(prefsFilePath).readUserPrefs(prefsFilePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public void readUserPrefs_missingFile_emptyResult() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertFalse(readUserPrefs(\"NonExistentFile.json\").isPresent());","lastModifiedDate":"2016-09-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void readUserPrefs_notJsonFormat_exceptionThrown() {","lastModifiedDate":"2019-03-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertThrows(DataConversionException.class, () -\u003e readUserPrefs(\"NotJsonFormatUserPrefs.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    private Path addToTestDataPathIfNotNull(String userPrefsFileInTestDataFolder) {","lastModifiedDate":"2018-04-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        return userPrefsFileInTestDataFolder !\u003d null","lastModifiedDate":"2016-09-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"                ? TEST_DATA_FOLDER.resolve(userPrefsFileInTestDataFolder)","lastModifiedDate":"2018-04-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"                : null;","lastModifiedDate":"2016-09-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void readUserPrefs_fileInOrder_successfullyRead() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        UserPrefs expected \u003d getTypicalUserPrefs();","lastModifiedDate":"2017-02-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        UserPrefs actual \u003d readUserPrefs(\"TypicalUserPref.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public void readUserPrefs_valuesMissingFromFile_defaultValuesUsed() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        UserPrefs actual \u003d readUserPrefs(\"EmptyUserPrefs.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertEquals(new UserPrefs(), actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void readUserPrefs_extraValuesInFile_extraValuesIgnored() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        UserPrefs expected \u003d getTypicalUserPrefs();","lastModifiedDate":"2017-02-25"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        UserPrefs actual \u003d readUserPrefs(\"ExtraValuesUserPref.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    private UserPrefs getTypicalUserPrefs() {","lastModifiedDate":"2017-02-25"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-02-25"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(new GuiSettings(1000, 500, 300, 100));","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(Paths.get(\"addressbook.json\"));","lastModifiedDate":"2018-11-27"},{"lineNumber":78,"author":{"gitId":"YoYoCiti"},"content":"        userPrefs.setAliases(new AliasMap());","lastModifiedDate":"2021-10-18"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        return userPrefs;","lastModifiedDate":"2017-02-25"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void savePrefs_nullPrefs_throwsNullPointerException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveUserPrefs(null, \"SomeFile.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public void saveUserPrefs_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveUserPrefs(new UserPrefs(), null));","lastModifiedDate":"2019-03-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-15"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * Saves {@code userPrefs} at the specified {@code prefsFileInTestDataFolder} filepath.","lastModifiedDate":"2017-08-15"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-15"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    private void saveUserPrefs(UserPrefs userPrefs, String prefsFileInTestDataFolder) {","lastModifiedDate":"2017-08-15"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":97,"author":{"gitId":"-"},"content":"            new JsonUserPrefsStorage(addToTestDataPathIfNotNull(prefsFileInTestDataFolder))","lastModifiedDate":"2016-10-12"},{"lineNumber":98,"author":{"gitId":"-"},"content":"                    .saveUserPrefs(userPrefs);","lastModifiedDate":"2016-10-12"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2017-08-15"},{"lineNumber":100,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"There should not be an error writing to the file\", ioe);","lastModifiedDate":"2017-08-15"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    public void saveUserPrefs_allInOrder_success() throws DataConversionException, IOException {","lastModifiedDate":"2016-09-24"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        UserPrefs original \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        original.setGuiSettings(new GuiSettings(1200, 200, 0, 2));","lastModifiedDate":"2018-11-27"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        Path pefsFilePath \u003d testFolder.resolve(\"TempPrefs.json\");","lastModifiedDate":"2019-04-25"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage jsonUserPrefsStorage \u003d new JsonUserPrefsStorage(pefsFilePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        //Try writing when the file doesn\u0027t exist","lastModifiedDate":"2016-09-24"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        jsonUserPrefsStorage.saveUserPrefs(original);","lastModifiedDate":"2016-10-01"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        UserPrefs readBack \u003d jsonUserPrefsStorage.readUserPrefs().get();","lastModifiedDate":"2016-10-01"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        assertEquals(original, readBack);","lastModifiedDate":"2016-09-24"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        //Try saving when the file exists","lastModifiedDate":"2016-09-24"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        original.setGuiSettings(new GuiSettings(5, 5, 5, 5));","lastModifiedDate":"2018-11-27"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        jsonUserPrefsStorage.saveUserPrefs(original);","lastModifiedDate":"2016-10-01"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        readBack \u003d jsonUserPrefsStorage.readUserPrefs().get();","lastModifiedDate":"2016-10-01"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        assertEquals(original, readBack);","lastModifiedDate":"2016-09-24"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":125,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"YoYoCiti":2,"-":123}},{"path":"src/test/java/seedu/address/storage/StorageManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"YoYoCiti"},"content":"import static seedu.address.testutil.TypicalAddressBook.getTypicalAddressBook;","lastModifiedDate":"2021-10-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-09-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2016-09-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class StorageManagerTest {","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private StorageManager storageManager;","lastModifiedDate":"2017-04-01"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2016-10-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d new JsonAddressBookStorage(getTempFilePath(\"ab\"));","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(getTempFilePath(\"prefs\"));","lastModifiedDate":"2017-02-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        storageManager \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2017-02-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private Path getTempFilePath(String fileName) {","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return testFolder.resolve(fileName);","lastModifiedDate":"2019-04-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void prefsReadSave() throws Exception {","lastModifiedDate":"2016-10-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-09-28"},{"lineNumber":39,"author":{"gitId":"-"},"content":"         * Note: This is an integration test that verifies the StorageManager is properly wired to the","lastModifiedDate":"2016-09-28"},{"lineNumber":40,"author":{"gitId":"-"},"content":"         * {@link JsonUserPrefsStorage} class.","lastModifiedDate":"2016-10-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"         * More extensive testing of UserPref saving/reading is done in {@link JsonUserPrefsStorageTest} class.","lastModifiedDate":"2016-10-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-09-28"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        UserPrefs original \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        original.setGuiSettings(new GuiSettings(300, 600, 4, 6));","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        storageManager.saveUserPrefs(original);","lastModifiedDate":"2016-09-28"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        UserPrefs retrieved \u003d storageManager.readUserPrefs().get();","lastModifiedDate":"2016-09-28"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertEquals(original, retrieved);","lastModifiedDate":"2016-09-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void addressBookReadSave() throws Exception {","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-10-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"         * Note: This is an integration test that verifies the StorageManager is properly wired to the","lastModifiedDate":"2016-10-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"         * {@link JsonAddressBookStorage} class.","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"         * More extensive testing of UserPref saving/reading is done in {@link JsonAddressBookStorageTest} class.","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-10-16"},{"lineNumber":57,"author":{"gitId":"Shruthi0310"},"content":"        AddressBook original \u003d new AddressBook(getTypicalAddressBook());","lastModifiedDate":"2021-10-22"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        storageManager.saveAddressBook(original);","lastModifiedDate":"2016-09-28"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        ReadOnlyAddressBook retrieved \u003d storageManager.readAddressBook().get();","lastModifiedDate":"2016-09-28"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertEquals(original, new AddressBook(retrieved));","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-01"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public void getAddressBookFilePath() {","lastModifiedDate":"2016-10-01"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertNotNull(storageManager.getAddressBookFilePath());","lastModifiedDate":"2016-10-01"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":68,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"YoYoCiti":1,"Shruthi0310":1,"-":66}},{"path":"src/test/java/seedu/address/testutil/AddressBookBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-09-21"},{"lineNumber":4,"author":{"gitId":"YoYoCiti"},"content":"import seedu.address.model.facility.Facility;","lastModifiedDate":"2021-10-09"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * A utility class to help with building Addressbook objects.","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Example usage: \u003cbr\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" *     {@code AddressBook ab \u003d new AddressBookBuilder().withPerson(\"John\", \"Doe\").build();}","lastModifiedDate":"2018-03-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class AddressBookBuilder {","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private AddressBook addressBook;","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public AddressBookBuilder() {","lastModifiedDate":"2017-05-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        addressBook \u003d new AddressBook();","lastModifiedDate":"2017-05-31"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public AddressBookBuilder(AddressBook addressBook) {","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        this.addressBook \u003d addressBook;","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Adds a new {@code Person} to the {@code AddressBook} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public AddressBookBuilder withPerson(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        addressBook.addPerson(person);","lastModifiedDate":"2016-09-01"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"YoYoCiti"},"content":"    /**","lastModifiedDate":"2021-10-09"},{"lineNumber":33,"author":{"gitId":"YoYoCiti"},"content":"     * Adds a new {@code Facility} to the {@code AddressBook} that we are building.","lastModifiedDate":"2021-10-09"},{"lineNumber":34,"author":{"gitId":"YoYoCiti"},"content":"     */","lastModifiedDate":"2021-10-09"},{"lineNumber":35,"author":{"gitId":"YoYoCiti"},"content":"    public AddressBookBuilder withFacility(Facility facility) {","lastModifiedDate":"2021-10-09"},{"lineNumber":36,"author":{"gitId":"YoYoCiti"},"content":"        addressBook.addFacility(facility);","lastModifiedDate":"2021-10-09"},{"lineNumber":37,"author":{"gitId":"YoYoCiti"},"content":"        return this;","lastModifiedDate":"2021-10-09"},{"lineNumber":38,"author":{"gitId":"YoYoCiti"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":39,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public AddressBook build() {","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        return addressBook;","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"YoYoCiti":9,"-":34}},{"path":"src/test/java/seedu/address/testutil/EditFacilityDescriptorBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"YoYoCiti"},"content":"package seedu.address.testutil;","lastModifiedDate":"2021-10-12"},{"lineNumber":2,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":3,"author":{"gitId":"YoYoCiti"},"content":"import seedu.address.logic.commands.EditFacilityCommand.EditFacilityDescriptor;","lastModifiedDate":"2021-10-12"},{"lineNumber":4,"author":{"gitId":"YoYoCiti"},"content":"import seedu.address.model.facility.Capacity;","lastModifiedDate":"2021-10-12"},{"lineNumber":5,"author":{"gitId":"YoYoCiti"},"content":"import seedu.address.model.facility.Facility;","lastModifiedDate":"2021-10-12"},{"lineNumber":6,"author":{"gitId":"YoYoCiti"},"content":"import seedu.address.model.facility.FacilityName;","lastModifiedDate":"2021-10-12"},{"lineNumber":7,"author":{"gitId":"YoYoCiti"},"content":"import seedu.address.model.facility.Location;","lastModifiedDate":"2021-10-12"},{"lineNumber":8,"author":{"gitId":"YoYoCiti"},"content":"import seedu.address.model.facility.Time;","lastModifiedDate":"2021-10-12"},{"lineNumber":9,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":10,"author":{"gitId":"YoYoCiti"},"content":"/**","lastModifiedDate":"2021-10-12"},{"lineNumber":11,"author":{"gitId":"YoYoCiti"},"content":" * A utility class to help with building EditFacilityDescriptorBuilder objects.","lastModifiedDate":"2021-10-12"},{"lineNumber":12,"author":{"gitId":"YoYoCiti"},"content":" */","lastModifiedDate":"2021-10-12"},{"lineNumber":13,"author":{"gitId":"YoYoCiti"},"content":"public class EditFacilityDescriptorBuilder {","lastModifiedDate":"2021-10-12"},{"lineNumber":14,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":15,"author":{"gitId":"YoYoCiti"},"content":"    private EditFacilityDescriptor descriptor;","lastModifiedDate":"2021-10-12"},{"lineNumber":16,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":17,"author":{"gitId":"YoYoCiti"},"content":"    public EditFacilityDescriptorBuilder() {","lastModifiedDate":"2021-10-12"},{"lineNumber":18,"author":{"gitId":"YoYoCiti"},"content":"        this.descriptor \u003d new EditFacilityDescriptor();","lastModifiedDate":"2021-10-12"},{"lineNumber":19,"author":{"gitId":"YoYoCiti"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":20,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":21,"author":{"gitId":"YoYoCiti"},"content":"    public EditFacilityDescriptorBuilder(EditFacilityDescriptor descriptor) {","lastModifiedDate":"2021-10-12"},{"lineNumber":22,"author":{"gitId":"YoYoCiti"},"content":"        this.descriptor \u003d new EditFacilityDescriptor(descriptor);","lastModifiedDate":"2021-10-12"},{"lineNumber":23,"author":{"gitId":"YoYoCiti"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":24,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":25,"author":{"gitId":"YoYoCiti"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":26,"author":{"gitId":"YoYoCiti"},"content":"     * Returns an {@code EditFacilityDescriptor} with fields containing {@code facility}\u0027s parameters.","lastModifiedDate":"2021-10-12"},{"lineNumber":27,"author":{"gitId":"YoYoCiti"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":28,"author":{"gitId":"YoYoCiti"},"content":"    public EditFacilityDescriptorBuilder(Facility facility) {","lastModifiedDate":"2021-10-12"},{"lineNumber":29,"author":{"gitId":"YoYoCiti"},"content":"        descriptor \u003d new EditFacilityDescriptor();","lastModifiedDate":"2021-10-12"},{"lineNumber":30,"author":{"gitId":"YoYoCiti"},"content":"        descriptor.setFacilityName(facility.getName());","lastModifiedDate":"2021-10-12"},{"lineNumber":31,"author":{"gitId":"YoYoCiti"},"content":"        descriptor.setLocation(facility.getLocation());","lastModifiedDate":"2021-10-12"},{"lineNumber":32,"author":{"gitId":"YoYoCiti"},"content":"        descriptor.setTime(facility.getTime());","lastModifiedDate":"2021-10-12"},{"lineNumber":33,"author":{"gitId":"YoYoCiti"},"content":"        descriptor.setCapacity(facility.getCapacity());","lastModifiedDate":"2021-10-12"},{"lineNumber":34,"author":{"gitId":"YoYoCiti"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":35,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":36,"author":{"gitId":"YoYoCiti"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":37,"author":{"gitId":"YoYoCiti"},"content":"     * Sets the {@code FacilityName} of the {@code EditFacilityDescriptor} that we are building.","lastModifiedDate":"2021-10-12"},{"lineNumber":38,"author":{"gitId":"YoYoCiti"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":39,"author":{"gitId":"YoYoCiti"},"content":"    public EditFacilityDescriptorBuilder withFacilityName(String name) {","lastModifiedDate":"2021-10-12"},{"lineNumber":40,"author":{"gitId":"YoYoCiti"},"content":"        descriptor.setFacilityName(new FacilityName(name));","lastModifiedDate":"2021-10-12"},{"lineNumber":41,"author":{"gitId":"YoYoCiti"},"content":"        return this;","lastModifiedDate":"2021-10-12"},{"lineNumber":42,"author":{"gitId":"YoYoCiti"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":43,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":44,"author":{"gitId":"YoYoCiti"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":45,"author":{"gitId":"YoYoCiti"},"content":"     * Sets the {@code Location} of the {@code EditFacilityDescriptor} that we are building.","lastModifiedDate":"2021-10-12"},{"lineNumber":46,"author":{"gitId":"YoYoCiti"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":47,"author":{"gitId":"YoYoCiti"},"content":"    public EditFacilityDescriptorBuilder withLocation(String location) {","lastModifiedDate":"2021-10-12"},{"lineNumber":48,"author":{"gitId":"YoYoCiti"},"content":"        descriptor.setLocation(new Location(location));","lastModifiedDate":"2021-10-12"},{"lineNumber":49,"author":{"gitId":"YoYoCiti"},"content":"        return this;","lastModifiedDate":"2021-10-12"},{"lineNumber":50,"author":{"gitId":"YoYoCiti"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":51,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":52,"author":{"gitId":"YoYoCiti"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":53,"author":{"gitId":"YoYoCiti"},"content":"     * Sets the {@code Time} of the {@code EditFacilityDescriptor} that we are building.","lastModifiedDate":"2021-10-12"},{"lineNumber":54,"author":{"gitId":"YoYoCiti"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":55,"author":{"gitId":"YoYoCiti"},"content":"    public EditFacilityDescriptorBuilder withTime(String time) {","lastModifiedDate":"2021-10-12"},{"lineNumber":56,"author":{"gitId":"YoYoCiti"},"content":"        descriptor.setTime(new Time(time));","lastModifiedDate":"2021-10-12"},{"lineNumber":57,"author":{"gitId":"YoYoCiti"},"content":"        return this;","lastModifiedDate":"2021-10-12"},{"lineNumber":58,"author":{"gitId":"YoYoCiti"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":59,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":60,"author":{"gitId":"YoYoCiti"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":61,"author":{"gitId":"YoYoCiti"},"content":"     * Sets the {@code Capacity} of the {@code EditFacilityDescriptor} that we are building.","lastModifiedDate":"2021-10-12"},{"lineNumber":62,"author":{"gitId":"YoYoCiti"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":63,"author":{"gitId":"YoYoCiti"},"content":"    public EditFacilityDescriptorBuilder withCapacity(String capacity) {","lastModifiedDate":"2021-10-12"},{"lineNumber":64,"author":{"gitId":"YoYoCiti"},"content":"        descriptor.setCapacity(new Capacity(capacity));","lastModifiedDate":"2021-10-12"},{"lineNumber":65,"author":{"gitId":"YoYoCiti"},"content":"        return this;","lastModifiedDate":"2021-10-12"},{"lineNumber":66,"author":{"gitId":"YoYoCiti"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":67,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":68,"author":{"gitId":"YoYoCiti"},"content":"    public EditFacilityDescriptor build() {","lastModifiedDate":"2021-10-12"},{"lineNumber":69,"author":{"gitId":"YoYoCiti"},"content":"        return descriptor;","lastModifiedDate":"2021-10-12"},{"lineNumber":70,"author":{"gitId":"YoYoCiti"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":71,"author":{"gitId":"YoYoCiti"},"content":"}","lastModifiedDate":"2021-10-12"}],"authorContributionMap":{"YoYoCiti":71}},{"path":"src/test/java/seedu/address/testutil/EditMemberDescriptorBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2017-05-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2021-10-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2021-10-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2021-10-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":7,"author":{"gitId":"tsinyee"},"content":"import seedu.address.logic.commands.EditMemberCommand.EditPersonDescriptor;","lastModifiedDate":"2021-10-10"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-12-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-12-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2021-10-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * A utility class to help with building EditPersonDescriptor objects.","lastModifiedDate":"2017-05-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-05"},{"lineNumber":16,"author":{"gitId":"tsinyee"},"content":"public class EditMemberDescriptorBuilder {","lastModifiedDate":"2021-10-10"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private EditPersonDescriptor descriptor;","lastModifiedDate":"2017-05-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":20,"author":{"gitId":"tsinyee"},"content":"    public EditMemberDescriptorBuilder() {","lastModifiedDate":"2021-10-10"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2017-05-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":24,"author":{"gitId":"tsinyee"},"content":"    public EditMemberDescriptorBuilder(EditPersonDescriptor descriptor) {","lastModifiedDate":"2021-10-10"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        this.descriptor \u003d new EditPersonDescriptor(descriptor);","lastModifiedDate":"2017-05-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Returns an {@code EditPersonDescriptor} with fields containing {@code person}\u0027s details","lastModifiedDate":"2017-06-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":31,"author":{"gitId":"tsinyee"},"content":"    public EditMemberDescriptorBuilder(Person person) {","lastModifiedDate":"2021-10-10"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2017-06-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        descriptor.setName(person.getName());","lastModifiedDate":"2017-06-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        descriptor.setPhone(person.getPhone());","lastModifiedDate":"2017-06-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        descriptor.setTags(person.getTags());","lastModifiedDate":"2021-10-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * Sets the {@code Name} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":41,"author":{"gitId":"tsinyee"},"content":"    public EditMemberDescriptorBuilder withName(String name) {","lastModifiedDate":"2021-10-10"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        descriptor.setName(new Name(name));","lastModifiedDate":"2017-12-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * Sets the {@code Phone} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":49,"author":{"gitId":"tsinyee"},"content":"    public EditMemberDescriptorBuilder withPhone(String phone) {","lastModifiedDate":"2021-10-10"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        descriptor.setPhone(new Phone(phone));","lastModifiedDate":"2017-12-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-10-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code EditPersonDescriptor}","lastModifiedDate":"2021-10-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * that we are building.","lastModifiedDate":"2021-10-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-10-21"},{"lineNumber":58,"author":{"gitId":"tsinyee"},"content":"    public EditMemberDescriptorBuilder withTags(String... tags) {","lastModifiedDate":"2021-10-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e tagSet \u003d Stream.of(tags).map(Tag::new).collect(Collectors.toSet());","lastModifiedDate":"2021-10-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        descriptor.setTags(tagSet);","lastModifiedDate":"2021-10-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2021-10-21"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public EditPersonDescriptor build() {","lastModifiedDate":"2017-05-05"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        return descriptor;","lastModifiedDate":"2017-05-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-05"}],"authorContributionMap":{"-":59,"tsinyee":8}},{"path":"src/test/java/seedu/address/testutil/FacilityBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"YoYoCiti"},"content":"package seedu.address.testutil;","lastModifiedDate":"2021-10-09"},{"lineNumber":2,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":3,"author":{"gitId":"YoYoCiti"},"content":"import seedu.address.model.facility.Capacity;","lastModifiedDate":"2021-10-09"},{"lineNumber":4,"author":{"gitId":"YoYoCiti"},"content":"import seedu.address.model.facility.Facility;","lastModifiedDate":"2021-10-09"},{"lineNumber":5,"author":{"gitId":"YoYoCiti"},"content":"import seedu.address.model.facility.FacilityName;","lastModifiedDate":"2021-10-09"},{"lineNumber":6,"author":{"gitId":"YoYoCiti"},"content":"import seedu.address.model.facility.Location;","lastModifiedDate":"2021-10-09"},{"lineNumber":7,"author":{"gitId":"YoYoCiti"},"content":"import seedu.address.model.facility.Time;","lastModifiedDate":"2021-10-09"},{"lineNumber":8,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":9,"author":{"gitId":"YoYoCiti"},"content":"/**","lastModifiedDate":"2021-10-09"},{"lineNumber":10,"author":{"gitId":"YoYoCiti"},"content":" * A utility class to help with building Facility objects.","lastModifiedDate":"2021-10-09"},{"lineNumber":11,"author":{"gitId":"YoYoCiti"},"content":" */","lastModifiedDate":"2021-10-09"},{"lineNumber":12,"author":{"gitId":"YoYoCiti"},"content":"public class FacilityBuilder {","lastModifiedDate":"2021-10-09"},{"lineNumber":13,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":14,"author":{"gitId":"YoYoCiti"},"content":"    public static final String DEFAULT_FACILITY_NAME \u003d \"Court 1\";","lastModifiedDate":"2021-10-09"},{"lineNumber":15,"author":{"gitId":"YoYoCiti"},"content":"    public static final String DEFAULT_LOCATION \u003d \"Tampines Hub Badminton Hall\";","lastModifiedDate":"2021-10-09"},{"lineNumber":16,"author":{"gitId":"YoYoCiti"},"content":"    public static final String DEFAULT_TIME \u003d \"1700\";","lastModifiedDate":"2021-10-12"},{"lineNumber":17,"author":{"gitId":"YoYoCiti"},"content":"    public static final String DEFAULT_CAPACITY \u003d \"5\";","lastModifiedDate":"2021-10-09"},{"lineNumber":18,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":19,"author":{"gitId":"YoYoCiti"},"content":"    private FacilityName facilityName;","lastModifiedDate":"2021-10-09"},{"lineNumber":20,"author":{"gitId":"YoYoCiti"},"content":"    private Location location;","lastModifiedDate":"2021-10-09"},{"lineNumber":21,"author":{"gitId":"YoYoCiti"},"content":"    private Time time;","lastModifiedDate":"2021-10-09"},{"lineNumber":22,"author":{"gitId":"YoYoCiti"},"content":"    private Capacity capacity;","lastModifiedDate":"2021-10-09"},{"lineNumber":23,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":24,"author":{"gitId":"YoYoCiti"},"content":"    /**","lastModifiedDate":"2021-10-09"},{"lineNumber":25,"author":{"gitId":"YoYoCiti"},"content":"     * Creates a {@code FacilityBuilder} with the default details.","lastModifiedDate":"2021-10-09"},{"lineNumber":26,"author":{"gitId":"YoYoCiti"},"content":"     */","lastModifiedDate":"2021-10-09"},{"lineNumber":27,"author":{"gitId":"YoYoCiti"},"content":"    public FacilityBuilder() {","lastModifiedDate":"2021-10-09"},{"lineNumber":28,"author":{"gitId":"YoYoCiti"},"content":"        this.facilityName \u003d new FacilityName(DEFAULT_FACILITY_NAME);","lastModifiedDate":"2021-10-09"},{"lineNumber":29,"author":{"gitId":"YoYoCiti"},"content":"        this.location \u003d new Location(DEFAULT_LOCATION);","lastModifiedDate":"2021-10-09"},{"lineNumber":30,"author":{"gitId":"YoYoCiti"},"content":"        this.time \u003d new Time(DEFAULT_TIME);","lastModifiedDate":"2021-10-09"},{"lineNumber":31,"author":{"gitId":"YoYoCiti"},"content":"        this.capacity \u003d new Capacity(DEFAULT_CAPACITY);","lastModifiedDate":"2021-10-09"},{"lineNumber":32,"author":{"gitId":"YoYoCiti"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":33,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":34,"author":{"gitId":"YoYoCiti"},"content":"    /**","lastModifiedDate":"2021-10-09"},{"lineNumber":35,"author":{"gitId":"YoYoCiti"},"content":"     * Initializes the FacilityBuilder with the data of {@code facilityToCopy}.","lastModifiedDate":"2021-10-09"},{"lineNumber":36,"author":{"gitId":"YoYoCiti"},"content":"     */","lastModifiedDate":"2021-10-09"},{"lineNumber":37,"author":{"gitId":"YoYoCiti"},"content":"    public FacilityBuilder(Facility facilityToCopy) {","lastModifiedDate":"2021-10-09"},{"lineNumber":38,"author":{"gitId":"YoYoCiti"},"content":"        this.facilityName \u003d facilityToCopy.getName();","lastModifiedDate":"2021-10-09"},{"lineNumber":39,"author":{"gitId":"YoYoCiti"},"content":"        this.location \u003d facilityToCopy.getLocation();","lastModifiedDate":"2021-10-09"},{"lineNumber":40,"author":{"gitId":"YoYoCiti"},"content":"        this.time \u003d facilityToCopy.getTime();","lastModifiedDate":"2021-10-09"},{"lineNumber":41,"author":{"gitId":"YoYoCiti"},"content":"        this.capacity \u003d facilityToCopy.getCapacity();","lastModifiedDate":"2021-10-09"},{"lineNumber":42,"author":{"gitId":"YoYoCiti"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":43,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":44,"author":{"gitId":"YoYoCiti"},"content":"    /**","lastModifiedDate":"2021-10-09"},{"lineNumber":45,"author":{"gitId":"YoYoCiti"},"content":"     * Sets the {@code FacilityName} of the {@code Facility} that we are building.","lastModifiedDate":"2021-10-09"},{"lineNumber":46,"author":{"gitId":"YoYoCiti"},"content":"     */","lastModifiedDate":"2021-10-09"},{"lineNumber":47,"author":{"gitId":"YoYoCiti"},"content":"    public FacilityBuilder withFacilityName(String facilityName) {","lastModifiedDate":"2021-10-09"},{"lineNumber":48,"author":{"gitId":"YoYoCiti"},"content":"        this.facilityName \u003d new FacilityName(facilityName);","lastModifiedDate":"2021-10-09"},{"lineNumber":49,"author":{"gitId":"YoYoCiti"},"content":"        return this;","lastModifiedDate":"2021-10-09"},{"lineNumber":50,"author":{"gitId":"YoYoCiti"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":51,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":52,"author":{"gitId":"YoYoCiti"},"content":"    /**","lastModifiedDate":"2021-10-09"},{"lineNumber":53,"author":{"gitId":"YoYoCiti"},"content":"     * Sets the {@code Location} of the {@code Facility} that we are building.","lastModifiedDate":"2021-10-09"},{"lineNumber":54,"author":{"gitId":"YoYoCiti"},"content":"     */","lastModifiedDate":"2021-10-09"},{"lineNumber":55,"author":{"gitId":"YoYoCiti"},"content":"    public FacilityBuilder withLocation(String location) {","lastModifiedDate":"2021-10-09"},{"lineNumber":56,"author":{"gitId":"YoYoCiti"},"content":"        this.location \u003d new Location(location);","lastModifiedDate":"2021-10-09"},{"lineNumber":57,"author":{"gitId":"YoYoCiti"},"content":"        return this;","lastModifiedDate":"2021-10-09"},{"lineNumber":58,"author":{"gitId":"YoYoCiti"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":59,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":60,"author":{"gitId":"YoYoCiti"},"content":"    /**","lastModifiedDate":"2021-10-09"},{"lineNumber":61,"author":{"gitId":"YoYoCiti"},"content":"     * Sets the {@code Time} of the {@code Facility} that we are building.","lastModifiedDate":"2021-10-09"},{"lineNumber":62,"author":{"gitId":"YoYoCiti"},"content":"     */","lastModifiedDate":"2021-10-09"},{"lineNumber":63,"author":{"gitId":"YoYoCiti"},"content":"    public FacilityBuilder withTime(String time) {","lastModifiedDate":"2021-10-09"},{"lineNumber":64,"author":{"gitId":"YoYoCiti"},"content":"        this.time \u003d new Time(time);","lastModifiedDate":"2021-10-09"},{"lineNumber":65,"author":{"gitId":"YoYoCiti"},"content":"        return this;","lastModifiedDate":"2021-10-09"},{"lineNumber":66,"author":{"gitId":"YoYoCiti"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":67,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":68,"author":{"gitId":"YoYoCiti"},"content":"    /**","lastModifiedDate":"2021-10-09"},{"lineNumber":69,"author":{"gitId":"YoYoCiti"},"content":"     * Sets the {@code Capacity} of the {@code Facility} that we are building.","lastModifiedDate":"2021-10-09"},{"lineNumber":70,"author":{"gitId":"YoYoCiti"},"content":"     */","lastModifiedDate":"2021-10-09"},{"lineNumber":71,"author":{"gitId":"YoYoCiti"},"content":"    public FacilityBuilder withCapacity(String capacity) {","lastModifiedDate":"2021-10-09"},{"lineNumber":72,"author":{"gitId":"YoYoCiti"},"content":"        this.capacity \u003d new Capacity(capacity);","lastModifiedDate":"2021-10-09"},{"lineNumber":73,"author":{"gitId":"YoYoCiti"},"content":"        return this;","lastModifiedDate":"2021-10-09"},{"lineNumber":74,"author":{"gitId":"YoYoCiti"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":75,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":76,"author":{"gitId":"YoYoCiti"},"content":"    public Facility build() {","lastModifiedDate":"2021-10-09"},{"lineNumber":77,"author":{"gitId":"YoYoCiti"},"content":"        return new Facility(facilityName, location, time, capacity);","lastModifiedDate":"2021-10-09"},{"lineNumber":78,"author":{"gitId":"YoYoCiti"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":79,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":80,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":81,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":82,"author":{"gitId":"YoYoCiti"},"content":"}","lastModifiedDate":"2021-10-09"}],"authorContributionMap":{"YoYoCiti":82}},{"path":"src/test/java/seedu/address/testutil/FacilityUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"YoYoCiti"},"content":"package seedu.address.testutil;","lastModifiedDate":"2021-10-12"},{"lineNumber":2,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":3,"author":{"gitId":"YoYoCiti"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_CAPACITY;","lastModifiedDate":"2021-10-12"},{"lineNumber":4,"author":{"gitId":"YoYoCiti"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_LOCATION;","lastModifiedDate":"2021-10-12"},{"lineNumber":5,"author":{"gitId":"YoYoCiti"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2021-10-12"},{"lineNumber":6,"author":{"gitId":"YoYoCiti"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TIME;","lastModifiedDate":"2021-10-12"},{"lineNumber":7,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":8,"author":{"gitId":"YoYoCiti"},"content":"import seedu.address.logic.commands.EditFacilityCommand;","lastModifiedDate":"2021-10-12"},{"lineNumber":9,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":10,"author":{"gitId":"YoYoCiti"},"content":"/**","lastModifiedDate":"2021-10-12"},{"lineNumber":11,"author":{"gitId":"YoYoCiti"},"content":" * A utility class for Facility.","lastModifiedDate":"2021-10-12"},{"lineNumber":12,"author":{"gitId":"YoYoCiti"},"content":" */","lastModifiedDate":"2021-10-12"},{"lineNumber":13,"author":{"gitId":"YoYoCiti"},"content":"public class FacilityUtil {","lastModifiedDate":"2021-10-12"},{"lineNumber":14,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":15,"author":{"gitId":"YoYoCiti"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":16,"author":{"gitId":"YoYoCiti"},"content":"     * Returns the part of command string for the given {@code EditFacilityDescriptor}\u0027s details.","lastModifiedDate":"2021-10-12"},{"lineNumber":17,"author":{"gitId":"YoYoCiti"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":18,"author":{"gitId":"YoYoCiti"},"content":"    public static String getEditFacilityDescriptorDetails(EditFacilityCommand.EditFacilityDescriptor descriptor) {","lastModifiedDate":"2021-10-12"},{"lineNumber":19,"author":{"gitId":"YoYoCiti"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2021-10-12"},{"lineNumber":20,"author":{"gitId":"YoYoCiti"},"content":"        descriptor.getFacilityName()","lastModifiedDate":"2021-10-12"},{"lineNumber":21,"author":{"gitId":"YoYoCiti"},"content":"                .ifPresent(facilName -\u003e sb.append(PREFIX_NAME).append(facilName.facilityName).append(\" \"));","lastModifiedDate":"2021-10-12"},{"lineNumber":22,"author":{"gitId":"YoYoCiti"},"content":"        descriptor.getLocation()","lastModifiedDate":"2021-10-12"},{"lineNumber":23,"author":{"gitId":"YoYoCiti"},"content":"                .ifPresent(location -\u003e sb.append(PREFIX_LOCATION).append(location.location).append(\" \"));","lastModifiedDate":"2021-10-12"},{"lineNumber":24,"author":{"gitId":"YoYoCiti"},"content":"        descriptor.getTime()","lastModifiedDate":"2021-10-12"},{"lineNumber":25,"author":{"gitId":"YoYoCiti"},"content":"                .ifPresent(time -\u003e sb.append(PREFIX_TIME).append(time.time).append(\" \"));","lastModifiedDate":"2021-10-12"},{"lineNumber":26,"author":{"gitId":"YoYoCiti"},"content":"        descriptor.getCapacity()","lastModifiedDate":"2021-10-12"},{"lineNumber":27,"author":{"gitId":"YoYoCiti"},"content":"                .ifPresent(capacity -\u003e sb.append(PREFIX_CAPACITY).append(capacity.capacity).append(\" \"));","lastModifiedDate":"2021-10-12"},{"lineNumber":28,"author":{"gitId":"YoYoCiti"},"content":"        return sb.toString();","lastModifiedDate":"2021-10-12"},{"lineNumber":29,"author":{"gitId":"YoYoCiti"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":30,"author":{"gitId":"YoYoCiti"},"content":"}","lastModifiedDate":"2021-10-12"}],"authorContributionMap":{"YoYoCiti":30}},{"path":"src/test/java/seedu/address/testutil/PersonBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2016-09-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":3,"author":{"gitId":"felix-ong"},"content":"import java.time.DayOfWeek;","lastModifiedDate":"2021-10-16"},{"lineNumber":4,"author":{"gitId":"felix-ong"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-16"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2021-10-21"},{"lineNumber":6,"author":{"gitId":"felix-ong"},"content":"import java.util.List;","lastModifiedDate":"2021-10-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2021-10-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":9,"author":{"gitId":"felix-ong"},"content":"import seedu.address.model.person.Availability;","lastModifiedDate":"2021-10-10"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-01-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-04-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-01-18"},{"lineNumber":13,"author":{"gitId":"Shruthi0310"},"content":"import seedu.address.model.person.TodayAttendance;","lastModifiedDate":"2021-10-21"},{"lineNumber":14,"author":{"gitId":"Shruthi0310"},"content":"import seedu.address.model.person.TotalAttendance;","lastModifiedDate":"2021-10-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2021-10-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.util.SampleDataUtil;","lastModifiedDate":"2021-10-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * A utility class to help with building Person objects.","lastModifiedDate":"2017-04-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class PersonBuilder {","lastModifiedDate":"2016-09-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_NAME \u003d \"Amy Bee\";","lastModifiedDate":"2020-12-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_PHONE \u003d \"85355255\";","lastModifiedDate":"2017-04-05"},{"lineNumber":25,"author":{"gitId":"Shruthi0310"},"content":"    public static final Boolean DEFAULT_TODAY_ATTENDANCE \u003d false;","lastModifiedDate":"2021-10-21"},{"lineNumber":26,"author":{"gitId":"Shruthi0310"},"content":"    public static final Integer DEFAULT_TOTAL_ATTENDANCE \u003d 0;","lastModifiedDate":"2021-10-21"},{"lineNumber":27,"author":{"gitId":"felix-ong"},"content":"    public static final List\u003cDayOfWeek\u003e DEFAULT_AVAILABILITY \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private Name name;","lastModifiedDate":"2017-12-20"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private Phone phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":31,"author":{"gitId":"felix-ong"},"content":"    private Availability availability;","lastModifiedDate":"2021-10-10"},{"lineNumber":32,"author":{"gitId":"Shruthi0310"},"content":"    private TotalAttendance totalAttendance;","lastModifiedDate":"2021-10-21"},{"lineNumber":33,"author":{"gitId":"Shruthi0310"},"content":"    private TodayAttendance todayAttendance;","lastModifiedDate":"2021-10-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private Set\u003cTag\u003e tags;","lastModifiedDate":"2021-10-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Creates a {@code PersonBuilder} with the default details.","lastModifiedDate":"2020-05-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public PersonBuilder() {","lastModifiedDate":"2017-08-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        name \u003d new Name(DEFAULT_NAME);","lastModifiedDate":"2017-12-20"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        phone \u003d new Phone(DEFAULT_PHONE);","lastModifiedDate":"2017-12-20"},{"lineNumber":42,"author":{"gitId":"felix-ong"},"content":"        availability \u003d new Availability(DEFAULT_AVAILABILITY);","lastModifiedDate":"2021-10-10"},{"lineNumber":43,"author":{"gitId":"Shruthi0310"},"content":"        totalAttendance \u003d new TotalAttendance(DEFAULT_TOTAL_ATTENDANCE);","lastModifiedDate":"2021-10-21"},{"lineNumber":44,"author":{"gitId":"Shruthi0310"},"content":"        todayAttendance \u003d new TodayAttendance(DEFAULT_TODAY_ATTENDANCE);","lastModifiedDate":"2021-10-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2021-10-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-11"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * Initializes the PersonBuilder with the data of {@code personToCopy}.","lastModifiedDate":"2016-12-11"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-11"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public PersonBuilder(Person personToCopy) {","lastModifiedDate":"2018-01-10"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        name \u003d personToCopy.getName();","lastModifiedDate":"2017-12-20"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        phone \u003d personToCopy.getPhone();","lastModifiedDate":"2017-12-20"},{"lineNumber":54,"author":{"gitId":"felix-ong"},"content":"        availability \u003d personToCopy.getAvailability();","lastModifiedDate":"2021-10-10"},{"lineNumber":55,"author":{"gitId":"Shruthi0310"},"content":"        todayAttendance \u003d personToCopy.getTodayAttendance();","lastModifiedDate":"2021-10-21"},{"lineNumber":56,"author":{"gitId":"Shruthi0310"},"content":"        totalAttendance \u003d personToCopy.getTotalAttendance();","lastModifiedDate":"2021-10-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        tags \u003d new HashSet\u003c\u003e(personToCopy.getTags());","lastModifiedDate":"2021-10-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-11"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-11"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * Sets the {@code Name} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public PersonBuilder withName(String name) {","lastModifiedDate":"2017-08-15"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        this.name \u003d new Name(name);","lastModifiedDate":"2017-12-20"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * Sets the {@code Phone} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public PersonBuilder withPhone(String phone) {","lastModifiedDate":"2017-08-15"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        this.phone \u003d new Phone(phone);","lastModifiedDate":"2017-12-20"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-10-10"},{"lineNumber":77,"author":{"gitId":"felix-ong"},"content":"     * Sets the {@code Availability} of the {@code Person} that we are building.","lastModifiedDate":"2021-10-10"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-10-10"},{"lineNumber":79,"author":{"gitId":"felix-ong"},"content":"    public PersonBuilder withAvailability(List\u003cDayOfWeek\u003e availability) {","lastModifiedDate":"2021-10-16"},{"lineNumber":80,"author":{"gitId":"felix-ong"},"content":"        this.availability \u003d new Availability(availability);","lastModifiedDate":"2021-10-10"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2021-10-10"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-10-16"},{"lineNumber":85,"author":{"gitId":"felix-ong"},"content":"     * Sets the {@code Availability} of the {@code Person} that we are building.","lastModifiedDate":"2021-10-16"},{"lineNumber":86,"author":{"gitId":"felix-ong"},"content":"     * Used with string input.","lastModifiedDate":"2021-10-16"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-10-16"},{"lineNumber":88,"author":{"gitId":"felix-ong"},"content":"    public PersonBuilder withAvailability(String availabilityString) {","lastModifiedDate":"2021-10-16"},{"lineNumber":89,"author":{"gitId":"felix-ong"},"content":"        List\u003cDayOfWeek\u003e availability \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-16"},{"lineNumber":90,"author":{"gitId":"felix-ong"},"content":"        for (String dayNumber : availabilityString.split(\" \")) {","lastModifiedDate":"2021-10-16"},{"lineNumber":91,"author":{"gitId":"felix-ong"},"content":"            availability.add(DayOfWeek.of(Integer.parseInt(dayNumber)));","lastModifiedDate":"2021-10-16"},{"lineNumber":92,"author":{"gitId":"felix-ong"},"content":"        }","lastModifiedDate":"2021-10-16"},{"lineNumber":93,"author":{"gitId":"felix-ong"},"content":"        this.availability \u003d new Availability(availability);","lastModifiedDate":"2021-10-10"},{"lineNumber":94,"author":{"gitId":"felix-ong"},"content":"        return this;","lastModifiedDate":"2021-10-10"},{"lineNumber":95,"author":{"gitId":"felix-ong"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":96,"author":{"gitId":"felix-ong"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":97,"author":{"gitId":"Shruthi0310"},"content":"    /**","lastModifiedDate":"2021-10-23"},{"lineNumber":98,"author":{"gitId":"Shruthi0310"},"content":"     * Sets {@code TodayAttendance} of the {@code Person} that we are building.","lastModifiedDate":"2021-10-23"},{"lineNumber":99,"author":{"gitId":"Shruthi0310"},"content":"     */","lastModifiedDate":"2021-10-23"},{"lineNumber":100,"author":{"gitId":"Shruthi0310"},"content":"    public PersonBuilder withTodayAttendance(Boolean attendance) {","lastModifiedDate":"2021-10-23"},{"lineNumber":101,"author":{"gitId":"Shruthi0310"},"content":"        this.todayAttendance \u003d new TodayAttendance(attendance);","lastModifiedDate":"2021-10-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2021-10-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-10-21"},{"lineNumber":106,"author":{"gitId":"Shruthi0310"},"content":"     * Sets {@code TotalAttendance} of the {@code Person} that we are building.","lastModifiedDate":"2021-10-21"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-10-21"},{"lineNumber":108,"author":{"gitId":"Shruthi0310"},"content":"    public PersonBuilder withTotalAttendance(Integer attendance) {","lastModifiedDate":"2021-10-21"},{"lineNumber":109,"author":{"gitId":"Shruthi0310"},"content":"        this.totalAttendance \u003d new TotalAttendance(attendance);","lastModifiedDate":"2021-10-21"},{"lineNumber":110,"author":{"gitId":"Shruthi0310"},"content":"        return this;","lastModifiedDate":"2021-10-21"},{"lineNumber":111,"author":{"gitId":"Shruthi0310"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":112,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":113,"author":{"gitId":"tsinyee"},"content":"    /**","lastModifiedDate":"2021-10-21"},{"lineNumber":114,"author":{"gitId":"tsinyee"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code Person} that we are building.","lastModifiedDate":"2021-10-21"},{"lineNumber":115,"author":{"gitId":"tsinyee"},"content":"     */","lastModifiedDate":"2021-10-21"},{"lineNumber":116,"author":{"gitId":"tsinyee"},"content":"    public PersonBuilder withTags(String ... tags) {","lastModifiedDate":"2021-10-21"},{"lineNumber":117,"author":{"gitId":"tsinyee"},"content":"        this.tags \u003d SampleDataUtil.getTagSet(tags);","lastModifiedDate":"2021-10-21"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2021-10-21"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    public Person build() {","lastModifiedDate":"2017-04-05"},{"lineNumber":122,"author":{"gitId":"Shruthi0310"},"content":"        return new Person(name, phone, availability, todayAttendance, totalAttendance, tags);","lastModifiedDate":"2021-10-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":125,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-03"}],"authorContributionMap":{"Shruthi0310":22,"-":76,"felix-ong":22,"tsinyee":5}},{"path":"src/test/java/seedu/address/testutil/PersonUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2017-04-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":3,"author":{"gitId":"tsinyee"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_AVAILABILITY;","lastModifiedDate":"2021-10-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2021-10-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2021-10-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2021-10-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2021-10-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":10,"author":{"gitId":"tsinyee"},"content":"import seedu.address.logic.commands.AddMemberCommand;","lastModifiedDate":"2021-10-05"},{"lineNumber":11,"author":{"gitId":"tsinyee"},"content":"import seedu.address.logic.commands.EditMemberCommand.EditPersonDescriptor;","lastModifiedDate":"2021-10-10"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2021-10-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-04-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * A utility class for Person.","lastModifiedDate":"2017-04-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-04-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class PersonUtil {","lastModifiedDate":"2017-04-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-04-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Returns an add command string for adding the {@code person}.","lastModifiedDate":"2017-04-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-04-05"},{"lineNumber":23,"author":{"gitId":"tsinyee"},"content":"    public static String getAddMemberCommand(Person person) {","lastModifiedDate":"2021-10-05"},{"lineNumber":24,"author":{"gitId":"tsinyee"},"content":"        return AddMemberCommand.COMMAND_WORD + \" \" + getPersonDetails(person);","lastModifiedDate":"2021-10-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-04-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Returns the part of command string for the given {@code person}\u0027s details.","lastModifiedDate":"2017-04-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-04-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public static String getPersonDetails(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2017-04-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_NAME + person.getName().fullName + \" \");","lastModifiedDate":"2017-06-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_PHONE + person.getPhone().value + \" \");","lastModifiedDate":"2017-05-09"},{"lineNumber":34,"author":{"gitId":"felix-ong"},"content":"        sb.append(PREFIX_AVAILABILITY + person.getAvailability().toString() + \" \");","lastModifiedDate":"2021-10-15"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        person.getTags().stream().forEach(","lastModifiedDate":"2021-10-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            s -\u003e sb.append(PREFIX_TAG + s.tagName + \" \")","lastModifiedDate":"2021-10-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        );","lastModifiedDate":"2021-10-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2017-04-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-26"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-26"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Returns the part of command string for the given {@code EditPersonDescriptor}\u0027s details.","lastModifiedDate":"2018-03-26"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-26"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public static String getEditPersonDescriptorDetails(EditPersonDescriptor descriptor) {","lastModifiedDate":"2018-03-26"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2018-03-26"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        descriptor.getName().ifPresent(name -\u003e sb.append(PREFIX_NAME).append(name.fullName).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        descriptor.getPhone().ifPresent(phone -\u003e sb.append(PREFIX_PHONE).append(phone.value).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        if (descriptor.getTags().isPresent()) {","lastModifiedDate":"2021-10-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            Set\u003cTag\u003e tags \u003d descriptor.getTags().get();","lastModifiedDate":"2021-10-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            if (tags.isEmpty()) {","lastModifiedDate":"2021-10-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"                sb.append(PREFIX_TAG);","lastModifiedDate":"2021-10-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            } else {","lastModifiedDate":"2021-10-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"                tags.forEach(s -\u003e sb.append(PREFIX_TAG).append(s.tagName).append(\" \"));","lastModifiedDate":"2021-10-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2021-10-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2018-03-26"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-04-05"}],"authorContributionMap":{"-":52,"tsinyee":5,"felix-ong":1}},{"path":"src/test/java/seedu/address/testutil/TypicalAddressBook.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"YoYoCiti"},"content":"package seedu.address.testutil;","lastModifiedDate":"2021-10-09"},{"lineNumber":2,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":3,"author":{"gitId":"YoYoCiti"},"content":"import static seedu.address.testutil.TypicalFacilities.getTypicalFacilities;","lastModifiedDate":"2021-10-09"},{"lineNumber":4,"author":{"gitId":"YoYoCiti"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalPersons;","lastModifiedDate":"2021-10-09"},{"lineNumber":5,"author":{"gitId":"tsinyee"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalPersonsToFind;","lastModifiedDate":"2021-10-31"},{"lineNumber":6,"author":{"gitId":"tsinyee"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalPersonsUnsortedName;","lastModifiedDate":"2021-10-24"},{"lineNumber":7,"author":{"gitId":"tsinyee"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalPersonsUnsortedTag;","lastModifiedDate":"2021-10-24"},{"lineNumber":8,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":9,"author":{"gitId":"YoYoCiti"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2021-10-09"},{"lineNumber":10,"author":{"gitId":"YoYoCiti"},"content":"import seedu.address.model.facility.Facility;","lastModifiedDate":"2021-10-09"},{"lineNumber":11,"author":{"gitId":"YoYoCiti"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2021-10-09"},{"lineNumber":12,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":13,"author":{"gitId":"YoYoCiti"},"content":"public class TypicalAddressBook {","lastModifiedDate":"2021-10-09"},{"lineNumber":14,"author":{"gitId":"YoYoCiti"},"content":"    private TypicalAddressBook() {} // Prevents instantiation","lastModifiedDate":"2021-10-09"},{"lineNumber":15,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":16,"author":{"gitId":"YoYoCiti"},"content":"    /**","lastModifiedDate":"2021-10-09"},{"lineNumber":17,"author":{"gitId":"YoYoCiti"},"content":"     * Returns an {@code AddressBook} with all the typical persons and facilities.","lastModifiedDate":"2021-10-09"},{"lineNumber":18,"author":{"gitId":"YoYoCiti"},"content":"     */","lastModifiedDate":"2021-10-09"},{"lineNumber":19,"author":{"gitId":"YoYoCiti"},"content":"    public static AddressBook getTypicalAddressBook() {","lastModifiedDate":"2021-10-09"},{"lineNumber":20,"author":{"gitId":"YoYoCiti"},"content":"        AddressBook ab \u003d new AddressBook();","lastModifiedDate":"2021-10-09"},{"lineNumber":21,"author":{"gitId":"YoYoCiti"},"content":"        for (Person person: getTypicalPersons()) {","lastModifiedDate":"2021-10-09"},{"lineNumber":22,"author":{"gitId":"YoYoCiti"},"content":"            ab.addPerson(person);","lastModifiedDate":"2021-10-09"},{"lineNumber":23,"author":{"gitId":"YoYoCiti"},"content":"        }","lastModifiedDate":"2021-10-09"},{"lineNumber":24,"author":{"gitId":"YoYoCiti"},"content":"        for (Facility facility: getTypicalFacilities()) {","lastModifiedDate":"2021-10-09"},{"lineNumber":25,"author":{"gitId":"YoYoCiti"},"content":"            ab.addFacility(facility);","lastModifiedDate":"2021-10-09"},{"lineNumber":26,"author":{"gitId":"YoYoCiti"},"content":"        }","lastModifiedDate":"2021-10-09"},{"lineNumber":27,"author":{"gitId":"YoYoCiti"},"content":"        return ab;","lastModifiedDate":"2021-10-09"},{"lineNumber":28,"author":{"gitId":"YoYoCiti"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":29,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":30,"author":{"gitId":"tsinyee"},"content":"    /**","lastModifiedDate":"2021-10-31"},{"lineNumber":31,"author":{"gitId":"tsinyee"},"content":"     * Returns an {@code AddressBook} with all the typical persons and facilities.","lastModifiedDate":"2021-10-31"},{"lineNumber":32,"author":{"gitId":"tsinyee"},"content":"     */","lastModifiedDate":"2021-10-31"},{"lineNumber":33,"author":{"gitId":"tsinyee"},"content":"    public static AddressBook getTypicalAddressBookToFind() {","lastModifiedDate":"2021-10-31"},{"lineNumber":34,"author":{"gitId":"tsinyee"},"content":"        AddressBook ab \u003d new AddressBook();","lastModifiedDate":"2021-10-31"},{"lineNumber":35,"author":{"gitId":"tsinyee"},"content":"        for (Person person: getTypicalPersonsToFind()) {","lastModifiedDate":"2021-10-31"},{"lineNumber":36,"author":{"gitId":"tsinyee"},"content":"            ab.addPerson(person);","lastModifiedDate":"2021-10-31"},{"lineNumber":37,"author":{"gitId":"tsinyee"},"content":"        }","lastModifiedDate":"2021-10-31"},{"lineNumber":38,"author":{"gitId":"tsinyee"},"content":"        for (Facility facility: getTypicalFacilities()) {","lastModifiedDate":"2021-10-31"},{"lineNumber":39,"author":{"gitId":"tsinyee"},"content":"            ab.addFacility(facility);","lastModifiedDate":"2021-10-31"},{"lineNumber":40,"author":{"gitId":"tsinyee"},"content":"        }","lastModifiedDate":"2021-10-31"},{"lineNumber":41,"author":{"gitId":"tsinyee"},"content":"        return ab;","lastModifiedDate":"2021-10-31"},{"lineNumber":42,"author":{"gitId":"tsinyee"},"content":"    }","lastModifiedDate":"2021-10-31"},{"lineNumber":43,"author":{"gitId":"tsinyee"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":44,"author":{"gitId":"tsinyee"},"content":"    /**","lastModifiedDate":"2021-10-19"},{"lineNumber":45,"author":{"gitId":"tsinyee"},"content":"     * Returns an unsorted {@code AddressBook} with all the typical persons and facilities.","lastModifiedDate":"2021-10-19"},{"lineNumber":46,"author":{"gitId":"tsinyee"},"content":"     */","lastModifiedDate":"2021-10-19"},{"lineNumber":47,"author":{"gitId":"tsinyee"},"content":"    public static AddressBook getUnsortedNameAddressBook() {","lastModifiedDate":"2021-10-24"},{"lineNumber":48,"author":{"gitId":"tsinyee"},"content":"        AddressBook ab \u003d new AddressBook();","lastModifiedDate":"2021-10-19"},{"lineNumber":49,"author":{"gitId":"tsinyee"},"content":"        for (Person person: getTypicalPersonsUnsortedName()) {","lastModifiedDate":"2021-10-24"},{"lineNumber":50,"author":{"gitId":"tsinyee"},"content":"            ab.addPerson(person);","lastModifiedDate":"2021-10-24"},{"lineNumber":51,"author":{"gitId":"tsinyee"},"content":"        }","lastModifiedDate":"2021-10-24"},{"lineNumber":52,"author":{"gitId":"tsinyee"},"content":"        for (Facility facility: getTypicalFacilities()) {","lastModifiedDate":"2021-10-24"},{"lineNumber":53,"author":{"gitId":"tsinyee"},"content":"            ab.addFacility(facility);","lastModifiedDate":"2021-10-24"},{"lineNumber":54,"author":{"gitId":"tsinyee"},"content":"        }","lastModifiedDate":"2021-10-24"},{"lineNumber":55,"author":{"gitId":"tsinyee"},"content":"        return ab;","lastModifiedDate":"2021-10-24"},{"lineNumber":56,"author":{"gitId":"tsinyee"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":57,"author":{"gitId":"tsinyee"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":58,"author":{"gitId":"tsinyee"},"content":"    /**","lastModifiedDate":"2021-10-24"},{"lineNumber":59,"author":{"gitId":"tsinyee"},"content":"     * Returns an unsorted {@code AddressBook} with all the typical persons and facilities.","lastModifiedDate":"2021-10-24"},{"lineNumber":60,"author":{"gitId":"tsinyee"},"content":"     */","lastModifiedDate":"2021-10-24"},{"lineNumber":61,"author":{"gitId":"tsinyee"},"content":"    public static AddressBook getUnsortedTagAddressBook() {","lastModifiedDate":"2021-10-24"},{"lineNumber":62,"author":{"gitId":"tsinyee"},"content":"        AddressBook ab \u003d new AddressBook();","lastModifiedDate":"2021-10-24"},{"lineNumber":63,"author":{"gitId":"tsinyee"},"content":"        for (Person person: getTypicalPersonsUnsortedTag()) {","lastModifiedDate":"2021-10-24"},{"lineNumber":64,"author":{"gitId":"tsinyee"},"content":"            ab.addPerson(person);","lastModifiedDate":"2021-10-19"},{"lineNumber":65,"author":{"gitId":"tsinyee"},"content":"        }","lastModifiedDate":"2021-10-19"},{"lineNumber":66,"author":{"gitId":"tsinyee"},"content":"        for (Facility facility: getTypicalFacilities()) {","lastModifiedDate":"2021-10-19"},{"lineNumber":67,"author":{"gitId":"tsinyee"},"content":"            ab.addFacility(facility);","lastModifiedDate":"2021-10-19"},{"lineNumber":68,"author":{"gitId":"tsinyee"},"content":"        }","lastModifiedDate":"2021-10-19"},{"lineNumber":69,"author":{"gitId":"tsinyee"},"content":"        return ab;","lastModifiedDate":"2021-10-19"},{"lineNumber":70,"author":{"gitId":"tsinyee"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":71,"author":{"gitId":"tsinyee"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":72,"author":{"gitId":"YoYoCiti"},"content":"    /**","lastModifiedDate":"2021-10-09"},{"lineNumber":73,"author":{"gitId":"YoYoCiti"},"content":"     * Returns an {@code AddressBook} with all the typical persons and no facilities.","lastModifiedDate":"2021-10-09"},{"lineNumber":74,"author":{"gitId":"YoYoCiti"},"content":"     */","lastModifiedDate":"2021-10-09"},{"lineNumber":75,"author":{"gitId":"YoYoCiti"},"content":"    public static AddressBook getTypicalAddressBookEmptyFacilityList() {","lastModifiedDate":"2021-10-09"},{"lineNumber":76,"author":{"gitId":"YoYoCiti"},"content":"        AddressBook ab \u003d new AddressBook();","lastModifiedDate":"2021-10-09"},{"lineNumber":77,"author":{"gitId":"YoYoCiti"},"content":"        for (Person person: getTypicalPersons()) {","lastModifiedDate":"2021-10-09"},{"lineNumber":78,"author":{"gitId":"YoYoCiti"},"content":"            ab.addPerson(person);","lastModifiedDate":"2021-10-09"},{"lineNumber":79,"author":{"gitId":"YoYoCiti"},"content":"        }","lastModifiedDate":"2021-10-09"},{"lineNumber":80,"author":{"gitId":"YoYoCiti"},"content":"        return ab;","lastModifiedDate":"2021-10-09"},{"lineNumber":81,"author":{"gitId":"YoYoCiti"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":82,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":83,"author":{"gitId":"YoYoCiti"},"content":"    /**","lastModifiedDate":"2021-10-09"},{"lineNumber":84,"author":{"gitId":"YoYoCiti"},"content":"     * Returns an {@code AddressBook} with all the typical facilities and no persons.","lastModifiedDate":"2021-10-09"},{"lineNumber":85,"author":{"gitId":"YoYoCiti"},"content":"     */","lastModifiedDate":"2021-10-09"},{"lineNumber":86,"author":{"gitId":"YoYoCiti"},"content":"    public static AddressBook getTypicalAddressBookEmptyMemberList() {","lastModifiedDate":"2021-10-09"},{"lineNumber":87,"author":{"gitId":"YoYoCiti"},"content":"        AddressBook ab \u003d new AddressBook();","lastModifiedDate":"2021-10-09"},{"lineNumber":88,"author":{"gitId":"YoYoCiti"},"content":"        for (Facility facility: getTypicalFacilities()) {","lastModifiedDate":"2021-10-09"},{"lineNumber":89,"author":{"gitId":"YoYoCiti"},"content":"            ab.addFacility(facility);","lastModifiedDate":"2021-10-09"},{"lineNumber":90,"author":{"gitId":"YoYoCiti"},"content":"        }","lastModifiedDate":"2021-10-09"},{"lineNumber":91,"author":{"gitId":"YoYoCiti"},"content":"        return ab;","lastModifiedDate":"2021-10-09"},{"lineNumber":92,"author":{"gitId":"YoYoCiti"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":93,"author":{"gitId":"YoYoCiti"},"content":"}","lastModifiedDate":"2021-10-09"}],"authorContributionMap":{"YoYoCiti":48,"tsinyee":45}},{"path":"src/test/java/seedu/address/testutil/TypicalFacilities.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"YoYoCiti"},"content":"package seedu.address.testutil;","lastModifiedDate":"2021-10-09"},{"lineNumber":2,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":3,"author":{"gitId":"YoYoCiti"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-09"},{"lineNumber":4,"author":{"gitId":"YoYoCiti"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-10-09"},{"lineNumber":5,"author":{"gitId":"YoYoCiti"},"content":"import java.util.List;","lastModifiedDate":"2021-10-09"},{"lineNumber":6,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":7,"author":{"gitId":"YoYoCiti"},"content":"import seedu.address.model.facility.Facility;","lastModifiedDate":"2021-10-09"},{"lineNumber":8,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":9,"author":{"gitId":"YoYoCiti"},"content":"/**","lastModifiedDate":"2021-10-09"},{"lineNumber":10,"author":{"gitId":"YoYoCiti"},"content":" * A utility class containing a list of {@code Facility} objects to be used in tests.","lastModifiedDate":"2021-10-09"},{"lineNumber":11,"author":{"gitId":"YoYoCiti"},"content":" */","lastModifiedDate":"2021-10-09"},{"lineNumber":12,"author":{"gitId":"YoYoCiti"},"content":"public class TypicalFacilities {","lastModifiedDate":"2021-10-09"},{"lineNumber":13,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":14,"author":{"gitId":"YoYoCiti"},"content":"    // First facility uniquely different","lastModifiedDate":"2021-10-09"},{"lineNumber":15,"author":{"gitId":"YoYoCiti"},"content":"    public static final Facility TAMPINES_HUB_FIELD_SECTION_B \u003d new FacilityBuilder()","lastModifiedDate":"2021-10-09"},{"lineNumber":16,"author":{"gitId":"YoYoCiti"},"content":"            .withFacilityName(\"Court 1\")","lastModifiedDate":"2021-10-09"},{"lineNumber":17,"author":{"gitId":"YoYoCiti"},"content":"            .withLocation(\"Tampines Hub Field\")","lastModifiedDate":"2021-10-09"},{"lineNumber":18,"author":{"gitId":"Moley456"},"content":"            .withTime(\"1500\")","lastModifiedDate":"2021-10-11"},{"lineNumber":19,"author":{"gitId":"YoYoCiti"},"content":"            .withCapacity(\"4\").build();","lastModifiedDate":"2021-10-09"},{"lineNumber":20,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":21,"author":{"gitId":"Shruthi0310"},"content":"    public static final Facility FIELD \u003d new FacilityBuilder()","lastModifiedDate":"2021-10-22"},{"lineNumber":22,"author":{"gitId":"Shruthi0310"},"content":"            .withFacilityName(\"Field\")","lastModifiedDate":"2021-10-22"},{"lineNumber":23,"author":{"gitId":"Shruthi0310"},"content":"            .withLocation(\"NUS\")","lastModifiedDate":"2021-10-22"},{"lineNumber":24,"author":{"gitId":"Shruthi0310"},"content":"            .withTime(\"1300\")","lastModifiedDate":"2021-10-22"},{"lineNumber":25,"author":{"gitId":"Shruthi0310"},"content":"            .withCapacity(\"10\").build();","lastModifiedDate":"2021-10-22"},{"lineNumber":26,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":27,"author":{"gitId":"YoYoCiti"},"content":"    public static final Facility KENT_RIDGE_SPORT_HALL_5_COURT_1 \u003d new FacilityBuilder()","lastModifiedDate":"2021-10-09"},{"lineNumber":28,"author":{"gitId":"YoYoCiti"},"content":"            .withFacilityName(\"Court 1\")","lastModifiedDate":"2021-10-09"},{"lineNumber":29,"author":{"gitId":"YoYoCiti"},"content":"            .withLocation(\"Kent Ridge Sports Hall 5\")","lastModifiedDate":"2021-10-09"},{"lineNumber":30,"author":{"gitId":"Moley456"},"content":"            .withTime(\"1500\")","lastModifiedDate":"2021-10-11"},{"lineNumber":31,"author":{"gitId":"YoYoCiti"},"content":"            .withCapacity(\"4\").build();","lastModifiedDate":"2021-10-09"},{"lineNumber":32,"author":{"gitId":"YoYoCiti"},"content":"    public static final Facility KENT_RIDGE_SPORT_HALL_5_COURT_2 \u003d new FacilityBuilder()","lastModifiedDate":"2021-10-09"},{"lineNumber":33,"author":{"gitId":"YoYoCiti"},"content":"            .withFacilityName(\"Court 2\")","lastModifiedDate":"2021-10-09"},{"lineNumber":34,"author":{"gitId":"YoYoCiti"},"content":"            .withLocation(\"Kent Ridge Sports Hall 5\")","lastModifiedDate":"2021-10-09"},{"lineNumber":35,"author":{"gitId":"Moley456"},"content":"            .withTime(\"1500\")","lastModifiedDate":"2021-10-11"},{"lineNumber":36,"author":{"gitId":"YoYoCiti"},"content":"            .withCapacity(\"4\").build();","lastModifiedDate":"2021-10-09"},{"lineNumber":37,"author":{"gitId":"YoYoCiti"},"content":"    public static final Facility UNIVERSITY_TOWN_SPORTS_HALL_1_COURT_20 \u003d new FacilityBuilder()","lastModifiedDate":"2021-10-09"},{"lineNumber":38,"author":{"gitId":"YoYoCiti"},"content":"            .withFacilityName(\"Court 20\")","lastModifiedDate":"2021-10-09"},{"lineNumber":39,"author":{"gitId":"YoYoCiti"},"content":"            .withLocation(\"University Town Sports Hall 1\")","lastModifiedDate":"2021-10-09"},{"lineNumber":40,"author":{"gitId":"Moley456"},"content":"            .withTime(\"1600\")","lastModifiedDate":"2021-10-11"},{"lineNumber":41,"author":{"gitId":"YoYoCiti"},"content":"            .withCapacity(\"4\").build();","lastModifiedDate":"2021-10-09"},{"lineNumber":42,"author":{"gitId":"YoYoCiti"},"content":"    public static final Facility UNIVERSITY_TOWN_SPORTS_HALL_COURT_21 \u003d new FacilityBuilder()","lastModifiedDate":"2021-10-09"},{"lineNumber":43,"author":{"gitId":"YoYoCiti"},"content":"            .withFacilityName(\"Court 21\")","lastModifiedDate":"2021-10-09"},{"lineNumber":44,"author":{"gitId":"YoYoCiti"},"content":"            .withLocation(\"University Town Sports Hall 1\")","lastModifiedDate":"2021-10-09"},{"lineNumber":45,"author":{"gitId":"Moley456"},"content":"            .withTime(\"1600\")","lastModifiedDate":"2021-10-11"},{"lineNumber":46,"author":{"gitId":"YoYoCiti"},"content":"            .withCapacity(\"4\").build();","lastModifiedDate":"2021-10-09"},{"lineNumber":47,"author":{"gitId":"YoYoCiti"},"content":"    public static final Facility KENT_RIDGE_OUTDOOR_TENNIS_COURTS_COURT_1 \u003d new FacilityBuilder()","lastModifiedDate":"2021-10-09"},{"lineNumber":48,"author":{"gitId":"YoYoCiti"},"content":"            .withFacilityName(\"Court 1\")","lastModifiedDate":"2021-10-09"},{"lineNumber":49,"author":{"gitId":"YoYoCiti"},"content":"            .withLocation(\"Kent Ridge Outdoor Tennis Courts\")","lastModifiedDate":"2021-10-09"},{"lineNumber":50,"author":{"gitId":"Moley456"},"content":"            .withTime(\"1900\")","lastModifiedDate":"2021-10-11"},{"lineNumber":51,"author":{"gitId":"YoYoCiti"},"content":"            .withCapacity(\"5\").build();","lastModifiedDate":"2021-10-09"},{"lineNumber":52,"author":{"gitId":"YoYoCiti"},"content":"    public static final Facility KENT_RIDGE_OUTDOOR_TENNIS_COURTS_COURT_10 \u003d new FacilityBuilder()","lastModifiedDate":"2021-10-09"},{"lineNumber":53,"author":{"gitId":"YoYoCiti"},"content":"            .withFacilityName(\"Court 10\")","lastModifiedDate":"2021-10-09"},{"lineNumber":54,"author":{"gitId":"YoYoCiti"},"content":"            .withLocation(\"Kent Ridge Outdoor Tennis Courts\")","lastModifiedDate":"2021-10-09"},{"lineNumber":55,"author":{"gitId":"Moley456"},"content":"            .withTime(\"1900\")","lastModifiedDate":"2021-10-11"},{"lineNumber":56,"author":{"gitId":"YoYoCiti"},"content":"            .withCapacity(\"5\").build();","lastModifiedDate":"2021-10-09"},{"lineNumber":57,"author":{"gitId":"YoYoCiti"},"content":"    public static final Facility UTOWN_FIELD_SECTION_A \u003d new FacilityBuilder()","lastModifiedDate":"2021-10-09"},{"lineNumber":58,"author":{"gitId":"YoYoCiti"},"content":"            .withFacilityName(\"Section A\")","lastModifiedDate":"2021-10-09"},{"lineNumber":59,"author":{"gitId":"YoYoCiti"},"content":"            .withLocation(\"UTown Field\")","lastModifiedDate":"2021-10-09"},{"lineNumber":60,"author":{"gitId":"Moley456"},"content":"            .withTime(\"1400\")","lastModifiedDate":"2021-10-11"},{"lineNumber":61,"author":{"gitId":"YoYoCiti"},"content":"            .withCapacity(\"10\").build();","lastModifiedDate":"2021-10-09"},{"lineNumber":62,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":63,"author":{"gitId":"Moley456"},"content":"    //Manually added","lastModifiedDate":"2021-10-11"},{"lineNumber":64,"author":{"gitId":"Moley456"},"content":"    public static final Facility UNIVERSITY_TOWN_SPORTS_HALL_1_COURT_1 \u003d new FacilityBuilder()","lastModifiedDate":"2021-10-11"},{"lineNumber":65,"author":{"gitId":"Moley456"},"content":"            .withFacilityName(\"Court 1\")","lastModifiedDate":"2021-10-11"},{"lineNumber":66,"author":{"gitId":"Moley456"},"content":"            .withLocation(\"University Town Sports Hall 1\")","lastModifiedDate":"2021-10-11"},{"lineNumber":67,"author":{"gitId":"Moley456"},"content":"            .withTime(\"2000\")","lastModifiedDate":"2021-10-11"},{"lineNumber":68,"author":{"gitId":"Moley456"},"content":"            .withCapacity(\"4\").build();","lastModifiedDate":"2021-10-11"},{"lineNumber":69,"author":{"gitId":"Moley456"},"content":"    public static final Facility UNIVERSITY_TOWN_SPORTS_HALL_1_COURT_2 \u003d new FacilityBuilder()","lastModifiedDate":"2021-10-11"},{"lineNumber":70,"author":{"gitId":"Moley456"},"content":"            .withFacilityName(\"Court 2\")","lastModifiedDate":"2021-10-11"},{"lineNumber":71,"author":{"gitId":"Moley456"},"content":"            .withLocation(\"University Town Sports Hall 1\")","lastModifiedDate":"2021-10-11"},{"lineNumber":72,"author":{"gitId":"Moley456"},"content":"            .withTime(\"2100\")","lastModifiedDate":"2021-10-11"},{"lineNumber":73,"author":{"gitId":"Moley456"},"content":"            .withCapacity(\"4\").build();","lastModifiedDate":"2021-10-11"},{"lineNumber":74,"author":{"gitId":"Moley456"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":75,"author":{"gitId":"YoYoCiti"},"content":"    private TypicalFacilities() {} // Prevents instantiation","lastModifiedDate":"2021-10-09"},{"lineNumber":76,"author":{"gitId":"YoYoCiti"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":77,"author":{"gitId":"YoYoCiti"},"content":"    public static List\u003cFacility\u003e getTypicalFacilities() {","lastModifiedDate":"2021-10-09"},{"lineNumber":78,"author":{"gitId":"YoYoCiti"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(","lastModifiedDate":"2021-10-09"},{"lineNumber":79,"author":{"gitId":"YoYoCiti"},"content":"                TAMPINES_HUB_FIELD_SECTION_B,","lastModifiedDate":"2021-10-09"},{"lineNumber":80,"author":{"gitId":"YoYoCiti"},"content":"                KENT_RIDGE_SPORT_HALL_5_COURT_1,","lastModifiedDate":"2021-10-09"},{"lineNumber":81,"author":{"gitId":"YoYoCiti"},"content":"                KENT_RIDGE_SPORT_HALL_5_COURT_2,","lastModifiedDate":"2021-10-09"},{"lineNumber":82,"author":{"gitId":"YoYoCiti"},"content":"                UNIVERSITY_TOWN_SPORTS_HALL_1_COURT_20,","lastModifiedDate":"2021-10-09"},{"lineNumber":83,"author":{"gitId":"YoYoCiti"},"content":"                UNIVERSITY_TOWN_SPORTS_HALL_COURT_21,","lastModifiedDate":"2021-10-09"},{"lineNumber":84,"author":{"gitId":"YoYoCiti"},"content":"                KENT_RIDGE_OUTDOOR_TENNIS_COURTS_COURT_1,","lastModifiedDate":"2021-10-09"},{"lineNumber":85,"author":{"gitId":"YoYoCiti"},"content":"                KENT_RIDGE_OUTDOOR_TENNIS_COURTS_COURT_10,","lastModifiedDate":"2021-10-09"},{"lineNumber":86,"author":{"gitId":"YoYoCiti"},"content":"                UTOWN_FIELD_SECTION_A));","lastModifiedDate":"2021-10-09"},{"lineNumber":87,"author":{"gitId":"YoYoCiti"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":88,"author":{"gitId":"YoYoCiti"},"content":"}","lastModifiedDate":"2021-10-09"}],"authorContributionMap":{"YoYoCiti":62,"Moley456":20,"Shruthi0310":6}},{"path":"src/test/java/seedu/address/testutil/TypicalIndexes.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2017-08-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-08-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * A utility class containing a list of {@code Index} objects to be used in tests.","lastModifiedDate":"2017-08-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class TypicalIndexes {","lastModifiedDate":"2017-08-05"},{"lineNumber":9,"author":{"gitId":"YoYoCiti"},"content":"    public static final Index INDEX_FIRST \u003d Index.fromOneBased(1);","lastModifiedDate":"2021-10-09"},{"lineNumber":10,"author":{"gitId":"YoYoCiti"},"content":"    public static final Index INDEX_SECOND \u003d Index.fromOneBased(2);","lastModifiedDate":"2021-10-09"},{"lineNumber":11,"author":{"gitId":"YoYoCiti"},"content":"    public static final Index INDEX_THIRD \u003d Index.fromOneBased(3);","lastModifiedDate":"2021-10-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-08-05"}],"authorContributionMap":{"YoYoCiti":3,"-":9}},{"path":"src/test/java/seedu/address/testutil/TypicalPersons.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2016-09-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":3,"author":{"gitId":"felix-ong"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":4,"author":{"gitId":"felix-ong"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_AVAILABILITY_AMY;","lastModifiedDate":"2021-10-12"},{"lineNumber":5,"author":{"gitId":"felix-ong"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_AVAILABILITY_BOB;","lastModifiedDate":"2021-10-12"},{"lineNumber":6,"author":{"gitId":"Moley456"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_AVAILABILITY_CHARLIE;","lastModifiedDate":"2021-10-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2021-10-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2021-10-12"},{"lineNumber":9,"author":{"gitId":"Moley456"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_CHARLIE;","lastModifiedDate":"2021-10-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2021-10-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2021-10-12"},{"lineNumber":12,"author":{"gitId":"Moley456"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_CHARLIE;","lastModifiedDate":"2021-10-23"},{"lineNumber":13,"author":{"gitId":"tsinyee"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_EXCO;","lastModifiedDate":"2021-10-21"},{"lineNumber":14,"author":{"gitId":"tsinyee"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_Y2;","lastModifiedDate":"2021-10-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-08-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-08-07"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-08-07"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-07"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":22,"author":{"gitId":"felix-ong"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * A utility class containing a list of {@code Person} objects to be used in tests.","lastModifiedDate":"2017-08-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class TypicalPersons {","lastModifiedDate":"2017-04-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public static final Person ALICE \u003d new PersonBuilder().withName(\"Alice Pauline\")","lastModifiedDate":"2018-01-10"},{"lineNumber":29,"author":{"gitId":"tsinyee"},"content":"            .withPhone(\"94351253\").build();","lastModifiedDate":"2021-10-10"},{"lineNumber":30,"author":{"gitId":"tsinyee"},"content":"    public static final Person ALICE_TAN \u003d new PersonBuilder().withName(\"Alice Tan\").build();","lastModifiedDate":"2021-10-31"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static final Person BENSON \u003d new PersonBuilder().withName(\"Benson Meier\")","lastModifiedDate":"2018-01-10"},{"lineNumber":32,"author":{"gitId":"tsinyee"},"content":"            .withPhone(\"98765432\").build();","lastModifiedDate":"2021-10-10"},{"lineNumber":33,"author":{"gitId":"tsinyee"},"content":"    public static final Person CARL \u003d new PersonBuilder().withName(\"Carl Kurz\")","lastModifiedDate":"2021-10-10"},{"lineNumber":34,"author":{"gitId":"tsinyee"},"content":"            .withPhone(\"95352563\").build();","lastModifiedDate":"2021-10-10"},{"lineNumber":35,"author":{"gitId":"tsinyee"},"content":"    public static final Person DANIEL \u003d new PersonBuilder().withName(\"Daniel Meier\")","lastModifiedDate":"2021-10-10"},{"lineNumber":36,"author":{"gitId":"tsinyee"},"content":"            .withPhone(\"87652533\").build();","lastModifiedDate":"2021-10-10"},{"lineNumber":37,"author":{"gitId":"tsinyee"},"content":"    public static final Person ELLE \u003d new PersonBuilder().withName(\"Elle Meyer\")","lastModifiedDate":"2021-10-10"},{"lineNumber":38,"author":{"gitId":"tsinyee"},"content":"            .withPhone(\"9482224\").build();","lastModifiedDate":"2021-10-10"},{"lineNumber":39,"author":{"gitId":"tsinyee"},"content":"    public static final Person FIONA \u003d new PersonBuilder().withName(\"Fiona Kunz\")","lastModifiedDate":"2021-10-10"},{"lineNumber":40,"author":{"gitId":"tsinyee"},"content":"            .withPhone(\"9482427\").build();","lastModifiedDate":"2021-10-10"},{"lineNumber":41,"author":{"gitId":"tsinyee"},"content":"    public static final Person GEORGE \u003d new PersonBuilder().withName(\"George Best\")","lastModifiedDate":"2021-10-10"},{"lineNumber":42,"author":{"gitId":"tsinyee"},"content":"            .withPhone(\"9482442\").build();","lastModifiedDate":"2021-10-10"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    // Manually added","lastModifiedDate":"2016-09-13"},{"lineNumber":45,"author":{"gitId":"tsinyee"},"content":"    public static final Person HOON \u003d new PersonBuilder().withName(\"Hoon Meier\")","lastModifiedDate":"2021-10-10"},{"lineNumber":46,"author":{"gitId":"tsinyee"},"content":"            .withPhone(\"8482424\").build();","lastModifiedDate":"2021-10-10"},{"lineNumber":47,"author":{"gitId":"tsinyee"},"content":"    public static final Person IDA \u003d new PersonBuilder().withName(\"Ida Mueller\")","lastModifiedDate":"2021-10-10"},{"lineNumber":48,"author":{"gitId":"tsinyee"},"content":"            .withPhone(\"8482131\").withTodayAttendance(false).withTotalAttendance(0).build();","lastModifiedDate":"2021-10-25"},{"lineNumber":49,"author":{"gitId":"Moley456"},"content":"    public static final Person ALICE_DIFFERENT_PHONE \u003d new PersonBuilder().withName(\"Alice Pauline\")","lastModifiedDate":"2021-10-23"},{"lineNumber":50,"author":{"gitId":"Moley456"},"content":"            .withPhone(\"94839542\").build();","lastModifiedDate":"2021-10-23"},{"lineNumber":51,"author":{"gitId":"tsinyee"},"content":"    public static final Person CHOO \u003d new PersonBuilder().withName(\"Choo\")","lastModifiedDate":"2021-10-24"},{"lineNumber":52,"author":{"gitId":"tsinyee"},"content":"            .withPhone(\"90909090\").build();","lastModifiedDate":"2021-10-24"},{"lineNumber":53,"author":{"gitId":"tsinyee"},"content":"    public static final Person DOO \u003d new PersonBuilder().withName(\"Doo\")","lastModifiedDate":"2021-10-24"},{"lineNumber":54,"author":{"gitId":"tsinyee"},"content":"            .withPhone(\"99889898\").withTags(\"y3\").build();","lastModifiedDate":"2021-10-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-22"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    // Manually added - Person\u0027s details found in {@code CommandTestUtil}","lastModifiedDate":"2017-08-22"},{"lineNumber":57,"author":{"gitId":"tsinyee"},"content":"    public static final Person AMY \u003d new PersonBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2021-10-10"},{"lineNumber":58,"author":{"gitId":"tsinyee"},"content":"            .withPhone(VALID_PHONE_AMY).withAvailability(VALID_AVAILABILITY_AMY).withTags(VALID_TAG_Y2).build();","lastModifiedDate":"2021-10-21"},{"lineNumber":59,"author":{"gitId":"tsinyee"},"content":"    public static final Person BOB \u003d new PersonBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2021-10-10"},{"lineNumber":60,"author":{"gitId":"tsinyee"},"content":"            .withPhone(VALID_PHONE_BOB).withAvailability(VALID_AVAILABILITY_BOB)","lastModifiedDate":"2021-10-21"},{"lineNumber":61,"author":{"gitId":"tsinyee"},"content":"            .withTags(VALID_TAG_EXCO, VALID_TAG_Y2).build();","lastModifiedDate":"2021-10-21"},{"lineNumber":62,"author":{"gitId":"Moley456"},"content":"    public static final Person CHARLIE \u003d new PersonBuilder().withName(VALID_NAME_CHARLIE)","lastModifiedDate":"2021-10-23"},{"lineNumber":63,"author":{"gitId":"Moley456"},"content":"            .withPhone(VALID_PHONE_CHARLIE).withAvailability(VALID_AVAILABILITY_CHARLIE).build();","lastModifiedDate":"2021-10-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public static final String KEYWORD_MATCHING_MEIER \u003d \"Meier\"; // A keyword that matches MEIER","lastModifiedDate":"2017-09-21"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    private TypicalPersons() {} // prevents instantiation","lastModifiedDate":"2017-07-20"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public static List\u003cPerson\u003e getTypicalPersons() {","lastModifiedDate":"2018-01-10"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(ALICE, BENSON, CARL, DANIEL, ELLE, FIONA, GEORGE));","lastModifiedDate":"2017-08-07"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-08-04"},{"lineNumber":72,"author":{"gitId":"tsinyee"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":73,"author":{"gitId":"tsinyee"},"content":"    public static List\u003cPerson\u003e getTypicalPersonsToFind() {","lastModifiedDate":"2021-10-31"},{"lineNumber":74,"author":{"gitId":"tsinyee"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(ALICE, ALICE_TAN, BENSON));","lastModifiedDate":"2021-10-31"},{"lineNumber":75,"author":{"gitId":"tsinyee"},"content":"    }","lastModifiedDate":"2021-10-31"},{"lineNumber":76,"author":{"gitId":"tsinyee"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":77,"author":{"gitId":"tsinyee"},"content":"    public static List\u003cPerson\u003e getTypicalPersonsUnsortedName() {","lastModifiedDate":"2021-10-24"},{"lineNumber":78,"author":{"gitId":"tsinyee"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(GEORGE, FIONA, ELLE, DANIEL, CARL, BENSON, ALICE));","lastModifiedDate":"2021-10-19"},{"lineNumber":79,"author":{"gitId":"tsinyee"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":80,"author":{"gitId":"tsinyee"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":81,"author":{"gitId":"tsinyee"},"content":"    public static List\u003cPerson\u003e getTypicalPersonsUnsortedTag() {","lastModifiedDate":"2021-10-24"},{"lineNumber":82,"author":{"gitId":"tsinyee"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(AMY, BOB, CHOO, DOO));","lastModifiedDate":"2021-10-24"},{"lineNumber":83,"author":{"gitId":"tsinyee"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":84,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-13"}],"authorContributionMap":{"Moley456":7,"-":33,"felix-ong":4,"tsinyee":40}}]
