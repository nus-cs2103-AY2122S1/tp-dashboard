[{"path":"README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"jaredlhf"},"content":"[![CI Status](https://github.com/se-edu/addressbook-level3/workflows/Java%20CI/badge.svg)](https://github.com/AY2122S1-CS2103T-T15-4/tp/actions)","lastModifiedDate":"2021-09-21"},{"lineNumber":2,"author":{"gitId":"jaredlhf"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"![Ui](docs/images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"jaredlhf"},"content":"SafeFor(H)All is a desktop app for hall admins to keep track of hall residentsâ€™ information to keep hall residents safe during the COVID-19 pandemic via a Command Line Interface (CLI) while still having the benefits of a Graphical User Interface (GUI). If you can type fast, SafeFor(H)All can get your hall management tasks done faster than traditional GUI apps. \u003cbr\u003e","lastModifiedDate":"2021-09-21"},{"lineNumber":7,"author":{"gitId":"jaredlhf"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":8,"author":{"gitId":"jaredlhf"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":9,"author":{"gitId":"jaredlhf"},"content":"This project is based on the AddressBook-Level3 project created by the [SE-EDU initiative](https://se-education.org).","lastModifiedDate":"2021-09-21"}],"authorContributionMap":{"-":3,"jaredlhf":6}},{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: About Us","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"We are a team based in the [School of Computing, National University of Singapore](http://www.comp.nus.edu.sg).","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"You can reach us at the email `seer[at]comp.nus.edu.sg`","lastModifiedDate":"2020-06-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"## Project team","lastModifiedDate":"2020-06-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"VimuthM"},"content":"### Project advisor: [Prof. Damith Rajapakshe](http://www.comp.nus.edu.sg/~damithch)","lastModifiedDate":"2021-09-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"VimuthM"},"content":"### Vimuth Mendis","lastModifiedDate":"2021-09-20"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"VimuthM"},"content":"\u003cimg src\u003d\"images/vimuthm.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2021-09-20"},{"lineNumber":17,"author":{"gitId":"VimuthM"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":18,"author":{"gitId":"VimuthM"},"content":"[[github](https://github.com/VimuthM)]","lastModifiedDate":"2021-09-20"},{"lineNumber":19,"author":{"gitId":"VimuthM"},"content":"[[portfolio](team/vimuthm.md)]","lastModifiedDate":"2021-09-20"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"* Role: Project Advisor","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"jaredlhf"},"content":"### Lim Hern Fong, Jared","lastModifiedDate":"2021-09-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"jaredlhf"},"content":"\u003cimg src\u003d\"images/jaredlhf.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2021-09-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"jaredlhf"},"content":"[[github](http://github.com/jaredlhf)]","lastModifiedDate":"2021-09-21"},{"lineNumber":28,"author":{"gitId":"jaredlhf"},"content":"[[portfolio](team/jaredlhf.md)]","lastModifiedDate":"2021-09-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"jaredlhf"},"content":"* Role: Developer","lastModifiedDate":"2021-09-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"gordonlzy"},"content":"### Lim Zi Yang","lastModifiedDate":"2021-09-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"gordonlzy"},"content":"\u003cimg src\u003d\"images/gordonlzy.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2021-09-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"gordonlzy"},"content":"[[github](https://github.com/gordonlzy)] [[portfolio](team/gordonlzy.md)]","lastModifiedDate":"2021-09-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"* Responsibilities: Data","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"chongjunwei"},"content":"### Chong Jun Wei","lastModifiedDate":"2021-09-22"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"chongjunwei"},"content":"\u003cimg src\u003d\"images/chongjunwei.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2021-09-22"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"chongjunwei"},"content":"[[github](http://github.com/chongjunwei)]","lastModifiedDate":"2021-09-22"},{"lineNumber":46,"author":{"gitId":"chongjunwei"},"content":"[[portfolio](team/chongjunwei.md)]","lastModifiedDate":"2021-09-22"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"* Responsibilities: Dev Ops + Threading","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"rebeccalaujx"},"content":"### Rebecca Lau ","lastModifiedDate":"2021-09-22"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"rebeccalaujx"},"content":"\u003cimg src\u003d\"images/rebeccalaujx.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2021-09-22"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"rebeccalaujx"},"content":"[[github](http://github.com/rebeccalaujx)]","lastModifiedDate":"2021-09-22"},{"lineNumber":56,"author":{"gitId":"rebeccalaujx"},"content":"[[portfolio](team/rebeccalaujx.md)]","lastModifiedDate":"2021-09-22"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"* Responsibilities: UI","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"rebeccalaujx":4,"gordonlzy":3,"chongjunwei":4,"-":37,"VimuthM":6,"jaredlhf":5}},{"path":"docs/DeveloperGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: Developer Guide","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":"## **Acknowledgements**","lastModifiedDate":"2021-07-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":"* {list here sources of all reused/adapted ideas, code, documentation, and third-party libraries -- include links to the original source as well}","lastModifiedDate":"2021-07-30"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":14,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-07-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"## **Setting up, getting started**","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"Refer to the guide [_Setting up and getting started_](SettingUp.md).","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"## **Design**","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":":bulb: **Tip:** The `.puml` files used to create diagrams in this document can be found in the [diagrams](https://github.com/se-edu/addressbook-level3/tree/master/docs/diagrams/) folder. Refer to the [_PlantUML Tutorial_ at se-edu/guides](https://se-education.org/guides/tutorials/plantUml.html) to learn how to create and edit diagrams.","lastModifiedDate":"2021-07-31"},{"lineNumber":27,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"### Architecture","lastModifiedDate":"2021-07-31"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureDiagram.png\" width\u003d\"280\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"The ***Architecture Diagram*** given above explains the high-level design of the App.","lastModifiedDate":"2021-07-31"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"Given below is a quick overview of main components and how they interact with each other.","lastModifiedDate":"2021-07-31"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"**Main components of the architecture**","lastModifiedDate":"2021-07-31"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"**`Main`** has two classes called [`Main`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/Main.java) and [`MainApp`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/MainApp.java). It is responsible for,","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"* At app launch: Initializes the components in the correct sequence, and connects them up with each other.","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"* At shut down: Shuts down the components and invokes cleanup methods where necessary.","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"[**`Commons`**](#common-classes) represents a collection of classes used by multiple other components.","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"The rest of the App consists of four components.","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"* [**`UI`**](#ui-component): The UI of the App.","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"* [**`Logic`**](#logic-component): The command executor.","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"* [**`Model`**](#model-component): Holds the data of the App in memory.","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"* [**`Storage`**](#storage-component): Reads data from, and writes data to, the hard disk.","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"**How the architecture components interact with each other**","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"The *Sequence Diagram* below shows how the components interact with each other for the scenario where the user issues the command `delete 1`.","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureSequenceDiagram.png\" width\u003d\"574\" /\u003e","lastModifiedDate":"2020-06-07"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"Each of the four main components (also shown in the diagram above),","lastModifiedDate":"2021-07-31"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":61,"author":{"gitId":"-"},"content":"* defines its *API* in an `interface` with the same name as the Component.","lastModifiedDate":"2021-07-31"},{"lineNumber":62,"author":{"gitId":"-"},"content":"* implements its functionality using a concrete `{Component Name}Manager` class (which follows the corresponding API `interface` mentioned in the previous point.","lastModifiedDate":"2021-07-31"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":64,"author":{"gitId":"-"},"content":"For example, the `Logic` component defines its API in the `Logic.java` interface and implements its functionality using the `LogicManager.java` class which follows the `Logic` interface. Other components interact with a given component through its interface rather than the concrete class (reason: to prevent outside component\u0027s being coupled to the implementation of a component), as illustrated in the (partial) class diagram below.","lastModifiedDate":"2021-07-31"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":66,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ComponentManagers.png\" width\u003d\"300\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":68,"author":{"gitId":"-"},"content":"The sections below give more details of each component.","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"### UI component","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"The **API** of this component is specified in [`Ui.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/Ui.java)","lastModifiedDate":"2021-07-31"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"![Structure of the UI Component](images/UiClassDiagram.png)","lastModifiedDate":"2021-07-31"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"The UI consists of a `MainWindow` that is made up of parts e.g.`CommandBox`, `ResultDisplay`, `PersonListPanel`, `StatusBarFooter` etc. All these, including the `MainWindow`, inherit from the abstract `UiPart` class which captures the commonalities between classes that represent parts of the visible GUI.","lastModifiedDate":"2021-07-31"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"The `UI` component uses the JavaFx UI framework. The layout of these UI parts are defined in matching `.fxml` files that are in the `src/main/resources/view` folder. For example, the layout of the [`MainWindow`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/MainWindow.java) is specified in [`MainWindow.fxml`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/resources/view/MainWindow.fxml)","lastModifiedDate":"2021-07-31"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"The `UI` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"* executes user commands using the `Logic` component.","lastModifiedDate":"2021-07-31"},{"lineNumber":83,"author":{"gitId":"-"},"content":"* listens for changes to `Model` data so that the UI can be updated with the modified data.","lastModifiedDate":"2021-07-31"},{"lineNumber":84,"author":{"gitId":"-"},"content":"* keeps a reference to the `Logic` component, because the `UI` relies on the `Logic` to execute commands.","lastModifiedDate":"2021-07-31"},{"lineNumber":85,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component, as it displays `Person` object residing in the `Model`.","lastModifiedDate":"2021-07-31"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"### Logic component","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"**API** : [`Logic.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/logic/Logic.java)","lastModifiedDate":"2021-07-31"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"Here\u0027s a (partial) class diagram of the `Logic` component:","lastModifiedDate":"2021-07-31"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/LogicClassDiagram.png\" width\u003d\"550\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"How the `Logic` component works:","lastModifiedDate":"2021-07-31"},{"lineNumber":96,"author":{"gitId":"-"},"content":"1. When `Logic` is called upon to execute a command, it uses the `AddressBookParser` class to parse the user command.","lastModifiedDate":"2021-07-31"},{"lineNumber":97,"author":{"gitId":"-"},"content":"1. This results in a `Command` object (more precisely, an object of one of its subclasses e.g., `AddCommand`) which is executed by the `LogicManager`.","lastModifiedDate":"2021-07-31"},{"lineNumber":98,"author":{"gitId":"-"},"content":"1. The command can communicate with the `Model` when it is executed (e.g. to add a person).","lastModifiedDate":"2021-07-31"},{"lineNumber":99,"author":{"gitId":"-"},"content":"1. The result of the command execution is encapsulated as a `CommandResult` object which is returned back from `Logic`.","lastModifiedDate":"2021-07-31"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":101,"author":{"gitId":"-"},"content":"The Sequence Diagram below illustrates the interactions within the `Logic` component for the `execute(\"delete 1\")` API call.","lastModifiedDate":"2021-07-31"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"![Interactions Inside the Logic Component for the `delete 1` Command](images/DeleteSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `DeleteCommandParser` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"Here are the other classes in `Logic` (omitted from the class diagram above) that are used for parsing a user command:","lastModifiedDate":"2021-07-31"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":110,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ParserClasses.png\" width\u003d\"600\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"How the parsing works:","lastModifiedDate":"2021-07-31"},{"lineNumber":113,"author":{"gitId":"-"},"content":"* When called upon to parse a user command, the `AddressBookParser` class creates an `XYZCommandParser` (`XYZ` is a placeholder for the specific command name e.g., `AddCommandParser`) which uses the other classes shown above to parse the user command and create a `XYZCommand` object (e.g., `AddCommand`) which the `AddressBookParser` returns back as a `Command` object.","lastModifiedDate":"2021-07-31"},{"lineNumber":114,"author":{"gitId":"-"},"content":"* All `XYZCommandParser` classes (e.g., `AddCommandParser`, `DeleteCommandParser`, ...) inherit from the `Parser` interface so that they can be treated similarly where possible e.g, during testing.","lastModifiedDate":"2021-07-31"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"### Model component","lastModifiedDate":"2021-07-31"},{"lineNumber":117,"author":{"gitId":"-"},"content":"**API** : [`Model.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/model/Model.java)","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ModelClassDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"The `Model` component,","lastModifiedDate":"2021-07-31"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"* stores the address book data i.e., all `Person` objects (which are contained in a `UniquePersonList` object).","lastModifiedDate":"2021-07-31"},{"lineNumber":125,"author":{"gitId":"-"},"content":"* stores the currently \u0027selected\u0027 `Person` objects (e.g., results of a search query) as a separate _filtered_ list which is exposed to outsiders as an unmodifiable `ObservableList\u003cPerson\u003e` that can be \u0027observed\u0027 e.g. the UI can be bound to this list so that the UI automatically updates when the data in the list change.","lastModifiedDate":"2021-07-31"},{"lineNumber":126,"author":{"gitId":"-"},"content":"* stores a `UserPref` object that represents the userâ€™s preferences. This is exposed to the outside as a `ReadOnlyUserPref` objects.","lastModifiedDate":"2021-07-31"},{"lineNumber":127,"author":{"gitId":"-"},"content":"* does not depend on any of the other three components (as the `Model` represents data entities of the domain, they should make sense on their own without depending on other components)","lastModifiedDate":"2021-07-31"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":129,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** An alternative (arguably, a more OOP) model is given below. It has a `Tag` list in the `AddressBook`, which `Person` references. This allows `AddressBook` to only require one `Tag` object per unique tag, instead of each `Person` needing their own `Tag` objects.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":131,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/BetterModelClassDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"### Storage component","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":"**API** : [`Storage.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/storage/Storage.java)","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/StorageClassDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":142,"author":{"gitId":"-"},"content":"The `Storage` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"* can save both address book data and user preference data in json format, and read them back into corresponding objects.","lastModifiedDate":"2021-07-31"},{"lineNumber":144,"author":{"gitId":"-"},"content":"* inherits from both `AddressBookStorage` and `UserPrefStorage`, which means it can be treated as either one (if only the functionality of only one is needed).","lastModifiedDate":"2021-07-31"},{"lineNumber":145,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component (because the `Storage` component\u0027s job is to save/retrieve objects that belong to the `Model`)","lastModifiedDate":"2021-07-21"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"### Common classes","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"Classes used by multiple components are in the `seedu.addressbook.commons` package.","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"## **Implementation**","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"This section describes some noteworthy details on how certain features are implemented.","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Undo/redo feature","lastModifiedDate":"2020-06-07"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":"#### Proposed Implementation","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"The proposed undo/redo mechanism is facilitated by `VersionedAddressBook`. It extends `AddressBook` with an undo/redo history, stored internally as an `addressBookStateList` and `currentStatePointer`. Additionally, it implements the following operations:","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#commit()`â€‰â€”â€‰Saves the current address book state in its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#undo()`â€‰â€”â€‰Restores the previous address book state from its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#redo()`â€‰â€”â€‰Restores a previously undone address book state from its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"These operations are exposed in the `Model` interface as `Model#commitAddressBook()`, `Model#undoAddressBook()` and `Model#redoAddressBook()` respectively.","lastModifiedDate":"2020-05-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"Given below is an example usage scenario and how the undo/redo mechanism behaves at each step.","lastModifiedDate":"2020-05-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"Step 1. The user launches the application for the first time. The `VersionedAddressBook` will be initialized with the initial address book state, and the `currentStatePointer` pointing to that single address book state.","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"![UndoRedoState0](images/UndoRedoState0.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":175,"author":{"gitId":"-"},"content":"Step 2. The user executes `delete 5` command to delete the 5th person in the address book. The `delete` command calls `Model#commitAddressBook()`, causing the modified state of the address book after the `delete 5` command executes to be saved in the `addressBookStateList`, and the `currentStatePointer` is shifted to the newly inserted address book state.","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"![UndoRedoState1](images/UndoRedoState1.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":179,"author":{"gitId":"-"},"content":"Step 3. The user executes `add n/David â€¦â€‹` to add a new person. The `add` command also calls `Model#commitAddressBook()`, causing another modified address book state to be saved into the `addressBookStateList`.","lastModifiedDate":"2020-05-23"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"![UndoRedoState2](images/UndoRedoState2.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If a command fails its execution, it will not call `Model#commitAddressBook()`, so the address book state will not be saved into the `addressBookStateList`.","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"Step 4. The user now decides that adding the person was a mistake, and decides to undo that action by executing the `undo` command. The `undo` command will call `Model#undoAddressBook()`, which will shift the `currentStatePointer` once to the left, pointing it to the previous address book state, and restores the address book to that state.","lastModifiedDate":"2020-05-23"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"![UndoRedoState3](images/UndoRedoState3.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currentStatePointer` is at index 0, pointing to the initial AddressBook state, then there are no previous AddressBook states to restore. The `undo` command uses `Model#canUndoAddressBook()` to check if this is the case. If so, it will return an error to the user rather","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"than attempting to perform the undo.","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"The following sequence diagram shows how the undo operation works:","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":"![UndoSequenceDiagram](images/UndoSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `UndoCommand` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":204,"author":{"gitId":"-"},"content":"The `redo` command does the oppositeâ€‰â€”â€‰it calls `Model#redoAddressBook()`, which shifts the `currentStatePointer` once to the right, pointing to the previously undone state, and restores the address book to that state.","lastModifiedDate":"2020-05-23"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":206,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currentStatePointer` is at index `addressBookStateList.size() - 1`, pointing to the latest address book state, then there are no undone AddressBook states to restore. The `redo` command uses `Model#canRedoAddressBook()` to check if this is the case. If so, it will return an error to the user rather than attempting to perform the redo.","lastModifiedDate":"2020-05-23"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":208,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":210,"author":{"gitId":"-"},"content":"Step 5. The user then decides to execute the command `list`. Commands that do not modify the address book, such as `list`, will usually not call `Model#commitAddressBook()`, `Model#undoAddressBook()` or `Model#redoAddressBook()`. Thus, the `addressBookStateList` remains unchanged.","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":212,"author":{"gitId":"-"},"content":"![UndoRedoState4](images/UndoRedoState4.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"Step 6. The user executes `clear`, which calls `Model#commitAddressBook()`. Since the `currentStatePointer` is not pointing at the end of the `addressBookStateList`, all address book states after the `currentStatePointer` will be purged. Reason: It no longer makes sense to redo the `add n/David â€¦â€‹` command. This is the behavior that most modern desktop applications follow.","lastModifiedDate":"2020-05-23"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":216,"author":{"gitId":"-"},"content":"![UndoRedoState5](images/UndoRedoState5.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":"The following activity diagram summarizes what happens when a user executes a new command:","lastModifiedDate":"2020-05-23"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":220,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/CommitActivityDiagram.png\" width\u003d\"250\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":221,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":222,"author":{"gitId":"-"},"content":"#### Design considerations:","lastModifiedDate":"2021-07-31"},{"lineNumber":223,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":224,"author":{"gitId":"-"},"content":"**Aspect: How undo \u0026 redo executes:**","lastModifiedDate":"2021-07-31"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":226,"author":{"gitId":"-"},"content":"* **Alternative 1 (current choice):** Saves the entire address book.","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"  * Pros: Easy to implement.","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":"  * Cons: May have performance issues in terms of memory usage.","lastModifiedDate":"2020-05-23"},{"lineNumber":229,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":"* **Alternative 2:** Individual command knows how to undo/redo by","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"  itself.","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":"  * Pros: Will use less memory (e.g. for `delete`, just save the person being deleted).","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"-"},"content":"  * Cons: We must ensure that the implementation of each individual command are correct.","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":235,"author":{"gitId":"-"},"content":"_{more aspects and alternatives to be added}_","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Data archiving","lastModifiedDate":"2020-05-23"},{"lineNumber":238,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"_{Explain here how the data archiving feature will be implemented}_","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":244,"author":{"gitId":"-"},"content":"## **Documentation, logging, testing, configuration, dev-ops**","lastModifiedDate":"2020-06-07"},{"lineNumber":245,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":246,"author":{"gitId":"-"},"content":"* [Documentation guide](Documentation.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":247,"author":{"gitId":"-"},"content":"* [Testing guide](Testing.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":248,"author":{"gitId":"-"},"content":"* [Logging guide](Logging.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":249,"author":{"gitId":"-"},"content":"* [Configuration guide](Configuration.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":250,"author":{"gitId":"-"},"content":"* [DevOps guide](DevOps.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":251,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":252,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":253,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":254,"author":{"gitId":"-"},"content":"## **Appendix: Requirements**","lastModifiedDate":"2020-05-23"},{"lineNumber":255,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":256,"author":{"gitId":"-"},"content":"### Product scope","lastModifiedDate":"2020-05-23"},{"lineNumber":257,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":258,"author":{"gitId":"-"},"content":"**Target user profile**:","lastModifiedDate":"2020-05-23"},{"lineNumber":259,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":260,"author":{"gitId":"gordonlzy"},"content":"* administrator of on-campus halls and residences","lastModifiedDate":"2021-09-22"},{"lineNumber":261,"author":{"gitId":"gordonlzy"},"content":"* has a need to manage a large amount of resident information","lastModifiedDate":"2021-09-22"},{"lineNumber":262,"author":{"gitId":"-"},"content":"* prefer desktop apps over other types","lastModifiedDate":"2020-05-23"},{"lineNumber":263,"author":{"gitId":"-"},"content":"* can type fast","lastModifiedDate":"2020-05-23"},{"lineNumber":264,"author":{"gitId":"-"},"content":"* prefers typing to mouse interactions","lastModifiedDate":"2020-05-26"},{"lineNumber":265,"author":{"gitId":"-"},"content":"* is reasonably comfortable using CLI apps","lastModifiedDate":"2020-05-23"},{"lineNumber":266,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":267,"author":{"gitId":"VimuthM"},"content":"**Value proposition**: Manage residents\u0027 information faster than a typical mouse/GUI driven app and allow easy enforcement of Covid-19 restrictions ","lastModifiedDate":"2021-09-23"},{"lineNumber":268,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":269,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":270,"author":{"gitId":"-"},"content":"### User stories","lastModifiedDate":"2020-06-07"},{"lineNumber":271,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":272,"author":{"gitId":"-"},"content":"Priorities: High (must have) - `* * *`, Medium (nice to have) - `* *`, Low (unlikely to have) - `*`","lastModifiedDate":"2020-05-23"},{"lineNumber":273,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":274,"author":{"gitId":"-"},"content":"| Priority | As a â€¦â€‹                                 | I want to â€¦â€‹                                                                                       | So that I canâ€¦â€‹                                                                                                                    |","lastModifiedDate":"2020-05-23"},{"lineNumber":275,"author":{"gitId":"rebeccalaujx"},"content":"| -------- | ------------------------------------------ | ----------------------------------------------------------------------------------------------------- | ------------------------------------------------------------------------------------------------------------------------------------- |","lastModifiedDate":"2021-09-25"},{"lineNumber":276,"author":{"gitId":"rebeccalaujx"},"content":"| `* * *`  | admin in a hall/ residence                 | add a residentâ€™s information into the database                                                        | keep track of the residents\u0027 data                                                                                                     |","lastModifiedDate":"2021-09-25"},{"lineNumber":277,"author":{"gitId":"rebeccalaujx"},"content":"| `* * *`  | admin in a hall/ residence                 | delete a residentâ€™s information from the database                                                     | remove the data of a resident who has moved out                                                                                       |","lastModifiedDate":"2021-09-25"},{"lineNumber":278,"author":{"gitId":"rebeccalaujx"},"content":"| `* * *`  | admin in a hall/ residence                 | delete many residents in a single command                                                             | save a lot of time when deleting multiple residents                                                                                   |","lastModifiedDate":"2021-09-25"},{"lineNumber":279,"author":{"gitId":"rebeccalaujx"},"content":"| `* * *`  | admin in a hall/ residence                 | edit each residentâ€™s details                                                                          | update and reflect any changes in the residentsâ€™ details                                                                              |","lastModifiedDate":"2021-09-25"},{"lineNumber":280,"author":{"gitId":"rebeccalaujx"},"content":"| `* * *`  | admin in a hall/ residence                 | edit the particulars of many residents in a single command                                            | save a lot of time when editing the details of multiple residents                                                                     |","lastModifiedDate":"2021-09-25"},{"lineNumber":281,"author":{"gitId":"rebeccalaujx"},"content":"| `* * *`  | admin in a hall/ residence                 | view the residentsâ€™ information                                                                       | see all the information of the current residents                                                                                      |","lastModifiedDate":"2021-09-25"},{"lineNumber":282,"author":{"gitId":"rebeccalaujx"},"content":"| `* * *`  | admin in a hall/ residence                 | search for the residents by their name, room, email, phone number                                     | find a resident based on the information given                                                                                        |","lastModifiedDate":"2021-09-25"},{"lineNumber":283,"author":{"gitId":"rebeccalaujx"},"content":"| `* * *`  | admin in a hall/ residence                 | retrieve a list of residents in a certain faculty                                                     | easily disseminate faculty-specific information to the residents                                                                      |","lastModifiedDate":"2021-09-25"},{"lineNumber":284,"author":{"gitId":"rebeccalaujx"},"content":"| `* * *`  | admin in a hall/ residence                 | filter the residents by their vaccination status                                                      | use the information to disseminate information or guidelines that may be different for vaccinated and unvaccinated individuals        |","lastModifiedDate":"2021-09-25"},{"lineNumber":285,"author":{"gitId":"rebeccalaujx"},"content":"| `* * *`  | admin in a hall/ residence                 | retrieve all residents whose FETs that are due within a given date                                    | ensure residents do not miss their FET deadlines by reminding them to do their FETs                                                   |","lastModifiedDate":"2021-09-25"},{"lineNumber":286,"author":{"gitId":"rebeccalaujx"},"content":"| `* * *`  | admin in a hall/ residence                 | retrieve a resident\u0027s test kit collection deadlines                                                   | ensure residents do not miss their test kit collections by reminding them to collect their kits on time                               |","lastModifiedDate":"2021-09-25"},{"lineNumber":287,"author":{"gitId":"rebeccalaujx"},"content":"| `* * *`  | admin in a hall/ residence                 | add a resident\u0027s last FET date                                                                        | track and be aware of the new residentsâ€™ FET progress                                                                                 |","lastModifiedDate":"2021-09-25"},{"lineNumber":288,"author":{"gitId":"rebeccalaujx"},"content":"| `* * *`  | admin in a hall/ residence                 | edit a resident\u0027s last FET date                                                                       | update the current residentsâ€™ last FET dates when they take a new FET                                                                 |","lastModifiedDate":"2021-09-25"},{"lineNumber":289,"author":{"gitId":"rebeccalaujx"},"content":"| `* * *`  | admin in a hall/ residence                 | add a new event                                                                                       | keep track of current and upcoming events happening in the hall/ residence                                                            |","lastModifiedDate":"2021-09-25"},{"lineNumber":290,"author":{"gitId":"rebeccalaujx"},"content":"| `* * *`  | admin in a hall/ residence                 | add residents to an event                                                                             | keep track of the residents attending an event and their information                                                                  |","lastModifiedDate":"2021-09-25"},{"lineNumber":291,"author":{"gitId":"rebeccalaujx"},"content":"| `* * *`  | admin in a hall/ residence                 | view a list of residents who were present at an event                                                 | identify who is at risk if someone in the group catches COVID                                                                         |","lastModifiedDate":"2021-09-25"},{"lineNumber":292,"author":{"gitId":"rebeccalaujx"},"content":"| `* * *`  | admin in a hall/ residence                 | check the date of the events                                                                          | identify who was in contact with the infected person on the day of the event                                                          |","lastModifiedDate":"2021-09-25"},{"lineNumber":293,"author":{"gitId":"rebeccalaujx"},"content":"| `* * *`  | admin in a hall/ residence                 | view the help guide whenever I need to                                                                | refresh my memory on how to use the app                                                                                               |","lastModifiedDate":"2021-09-25"},{"lineNumber":294,"author":{"gitId":"rebeccalaujx"},"content":"| `* *`    | admin in a hall/ residence                 | immediately see residents who have missed their FET deadlines                                         | disseminate a reminder to these residents to take a new FET test                                                                      |","lastModifiedDate":"2021-09-25"},{"lineNumber":295,"author":{"gitId":"rebeccalaujx"},"content":"| `* *`    | admin in a hall/ residence                 | retrieve the event venues and its maximum capacity and the number of residents attending an event     | ensure that the number of residents attending the event will not exceed the capacity of the event venue                               |","lastModifiedDate":"2021-09-25"},{"lineNumber":296,"author":{"gitId":"rebeccalaujx"},"content":"| `* *`    | admin in a hall/ residence                 | retrieve the vaccination statuses of the residents attending an event                                 | ensure that COVID restrictions are adhered to and everyone attending the event is vaccinated                                          |","lastModifiedDate":"2021-09-25"},{"lineNumber":297,"author":{"gitId":"rebeccalaujx"},"content":"| `* *`    | admin in a hall/ residence                 | delete an event                                                                                       | remove an event that has been cancelled                                                                                               |","lastModifiedDate":"2021-09-25"},{"lineNumber":298,"author":{"gitId":"rebeccalaujx"},"content":"| `* *`    | admin in a hall/ residence                 | filter the residents by block and level                                                               | easily contact a group of students in order to disseminate group-specific information                                                 |","lastModifiedDate":"2021-09-25"},{"lineNumber":299,"author":{"gitId":"rebeccalaujx"},"content":"| `* *`    | admin in a hall/ residence                 | import user data from a CSV file                                                                      | input multiple residents\u0027 information into the system at once without having to add each resident\u0027s information line-by-line          |","lastModifiedDate":"2021-09-25"},{"lineNumber":300,"author":{"gitId":"rebeccalaujx"},"content":"| `*`      | admin in a hall/ residence                 | output the emails of the residents whose FET/collection are due soon into a file                      | disseminate information to the residents more easily                                                                                  |","lastModifiedDate":"2021-09-25"},{"lineNumber":301,"author":{"gitId":"rebeccalaujx"},"content":"| `*`      | admin in a hall/ residence                 | edit an event                                                                                         | edit an eventâ€™s details if there are any changes                                                                                      |","lastModifiedDate":"2021-09-25"},{"lineNumber":302,"author":{"gitId":"rebeccalaujx"},"content":"| `*`      | admin in a hall/ residence                 | check which CCA booked a certain facility                                                             | find out which CCA is responsible in case trouble arises                                                                              |","lastModifiedDate":"2021-09-25"},{"lineNumber":303,"author":{"gitId":"rebeccalaujx"},"content":"| `*`      | admin in a hall/ residence                 | check a residentâ€™s prior activities (events/ CCAs)                                                    | find out which group has come into contact with the infected person                                                                   |","lastModifiedDate":"2021-09-25"},{"lineNumber":304,"author":{"gitId":"rebeccalaujx"},"content":"| `*`      | new user of the app                        | view a detailed guide on how to use basic functions                                                   | learn how to navigate within the app and use the commands                                                                             |","lastModifiedDate":"2021-09-25"},{"lineNumber":305,"author":{"gitId":"rebeccalaujx"},"content":"| `*`      | admin in a hall/ residence                 | ensure there is no duplication among the residentsâ€™ names and rooms                                   | avoid having multiple entries of the same resident                                                                                    |","lastModifiedDate":"2021-09-25"},{"lineNumber":306,"author":{"gitId":"rebeccalaujx"},"content":"| `*`      | admin in a hall/ residence                 | retrieve a list of residents in a certain CCA                                                         | easily disseminate CCA-specific information to the residents                                                                          |","lastModifiedDate":"2021-09-25"},{"lineNumber":307,"author":{"gitId":"rebeccalaujx"},"content":"| `*`      | admin in a hall/ residence                 | easily carry out contact tracing                                                                      | quarantine can be done quickly in the case where one person in the group catches COVID                                                |","lastModifiedDate":"2021-09-25"},{"lineNumber":308,"author":{"gitId":"rebeccalaujx"},"content":"| `*`      | admin in a hall/ residence                 | see a pop-up of the format of the command once I type it                                              | input the data in the correct format correctly on my first try                                                                        |","lastModifiedDate":"2021-09-25"},{"lineNumber":309,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":310,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":311,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":312,"author":{"gitId":"-"},"content":"### Use cases","lastModifiedDate":"2020-06-07"},{"lineNumber":313,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":314,"author":{"gitId":"jaredlhf"},"content":"(For all use cases below, the **System** is the `SafeFor(H)All app` and the **Actor** is the `Hall admin`, unless specified otherwise)","lastModifiedDate":"2021-09-29"},{"lineNumber":315,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":316,"author":{"gitId":"jaredlhf"},"content":"**Use case: UC01 - Delete a resident**","lastModifiedDate":"2021-09-29"},{"lineNumber":317,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":318,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2020-05-23"},{"lineNumber":319,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":320,"author":{"gitId":"jaredlhf"},"content":"1.  Actor requests to list residents","lastModifiedDate":"2021-09-29"},{"lineNumber":321,"author":{"gitId":"jaredlhf"},"content":"2.  System shows a list of residents","lastModifiedDate":"2021-09-29"},{"lineNumber":322,"author":{"gitId":"jaredlhf"},"content":"3.  Actor requests to delete a specific resident in the list","lastModifiedDate":"2021-09-29"},{"lineNumber":323,"author":{"gitId":"jaredlhf"},"content":"4.  System deletes the resident","lastModifiedDate":"2021-09-29"},{"lineNumber":324,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":325,"author":{"gitId":"-"},"content":"    Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":326,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":327,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2020-05-23"},{"lineNumber":328,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":329,"author":{"gitId":"-"},"content":"* 2a. The list is empty.","lastModifiedDate":"2020-05-23"},{"lineNumber":330,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":331,"author":{"gitId":"-"},"content":"  Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":332,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":333,"author":{"gitId":"-"},"content":"* 3a. The given index is invalid.","lastModifiedDate":"2020-05-23"},{"lineNumber":334,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":335,"author":{"gitId":"jaredlhf"},"content":"    * 3a1. System shows an error message.","lastModifiedDate":"2021-09-29"},{"lineNumber":336,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":337,"author":{"gitId":"-"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2020-05-23"},{"lineNumber":338,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":339,"author":{"gitId":"jaredlhf"},"content":"**Use case: UC02 - Remind residents to take FET**","lastModifiedDate":"2021-09-29"},{"lineNumber":340,"author":{"gitId":"jaredlhf"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":341,"author":{"gitId":"jaredlhf"},"content":"**MSS**","lastModifiedDate":"2021-09-29"},{"lineNumber":342,"author":{"gitId":"jaredlhf"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":343,"author":{"gitId":"jaredlhf"},"content":"1. Actor filters residents, specifying desired FET due date.","lastModifiedDate":"2021-09-29"},{"lineNumber":344,"author":{"gitId":"jaredlhf"},"content":"2. System shows the list of residents filtered.","lastModifiedDate":"2021-09-29"},{"lineNumber":345,"author":{"gitId":"jaredlhf"},"content":"3. Actor requests for a list of the email addresses of the residents shown. ","lastModifiedDate":"2021-09-29"},{"lineNumber":346,"author":{"gitId":"jaredlhf"},"content":"4. System outputs the list email addresses. ","lastModifiedDate":"2021-09-29"},{"lineNumber":347,"author":{"gitId":"jaredlhf"},"content":"5. Actor sends an email to these residents to remind them to take their FET soon.","lastModifiedDate":"2021-09-29"},{"lineNumber":348,"author":{"gitId":"jaredlhf"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":349,"author":{"gitId":"jaredlhf"},"content":"    Use case ends.","lastModifiedDate":"2021-09-29"},{"lineNumber":350,"author":{"gitId":"jaredlhf"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":351,"author":{"gitId":"jaredlhf"},"content":"**Extensions**","lastModifiedDate":"2021-09-29"},{"lineNumber":352,"author":{"gitId":"jaredlhf"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":353,"author":{"gitId":"jaredlhf"},"content":"* 2a. The list is empty.","lastModifiedDate":"2021-09-29"},{"lineNumber":354,"author":{"gitId":"jaredlhf"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":355,"author":{"gitId":"jaredlhf"},"content":"  Use case ends.","lastModifiedDate":"2021-09-29"},{"lineNumber":356,"author":{"gitId":"jaredlhf"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":357,"author":{"gitId":"jaredlhf"},"content":"**Use case: UC03 - View residents involved in an event**","lastModifiedDate":"2021-09-29"},{"lineNumber":358,"author":{"gitId":"jaredlhf"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":359,"author":{"gitId":"jaredlhf"},"content":"**MSS**","lastModifiedDate":"2021-09-29"},{"lineNumber":360,"author":{"gitId":"jaredlhf"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":361,"author":{"gitId":"jaredlhf"},"content":"1. Actor navigates to the `events` tab of the application.","lastModifiedDate":"2021-09-29"},{"lineNumber":362,"author":{"gitId":"jaredlhf"},"content":"2. Actor requests to view an event.","lastModifiedDate":"2021-09-29"},{"lineNumber":363,"author":{"gitId":"jaredlhf"},"content":"3. System shows the list of residents involved in the event and their relevant personal information.","lastModifiedDate":"2021-09-29"},{"lineNumber":364,"author":{"gitId":"jaredlhf"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":365,"author":{"gitId":"jaredlhf"},"content":"   Use case ends.","lastModifiedDate":"2021-09-29"},{"lineNumber":366,"author":{"gitId":"jaredlhf"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":367,"author":{"gitId":"jaredlhf"},"content":"**Extensions**","lastModifiedDate":"2021-09-29"},{"lineNumber":368,"author":{"gitId":"jaredlhf"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":369,"author":{"gitId":"jaredlhf"},"content":"* 3a. The list is empty.","lastModifiedDate":"2021-09-29"},{"lineNumber":370,"author":{"gitId":"jaredlhf"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":371,"author":{"gitId":"jaredlhf"},"content":"  Use case ends.","lastModifiedDate":"2021-09-29"},{"lineNumber":372,"author":{"gitId":"jaredlhf"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":373,"author":{"gitId":"jaredlhf"},"content":"**Use case: UC04 - View any unvaccinated residents involved in an event**","lastModifiedDate":"2021-09-29"},{"lineNumber":374,"author":{"gitId":"jaredlhf"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":375,"author":{"gitId":"jaredlhf"},"content":"**MSS**","lastModifiedDate":"2021-09-29"},{"lineNumber":376,"author":{"gitId":"jaredlhf"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":377,"author":{"gitId":"jaredlhf"},"content":"1. Actor \u003cu\u003eviews residents involved in an event (UC03)\u003c/u\u003e","lastModifiedDate":"2021-09-29"},{"lineNumber":378,"author":{"gitId":"jaredlhf"},"content":"2. Actor filters for unvaccinated residents.","lastModifiedDate":"2021-09-29"},{"lineNumber":379,"author":{"gitId":"jaredlhf"},"content":"3. System shows the list of unvaccinated residents.","lastModifiedDate":"2021-09-29"},{"lineNumber":380,"author":{"gitId":"jaredlhf"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":381,"author":{"gitId":"jaredlhf"},"content":"   Use case ends.","lastModifiedDate":"2021-09-29"},{"lineNumber":382,"author":{"gitId":"jaredlhf"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":383,"author":{"gitId":"jaredlhf"},"content":"**Extensions**","lastModifiedDate":"2021-09-29"},{"lineNumber":384,"author":{"gitId":"jaredlhf"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":385,"author":{"gitId":"jaredlhf"},"content":"* 3a. The list is empty.","lastModifiedDate":"2021-09-29"},{"lineNumber":386,"author":{"gitId":"jaredlhf"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":387,"author":{"gitId":"jaredlhf"},"content":"  Use case ends.","lastModifiedDate":"2021-09-29"},{"lineNumber":388,"author":{"gitId":"jaredlhf"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":389,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":390,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":391,"author":{"gitId":"-"},"content":"### Non-Functional Requirements","lastModifiedDate":"2020-05-23"},{"lineNumber":392,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":393,"author":{"gitId":"-"},"content":"1.  Should work on any _mainstream OS_ as long as it has Java `11` or above installed.","lastModifiedDate":"2020-05-23"},{"lineNumber":394,"author":{"gitId":"-"},"content":"2.  Should be able to hold up to 1000 persons without a noticeable sluggishness in performance for typical usage.","lastModifiedDate":"2020-05-23"},{"lineNumber":395,"author":{"gitId":"-"},"content":"3.  A user with above average typing speed for regular English text (i.e. not code, not system admin commands) should be able to accomplish most of the tasks faster using commands than using the mouse.","lastModifiedDate":"2020-05-23"},{"lineNumber":396,"author":{"gitId":"VimuthM"},"content":"4.  Should be targeted towards a single user and not multi-users.","lastModifiedDate":"2021-09-23"},{"lineNumber":397,"author":{"gitId":"VimuthM"},"content":"5.  Data stored locally should be in a human editable text file.","lastModifiedDate":"2021-09-23"},{"lineNumber":398,"author":{"gitId":"VimuthM"},"content":"6.  Do not make use of a DBMS to manage data.","lastModifiedDate":"2021-09-23"},{"lineNumber":399,"author":{"gitId":"VimuthM"},"content":"7.  Final software should be platform-independent.","lastModifiedDate":"2021-09-23"},{"lineNumber":400,"author":{"gitId":"VimuthM"},"content":"8.  The software shouldn\u0027t depend on our own remote server.","lastModifiedDate":"2021-09-23"},{"lineNumber":401,"author":{"gitId":"VimuthM"},"content":"9.  Application is to be packaged into a single JAR file.","lastModifiedDate":"2021-09-23"},{"lineNumber":402,"author":{"gitId":"VimuthM"},"content":"10. JAR file size to be limited to 100MB and documents to 15MB/file.","lastModifiedDate":"2021-09-23"},{"lineNumber":403,"author":{"gitId":"VimuthM"},"content":"11. UG and DG are to be pdf-friendly.","lastModifiedDate":"2021-09-23"},{"lineNumber":404,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":405,"author":{"gitId":"-"},"content":"### Glossary","lastModifiedDate":"2020-05-23"},{"lineNumber":406,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":407,"author":{"gitId":"-"},"content":"* **Mainstream OS**: Windows, Linux, Unix, OS-X","lastModifiedDate":"2020-05-23"},{"lineNumber":408,"author":{"gitId":"-"},"content":"* **Private contact detail**: A contact detail that is not meant to be shared with others","lastModifiedDate":"2020-05-23"},{"lineNumber":409,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":410,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":411,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":412,"author":{"gitId":"-"},"content":"## **Appendix: Instructions for manual testing**","lastModifiedDate":"2020-05-23"},{"lineNumber":413,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":414,"author":{"gitId":"-"},"content":"Given below are instructions to test the app manually.","lastModifiedDate":"2020-05-23"},{"lineNumber":415,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":416,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** These instructions only provide a starting point for testers to work on;","lastModifiedDate":"2020-05-23"},{"lineNumber":417,"author":{"gitId":"-"},"content":"testers are expected to do more *exploratory* testing.","lastModifiedDate":"2020-05-23"},{"lineNumber":418,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":419,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":420,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":421,"author":{"gitId":"-"},"content":"### Launch and shutdown","lastModifiedDate":"2020-05-23"},{"lineNumber":422,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":423,"author":{"gitId":"-"},"content":"1. Initial launch","lastModifiedDate":"2020-05-23"},{"lineNumber":424,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":425,"author":{"gitId":"-"},"content":"   1. Download the jar file and copy into an empty folder","lastModifiedDate":"2020-05-23"},{"lineNumber":426,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":427,"author":{"gitId":"-"},"content":"   1. Double-click the jar file Expected: Shows the GUI with a set of sample contacts. The window size may not be optimum.","lastModifiedDate":"2020-05-23"},{"lineNumber":428,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":429,"author":{"gitId":"-"},"content":"1. Saving window preferences","lastModifiedDate":"2020-05-23"},{"lineNumber":430,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":431,"author":{"gitId":"-"},"content":"   1. Resize the window to an optimum size. Move the window to a different location. Close the window.","lastModifiedDate":"2020-05-23"},{"lineNumber":432,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":433,"author":{"gitId":"-"},"content":"   1. Re-launch the app by double-clicking the jar file.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":434,"author":{"gitId":"-"},"content":"       Expected: The most recent window size and location is retained.","lastModifiedDate":"2020-05-23"},{"lineNumber":435,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":436,"author":{"gitId":"-"},"content":"1. _{ more test cases â€¦â€‹ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":437,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":438,"author":{"gitId":"-"},"content":"### Deleting a person","lastModifiedDate":"2020-05-23"},{"lineNumber":439,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":440,"author":{"gitId":"-"},"content":"1. Deleting a person while all persons are being shown","lastModifiedDate":"2020-05-23"},{"lineNumber":441,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":442,"author":{"gitId":"-"},"content":"   1. Prerequisites: List all persons using the `list` command. Multiple persons in the list.","lastModifiedDate":"2020-05-23"},{"lineNumber":443,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":444,"author":{"gitId":"-"},"content":"   1. Test case: `delete 1`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":445,"author":{"gitId":"-"},"content":"      Expected: First contact is deleted from the list. Details of the deleted contact shown in the status message. Timestamp in the status bar is updated.","lastModifiedDate":"2020-05-23"},{"lineNumber":446,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":447,"author":{"gitId":"-"},"content":"   1. Test case: `delete 0`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":448,"author":{"gitId":"-"},"content":"      Expected: No person is deleted. Error details shown in the status message. Status bar remains the same.","lastModifiedDate":"2020-05-23"},{"lineNumber":449,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":450,"author":{"gitId":"-"},"content":"   1. Other incorrect delete commands to try: `delete`, `delete x`, `...` (where x is larger than the list size)\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":451,"author":{"gitId":"-"},"content":"      Expected: Similar to previous.","lastModifiedDate":"2020-05-23"},{"lineNumber":452,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":453,"author":{"gitId":"-"},"content":"1. _{ more test cases â€¦â€‹ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":454,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":455,"author":{"gitId":"-"},"content":"### Saving data","lastModifiedDate":"2020-05-23"},{"lineNumber":456,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":457,"author":{"gitId":"-"},"content":"1. Dealing with missing/corrupted data files","lastModifiedDate":"2020-05-23"},{"lineNumber":458,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":459,"author":{"gitId":"-"},"content":"   1. _{explain how to simulate a missing/corrupted file, and the expected behavior}_","lastModifiedDate":"2020-05-23"},{"lineNumber":460,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":461,"author":{"gitId":"-"},"content":"1. _{ more test cases â€¦â€‹ }_","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"rebeccalaujx":34,"gordonlzy":2,"-":359,"VimuthM":9,"jaredlhf":57}},{"path":"docs/UserGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: User Guide","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"VimuthM"},"content":"SafeFor(H)All is a **desktop app for hall admins to keep track of hall residentsâ€™ information to keep hall residents safe during the COVID-19 pandemic via a Command Line Interface (CLI)** while still having the benefits of a Graphical User Interface (GUI). If you can type fast, SafeFor(H)All can get your hall management tasks done faster than traditional GUI apps.","lastModifiedDate":"2021-09-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"## Quick start","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"1. Ensure you have Java `11` or above installed in your Computer.","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"VimuthM"},"content":"1. Download the latest `safeforhall.jar` from [here](https://www.youtube.com/watch?v\u003ddQw4w9WgXcQ).","lastModifiedDate":"2021-09-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"VimuthM"},"content":"1. Copy the file to the folder you want to use as the _home folder_ for your SafeFor(H)All Application.","lastModifiedDate":"2021-09-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"VimuthM"},"content":"1. Double-click the file to start the app. The GUI similar to the below should appear in a few seconds.","lastModifiedDate":"2021-09-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   ![Ui](images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"1. Type the command in the command box and press Enter to execute it. e.g. typing **`help`** and pressing Enter will open the help window.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"   Some example commands you can try:","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"VimuthM"},"content":"   * **`view`** : Lists all contacts.","lastModifiedDate":"2021-09-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"jaredlhf"},"content":"   * **`add`**`n/John Doe r/A100 v/true f/SoC` : Adds a resident named `John Doe` to the application.","lastModifiedDate":"2021-09-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"VimuthM"},"content":"   * **`delete`**`3` : Deletes the 3rd resident shown in the current list.","lastModifiedDate":"2021-09-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"   * **`exit`** : Exits the app.","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"1. Refer to the [Features](#features) below for details of each command.","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"## Features","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"**:information_source: Notes about the command format:**\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"* Words in `UPPER_CASE` are the parameters to be supplied by the user.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"  e.g. in `add n/NAME`, `NAME` is a parameter which can be used as `add n/John Doe`.","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"* Items in square brackets are optional.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"VimuthM"},"content":"  e.g `view [INDEX]` can be used as `view` or as `view 100.","lastModifiedDate":"2021-09-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"* Items with `â€¦`â€‹ after them can be used multiple times including zero times.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"jaredlhf"},"content":"  e.g. `[c/CCA]â€¦â€‹` can be used as `Â ` (i.e. 0 times), `c/Volleyball`, `c/Frisbee c/Hockey` etc.","lastModifiedDate":"2021-09-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"* Parameters can be in any order.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"VimuthM"},"content":"  e.g. if the command specifies `n/NAME f/FACULTY`, `f/FACULTY n/NAME` is also acceptable.","lastModifiedDate":"2021-09-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"* If a parameter is expected only once in the command but you specified it multiple times, only the last occurrence of the parameter will be taken.\u003cbr\u003e","lastModifiedDate":"2021-02-04"},{"lineNumber":58,"author":{"gitId":"VimuthM"},"content":"  e.g. if you specify `v/true v/false` only `v/true` will be taken.","lastModifiedDate":"2021-09-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":60,"author":{"gitId":"VimuthM"},"content":"* Extraneous parameters for commands that do not take in parameters (such as `help`, `exit`) will be ignored.\u003cbr\u003e","lastModifiedDate":"2021-09-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"  e.g. if the command specifies `help 123`, it will be interpreted as `help`.","lastModifiedDate":"2021-02-03"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-03"},{"lineNumber":63,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"### Viewing help : `help`","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"VimuthM"},"content":"Make changes -\u003e","lastModifiedDate":"2021-09-21"},{"lineNumber":68,"author":{"gitId":"-"},"content":"Shows a message explaning how to access the help page.","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"![help message](images/helpMessage.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"Format: `help`","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"VimuthM"},"content":"### Adding a residentâ€™s information : `add`","lastModifiedDate":"2021-09-21"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"jaredlhf"},"content":"Adds a resident and their information to the application. ","lastModifiedDate":"2021-09-25"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"jaredlhf"},"content":"Format: `add n/NAME p/PHONE_NUMBER e/EMAIL r/ROOM v/VACCINATION_STATUS f/FACULTY [c/CCA]â€¦â€‹`","lastModifiedDate":"2021-09-25"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Tip:**","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"jaredlhf"},"content":"A resident can have any number of CCAs (including 0)","lastModifiedDate":"2021-09-25"},{"lineNumber":83,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"jaredlhf"},"content":"* `add n/John Doe p/98765432 e/johnd@example.com r/A100 v/true f/SoC`","lastModifiedDate":"2021-09-25"},{"lineNumber":87,"author":{"gitId":"jaredlhf"},"content":"* `add n/Betsy Crowe c/Basketball e/betsyc@example.com v/false r/B400 p/1234567 c/Hockey f/FASS`","lastModifiedDate":"2021-09-25"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"VimuthM"},"content":"### Viewing residentsâ€™ information : `view`","lastModifiedDate":"2021-09-21"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"chongjunwei"},"content":"Shows a numbered list of all the residents in the address book.","lastModifiedDate":"2021-09-22"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"chongjunwei"},"content":"The optional argument [INDEX] will show the details of the","lastModifiedDate":"2021-09-22"},{"lineNumber":94,"author":{"gitId":"chongjunwei"},"content":"resident at the specified index.","lastModifiedDate":"2021-09-22"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"chongjunwei"},"content":"The index of the resident is the corresponding number in the list","lastModifiedDate":"2021-09-22"},{"lineNumber":97,"author":{"gitId":"chongjunwei"},"content":"shown when `view` (without the [INDEX] parameter) is called.","lastModifiedDate":"2021-09-22"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"chongjunwei"},"content":"Format: `view [INDEX]`","lastModifiedDate":"2021-09-22"},{"lineNumber":100,"author":{"gitId":"chongjunwei"},"content":"* For an index i, 1 \u0026leq; i \u0026leq; n, where n is the number of","lastModifiedDate":"2021-09-22"},{"lineNumber":101,"author":{"gitId":"chongjunwei"},"content":"residents in the address book","lastModifiedDate":"2021-09-22"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"chongjunwei"},"content":"Examples:","lastModifiedDate":"2021-09-22"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"chongjunwei"},"content":"* `view` shows a list of all the residents","lastModifiedDate":"2021-09-22"},{"lineNumber":106,"author":{"gitId":"chongjunwei"},"content":"* `view 30` shows the details of the resident at index 30","lastModifiedDate":"2021-09-22"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"gordonlzy"},"content":"### Retrieve a list of residents with their fet due : `list`","lastModifiedDate":"2021-09-25"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"gordonlzy"},"content":"Retrieve a list of residents whose ART collection or FET are due within the range of the current date and the optional given date.","lastModifiedDate":"2021-09-25"},{"lineNumber":111,"author":{"gitId":"gordonlzy"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":112,"author":{"gitId":"VimuthM"},"content":"Format: `list [FLAG] [d/DATE]`","lastModifiedDate":"2021-09-25"},{"lineNumber":113,"author":{"gitId":"gordonlzy"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":114,"author":{"gitId":"VimuthM"},"content":"* The flag can be either -f for fet or -c collection","lastModifiedDate":"2021-09-25"},{"lineNumber":115,"author":{"gitId":"gordonlzy"},"content":"* The date inputted has to be in `dd-mm-yyyy` format","lastModifiedDate":"2021-09-21"},{"lineNumber":116,"author":{"gitId":"gordonlzy"},"content":"* The given Date must be a date later than the current date","lastModifiedDate":"2021-09-25"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"gordonlzy"},"content":"* `list -f` retrieves a list of residents whose FET is due today","lastModifiedDate":"2021-09-25"},{"lineNumber":120,"author":{"gitId":"gordonlzy"},"content":"* `list -f 30-9-2021` retrieves a list of residents whose FET is due some day between today and `Sep 21 2021`","lastModifiedDate":"2021-09-25"},{"lineNumber":121,"author":{"gitId":"gordonlzy"},"content":"* `list -c` retrieves a list of residents whose FET is due today","lastModifiedDate":"2021-09-25"},{"lineNumber":122,"author":{"gitId":"gordonlzy"},"content":"* `list -c 30-9-2021` retrieves a list of residents whose ART Collection is due some day between today and `Sep 21 2021`","lastModifiedDate":"2021-09-25"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"VimuthM"},"content":"### Searching by resident information: `search`","lastModifiedDate":"2021-09-21"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"VimuthM"},"content":"Filters for residents by the provided keywords for each available parameter.","lastModifiedDate":"2021-09-22"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":128,"author":{"gitId":"VimuthM"},"content":"Format: `search n/KEYWORD [MORE_KEYWORDS] [FLAG/KEYWORD]...`","lastModifiedDate":"2021-09-25"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":130,"author":{"gitId":"VimuthM"},"content":"* The search is case-insensitive. e.g `hans` will match `Hans`, `True` will match `true`","lastModifiedDate":"2021-09-22"},{"lineNumber":131,"author":{"gitId":"VimuthM"},"content":"* The order of the keywords provided for the name does not matter. e.g. `Hans Bo` will match `Bo Hans`","lastModifiedDate":"2021-09-22"},{"lineNumber":132,"author":{"gitId":"-"},"content":"* Only full words will be matched e.g. `Han` will not match `Hans`","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"VimuthM"},"content":"* Residents matching at least one keyword for the name will be returned (i.e. `OR` search).","lastModifiedDate":"2021-09-22"},{"lineNumber":134,"author":{"gitId":"-"},"content":"  e.g. `Hans Bo` will return `Hans Gruber`, `Bo Yang`","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"VimuthM"},"content":"* `search n/John` returns `john` and `John Doe`","lastModifiedDate":"2021-09-22"},{"lineNumber":138,"author":{"gitId":"VimuthM"},"content":"* `search n/alex david v/true` returns vaccinated residents, `Alex Yeoh` and `David Li`","lastModifiedDate":"2021-09-22"},{"lineNumber":139,"author":{"gitId":"VimuthM"},"content":"* `search v/false f/soc` returns un-vaccinated residents from SoC \u003cbr\u003e","lastModifiedDate":"2021-09-22"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"rebeccalaujx"},"content":"### Editing a person : `edit`","lastModifiedDate":"2021-09-25"},{"lineNumber":142,"author":{"gitId":"rebeccalaujx"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":143,"author":{"gitId":"rebeccalaujx"},"content":"Edits an existing resident in the address book.","lastModifiedDate":"2021-09-25"},{"lineNumber":144,"author":{"gitId":"rebeccalaujx"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":145,"author":{"gitId":"VimuthM"},"content":"Format: `edit INDEX [MORE_INDICES] [n/NAME] [p/PHONE_NUMBER] [e/EMAIL] [r/ROOM] [v/VACCINATION_STATUS] [f/FACULTY] [c/CCA]â€¦â€‹`","lastModifiedDate":"2021-09-25"},{"lineNumber":146,"author":{"gitId":"rebeccalaujx"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":147,"author":{"gitId":"rebeccalaujx"},"content":"* Edits the resident at the specified `INDEX`. The index refers to the index number shown in the displayed resident list. The index **must be a positive integer** 1, 2, 3, â€¦â€‹","lastModifiedDate":"2021-09-25"},{"lineNumber":148,"author":{"gitId":"rebeccalaujx"},"content":"* At least one of the optional fields must be provided.","lastModifiedDate":"2021-09-25"},{"lineNumber":149,"author":{"gitId":"rebeccalaujx"},"content":"* Existing values will be updated to the input values.","lastModifiedDate":"2021-09-25"},{"lineNumber":150,"author":{"gitId":"rebeccalaujx"},"content":"* When editing CCAs, the existing CCAs of the resident will be removed i.e adding of CCAs is not cumulative.","lastModifiedDate":"2021-09-25"},{"lineNumber":151,"author":{"gitId":"rebeccalaujx"},"content":"* You can remove all the residentâ€™s CCAs by typing `c/` without specifying any CCAs after it.","lastModifiedDate":"2021-09-25"},{"lineNumber":152,"author":{"gitId":"rebeccalaujx"},"content":"* Able to edit multiple residents at once by inputting multiple indexes, each separated by a space.","lastModifiedDate":"2021-09-25"},{"lineNumber":153,"author":{"gitId":"rebeccalaujx"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":154,"author":{"gitId":"rebeccalaujx"},"content":"Examples:","lastModifiedDate":"2021-09-25"},{"lineNumber":155,"author":{"gitId":"rebeccalaujx"},"content":"*  `edit 1 e/johndoe@example.com r/A101` Edits the email address and room number of the 1st person to be `johndoe@example.com` and `A101` respectively.","lastModifiedDate":"2021-09-25"},{"lineNumber":156,"author":{"gitId":"rebeccalaujx"},"content":"*  `edit 2 n/Betsy Crower c/` Edits the name of the 2nd person to be `Betsy Crower` and clears all existing CCAs.","lastModifiedDate":"2021-09-25"},{"lineNumber":157,"author":{"gitId":"rebeccalaujx"},"content":"*  `edit 1 2 3 v/true` Sets the vaccination status of the 1st, 2nd, and 3rd resident as vaccinated.","lastModifiedDate":"2021-09-25"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"VimuthM"},"content":"### Deleting a resident : `delete`","lastModifiedDate":"2021-09-21"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"gordonlzy"},"content":"Deletes the specified resident from the address book.","lastModifiedDate":"2021-09-21"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"VimuthM"},"content":"Format: `delete INDEX [MORE_INDICES]`","lastModifiedDate":"2021-09-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"rebeccalaujx"},"content":"* Deletes the resident at the specified `INDEX`.","lastModifiedDate":"2021-09-22"},{"lineNumber":166,"author":{"gitId":"rebeccalaujx"},"content":"* The index refers to the index number shown in the displayed resident list.","lastModifiedDate":"2021-09-22"},{"lineNumber":167,"author":{"gitId":"-"},"content":"* The index **must be a positive integer** 1, 2, 3, â€¦â€‹","lastModifiedDate":"2020-05-23"},{"lineNumber":168,"author":{"gitId":"rebeccalaujx"},"content":"* Able to delete multiple residents at once by inputting multiple indexes, each separated by a space.","lastModifiedDate":"2021-09-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"rebeccalaujx"},"content":"* `view` followed by `delete 1 2 3` deletes the first 3 people in the address book.","lastModifiedDate":"2021-09-23"},{"lineNumber":172,"author":{"gitId":"rebeccalaujx"},"content":"* `search n/Anne` followed by `delete 1` deletes the 1st person named Anne in the results of the `find` command.","lastModifiedDate":"2021-09-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":174,"author":{"gitId":"-"},"content":"### Clearing all entries : `clear`","lastModifiedDate":"2020-05-23"},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"Clears all entries from the address book.","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":178,"author":{"gitId":"-"},"content":"Format: `clear`","lastModifiedDate":"2020-05-23"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":180,"author":{"gitId":"-"},"content":"### Exiting the program : `exit`","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"Exits the program.","lastModifiedDate":"2020-05-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"Format: `exit`","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":186,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":188,"author":{"gitId":"-"},"content":"## Command summary","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"Action | Format, Examples","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"--------|------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"jaredlhf"},"content":"**Add** |  `add n/NAME p/PHONE_NUMBER e/EMAIL r/ROOM v/VACCINATION_STATUS f/FACULTY [c/CCA]â€¦â€‹` \u003cbr\u003e e.g. `add n/John Doe p/98765432 e/johnd@example.com r/A100 v/true f/SoC c/Frisbee`","lastModifiedDate":"2021-09-25"},{"lineNumber":193,"author":{"gitId":"VimuthM"},"content":"**View** | `view [INDEX]` \u003cbr\u003e e.g. `view 30`","lastModifiedDate":"2021-09-22"},{"lineNumber":194,"author":{"gitId":"VimuthM"},"content":"**List** | `list [FLAG] [d/DATE]` \u003cbr\u003e e.g. `list -f 15-8-2021`","lastModifiedDate":"2021-09-25"},{"lineNumber":195,"author":{"gitId":"VimuthM"},"content":"**Search** | `search n/KEYWORD [MORE_KEYWORDS] [FLAG/KEYWORD]...` \u003cbr\u003e e.g. `search n/john alex v/false f/fass` ","lastModifiedDate":"2021-09-25"},{"lineNumber":196,"author":{"gitId":"VimuthM"},"content":"**Edit** | `edit INDEX [MORE_INDICES] [FLAG/UPDATED_PARTICULARS]...`\u003cbr\u003e e.g., `edit 1 2 3 v/true`","lastModifiedDate":"2021-09-25"},{"lineNumber":197,"author":{"gitId":"VimuthM"},"content":"**Delete** | `delete INDEX [MORE_INDICES]` \u003cbr\u003e e.g. `delete 1 2 3`","lastModifiedDate":"2021-09-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":"**Help** | `help`","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"VimuthM"},"content":"**Exit** | `exit`","lastModifiedDate":"2021-09-21"}],"authorContributionMap":{"rebeccalaujx":21,"chongjunwei":11,"gordonlzy":11,"-":115,"VimuthM":33,"jaredlhf":8}},{"path":"docs/team/chongjunwei.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"chongjunwei"},"content":"---","lastModifiedDate":"2021-09-22"},{"lineNumber":2,"author":{"gitId":"chongjunwei"},"content":"layout: page","lastModifiedDate":"2021-09-22"},{"lineNumber":3,"author":{"gitId":"chongjunwei"},"content":"title: Jun Wei\u0027s Project Portfolio Page","lastModifiedDate":"2021-09-22"},{"lineNumber":4,"author":{"gitId":"chongjunwei"},"content":"---","lastModifiedDate":"2021-09-22"},{"lineNumber":5,"author":{"gitId":"chongjunwei"},"content":"## (To be updated)","lastModifiedDate":"2021-09-22"},{"lineNumber":6,"author":{"gitId":"chongjunwei"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":7,"author":{"gitId":"chongjunwei"},"content":"### Project: AddressBook Level 3","lastModifiedDate":"2021-09-22"},{"lineNumber":8,"author":{"gitId":"chongjunwei"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":9,"author":{"gitId":"chongjunwei"},"content":"AddressBook - Level 3 is a desktop address book application used for teaching Software Engineering principles. The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java, and has about 10 kLoC.","lastModifiedDate":"2021-09-22"},{"lineNumber":10,"author":{"gitId":"chongjunwei"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":11,"author":{"gitId":"chongjunwei"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2021-09-22"},{"lineNumber":12,"author":{"gitId":"chongjunwei"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":13,"author":{"gitId":"chongjunwei"},"content":"* **New Feature**: Added the ability to undo/redo previous commands.","lastModifiedDate":"2021-09-22"},{"lineNumber":14,"author":{"gitId":"chongjunwei"},"content":"    * What it does: allows the user to undo all previous commands one at a time. Preceding undo commands can be reversed by using the redo command.","lastModifiedDate":"2021-09-22"},{"lineNumber":15,"author":{"gitId":"chongjunwei"},"content":"    * Justification: This feature improves the product significantly because a user can make mistakes in commands and the app should provide a convenient way to rectify them.","lastModifiedDate":"2021-09-22"},{"lineNumber":16,"author":{"gitId":"chongjunwei"},"content":"    * Highlights: This enhancement affects existing commands and commands to be added in future. It required an in-depth analysis of design alternatives. The implementation too was challenging as it required changes to existing commands.","lastModifiedDate":"2021-09-22"},{"lineNumber":17,"author":{"gitId":"chongjunwei"},"content":"    * Credits: *{mention here if you reused any code/ideas from elsewhere or if a third-party library is heavily used in the feature so that a reader can make a more accurate judgement of how much effort went into the feature}*","lastModifiedDate":"2021-09-22"},{"lineNumber":18,"author":{"gitId":"chongjunwei"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":19,"author":{"gitId":"chongjunwei"},"content":"* **New Feature**: Added a history command that allows the user to navigate to previous commands using up/down keys.","lastModifiedDate":"2021-09-22"},{"lineNumber":20,"author":{"gitId":"chongjunwei"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":21,"author":{"gitId":"chongjunwei"},"content":"* **Code contributed**: [RepoSense link]()","lastModifiedDate":"2021-09-22"},{"lineNumber":22,"author":{"gitId":"chongjunwei"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":23,"author":{"gitId":"chongjunwei"},"content":"* **Project management**:","lastModifiedDate":"2021-09-22"},{"lineNumber":24,"author":{"gitId":"chongjunwei"},"content":"    * Managed releases `v1.3` - `v1.5rc` (3 releases) on GitHub","lastModifiedDate":"2021-09-22"},{"lineNumber":25,"author":{"gitId":"chongjunwei"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":26,"author":{"gitId":"chongjunwei"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2021-09-22"},{"lineNumber":27,"author":{"gitId":"chongjunwei"},"content":"    * Updated the GUI color scheme (Pull requests [\\#33](), [\\#34]())","lastModifiedDate":"2021-09-22"},{"lineNumber":28,"author":{"gitId":"chongjunwei"},"content":"    * Wrote additional tests for existing features to increase coverage from 88% to 92% (Pull requests [\\#36](), [\\#38]())","lastModifiedDate":"2021-09-22"},{"lineNumber":29,"author":{"gitId":"chongjunwei"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":30,"author":{"gitId":"chongjunwei"},"content":"* **Documentation**:","lastModifiedDate":"2021-09-22"},{"lineNumber":31,"author":{"gitId":"chongjunwei"},"content":"    * User Guide:","lastModifiedDate":"2021-09-22"},{"lineNumber":32,"author":{"gitId":"chongjunwei"},"content":"        * Added documentation for the features `delete` and `find` [\\#72]()","lastModifiedDate":"2021-09-22"},{"lineNumber":33,"author":{"gitId":"chongjunwei"},"content":"        * Did cosmetic tweaks to existing documentation of features `clear`, `exit`: [\\#74]()","lastModifiedDate":"2021-09-22"},{"lineNumber":34,"author":{"gitId":"chongjunwei"},"content":"    * Developer Guide:","lastModifiedDate":"2021-09-22"},{"lineNumber":35,"author":{"gitId":"chongjunwei"},"content":"        * Added implementation details of the `delete` feature.","lastModifiedDate":"2021-09-22"},{"lineNumber":36,"author":{"gitId":"chongjunwei"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":37,"author":{"gitId":"chongjunwei"},"content":"* **Community**:","lastModifiedDate":"2021-09-22"},{"lineNumber":38,"author":{"gitId":"chongjunwei"},"content":"    * PRs reviewed (with non-trivial review comments): [\\#12](), [\\#32](), [\\#19](), [\\#42]()","lastModifiedDate":"2021-09-22"},{"lineNumber":39,"author":{"gitId":"chongjunwei"},"content":"    * Contributed to forum discussions (examples: [1](), [2](), [3](), [4]())","lastModifiedDate":"2021-09-22"},{"lineNumber":40,"author":{"gitId":"chongjunwei"},"content":"    * Reported bugs and suggestions for other teams in the class (examples: [1](), [2](), [3]())","lastModifiedDate":"2021-09-22"},{"lineNumber":41,"author":{"gitId":"chongjunwei"},"content":"    * Some parts of the history feature I added was adopted by several other class mates ([1](), [2]())","lastModifiedDate":"2021-09-22"},{"lineNumber":42,"author":{"gitId":"chongjunwei"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":43,"author":{"gitId":"chongjunwei"},"content":"* **Tools**:","lastModifiedDate":"2021-09-22"},{"lineNumber":44,"author":{"gitId":"chongjunwei"},"content":"    * Integrated a third party library (Natty) to the project ([\\#42]())","lastModifiedDate":"2021-09-22"},{"lineNumber":45,"author":{"gitId":"chongjunwei"},"content":"    * Integrated a new Github plugin (CircleCI) to the team repo","lastModifiedDate":"2021-09-22"},{"lineNumber":46,"author":{"gitId":"chongjunwei"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":47,"author":{"gitId":"chongjunwei"},"content":"* _{you can add/remove categories in the list above}_","lastModifiedDate":"2021-09-22"}],"authorContributionMap":{"chongjunwei":47}},{"path":"docs/team/gordonlzy.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"gordonlzy"},"content":"title: Zi Yang\u0027s Project Portfolio Page","lastModifiedDate":"2021-09-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"### Project: AddressBook Level 3","lastModifiedDate":"2021-07-30"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"AddressBook - Level 3 is a desktop address book application used for teaching Software Engineering principles. The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java, and has about 10 kLoC.","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"* **New Feature**: Added the ability to undo/redo previous commands.","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"  * What it does: allows the user to undo all previous commands one at a time. Preceding undo commands can be reversed by using the redo command.","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"  * Justification: This feature improves the product significantly because a user can make mistakes in commands and the app should provide a convenient way to rectify them.","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"  * Highlights: This enhancement affects existing commands and commands to be added in future. It required an in-depth analysis of design alternatives. The implementation too was challenging as it required changes to existing commands.","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"  * Credits: *{mention here if you reused any code/ideas from elsewhere or if a third-party library is heavily used in the feature so that a reader can make a more accurate judgement of how much effort went into the feature}*","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"* **New Feature**: Added a history command that allows the user to navigate to previous commands using up/down keys.","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"* **Code contributed**: [RepoSense link]()","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"* **Project management**:","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"  * Managed releases `v1.3` - `v1.5rc` (3 releases) on GitHub","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"  * Updated the GUI color scheme (Pull requests [\\#33](), [\\#34]())","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"  * Wrote additional tests for existing features to increase coverage from 88% to 92% (Pull requests [\\#36](), [\\#38]())","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"* **Documentation**:","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"  * User Guide:","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    * Added documentation for the features `delete` and `find` [\\#72]()","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    * Did cosmetic tweaks to existing documentation of features `clear`, `exit`: [\\#74]()","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"  * Developer Guide:","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    * Added implementation details of the `delete` feature.","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"* **Community**:","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"  * PRs reviewed (with non-trivial review comments): [\\#12](), [\\#32](), [\\#19](), [\\#42]()","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"  * Contributed to forum discussions (examples: [1](), [2](), [3](), [4]())","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"  * Reported bugs and suggestions for other teams in the class (examples: [1](), [2](), [3]())","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"  * Some parts of the history feature I added was adopted by several other class mates ([1](), [2]())","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"* **Tools**:","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"  * Integrated a third party library (Natty) to the project ([\\#42]())","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"  * Integrated a new Github plugin (CircleCI) to the team repo","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"* _{you can add/remove categories in the list above}_","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"gordonlzy":1,"-":45}},{"path":"docs/team/jaredlhf.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"jaredlhf"},"content":"---","lastModifiedDate":"2021-09-21"},{"lineNumber":2,"author":{"gitId":"jaredlhf"},"content":"layout: page","lastModifiedDate":"2021-09-21"},{"lineNumber":3,"author":{"gitId":"jaredlhf"},"content":"title: Jared\u0027s Project Portfolio Page","lastModifiedDate":"2021-09-21"},{"lineNumber":4,"author":{"gitId":"jaredlhf"},"content":"---","lastModifiedDate":"2021-09-21"},{"lineNumber":5,"author":{"gitId":"jaredlhf"},"content":"## (To be updated)","lastModifiedDate":"2021-09-21"},{"lineNumber":6,"author":{"gitId":"jaredlhf"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":7,"author":{"gitId":"jaredlhf"},"content":"### Project: AddressBook Level 3","lastModifiedDate":"2021-09-21"},{"lineNumber":8,"author":{"gitId":"jaredlhf"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":9,"author":{"gitId":"jaredlhf"},"content":"AddressBook - Level 3 is a desktop address book application used for teaching Software Engineering principles. The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java, and has about 10 kLoC.","lastModifiedDate":"2021-09-21"},{"lineNumber":10,"author":{"gitId":"jaredlhf"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":11,"author":{"gitId":"jaredlhf"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2021-09-21"},{"lineNumber":12,"author":{"gitId":"jaredlhf"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":13,"author":{"gitId":"jaredlhf"},"content":"* **New Feature**: Added the ability to undo/redo previous commands.","lastModifiedDate":"2021-09-21"},{"lineNumber":14,"author":{"gitId":"jaredlhf"},"content":"  * What it does: allows the user to undo all previous commands one at a time. Preceding undo commands can be reversed by using the redo command.","lastModifiedDate":"2021-09-21"},{"lineNumber":15,"author":{"gitId":"jaredlhf"},"content":"  * Justification: This feature improves the product significantly because a user can make mistakes in commands and the app should provide a convenient way to rectify them.","lastModifiedDate":"2021-09-21"},{"lineNumber":16,"author":{"gitId":"jaredlhf"},"content":"  * Highlights: This enhancement affects existing commands and commands to be added in future. It required an in-depth analysis of design alternatives. The implementation too was challenging as it required changes to existing commands.","lastModifiedDate":"2021-09-21"},{"lineNumber":17,"author":{"gitId":"jaredlhf"},"content":"  * Credits: *{mention here if you reused any code/ideas from elsewhere or if a third-party library is heavily used in the feature so that a reader can make a more accurate judgement of how much effort went into the feature}*","lastModifiedDate":"2021-09-21"},{"lineNumber":18,"author":{"gitId":"jaredlhf"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":19,"author":{"gitId":"jaredlhf"},"content":"* **New Feature**: Added a history command that allows the user to navigate to previous commands using up/down keys.","lastModifiedDate":"2021-09-21"},{"lineNumber":20,"author":{"gitId":"jaredlhf"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":21,"author":{"gitId":"jaredlhf"},"content":"* **Code contributed**: [RepoSense link]()","lastModifiedDate":"2021-09-21"},{"lineNumber":22,"author":{"gitId":"jaredlhf"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":23,"author":{"gitId":"jaredlhf"},"content":"* **Project management**:","lastModifiedDate":"2021-09-21"},{"lineNumber":24,"author":{"gitId":"jaredlhf"},"content":"  * Managed releases `v1.3` - `v1.5rc` (3 releases) on GitHub","lastModifiedDate":"2021-09-21"},{"lineNumber":25,"author":{"gitId":"jaredlhf"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":26,"author":{"gitId":"jaredlhf"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2021-09-21"},{"lineNumber":27,"author":{"gitId":"jaredlhf"},"content":"  * Updated the GUI color scheme (Pull requests [\\#33](), [\\#34]())","lastModifiedDate":"2021-09-21"},{"lineNumber":28,"author":{"gitId":"jaredlhf"},"content":"  * Wrote additional tests for existing features to increase coverage from 88% to 92% (Pull requests [\\#36](), [\\#38]())","lastModifiedDate":"2021-09-21"},{"lineNumber":29,"author":{"gitId":"jaredlhf"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":30,"author":{"gitId":"jaredlhf"},"content":"* **Documentation**:","lastModifiedDate":"2021-09-21"},{"lineNumber":31,"author":{"gitId":"jaredlhf"},"content":"  * User Guide:","lastModifiedDate":"2021-09-21"},{"lineNumber":32,"author":{"gitId":"jaredlhf"},"content":"    * Added documentation for the features `delete` and `find` [\\#72]()","lastModifiedDate":"2021-09-21"},{"lineNumber":33,"author":{"gitId":"jaredlhf"},"content":"    * Did cosmetic tweaks to existing documentation of features `clear`, `exit`: [\\#74]()","lastModifiedDate":"2021-09-21"},{"lineNumber":34,"author":{"gitId":"jaredlhf"},"content":"  * Developer Guide:","lastModifiedDate":"2021-09-21"},{"lineNumber":35,"author":{"gitId":"jaredlhf"},"content":"    * Added implementation details of the `delete` feature.","lastModifiedDate":"2021-09-21"},{"lineNumber":36,"author":{"gitId":"jaredlhf"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":37,"author":{"gitId":"jaredlhf"},"content":"* **Community**:","lastModifiedDate":"2021-09-21"},{"lineNumber":38,"author":{"gitId":"jaredlhf"},"content":"  * PRs reviewed (with non-trivial review comments): [\\#12](), [\\#32](), [\\#19](), [\\#42]()","lastModifiedDate":"2021-09-21"},{"lineNumber":39,"author":{"gitId":"jaredlhf"},"content":"  * Contributed to forum discussions (examples: [1](), [2](), [3](), [4]())","lastModifiedDate":"2021-09-21"},{"lineNumber":40,"author":{"gitId":"jaredlhf"},"content":"  * Reported bugs and suggestions for other teams in the class (examples: [1](), [2](), [3]())","lastModifiedDate":"2021-09-21"},{"lineNumber":41,"author":{"gitId":"jaredlhf"},"content":"  * Some parts of the history feature I added was adopted by several other class mates ([1](), [2]())","lastModifiedDate":"2021-09-21"},{"lineNumber":42,"author":{"gitId":"jaredlhf"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":43,"author":{"gitId":"jaredlhf"},"content":"* **Tools**:","lastModifiedDate":"2021-09-21"},{"lineNumber":44,"author":{"gitId":"jaredlhf"},"content":"  * Integrated a third party library (Natty) to the project ([\\#42]())","lastModifiedDate":"2021-09-21"},{"lineNumber":45,"author":{"gitId":"jaredlhf"},"content":"  * Integrated a new Github plugin (CircleCI) to the team repo","lastModifiedDate":"2021-09-21"},{"lineNumber":46,"author":{"gitId":"jaredlhf"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":47,"author":{"gitId":"jaredlhf"},"content":"* _{you can add/remove categories in the list above}_","lastModifiedDate":"2021-09-21"}],"authorContributionMap":{"jaredlhf":47}},{"path":"docs/team/rebeccalaujx.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"gordonlzy"},"content":"---","lastModifiedDate":"2021-09-23"},{"lineNumber":2,"author":{"gitId":"gordonlzy"},"content":"layout: page","lastModifiedDate":"2021-09-23"},{"lineNumber":3,"author":{"gitId":"gordonlzy"},"content":"title: Rebecca\u0027s Project Portfolio Page","lastModifiedDate":"2021-09-23"},{"lineNumber":4,"author":{"gitId":"gordonlzy"},"content":"---","lastModifiedDate":"2021-09-23"},{"lineNumber":5,"author":{"gitId":"gordonlzy"},"content":"## (To be updated)","lastModifiedDate":"2021-09-23"},{"lineNumber":6,"author":{"gitId":"gordonlzy"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":7,"author":{"gitId":"gordonlzy"},"content":"### Project: AddressBook Level 3","lastModifiedDate":"2021-09-23"},{"lineNumber":8,"author":{"gitId":"gordonlzy"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":9,"author":{"gitId":"gordonlzy"},"content":"AddressBook - Level 3 is a desktop address book application used for teaching Software Engineering principles. The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java, and has about 10 kLoC.","lastModifiedDate":"2021-09-23"},{"lineNumber":10,"author":{"gitId":"gordonlzy"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":11,"author":{"gitId":"gordonlzy"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2021-09-23"},{"lineNumber":12,"author":{"gitId":"gordonlzy"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":13,"author":{"gitId":"gordonlzy"},"content":"* **New Feature**: Added the ability to undo/redo previous commands.","lastModifiedDate":"2021-09-23"},{"lineNumber":14,"author":{"gitId":"gordonlzy"},"content":"    * What it does: allows the user to undo all previous commands one at a time. Preceding undo commands can be reversed by using the redo command.","lastModifiedDate":"2021-09-23"},{"lineNumber":15,"author":{"gitId":"gordonlzy"},"content":"    * Justification: This feature improves the product significantly because a user can make mistakes in commands and the app should provide a convenient way to rectify them.","lastModifiedDate":"2021-09-23"},{"lineNumber":16,"author":{"gitId":"gordonlzy"},"content":"    * Highlights: This enhancement affects existing commands and commands to be added in future. It required an in-depth analysis of design alternatives. The implementation too was challenging as it required changes to existing commands.","lastModifiedDate":"2021-09-23"},{"lineNumber":17,"author":{"gitId":"gordonlzy"},"content":"    * Credits: *{mention here if you reused any code/ideas from elsewhere or if a third-party library is heavily used in the feature so that a reader can make a more accurate judgement of how much effort went into the feature}*","lastModifiedDate":"2021-09-23"},{"lineNumber":18,"author":{"gitId":"gordonlzy"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":19,"author":{"gitId":"gordonlzy"},"content":"* **New Feature**: Added a history command that allows the user to navigate to previous commands using up/down keys.","lastModifiedDate":"2021-09-23"},{"lineNumber":20,"author":{"gitId":"gordonlzy"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":21,"author":{"gitId":"gordonlzy"},"content":"* **Code contributed**: [RepoSense link]()","lastModifiedDate":"2021-09-23"},{"lineNumber":22,"author":{"gitId":"gordonlzy"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":23,"author":{"gitId":"gordonlzy"},"content":"* **Project management**:","lastModifiedDate":"2021-09-23"},{"lineNumber":24,"author":{"gitId":"gordonlzy"},"content":"    * Managed releases `v1.3` - `v1.5rc` (3 releases) on GitHub","lastModifiedDate":"2021-09-23"},{"lineNumber":25,"author":{"gitId":"gordonlzy"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":26,"author":{"gitId":"gordonlzy"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2021-09-23"},{"lineNumber":27,"author":{"gitId":"gordonlzy"},"content":"    * Updated the GUI color scheme (Pull requests [\\#33](), [\\#34]())","lastModifiedDate":"2021-09-23"},{"lineNumber":28,"author":{"gitId":"gordonlzy"},"content":"    * Wrote additional tests for existing features to increase coverage from 88% to 92% (Pull requests [\\#36](), [\\#38]())","lastModifiedDate":"2021-09-23"},{"lineNumber":29,"author":{"gitId":"gordonlzy"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":30,"author":{"gitId":"gordonlzy"},"content":"* **Documentation**:","lastModifiedDate":"2021-09-23"},{"lineNumber":31,"author":{"gitId":"gordonlzy"},"content":"    * User Guide:","lastModifiedDate":"2021-09-23"},{"lineNumber":32,"author":{"gitId":"gordonlzy"},"content":"        * Added documentation for the features `delete` and `find` [\\#72]()","lastModifiedDate":"2021-09-23"},{"lineNumber":33,"author":{"gitId":"gordonlzy"},"content":"        * Did cosmetic tweaks to existing documentation of features `clear`, `exit`: [\\#74]()","lastModifiedDate":"2021-09-23"},{"lineNumber":34,"author":{"gitId":"gordonlzy"},"content":"    * Developer Guide:","lastModifiedDate":"2021-09-23"},{"lineNumber":35,"author":{"gitId":"gordonlzy"},"content":"        * Added implementation details of the `delete` feature.","lastModifiedDate":"2021-09-23"},{"lineNumber":36,"author":{"gitId":"gordonlzy"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":37,"author":{"gitId":"gordonlzy"},"content":"* **Community**:","lastModifiedDate":"2021-09-23"},{"lineNumber":38,"author":{"gitId":"gordonlzy"},"content":"    * PRs reviewed (with non-trivial review comments): [\\#12](), [\\#32](), [\\#19](), [\\#42]()","lastModifiedDate":"2021-09-23"},{"lineNumber":39,"author":{"gitId":"gordonlzy"},"content":"    * Contributed to forum discussions (examples: [1](), [2](), [3](), [4]())","lastModifiedDate":"2021-09-23"},{"lineNumber":40,"author":{"gitId":"gordonlzy"},"content":"    * Reported bugs and suggestions for other teams in the class (examples: [1](), [2](), [3]())","lastModifiedDate":"2021-09-23"},{"lineNumber":41,"author":{"gitId":"gordonlzy"},"content":"    * Some parts of the history feature I added was adopted by several other class mates ([1](), [2]())","lastModifiedDate":"2021-09-23"},{"lineNumber":42,"author":{"gitId":"gordonlzy"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":43,"author":{"gitId":"gordonlzy"},"content":"* **Tools**:","lastModifiedDate":"2021-09-23"},{"lineNumber":44,"author":{"gitId":"gordonlzy"},"content":"    * Integrated a third party library (Natty) to the project ([\\#42]())","lastModifiedDate":"2021-09-23"},{"lineNumber":45,"author":{"gitId":"gordonlzy"},"content":"    * Integrated a new Github plugin (CircleCI) to the team repo","lastModifiedDate":"2021-09-23"},{"lineNumber":46,"author":{"gitId":"gordonlzy"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":47,"author":{"gitId":"gordonlzy"},"content":"* _{you can add/remove categories in the list above}_","lastModifiedDate":"2021-09-23"}],"authorContributionMap":{"gordonlzy":47}},{"path":"docs/team/vimuthm.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"VimuthM"},"content":"---","lastModifiedDate":"2021-09-20"},{"lineNumber":2,"author":{"gitId":"VimuthM"},"content":"layout: page","lastModifiedDate":"2021-09-20"},{"lineNumber":3,"author":{"gitId":"VimuthM"},"content":"title: John Doe\u0027s Project Portfolio Page","lastModifiedDate":"2021-09-20"},{"lineNumber":4,"author":{"gitId":"VimuthM"},"content":"---","lastModifiedDate":"2021-09-20"},{"lineNumber":5,"author":{"gitId":"VimuthM"},"content":"## (To be updated)","lastModifiedDate":"2021-09-20"},{"lineNumber":6,"author":{"gitId":"VimuthM"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":7,"author":{"gitId":"VimuthM"},"content":"### Project: AddressBook Level 3","lastModifiedDate":"2021-09-20"},{"lineNumber":8,"author":{"gitId":"VimuthM"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":9,"author":{"gitId":"VimuthM"},"content":"AddressBook - Level 3 is a desktop address book application used for teaching Software Engineering principles. The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java, and has about 10 kLoC.","lastModifiedDate":"2021-09-20"},{"lineNumber":10,"author":{"gitId":"VimuthM"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":11,"author":{"gitId":"VimuthM"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2021-09-20"},{"lineNumber":12,"author":{"gitId":"VimuthM"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":13,"author":{"gitId":"VimuthM"},"content":"* **New Feature**: Added the ability to undo/redo previous commands.","lastModifiedDate":"2021-09-20"},{"lineNumber":14,"author":{"gitId":"VimuthM"},"content":"    * What it does: allows the user to undo all previous commands one at a time. Preceding undo commands can be reversed by using the redo command.","lastModifiedDate":"2021-09-20"},{"lineNumber":15,"author":{"gitId":"VimuthM"},"content":"    * Justification: This feature improves the product significantly because a user can make mistakes in commands and the app should provide a convenient way to rectify them.","lastModifiedDate":"2021-09-20"},{"lineNumber":16,"author":{"gitId":"VimuthM"},"content":"    * Highlights: This enhancement affects existing commands and commands to be added in future. It required an in-depth analysis of design alternatives. The implementation too was challenging as it required changes to existing commands.","lastModifiedDate":"2021-09-20"},{"lineNumber":17,"author":{"gitId":"VimuthM"},"content":"    * Credits: *{mention here if you reused any code/ideas from elsewhere or if a third-party library is heavily used in the feature so that a reader can make a more accurate judgement of how much effort went into the feature}*","lastModifiedDate":"2021-09-20"},{"lineNumber":18,"author":{"gitId":"VimuthM"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":19,"author":{"gitId":"VimuthM"},"content":"* **New Feature**: Added a history command that allows the user to navigate to previous commands using up/down keys.","lastModifiedDate":"2021-09-20"},{"lineNumber":20,"author":{"gitId":"VimuthM"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":21,"author":{"gitId":"VimuthM"},"content":"* **Code contributed**: [RepoSense link]()","lastModifiedDate":"2021-09-20"},{"lineNumber":22,"author":{"gitId":"VimuthM"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":23,"author":{"gitId":"VimuthM"},"content":"* **Project management**:","lastModifiedDate":"2021-09-20"},{"lineNumber":24,"author":{"gitId":"VimuthM"},"content":"    * Managed releases `v1.3` - `v1.5rc` (3 releases) on GitHub","lastModifiedDate":"2021-09-20"},{"lineNumber":25,"author":{"gitId":"VimuthM"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":26,"author":{"gitId":"VimuthM"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2021-09-20"},{"lineNumber":27,"author":{"gitId":"VimuthM"},"content":"    * Updated the GUI color scheme (Pull requests [\\#33](), [\\#34]())","lastModifiedDate":"2021-09-20"},{"lineNumber":28,"author":{"gitId":"VimuthM"},"content":"    * Wrote additional tests for existing features to increase coverage from 88% to 92% (Pull requests [\\#36](), [\\#38]())","lastModifiedDate":"2021-09-20"},{"lineNumber":29,"author":{"gitId":"VimuthM"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":30,"author":{"gitId":"VimuthM"},"content":"* **Documentation**:","lastModifiedDate":"2021-09-20"},{"lineNumber":31,"author":{"gitId":"VimuthM"},"content":"    * User Guide:","lastModifiedDate":"2021-09-20"},{"lineNumber":32,"author":{"gitId":"VimuthM"},"content":"        * Added documentation for the features `delete` and `find` [\\#72]()","lastModifiedDate":"2021-09-20"},{"lineNumber":33,"author":{"gitId":"VimuthM"},"content":"        * Did cosmetic tweaks to existing documentation of features `clear`, `exit`: [\\#74]()","lastModifiedDate":"2021-09-20"},{"lineNumber":34,"author":{"gitId":"VimuthM"},"content":"    * Developer Guide:","lastModifiedDate":"2021-09-20"},{"lineNumber":35,"author":{"gitId":"VimuthM"},"content":"        * Added implementation details of the `delete` feature.","lastModifiedDate":"2021-09-20"},{"lineNumber":36,"author":{"gitId":"VimuthM"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":37,"author":{"gitId":"VimuthM"},"content":"* **Community**:","lastModifiedDate":"2021-09-20"},{"lineNumber":38,"author":{"gitId":"VimuthM"},"content":"    * PRs reviewed (with non-trivial review comments): [\\#12](), [\\#32](), [\\#19](), [\\#42]()","lastModifiedDate":"2021-09-20"},{"lineNumber":39,"author":{"gitId":"VimuthM"},"content":"    * Contributed to forum discussions (examples: [1](), [2](), [3](), [4]())","lastModifiedDate":"2021-09-20"},{"lineNumber":40,"author":{"gitId":"VimuthM"},"content":"    * Reported bugs and suggestions for other teams in the class (examples: [1](), [2](), [3]())","lastModifiedDate":"2021-09-20"},{"lineNumber":41,"author":{"gitId":"VimuthM"},"content":"    * Some parts of the history feature I added was adopted by several other class mates ([1](), [2]())","lastModifiedDate":"2021-09-20"},{"lineNumber":42,"author":{"gitId":"VimuthM"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":43,"author":{"gitId":"VimuthM"},"content":"* **Tools**:","lastModifiedDate":"2021-09-20"},{"lineNumber":44,"author":{"gitId":"VimuthM"},"content":"    * Integrated a third party library (Natty) to the project ([\\#42]())","lastModifiedDate":"2021-09-20"},{"lineNumber":45,"author":{"gitId":"VimuthM"},"content":"    * Integrated a new Github plugin (CircleCI) to the team repo","lastModifiedDate":"2021-09-20"},{"lineNumber":46,"author":{"gitId":"VimuthM"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":47,"author":{"gitId":"VimuthM"},"content":"* _{you can add/remove categories in the list above}_","lastModifiedDate":"2021-09-20"}],"authorContributionMap":{"VimuthM":47}},{"path":"src/main/java/seedu/address/logic/commands/AddCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-05-09"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-05-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-05-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-05-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-01-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * Adds a person to the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"add\";","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds a person to the address book. \"","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            + \"Parameters: \"","lastModifiedDate":"2017-06-06"},{"lineNumber":23,"author":{"gitId":"chongjunwei"},"content":"            + PREFIX_NAME + \"NAM \"","lastModifiedDate":"2021-09-29"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"PHONE \"","lastModifiedDate":"2017-05-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"EMAIL \"","lastModifiedDate":"2017-05-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"            + PREFIX_ADDRESS + \"ADDRESS \"","lastModifiedDate":"2017-05-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2017-05-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2017-06-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            + PREFIX_NAME + \"John Doe \"","lastModifiedDate":"2017-06-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"98765432 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"johnd@example.com \"","lastModifiedDate":"2017-05-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            + PREFIX_ADDRESS + \"311, Clementi Ave 2, #02-25 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            + PREFIX_TAG + \"friends \"","lastModifiedDate":"2017-05-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            + PREFIX_TAG + \"owesMoney\";","lastModifiedDate":"2017-05-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New person added: %1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"This person already exists in the address book\";","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private final Person toAdd;","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Creates an AddCommand to add the specified {@code Person}","lastModifiedDate":"2018-01-10"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public AddCommand(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        toAdd \u003d person;","lastModifiedDate":"2018-01-10"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2017-05-15"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        if (model.hasPerson(toAdd)) {","lastModifiedDate":"2018-08-07"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2018-08-07"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        model.addPerson(toAdd);","lastModifiedDate":"2016-09-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, toAdd));","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-22"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-22"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-22"},{"lineNumber":64,"author":{"gitId":"-"},"content":"                || (other instanceof AddCommand // instanceof handles nulls","lastModifiedDate":"2017-06-22"},{"lineNumber":65,"author":{"gitId":"-"},"content":"                \u0026\u0026 toAdd.equals(((AddCommand) other).toAdd));","lastModifiedDate":"2017-06-22"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":67,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"chongjunwei":1,"-":66}}]
