[{"path":"README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"fullfatwasabi"},"content":"[![Java CI](https://github.com/AY2122S1-CS2103T-W11-2/tp/actions/workflows/gradle.yml/badge.svg)](https://github.com/AY2122S1-CS2103T-W11-2/tp/actions/workflows/gradle.yml)","lastModifiedDate":"2021-10-02"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"![Ui](docs/images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"mweeruien"},"content":"### **Staff\u0027d**","lastModifiedDate":"2021-09-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"mweeruien"},"content":"**Introduction**","lastModifiedDate":"2021-09-27"},{"lineNumber":7,"author":{"gitId":"mweeruien"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":8,"author":{"gitId":"mweeruien"},"content":"This is project by Software Engineering students.","lastModifiedDate":"2021-09-27"},{"lineNumber":9,"author":{"gitId":"mweeruien"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":10,"author":{"gitId":"mweeruien"},"content":"It is targeted towards tech-savvy managers of food chain services who want to manage their staff.","lastModifiedDate":"2021-09-27"},{"lineNumber":11,"author":{"gitId":"mweeruien"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":12,"author":{"gitId":"mweeruien"},"content":"This is because it can be complicated and tedious for managers of such food chain services to manually keep track of their staff information, schedules, working hours, and salaries. Staffâ€™d provides a central management system of staff that allows for easy and intuitive tracking and handling of the aforementioned data.","lastModifiedDate":"2021-09-27"},{"lineNumber":13,"author":{"gitId":"mweeruien"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":14,"author":{"gitId":"mweeruien"},"content":"**Example usages:**","lastModifiedDate":"2021-09-27"},{"lineNumber":15,"author":{"gitId":"mweeruien"},"content":"  * as a manager, you can add, delete, view, and edit staff information (including their schedules!) easily through Command Line Interface (CLI)","lastModifiedDate":"2021-09-27"},{"lineNumber":16,"author":{"gitId":"mweeruien"},"content":"  * view the weekly schedule of a staff, or even view the overall weekly schedule","lastModifiedDate":"2021-09-27"},{"lineNumber":17,"author":{"gitId":"mweeruien"},"content":"  * as a manager, you can automatically calculate their salary and view the salary report","lastModifiedDate":"2021-09-27"},{"lineNumber":18,"author":{"gitId":"mweeruien"},"content":"  * additionally, you can find and view the information of any staff easily by searching up their name, staff ID, or even index in the staff list generated","lastModifiedDate":"2021-09-27"},{"lineNumber":19,"author":{"gitId":"mweeruien"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":20,"author":{"gitId":"mweeruien"},"content":"This project is based on the AddressBook-Level3 project created by the [SE-EDU initiative](https://se-education.org).","lastModifiedDate":"2021-09-27"}],"authorContributionMap":{"fullfatwasabi":1,"-":3,"mweeruien":16}},{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: About Us","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"We are a team based in the [School of Computing, National University of Singapore](http://www.comp.nus.edu.sg).","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"## Project team","lastModifiedDate":"2020-06-07"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"Gabau"},"content":"### Gabriel Au","lastModifiedDate":"2021-09-20"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"Gabau"},"content":"\u003cimg src\u003d\"images/gabau.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2021-09-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"Gabau"},"content":"[[github](http://github.com/Gabau)]","lastModifiedDate":"2021-09-20"},{"lineNumber":15,"author":{"gitId":"Gabau"},"content":"[[portfolio](team/gabau.md)]","lastModifiedDate":"2021-09-20"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"Gabau"},"content":"* Role: Developer","lastModifiedDate":"2021-09-20"},{"lineNumber":18,"author":{"gitId":"Gabau"},"content":"* Responsibilities: UI, Code Quality, Testing and Integration","lastModifiedDate":"2021-09-20"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"fullfatwasabi"},"content":"### Jonathan Tan","lastModifiedDate":"2021-09-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"mweeruien"},"content":"\u003cimg src\u003d\"images/fullfatwasabi.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2021-09-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":24,"author":{"gitId":"Tetrerox"},"content":"[[github](http://github.com/fullfatwasabi)]","lastModifiedDate":"2021-09-27"},{"lineNumber":25,"author":{"gitId":"Tetrerox"},"content":"[[portfolio](team/fullfatwasabi.md)]","lastModifiedDate":"2021-09-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"fullfatwasabi"},"content":"* Responsibilities: Tool, Documentation, Scheduling and tracking","lastModifiedDate":"2021-09-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"Tetrerox"},"content":"### Sreenivasa Kalpana Surya","lastModifiedDate":"2021-09-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"Tetrerox"},"content":"\u003cimg src\u003d\"images/tetrerox.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2021-09-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"Tetrerox"},"content":"[[github](http://github.com/tetrerox)]","lastModifiedDate":"2021-09-25"},{"lineNumber":35,"author":{"gitId":"Tetrerox"},"content":"[[portfolio](team/tetrerox.md)]","lastModifiedDate":"2021-09-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"Tetrerox"},"content":"* Responsibilities: Integration, Code Quality and Documentation","lastModifiedDate":"2021-09-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"IrvingHe000"},"content":"### He Outong","lastModifiedDate":"2021-09-22"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"IrvingHe000"},"content":"\u003cimg src\u003d\"images/irvinghe000.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2021-09-22"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"IrvingHe000"},"content":"[[github](http://github.com/IrvingHe000)]","lastModifiedDate":"2021-09-22"},{"lineNumber":45,"author":{"gitId":"fullfatwasabi"},"content":"[[portfolio](team/irvinghe000.md)]","lastModifiedDate":"2021-10-02"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"IrvingHe000"},"content":"* Responsibilities: Testing, Integration, Tool expert","lastModifiedDate":"2021-09-22"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":50,"author":{"gitId":"mweeruien"},"content":"### Megan Wee Rui En","lastModifiedDate":"2021-09-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":52,"author":{"gitId":"mweeruien"},"content":"\u003cimg src\u003d\"images/mweeruien.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2021-09-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":54,"author":{"gitId":"mweeruien"},"content":"[[github](http://github.com/mweeruien)][[portfolio](team/mweeruien.md)]","lastModifiedDate":"2021-09-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2021-09-27"},{"lineNumber":57,"author":{"gitId":"mweeruien"},"content":"* Responsibilities: Team Lead, Deliverables and deadlines, and Assistant GUI Expert","lastModifiedDate":"2021-09-27"}],"authorContributionMap":{"Tetrerox":7,"Gabau":6,"fullfatwasabi":3,"-":32,"mweeruien":5,"IrvingHe000":4}},{"path":"docs/DeveloperGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: Developer Guide","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":"## **Acknowledgements**","lastModifiedDate":"2021-07-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":12,"author":{"gitId":"fullfatwasabi"},"content":"This project is based on the AddressBook-Level3 project created by the [SE-EDU initiative](https://se-education.org).","lastModifiedDate":"2021-10-01"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":14,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-07-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"## **Setting up, getting started**","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"Refer to the guide [_Setting up and getting started_](SettingUp.md).","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"## **Design**","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":":bulb: **Tip:** The `.puml` files used to create diagrams in this document can be found in the [diagrams](https://github.com/se-edu/addressbook-level3/tree/master/docs/diagrams/) folder. Refer to the [_PlantUML Tutorial_ at se-edu/guides](https://se-education.org/guides/tutorials/plantUml.html) to learn how to create and edit diagrams.","lastModifiedDate":"2021-07-31"},{"lineNumber":27,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"### Architecture","lastModifiedDate":"2021-07-31"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureDiagram.png\" width\u003d\"280\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"The ***Architecture Diagram*** given above explains the high-level design of the App.","lastModifiedDate":"2021-07-31"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"Given below is a quick overview of main components and how they interact with each other.","lastModifiedDate":"2021-07-31"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"**Main components of the architecture**","lastModifiedDate":"2021-07-31"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"**`Main`** has two classes called [`Main`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/Main.java) and [`MainApp`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/MainApp.java). It is responsible for,","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"* At app launch: Initializes the components in the correct sequence, and connects them up with each other.","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"* At shut down: Shuts down the components and invokes cleanup methods where necessary.","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"[**`Commons`**](#common-classes) represents a collection of classes used by multiple other components.","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"The rest of the App consists of four components.","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"* [**`UI`**](#ui-component): The UI of the App.","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"* [**`Logic`**](#logic-component): The command executor.","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"* [**`Model`**](#model-component): Holds the data of the App in memory.","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"* [**`Storage`**](#storage-component): Reads data from, and writes data to, the hard disk.","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"**How the architecture components interact with each other**","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"The *Sequence Diagram* below shows how the components interact with each other for the scenario where the user issues the command `delete 1`.","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureSequenceDiagram.png\" width\u003d\"574\" /\u003e","lastModifiedDate":"2020-06-07"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"Each of the four main components (also shown in the diagram above),","lastModifiedDate":"2021-07-31"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":61,"author":{"gitId":"-"},"content":"* defines its *API* in an `interface` with the same name as the Component.","lastModifiedDate":"2021-07-31"},{"lineNumber":62,"author":{"gitId":"-"},"content":"* implements its functionality using a concrete `{Component Name}Manager` class (which follows the corresponding API `interface` mentioned in the previous point.","lastModifiedDate":"2021-07-31"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":64,"author":{"gitId":"-"},"content":"For example, the `Logic` component defines its API in the `Logic.java` interface and implements its functionality using the `LogicManager.java` class which follows the `Logic` interface. Other components interact with a given component through its interface rather than the concrete class (reason: to prevent outside component\u0027s being coupled to the implementation of a component), as illustrated in the (partial) class diagram below.","lastModifiedDate":"2021-07-31"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":66,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ComponentManagers.png\" width\u003d\"300\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":68,"author":{"gitId":"-"},"content":"The sections below give more details of each component.","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"### UI component","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"The **API** of this component is specified in [`Ui.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/Ui.java)","lastModifiedDate":"2021-07-31"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"![Structure of the UI Component](images/UiClassDiagram.png)","lastModifiedDate":"2021-07-31"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"The UI consists of a `MainWindow` that is made up of parts e.g.`CommandBox`, `ResultDisplay`, `PersonListPanel`, `StatusBarFooter` etc. All these, including the `MainWindow`, inherit from the abstract `UiPart` class which captures the commonalities between classes that represent parts of the visible GUI.","lastModifiedDate":"2021-07-31"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"The `UI` component uses the JavaFx UI framework. The layout of these UI parts are defined in matching `.fxml` files that are in the `src/main/resources/view` folder. For example, the layout of the [`MainWindow`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/MainWindow.java) is specified in [`MainWindow.fxml`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/resources/view/MainWindow.fxml)","lastModifiedDate":"2021-07-31"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"The `UI` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"* executes user commands using the `Logic` component.","lastModifiedDate":"2021-07-31"},{"lineNumber":83,"author":{"gitId":"-"},"content":"* listens for changes to `Model` data so that the UI can be updated with the modified data.","lastModifiedDate":"2021-07-31"},{"lineNumber":84,"author":{"gitId":"-"},"content":"* keeps a reference to the `Logic` component, because the `UI` relies on the `Logic` to execute commands.","lastModifiedDate":"2021-07-31"},{"lineNumber":85,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component, as it displays `Person` object residing in the `Model`.","lastModifiedDate":"2021-07-31"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"### Logic component","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"**API** : [`Logic.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/logic/Logic.java)","lastModifiedDate":"2021-07-31"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"Here\u0027s a (partial) class diagram of the `Logic` component:","lastModifiedDate":"2021-07-31"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/LogicClassDiagram.png\" width\u003d\"550\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"How the `Logic` component works:","lastModifiedDate":"2021-07-31"},{"lineNumber":96,"author":{"gitId":"-"},"content":"1. When `Logic` is called upon to execute a command, it uses the `AddressBookParser` class to parse the user command.","lastModifiedDate":"2021-07-31"},{"lineNumber":97,"author":{"gitId":"-"},"content":"1. This results in a `Command` object (more precisely, an object of one of its subclasses e.g., `AddCommand`) which is executed by the `LogicManager`.","lastModifiedDate":"2021-07-31"},{"lineNumber":98,"author":{"gitId":"-"},"content":"1. The command can communicate with the `Model` when it is executed (e.g. to add a person).","lastModifiedDate":"2021-09-22"},{"lineNumber":99,"author":{"gitId":"-"},"content":"1. The result of the command execution is encapsulated as a `CommandResult` object which is returned back from `Logic`.","lastModifiedDate":"2021-07-31"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":101,"author":{"gitId":"-"},"content":"The Sequence Diagram below illustrates the interactions within the `Logic` component for the `execute(\"delete 1\")` API call.","lastModifiedDate":"2021-07-31"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"![Interactions Inside the Logic Component for the `delete 1` Command](images/DeleteSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `DeleteCommandParser` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"Here are the other classes in `Logic` (omitted from the class diagram above) that are used for parsing a user command:","lastModifiedDate":"2021-07-31"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":110,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ParserClasses.png\" width\u003d\"600\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"How the parsing works:","lastModifiedDate":"2021-07-31"},{"lineNumber":113,"author":{"gitId":"-"},"content":"* When called upon to parse a user command, the `AddressBookParser` class creates an `XYZCommandParser` (`XYZ` is a placeholder for the specific command name e.g., `AddCommandParser`) which uses the other classes shown above to parse the user command and create a `XYZCommand` object (e.g., `AddCommand`) which the `AddressBookParser` returns back as a `Command` object.","lastModifiedDate":"2021-07-31"},{"lineNumber":114,"author":{"gitId":"-"},"content":"* All `XYZCommandParser` classes (e.g., `AddCommandParser`, `DeleteCommandParser`, ...) inherit from the `Parser` interface so that they can be treated similarly where possible e.g, during testing.","lastModifiedDate":"2021-07-31"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"### Model component","lastModifiedDate":"2021-07-31"},{"lineNumber":117,"author":{"gitId":"-"},"content":"**API** : [`Model.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/model/Model.java)","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ModelClassDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"The `Model` component,","lastModifiedDate":"2021-07-31"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"* stores the address book data i.e., all `Person` objects (which are contained in a `UniquePersonList` object).","lastModifiedDate":"2021-07-31"},{"lineNumber":125,"author":{"gitId":"-"},"content":"* stores the currently \u0027selected\u0027 `Person` objects (e.g., results of a search query) as a separate _filtered_ list which is exposed to outsiders as an unmodifiable `ObservableList\u003cPerson\u003e` that can be \u0027observed\u0027 e.g. the UI can be bound to this list so that the UI automatically updates when the data in the list change.","lastModifiedDate":"2021-07-31"},{"lineNumber":126,"author":{"gitId":"-"},"content":"* stores a `UserPref` object that represents the userâ€™s preferences. This is exposed to the outside as a `ReadOnlyUserPref` objects.","lastModifiedDate":"2021-07-31"},{"lineNumber":127,"author":{"gitId":"-"},"content":"* does not depend on any of the other three components (as the `Model` represents data entities of the domain, they should make sense on their own without depending on other components)","lastModifiedDate":"2021-07-31"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":129,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** An alternative (arguably, a more OOP) model is given below. It has a `Tag` list in the `AddressBook`, which `Person` references. This allows `AddressBook` to only require one `Tag` object per unique tag, instead of each `Person` needing their own `Tag` objects.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":131,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/BetterModelClassDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"### Storage component","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":"**API** : [`Storage.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/storage/Storage.java)","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/StorageClassDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":142,"author":{"gitId":"-"},"content":"The `Storage` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"* can save both address book data and user preference data in json format, and read them back into corresponding objects.","lastModifiedDate":"2021-07-31"},{"lineNumber":144,"author":{"gitId":"-"},"content":"* inherits from both `AddressBookStorage` and `UserPrefStorage`, which means it can be treated as either one (if only the functionality of only one is needed).","lastModifiedDate":"2021-07-31"},{"lineNumber":145,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component (because the `Storage` component\u0027s job is to save/retrieve objects that belong to the `Model`)","lastModifiedDate":"2021-07-21"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"### Common classes","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"Classes used by multiple components are in the `seedu.addressbook.commons` package.","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"## **Implementation**","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"This section describes some noteworthy details on how certain features are implemented.","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Undo/redo feature","lastModifiedDate":"2020-06-07"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":"#### Proposed Implementation","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"The proposed undo/redo mechanism is facilitated by `VersionedAddressBook`. It extends `AddressBook` with an undo/redo history, stored internally as an `addressBookStateList` and `currentStatePointer`. Additionally, it implements the following operations:","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#commit()`â€‰â€”â€‰Saves the current address book state in its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#undo()`â€‰â€”â€‰Restores the previous address book state from its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#redo()`â€‰â€”â€‰Restores a previously undone address book state from its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"These operations are exposed in the `Model` interface as `Model#commitAddressBook()`, `Model#undoAddressBook()` and `Model#redoAddressBook()` respectively.","lastModifiedDate":"2020-05-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"Given below is an example usage scenario and how the undo/redo mechanism behaves at each step.","lastModifiedDate":"2020-05-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"Step 1. The user launches the application for the first time. The `VersionedAddressBook` will be initialized with the initial address book state, and the `currentStatePointer` pointing to that single address book state.","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"![UndoRedoState0](images/UndoRedoState0.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":175,"author":{"gitId":"-"},"content":"Step 2. The user executes `delete 5` command to delete the 5th person in the address book. The `delete` command calls `Model#commitAddressBook()`, causing the modified state of the address book after the `delete 5` command executes to be saved in the `addressBookStateList`, and the `currentStatePointer` is shifted to the newly inserted address book state.","lastModifiedDate":"2021-09-22"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"![UndoRedoState1](images/UndoRedoState1.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":179,"author":{"gitId":"-"},"content":"Step 3. The user executes `add n/David â€¦â€‹` to add a new person. The `add` command also calls `Model#commitAddressBook()`, causing another modified address book state to be saved into the `addressBookStateList`.","lastModifiedDate":"2021-09-22"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"![UndoRedoState2](images/UndoRedoState2.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If a command fails its execution, it will not call `Model#commitAddressBook()`, so the address book state will not be saved into the `addressBookStateList`.","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"Step 4. The user now decides that adding the person was a mistake, and decides to undo that action by executing the `undo` command. The `undo` command will call `Model#undoAddressBook()`, which will shift the `currentStatePointer` once to the left, pointing it to the previous address book state, and restores the address book to that state.","lastModifiedDate":"2021-09-22"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"![UndoRedoState3](images/UndoRedoState3.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currentStatePointer` is at index 0, pointing to the initial AddressBook state, then there are no previous AddressBook states to restore. The `undo` command uses `Model#canUndoAddressBook()` to check if this is the case. If so, it will return an error to the user rather","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"than attempting to perform the undo.","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"The following sequence diagram shows how the undo operation works:","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":"![UndoSequenceDiagram](images/UndoSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `UndoCommand` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":204,"author":{"gitId":"-"},"content":"The `redo` command does the oppositeâ€‰â€”â€‰it calls `Model#redoAddressBook()`, which shifts the `currentStatePointer` once to the right, pointing to the previously undone state, and restores the address book to that state.","lastModifiedDate":"2020-05-23"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":206,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currentStatePointer` is at index `addressBookStateList.size() - 1`, pointing to the latest address book state, then there are no undone AddressBook states to restore. The `redo` command uses `Model#canRedoAddressBook()` to check if this is the case. If so, it will return an error to the user rather than attempting to perform the redo.","lastModifiedDate":"2020-05-23"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":208,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":210,"author":{"gitId":"-"},"content":"Step 5. The user then decides to execute the command `list`. Commands that do not modify the address book, such as `list`, will usually not call `Model#commitAddressBook()`, `Model#undoAddressBook()` or `Model#redoAddressBook()`. Thus, the `addressBookStateList` remains unchanged.","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":212,"author":{"gitId":"-"},"content":"![UndoRedoState4](images/UndoRedoState4.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"Step 6. The user executes `clear`, which calls `Model#commitAddressBook()`. Since the `currentStatePointer` is not pointing at the end of the `addressBookStateList`, all address book states after the `currentStatePointer` will be purged. Reason: It no longer makes sense to redo the `add n/David â€¦â€‹` command. This is the behavior that most modern desktop applications follow.","lastModifiedDate":"2020-05-23"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":216,"author":{"gitId":"-"},"content":"![UndoRedoState5](images/UndoRedoState5.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":"The following activity diagram summarizes what happens when a user executes a new command:","lastModifiedDate":"2020-05-23"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":220,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/CommitActivityDiagram.png\" width\u003d\"250\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":221,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":222,"author":{"gitId":"-"},"content":"#### Design considerations:","lastModifiedDate":"2021-07-31"},{"lineNumber":223,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":224,"author":{"gitId":"-"},"content":"**Aspect: How undo \u0026 redo executes:**","lastModifiedDate":"2021-07-31"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":226,"author":{"gitId":"-"},"content":"* **Alternative 1 (current choice):** Saves the entire address book.","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"  * Pros: Easy to implement.","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":"  * Cons: May have performance issues in terms of memory usage.","lastModifiedDate":"2020-05-23"},{"lineNumber":229,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":"* **Alternative 2:** Individual command knows how to undo/redo by","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"  itself.","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":"  * Pros: Will use less memory (e.g. for `delete`, just save the person being deleted).","lastModifiedDate":"2021-09-22"},{"lineNumber":233,"author":{"gitId":"-"},"content":"  * Cons: We must ensure that the implementation of each individual command are correct.","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":235,"author":{"gitId":"-"},"content":"_{more aspects and alternatives to be added}_","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Data archiving","lastModifiedDate":"2020-05-23"},{"lineNumber":238,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"_{Explain here how the data archiving feature will be implemented}_","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":244,"author":{"gitId":"-"},"content":"## **Documentation, logging, testing, configuration, dev-ops**","lastModifiedDate":"2020-06-07"},{"lineNumber":245,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":246,"author":{"gitId":"-"},"content":"* [Documentation guide](Documentation.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":247,"author":{"gitId":"-"},"content":"* [Testing guide](Testing.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":248,"author":{"gitId":"-"},"content":"* [Logging guide](Logging.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":249,"author":{"gitId":"-"},"content":"* [Configuration guide](Configuration.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":250,"author":{"gitId":"-"},"content":"* [DevOps guide](DevOps.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":251,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":252,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":253,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":254,"author":{"gitId":"-"},"content":"## **Appendix: Requirements**","lastModifiedDate":"2020-05-23"},{"lineNumber":255,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":256,"author":{"gitId":"-"},"content":"### Product scope","lastModifiedDate":"2020-05-23"},{"lineNumber":257,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":258,"author":{"gitId":"-"},"content":"**Target user profile**:","lastModifiedDate":"2020-05-23"},{"lineNumber":259,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":260,"author":{"gitId":"-"},"content":"* can type fast","lastModifiedDate":"2021-10-01"},{"lineNumber":261,"author":{"gitId":"Tetrerox"},"content":"* is tech-savvy","lastModifiedDate":"2021-09-25"},{"lineNumber":262,"author":{"gitId":"-"},"content":"* prefers typing to mouse interactions","lastModifiedDate":"2021-10-01"},{"lineNumber":263,"author":{"gitId":"Tetrerox"},"content":"* is a manager of food-chain services","lastModifiedDate":"2021-09-25"},{"lineNumber":264,"author":{"gitId":"-"},"content":"* prefer desktop apps over other types","lastModifiedDate":"2020-05-23"},{"lineNumber":265,"author":{"gitId":"fullfatwasabi"},"content":"* has a need to manage staff schedules","lastModifiedDate":"2021-10-01"},{"lineNumber":266,"author":{"gitId":"-"},"content":"* is reasonably comfortable using CLI apps","lastModifiedDate":"2020-05-23"},{"lineNumber":267,"author":{"gitId":"fullfatwasabi"},"content":"* has a need to manage a significant number of staff","lastModifiedDate":"2021-10-01"},{"lineNumber":268,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":269,"author":{"gitId":"Tetrerox"},"content":"**Value proposition**: It can be complicated and tedious for managers of such food chain services to manually keep track of their staff information, schedules, working hours, and salaries. Staffâ€™d provides a central management system of staff that allows for easy and intuitive tracking and handling of the aforementioned data.","lastModifiedDate":"2021-09-25"},{"lineNumber":270,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":271,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":272,"author":{"gitId":"-"},"content":"### User stories","lastModifiedDate":"2020-06-07"},{"lineNumber":273,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":274,"author":{"gitId":"-"},"content":"Priorities: High (must have) - `* * *`, Medium (nice to have) - `* *`, Low (unlikely to have) - `*`","lastModifiedDate":"2020-05-23"},{"lineNumber":275,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":276,"author":{"gitId":"-"},"content":"| Priority | As a â€¦â€‹                                    | I want to â€¦â€‹                     | So that I canâ€¦â€‹                                             |","lastModifiedDate":"2020-05-23"},{"lineNumber":277,"author":{"gitId":"-"},"content":"| -------- | ------------------------------------------ | ------------------------------ | ---------------------------------------------------------------------- |","lastModifiedDate":"2020-05-23"},{"lineNumber":278,"author":{"gitId":"mweeruien"},"content":"| `* * *`  | user                                       | add a new staff                |                                                                        |","lastModifiedDate":"2021-09-27"},{"lineNumber":279,"author":{"gitId":"mweeruien"},"content":"| `* * *`  | user                                       | delete a staff                 | remove entries that I no longer need                                   |","lastModifiedDate":"2021-09-27"},{"lineNumber":280,"author":{"gitId":"mweeruien"},"content":"| `* * *`  | user                                       | edit a staff\u0027s details         | update relevant information where necessary                            |","lastModifiedDate":"2021-09-27"},{"lineNumber":281,"author":{"gitId":"mweeruien"},"content":"| `* * *`  | user                                       | add a staff\u0027s schedule         | keep track of their schedule and update the overall work schedule      |","lastModifiedDate":"2021-09-27"},{"lineNumber":282,"author":{"gitId":"mweeruien"},"content":"| `* * *`  | user                                       | delete a staff\u0027s schedule      | remove schedule and update the overall work schedule                   |","lastModifiedDate":"2021-09-27"},{"lineNumber":283,"author":{"gitId":"mweeruien"},"content":"| `* * *`  | user                                       | edit a staff\u0027s schedule        | make changes to their schedule and update the overall work schedule    |","lastModifiedDate":"2021-09-27"},{"lineNumber":284,"author":{"gitId":"fullfatwasabi"},"content":"| `* * *`  | user                                       | view a staff\u0027s schedule        | view an individual staff\u0027s schedule and the overall work schedule      |","lastModifiedDate":"2021-10-01"},{"lineNumber":285,"author":{"gitId":"-"},"content":"| `* * *`  | user                                       | find a person by name          | locate details of persons without having to go through the entire list |","lastModifiedDate":"2021-10-01"},{"lineNumber":286,"author":{"gitId":"fullfatwasabi"},"content":"| `* * *`  | new user                                   | see usage instructions         | refer to instructions when I forget how to use the App                 |","lastModifiedDate":"2021-10-01"},{"lineNumber":287,"author":{"gitId":"fullfatwasabi"},"content":"| `* * *`  | new user                                   | understand why my command fails| be guided towards using the App correctly                              |","lastModifiedDate":"2021-10-01"},{"lineNumber":288,"author":{"gitId":"fullfatwasabi"},"content":"| `* * *`  | user with many new staff                   | add multiple staff             | add several new staff quickly                                          |","lastModifiedDate":"2021-10-01"},{"lineNumber":289,"author":{"gitId":"fullfatwasabi"},"content":"| `* * *`  | user with many retiring staff              | delete multiple staff          | remove multiple entries that I no longer need                          |","lastModifiedDate":"2021-10-01"},{"lineNumber":290,"author":{"gitId":"-"},"content":"| `* *`    | user                                       | hide private contact details   | minimize chance of someone else seeing them by accident                |","lastModifiedDate":"2021-10-01"},{"lineNumber":291,"author":{"gitId":"fullfatwasabi"},"content":"| `* *`    | user in charge of salary calculation       | use Staff\u0027d to calculate the salaries  | Manage salary payments accurately and quickly                  |","lastModifiedDate":"2021-10-01"},{"lineNumber":292,"author":{"gitId":"-"},"content":"| `*`      | user with many persons in the address book | sort persons by name           | locate a person easily                                                 |","lastModifiedDate":"2021-10-01"},{"lineNumber":293,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":294,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":295,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":296,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":297,"author":{"gitId":"-"},"content":"### Use cases","lastModifiedDate":"2020-06-07"},{"lineNumber":298,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":299,"author":{"gitId":"fullfatwasabi"},"content":"(For all use cases below, the **System** is the `Staff\u0027d` and the **Actor** is the `user`, unless specified otherwise)","lastModifiedDate":"2021-09-23"},{"lineNumber":300,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":301,"author":{"gitId":"fullfatwasabi"},"content":"**Use case: UC01 - Edit staff details**","lastModifiedDate":"2021-09-23"},{"lineNumber":302,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":303,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2020-05-23"},{"lineNumber":304,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":305,"author":{"gitId":"fullfatwasabi"},"content":"1.  User chooses to edit the staff details.","lastModifiedDate":"2021-09-23"},{"lineNumber":306,"author":{"gitId":"fullfatwasabi"},"content":"1.  User inputs relevant details.","lastModifiedDate":"2021-09-27"},{"lineNumber":307,"author":{"gitId":"fullfatwasabi"},"content":"1.  Staffâ€™d requests for confirmation.","lastModifiedDate":"2021-09-27"},{"lineNumber":308,"author":{"gitId":"fullfatwasabi"},"content":"1.  User confirms.","lastModifiedDate":"2021-09-27"},{"lineNumber":309,"author":{"gitId":"fullfatwasabi"},"content":"1.  Staffâ€™d updates the new staff details.","lastModifiedDate":"2021-09-27"},{"lineNumber":310,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":311,"author":{"gitId":"-"},"content":"    Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":312,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":313,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2020-05-23"},{"lineNumber":314,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":315,"author":{"gitId":"fullfatwasabi"},"content":"* 3a. Staff\u0027d detects an error in the entered data.","lastModifiedDate":"2021-09-23"},{"lineNumber":316,"author":{"gitId":"fullfatwasabi"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":317,"author":{"gitId":"fullfatwasabi"},"content":"    * 3a1. Staff\u0027d displays an error message.","lastModifiedDate":"2021-09-23"},{"lineNumber":318,"author":{"gitId":"fullfatwasabi"},"content":"    * 3a2. User enters new data.","lastModifiedDate":"2021-09-23"},{"lineNumber":319,"author":{"gitId":"fullfatwasabi"},"content":"    * 3a2. Steps 3a1-3a2 are repeated until the data entered are correct.","lastModifiedDate":"2021-09-23"},{"lineNumber":320,"author":{"gitId":"fullfatwasabi"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":321,"author":{"gitId":"fullfatwasabi"},"content":"      Use case resumes at step 4.","lastModifiedDate":"2021-09-23"},{"lineNumber":322,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":323,"author":{"gitId":"fullfatwasabi"},"content":"**Use case: UC02 - Edit staff schedule**","lastModifiedDate":"2021-09-23"},{"lineNumber":324,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":325,"author":{"gitId":"fullfatwasabi"},"content":"**MSS**","lastModifiedDate":"2021-09-23"},{"lineNumber":326,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":327,"author":{"gitId":"fullfatwasabi"},"content":"1.  User chooses to edit a staff\u0027s schedule.","lastModifiedDate":"2021-09-23"},{"lineNumber":328,"author":{"gitId":"fullfatwasabi"},"content":"1.  User inputs relevant details.","lastModifiedDate":"2021-09-27"},{"lineNumber":329,"author":{"gitId":"fullfatwasabi"},"content":"1.  Staffâ€™d requests for confirmation.","lastModifiedDate":"2021-09-27"},{"lineNumber":330,"author":{"gitId":"fullfatwasabi"},"content":"1.  User confirms.","lastModifiedDate":"2021-09-27"},{"lineNumber":331,"author":{"gitId":"fullfatwasabi"},"content":"1.  Staffâ€™d updates the new staff schedule.","lastModifiedDate":"2021-09-27"},{"lineNumber":332,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":333,"author":{"gitId":"-"},"content":"    Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":334,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":335,"author":{"gitId":"fullfatwasabi"},"content":"**Extensions**","lastModifiedDate":"2021-09-23"},{"lineNumber":336,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":337,"author":{"gitId":"fullfatwasabi"},"content":"* 3a. Staff\u0027d detects an error in the entered data.","lastModifiedDate":"2021-09-23"},{"lineNumber":338,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":339,"author":{"gitId":"fullfatwasabi"},"content":"    * 3a1. Staff\u0027d displays an error message.","lastModifiedDate":"2021-09-23"},{"lineNumber":340,"author":{"gitId":"fullfatwasabi"},"content":"    * 3a2. User enters new data.","lastModifiedDate":"2021-09-23"},{"lineNumber":341,"author":{"gitId":"fullfatwasabi"},"content":"    * 3a2. Steps 3a1-3a2 are repeated until the data entered are correct.","lastModifiedDate":"2021-09-23"},{"lineNumber":342,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":343,"author":{"gitId":"fullfatwasabi"},"content":"      Use case resumes at step 4.","lastModifiedDate":"2021-09-23"},{"lineNumber":344,"author":{"gitId":"-"},"content":"      ","lastModifiedDate":"2020-05-23"},{"lineNumber":345,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":346,"author":{"gitId":"-"},"content":"      ","lastModifiedDate":"2020-05-23"},{"lineNumber":347,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":348,"author":{"gitId":"-"},"content":"### Non-Functional Requirements","lastModifiedDate":"2020-05-23"},{"lineNumber":349,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":350,"author":{"gitId":"Gabau"},"content":"Performance requirements:","lastModifiedDate":"2021-09-20"},{"lineNumber":351,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":352,"author":{"gitId":"fullfatwasabi"},"content":" 1. Should be able to hold up to 1000 persons without a noticeable sluggishness in performance for typical usage.","lastModifiedDate":"2021-09-22"},{"lineNumber":353,"author":{"gitId":"fullfatwasabi"},"content":" 1. The number of time periods for each person can go up to 50 without a noticeable sluggishness in performance.","lastModifiedDate":"2021-09-22"},{"lineNumber":354,"author":{"gitId":"Gabau"},"content":" 1. The project should respond within 2 seconds.","lastModifiedDate":"2021-09-20"},{"lineNumber":355,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":356,"author":{"gitId":"Gabau"},"content":"Technical requirements:","lastModifiedDate":"2021-09-20"},{"lineNumber":357,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":358,"author":{"gitId":"-"},"content":" 1. Should work on any _mainstream OS_ as long as it has Java `11` or above installed.","lastModifiedDate":"2020-05-23"},{"lineNumber":359,"author":{"gitId":"Gabau"},"content":" 1. The system should work on both 32-bit and 64-bit environments.","lastModifiedDate":"2021-09-20"},{"lineNumber":360,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":361,"author":{"gitId":"Gabau"},"content":"Constraints:","lastModifiedDate":"2021-09-20"},{"lineNumber":362,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":363,"author":{"gitId":"Gabau"},"content":" 1. System should be compatible with the saved data from previous versions.","lastModifiedDate":"2021-09-20"},{"lineNumber":364,"author":{"gitId":"Gabau"},"content":" 1. The size of the release binary should not exceed 100mb.","lastModifiedDate":"2021-09-20"},{"lineNumber":365,"author":{"gitId":"Gabau"},"content":" 1. The system does not require the internet to use.","lastModifiedDate":"2021-09-20"},{"lineNumber":366,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":367,"author":{"gitId":"Gabau"},"content":"Business rules:","lastModifiedDate":"2021-09-20"},{"lineNumber":368,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":369,"author":{"gitId":"Gabau"},"content":" 1. The status of an employee only has two.","lastModifiedDate":"2021-09-20"},{"lineNumber":370,"author":{"gitId":"Gabau"},"content":" 1. The role of an employee is only active during the scheduled time period.","lastModifiedDate":"2021-09-20"},{"lineNumber":371,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":372,"author":{"gitId":"Gabau"},"content":"Quality requirements:","lastModifiedDate":"2021-09-20"},{"lineNumber":373,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":374,"author":{"gitId":"Gabau"},"content":" 1. A user with above average typing speed for regular English text (i.e. not code, not system admin commands) should be able to accomplish most of the tasks faster using commands than using the mouse.","lastModifiedDate":"2021-09-20"},{"lineNumber":375,"author":{"gitId":"fullfatwasabi"},"content":" 1. The system can be used for basic function without reading the user guide.","lastModifiedDate":"2021-10-01"},{"lineNumber":376,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":377,"author":{"gitId":"Gabau"},"content":"Project scope:","lastModifiedDate":"2021-09-20"},{"lineNumber":378,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":379,"author":{"gitId":"Gabau"},"content":" 1. Does not handle printing of output to paper.","lastModifiedDate":"2021-09-20"},{"lineNumber":380,"author":{"gitId":"Gabau"},"content":" 1. Does not send out emails.","lastModifiedDate":"2021-09-20"},{"lineNumber":381,"author":{"gitId":"Gabau"},"content":" 1. Does not provide graphical representation of statistics.","lastModifiedDate":"2021-09-20"},{"lineNumber":382,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":383,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":384,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":385,"author":{"gitId":"-"},"content":"### Glossary","lastModifiedDate":"2020-05-23"},{"lineNumber":386,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":387,"author":{"gitId":"Gabau"},"content":"[uml-user-guide]: ## \"The Unified Modeling Language User Guide, 2e, G Booch, J Rumbaugh, and I Jacobson\"","lastModifiedDate":"2021-09-20"},{"lineNumber":388,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":389,"author":{"gitId":"-"},"content":"* **Mainstream OS**: Windows, Linux, Unix, OS-X","lastModifiedDate":"2020-05-23"},{"lineNumber":390,"author":{"gitId":"-"},"content":"* **Private contact detail**: A contact detail that is not meant to be shared with others","lastModifiedDate":"2020-05-23"},{"lineNumber":391,"author":{"gitId":"Gabau"},"content":"* **Java**: A high level, classed based, object-oriented programming language.","lastModifiedDate":"2021-09-20"},{"lineNumber":392,"author":{"gitId":"Gabau"},"content":"  Java `11` can be downloaded [here](https://www.oracle.com/java/technologies/downloads/#java11).","lastModifiedDate":"2021-09-20"},{"lineNumber":393,"author":{"gitId":"Gabau"},"content":"* **Gradle**: Gradle is a build automation tool for multi-language software development. Installation [here](https://gradle.org/install/).","lastModifiedDate":"2021-09-20"},{"lineNumber":394,"author":{"gitId":"Gabau"},"content":"* **Time Period**: A time period in the staff\u0027s schedule.","lastModifiedDate":"2021-09-20"},{"lineNumber":395,"author":{"gitId":"Gabau"},"content":"* **Status**: The working status of the staff. i.e. A part-timer or a full-timer.","lastModifiedDate":"2021-09-20"},{"lineNumber":396,"author":{"gitId":"Gabau"},"content":"* **Schedule**: The staffs work schedule with a description of the work carried out.","lastModifiedDate":"2021-09-20"},{"lineNumber":397,"author":{"gitId":"Gabau"},"content":"* **id**: The identification number assigned to the staff by the management.","lastModifiedDate":"2021-09-20"},{"lineNumber":398,"author":{"gitId":"Gabau"},"content":"* **Role**: The role of the staff. i.e. Cook, Staff management","lastModifiedDate":"2021-09-20"},{"lineNumber":399,"author":{"gitId":"Gabau"},"content":"* **Address**: The address of the staff.","lastModifiedDate":"2021-09-20"},{"lineNumber":400,"author":{"gitId":"Gabau"},"content":"* **Constraints**: The constraints the project is working with.","lastModifiedDate":"2021-09-20"},{"lineNumber":401,"author":{"gitId":"Gabau"},"content":"* **MSS**: Main success scenario","lastModifiedDate":"2021-09-20"},{"lineNumber":402,"author":{"gitId":"Gabau"},"content":"* **Non-Functional Requirements**: Requirements specifying the constraints under which","lastModifiedDate":"2021-09-20"},{"lineNumber":403,"author":{"gitId":"Gabau"},"content":"  the system is developed and operated.","lastModifiedDate":"2021-09-20"},{"lineNumber":404,"author":{"gitId":"Gabau"},"content":"* **User**: For the project purposes, the user is specified to be a manager at a F\u0026B outlet.","lastModifiedDate":"2021-09-20"},{"lineNumber":405,"author":{"gitId":"Gabau"},"content":"* **UI**: The user interface of the application.","lastModifiedDate":"2021-09-20"},{"lineNumber":406,"author":{"gitId":"Gabau"},"content":"* **Model**: The model that is used by the programme to represent the data.","lastModifiedDate":"2021-09-20"},{"lineNumber":407,"author":{"gitId":"Gabau"},"content":"* **logic**: The logic used to dictate the behavior of the model.","lastModifiedDate":"2021-09-20"},{"lineNumber":408,"author":{"gitId":"Gabau"},"content":"* **parser**: The interpreter of the user input.","lastModifiedDate":"2021-09-20"},{"lineNumber":409,"author":{"gitId":"Gabau"},"content":"* **commons**: Commonly used data structures.","lastModifiedDate":"2021-09-20"},{"lineNumber":410,"author":{"gitId":"Gabau"},"content":"* **storage**: The part of the programme which handles the writing to disk of the data in the programme.","lastModifiedDate":"2021-09-20"},{"lineNumber":411,"author":{"gitId":"fullfatwasabi"},"content":"* **index**: The current person on the list of staff that can be viewed.","lastModifiedDate":"2021-09-22"},{"lineNumber":412,"author":{"gitId":"Gabau"},"content":"* **Use cases**: A use case describes an interaction between the user and the system for a specific functionality of the system. [uml-user-guide][uml-user-guide]","lastModifiedDate":"2021-09-20"},{"lineNumber":413,"author":{"gitId":"fullfatwasabi"},"content":"* **User stories**: User story: User stories are short, simple descriptions of a feature told from the perspective of the person who desires the new capability, usually a user or customer of the system. [Mike Cohn](https://www.mountaingoatsoftware.com/agile/user-stories)","lastModifiedDate":"2021-09-22"},{"lineNumber":414,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":415,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":416,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":417,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":418,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":419,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":420,"author":{"gitId":"-"},"content":"## **Appendix: Instructions for manual testing**","lastModifiedDate":"2020-05-23"},{"lineNumber":421,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":422,"author":{"gitId":"-"},"content":"Given below are instructions to test the app manually.","lastModifiedDate":"2020-05-23"},{"lineNumber":423,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":424,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** These instructions only provide a starting point for testers to work on;","lastModifiedDate":"2020-05-23"},{"lineNumber":425,"author":{"gitId":"-"},"content":"testers are expected to do more *exploratory* testing.","lastModifiedDate":"2020-05-23"},{"lineNumber":426,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":427,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":428,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":429,"author":{"gitId":"-"},"content":"### Launch and shutdown","lastModifiedDate":"2020-05-23"},{"lineNumber":430,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":431,"author":{"gitId":"-"},"content":"1. Initial launch","lastModifiedDate":"2020-05-23"},{"lineNumber":432,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":433,"author":{"gitId":"-"},"content":"   1. Download the jar file and copy into an empty folder","lastModifiedDate":"2020-05-23"},{"lineNumber":434,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":435,"author":{"gitId":"-"},"content":"   1. Double-click the jar file Expected: Shows the GUI with a set of sample contacts. The window size may not be optimum.","lastModifiedDate":"2020-05-23"},{"lineNumber":436,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":437,"author":{"gitId":"-"},"content":"1. Saving window preferences","lastModifiedDate":"2020-05-23"},{"lineNumber":438,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":439,"author":{"gitId":"-"},"content":"   1. Resize the window to an optimum size. Move the window to a different location. Close the window.","lastModifiedDate":"2020-05-23"},{"lineNumber":440,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":441,"author":{"gitId":"-"},"content":"   1. Re-launch the app by double-clicking the jar file.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":442,"author":{"gitId":"-"},"content":"       Expected: The most recent window size and location is retained.","lastModifiedDate":"2020-05-23"},{"lineNumber":443,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":444,"author":{"gitId":"-"},"content":"1. _{ more test cases â€¦â€‹ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":445,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":446,"author":{"gitId":"-"},"content":"### Deleting a person","lastModifiedDate":"2021-09-22"},{"lineNumber":447,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":448,"author":{"gitId":"-"},"content":"1. Deleting a person while all persons are being shown","lastModifiedDate":"2021-09-22"},{"lineNumber":449,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":450,"author":{"gitId":"-"},"content":"   1. Prerequisites: List all persons using the `list` command. Multiple persons in the list.","lastModifiedDate":"2021-09-22"},{"lineNumber":451,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":452,"author":{"gitId":"-"},"content":"   1. Test case: `delete 1`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":453,"author":{"gitId":"-"},"content":"      Expected: First contact is deleted from the list. Details of the deleted contact shown in the status message. Timestamp in the status bar is updated.","lastModifiedDate":"2020-05-23"},{"lineNumber":454,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":455,"author":{"gitId":"-"},"content":"   1. Test case: `delete 0`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":456,"author":{"gitId":"-"},"content":"      Expected: No person is deleted. Error details shown in the status message. Status bar remains the same.","lastModifiedDate":"2021-09-22"},{"lineNumber":457,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":458,"author":{"gitId":"-"},"content":"   1. Other incorrect delete commands to try: `delete`, `delete x`, `...` (where x is larger than the list size)\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":459,"author":{"gitId":"-"},"content":"      Expected: Similar to previous.","lastModifiedDate":"2020-05-23"},{"lineNumber":460,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":461,"author":{"gitId":"-"},"content":"1. _{ more test cases â€¦â€‹ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":462,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":463,"author":{"gitId":"-"},"content":"### Saving data","lastModifiedDate":"2020-05-23"},{"lineNumber":464,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":465,"author":{"gitId":"-"},"content":"1. Dealing with missing/corrupted data files","lastModifiedDate":"2020-05-23"},{"lineNumber":466,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":467,"author":{"gitId":"-"},"content":"   1. _{explain how to simulate a missing/corrupted file, and the expected behavior}_","lastModifiedDate":"2020-05-23"},{"lineNumber":468,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":469,"author":{"gitId":"-"},"content":"1. _{ more test cases â€¦â€‹ }_","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"Tetrerox":3,"Gabau":54,"fullfatwasabi":41,"-":365,"mweeruien":6}},{"path":"docs/UserGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: User Guide","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"Gabau"},"content":"Staffâ€™d helps F\u0026B managers manage details and schedules of their staff. It is optimized for CLI users so that frequent tasks can be done faster by typing in commands.","lastModifiedDate":"2021-09-20"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"## Quick start","lastModifiedDate":"2021-10-01"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"1. Ensure you have Java `11` or above installed in your Computer.","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"Tetrerox"},"content":"1. Copy the file to the folder you want to use as the _home folder_ for your Staffâ€™d.","lastModifiedDate":"2021-10-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"1. Double-click the file to start the app. The GUI similar to the below should appear in a few seconds. Note how the app contains some sample data.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   ![Ui](images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"1. Type the command in the command box and press Enter to execute it. e.g. typing **`help`** and pressing Enter will open the help window.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"1. Refer to the [Features](#features) below for details of each command.","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"## Features","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"**:information_source: Notes about the command format:**\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"* Words in `UPPER_CASE` are the parameters to be supplied by the user.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"  e.g. in `add n/NAME`, `NAME` is a parameter which can be used as `add n/John Doe`.","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"* Items in square brackets are optional.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"  e.g `n/NAME [t/TAG]` can be used as `n/John Doe t/friend` or as `n/John Doe`.","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"mweeruien"},"content":"* Items with `â€¦` after them can be used multiple times including zero times.\u003cbr\u003e","lastModifiedDate":"2021-09-27"},{"lineNumber":42,"author":{"gitId":"fullfatwasabi"},"content":"  e.g. `[t/TAG]â€¦` can be used as ` ` (i.e. 0 times), `t/friend`, `t/friend t/family` etc.","lastModifiedDate":"2021-10-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"  ","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"* Parameters can be in any order.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"  e.g. if the command specifies `n/NAME p/PHONE_NUMBER`, `p/PHONE_NUMBER n/NAME` is also acceptable.","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"* If a parameter is expected only once in the command but you specified it multiple times, only the last occurrence of the parameter will be taken.\u003cbr\u003e","lastModifiedDate":"2021-02-04"},{"lineNumber":48,"author":{"gitId":"-"},"content":"  e.g. if you specify `p/12341234 p/56785678`, only `p/56785678` will be taken.","lastModifiedDate":"2021-02-04"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":50,"author":{"gitId":"-"},"content":"* Extraneous parameters for commands that do not take in parameters (such as `help`, `list`, `exit` and `clear`) will be ignored.\u003cbr\u003e","lastModifiedDate":"2021-02-03"},{"lineNumber":51,"author":{"gitId":"-"},"content":"  e.g. if the command specifies `help 123`, it will be interpreted as `help`.","lastModifiedDate":"2021-02-03"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-03"},{"lineNumber":53,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"### Viewing help : `help`","lastModifiedDate":"2021-10-07"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":57,"author":{"gitId":"-"},"content":"Shows a message explaning how to access the help page.","lastModifiedDate":"2021-10-07"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":59,"author":{"gitId":"-"},"content":"![help message](images/helpMessage.png)","lastModifiedDate":"2021-10-07"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":61,"author":{"gitId":"-"},"content":"Format: `help`","lastModifiedDate":"2021-10-07"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":63,"author":{"gitId":"Gabau"},"content":"## Basic management of Staff Details","lastModifiedDate":"2021-09-20"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":66,"author":{"gitId":"Tetrerox"},"content":"### Tag legend - `todo: standardize tags for all commands`","lastModifiedDate":"2021-10-01"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":68,"author":{"gitId":"Tetrerox"},"content":"|Tag|Description|","lastModifiedDate":"2021-10-01"},{"lineNumber":69,"author":{"gitId":"Tetrerox"},"content":"|---|-----------|","lastModifiedDate":"2021-10-01"},{"lineNumber":70,"author":{"gitId":"fullfatwasabi"},"content":"|n/|Name|","lastModifiedDate":"2021-10-09"},{"lineNumber":71,"author":{"gitId":"Tetrerox"},"content":"|s/|Status (as a full-time/part-time worker)|","lastModifiedDate":"2021-10-01"},{"lineNumber":72,"author":{"gitId":"Tetrerox"},"content":"|r/|Role (e.g. Cook, Staff Management)|","lastModifiedDate":"2021-10-01"},{"lineNumber":73,"author":{"gitId":"fullfatwasabi"},"content":"|a/|Address|","lastModifiedDate":"2021-10-09"},{"lineNumber":74,"author":{"gitId":"fullfatwasabi"},"content":"|$/|Salary|","lastModifiedDate":"2021-10-09"},{"lineNumber":75,"author":{"gitId":"fullfatwasabi"},"content":"|i/|Index|","lastModifiedDate":"2021-10-09"},{"lineNumber":76,"author":{"gitId":"Tetrerox"},"content":"|e/|Email|","lastModifiedDate":"2021-10-01"},{"lineNumber":77,"author":{"gitId":"fullfatwasabi"},"content":"|t/|Extra tags|","lastModifiedDate":"2021-10-09"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":79,"author":{"gitId":"fullfatwasabi"},"content":"### View a staff - `view`","lastModifiedDate":"2021-10-01"},{"lineNumber":80,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":81,"author":{"gitId":"Gabau"},"content":"View the staff details of a single staff.","lastModifiedDate":"2021-09-20"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":83,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2021-10-01"},{"lineNumber":84,"author":{"gitId":"fullfatwasabi"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":85,"author":{"gitId":"mweeruien"},"content":"`view n/Candice`\\","lastModifiedDate":"2021-09-27"},{"lineNumber":86,"author":{"gitId":"fullfatwasabi"},"content":"`view i/123`","lastModifiedDate":"2021-10-07"},{"lineNumber":87,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":88,"author":{"gitId":"Gabau"},"content":"### Adding a staff - `add`","lastModifiedDate":"2021-09-20"},{"lineNumber":89,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":90,"author":{"gitId":"fullfatwasabi"},"content":"* Adds a staff to the system. The tags and information are optional and can be presented in any order.","lastModifiedDate":"2021-10-09"},{"lineNumber":91,"author":{"gitId":"fullfatwasabi"},"content":"* Upon creation of a staff, the system creates an index for them which can be used to refer to them and access the system.","lastModifiedDate":"2021-10-09"},{"lineNumber":92,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":93,"author":{"gitId":"fullfatwasabi"},"content":"Format:","lastModifiedDate":"2021-10-01"},{"lineNumber":94,"author":{"gitId":"fullfatwasabi"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":95,"author":{"gitId":"fullfatwasabi"},"content":"`add n/NAME p/PHONE_NUMBER e/EMAIL a/ADDRESS $/SALARY [s/STATUS] [r/ROLE]... [t/TAG]...`","lastModifiedDate":"2021-10-13"},{"lineNumber":96,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":97,"author":{"gitId":"fullfatwasabi"},"content":"Examples:","lastModifiedDate":"2021-10-01"},{"lineNumber":98,"author":{"gitId":"fullfatwasabi"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":99,"author":{"gitId":"fullfatwasabi"},"content":"`add n/Joe s/fulltime r/manager p/98765432 $/1234789 e/Joe@example.com a/John street, block 123, #01-01`\\","lastModifiedDate":"2021-10-09"},{"lineNumber":100,"author":{"gitId":"fullfatwasabi"},"content":"`add n/Candice s/parttime p/91234567 $/2 e/candice@example.com a/Newgate Prison`","lastModifiedDate":"2021-10-09"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"### Listing all persons : `list`","lastModifiedDate":"2021-09-22"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"mweeruien"},"content":"Shows a list of all staffs in the staff list.","lastModifiedDate":"2021-09-27"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"Format: `list`","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":110,"author":{"gitId":"Gabau"},"content":"### Marking a staff as absent : `mark`","lastModifiedDate":"2021-10-15"},{"lineNumber":111,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":112,"author":{"gitId":"Gabau"},"content":"Marks a specified staff(s) as not working for a specified date.","lastModifiedDate":"2021-10-15"},{"lineNumber":113,"author":{"gitId":"Gabau"},"content":"The salary for that date will be not included in calculation, ","lastModifiedDate":"2021-10-15"},{"lineNumber":114,"author":{"gitId":"Gabau"},"content":"depending on the staff\u0027s status. By default, the staff is recorded","lastModifiedDate":"2021-10-15"},{"lineNumber":115,"author":{"gitId":"Gabau"},"content":"as present for all shifts.","lastModifiedDate":"2021-10-15"},{"lineNumber":116,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":117,"author":{"gitId":"Gabau"},"content":"The format of the input date is in:","lastModifiedDate":"2021-10-15"},{"lineNumber":118,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":119,"author":{"gitId":"Gabau"},"content":"`YYYY-MM-DD`","lastModifiedDate":"2021-10-15"},{"lineNumber":120,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":121,"author":{"gitId":"Gabau"},"content":"Format:","lastModifiedDate":"2021-10-15"},{"lineNumber":122,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":123,"author":{"gitId":"Gabau"},"content":"`mark i/index d/startDate d/endDate`  ","lastModifiedDate":"2021-10-15"},{"lineNumber":124,"author":{"gitId":"Gabau"},"content":"`mark n/name d/startDate d/endDate`  ","lastModifiedDate":"2021-10-15"},{"lineNumber":125,"author":{"gitId":"Gabau"},"content":"`mark t/tag d/startDate d/endDate`","lastModifiedDate":"2021-10-15"},{"lineNumber":126,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":127,"author":{"gitId":"Gabau"},"content":"Possible to mark a single date  ","lastModifiedDate":"2021-10-15"},{"lineNumber":128,"author":{"gitId":"Gabau"},"content":"`mark t/tag d/date`","lastModifiedDate":"2021-10-15"},{"lineNumber":129,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":130,"author":{"gitId":"Gabau"},"content":"Examples:","lastModifiedDate":"2021-10-15"},{"lineNumber":131,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":132,"author":{"gitId":"Gabau"},"content":"`mark i/1 d/2020-01-03 d/2021-01-03`  ","lastModifiedDate":"2021-10-15"},{"lineNumber":133,"author":{"gitId":"Gabau"},"content":"`mark d/Alex Yeoh d/2020-01-03`  ","lastModifiedDate":"2021-10-15"},{"lineNumber":134,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":135,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":136,"author":{"gitId":"Gabau"},"content":"### Removing the absent mark `unmark`","lastModifiedDate":"2021-10-15"},{"lineNumber":137,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":138,"author":{"gitId":"Gabau"},"content":"Removes the period that was marked by the","lastModifiedDate":"2021-10-15"},{"lineNumber":139,"author":{"gitId":"Gabau"},"content":"`mark` command.","lastModifiedDate":"2021-10-15"},{"lineNumber":140,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":141,"author":{"gitId":"Gabau"},"content":"The format of the input date is in:","lastModifiedDate":"2021-10-15"},{"lineNumber":142,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":143,"author":{"gitId":"Gabau"},"content":"`YYYY-MM-DD`","lastModifiedDate":"2021-10-15"},{"lineNumber":144,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":145,"author":{"gitId":"Gabau"},"content":"Format:","lastModifiedDate":"2021-10-15"},{"lineNumber":146,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":147,"author":{"gitId":"Gabau"},"content":"`unmark n/name d/startDate d/endDate`  ","lastModifiedDate":"2021-10-15"},{"lineNumber":148,"author":{"gitId":"Gabau"},"content":"`unmark i/index d/startDate d/endDate`  ","lastModifiedDate":"2021-10-15"},{"lineNumber":149,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":150,"author":{"gitId":"Gabau"},"content":"Examples:  ","lastModifiedDate":"2021-10-15"},{"lineNumber":151,"author":{"gitId":"Gabau"},"content":"`unmark i/1 d/2020-01-03 d/2021-01-03`  ","lastModifiedDate":"2021-10-15"},{"lineNumber":152,"author":{"gitId":"Gabau"},"content":"`unmark t/friends d/2020-01-03`  ","lastModifiedDate":"2021-10-15"},{"lineNumber":153,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":154,"author":{"gitId":"Tetrerox"},"content":"### Deleting a Staff : `delete`","lastModifiedDate":"2021-10-01"},{"lineNumber":155,"author":{"gitId":"Tetrerox"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":156,"author":{"gitId":"Tetrerox"},"content":"Deletes the specified staff from the staff list.","lastModifiedDate":"2021-10-01"},{"lineNumber":157,"author":{"gitId":"Tetrerox"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":158,"author":{"gitId":"fullfatwasabi"},"content":"Formats:","lastModifiedDate":"2021-10-01"},{"lineNumber":159,"author":{"gitId":"fullfatwasabi"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":160,"author":{"gitId":"Tetrerox"},"content":"`delete n/name`\\","lastModifiedDate":"2021-10-01"},{"lineNumber":161,"author":{"gitId":"fullfatwasabi"},"content":"`delete i/index`\\","lastModifiedDate":"2021-10-07"},{"lineNumber":162,"author":{"gitId":"fullfatwasabi"},"content":"`delete r/role`\\","lastModifiedDate":"2021-10-07"},{"lineNumber":163,"author":{"gitId":"fullfatwasabi"},"content":"`delete s/status`","lastModifiedDate":"2021-10-07"},{"lineNumber":164,"author":{"gitId":"Tetrerox"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":165,"author":{"gitId":"fullfatwasabi"},"content":"* Deletes the staff(s) with the specified `NAME`, `ROLE`, `STATUS`, `INDEX`.","lastModifiedDate":"2021-10-07"},{"lineNumber":166,"author":{"gitId":"Tetrerox"},"content":"* The index refers to the index number shown in the displayed staff list. It **must be a positive integer** 1, 2, 3, â€¦â€‹","lastModifiedDate":"2021-10-01"},{"lineNumber":167,"author":{"gitId":"Tetrerox"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":168,"author":{"gitId":"fullfatwasabi"},"content":"Examples:","lastModifiedDate":"2021-10-01"},{"lineNumber":169,"author":{"gitId":"fullfatwasabi"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":170,"author":{"gitId":"Tetrerox"},"content":"`delete n/Candice`\\","lastModifiedDate":"2021-10-01"},{"lineNumber":171,"author":{"gitId":"fullfatwasabi"},"content":"`delete i/12345678`\\","lastModifiedDate":"2021-10-07"},{"lineNumber":172,"author":{"gitId":"fullfatwasabi"},"content":"`delete r/cashiers`\\","lastModifiedDate":"2021-10-07"},{"lineNumber":173,"author":{"gitId":"fullfatwasabi"},"content":"`delete s/full-time`","lastModifiedDate":"2021-10-07"},{"lineNumber":174,"author":{"gitId":"Tetrerox"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":175,"author":{"gitId":"Tetrerox"},"content":"[comment]: \u003c\u003e (* `list` followed by `delete 2` deletes the 2nd staff in the staff list.)","lastModifiedDate":"2021-10-01"},{"lineNumber":176,"author":{"gitId":"Tetrerox"},"content":"[comment]: \u003c\u003e (* `find Betsy` followed by `delete 1` deletes the 1st staff in the results of the `find` command.)","lastModifiedDate":"2021-10-01"},{"lineNumber":177,"author":{"gitId":"Tetrerox"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":178,"author":{"gitId":"mweeruien"},"content":"### Editing a staff : `edit`","lastModifiedDate":"2021-09-27"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":180,"author":{"gitId":"mweeruien"},"content":"Edits an existing staff in the Staff List.","lastModifiedDate":"2021-09-27"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"fullfatwasabi"},"content":"Formats:","lastModifiedDate":"2021-10-01"},{"lineNumber":183,"author":{"gitId":"fullfatwasabi"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":184,"author":{"gitId":"fullfatwasabi"},"content":"`edit -n NAME [n/NAME] [p/PHONE_NUMBER] [e/EMAIL] [a/ADDRESS] [$/SALARY] [s/STATUS] [r/ROLE]... [t/TAG]...`\\","lastModifiedDate":"2021-10-13"},{"lineNumber":185,"author":{"gitId":"fullfatwasabi"},"content":"`edit -i INDEX [n/NAME] [p/PHONE_NUMBER] [e/EMAIL] [a/ADDRESS] [$/SALARY] [s/STATUS] [r/ROLE]... [t/TAG]...`","lastModifiedDate":"2021-10-13"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":188,"author":{"gitId":"fullfatwasabi"},"content":"* Edits the staff of the specified `NAME`, `INDEX`","lastModifiedDate":"2021-10-07"},{"lineNumber":189,"author":{"gitId":"mweeruien"},"content":"The index refers to the index number shown in the displayed staff list. The index **must be a positive integer** 1, 2, 3, â€¦â€‹","lastModifiedDate":"2021-09-27"},{"lineNumber":190,"author":{"gitId":"-"},"content":"* At least one of the optional fields must be provided.","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"* Existing values will be updated to the input values.","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2021-10-01"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":195,"author":{"gitId":"mweeruien"},"content":"`edit -i 1 p/91234567 e/johndoe@example.com`\\","lastModifiedDate":"2021-09-27"},{"lineNumber":196,"author":{"gitId":"mweeruien"},"content":"`edit -n Bob p/69696969 e/candicepleasedateme@tinder.com`\\","lastModifiedDate":"2021-09-27"},{"lineNumber":197,"author":{"gitId":"fullfatwasabi"},"content":"`edit -n Candice r/cook`","lastModifiedDate":"2021-10-07"},{"lineNumber":198,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":199,"author":{"gitId":"mweeruien"},"content":"|Tag|Name|Description|","lastModifiedDate":"2021-09-27"},{"lineNumber":200,"author":{"gitId":"mweeruien"},"content":"|---|----|-----------|","lastModifiedDate":"2021-09-27"},{"lineNumber":201,"author":{"gitId":"fullfatwasabi"},"content":"|-n|Name|Contact with the name will be edited.|","lastModifiedDate":"2021-10-07"},{"lineNumber":202,"author":{"gitId":"fullfatwasabi"},"content":"|-i|Index|Contact with that index will be edited.|","lastModifiedDate":"2021-10-07"},{"lineNumber":203,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":204,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":205,"author":{"gitId":"mweeruien"},"content":"### Locating staff: `find`","lastModifiedDate":"2021-10-10"},{"lineNumber":206,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":207,"author":{"gitId":"mweeruien"},"content":"Finds staff whose names contain any of the given keywords, or by their index in the staff list.","lastModifiedDate":"2021-10-10"},{"lineNumber":208,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":209,"author":{"gitId":"fullfatwasabi"},"content":"Format:","lastModifiedDate":"2021-10-01"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":211,"author":{"gitId":"mweeruien"},"content":"`find -n KEYWORD [MORE_KEYWORDS]`","lastModifiedDate":"2021-10-10"},{"lineNumber":212,"author":{"gitId":"mweeruien"},"content":"`find -i INDEX`","lastModifiedDate":"2021-10-10"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"mweeruien"},"content":"Name Search:","lastModifiedDate":"2021-10-10"},{"lineNumber":215,"author":{"gitId":"mweeruien"},"content":"* The search is case-insensitive. e.g `bob` will match `Bob`","lastModifiedDate":"2021-10-10"},{"lineNumber":216,"author":{"gitId":"mweeruien"},"content":"* The order of the keywords does not matter. e.g. `Candice Dee` will match `Dee Candice`","lastModifiedDate":"2021-10-10"},{"lineNumber":217,"author":{"gitId":"mweeruien"},"content":"* Only full words will be matched e.g. `Boba` will not match `Bob`","lastModifiedDate":"2021-10-10"},{"lineNumber":218,"author":{"gitId":"mweeruien"},"content":"* Staff matching at least one keyword will be returned (i.e. `OR` search).","lastModifiedDate":"2021-09-27"},{"lineNumber":219,"author":{"gitId":"mweeruien"},"content":"  e.g. `John Nathan` will return `John Wick`, `Nathan Tan`","lastModifiedDate":"2021-10-10"},{"lineNumber":220,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":221,"author":{"gitId":"mweeruien"},"content":"Index Search:","lastModifiedDate":"2021-10-10"},{"lineNumber":222,"author":{"gitId":"mweeruien"},"content":"* If previous searches have been made, the search is conducted on the displayed list. Otherwise, it will ","lastModifiedDate":"2021-10-10"},{"lineNumber":223,"author":{"gitId":"mweeruien"},"content":"  be performed on the overall staff list.","lastModifiedDate":"2021-10-10"},{"lineNumber":224,"author":{"gitId":"mweeruien"},"content":"* The index must be within range (i.e. from 1 until the size of the Staff List, or trivially 0 ","lastModifiedDate":"2021-10-10"},{"lineNumber":225,"author":{"gitId":"mweeruien"},"content":"  if the Staff List is empty)","lastModifiedDate":"2021-10-10"},{"lineNumber":226,"author":{"gitId":"mweeruien"},"content":"* Only single search is supported, and this search will return only the specific Staff at that index","lastModifiedDate":"2021-10-10"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":229,"author":{"gitId":"mweeruien"},"content":"* `find -n John` returns `john` and `John Doe`","lastModifiedDate":"2021-10-10"},{"lineNumber":230,"author":{"gitId":"mweeruien"},"content":"* `find -n alex david` returns `Alex Yeoh`, `David Li`","lastModifiedDate":"2021-10-10"},{"lineNumber":231,"author":{"gitId":"mweeruien"},"content":"* `find -i 3` returns the staff at the 3rd position on the list","lastModifiedDate":"2021-10-10"},{"lineNumber":232,"author":{"gitId":"mweeruien"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":233,"author":{"gitId":"mweeruien"},"content":"|Tag|Name|Description|","lastModifiedDate":"2021-10-10"},{"lineNumber":234,"author":{"gitId":"mweeruien"},"content":"|---|----|-----------|","lastModifiedDate":"2021-10-10"},{"lineNumber":235,"author":{"gitId":"mweeruien"},"content":"|-n|Name|Contacts with the name will be found.|","lastModifiedDate":"2021-10-10"},{"lineNumber":236,"author":{"gitId":"mweeruien"},"content":"|-i|Index|Contact corresponding to that index in the displayed staff list will be found.|","lastModifiedDate":"2021-10-10"},{"lineNumber":237,"author":{"gitId":"fullfatwasabi"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":238,"author":{"gitId":"fullfatwasabi"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":239,"author":{"gitId":"-"},"content":"  ![result for \u0027find alex david\u0027](images/findAlexDavidResult.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"-"},"content":"### Clearing all entries : `clear`","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":244,"author":{"gitId":"mweeruien"},"content":"Clears all entries from the Staff List.","lastModifiedDate":"2021-09-27"},{"lineNumber":245,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":246,"author":{"gitId":"-"},"content":"Format: `clear`","lastModifiedDate":"2020-05-23"},{"lineNumber":247,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":248,"author":{"gitId":"-"},"content":"### Exiting the program : `exit`","lastModifiedDate":"2020-05-23"},{"lineNumber":249,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":250,"author":{"gitId":"-"},"content":"Exits the program.","lastModifiedDate":"2020-05-23"},{"lineNumber":251,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":252,"author":{"gitId":"-"},"content":"Format: `exit`","lastModifiedDate":"2020-05-23"},{"lineNumber":253,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":254,"author":{"gitId":"Tetrerox"},"content":"## Basic Management of Staff Schedules","lastModifiedDate":"2021-09-25"},{"lineNumber":255,"author":{"gitId":"Tetrerox"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":256,"author":{"gitId":"IrvingHe000"},"content":"### Adding a shift to staff\u0027s schedule: `addShift`","lastModifiedDate":"2021-10-10"},{"lineNumber":257,"author":{"gitId":"Tetrerox"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":258,"author":{"gitId":"Tetrerox"},"content":"Adds a time period where the staff is working to the staffâ€™s schedule.","lastModifiedDate":"2021-09-27"},{"lineNumber":259,"author":{"gitId":"Tetrerox"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":260,"author":{"gitId":"fullfatwasabi"},"content":"Formats:","lastModifiedDate":"2021-10-01"},{"lineNumber":261,"author":{"gitId":"fullfatwasabi"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":262,"author":{"gitId":"IrvingHe000"},"content":"`addShift n/name d/fullDayName-shiftNumber` \\","lastModifiedDate":"2021-10-10"},{"lineNumber":263,"author":{"gitId":"IrvingHe000"},"content":"`addShift i/index d/fullDayName-shiftNumber`","lastModifiedDate":"2021-10-10"},{"lineNumber":264,"author":{"gitId":"Tetrerox"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":265,"author":{"gitId":"fullfatwasabi"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":266,"author":{"gitId":"fullfatwasabi"},"content":"* There are two ways to identify the staff to add the time period to: by their `name` or by their staff `index`.","lastModifiedDate":"2021-10-07"},{"lineNumber":267,"author":{"gitId":"fullfatwasabi"},"content":"* The `fulldayname` field required to specify shifts are not case sensitive.","lastModifiedDate":"2021-10-07"},{"lineNumber":268,"author":{"gitId":"Tetrerox"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":269,"author":{"gitId":"fullfatwasabi"},"content":"Examples:","lastModifiedDate":"2021-10-01"},{"lineNumber":270,"author":{"gitId":"fullfatwasabi"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":271,"author":{"gitId":"IrvingHe000"},"content":"`addShift n/Candice d/Monday-1` \\","lastModifiedDate":"2021-10-10"},{"lineNumber":272,"author":{"gitId":"IrvingHe000"},"content":"`addShift i/1234 d/tuesday-0`","lastModifiedDate":"2021-10-10"},{"lineNumber":273,"author":{"gitId":"Tetrerox"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":274,"author":{"gitId":"Tetrerox"},"content":"### View a staff schedule : `viewSchedule`","lastModifiedDate":"2021-09-27"},{"lineNumber":275,"author":{"gitId":"Tetrerox"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":276,"author":{"gitId":"Tetrerox"},"content":"Views a specific staffâ€™s schedule.","lastModifiedDate":"2021-09-27"},{"lineNumber":277,"author":{"gitId":"Tetrerox"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":278,"author":{"gitId":"fullfatwasabi"},"content":"Formats:","lastModifiedDate":"2021-10-01"},{"lineNumber":279,"author":{"gitId":"fullfatwasabi"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":280,"author":{"gitId":"fullfatwasabi"},"content":"`viewSchedlue n/name` \\","lastModifiedDate":"2021-10-07"},{"lineNumber":281,"author":{"gitId":"fullfatwasabi"},"content":"`viewSchedlue i/index`","lastModifiedDate":"2021-10-07"},{"lineNumber":282,"author":{"gitId":"Tetrerox"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":283,"author":{"gitId":"fullfatwasabi"},"content":"Examples:","lastModifiedDate":"2021-10-01"},{"lineNumber":284,"author":{"gitId":"fullfatwasabi"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":285,"author":{"gitId":"Tetrerox"},"content":"`viewSchedule n/Candice` \\","lastModifiedDate":"2021-10-01"},{"lineNumber":286,"author":{"gitId":"fullfatwasabi"},"content":"`viewSchedule i/123`","lastModifiedDate":"2021-10-07"},{"lineNumber":287,"author":{"gitId":"Tetrerox"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":288,"author":{"gitId":"Tetrerox"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":289,"author":{"gitId":"Tetrerox"},"content":"### Deleting a staff schedule: `deleteSchedule`","lastModifiedDate":"2021-09-25"},{"lineNumber":290,"author":{"gitId":"Tetrerox"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":291,"author":{"gitId":"fullfatwasabi"},"content":"Deletes a time period from the staff schedule.  There are two ways to identify the staff to delete the time period from: by their `name` or by their staff `index`. The deleted period must be the same as a period previously entered by the manager.","lastModifiedDate":"2021-10-07"},{"lineNumber":292,"author":{"gitId":"Tetrerox"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":293,"author":{"gitId":"fullfatwasabi"},"content":"Formats:","lastModifiedDate":"2021-10-01"},{"lineNumber":294,"author":{"gitId":"fullfatwasabi"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":295,"author":{"gitId":"fullfatwasabi"},"content":"`deleteSchedule n/name d/fullDayName-shiftNumber` \\","lastModifiedDate":"2021-10-07"},{"lineNumber":296,"author":{"gitId":"fullfatwasabi"},"content":"`deleteSchedule i/index d/fullDayName-shiftNumber`","lastModifiedDate":"2021-10-07"},{"lineNumber":297,"author":{"gitId":"Tetrerox"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":298,"author":{"gitId":"fullfatwasabi"},"content":"Examples:","lastModifiedDate":"2021-10-01"},{"lineNumber":299,"author":{"gitId":"fullfatwasabi"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":300,"author":{"gitId":"fullfatwasabi"},"content":"`deleteSchedule n/Joe d/tuesday-2` \\","lastModifiedDate":"2021-10-07"},{"lineNumber":301,"author":{"gitId":"fullfatwasabi"},"content":"`deleteSchedule i/1278 d/friday-1`","lastModifiedDate":"2021-10-07"},{"lineNumber":302,"author":{"gitId":"Tetrerox"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":303,"author":{"gitId":"Tetrerox"},"content":"### Editing a staff schedule: `editSchedule`","lastModifiedDate":"2021-09-25"},{"lineNumber":304,"author":{"gitId":"Tetrerox"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":305,"author":{"gitId":"Tetrerox"},"content":"Edits a staff schedule start and end date time. There are two ways to identify the staff whoâ€™s schedule will be edited: by their name or by their staff ID.","lastModifiedDate":"2021-09-25"},{"lineNumber":306,"author":{"gitId":"Tetrerox"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":307,"author":{"gitId":"fullfatwasabi"},"content":"Formats:","lastModifiedDate":"2021-10-01"},{"lineNumber":308,"author":{"gitId":"fullfatwasabi"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":309,"author":{"gitId":"fullfatwasabi"},"content":"`editSchedule n/name old/fullDayName-shiftNumber new/fullDayName-shiftNumber` \\","lastModifiedDate":"2021-10-07"},{"lineNumber":310,"author":{"gitId":"fullfatwasabi"},"content":"`editSchedule id/ID old/fullDayName-shiftNumber new/fullDayName-shiftNumber`","lastModifiedDate":"2021-10-07"},{"lineNumber":311,"author":{"gitId":"Tetrerox"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":312,"author":{"gitId":"fullfatwasabi"},"content":"Examples:","lastModifiedDate":"2021-10-01"},{"lineNumber":313,"author":{"gitId":"fullfatwasabi"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":314,"author":{"gitId":"fullfatwasabi"},"content":"`editSchedule n/Candice old/tuesday-1 new/tuesday-2` \\","lastModifiedDate":"2021-10-07"},{"lineNumber":315,"author":{"gitId":"fullfatwasabi"},"content":"`editSchedule n/12345678 old/wednesday-2 new/thursday-2`","lastModifiedDate":"2021-10-07"},{"lineNumber":316,"author":{"gitId":"Tetrerox"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":317,"author":{"gitId":"Tetrerox"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":318,"author":{"gitId":"-"},"content":"### Saving the data","lastModifiedDate":"2020-05-23"},{"lineNumber":319,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":320,"author":{"gitId":"mweeruien"},"content":"Staff\u0027d data are saved in the hard disk automatically after any command that changes the data. There is no need to save manually.","lastModifiedDate":"2021-09-27"},{"lineNumber":321,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":322,"author":{"gitId":"-"},"content":"### Editing the data file","lastModifiedDate":"2021-02-04"},{"lineNumber":323,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":324,"author":{"gitId":"Tetrerox"},"content":"Staff\u0027d data are saved as a JSON file. Advanced users are welcome to update data directly by editing that data file.","lastModifiedDate":"2021-10-01"},{"lineNumber":325,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":326,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e:exclamation: **Caution:**","lastModifiedDate":"2021-02-04"},{"lineNumber":327,"author":{"gitId":"Tetrerox"},"content":"If your changes to the data file makes its format invalid, Staff\u0027d will discard all data and start with an empty data file at the next run.","lastModifiedDate":"2021-10-01"},{"lineNumber":328,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-02-04"},{"lineNumber":329,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":330,"author":{"gitId":"-"},"content":"### Archiving data files `[coming in v2.0]`","lastModifiedDate":"2020-05-23"},{"lineNumber":331,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":332,"author":{"gitId":"-"},"content":"_Details coming soon ..._","lastModifiedDate":"2021-02-04"},{"lineNumber":333,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":334,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":335,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":336,"author":{"gitId":"-"},"content":"## FAQ","lastModifiedDate":"2020-05-23"},{"lineNumber":337,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":338,"author":{"gitId":"-"},"content":"**Q**: How do I transfer my data to another Computer?\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":339,"author":{"gitId":"Tetrerox"},"content":"**A**: Install the app in the other computer and overwrite the empty data file it creates with the file that contains the data of your previous Staff\u0027d home folder.","lastModifiedDate":"2021-10-01"},{"lineNumber":340,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":341,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":342,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":343,"author":{"gitId":"-"},"content":"## Command summary","lastModifiedDate":"2020-05-23"},{"lineNumber":344,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":345,"author":{"gitId":"-"},"content":"Action | Format, Examples","lastModifiedDate":"2020-05-23"},{"lineNumber":346,"author":{"gitId":"-"},"content":"--------|------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":347,"author":{"gitId":"fullfatwasabi"},"content":"**View** | `view n/name` \u003cbr\u003e `view i/index`","lastModifiedDate":"2021-10-07"},{"lineNumber":348,"author":{"gitId":"fullfatwasabi"},"content":"**Add** | `add n/NAME p/PHONE_NUMBER e/EMAIL a/ADDRESS $/SALARY [s/STATUS] [r/ROLE]... [t/TAG]...`","lastModifiedDate":"2021-10-13"},{"lineNumber":349,"author":{"gitId":"fullfatwasabi"},"content":"**Delete** | `delete n/name` \u003cbr\u003e `delete i/index` \u003cbr\u003e `delete r/role` \u003cbr\u003e `delete s/status`","lastModifiedDate":"2021-10-07"},{"lineNumber":350,"author":{"gitId":"fullfatwasabi"},"content":"**Edit** | `edit -n NAME [n/NAME] [p/PHONE_NUMBER] [e/EMAIL] [a/ADDRESS] [$/SALARY] [s/STATUS] [r/ROLE]... [t/TAG]...` \u003cbr\u003e `edit -i INDEX [n/NAME] [p/PHONE_NUMBER] [e/EMAIL] [a/ADDRESS] [$/SALARY] [s/STATUS] [r/ROLE]... [t/TAG]...`","lastModifiedDate":"2021-10-13"},{"lineNumber":351,"author":{"gitId":"-"},"content":"**Find** | `find KEYWORD [MORE_KEYWORDS]`\u003cbr\u003e e.g., `find James Jake`","lastModifiedDate":"2020-05-23"},{"lineNumber":352,"author":{"gitId":"fullfatwasabi"},"content":"**View staff schedule** | `viewSchedlue n/name` \u003cbr\u003e `viewSchedlue i/index`","lastModifiedDate":"2021-10-07"},{"lineNumber":353,"author":{"gitId":"fullfatwasabi"},"content":"**Add staff schedule** | `addSchedule n/name d/fullDayName-shiftNumber` \u003cbr\u003e `addSchedule i/index d/fullDayName-shiftNumber`","lastModifiedDate":"2021-10-07"},{"lineNumber":354,"author":{"gitId":"fullfatwasabi"},"content":"**Edit staff schedule** | `editSchedule n/name old/fullDayName-shiftNumber new/fullDayName-shiftNumber` \u003cbr\u003e `editSchedule i/index old/fullDayName-shiftNumber new/fullDayName-shiftNumber`","lastModifiedDate":"2021-10-07"},{"lineNumber":355,"author":{"gitId":"fullfatwasabi"},"content":"**Delete staff schedule** | `deleteSchedule n/name d/fullDayName-shiftNumber` \u003cbr\u003e `deleteSchedule i/index d/fullDayName-shiftNumber`","lastModifiedDate":"2021-10-07"},{"lineNumber":356,"author":{"gitId":"-"},"content":"**List** | `list`","lastModifiedDate":"2020-05-23"},{"lineNumber":357,"author":{"gitId":"-"},"content":"**Help** | `help`","lastModifiedDate":"2020-05-23"},{"lineNumber":358,"author":{"gitId":"Tetrerox"},"content":"**Clear** | `clear`","lastModifiedDate":"2021-10-01"},{"lineNumber":359,"author":{"gitId":"Tetrerox"},"content":"**Exit** | `exit`","lastModifiedDate":"2021-10-01"}],"authorContributionMap":{"Tetrerox":53,"Gabau":53,"fullfatwasabi":79,"-":133,"mweeruien":36,"IrvingHe000":5}},{"path":"docs/_sass/minima/_base.scss","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"html {","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  font-size: $base-font-size;","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Reset some basic elements","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"body, h1, h2, h3, h4, h5, h6,","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"p, blockquote, pre, hr,","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"dl, dd, ol, ul, figure {","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"  margin: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"  padding: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * Basic styling","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"body {","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"  font: $base-font-weight #{$base-font-size}/#{$base-line-height} $base-font-family;","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"  color: $text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"  background-color: $background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"  -webkit-text-size-adjust: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"  -webkit-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     -moz-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"       -o-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"          font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"  font-kerning: normal;","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"  display: flex;","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"  min-height: 100vh;","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"  flex-direction: column;","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"  overflow-wrap: break-word;","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":" * Set `margin-bottom` to maintain vertical rhythm","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"h1, h2, h3, h4, h5, h6,","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"p, blockquote, pre,","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"ul, ol, dl, figure,","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"%vertical-rhythm {","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"hr {","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"  margin-top: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":" * `main` element","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"main {","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"  display: block; /* Default value of `display` of `main` element is \u0027inline\u0027 in IE 11. */","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":" * Images","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"img {","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"  max-width: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"  vertical-align: middle;","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":" * Figures","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"figure \u003e img {","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"  display: block;","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"figcaption {","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"  font-size: $small-font-size;","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":" * Lists","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"ul, ol {","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"  margin-left: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"li {","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"  \u003e ul,","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"  \u003e ol {","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    margin-bottom: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":" * Headings","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"h1, h2, h3, h4, h5, h6 {","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"  font-weight: $base-font-weight;","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":" * Links","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"a {","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"  color: $link-base-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"  text-decoration: none;","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"  \u0026:visited {","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    color: $link-visited-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"  \u0026:hover {","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    color: $text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    text-decoration: underline;","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"  .social-media-list \u0026:hover {","lastModifiedDate":"2020-05-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    text-decoration: none;","lastModifiedDate":"2020-05-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    .username {","lastModifiedDate":"2020-05-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"      text-decoration: underline;","lastModifiedDate":"2020-05-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":" * Blockquotes","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"blockquote {","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"  color: $brand-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":142,"author":{"gitId":"-"},"content":"  border-left: 4px solid $brand-color-light;","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"  padding-left: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"-"},"content":"  @include relative-font-size(1.125);","lastModifiedDate":"2020-05-23"},{"lineNumber":145,"author":{"gitId":"-"},"content":"  font-style: italic;","lastModifiedDate":"2020-05-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"  \u003e :last-child {","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    margin-bottom: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"  i, em {","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    font-style: normal;","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":" * Code formatting","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"pre,","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"code {","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"  font-family: $code-font-family;","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"  font-size: 0.9375em;","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"  border: 1px solid $brand-color-light;","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"  border-radius: 3px;","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"  background-color: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"code {","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"  padding: 1px 5px;","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":174,"author":{"gitId":"-"},"content":"pre {","lastModifiedDate":"2020-05-23"},{"lineNumber":175,"author":{"gitId":"-"},"content":"  padding: 8px 12px;","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"  overflow-x: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":178,"author":{"gitId":"-"},"content":"  \u003e code {","lastModifiedDate":"2020-05-23"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    border: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    padding-right: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    padding-left: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":".highlight {","lastModifiedDate":"2020-05-23"},{"lineNumber":186,"author":{"gitId":"-"},"content":"  border-radius: 3px;","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"  background: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":188,"author":{"gitId":"-"},"content":"  @extend %vertical-rhythm;","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"  .highlighter-rouge \u0026 {","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    background: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":" * Wrapper","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"-"},"content":".wrapper {","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"  max-width: calc(#{$content-width} - (#{$spacing-unit}));","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"  margin-right: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"  margin-left: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":204,"author":{"gitId":"-"},"content":"  padding-right: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":205,"author":{"gitId":"-"},"content":"  padding-left: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":206,"author":{"gitId":"-"},"content":"  @extend %clearfix;","lastModifiedDate":"2020-05-23"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":208,"author":{"gitId":"-"},"content":"  @media screen and (min-width: $on-large) {","lastModifiedDate":"2020-05-23"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    max-width: calc(#{$content-width} - (#{$spacing-unit} * 2));","lastModifiedDate":"2020-05-23"},{"lineNumber":210,"author":{"gitId":"-"},"content":"    padding-right: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    padding-left: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":212,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":213,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":217,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":" * Clearfix","lastModifiedDate":"2020-05-23"},{"lineNumber":219,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":220,"author":{"gitId":"-"},"content":"%clearfix:after {","lastModifiedDate":"2020-05-23"},{"lineNumber":221,"author":{"gitId":"-"},"content":"  content: \"\";","lastModifiedDate":"2020-05-23"},{"lineNumber":222,"author":{"gitId":"-"},"content":"  display: table;","lastModifiedDate":"2020-05-23"},{"lineNumber":223,"author":{"gitId":"-"},"content":"  clear: both;","lastModifiedDate":"2020-05-23"},{"lineNumber":224,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":229,"author":{"gitId":"-"},"content":" * Icons","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":".orange {","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"-"},"content":"  color: #f66a0a;","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":".grey {","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":"  color: #828282;","lastModifiedDate":"2020-05-23"},{"lineNumber":238,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":" * Tables","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"-"},"content":"table {","lastModifiedDate":"2020-05-23"},{"lineNumber":244,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":245,"author":{"gitId":"-"},"content":"  width: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":246,"author":{"gitId":"-"},"content":"  text-align: $table-text-align;","lastModifiedDate":"2020-05-23"},{"lineNumber":247,"author":{"gitId":"-"},"content":"  color: $table-text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":248,"author":{"gitId":"-"},"content":"  border-collapse: collapse;","lastModifiedDate":"2020-05-23"},{"lineNumber":249,"author":{"gitId":"-"},"content":"  border: 1px solid $table-border-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":250,"author":{"gitId":"-"},"content":"  tr {","lastModifiedDate":"2020-05-23"},{"lineNumber":251,"author":{"gitId":"-"},"content":"    \u0026:nth-child(even) {","lastModifiedDate":"2020-05-23"},{"lineNumber":252,"author":{"gitId":"-"},"content":"      background-color: $table-zebra-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":253,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":254,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":255,"author":{"gitId":"-"},"content":"  th, td {","lastModifiedDate":"2020-05-23"},{"lineNumber":256,"author":{"gitId":"-"},"content":"    padding: ($spacing-unit / 3) ($spacing-unit / 2);","lastModifiedDate":"2020-05-23"},{"lineNumber":257,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":258,"author":{"gitId":"-"},"content":"  th {","lastModifiedDate":"2020-05-23"},{"lineNumber":259,"author":{"gitId":"-"},"content":"    background-color: $table-header-bg-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":260,"author":{"gitId":"-"},"content":"    border: 1px solid $table-header-border;","lastModifiedDate":"2020-05-23"},{"lineNumber":261,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":262,"author":{"gitId":"-"},"content":"  td {","lastModifiedDate":"2020-05-23"},{"lineNumber":263,"author":{"gitId":"-"},"content":"    border: 1px solid $table-border-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":264,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":265,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":266,"author":{"gitId":"-"},"content":"  @include media-query($on-laptop) {","lastModifiedDate":"2020-05-23"},{"lineNumber":267,"author":{"gitId":"-"},"content":"    display: block;","lastModifiedDate":"2020-05-23"},{"lineNumber":268,"author":{"gitId":"-"},"content":"    overflow-x: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":269,"author":{"gitId":"-"},"content":"    -webkit-overflow-scrolling: touch;","lastModifiedDate":"2020-05-23"},{"lineNumber":270,"author":{"gitId":"-"},"content":"            -ms-overflow-style: -ms-autohiding-scrollbar;","lastModifiedDate":"2020-05-23"},{"lineNumber":271,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":272,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":273,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-01-11"},{"lineNumber":274,"author":{"gitId":"-"},"content":"@media print {","lastModifiedDate":"2021-01-12"},{"lineNumber":275,"author":{"gitId":"-"},"content":"  /**","lastModifiedDate":"2021-01-11"},{"lineNumber":276,"author":{"gitId":"-"},"content":"  * Prevents page break from cutting through content when printing","lastModifiedDate":"2021-01-12"},{"lineNumber":277,"author":{"gitId":"-"},"content":"  */","lastModifiedDate":"2021-01-11"},{"lineNumber":278,"author":{"gitId":"-"},"content":"  body {","lastModifiedDate":"2021-01-11"},{"lineNumber":279,"author":{"gitId":"-"},"content":"    display: block;","lastModifiedDate":"2021-01-11"},{"lineNumber":280,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-11"},{"lineNumber":281,"author":{"gitId":"-"},"content":"  /**","lastModifiedDate":"2021-01-12"},{"lineNumber":282,"author":{"gitId":"-"},"content":"  * Replaces the top navigation menu with the project name when printing","lastModifiedDate":"2021-01-12"},{"lineNumber":283,"author":{"gitId":"-"},"content":"  */","lastModifiedDate":"2021-01-12"},{"lineNumber":284,"author":{"gitId":"-"},"content":"  .site-header .wrapper {","lastModifiedDate":"2021-01-12"},{"lineNumber":285,"author":{"gitId":"-"},"content":"    display: none;","lastModifiedDate":"2021-01-12"},{"lineNumber":286,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-12"},{"lineNumber":287,"author":{"gitId":"-"},"content":"  .site-header {","lastModifiedDate":"2021-01-12"},{"lineNumber":288,"author":{"gitId":"-"},"content":"    text-align: center;","lastModifiedDate":"2021-01-12"},{"lineNumber":289,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-12"},{"lineNumber":290,"author":{"gitId":"-"},"content":"  .site-header:before {","lastModifiedDate":"2021-01-12"},{"lineNumber":291,"author":{"gitId":"fullfatwasabi"},"content":"    content: \"Staff\u0027d\";","lastModifiedDate":"2021-10-02"},{"lineNumber":292,"author":{"gitId":"-"},"content":"    font-size: 32px;","lastModifiedDate":"2021-01-12"},{"lineNumber":293,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-11"},{"lineNumber":294,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-01-12"},{"lineNumber":295,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-01-12"}],"authorContributionMap":{"fullfatwasabi":1,"-":294}},{"path":"docs/index.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"mweeruien"},"content":"title: Staff\u0027d","lastModifiedDate":"2021-09-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"mweeruien"},"content":"[![Java CI](https://github.com/AY2122S1-CS2103T-W11-2/tp/actions/workflows/gradle.yml/badge.svg)](https://github.com/AY2122S1-CS2103T-W11-2/tp/actions/workflows/gradle.yml)","lastModifiedDate":"2021-09-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"[![codecov](https://codecov.io/gh/AY2122S1-CS2103T-W11-2/tp/branch/master/graph/badge.svg?token\u003dVVZ5LZPCSV)](https://codecov.io/gh/AY2122S1-CS2103T-W11-2/tp)","lastModifiedDate":"2021-09-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"![Ui](images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"mweeruien"},"content":"**Staff\u0027d is a desktop application for managing your staff.** While it has a GUI, most of the user interactions happen using a CLI (Command Line Interface).","lastModifiedDate":"2021-09-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"mweeruien"},"content":"* If you are interested in using Staff\u0027d, head over to the [_Quick Start_ section of the **User Guide**](UserGuide.html#quick-start).","lastModifiedDate":"2021-09-27"},{"lineNumber":14,"author":{"gitId":"mweeruien"},"content":"* If you are interested about developing Staff\u0027d, the [**Developer Guide**](DeveloperGuide.html) is a good place to start.","lastModifiedDate":"2021-09-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"**Acknowledgements**","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"* Libraries used: [JavaFX](https://openjfx.io/), [Jackson](https://github.com/FasterXML/jackson), [JUnit5](https://github.com/junit-team/junit5)","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"-":14,"mweeruien":5}},{"path":"docs/team/fullfatwasabi.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"fullfatwasabi"},"content":"title: Jonathan\u0027s Project Portfolio Page","lastModifiedDate":"2021-09-22"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"fullfatwasabi"},"content":"### Project: Staff\u0027d","lastModifiedDate":"2021-09-22"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"AddressBook - Level 3 is a desktop address book application used for teaching Software Engineering principles. The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java, and has about 10 kLoC.","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"* **New Feature**: Added the ability to undo/redo previous commands.","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"  * What it does: allows the user to undo all previous commands one at a time. Preceding undo commands can be reversed by using the redo command.","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"  * Justification: This feature improves the product significantly because a user can make mistakes in commands and the app should provide a convenient way to rectify them.","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"  * Highlights: This enhancement affects existing commands and commands to be added in future. It required an in-depth analysis of design alternatives. The implementation too was challenging as it required changes to existing commands.","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"  * Credits: *{mention here if you reused any code/ideas from elsewhere or if a third-party library is heavily used in the feature so that a reader can make a more accurate judgement of how much effort went into the feature}*","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"* **New Feature**: Added a history command that allows the user to navigate to previous commands using up/down keys.","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"* **Code contributed**: [RepoSense link]()","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"* **Project management**:","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"  * Managed releases `v1.3` - `v1.5rc` (3 releases) on GitHub","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"  * Updated the GUI color scheme (Pull requests [\\#33](), [\\#34]())","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"  * Wrote additional tests for existing features to increase coverage from 88% to 92% (Pull requests [\\#36](), [\\#38]())","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"* **Documentation**:","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"  * User Guide:","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    * Added documentation for the features `delete` and `find` [\\#72]()","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    * Did cosmetic tweaks to existing documentation of features `clear`, `exit`: [\\#74]()","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"  * Developer Guide:","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    * Added implementation details of the `delete` feature.","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"* **Community**:","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"  * PRs reviewed (with non-trivial review comments): [\\#12](), [\\#32](), [\\#19](), [\\#42]()","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"  * Contributed to forum discussions (examples: [1](), [2](), [3](), [4]())","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"  * Reported bugs and suggestions for other teams in the class (examples: [1](), [2](), [3]())","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"  * Some parts of the history feature I added was adopted by several other class mates ([1](), [2]())","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"* **Tools**:","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"  * Integrated a third party library (Natty) to the project ([\\#42]())","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"  * Integrated a new Github plugin (CircleCI) to the team repo","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"* _{you can add/remove categories in the list above}_","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"fullfatwasabi":2,"-":44}},{"path":"docs/team/mweeruien.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"mweeruien"},"content":"---","lastModifiedDate":"2021-09-27"},{"lineNumber":2,"author":{"gitId":"mweeruien"},"content":"layout: page","lastModifiedDate":"2021-09-27"},{"lineNumber":3,"author":{"gitId":"mweeruien"},"content":"title: Megan\u0027s Project Portfolio Page","lastModifiedDate":"2021-09-27"},{"lineNumber":4,"author":{"gitId":"mweeruien"},"content":"---","lastModifiedDate":"2021-09-27"},{"lineNumber":5,"author":{"gitId":"mweeruien"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":6,"author":{"gitId":"mweeruien"},"content":"### Project: Staff\u0027d","lastModifiedDate":"2021-09-27"},{"lineNumber":7,"author":{"gitId":"mweeruien"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":8,"author":{"gitId":"mweeruien"},"content":"Staff\u0027d is a desktop address book application used for teaching Software Engineering principles. The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java, and has about 10 kLoC.","lastModifiedDate":"2021-09-27"},{"lineNumber":9,"author":{"gitId":"mweeruien"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":10,"author":{"gitId":"mweeruien"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2021-09-27"},{"lineNumber":11,"author":{"gitId":"mweeruien"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":12,"author":{"gitId":"mweeruien"},"content":"* **New Feature**: Added the ability to undo/redo previous commands.","lastModifiedDate":"2021-09-27"},{"lineNumber":13,"author":{"gitId":"mweeruien"},"content":"    * What it does: allows the user to undo all previous commands one at a time. Preceding undo commands can be reversed by using the redo command.","lastModifiedDate":"2021-09-27"},{"lineNumber":14,"author":{"gitId":"mweeruien"},"content":"    * Justification: This feature improves the product significantly because a user can make mistakes in commands and the app should provide a convenient way to rectify them.","lastModifiedDate":"2021-09-27"},{"lineNumber":15,"author":{"gitId":"mweeruien"},"content":"    * Highlights: This enhancement affects existing commands and commands to be added in future. It required an in-depth analysis of design alternatives. The implementation too was challenging as it required changes to existing commands.","lastModifiedDate":"2021-09-27"},{"lineNumber":16,"author":{"gitId":"mweeruien"},"content":"    * Credits: *{mention here if you reused any code/ideas from elsewhere or if a third-party library is heavily used in the feature so that a reader can make a more accurate judgement of how much effort went into the feature}*","lastModifiedDate":"2021-09-27"},{"lineNumber":17,"author":{"gitId":"mweeruien"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":18,"author":{"gitId":"mweeruien"},"content":"* **New Feature**: Added a history command that allows the user to navigate to previous commands using up/down keys.","lastModifiedDate":"2021-09-27"},{"lineNumber":19,"author":{"gitId":"mweeruien"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":20,"author":{"gitId":"mweeruien"},"content":"* **Code contributed**: [RepoSense link]()","lastModifiedDate":"2021-09-27"},{"lineNumber":21,"author":{"gitId":"mweeruien"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":22,"author":{"gitId":"mweeruien"},"content":"* **Project management**:","lastModifiedDate":"2021-09-27"},{"lineNumber":23,"author":{"gitId":"mweeruien"},"content":"    * Managed releases `v1.3` - `v1.5rc` (3 releases) on GitHub","lastModifiedDate":"2021-09-27"},{"lineNumber":24,"author":{"gitId":"mweeruien"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":25,"author":{"gitId":"mweeruien"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2021-09-27"},{"lineNumber":26,"author":{"gitId":"mweeruien"},"content":"    * Updated the GUI color scheme (Pull requests [\\#33](), [\\#34]())","lastModifiedDate":"2021-09-27"},{"lineNumber":27,"author":{"gitId":"mweeruien"},"content":"    * Wrote additional tests for existing features to increase coverage from 88% to 92% (Pull requests [\\#36](), [\\#38]())","lastModifiedDate":"2021-09-27"},{"lineNumber":28,"author":{"gitId":"mweeruien"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":29,"author":{"gitId":"mweeruien"},"content":"* **Documentation**:","lastModifiedDate":"2021-09-27"},{"lineNumber":30,"author":{"gitId":"mweeruien"},"content":"    * User Guide:","lastModifiedDate":"2021-09-27"},{"lineNumber":31,"author":{"gitId":"mweeruien"},"content":"        * Added documentation for the features `delete` and `find` [\\#72]()","lastModifiedDate":"2021-09-27"},{"lineNumber":32,"author":{"gitId":"mweeruien"},"content":"        * Did cosmetic tweaks to existing documentation of features `clear`, `exit`: [\\#74]()","lastModifiedDate":"2021-09-27"},{"lineNumber":33,"author":{"gitId":"mweeruien"},"content":"    * Developer Guide:","lastModifiedDate":"2021-09-27"},{"lineNumber":34,"author":{"gitId":"mweeruien"},"content":"        * Added implementation details of the `delete` feature.","lastModifiedDate":"2021-09-27"},{"lineNumber":35,"author":{"gitId":"mweeruien"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":36,"author":{"gitId":"mweeruien"},"content":"* **Community**:","lastModifiedDate":"2021-09-27"},{"lineNumber":37,"author":{"gitId":"mweeruien"},"content":"    * PRs reviewed (with non-trivial review comments): [\\#12](), [\\#32](), [\\#19](), [\\#42]()","lastModifiedDate":"2021-09-27"},{"lineNumber":38,"author":{"gitId":"mweeruien"},"content":"    * Contributed to forum discussions (examples: [1](), [2](), [3](), [4]())","lastModifiedDate":"2021-09-27"},{"lineNumber":39,"author":{"gitId":"mweeruien"},"content":"    * Reported bugs and suggestions for other teams in the class (examples: [1](), [2](), [3]())","lastModifiedDate":"2021-09-27"},{"lineNumber":40,"author":{"gitId":"mweeruien"},"content":"    * Some parts of the history feature I added was adopted by several other class mates ([1](), [2]())","lastModifiedDate":"2021-09-27"},{"lineNumber":41,"author":{"gitId":"mweeruien"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":42,"author":{"gitId":"mweeruien"},"content":"* **Tools**:","lastModifiedDate":"2021-09-27"},{"lineNumber":43,"author":{"gitId":"mweeruien"},"content":"    * Integrated a third party library (Natty) to the project ([\\#42]())","lastModifiedDate":"2021-09-27"},{"lineNumber":44,"author":{"gitId":"mweeruien"},"content":"    * Integrated a new Github plugin (CircleCI) to the team repo","lastModifiedDate":"2021-09-27"},{"lineNumber":45,"author":{"gitId":"mweeruien"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":46,"author":{"gitId":"mweeruien"},"content":"* _{you can add/remove categories in the list above}_","lastModifiedDate":"2021-09-27"}],"authorContributionMap":{"mweeruien":46}},{"path":"src/main/java/seedu/address/MainApp.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2016-08-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Config;","lastModifiedDate":"2016-09-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Version;","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2016-09-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ConfigUtil;","lastModifiedDate":"2016-10-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2016-09-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.Logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.LogicManager;","lastModifiedDate":"2016-09-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-01-18"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-01-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-01-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2017-01-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-12-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-01-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.util.SampleDataUtil;","lastModifiedDate":"2016-12-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.storage.AddressBookStorage;","lastModifiedDate":"2017-02-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonAddressBookStorage;","lastModifiedDate":"2018-11-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonUserPrefsStorage;","lastModifiedDate":"2017-02-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.storage.Storage;","lastModifiedDate":"2016-09-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.storage.StorageManager;","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.storage.UserPrefsStorage;","lastModifiedDate":"2017-02-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.ui.Ui;","lastModifiedDate":"2016-09-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.ui.UiManager;","lastModifiedDate":"2016-09-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":" * Runs the application.","lastModifiedDate":"2019-02-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"public class MainApp extends Application {","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public static final Version VERSION \u003d new Version(0, 2, 0, true);","lastModifiedDate":"2021-08-30"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(MainApp.class);","lastModifiedDate":"2017-04-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    protected Ui ui;","lastModifiedDate":"2016-09-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    protected Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    protected Storage storage;","lastModifiedDate":"2016-09-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    protected Model model;","lastModifiedDate":"2016-09-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    protected Config config;","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void init() throws Exception {","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"mweeruien"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d[ Initializing Staff\u0027d ]\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2021-10-10"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        super.init();","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        AppParameters appParameters \u003d AppParameters.parse(getParameters());","lastModifiedDate":"2018-04-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        config \u003d initConfig(appParameters.getConfigPath());","lastModifiedDate":"2018-04-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        UserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(config.getUserPrefsFilePath());","lastModifiedDate":"2017-02-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d initPrefs(userPrefsStorage);","lastModifiedDate":"2018-12-06"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        AddressBookStorage addressBookStorage \u003d new JsonAddressBookStorage(userPrefs.getAddressBookFilePath());","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2017-02-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        initLogging(config);","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        model \u003d initModelManager(storage, userPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        ui \u003d new UiManager(logic);","lastModifiedDate":"2018-12-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * Returns a {@code ModelManager} with the data from {@code storage}\u0027s address book and {@code userPrefs}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * The data from the sample address book will be used instead if {@code storage}\u0027s address book is not found,","lastModifiedDate":"2017-08-16"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * or an empty address book will be used instead if errors occur when reading {@code storage}\u0027s address book.","lastModifiedDate":"2017-08-16"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    private Model initModelManager(Storage storage, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        Optional\u003cReadOnlyAddressBook\u003e addressBookOptional;","lastModifiedDate":"2016-09-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        ReadOnlyAddressBook initialData;","lastModifiedDate":"2016-09-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"            addressBookOptional \u003d storage.readAddressBook();","lastModifiedDate":"2016-09-25"},{"lineNumber":81,"author":{"gitId":"-"},"content":"            if (!addressBookOptional.isPresent()) {","lastModifiedDate":"2016-09-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"                logger.info(\"Data file not found. Will be starting with a sample AddressBook\");","lastModifiedDate":"2016-12-20"},{"lineNumber":83,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-09-24"},{"lineNumber":84,"author":{"gitId":"-"},"content":"            initialData \u003d addressBookOptional.orElseGet(SampleDataUtil::getSampleAddressBook);","lastModifiedDate":"2016-12-20"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"            logger.warning(\"Data file not in the correct format. Will be starting with an empty AddressBook\");","lastModifiedDate":"2016-09-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            initialData \u003d new AddressBook();","lastModifiedDate":"2016-09-24"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-10-01"},{"lineNumber":89,"author":{"gitId":"-"},"content":"            logger.warning(\"Problem while reading from the file. Will be starting with an empty AddressBook\");","lastModifiedDate":"2016-10-12"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            initialData \u003d new AddressBook();","lastModifiedDate":"2016-09-24"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        return new ModelManager(initialData, userPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    private void initLogging(Config config) {","lastModifiedDate":"2016-09-24"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        LogsCenter.init(config);","lastModifiedDate":"2016-09-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * Returns a {@code Config} using the file at {@code configFilePath}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * The default file path {@code Config#DEFAULT_CONFIG_FILE} will be used instead","lastModifiedDate":"2017-08-16"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * if {@code configFilePath} is null.","lastModifiedDate":"2017-08-16"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    protected Config initConfig(Path configFilePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        Config initializedConfig;","lastModifiedDate":"2016-09-24"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        Path configFilePathUsed;","lastModifiedDate":"2018-04-21"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        configFilePathUsed \u003d Config.DEFAULT_CONFIG_FILE;","lastModifiedDate":"2016-09-24"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        if (configFilePath !\u003d null) {","lastModifiedDate":"2016-09-24"},{"lineNumber":112,"author":{"gitId":"-"},"content":"            logger.info(\"Custom Config file specified \" + configFilePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":113,"author":{"gitId":"-"},"content":"            configFilePathUsed \u003d configFilePath;","lastModifiedDate":"2016-09-24"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        logger.info(\"Using config file : \" + configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":119,"author":{"gitId":"-"},"content":"            Optional\u003cConfig\u003e configOptional \u003d ConfigUtil.readConfig(configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":120,"author":{"gitId":"-"},"content":"            initializedConfig \u003d configOptional.orElse(new Config());","lastModifiedDate":"2016-09-24"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":122,"author":{"gitId":"-"},"content":"            logger.warning(\"Config file at \" + configFilePathUsed + \" is not in the correct format. \"","lastModifiedDate":"2017-05-22"},{"lineNumber":123,"author":{"gitId":"-"},"content":"                    + \"Using default config properties\");","lastModifiedDate":"2017-05-22"},{"lineNumber":124,"author":{"gitId":"-"},"content":"            initializedConfig \u003d new Config();","lastModifiedDate":"2016-09-24"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        //Update config file in case it was missing to begin with or there are new/unused fields","lastModifiedDate":"2016-09-24"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":129,"author":{"gitId":"-"},"content":"            ConfigUtil.saveConfig(initializedConfig, configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":131,"author":{"gitId":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        return initializedConfig;","lastModifiedDate":"2016-09-24"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":137,"author":{"gitId":"-"},"content":"     * Returns a {@code UserPrefs} using the file at {@code storage}\u0027s user prefs file path,","lastModifiedDate":"2017-08-16"},{"lineNumber":138,"author":{"gitId":"-"},"content":"     * or a new {@code UserPrefs} with default configuration if errors occur when","lastModifiedDate":"2017-08-16"},{"lineNumber":139,"author":{"gitId":"-"},"content":"     * reading from the file.","lastModifiedDate":"2017-08-16"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    protected UserPrefs initPrefs(UserPrefsStorage storage) {","lastModifiedDate":"2017-02-25"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        Path prefsFilePath \u003d storage.getUserPrefsFilePath();","lastModifiedDate":"2018-04-21"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        logger.info(\"Using prefs file : \" + prefsFilePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        UserPrefs initializedPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":147,"author":{"gitId":"-"},"content":"            Optional\u003cUserPrefs\u003e prefsOptional \u003d storage.readUserPrefs();","lastModifiedDate":"2016-09-25"},{"lineNumber":148,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d prefsOptional.orElse(new UserPrefs());","lastModifiedDate":"2016-09-24"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":150,"author":{"gitId":"-"},"content":"            logger.warning(\"UserPrefs file at \" + prefsFilePath + \" is not in the correct format. \"","lastModifiedDate":"2017-05-22"},{"lineNumber":151,"author":{"gitId":"-"},"content":"                    + \"Using default user prefs\");","lastModifiedDate":"2017-05-22"},{"lineNumber":152,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":154,"author":{"gitId":"-"},"content":"            logger.warning(\"Problem while reading from the file. Will be starting with an empty AddressBook\");","lastModifiedDate":"2016-10-12"},{"lineNumber":155,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        //Update prefs file in case it was missing to begin with or there are new/unused fields","lastModifiedDate":"2016-09-24"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":160,"author":{"gitId":"-"},"content":"            storage.saveUserPrefs(initializedPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":162,"author":{"gitId":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        return initializedPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    public void start(Stage primaryStage) {","lastModifiedDate":"2016-08-08"},{"lineNumber":170,"author":{"gitId":"mweeruien"},"content":"        logger.info(\"Starting Staff\u0027d \" + MainApp.VERSION);","lastModifiedDate":"2021-10-10"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        ui.start(primaryStage);","lastModifiedDate":"2016-09-25"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    public void stop() {","lastModifiedDate":"2016-08-08"},{"lineNumber":176,"author":{"gitId":"mweeruien"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d [ Stopping Staff\u0027d ] \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2021-10-10"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":178,"author":{"gitId":"-"},"content":"            storage.saveUserPrefs(model.getUserPrefs());","lastModifiedDate":"2018-12-06"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":180,"author":{"gitId":"-"},"content":"            logger.severe(\"Failed to save preferences \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":183,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"-":180,"mweeruien":3}},{"path":"src/main/java/seedu/address/commons/core/LogsCenter.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.core;","lastModifiedDate":"2016-09-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-09-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.logging.ConsoleHandler;","lastModifiedDate":"2017-01-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.FileHandler;","lastModifiedDate":"2017-01-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.logging.Level;","lastModifiedDate":"2017-01-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.logging.SimpleFormatter;","lastModifiedDate":"2017-01-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Configures and manages loggers and handlers, including their logging level","lastModifiedDate":"2016-09-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * Named {@link Logger}s can be obtained from this class\u003cbr\u003e","lastModifiedDate":"2016-09-29"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * These loggers have been configured to output messages to the console and a {@code .log} file by default,","lastModifiedDate":"2016-09-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * at the {@code INFO} level. A new {@code .log} file with a new numbering will be created after the log","lastModifiedDate":"2016-09-29"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * file reaches 5MB big, up to a maximum of 5 files.\u003cbr\u003e","lastModifiedDate":"2016-09-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class LogsCenter {","lastModifiedDate":"2016-09-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private static final int MAX_FILE_COUNT \u003d 5;","lastModifiedDate":"2016-09-28"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final int MAX_FILE_SIZE_IN_BYTES \u003d (int) (Math.pow(2, 20) * 5); // 5MB","lastModifiedDate":"2016-09-28"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final String LOG_FILE \u003d \"addressbook.log\";","lastModifiedDate":"2016-09-28"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static Level currentLogLevel \u003d Level.INFO;","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(LogsCenter.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static FileHandler fileHandler;","lastModifiedDate":"2016-09-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static ConsoleHandler consoleHandler;","lastModifiedDate":"2016-09-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Initializes with a custom log level (specified in the {@code config} object)","lastModifiedDate":"2016-09-29"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Loggers obtained *AFTER* this initialization will have their logging level changed\u003cbr\u003e","lastModifiedDate":"2016-09-29"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Logging levels for existing loggers will only be updated if the logger with the same name","lastModifiedDate":"2016-10-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * is requested again from the LogsCenter.","lastModifiedDate":"2016-10-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-29"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public static void init(Config config) {","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        currentLogLevel \u003d config.getLogLevel();","lastModifiedDate":"2016-09-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        logger.info(\"currentLogLevel: \" + currentLogLevel);","lastModifiedDate":"2016-09-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * Creates a logger with the given name.","lastModifiedDate":"2017-03-20"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public static Logger getLogger(String name) {","lastModifiedDate":"2016-09-28"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        Logger logger \u003d Logger.getLogger(name);","lastModifiedDate":"2016-09-28"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        logger.setUseParentHandlers(false);","lastModifiedDate":"2016-09-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        removeHandlers(logger);","lastModifiedDate":"2016-09-28"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        addConsoleHandler(logger);","lastModifiedDate":"2016-09-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        addFileHandler(logger);","lastModifiedDate":"2016-09-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return Logger.getLogger(name);","lastModifiedDate":"2016-09-28"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Creates a Logger for the given class name.","lastModifiedDate":"2017-01-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e Logger getLogger(Class\u003cT\u003e clazz) {","lastModifiedDate":"2017-01-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        if (clazz \u003d\u003d null) {","lastModifiedDate":"2017-04-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            return Logger.getLogger(\"\");","lastModifiedDate":"2017-04-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-04-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        return getLogger(clazz.getSimpleName());","lastModifiedDate":"2017-01-16"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * Adds the {@code consoleHandler} to the {@code logger}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * Creates the {@code consoleHandler} if it is null.","lastModifiedDate":"2017-08-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    private static void addConsoleHandler(Logger logger) {","lastModifiedDate":"2016-09-09"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        if (consoleHandler \u003d\u003d null) {","lastModifiedDate":"2017-04-05"},{"lineNumber":68,"author":{"gitId":"-"},"content":"            consoleHandler \u003d createConsoleHandler();","lastModifiedDate":"2017-04-05"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-04-05"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        logger.addHandler(consoleHandler);","lastModifiedDate":"2016-09-09"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * Remove all the handlers from {@code logger}.","lastModifiedDate":"2017-08-16"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    private static void removeHandlers(Logger logger) {","lastModifiedDate":"2016-09-28"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        Arrays.stream(logger.getHandlers())","lastModifiedDate":"2018-01-21"},{"lineNumber":78,"author":{"gitId":"-"},"content":"                .forEach(logger::removeHandler);","lastModifiedDate":"2018-01-21"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-28"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * Adds the {@code fileHandler} to the {@code logger}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * Creates {@code fileHandler} if it is null.","lastModifiedDate":"2017-08-16"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    private static void addFileHandler(Logger logger) {","lastModifiedDate":"2016-09-09"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-09"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            if (fileHandler \u003d\u003d null) {","lastModifiedDate":"2017-04-05"},{"lineNumber":88,"author":{"gitId":"-"},"content":"                fileHandler \u003d createFileHandler();","lastModifiedDate":"2017-04-05"},{"lineNumber":89,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-04-05"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            logger.addHandler(fileHandler);","lastModifiedDate":"2016-09-09"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-09"},{"lineNumber":92,"author":{"gitId":"-"},"content":"            logger.warning(\"Error adding file handler for logger.\");","lastModifiedDate":"2016-09-09"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * Creates a {@code FileHandler} for the log file.","lastModifiedDate":"2017-08-16"},{"lineNumber":98,"author":{"gitId":"IrvingHe000"},"content":"     *","lastModifiedDate":"2021-09-22"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     * @throws IOException if there are problems opening the file.","lastModifiedDate":"2017-08-16"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    private static FileHandler createFileHandler() throws IOException {","lastModifiedDate":"2016-09-09"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        FileHandler fileHandler \u003d new FileHandler(LOG_FILE, MAX_FILE_SIZE_IN_BYTES, MAX_FILE_COUNT, true);","lastModifiedDate":"2016-09-28"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        fileHandler.setFormatter(new SimpleFormatter());","lastModifiedDate":"2016-09-09"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        fileHandler.setLevel(currentLogLevel);","lastModifiedDate":"2016-09-09"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        return fileHandler;","lastModifiedDate":"2016-09-09"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    private static ConsoleHandler createConsoleHandler() {","lastModifiedDate":"2016-09-09"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        ConsoleHandler consoleHandler \u003d new ConsoleHandler();","lastModifiedDate":"2016-09-09"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        consoleHandler.setLevel(currentLogLevel);","lastModifiedDate":"2016-09-09"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        return consoleHandler;","lastModifiedDate":"2016-09-09"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"-":112,"IrvingHe000":1}},{"path":"src/main/java/seedu/address/commons/core/Messages.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.core;","lastModifiedDate":"2016-09-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Container for user visible messages.","lastModifiedDate":"2016-08-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class Messages {","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_UNKNOWN_COMMAND \u003d \"Unknown command\";","lastModifiedDate":"2016-09-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_COMMAND_FORMAT \u003d \"Invalid command format! \\n%1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_PERSON_DISPLAYED_INDEX \u003d \"The person index provided is invalid\";","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_PERSONS_LISTED_OVERVIEW \u003d \"%1$d persons listed!\";","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"Tetrerox"},"content":"    public static final String MESSAGE_INVALID_PERSON_SEARCHED \u003d \"This staff does not exist in the address book!\";","lastModifiedDate":"2021-10-13"},{"lineNumber":13,"author":{"gitId":"Gabau"},"content":"    public static final String MESSAGE_INVALID_DATE_PARSED \u003d \"This date cannot be parsed, expected: YYYY-MM-DD\";","lastModifiedDate":"2021-10-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":15,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"Tetrerox":1,"Gabau":1,"-":13}},{"path":"src/main/java/seedu/address/commons/core/Version.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.core;","lastModifiedDate":"2016-09-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2016-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonValue;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Represents a version with major, minor and patch number","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class Version implements Comparable\u003cVersion\u003e {","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public static final String VERSION_REGEX \u003d \"V(\\\\d+)\\\\.(\\\\d+)\\\\.(\\\\d+)(ea)?\";","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private static final String EXCEPTION_STRING_NOT_VERSION \u003d \"String is not a valid Version. %s\";","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private static final Pattern VERSION_PATTERN \u003d Pattern.compile(VERSION_REGEX);","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private final int major;","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private final int minor;","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private final int patch;","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private final boolean isEarlyAccess;","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * Constructs a {@code Version} with the given version details.","lastModifiedDate":"2020-05-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public Version(int major, int minor, int patch, boolean isEarlyAccess) {","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        this.major \u003d major;","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        this.minor \u003d minor;","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        this.patch \u003d patch;","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        this.isEarlyAccess \u003d isEarlyAccess;","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public int getMajor() {","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        return major;","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public int getMinor() {","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        return minor;","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public int getPatch() {","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return patch;","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public boolean isEarlyAccess() {","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        return isEarlyAccess;","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Parses a version number string in the format V1.2.3.","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"IrvingHe000"},"content":"     *","lastModifiedDate":"2021-09-22"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * @param versionString version number string","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * @return a Version object","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public static Version fromString(String versionString) throws IllegalArgumentException {","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        Matcher versionMatcher \u003d VERSION_PATTERN.matcher(versionString);","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        if (!versionMatcher.find()) {","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            throw new IllegalArgumentException(String.format(EXCEPTION_STRING_NOT_VERSION, versionString));","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        return new Version(Integer.parseInt(versionMatcher.group(1)),","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"                Integer.parseInt(versionMatcher.group(2)),","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"                Integer.parseInt(versionMatcher.group(3)),","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"                versionMatcher.group(4) \u003d\u003d null ? false : true);","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @JsonValue","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        return String.format(\"V%d.%d.%d%s\", major, minor, patch, isEarlyAccess ? \"ea\" : \"\");","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public int compareTo(Version other) {","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        if (major !\u003d other.major) {","lastModifiedDate":"2018-08-14"},{"lineNumber":79,"author":{"gitId":"-"},"content":"            return major - other.major;","lastModifiedDate":"2018-08-14"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        if (minor !\u003d other.minor) {","lastModifiedDate":"2018-08-14"},{"lineNumber":82,"author":{"gitId":"-"},"content":"            return minor - other.minor;","lastModifiedDate":"2018-08-14"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        if (patch !\u003d other.patch) {","lastModifiedDate":"2018-08-14"},{"lineNumber":85,"author":{"gitId":"-"},"content":"            return patch - other.patch;","lastModifiedDate":"2018-08-14"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        if (isEarlyAccess \u003d\u003d other.isEarlyAccess()) {","lastModifiedDate":"2018-08-14"},{"lineNumber":88,"author":{"gitId":"-"},"content":"            return 0;","lastModifiedDate":"2017-05-22"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        if (isEarlyAccess) {","lastModifiedDate":"2018-08-14"},{"lineNumber":91,"author":{"gitId":"-"},"content":"            return -1;","lastModifiedDate":"2017-05-22"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        return 1;","lastModifiedDate":"2017-05-22"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2016-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        if (obj \u003d\u003d null) {","lastModifiedDate":"2016-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        if (!(obj instanceof Version)) {","lastModifiedDate":"2016-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-08-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        final Version other \u003d (Version) obj;","lastModifiedDate":"2016-08-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        return compareTo(other) \u003d\u003d 0;","lastModifiedDate":"2018-08-14"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        String hash \u003d String.format(\"%03d%03d%03d\", major, minor, patch);","lastModifiedDate":"2016-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        if (!isEarlyAccess) {","lastModifiedDate":"2016-08-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"            hash \u003d \"1\" + hash;","lastModifiedDate":"2016-08-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        return Integer.parseInt(hash);","lastModifiedDate":"2016-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"-":116,"IrvingHe000":1}},{"path":"src/main/java/seedu/address/commons/util/CollectionUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.util;","lastModifiedDate":"2016-09-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-06-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2017-01-30"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2016-12-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Utility methods related to Collections","lastModifiedDate":"2016-09-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class CollectionUtil {","lastModifiedDate":"2016-09-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"IrvingHe000"},"content":"    /**","lastModifiedDate":"2021-09-22"},{"lineNumber":16,"author":{"gitId":"IrvingHe000"},"content":"     * @see #requireAllNonNull(Collection)","lastModifiedDate":"2021-09-22"},{"lineNumber":17,"author":{"gitId":"IrvingHe000"},"content":"     */","lastModifiedDate":"2021-09-22"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static void requireAllNonNull(Object... items) {","lastModifiedDate":"2017-05-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        requireNonNull(items);","lastModifiedDate":"2017-06-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        Stream.of(items).forEach(Objects::requireNonNull);","lastModifiedDate":"2017-05-19"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Throws NullPointerException if {@code items} or any element of {@code items} is null.","lastModifiedDate":"2017-05-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static void requireAllNonNull(Collection\u003c?\u003e items) {","lastModifiedDate":"2017-05-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        requireNonNull(items);","lastModifiedDate":"2017-06-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        items.forEach(Objects::requireNonNull);","lastModifiedDate":"2017-05-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Returns true if {@code items} contain any elements that are non-null.","lastModifiedDate":"2017-06-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public static boolean isAnyNonNull(Object... items) {","lastModifiedDate":"2017-06-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        return items !\u003d null \u0026\u0026 Arrays.stream(items).anyMatch(Objects::nonNull);","lastModifiedDate":"2017-06-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"-":34,"IrvingHe000":3}},{"path":"src/main/java/seedu/address/commons/util/FileUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.util;","lastModifiedDate":"2016-09-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Files;","lastModifiedDate":"2016-08-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.InvalidPathException;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Writes and reads files","lastModifiedDate":"2016-10-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class FileUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private static final String CHARSET \u003d \"UTF-8\";","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static boolean isFileExists(Path file) {","lastModifiedDate":"2018-04-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        return Files.exists(file) \u0026\u0026 Files.isRegularFile(file);","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Returns true if {@code path} can be converted into a {@code Path} via {@link Paths#get(String)},","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * otherwise returns false.","lastModifiedDate":"2018-04-21"},{"lineNumber":23,"author":{"gitId":"IrvingHe000"},"content":"     *","lastModifiedDate":"2021-09-22"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @param path A string representing the file path. Cannot be null.","lastModifiedDate":"2018-04-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static boolean isValidPath(String path) {","lastModifiedDate":"2018-04-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-04-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            Paths.get(path);","lastModifiedDate":"2018-04-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        } catch (InvalidPathException ipe) {","lastModifiedDate":"2018-04-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-04-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return true;","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * Creates a file if it does not exist along with its missing parent directories.","lastModifiedDate":"2017-08-16"},{"lineNumber":37,"author":{"gitId":"IrvingHe000"},"content":"     *","lastModifiedDate":"2021-09-22"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * @throws IOException if the file or directory cannot be created.","lastModifiedDate":"2017-08-16"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public static void createIfMissing(Path file) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        if (!isFileExists(file)) {","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            createFile(file);","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * Creates a file if it does not exist along with its missing parent directories.","lastModifiedDate":"2018-04-15"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public static void createFile(Path file) throws IOException {","lastModifiedDate":"2018-04-15"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        if (Files.exists(file)) {","lastModifiedDate":"2018-04-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            return;","lastModifiedDate":"2018-04-15"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        createParentDirsOfFile(file);","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        Files.createFile(file);","lastModifiedDate":"2018-04-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * Creates parent directories of file if it has a parent directory","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public static void createParentDirsOfFile(Path file) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        Path parentDir \u003d file.getParent();","lastModifiedDate":"2018-04-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        if (parentDir !\u003d null) {","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"            Files.createDirectories(parentDir);","lastModifiedDate":"2018-04-21"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     * Assumes file exists","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public static String readFromFile(Path file) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        return new String(Files.readAllBytes(file), CHARSET);","lastModifiedDate":"2018-04-21"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * Writes given string to a file.","lastModifiedDate":"2016-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Will create the file if it does not exist yet.","lastModifiedDate":"2016-08-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public static void writeToFile(Path file, String content) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        Files.write(file, content.getBytes(CHARSET));","lastModifiedDate":"2018-04-21"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"-":83,"IrvingHe000":2}},{"path":"src/main/java/seedu/address/commons/util/JsonUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.util;","lastModifiedDate":"2016-09-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Files;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.logging.Level;","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonAutoDetect;","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.PropertyAccessor;","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.core.JsonProcessingException;","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.DeserializationContext;","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.DeserializationFeature;","lastModifiedDate":"2016-09-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.ObjectMapper;","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.SerializationFeature;","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.deser.std.FromStringDeserializer;","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.module.SimpleModule;","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.ser.std.ToStringSerializer;","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-10-07"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2016-10-07"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":" * Converts a Java object instance to JSON and vice versa","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"public class JsonUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(JsonUtil.class);","lastModifiedDate":"2016-10-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private static ObjectMapper objectMapper \u003d new ObjectMapper().findAndRegisterModules()","lastModifiedDate":"2016-10-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            .configure(SerializationFeature.WRITE_DATES_AS_TIMESTAMPS, false)","lastModifiedDate":"2016-10-19"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            .configure(DeserializationFeature.FAIL_ON_UNKNOWN_PROPERTIES, false)","lastModifiedDate":"2016-10-19"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            .setVisibility(PropertyAccessor.ALL, JsonAutoDetect.Visibility.NONE)","lastModifiedDate":"2016-10-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            .setVisibility(PropertyAccessor.FIELD, JsonAutoDetect.Visibility.ANY)","lastModifiedDate":"2016-10-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            .registerModule(new SimpleModule(\"SimpleModule\")","lastModifiedDate":"2016-10-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                    .addSerializer(Level.class, new ToStringSerializer())","lastModifiedDate":"2016-10-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                    .addDeserializer(Level.class, new LevelDeserializer(Level.class)));","lastModifiedDate":"2016-10-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    static \u003cT\u003e void serializeObjectToJsonFile(Path jsonFile, T objectToSerialize) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        FileUtil.writeToFile(jsonFile, toJsonString(objectToSerialize));","lastModifiedDate":"2016-10-07"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    static \u003cT\u003e T deserializeObjectFromJsonFile(Path jsonFile, Class\u003cT\u003e classOfObjectToDeserialize)","lastModifiedDate":"2018-04-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            throws IOException {","lastModifiedDate":"2016-10-07"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        return fromJsonString(FileUtil.readFromFile(jsonFile), classOfObjectToDeserialize);","lastModifiedDate":"2016-10-07"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-07"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Returns the Json object from the given file or {@code Optional.empty()} object if the file is not found.","lastModifiedDate":"2016-10-07"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * If any values are missing from the file, default values will be used, as long as the file is a valid json file.","lastModifiedDate":"2016-10-07"},{"lineNumber":54,"author":{"gitId":"IrvingHe000"},"content":"     *","lastModifiedDate":"2021-09-22"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * @param filePath                   cannot be null.","lastModifiedDate":"2016-10-07"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * @param classOfObjectToDeserialize Json file has to correspond to the structure in the class given here.","lastModifiedDate":"2016-10-07"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * @throws DataConversionException if the file format is not as expected.","lastModifiedDate":"2016-10-07"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-07"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e Optional\u003cT\u003e readJsonFile(","lastModifiedDate":"2016-10-07"},{"lineNumber":60,"author":{"gitId":"-"},"content":"            Path filePath, Class\u003cT\u003e classOfObjectToDeserialize) throws DataConversionException {","lastModifiedDate":"2018-04-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2017-05-15"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        if (!Files.exists(filePath)) {","lastModifiedDate":"2018-04-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            logger.info(\"Json file \" + filePath + \" not found\");","lastModifiedDate":"2018-04-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            return Optional.empty();","lastModifiedDate":"2016-10-07"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-07"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        T jsonFile;","lastModifiedDate":"2016-10-07"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-10-07"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            jsonFile \u003d deserializeObjectFromJsonFile(filePath, classOfObjectToDeserialize);","lastModifiedDate":"2018-04-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-10-07"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            logger.warning(\"Error reading from jsonFile file \" + filePath + \": \" + e);","lastModifiedDate":"2018-04-21"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            throw new DataConversionException(e);","lastModifiedDate":"2016-10-07"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-07"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        return Optional.of(jsonFile);","lastModifiedDate":"2016-10-07"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-07"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * Saves the Json object to the specified file.","lastModifiedDate":"2016-10-07"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * Overwrites existing file if it exists, creates a new file if it doesn\u0027t.","lastModifiedDate":"2016-10-07"},{"lineNumber":83,"author":{"gitId":"IrvingHe000"},"content":"     *","lastModifiedDate":"2021-09-22"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * @param jsonFile cannot be null","lastModifiedDate":"2016-10-07"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * @param filePath cannot be null","lastModifiedDate":"2016-10-07"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * @throws IOException if there was an error during writing to the file","lastModifiedDate":"2016-10-07"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-07"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e void saveJsonFile(T jsonFile, Path filePath) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2017-05-15"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        requireNonNull(jsonFile);","lastModifiedDate":"2017-05-15"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        serializeObjectToJsonFile(filePath, jsonFile);","lastModifiedDate":"2018-04-21"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-19"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * Converts a given string representation of a JSON data to instance of a class","lastModifiedDate":"2016-10-19"},{"lineNumber":98,"author":{"gitId":"IrvingHe000"},"content":"     *","lastModifiedDate":"2021-09-22"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     * @param \u003cT\u003e The generic type to create an instance of","lastModifiedDate":"2016-10-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     * @return The instance of T with the specified values in the JSON string","lastModifiedDate":"2016-10-19"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e T fromJsonString(String json, Class\u003cT\u003e instanceClass) throws IOException {","lastModifiedDate":"2016-10-19"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        return objectMapper.readValue(json, instanceClass);","lastModifiedDate":"2016-10-19"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-19"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-19"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     * Converts a given instance of a class into its JSON data string representation","lastModifiedDate":"2016-10-19"},{"lineNumber":108,"author":{"gitId":"IrvingHe000"},"content":"     *","lastModifiedDate":"2021-09-22"},{"lineNumber":109,"author":{"gitId":"-"},"content":"     * @param instance The T object to be converted into the JSON string","lastModifiedDate":"2016-10-19"},{"lineNumber":110,"author":{"gitId":"-"},"content":"     * @param \u003cT\u003e      The generic type to create an instance of","lastModifiedDate":"2016-10-19"},{"lineNumber":111,"author":{"gitId":"-"},"content":"     * @return JSON data representation of the given class instance, in string","lastModifiedDate":"2016-10-19"},{"lineNumber":112,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e String toJsonString(T instance) throws JsonProcessingException {","lastModifiedDate":"2016-10-19"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        return objectMapper.writerWithDefaultPrettyPrinter().writeValueAsString(instance);","lastModifiedDate":"2016-10-19"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-19"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":118,"author":{"gitId":"-"},"content":"     * Contains methods that retrieve logging level from serialized string.","lastModifiedDate":"2017-08-16"},{"lineNumber":119,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    private static class LevelDeserializer extends FromStringDeserializer\u003cLevel\u003e {","lastModifiedDate":"2016-08-08"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        protected LevelDeserializer(Class\u003c?\u003e vc) {","lastModifiedDate":"2016-08-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"            super(vc);","lastModifiedDate":"2016-08-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        protected Level _deserialize(String value, DeserializationContext ctxt) {","lastModifiedDate":"2018-08-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"            return getLoggingLevel(value);","lastModifiedDate":"2016-08-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2016-08-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"         * Gets the logging level that matches loggingLevelString","lastModifiedDate":"2016-08-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"         * \u003cp\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"         * Returns null if there are no matches","lastModifiedDate":"2016-08-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-08-08"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        private Level getLoggingLevel(String loggingLevelString) {","lastModifiedDate":"2016-08-08"},{"lineNumber":137,"author":{"gitId":"-"},"content":"            return Level.parse(loggingLevelString);","lastModifiedDate":"2016-09-09"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        public Class\u003cLevel\u003e handledType() {","lastModifiedDate":"2016-08-08"},{"lineNumber":142,"author":{"gitId":"-"},"content":"            return Level.class;","lastModifiedDate":"2016-08-08"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":146,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"-":142,"IrvingHe000":4}},{"path":"src/main/java/seedu/address/commons/util/StringUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.util;","lastModifiedDate":"2016-09-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.io.PrintWriter;","lastModifiedDate":"2016-09-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.StringWriter;","lastModifiedDate":"2016-09-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Helper functions for handling strings.","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class StringUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * Returns true if the {@code sentence} contains the {@code word}.","lastModifiedDate":"2016-10-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * Ignores case, but a full word match is required.","lastModifiedDate":"2016-10-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * \u003cbr\u003eexamples:\u003cpre\u003e","lastModifiedDate":"2016-10-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"abc\") \u003d\u003d true","lastModifiedDate":"2016-10-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"DEF\") \u003d\u003d true","lastModifiedDate":"2016-10-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"AB\") \u003d\u003d false //not a full word match","lastModifiedDate":"2016-10-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     *       \u003c/pre\u003e","lastModifiedDate":"2016-10-13"},{"lineNumber":23,"author":{"gitId":"IrvingHe000"},"content":"     *","lastModifiedDate":"2021-09-22"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @param sentence cannot be null","lastModifiedDate":"2016-10-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * @param word     cannot be null, cannot be empty, must be a single word","lastModifiedDate":"2016-10-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public static boolean containsWordIgnoreCase(String sentence, String word) {","lastModifiedDate":"2016-10-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        requireNonNull(sentence);","lastModifiedDate":"2017-05-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        requireNonNull(word);","lastModifiedDate":"2017-05-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        String preppedWord \u003d word.trim();","lastModifiedDate":"2016-10-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        checkArgument(!preppedWord.isEmpty(), \"Word parameter cannot be empty\");","lastModifiedDate":"2017-05-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        checkArgument(preppedWord.split(\"\\\\s+\").length \u003d\u003d 1, \"Word parameter should be a single word\");","lastModifiedDate":"2017-05-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        String preppedSentence \u003d sentence;","lastModifiedDate":"2016-10-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        String[] wordsInPreppedSentence \u003d preppedSentence.split(\"\\\\s+\");","lastModifiedDate":"2016-10-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return Arrays.stream(wordsInPreppedSentence)","lastModifiedDate":"2018-01-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                .anyMatch(preppedWord::equalsIgnoreCase);","lastModifiedDate":"2018-01-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * Returns a detailed message of the t, including the stack trace.","lastModifiedDate":"2016-09-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static String getDetails(Throwable t) {","lastModifiedDate":"2016-09-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        requireNonNull(t);","lastModifiedDate":"2017-05-15"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        StringWriter sw \u003d new StringWriter();","lastModifiedDate":"2016-09-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        t.printStackTrace(new PrintWriter(sw));","lastModifiedDate":"2016-09-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return t.getMessage() + \"\\n\" + sw.toString();","lastModifiedDate":"2016-09-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-22"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Returns true if {@code s} represents a non-zero unsigned integer","lastModifiedDate":"2017-06-02"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * e.g. 1, 2, 3, ..., {@code Integer.MAX_VALUE} \u003cbr\u003e","lastModifiedDate":"2017-06-02"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * Will return false for any other non-null string input","lastModifiedDate":"2017-06-02"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * e.g. empty string, \"-1\", \"0\", \"+1\", and \" 2 \" (untrimmed), \"3 0\" (contains whitespace), \"1 a\" (contains letters)","lastModifiedDate":"2017-06-02"},{"lineNumber":57,"author":{"gitId":"IrvingHe000"},"content":"     *","lastModifiedDate":"2021-09-22"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * @throws NullPointerException if {@code s} is null.","lastModifiedDate":"2017-06-02"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-22"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public static boolean isNonZeroUnsignedInteger(String s) {","lastModifiedDate":"2017-06-02"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        requireNonNull(s);","lastModifiedDate":"2017-06-02"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-06-02"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            int value \u003d Integer.parseInt(s);","lastModifiedDate":"2017-06-02"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            return value \u003e 0 \u0026\u0026 !s.startsWith(\"+\"); // \"+1\" is successfully parsed by Integer#parseInt(String)","lastModifiedDate":"2017-06-02"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        } catch (NumberFormatException nfe) {","lastModifiedDate":"2017-06-02"},{"lineNumber":67,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-06-02"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-06-02"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":70,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"-":68,"IrvingHe000":2}},{"path":"src/main/java/seedu/address/logic/Logic.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2016-09-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-12-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2021-09-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * API of the Logic component","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public interface Logic {","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2016-09-25"},{"lineNumber":19,"author":{"gitId":"IrvingHe000"},"content":"     *","lastModifiedDate":"2021-09-22"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * @param commandText The command as entered by the user.","lastModifiedDate":"2016-09-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * @return the result of the command execution.","lastModifiedDate":"2016-09-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @throws ParseException   If an error occurs during parsing.","lastModifiedDate":"2017-03-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    CommandResult execute(String commandText) throws CommandException, ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Returns the AddressBook.","lastModifiedDate":"2018-12-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * @see seedu.address.model.Model#getAddressBook()","lastModifiedDate":"2018-12-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    ReadOnlyAddressBook getAddressBook();","lastModifiedDate":"2018-12-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":34,"author":{"gitId":"IrvingHe000"},"content":"    /**","lastModifiedDate":"2021-09-22"},{"lineNumber":35,"author":{"gitId":"fullfatwasabi"},"content":"     * Returns an unmodifiable view of the filtered list of persons","lastModifiedDate":"2021-09-22"},{"lineNumber":36,"author":{"gitId":"IrvingHe000"},"content":"     */","lastModifiedDate":"2021-09-22"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    ObservableList\u003cPerson\u003e getFilteredPersonList();","lastModifiedDate":"2021-09-22"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-26"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * Set the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"fullfatwasabi":1,"-":49,"IrvingHe000":3}},{"path":"src/main/java/seedu/address/logic/commands/AddCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-05-09"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-05-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-05-09"},{"lineNumber":8,"author":{"gitId":"fullfatwasabi"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ROLE;","lastModifiedDate":"2021-10-09"},{"lineNumber":9,"author":{"gitId":"fullfatwasabi"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_SALARY;","lastModifiedDate":"2021-10-13"},{"lineNumber":10,"author":{"gitId":"fullfatwasabi"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_STATUS;","lastModifiedDate":"2021-10-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-05-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-01-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * Adds a person to the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"add\";","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds a person to the address book. \"","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"            + \"Parameters: \"","lastModifiedDate":"2017-06-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"            + PREFIX_NAME + \"NAME \"","lastModifiedDate":"2017-06-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"PHONE \"","lastModifiedDate":"2017-05-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"EMAIL \"","lastModifiedDate":"2017-05-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            + PREFIX_ADDRESS + \"ADDRESS \"","lastModifiedDate":"2017-05-09"},{"lineNumber":30,"author":{"gitId":"fullfatwasabi"},"content":"            + PREFIX_SALARY + \"SALARY \"","lastModifiedDate":"2021-10-13"},{"lineNumber":31,"author":{"gitId":"fullfatwasabi"},"content":"            + \"[\" + PREFIX_ROLE + \"ROLE]... \"","lastModifiedDate":"2021-10-12"},{"lineNumber":32,"author":{"gitId":"fullfatwasabi"},"content":"            + \"[\" + PREFIX_STATUS + \"STATUS] \"","lastModifiedDate":"2021-10-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2017-05-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2017-06-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            + PREFIX_NAME + \"John Doe \"","lastModifiedDate":"2017-06-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"98765432 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"johnd@example.com \"","lastModifiedDate":"2017-05-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            + PREFIX_ADDRESS + \"311, Clementi Ave 2, #02-25 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":39,"author":{"gitId":"fullfatwasabi"},"content":"            + PREFIX_SALARY + \"100 \"","lastModifiedDate":"2021-10-13"},{"lineNumber":40,"author":{"gitId":"fullfatwasabi"},"content":"            + PREFIX_ROLE + \"bartender \"","lastModifiedDate":"2021-10-09"},{"lineNumber":41,"author":{"gitId":"fullfatwasabi"},"content":"            + PREFIX_ROLE + \"kitchen \"","lastModifiedDate":"2021-10-12"},{"lineNumber":42,"author":{"gitId":"fullfatwasabi"},"content":"            + PREFIX_STATUS + \"fulltime \"","lastModifiedDate":"2021-10-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            + PREFIX_TAG + \"friends \"","lastModifiedDate":"2017-05-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            + PREFIX_TAG + \"owesMoney\";","lastModifiedDate":"2017-05-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New person added: %1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"This person already exists in the address book\";","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    private final Person toAdd;","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Creates an AddCommand to add the specified {@code Person}","lastModifiedDate":"2018-01-10"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":54,"author":{"gitId":"IrvingHe000"},"content":"    public AddCommand(Person staff) {","lastModifiedDate":"2021-09-23"},{"lineNumber":55,"author":{"gitId":"IrvingHe000"},"content":"        requireNonNull(staff);","lastModifiedDate":"2021-09-23"},{"lineNumber":56,"author":{"gitId":"IrvingHe000"},"content":"        toAdd \u003d staff;","lastModifiedDate":"2021-09-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2017-05-15"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        if (model.hasPerson(toAdd)) {","lastModifiedDate":"2018-08-07"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2018-08-07"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        model.addPerson(toAdd);","lastModifiedDate":"2016-09-25"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, toAdd));","lastModifiedDate":"2016-08-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-22"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-22"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-22"},{"lineNumber":74,"author":{"gitId":"-"},"content":"                || (other instanceof AddCommand // instanceof handles nulls","lastModifiedDate":"2017-06-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"                \u0026\u0026 toAdd.equals(((AddCommand) other).toAdd));","lastModifiedDate":"2017-06-22"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":77,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"fullfatwasabi":10,"-":64,"IrvingHe000":3}},{"path":"src/main/java/seedu/address/logic/commands/AddShiftCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"IrvingHe000"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-10-10"},{"lineNumber":2,"author":{"gitId":"IrvingHe000"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":3,"author":{"gitId":"IrvingHe000"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-10"},{"lineNumber":4,"author":{"gitId":"IrvingHe000"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DAY_SHIFT;","lastModifiedDate":"2021-10-10"},{"lineNumber":5,"author":{"gitId":"IrvingHe000"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_INDEX;","lastModifiedDate":"2021-10-10"},{"lineNumber":6,"author":{"gitId":"IrvingHe000"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2021-10-10"},{"lineNumber":7,"author":{"gitId":"IrvingHe000"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2021-10-10"},{"lineNumber":8,"author":{"gitId":"IrvingHe000"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":9,"author":{"gitId":"IrvingHe000"},"content":"import java.time.DayOfWeek;","lastModifiedDate":"2021-10-10"},{"lineNumber":10,"author":{"gitId":"IrvingHe000"},"content":"import java.util.List;","lastModifiedDate":"2021-10-10"},{"lineNumber":11,"author":{"gitId":"IrvingHe000"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":12,"author":{"gitId":"IrvingHe000"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2021-10-10"},{"lineNumber":13,"author":{"gitId":"IrvingHe000"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-10-10"},{"lineNumber":14,"author":{"gitId":"IrvingHe000"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-10"},{"lineNumber":15,"author":{"gitId":"IrvingHe000"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-10-10"},{"lineNumber":16,"author":{"gitId":"IrvingHe000"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2021-10-10"},{"lineNumber":17,"author":{"gitId":"IrvingHe000"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2021-10-10"},{"lineNumber":18,"author":{"gitId":"IrvingHe000"},"content":"import seedu.address.model.person.Slot;","lastModifiedDate":"2021-10-10"},{"lineNumber":19,"author":{"gitId":"IrvingHe000"},"content":"import seedu.address.model.person.exceptions.DuplicateShiftException;","lastModifiedDate":"2021-10-10"},{"lineNumber":20,"author":{"gitId":"IrvingHe000"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":21,"author":{"gitId":"IrvingHe000"},"content":"/**","lastModifiedDate":"2021-10-10"},{"lineNumber":22,"author":{"gitId":"IrvingHe000"},"content":" * Adds a shift to a staff\u0027s schedule.","lastModifiedDate":"2021-10-10"},{"lineNumber":23,"author":{"gitId":"IrvingHe000"},"content":" */","lastModifiedDate":"2021-10-10"},{"lineNumber":24,"author":{"gitId":"IrvingHe000"},"content":"public class AddShiftCommand extends Command {","lastModifiedDate":"2021-10-10"},{"lineNumber":25,"author":{"gitId":"IrvingHe000"},"content":"    public static final String COMMAND_WORD \u003d \"addShift\";","lastModifiedDate":"2021-10-10"},{"lineNumber":26,"author":{"gitId":"IrvingHe000"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":27,"author":{"gitId":"IrvingHe000"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": adds a shift to the staff identified \"","lastModifiedDate":"2021-10-10"},{"lineNumber":28,"author":{"gitId":"IrvingHe000"},"content":"            + \"by\\nthe index number used in the displayed staff list or\\nthe name of staff.\" + \"\\n\"","lastModifiedDate":"2021-10-10"},{"lineNumber":29,"author":{"gitId":"IrvingHe000"},"content":"            + \"Parameters: \"","lastModifiedDate":"2021-10-10"},{"lineNumber":30,"author":{"gitId":"IrvingHe000"},"content":"            + \"[\" + PREFIX_INDEX + \"INDEX] or \"","lastModifiedDate":"2021-10-10"},{"lineNumber":31,"author":{"gitId":"IrvingHe000"},"content":"            + \"[\" + PREFIX_NAME + \"NAME] + \"","lastModifiedDate":"2021-10-10"},{"lineNumber":32,"author":{"gitId":"IrvingHe000"},"content":"            + \"[\" + PREFIX_DAY_SHIFT + \"DAY AND\\nSLOT OF A SHIFT]\" + \"\\n\"","lastModifiedDate":"2021-10-10"},{"lineNumber":33,"author":{"gitId":"IrvingHe000"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2021-10-10"},{"lineNumber":34,"author":{"gitId":"IrvingHe000"},"content":"            + PREFIX_INDEX + \"1 \"","lastModifiedDate":"2021-10-10"},{"lineNumber":35,"author":{"gitId":"IrvingHe000"},"content":"            + PREFIX_DAY_SHIFT + \"monday-1\" + \"\\n\"","lastModifiedDate":"2021-10-10"},{"lineNumber":36,"author":{"gitId":"IrvingHe000"},"content":"            + \"OR: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2021-10-10"},{"lineNumber":37,"author":{"gitId":"IrvingHe000"},"content":"            + PREFIX_NAME + \"JOE \"","lastModifiedDate":"2021-10-10"},{"lineNumber":38,"author":{"gitId":"IrvingHe000"},"content":"            + PREFIX_DAY_SHIFT + \"TUESDAY-0\";","lastModifiedDate":"2021-10-10"},{"lineNumber":39,"author":{"gitId":"IrvingHe000"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":40,"author":{"gitId":"IrvingHe000"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":41,"author":{"gitId":"IrvingHe000"},"content":"    public static final String MESSAGE_ADD_SHIFT_SUCCESS \u003d \"New shift added to the schedule of %s: %s, %s.\";","lastModifiedDate":"2021-10-10"},{"lineNumber":42,"author":{"gitId":"IrvingHe000"},"content":"    public static final String MESSAGE_DUPLICATE_SHIFT \u003d \"This shift already exists in the staff\u0027s schedule.\";","lastModifiedDate":"2021-10-10"},{"lineNumber":43,"author":{"gitId":"IrvingHe000"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":44,"author":{"gitId":"IrvingHe000"},"content":"    private final Index index;","lastModifiedDate":"2021-10-10"},{"lineNumber":45,"author":{"gitId":"IrvingHe000"},"content":"    private final Name name;","lastModifiedDate":"2021-10-10"},{"lineNumber":46,"author":{"gitId":"IrvingHe000"},"content":"    private final DayOfWeek dayOfWeek;","lastModifiedDate":"2021-10-10"},{"lineNumber":47,"author":{"gitId":"IrvingHe000"},"content":"    private final Slot slot;","lastModifiedDate":"2021-10-10"},{"lineNumber":48,"author":{"gitId":"IrvingHe000"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":49,"author":{"gitId":"IrvingHe000"},"content":"    /**","lastModifiedDate":"2021-10-10"},{"lineNumber":50,"author":{"gitId":"IrvingHe000"},"content":"     * Creates an AddShiftCommand to add the specified {@code Shift} to a {@code Person}.","lastModifiedDate":"2021-10-10"},{"lineNumber":51,"author":{"gitId":"IrvingHe000"},"content":"     */","lastModifiedDate":"2021-10-10"},{"lineNumber":52,"author":{"gitId":"IrvingHe000"},"content":"    public AddShiftCommand(Index index, Name name, String shiftDateAndSlot) {","lastModifiedDate":"2021-10-10"},{"lineNumber":53,"author":{"gitId":"IrvingHe000"},"content":"        requireNonNull(shiftDateAndSlot);","lastModifiedDate":"2021-10-10"},{"lineNumber":54,"author":{"gitId":"IrvingHe000"},"content":"        this.index \u003d index;","lastModifiedDate":"2021-10-10"},{"lineNumber":55,"author":{"gitId":"IrvingHe000"},"content":"        this.name \u003d name;","lastModifiedDate":"2021-10-10"},{"lineNumber":56,"author":{"gitId":"IrvingHe000"},"content":"        String[] strings \u003d shiftDateAndSlot.split(\"-\");","lastModifiedDate":"2021-10-10"},{"lineNumber":57,"author":{"gitId":"IrvingHe000"},"content":"        dayOfWeek \u003d DayOfWeek.valueOf(strings[0].toUpperCase());","lastModifiedDate":"2021-10-10"},{"lineNumber":58,"author":{"gitId":"IrvingHe000"},"content":"        slot \u003d Slot.getSlotByOrder(strings[1]);","lastModifiedDate":"2021-10-10"},{"lineNumber":59,"author":{"gitId":"IrvingHe000"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":60,"author":{"gitId":"IrvingHe000"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":61,"author":{"gitId":"IrvingHe000"},"content":"    @Override","lastModifiedDate":"2021-10-10"},{"lineNumber":62,"author":{"gitId":"IrvingHe000"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-10-10"},{"lineNumber":63,"author":{"gitId":"IrvingHe000"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-10-10"},{"lineNumber":64,"author":{"gitId":"IrvingHe000"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2021-10-10"},{"lineNumber":65,"author":{"gitId":"IrvingHe000"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":66,"author":{"gitId":"IrvingHe000"},"content":"        Person staffToEdit;","lastModifiedDate":"2021-10-10"},{"lineNumber":67,"author":{"gitId":"IrvingHe000"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":68,"author":{"gitId":"IrvingHe000"},"content":"        if (index !\u003d null) {","lastModifiedDate":"2021-10-10"},{"lineNumber":69,"author":{"gitId":"IrvingHe000"},"content":"            if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2021-10-10"},{"lineNumber":70,"author":{"gitId":"IrvingHe000"},"content":"                throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2021-10-10"},{"lineNumber":71,"author":{"gitId":"IrvingHe000"},"content":"            }","lastModifiedDate":"2021-10-10"},{"lineNumber":72,"author":{"gitId":"IrvingHe000"},"content":"            staffToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2021-10-10"},{"lineNumber":73,"author":{"gitId":"IrvingHe000"},"content":"        } else {","lastModifiedDate":"2021-10-10"},{"lineNumber":74,"author":{"gitId":"IrvingHe000"},"content":"            if (name !\u003d null) {","lastModifiedDate":"2021-10-10"},{"lineNumber":75,"author":{"gitId":"IrvingHe000"},"content":"                staffToEdit \u003d model.findPersonByName(name);","lastModifiedDate":"2021-10-10"},{"lineNumber":76,"author":{"gitId":"IrvingHe000"},"content":"            } else {","lastModifiedDate":"2021-10-10"},{"lineNumber":77,"author":{"gitId":"IrvingHe000"},"content":"                throw new CommandException(MESSAGE_USAGE);","lastModifiedDate":"2021-10-10"},{"lineNumber":78,"author":{"gitId":"IrvingHe000"},"content":"            }","lastModifiedDate":"2021-10-10"},{"lineNumber":79,"author":{"gitId":"IrvingHe000"},"content":"        }","lastModifiedDate":"2021-10-10"},{"lineNumber":80,"author":{"gitId":"IrvingHe000"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":81,"author":{"gitId":"IrvingHe000"},"content":"        if (staffToEdit \u003d\u003d null || !model.hasPerson(staffToEdit)) {","lastModifiedDate":"2021-10-10"},{"lineNumber":82,"author":{"gitId":"Tetrerox"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_SEARCHED);","lastModifiedDate":"2021-10-13"},{"lineNumber":83,"author":{"gitId":"IrvingHe000"},"content":"        }","lastModifiedDate":"2021-10-10"},{"lineNumber":84,"author":{"gitId":"IrvingHe000"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":85,"author":{"gitId":"IrvingHe000"},"content":"        try {","lastModifiedDate":"2021-10-10"},{"lineNumber":86,"author":{"gitId":"IrvingHe000"},"content":"            model.addShift(staffToEdit, dayOfWeek, slot);","lastModifiedDate":"2021-10-10"},{"lineNumber":87,"author":{"gitId":"IrvingHe000"},"content":"        } catch (DuplicateShiftException de) {","lastModifiedDate":"2021-10-10"},{"lineNumber":88,"author":{"gitId":"IrvingHe000"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_SHIFT);","lastModifiedDate":"2021-10-10"},{"lineNumber":89,"author":{"gitId":"IrvingHe000"},"content":"        }","lastModifiedDate":"2021-10-10"},{"lineNumber":90,"author":{"gitId":"IrvingHe000"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":91,"author":{"gitId":"IrvingHe000"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2021-10-10"},{"lineNumber":92,"author":{"gitId":"IrvingHe000"},"content":"        return new CommandResult(String.format(MESSAGE_ADD_SHIFT_SUCCESS, staffToEdit.getName(), dayOfWeek, slot));","lastModifiedDate":"2021-10-10"},{"lineNumber":93,"author":{"gitId":"IrvingHe000"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":94,"author":{"gitId":"IrvingHe000"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":95,"author":{"gitId":"IrvingHe000"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":96,"author":{"gitId":"IrvingHe000"},"content":"    @Override","lastModifiedDate":"2021-10-10"},{"lineNumber":97,"author":{"gitId":"IrvingHe000"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-10"},{"lineNumber":98,"author":{"gitId":"IrvingHe000"},"content":"        // short circuit if same object","lastModifiedDate":"2021-10-10"},{"lineNumber":99,"author":{"gitId":"IrvingHe000"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2021-10-10"},{"lineNumber":100,"author":{"gitId":"IrvingHe000"},"content":"            return true;","lastModifiedDate":"2021-10-10"},{"lineNumber":101,"author":{"gitId":"IrvingHe000"},"content":"        }","lastModifiedDate":"2021-10-10"},{"lineNumber":102,"author":{"gitId":"IrvingHe000"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":103,"author":{"gitId":"IrvingHe000"},"content":"        // instanceof handles nulls","lastModifiedDate":"2021-10-10"},{"lineNumber":104,"author":{"gitId":"IrvingHe000"},"content":"        if (!(other instanceof AddShiftCommand)) {","lastModifiedDate":"2021-10-10"},{"lineNumber":105,"author":{"gitId":"IrvingHe000"},"content":"            return false;","lastModifiedDate":"2021-10-10"},{"lineNumber":106,"author":{"gitId":"IrvingHe000"},"content":"        }","lastModifiedDate":"2021-10-10"},{"lineNumber":107,"author":{"gitId":"IrvingHe000"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":108,"author":{"gitId":"IrvingHe000"},"content":"        // state check","lastModifiedDate":"2021-10-10"},{"lineNumber":109,"author":{"gitId":"IrvingHe000"},"content":"        AddShiftCommand command \u003d (AddShiftCommand) other;","lastModifiedDate":"2021-10-10"},{"lineNumber":110,"author":{"gitId":"IrvingHe000"},"content":"        return ((index \u003d\u003d null \u0026\u0026 command.index \u003d\u003d null) || (index !\u003d null \u0026\u0026 index.equals(command.index)))","lastModifiedDate":"2021-10-10"},{"lineNumber":111,"author":{"gitId":"IrvingHe000"},"content":"                \u0026\u0026 ((name \u003d\u003d null \u0026\u0026 command.name \u003d\u003d null) || (name !\u003d null \u0026\u0026 name.equals(command.name)))","lastModifiedDate":"2021-10-10"},{"lineNumber":112,"author":{"gitId":"IrvingHe000"},"content":"                \u0026\u0026 dayOfWeek.equals(command.dayOfWeek)","lastModifiedDate":"2021-10-10"},{"lineNumber":113,"author":{"gitId":"IrvingHe000"},"content":"                \u0026\u0026 slot.equals(command.slot);","lastModifiedDate":"2021-10-10"},{"lineNumber":114,"author":{"gitId":"IrvingHe000"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":115,"author":{"gitId":"IrvingHe000"},"content":"}","lastModifiedDate":"2021-10-10"}],"authorContributionMap":{"Tetrerox":1,"IrvingHe000":114}},{"path":"src/main/java/seedu/address/logic/commands/CommandResult.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2018-12-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Represents the result of a command execution.","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class CommandResult {","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private final String feedbackToUser;","lastModifiedDate":"2018-12-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"IrvingHe000"},"content":"    /**","lastModifiedDate":"2021-09-22"},{"lineNumber":15,"author":{"gitId":"IrvingHe000"},"content":"     * Help information should be shown to the user.","lastModifiedDate":"2021-09-22"},{"lineNumber":16,"author":{"gitId":"IrvingHe000"},"content":"     */","lastModifiedDate":"2021-09-22"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private final boolean showHelp;","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"IrvingHe000"},"content":"    /**","lastModifiedDate":"2021-09-22"},{"lineNumber":20,"author":{"gitId":"IrvingHe000"},"content":"     * The application should exit.","lastModifiedDate":"2021-09-22"},{"lineNumber":21,"author":{"gitId":"IrvingHe000"},"content":"     */","lastModifiedDate":"2021-09-22"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private final boolean exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Constructs a {@code CommandResult} with the specified fields.","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public CommandResult(String feedbackToUser, boolean showHelp, boolean exit) {","lastModifiedDate":"2018-12-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        this.feedbackToUser \u003d requireNonNull(feedbackToUser);","lastModifiedDate":"2017-05-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        this.showHelp \u003d showHelp;","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        this.exit \u003d exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Constructs a {@code CommandResult} with the specified {@code feedbackToUser},","lastModifiedDate":"2018-12-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * and other fields set to their default value.","lastModifiedDate":"2018-12-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public CommandResult(String feedbackToUser) {","lastModifiedDate":"2018-12-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        this(feedbackToUser, false, false);","lastModifiedDate":"2018-12-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public String getFeedbackToUser() {","lastModifiedDate":"2018-12-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return feedbackToUser;","lastModifiedDate":"2018-12-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public boolean isShowHelp() {","lastModifiedDate":"2018-12-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        return showHelp;","lastModifiedDate":"2018-12-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public boolean isExit() {","lastModifiedDate":"2018-12-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        return exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2018-12-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-12-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-12-09"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2018-12-09"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        if (!(other instanceof CommandResult)) {","lastModifiedDate":"2018-12-09"},{"lineNumber":61,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-12-09"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        CommandResult otherCommandResult \u003d (CommandResult) other;","lastModifiedDate":"2018-12-09"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        return feedbackToUser.equals(otherCommandResult.feedbackToUser)","lastModifiedDate":"2018-12-09"},{"lineNumber":66,"author":{"gitId":"-"},"content":"                \u0026\u0026 showHelp \u003d\u003d otherCommandResult.showHelp","lastModifiedDate":"2018-12-09"},{"lineNumber":67,"author":{"gitId":"-"},"content":"                \u0026\u0026 exit \u003d\u003d otherCommandResult.exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2018-12-09"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        return Objects.hash(feedbackToUser, showHelp, exit);","lastModifiedDate":"2018-12-09"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":75,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"-":69,"IrvingHe000":6}},{"path":"src/main/java/seedu/address/logic/commands/DeleteCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"Tetrerox"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_INDEX;","lastModifiedDate":"2021-10-09"},{"lineNumber":5,"author":{"gitId":"Tetrerox"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2021-10-10"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":7,"author":{"gitId":"Tetrerox"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-10"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-09-01"},{"lineNumber":9,"author":{"gitId":"Tetrerox"},"content":"import java.util.Objects;","lastModifiedDate":"2021-10-10"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2016-09-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":15,"author":{"gitId":"Tetrerox"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2021-10-10"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":17,"author":{"gitId":"Tetrerox"},"content":"import seedu.address.model.person.Role;","lastModifiedDate":"2021-10-10"},{"lineNumber":18,"author":{"gitId":"Tetrerox"},"content":"import seedu.address.model.person.Status;","lastModifiedDate":"2021-10-10"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"Tetrerox"},"content":" * Deletes a person identified using it\u0027s displayed index or name from the address book.","lastModifiedDate":"2021-10-10"},{"lineNumber":22,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"delete\";","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"Tetrerox"},"content":"    public static final int INVALID_INDEX \u003d -1;","lastModifiedDate":"2021-10-10"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"Tetrerox"},"content":"            + \": Deletes the person identified by the index number or name used in the displayed person list.\\n\"","lastModifiedDate":"2021-10-10"},{"lineNumber":30,"author":{"gitId":"Tetrerox"},"content":"            + \"Parameters: INDEX (must be a positive integer) OR NAME but not both\\n\"","lastModifiedDate":"2021-10-10"},{"lineNumber":31,"author":{"gitId":"Tetrerox"},"content":"            + \"Examples: \" + COMMAND_WORD + \" \" + PREFIX_INDEX + \"1\\n\"","lastModifiedDate":"2021-10-10"},{"lineNumber":32,"author":{"gitId":"Tetrerox"},"content":"            + COMMAND_WORD + \" \" + PREFIX_NAME + \"Alex Yeoh\";","lastModifiedDate":"2021-10-10"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DELETE_PERSON_SUCCESS \u003d \"Deleted Person: %1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"Tetrerox"},"content":"    public static final String MESSAGE_DELETE_PEOPLE_SUCCESS \u003d \"Deleted these people:\\n\\n\";","lastModifiedDate":"2021-10-10"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"Tetrerox"},"content":"    private Index targetIndex \u003d null;","lastModifiedDate":"2021-10-10"},{"lineNumber":38,"author":{"gitId":"Tetrerox"},"content":"    private Name name \u003d null;","lastModifiedDate":"2021-10-10"},{"lineNumber":39,"author":{"gitId":"Tetrerox"},"content":"    private Role role \u003d null;","lastModifiedDate":"2021-10-10"},{"lineNumber":40,"author":{"gitId":"Tetrerox"},"content":"    private Status status \u003d null;","lastModifiedDate":"2021-10-10"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"Tetrerox"},"content":"    /**","lastModifiedDate":"2021-10-10"},{"lineNumber":43,"author":{"gitId":"Tetrerox"},"content":"     * Constructs delete command using a targetIndex.","lastModifiedDate":"2021-10-10"},{"lineNumber":44,"author":{"gitId":"Tetrerox"},"content":"     *","lastModifiedDate":"2021-10-10"},{"lineNumber":45,"author":{"gitId":"Tetrerox"},"content":"     * @param targetIndex The index of a person to be deleted","lastModifiedDate":"2021-10-10"},{"lineNumber":46,"author":{"gitId":"Tetrerox"},"content":"     */","lastModifiedDate":"2021-10-10"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public DeleteCommand(Index targetIndex) {","lastModifiedDate":"2017-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2016-09-22"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":51,"author":{"gitId":"Tetrerox"},"content":"    /**","lastModifiedDate":"2021-10-10"},{"lineNumber":52,"author":{"gitId":"Tetrerox"},"content":"     * Constructs delete command using a name.","lastModifiedDate":"2021-10-10"},{"lineNumber":53,"author":{"gitId":"Tetrerox"},"content":"     *","lastModifiedDate":"2021-10-10"},{"lineNumber":54,"author":{"gitId":"Tetrerox"},"content":"     * @param name The name of a person to be deleted","lastModifiedDate":"2021-10-10"},{"lineNumber":55,"author":{"gitId":"Tetrerox"},"content":"     */","lastModifiedDate":"2021-10-10"},{"lineNumber":56,"author":{"gitId":"Tetrerox"},"content":"    public DeleteCommand(Name name) {","lastModifiedDate":"2021-10-10"},{"lineNumber":57,"author":{"gitId":"Tetrerox"},"content":"        this.name \u003d name;","lastModifiedDate":"2021-10-10"},{"lineNumber":58,"author":{"gitId":"Tetrerox"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":59,"author":{"gitId":"Tetrerox"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":60,"author":{"gitId":"Tetrerox"},"content":"    /**","lastModifiedDate":"2021-10-10"},{"lineNumber":61,"author":{"gitId":"Tetrerox"},"content":"     * Constructs delete command using a role.","lastModifiedDate":"2021-10-10"},{"lineNumber":62,"author":{"gitId":"Tetrerox"},"content":"     *","lastModifiedDate":"2021-10-10"},{"lineNumber":63,"author":{"gitId":"Tetrerox"},"content":"     * @param role The role of the people to be deleted","lastModifiedDate":"2021-10-10"},{"lineNumber":64,"author":{"gitId":"Tetrerox"},"content":"     */","lastModifiedDate":"2021-10-10"},{"lineNumber":65,"author":{"gitId":"Tetrerox"},"content":"    public DeleteCommand(Role role) {","lastModifiedDate":"2021-10-10"},{"lineNumber":66,"author":{"gitId":"Tetrerox"},"content":"        this.role \u003d role;","lastModifiedDate":"2021-10-10"},{"lineNumber":67,"author":{"gitId":"Tetrerox"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":68,"author":{"gitId":"Tetrerox"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":69,"author":{"gitId":"Tetrerox"},"content":"    /**","lastModifiedDate":"2021-10-10"},{"lineNumber":70,"author":{"gitId":"Tetrerox"},"content":"     * Constructs delete command using a status.","lastModifiedDate":"2021-10-10"},{"lineNumber":71,"author":{"gitId":"Tetrerox"},"content":"     *","lastModifiedDate":"2021-10-10"},{"lineNumber":72,"author":{"gitId":"Tetrerox"},"content":"     * @param status The status of the people to be deleted","lastModifiedDate":"2021-10-10"},{"lineNumber":73,"author":{"gitId":"Tetrerox"},"content":"     */","lastModifiedDate":"2021-10-10"},{"lineNumber":74,"author":{"gitId":"Tetrerox"},"content":"    public DeleteCommand(Status status) {","lastModifiedDate":"2021-10-10"},{"lineNumber":75,"author":{"gitId":"Tetrerox"},"content":"        this.status \u003d status;","lastModifiedDate":"2021-10-10"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2018-04-19"},{"lineNumber":82,"author":{"gitId":"Tetrerox"},"content":"        List\u003cPerson\u003e staffs \u003d new ArrayList\u003c\u003e(model.getUnFilteredPersonList());","lastModifiedDate":"2021-10-10"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":84,"author":{"gitId":"Tetrerox"},"content":"        if (role !\u003d null) {","lastModifiedDate":"2021-10-10"},{"lineNumber":85,"author":{"gitId":"Tetrerox"},"content":"            return executeBasedOnRole(model, staffs);","lastModifiedDate":"2021-10-10"},{"lineNumber":86,"author":{"gitId":"Tetrerox"},"content":"        } else if (status !\u003d null) {","lastModifiedDate":"2021-10-10"},{"lineNumber":87,"author":{"gitId":"Tetrerox"},"content":"            return executeBasedOnStatus(model, staffs);","lastModifiedDate":"2021-10-10"},{"lineNumber":88,"author":{"gitId":"Tetrerox"},"content":"        } else if (targetIndex !\u003d null) {","lastModifiedDate":"2021-10-10"},{"lineNumber":89,"author":{"gitId":"Tetrerox"},"content":"            return executeBasedOnTargetIndex(model, lastShownList);","lastModifiedDate":"2021-10-10"},{"lineNumber":90,"author":{"gitId":"Tetrerox"},"content":"        } else {","lastModifiedDate":"2021-10-10"},{"lineNumber":91,"author":{"gitId":"Tetrerox"},"content":"            return executeBasedOnName(model, lastShownList);","lastModifiedDate":"2021-10-10"},{"lineNumber":92,"author":{"gitId":"Tetrerox"},"content":"        }","lastModifiedDate":"2021-10-10"},{"lineNumber":93,"author":{"gitId":"Tetrerox"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":94,"author":{"gitId":"Tetrerox"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":95,"author":{"gitId":"Tetrerox"},"content":"    private CommandResult executeBasedOnRole(Model model, List\u003cPerson\u003e staffs) {","lastModifiedDate":"2021-10-10"},{"lineNumber":96,"author":{"gitId":"Tetrerox"},"content":"        StringBuilder deletedPeople \u003d new StringBuilder(MESSAGE_DELETE_PEOPLE_SUCCESS);","lastModifiedDate":"2021-10-10"},{"lineNumber":97,"author":{"gitId":"Tetrerox"},"content":"        for (Person staff : staffs) {","lastModifiedDate":"2021-10-10"},{"lineNumber":98,"author":{"gitId":"fullfatwasabi"},"content":"            if (staff.getRoles().contains(role)) {","lastModifiedDate":"2021-10-12"},{"lineNumber":99,"author":{"gitId":"Tetrerox"},"content":"                model.deletePerson(staff);","lastModifiedDate":"2021-10-10"},{"lineNumber":100,"author":{"gitId":"Tetrerox"},"content":"                deletedPeople.append(staff).append(\"\\n\\n\");","lastModifiedDate":"2021-10-10"},{"lineNumber":101,"author":{"gitId":"Tetrerox"},"content":"            }","lastModifiedDate":"2021-10-10"},{"lineNumber":102,"author":{"gitId":"Tetrerox"},"content":"        }","lastModifiedDate":"2021-10-10"},{"lineNumber":103,"author":{"gitId":"Tetrerox"},"content":"        return new CommandResult(deletedPeople.toString());","lastModifiedDate":"2021-10-10"},{"lineNumber":104,"author":{"gitId":"Tetrerox"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":105,"author":{"gitId":"Tetrerox"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":106,"author":{"gitId":"Tetrerox"},"content":"    private CommandResult executeBasedOnStatus(Model model, List\u003cPerson\u003e staffs) {","lastModifiedDate":"2021-10-10"},{"lineNumber":107,"author":{"gitId":"Tetrerox"},"content":"        StringBuilder deletedPeople \u003d new StringBuilder(MESSAGE_DELETE_PEOPLE_SUCCESS);","lastModifiedDate":"2021-10-10"},{"lineNumber":108,"author":{"gitId":"Tetrerox"},"content":"        for (Person staff : staffs) {","lastModifiedDate":"2021-10-10"},{"lineNumber":109,"author":{"gitId":"Tetrerox"},"content":"            if (staff.getStatus() \u003d\u003d status) {","lastModifiedDate":"2021-10-10"},{"lineNumber":110,"author":{"gitId":"Tetrerox"},"content":"                model.deletePerson(staff);","lastModifiedDate":"2021-10-10"},{"lineNumber":111,"author":{"gitId":"Tetrerox"},"content":"                deletedPeople.append(staff).append(\"\\n\\n\");","lastModifiedDate":"2021-10-10"},{"lineNumber":112,"author":{"gitId":"Tetrerox"},"content":"            }","lastModifiedDate":"2021-10-10"},{"lineNumber":113,"author":{"gitId":"Tetrerox"},"content":"        }","lastModifiedDate":"2021-10-10"},{"lineNumber":114,"author":{"gitId":"Tetrerox"},"content":"        return new CommandResult(deletedPeople.toString());","lastModifiedDate":"2021-10-10"},{"lineNumber":115,"author":{"gitId":"Tetrerox"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":116,"author":{"gitId":"Tetrerox"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":117,"author":{"gitId":"Tetrerox"},"content":"    private CommandResult executeBasedOnTargetIndex(Model model, List\u003cPerson\u003e lastShownList)","lastModifiedDate":"2021-10-10"},{"lineNumber":118,"author":{"gitId":"Tetrerox"},"content":"            throws CommandException {","lastModifiedDate":"2021-10-10"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2018-04-19"},{"lineNumber":120,"author":{"gitId":"-"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2018-04-19"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":123,"author":{"gitId":"Tetrerox"},"content":"        Person staffToDelete \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2021-10-10"},{"lineNumber":124,"author":{"gitId":"Tetrerox"},"content":"        model.deletePerson(staffToDelete);","lastModifiedDate":"2021-10-10"},{"lineNumber":125,"author":{"gitId":"Tetrerox"},"content":"        return new CommandResult(String.format(MESSAGE_DELETE_PERSON_SUCCESS, staffToDelete));","lastModifiedDate":"2021-10-10"},{"lineNumber":126,"author":{"gitId":"Tetrerox"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":127,"author":{"gitId":"Tetrerox"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":128,"author":{"gitId":"Tetrerox"},"content":"    private CommandResult executeBasedOnName(Model model, List\u003cPerson\u003e lastShownList)","lastModifiedDate":"2021-10-10"},{"lineNumber":129,"author":{"gitId":"Tetrerox"},"content":"            throws CommandException {","lastModifiedDate":"2021-10-10"},{"lineNumber":130,"author":{"gitId":"Tetrerox"},"content":"        int index \u003d getIndexByName(name, lastShownList);","lastModifiedDate":"2021-10-10"},{"lineNumber":131,"author":{"gitId":"Tetrerox"},"content":"        if (index \u003d\u003d INVALID_INDEX) {","lastModifiedDate":"2021-10-10"},{"lineNumber":132,"author":{"gitId":"Tetrerox"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_SEARCHED);","lastModifiedDate":"2021-10-10"},{"lineNumber":133,"author":{"gitId":"Tetrerox"},"content":"        }","lastModifiedDate":"2021-10-10"},{"lineNumber":134,"author":{"gitId":"Tetrerox"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":135,"author":{"gitId":"Tetrerox"},"content":"        Person staffToDelete \u003d lastShownList.get(index);","lastModifiedDate":"2021-10-10"},{"lineNumber":136,"author":{"gitId":"IrvingHe000"},"content":"        model.deletePerson(staffToDelete);","lastModifiedDate":"2021-09-23"},{"lineNumber":137,"author":{"gitId":"IrvingHe000"},"content":"        return new CommandResult(String.format(MESSAGE_DELETE_PERSON_SUCCESS, staffToDelete));","lastModifiedDate":"2021-09-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":140,"author":{"gitId":"Tetrerox"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":141,"author":{"gitId":"Tetrerox"},"content":"    private int getIndexByName(Name name, List\u003cPerson\u003e lastShownList) {","lastModifiedDate":"2021-10-10"},{"lineNumber":142,"author":{"gitId":"Tetrerox"},"content":"        for (int i \u003d 0; i \u003c lastShownList.size(); i++) {","lastModifiedDate":"2021-10-10"},{"lineNumber":143,"author":{"gitId":"Tetrerox"},"content":"            if (lastShownList.get(i).getName().equals(name)) {","lastModifiedDate":"2021-10-10"},{"lineNumber":144,"author":{"gitId":"Tetrerox"},"content":"                return i;","lastModifiedDate":"2021-10-10"},{"lineNumber":145,"author":{"gitId":"Tetrerox"},"content":"            }","lastModifiedDate":"2021-10-10"},{"lineNumber":146,"author":{"gitId":"Tetrerox"},"content":"        }","lastModifiedDate":"2021-10-10"},{"lineNumber":147,"author":{"gitId":"Tetrerox"},"content":"        return INVALID_INDEX;","lastModifiedDate":"2021-10-10"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-27"},{"lineNumber":151,"author":{"gitId":"Tetrerox"},"content":"    public boolean equals(Object o) {","lastModifiedDate":"2021-10-10"},{"lineNumber":152,"author":{"gitId":"Tetrerox"},"content":"        if (this \u003d\u003d o) {","lastModifiedDate":"2021-10-10"},{"lineNumber":153,"author":{"gitId":"Tetrerox"},"content":"            return true;","lastModifiedDate":"2021-10-10"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-06-27"},{"lineNumber":155,"author":{"gitId":"Tetrerox"},"content":"        if (o \u003d\u003d null || getClass() !\u003d o.getClass()) {","lastModifiedDate":"2021-10-10"},{"lineNumber":156,"author":{"gitId":"Tetrerox"},"content":"            return false;","lastModifiedDate":"2021-10-10"},{"lineNumber":157,"author":{"gitId":"Tetrerox"},"content":"        }","lastModifiedDate":"2021-10-10"},{"lineNumber":158,"author":{"gitId":"Tetrerox"},"content":"        DeleteCommand that \u003d (DeleteCommand) o;","lastModifiedDate":"2021-10-10"},{"lineNumber":159,"author":{"gitId":"Tetrerox"},"content":"        return Objects.equals(targetIndex, that.targetIndex) \u0026\u0026 Objects.equals(name, that.name)","lastModifiedDate":"2021-10-10"},{"lineNumber":160,"author":{"gitId":"Tetrerox"},"content":"                \u0026\u0026 role \u003d\u003d that.role \u0026\u0026 status \u003d\u003d that.status;","lastModifiedDate":"2021-10-10"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":162,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"Tetrerox":113,"fullfatwasabi":1,"-":46,"IrvingHe000":2}},{"path":"src/main/java/seedu/address/logic/commands/DeleteShiftCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Tetrerox"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-10-13"},{"lineNumber":2,"author":{"gitId":"Tetrerox"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":3,"author":{"gitId":"Tetrerox"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-13"},{"lineNumber":4,"author":{"gitId":"Tetrerox"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DAY_SHIFT;","lastModifiedDate":"2021-10-13"},{"lineNumber":5,"author":{"gitId":"Tetrerox"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_INDEX;","lastModifiedDate":"2021-10-13"},{"lineNumber":6,"author":{"gitId":"Tetrerox"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2021-10-13"},{"lineNumber":7,"author":{"gitId":"Tetrerox"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2021-10-13"},{"lineNumber":8,"author":{"gitId":"Tetrerox"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":9,"author":{"gitId":"Tetrerox"},"content":"import java.time.DayOfWeek;","lastModifiedDate":"2021-10-13"},{"lineNumber":10,"author":{"gitId":"Tetrerox"},"content":"import java.util.List;","lastModifiedDate":"2021-10-13"},{"lineNumber":11,"author":{"gitId":"Tetrerox"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":12,"author":{"gitId":"Tetrerox"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2021-10-13"},{"lineNumber":13,"author":{"gitId":"Tetrerox"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-10-13"},{"lineNumber":14,"author":{"gitId":"Tetrerox"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-13"},{"lineNumber":15,"author":{"gitId":"Tetrerox"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-10-13"},{"lineNumber":16,"author":{"gitId":"Tetrerox"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2021-10-13"},{"lineNumber":17,"author":{"gitId":"Tetrerox"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2021-10-13"},{"lineNumber":18,"author":{"gitId":"Tetrerox"},"content":"import seedu.address.model.person.Slot;","lastModifiedDate":"2021-10-13"},{"lineNumber":19,"author":{"gitId":"Tetrerox"},"content":"import seedu.address.model.person.exceptions.NoShiftException;","lastModifiedDate":"2021-10-13"},{"lineNumber":20,"author":{"gitId":"Tetrerox"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":21,"author":{"gitId":"Tetrerox"},"content":"/**","lastModifiedDate":"2021-10-13"},{"lineNumber":22,"author":{"gitId":"Tetrerox"},"content":" * Deletes a shift from a staff\u0027s schedule.","lastModifiedDate":"2021-10-13"},{"lineNumber":23,"author":{"gitId":"Tetrerox"},"content":" */","lastModifiedDate":"2021-10-13"},{"lineNumber":24,"author":{"gitId":"Tetrerox"},"content":"public class DeleteShiftCommand extends Command {","lastModifiedDate":"2021-10-13"},{"lineNumber":25,"author":{"gitId":"Tetrerox"},"content":"    public static final String COMMAND_WORD \u003d \"deleteShift\";","lastModifiedDate":"2021-10-13"},{"lineNumber":26,"author":{"gitId":"Tetrerox"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":27,"author":{"gitId":"Tetrerox"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": deletes a shift from the staff identified \"","lastModifiedDate":"2021-10-13"},{"lineNumber":28,"author":{"gitId":"Tetrerox"},"content":"            + \"by\\nthe index number used in the displayed staff list or\\nthe name of staff.\" + \"\\n\"","lastModifiedDate":"2021-10-13"},{"lineNumber":29,"author":{"gitId":"Tetrerox"},"content":"            + \"Parameters: \"","lastModifiedDate":"2021-10-13"},{"lineNumber":30,"author":{"gitId":"Tetrerox"},"content":"            + \"[\" + PREFIX_INDEX + \"INDEX] or \"","lastModifiedDate":"2021-10-13"},{"lineNumber":31,"author":{"gitId":"Tetrerox"},"content":"            + \"[\" + PREFIX_NAME + \"NAME] + \"","lastModifiedDate":"2021-10-13"},{"lineNumber":32,"author":{"gitId":"Tetrerox"},"content":"            + \"[\" + PREFIX_DAY_SHIFT + \"DAY AND\\nSLOT OF A SHIFT]\" + \"\\n\"","lastModifiedDate":"2021-10-13"},{"lineNumber":33,"author":{"gitId":"Tetrerox"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2021-10-13"},{"lineNumber":34,"author":{"gitId":"Tetrerox"},"content":"            + PREFIX_INDEX + \"1 \"","lastModifiedDate":"2021-10-13"},{"lineNumber":35,"author":{"gitId":"Tetrerox"},"content":"            + PREFIX_DAY_SHIFT + \"monday-1\" + \"\\n\"","lastModifiedDate":"2021-10-13"},{"lineNumber":36,"author":{"gitId":"Tetrerox"},"content":"            + \"OR: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2021-10-13"},{"lineNumber":37,"author":{"gitId":"Tetrerox"},"content":"            + PREFIX_NAME + \"JOE \"","lastModifiedDate":"2021-10-13"},{"lineNumber":38,"author":{"gitId":"Tetrerox"},"content":"            + PREFIX_DAY_SHIFT + \"TUESDAY-0\";","lastModifiedDate":"2021-10-13"},{"lineNumber":39,"author":{"gitId":"Tetrerox"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":40,"author":{"gitId":"Tetrerox"},"content":"    public static final String MESSAGE_DELETE_SHIFT_SUCCESS \u003d \"Shift deleted from the schedule of %s: %s, %s.\";","lastModifiedDate":"2021-10-13"},{"lineNumber":41,"author":{"gitId":"Tetrerox"},"content":"    public static final String MESSAGE_SHIFT_DOESNT_EXIST \u003d \"The shift that you are trying to delete does not exist!\";","lastModifiedDate":"2021-10-13"},{"lineNumber":42,"author":{"gitId":"Tetrerox"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":43,"author":{"gitId":"Tetrerox"},"content":"    private final Index index;","lastModifiedDate":"2021-10-13"},{"lineNumber":44,"author":{"gitId":"Tetrerox"},"content":"    private final Name name;","lastModifiedDate":"2021-10-13"},{"lineNumber":45,"author":{"gitId":"Tetrerox"},"content":"    private final DayOfWeek dayOfWeek;","lastModifiedDate":"2021-10-13"},{"lineNumber":46,"author":{"gitId":"Tetrerox"},"content":"    private final Slot slot;","lastModifiedDate":"2021-10-13"},{"lineNumber":47,"author":{"gitId":"Tetrerox"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":48,"author":{"gitId":"Tetrerox"},"content":"    /**","lastModifiedDate":"2021-10-13"},{"lineNumber":49,"author":{"gitId":"Tetrerox"},"content":"     * Creates a DeleteShiftCommand to add the specified {@code Shift} to a {@code Person}.","lastModifiedDate":"2021-10-13"},{"lineNumber":50,"author":{"gitId":"Tetrerox"},"content":"     */","lastModifiedDate":"2021-10-13"},{"lineNumber":51,"author":{"gitId":"Tetrerox"},"content":"    public DeleteShiftCommand(Index index, Name name, String shiftDateAndSlot) {","lastModifiedDate":"2021-10-13"},{"lineNumber":52,"author":{"gitId":"Tetrerox"},"content":"        requireNonNull(shiftDateAndSlot);","lastModifiedDate":"2021-10-13"},{"lineNumber":53,"author":{"gitId":"Tetrerox"},"content":"        this.index \u003d index;","lastModifiedDate":"2021-10-13"},{"lineNumber":54,"author":{"gitId":"Tetrerox"},"content":"        this.name \u003d name;","lastModifiedDate":"2021-10-13"},{"lineNumber":55,"author":{"gitId":"Tetrerox"},"content":"        String[] strings \u003d shiftDateAndSlot.split(\"-\");","lastModifiedDate":"2021-10-13"},{"lineNumber":56,"author":{"gitId":"Tetrerox"},"content":"        dayOfWeek \u003d DayOfWeek.valueOf(strings[0].toUpperCase());","lastModifiedDate":"2021-10-13"},{"lineNumber":57,"author":{"gitId":"Tetrerox"},"content":"        slot \u003d Slot.getSlotByOrder(strings[1]);","lastModifiedDate":"2021-10-13"},{"lineNumber":58,"author":{"gitId":"Tetrerox"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":59,"author":{"gitId":"Tetrerox"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":60,"author":{"gitId":"Tetrerox"},"content":"    @Override","lastModifiedDate":"2021-10-13"},{"lineNumber":61,"author":{"gitId":"Tetrerox"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-10-13"},{"lineNumber":62,"author":{"gitId":"Tetrerox"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-10-13"},{"lineNumber":63,"author":{"gitId":"Tetrerox"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2021-10-13"},{"lineNumber":64,"author":{"gitId":"Tetrerox"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":65,"author":{"gitId":"Tetrerox"},"content":"        Person staffToEdit;","lastModifiedDate":"2021-10-13"},{"lineNumber":66,"author":{"gitId":"Tetrerox"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":67,"author":{"gitId":"Tetrerox"},"content":"        if (index !\u003d null) {","lastModifiedDate":"2021-10-13"},{"lineNumber":68,"author":{"gitId":"Tetrerox"},"content":"            if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2021-10-13"},{"lineNumber":69,"author":{"gitId":"Tetrerox"},"content":"                throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2021-10-13"},{"lineNumber":70,"author":{"gitId":"Tetrerox"},"content":"            }","lastModifiedDate":"2021-10-13"},{"lineNumber":71,"author":{"gitId":"Tetrerox"},"content":"            staffToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2021-10-13"},{"lineNumber":72,"author":{"gitId":"Tetrerox"},"content":"        } else {","lastModifiedDate":"2021-10-13"},{"lineNumber":73,"author":{"gitId":"Tetrerox"},"content":"            if (name !\u003d null) {","lastModifiedDate":"2021-10-13"},{"lineNumber":74,"author":{"gitId":"Tetrerox"},"content":"                staffToEdit \u003d model.findPersonByName(name);","lastModifiedDate":"2021-10-13"},{"lineNumber":75,"author":{"gitId":"Tetrerox"},"content":"            } else {","lastModifiedDate":"2021-10-13"},{"lineNumber":76,"author":{"gitId":"Tetrerox"},"content":"                throw new CommandException(MESSAGE_USAGE);","lastModifiedDate":"2021-10-13"},{"lineNumber":77,"author":{"gitId":"Tetrerox"},"content":"            }","lastModifiedDate":"2021-10-13"},{"lineNumber":78,"author":{"gitId":"Tetrerox"},"content":"        }","lastModifiedDate":"2021-10-13"},{"lineNumber":79,"author":{"gitId":"Tetrerox"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":80,"author":{"gitId":"Tetrerox"},"content":"        if (staffToEdit \u003d\u003d null || !model.hasPerson(staffToEdit)) {","lastModifiedDate":"2021-10-13"},{"lineNumber":81,"author":{"gitId":"Tetrerox"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_SEARCHED);","lastModifiedDate":"2021-10-13"},{"lineNumber":82,"author":{"gitId":"Tetrerox"},"content":"        }","lastModifiedDate":"2021-10-13"},{"lineNumber":83,"author":{"gitId":"Tetrerox"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":84,"author":{"gitId":"Tetrerox"},"content":"        try {","lastModifiedDate":"2021-10-13"},{"lineNumber":85,"author":{"gitId":"Tetrerox"},"content":"            model.deleteShift(staffToEdit, dayOfWeek, slot);","lastModifiedDate":"2021-10-13"},{"lineNumber":86,"author":{"gitId":"Tetrerox"},"content":"        } catch (NoShiftException e) {","lastModifiedDate":"2021-10-13"},{"lineNumber":87,"author":{"gitId":"Tetrerox"},"content":"            throw new CommandException(MESSAGE_SHIFT_DOESNT_EXIST);","lastModifiedDate":"2021-10-13"},{"lineNumber":88,"author":{"gitId":"Tetrerox"},"content":"        }","lastModifiedDate":"2021-10-13"},{"lineNumber":89,"author":{"gitId":"Tetrerox"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":90,"author":{"gitId":"Tetrerox"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2021-10-13"},{"lineNumber":91,"author":{"gitId":"Tetrerox"},"content":"        return new CommandResult(String.format(MESSAGE_DELETE_SHIFT_SUCCESS, staffToEdit.getName(), dayOfWeek, slot));","lastModifiedDate":"2021-10-13"},{"lineNumber":92,"author":{"gitId":"Tetrerox"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":93,"author":{"gitId":"Tetrerox"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":94,"author":{"gitId":"Tetrerox"},"content":"    @Override","lastModifiedDate":"2021-10-13"},{"lineNumber":95,"author":{"gitId":"Tetrerox"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-13"},{"lineNumber":96,"author":{"gitId":"Tetrerox"},"content":"        // short circuit if same object","lastModifiedDate":"2021-10-13"},{"lineNumber":97,"author":{"gitId":"Tetrerox"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2021-10-13"},{"lineNumber":98,"author":{"gitId":"Tetrerox"},"content":"            return true;","lastModifiedDate":"2021-10-13"},{"lineNumber":99,"author":{"gitId":"Tetrerox"},"content":"        }","lastModifiedDate":"2021-10-13"},{"lineNumber":100,"author":{"gitId":"Tetrerox"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":101,"author":{"gitId":"Tetrerox"},"content":"        // instanceof handles nulls","lastModifiedDate":"2021-10-13"},{"lineNumber":102,"author":{"gitId":"Tetrerox"},"content":"        if (!(other instanceof DeleteShiftCommand)) {","lastModifiedDate":"2021-10-13"},{"lineNumber":103,"author":{"gitId":"Tetrerox"},"content":"            return false;","lastModifiedDate":"2021-10-13"},{"lineNumber":104,"author":{"gitId":"Tetrerox"},"content":"        }","lastModifiedDate":"2021-10-13"},{"lineNumber":105,"author":{"gitId":"Tetrerox"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":106,"author":{"gitId":"Tetrerox"},"content":"        // state check","lastModifiedDate":"2021-10-13"},{"lineNumber":107,"author":{"gitId":"Tetrerox"},"content":"        DeleteShiftCommand command \u003d (DeleteShiftCommand) other;","lastModifiedDate":"2021-10-13"},{"lineNumber":108,"author":{"gitId":"Tetrerox"},"content":"        return ((index \u003d\u003d null \u0026\u0026 command.index \u003d\u003d null) || (index !\u003d null \u0026\u0026 index.equals(command.index)))","lastModifiedDate":"2021-10-13"},{"lineNumber":109,"author":{"gitId":"Tetrerox"},"content":"                \u0026\u0026 ((name \u003d\u003d null \u0026\u0026 command.name \u003d\u003d null) || (name !\u003d null \u0026\u0026 name.equals(command.name)))","lastModifiedDate":"2021-10-13"},{"lineNumber":110,"author":{"gitId":"Tetrerox"},"content":"                \u0026\u0026 dayOfWeek.equals(command.dayOfWeek)","lastModifiedDate":"2021-10-13"},{"lineNumber":111,"author":{"gitId":"Tetrerox"},"content":"                \u0026\u0026 slot.equals(command.slot);","lastModifiedDate":"2021-10-13"},{"lineNumber":112,"author":{"gitId":"Tetrerox"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":113,"author":{"gitId":"Tetrerox"},"content":"}","lastModifiedDate":"2021-10-13"}],"authorContributionMap":{"Tetrerox":113}},{"path":"src/main/java/seedu/address/logic/commands/EditCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-12-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2021-10-12"},{"lineNumber":5,"author":{"gitId":"Gabau"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DASH_INDEX;","lastModifiedDate":"2021-10-12"},{"lineNumber":6,"author":{"gitId":"Gabau"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DASH_NAME;","lastModifiedDate":"2021-10-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-05-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-05-09"},{"lineNumber":10,"author":{"gitId":"fullfatwasabi"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ROLE;","lastModifiedDate":"2021-10-09"},{"lineNumber":11,"author":{"gitId":"fullfatwasabi"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_SALARY;","lastModifiedDate":"2021-10-09"},{"lineNumber":12,"author":{"gitId":"fullfatwasabi"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_STATUS;","lastModifiedDate":"2021-10-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-05-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2017-08-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2018-01-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-01-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-12-26"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2016-12-26"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.CollectionUtil;","lastModifiedDate":"2016-12-26"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2016-12-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2016-12-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2016-12-26"},{"lineNumber":30,"author":{"gitId":"Gabau"},"content":"import seedu.address.model.person.Period;","lastModifiedDate":"2021-10-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-12-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2016-12-26"},{"lineNumber":33,"author":{"gitId":"fullfatwasabi"},"content":"import seedu.address.model.person.Role;","lastModifiedDate":"2021-10-09"},{"lineNumber":34,"author":{"gitId":"fullfatwasabi"},"content":"import seedu.address.model.person.Salary;","lastModifiedDate":"2021-10-09"},{"lineNumber":35,"author":{"gitId":"fullfatwasabi"},"content":"import seedu.address.model.person.Status;","lastModifiedDate":"2021-10-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":38,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-12-26"},{"lineNumber":40,"author":{"gitId":"-"},"content":" * Edits the details of an existing person in the address book.","lastModifiedDate":"2016-12-26"},{"lineNumber":41,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-12-26"},{"lineNumber":42,"author":{"gitId":"-"},"content":"public class EditCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":44,"author":{"gitId":"Gabau"},"content":"    private enum Identifier {","lastModifiedDate":"2021-10-06"},{"lineNumber":45,"author":{"gitId":"Gabau"},"content":"        INDEX, NAME","lastModifiedDate":"2021-10-06"},{"lineNumber":46,"author":{"gitId":"Gabau"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":47,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"edit\";","lastModifiedDate":"2016-12-26"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Edits the details of the person identified \"","lastModifiedDate":"2016-12-26"},{"lineNumber":51,"author":{"gitId":"Gabau"},"content":"            + \"by the index number used in the displayed person list or by the name identifier\\n. \"","lastModifiedDate":"2021-10-07"},{"lineNumber":52,"author":{"gitId":"Gabau"},"content":"            + \"[\" + PREFIX_DASH_INDEX + \"INDEX] \"","lastModifiedDate":"2021-10-12"},{"lineNumber":53,"author":{"gitId":"Gabau"},"content":"            + \"[\" + PREFIX_DASH_NAME + \"NAME] should be used for the lookup\"","lastModifiedDate":"2021-10-12"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            + \"Existing values will be overwritten by the input values.\\n\"","lastModifiedDate":"2016-12-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2017-06-06"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_NAME + \"NAME] \"","lastModifiedDate":"2017-06-06"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_PHONE + \"PHONE] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_EMAIL + \"EMAIL] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":59,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_ADDRESS + \"ADDRESS] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":60,"author":{"gitId":"fullfatwasabi"},"content":"            + \"[\" + PREFIX_ROLE + \"ROLE]... \"","lastModifiedDate":"2021-10-12"},{"lineNumber":61,"author":{"gitId":"fullfatwasabi"},"content":"            + \"[\" + PREFIX_SALARY + \"SALARY] \"","lastModifiedDate":"2021-10-09"},{"lineNumber":62,"author":{"gitId":"fullfatwasabi"},"content":"            + \"[\" + PREFIX_STATUS + \"STATUS] \"","lastModifiedDate":"2021-10-09"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2017-05-09"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"91234567 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":66,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"johndoe@example.com\";","lastModifiedDate":"2017-05-09"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_EDIT_PERSON_SUCCESS \u003d \"Edited Person: %1$s\";","lastModifiedDate":"2016-12-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_NOT_EDITED \u003d \"At least one field to edit must be provided.\";","lastModifiedDate":"2016-12-26"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"This person already exists in the address book.\";","lastModifiedDate":"2016-12-26"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":72,"author":{"gitId":"Gabau"},"content":"    private Index index;","lastModifiedDate":"2021-10-06"},{"lineNumber":73,"author":{"gitId":"Gabau"},"content":"    private Name name;","lastModifiedDate":"2021-10-06"},{"lineNumber":74,"author":{"gitId":"Gabau"},"content":"    private final Identifier identifier;","lastModifiedDate":"2021-10-06"},{"lineNumber":75,"author":{"gitId":"IrvingHe000"},"content":"    private final EditPersonDescriptor editStaffDescriptor;","lastModifiedDate":"2021-09-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * @param index of the person in the filtered person list to edit","lastModifiedDate":"2017-05-25"},{"lineNumber":79,"author":{"gitId":"Gabau"},"content":"     * @param editStaffDescriptor details to edit the person with","lastModifiedDate":"2021-10-07"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":81,"author":{"gitId":"IrvingHe000"},"content":"    public EditCommand(Index index, EditPersonDescriptor editStaffDescriptor) {","lastModifiedDate":"2021-09-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        requireNonNull(index);","lastModifiedDate":"2017-05-25"},{"lineNumber":83,"author":{"gitId":"IrvingHe000"},"content":"        requireNonNull(editStaffDescriptor);","lastModifiedDate":"2021-09-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        this.index \u003d index;","lastModifiedDate":"2017-05-25"},{"lineNumber":86,"author":{"gitId":"IrvingHe000"},"content":"        this.editStaffDescriptor \u003d new EditPersonDescriptor(editStaffDescriptor);","lastModifiedDate":"2021-09-23"},{"lineNumber":87,"author":{"gitId":"Gabau"},"content":"        this.identifier \u003d Identifier.INDEX;","lastModifiedDate":"2021-10-06"},{"lineNumber":88,"author":{"gitId":"Gabau"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":89,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":90,"author":{"gitId":"Gabau"},"content":"    /**","lastModifiedDate":"2021-10-07"},{"lineNumber":91,"author":{"gitId":"Gabau"},"content":"     * @param name                  of the person in the staffd database to edit.","lastModifiedDate":"2021-10-07"},{"lineNumber":92,"author":{"gitId":"Gabau"},"content":"     * @param editStaffDescriptor   details to edit the person with","lastModifiedDate":"2021-10-07"},{"lineNumber":93,"author":{"gitId":"Gabau"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":94,"author":{"gitId":"Gabau"},"content":"    public EditCommand(Name name, EditPersonDescriptor editStaffDescriptor) {","lastModifiedDate":"2021-10-06"},{"lineNumber":95,"author":{"gitId":"Gabau"},"content":"        requireNonNull(name);","lastModifiedDate":"2021-10-06"},{"lineNumber":96,"author":{"gitId":"Gabau"},"content":"        requireNonNull(editStaffDescriptor);","lastModifiedDate":"2021-10-06"},{"lineNumber":97,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":98,"author":{"gitId":"Gabau"},"content":"        this.editStaffDescriptor \u003d editStaffDescriptor;","lastModifiedDate":"2021-10-06"},{"lineNumber":99,"author":{"gitId":"Gabau"},"content":"        this.name \u003d name;","lastModifiedDate":"2021-10-06"},{"lineNumber":100,"author":{"gitId":"Gabau"},"content":"        this.identifier \u003d Identifier.NAME;","lastModifiedDate":"2021-10-06"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-26"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":105,"author":{"gitId":"Gabau"},"content":"        switch(this.identifier) {","lastModifiedDate":"2021-10-06"},{"lineNumber":106,"author":{"gitId":"Gabau"},"content":"        case INDEX:","lastModifiedDate":"2021-10-06"},{"lineNumber":107,"author":{"gitId":"Gabau"},"content":"            return editBasedOnIndex(model);","lastModifiedDate":"2021-10-06"},{"lineNumber":108,"author":{"gitId":"Gabau"},"content":"        case NAME:","lastModifiedDate":"2021-10-06"},{"lineNumber":109,"author":{"gitId":"Gabau"},"content":"            return editBasedOnName(model);","lastModifiedDate":"2021-10-06"},{"lineNumber":110,"author":{"gitId":"Gabau"},"content":"        default:","lastModifiedDate":"2021-10-06"},{"lineNumber":111,"author":{"gitId":"Gabau"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_COMMAND_FORMAT);","lastModifiedDate":"2021-10-06"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-10-06"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":115,"author":{"gitId":"Gabau"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":117,"author":{"gitId":"Gabau"},"content":"    private CommandResult editBasedOnName(Model model) throws CommandException {","lastModifiedDate":"2021-10-06"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":119,"author":{"gitId":"Gabau"},"content":"        List\u003cPerson\u003e underlyingList \u003d model.getUnFilteredPersonList();","lastModifiedDate":"2021-10-06"},{"lineNumber":120,"author":{"gitId":"Gabau"},"content":"        Optional\u003cPerson\u003e person \u003d underlyingList","lastModifiedDate":"2021-10-06"},{"lineNumber":121,"author":{"gitId":"Gabau"},"content":"                .stream()","lastModifiedDate":"2021-10-06"},{"lineNumber":122,"author":{"gitId":"Gabau"},"content":"                .filter(staff -\u003e staff.getName().equals(this.name))","lastModifiedDate":"2021-10-06"},{"lineNumber":123,"author":{"gitId":"Gabau"},"content":"                .findFirst();","lastModifiedDate":"2021-10-06"},{"lineNumber":124,"author":{"gitId":"Gabau"},"content":"        if (!person.isPresent()) {","lastModifiedDate":"2021-10-06"},{"lineNumber":125,"author":{"gitId":"Gabau"},"content":"            //if the person is not in the list","lastModifiedDate":"2021-10-06"},{"lineNumber":126,"author":{"gitId":"Gabau"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_SEARCHED);","lastModifiedDate":"2021-10-06"},{"lineNumber":127,"author":{"gitId":"Gabau"},"content":"        }","lastModifiedDate":"2021-10-06"},{"lineNumber":128,"author":{"gitId":"Gabau"},"content":"        Person staffToEdit \u003d person.get();","lastModifiedDate":"2021-10-06"},{"lineNumber":129,"author":{"gitId":"Gabau"},"content":"        return editStaffOnModel(model, staffToEdit);","lastModifiedDate":"2021-10-06"},{"lineNumber":130,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":134,"author":{"gitId":"Gabau"},"content":"    private CommandResult editStaffOnModel(Model model, Person staffToEdit) throws CommandException {","lastModifiedDate":"2021-10-06"},{"lineNumber":135,"author":{"gitId":"IrvingHe000"},"content":"        Person editedStaff \u003d createEditedPerson(staffToEdit, editStaffDescriptor);","lastModifiedDate":"2021-09-23"},{"lineNumber":136,"author":{"gitId":"IrvingHe000"},"content":"        if (!staffToEdit.isSamePerson(editedStaff) \u0026\u0026 model.hasPerson(editedStaff)) {","lastModifiedDate":"2021-09-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2018-08-07"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":140,"author":{"gitId":"IrvingHe000"},"content":"        model.setPerson(staffToEdit, editedStaff);","lastModifiedDate":"2021-09-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":142,"author":{"gitId":"IrvingHe000"},"content":"        return new CommandResult(String.format(MESSAGE_EDIT_PERSON_SUCCESS, editedStaff));","lastModifiedDate":"2021-09-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":145,"author":{"gitId":"Gabau"},"content":"    private CommandResult editBasedOnIndex(Model model) throws CommandException {","lastModifiedDate":"2021-10-06"},{"lineNumber":146,"author":{"gitId":"Gabau"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-10-06"},{"lineNumber":147,"author":{"gitId":"Gabau"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2021-10-06"},{"lineNumber":148,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":149,"author":{"gitId":"Gabau"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2021-10-06"},{"lineNumber":150,"author":{"gitId":"Gabau"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2021-10-06"},{"lineNumber":151,"author":{"gitId":"Gabau"},"content":"        }","lastModifiedDate":"2021-10-06"},{"lineNumber":152,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":153,"author":{"gitId":"Gabau"},"content":"        Person staffToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2021-10-06"},{"lineNumber":154,"author":{"gitId":"Gabau"},"content":"        return editStaffOnModel(model, staffToEdit);","lastModifiedDate":"2021-10-06"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":158,"author":{"gitId":"-"},"content":"     * Creates and returns a {@code Person} with the details of {@code personToEdit}","lastModifiedDate":"2016-12-26"},{"lineNumber":159,"author":{"gitId":"-"},"content":"     * edited with {@code editPersonDescriptor}.","lastModifiedDate":"2016-12-26"},{"lineNumber":160,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":161,"author":{"gitId":"IrvingHe000"},"content":"    private static Person createEditedPerson(Person staffToEdit, EditPersonDescriptor editPersonDescriptor) {","lastModifiedDate":"2021-09-23"},{"lineNumber":162,"author":{"gitId":"IrvingHe000"},"content":"        assert staffToEdit !\u003d null;","lastModifiedDate":"2021-09-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":164,"author":{"gitId":"IrvingHe000"},"content":"        Name updatedName \u003d editPersonDescriptor.getName().orElse(staffToEdit.getName());","lastModifiedDate":"2021-09-23"},{"lineNumber":165,"author":{"gitId":"IrvingHe000"},"content":"        Phone updatedPhone \u003d editPersonDescriptor.getPhone().orElse(staffToEdit.getPhone());","lastModifiedDate":"2021-09-23"},{"lineNumber":166,"author":{"gitId":"IrvingHe000"},"content":"        Email updatedEmail \u003d editPersonDescriptor.getEmail().orElse(staffToEdit.getEmail());","lastModifiedDate":"2021-09-23"},{"lineNumber":167,"author":{"gitId":"IrvingHe000"},"content":"        Address updatedAddress \u003d editPersonDescriptor.getAddress().orElse(staffToEdit.getAddress());","lastModifiedDate":"2021-09-23"},{"lineNumber":168,"author":{"gitId":"fullfatwasabi"},"content":"        Set\u003cRole\u003e updatedRoles \u003d editPersonDescriptor.getRoles().orElse(staffToEdit.getRoles());","lastModifiedDate":"2021-10-12"},{"lineNumber":169,"author":{"gitId":"fullfatwasabi"},"content":"        Salary updatedSalary \u003d editPersonDescriptor.getSalary().orElse(staffToEdit.getSalary());","lastModifiedDate":"2021-10-09"},{"lineNumber":170,"author":{"gitId":"fullfatwasabi"},"content":"        Status updatedStatus \u003d editPersonDescriptor.getStatus().orElse(staffToEdit.getStatus());","lastModifiedDate":"2021-10-09"},{"lineNumber":171,"author":{"gitId":"IrvingHe000"},"content":"        Set\u003cTag\u003e updatedTags \u003d editPersonDescriptor.getTags().orElse(staffToEdit.getTags());","lastModifiedDate":"2021-09-23"},{"lineNumber":172,"author":{"gitId":"Gabau"},"content":"        //currently do not allow modifications to period via edit person descriptor","lastModifiedDate":"2021-10-13"},{"lineNumber":173,"author":{"gitId":"Gabau"},"content":"        //exception would be during tests.","lastModifiedDate":"2021-10-13"},{"lineNumber":174,"author":{"gitId":"Gabau"},"content":"        Set\u003cPeriod\u003e updatedPeriod \u003d editPersonDescriptor.getPeriod().orElse(staffToEdit.getAbsentDates());","lastModifiedDate":"2021-10-12"},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":177,"author":{"gitId":"fullfatwasabi"},"content":"        return new Person(updatedName, updatedPhone, updatedEmail, updatedAddress, updatedRoles,","lastModifiedDate":"2021-10-12"},{"lineNumber":178,"author":{"gitId":"Gabau"},"content":"                updatedSalary, updatedStatus, updatedTags, updatedPeriod);","lastModifiedDate":"2021-10-12"},{"lineNumber":179,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-08"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-05-08"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-05-08"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-08"},{"lineNumber":186,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-08"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":189,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-08"},{"lineNumber":190,"author":{"gitId":"-"},"content":"        if (!(other instanceof EditCommand)) {","lastModifiedDate":"2017-05-08"},{"lineNumber":191,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-08"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-05-08"},{"lineNumber":195,"author":{"gitId":"-"},"content":"        EditCommand e \u003d (EditCommand) other;","lastModifiedDate":"2017-05-08"},{"lineNumber":196,"author":{"gitId":"-"},"content":"        return index.equals(e.index)","lastModifiedDate":"2017-05-25"},{"lineNumber":197,"author":{"gitId":"IrvingHe000"},"content":"                \u0026\u0026 editStaffDescriptor.equals(e.editStaffDescriptor);","lastModifiedDate":"2021-09-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":200,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":201,"author":{"gitId":"-"},"content":"     * Stores the details to edit the person with. Each non-empty field value will replace the","lastModifiedDate":"2016-12-26"},{"lineNumber":202,"author":{"gitId":"-"},"content":"     * corresponding field value of the person.","lastModifiedDate":"2016-12-26"},{"lineNumber":203,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":204,"author":{"gitId":"-"},"content":"    public static class EditPersonDescriptor {","lastModifiedDate":"2016-12-26"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        private Name name;","lastModifiedDate":"2017-06-21"},{"lineNumber":206,"author":{"gitId":"-"},"content":"        private Phone phone;","lastModifiedDate":"2017-06-21"},{"lineNumber":207,"author":{"gitId":"-"},"content":"        private Email email;","lastModifiedDate":"2017-06-21"},{"lineNumber":208,"author":{"gitId":"-"},"content":"        private Address address;","lastModifiedDate":"2017-06-21"},{"lineNumber":209,"author":{"gitId":"fullfatwasabi"},"content":"        private Set\u003cRole\u003e roles;","lastModifiedDate":"2021-10-12"},{"lineNumber":210,"author":{"gitId":"fullfatwasabi"},"content":"        private Salary salary;","lastModifiedDate":"2021-10-09"},{"lineNumber":211,"author":{"gitId":"fullfatwasabi"},"content":"        private Status status;","lastModifiedDate":"2021-10-09"},{"lineNumber":212,"author":{"gitId":"-"},"content":"        private Set\u003cTag\u003e tags;","lastModifiedDate":"2017-06-21"},{"lineNumber":213,"author":{"gitId":"Gabau"},"content":"        private Set\u003cPeriod\u003e absentPeriods;","lastModifiedDate":"2021-10-12"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":215,"author":{"gitId":"fullfatwasabi"},"content":"        public EditPersonDescriptor() {","lastModifiedDate":"2021-09-22"},{"lineNumber":216,"author":{"gitId":"fullfatwasabi"},"content":"        }","lastModifiedDate":"2021-09-22"},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":218,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":219,"author":{"gitId":"-"},"content":"         * Copy constructor.","lastModifiedDate":"2018-01-11"},{"lineNumber":220,"author":{"gitId":"-"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2018-01-11"},{"lineNumber":221,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":222,"author":{"gitId":"-"},"content":"        public EditPersonDescriptor(EditPersonDescriptor toCopy) {","lastModifiedDate":"2016-12-26"},{"lineNumber":223,"author":{"gitId":"-"},"content":"            setName(toCopy.name);","lastModifiedDate":"2018-01-15"},{"lineNumber":224,"author":{"gitId":"-"},"content":"            setPhone(toCopy.phone);","lastModifiedDate":"2018-01-15"},{"lineNumber":225,"author":{"gitId":"-"},"content":"            setEmail(toCopy.email);","lastModifiedDate":"2018-01-15"},{"lineNumber":226,"author":{"gitId":"-"},"content":"            setAddress(toCopy.address);","lastModifiedDate":"2018-01-15"},{"lineNumber":227,"author":{"gitId":"fullfatwasabi"},"content":"            setRoles(toCopy.roles);","lastModifiedDate":"2021-10-12"},{"lineNumber":228,"author":{"gitId":"fullfatwasabi"},"content":"            setSalary(toCopy.salary);","lastModifiedDate":"2021-10-09"},{"lineNumber":229,"author":{"gitId":"fullfatwasabi"},"content":"            setStatus(toCopy.status);","lastModifiedDate":"2021-10-09"},{"lineNumber":230,"author":{"gitId":"-"},"content":"            setTags(toCopy.tags);","lastModifiedDate":"2018-01-11"},{"lineNumber":231,"author":{"gitId":"Gabau"},"content":"            setPeriod(toCopy.absentPeriods);","lastModifiedDate":"2021-10-12"},{"lineNumber":232,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":233,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":234,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2016-12-26"},{"lineNumber":235,"author":{"gitId":"-"},"content":"         * Returns true if at least one field is edited.","lastModifiedDate":"2016-12-26"},{"lineNumber":236,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-26"},{"lineNumber":237,"author":{"gitId":"-"},"content":"        public boolean isAnyFieldEdited() {","lastModifiedDate":"2016-12-26"},{"lineNumber":238,"author":{"gitId":"fullfatwasabi"},"content":"            return CollectionUtil.isAnyNonNull(name, phone, email, address, tags, roles);","lastModifiedDate":"2021-10-13"},{"lineNumber":239,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":240,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":241,"author":{"gitId":"-"},"content":"        public void setName(Name name) {","lastModifiedDate":"2017-06-21"},{"lineNumber":242,"author":{"gitId":"-"},"content":"            this.name \u003d name;","lastModifiedDate":"2017-06-21"},{"lineNumber":243,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":244,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":245,"author":{"gitId":"-"},"content":"        public Optional\u003cName\u003e getName() {","lastModifiedDate":"2016-12-26"},{"lineNumber":246,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(name);","lastModifiedDate":"2017-06-21"},{"lineNumber":247,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":248,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":249,"author":{"gitId":"-"},"content":"        public void setPhone(Phone phone) {","lastModifiedDate":"2017-06-21"},{"lineNumber":250,"author":{"gitId":"-"},"content":"            this.phone \u003d phone;","lastModifiedDate":"2017-06-21"},{"lineNumber":251,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":252,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":253,"author":{"gitId":"-"},"content":"        public Optional\u003cPhone\u003e getPhone() {","lastModifiedDate":"2016-12-26"},{"lineNumber":254,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(phone);","lastModifiedDate":"2017-06-21"},{"lineNumber":255,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":256,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":257,"author":{"gitId":"-"},"content":"        public void setEmail(Email email) {","lastModifiedDate":"2017-06-21"},{"lineNumber":258,"author":{"gitId":"-"},"content":"            this.email \u003d email;","lastModifiedDate":"2017-06-21"},{"lineNumber":259,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":260,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":261,"author":{"gitId":"-"},"content":"        public Optional\u003cEmail\u003e getEmail() {","lastModifiedDate":"2016-12-26"},{"lineNumber":262,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(email);","lastModifiedDate":"2017-06-21"},{"lineNumber":263,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":264,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":265,"author":{"gitId":"-"},"content":"        public void setAddress(Address address) {","lastModifiedDate":"2017-06-21"},{"lineNumber":266,"author":{"gitId":"-"},"content":"            this.address \u003d address;","lastModifiedDate":"2017-06-21"},{"lineNumber":267,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":268,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":269,"author":{"gitId":"-"},"content":"        public Optional\u003cAddress\u003e getAddress() {","lastModifiedDate":"2016-12-26"},{"lineNumber":270,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(address);","lastModifiedDate":"2017-06-21"},{"lineNumber":271,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":272,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":273,"author":{"gitId":"fullfatwasabi"},"content":"        /**","lastModifiedDate":"2021-10-12"},{"lineNumber":274,"author":{"gitId":"fullfatwasabi"},"content":"         * Sets {@code roles} to this object\u0027s {@code roles}.","lastModifiedDate":"2021-10-12"},{"lineNumber":275,"author":{"gitId":"fullfatwasabi"},"content":"         * A defensive copy of {@code roles} is used internally.","lastModifiedDate":"2021-10-12"},{"lineNumber":276,"author":{"gitId":"fullfatwasabi"},"content":"         */","lastModifiedDate":"2021-10-12"},{"lineNumber":277,"author":{"gitId":"fullfatwasabi"},"content":"        public void setRoles(Set\u003cRole\u003e roles) {","lastModifiedDate":"2021-10-12"},{"lineNumber":278,"author":{"gitId":"fullfatwasabi"},"content":"            this.roles \u003d (roles !\u003d null) ? new HashSet\u003c\u003e(roles) : null;","lastModifiedDate":"2021-10-12"},{"lineNumber":279,"author":{"gitId":"fullfatwasabi"},"content":"        }","lastModifiedDate":"2021-10-09"},{"lineNumber":280,"author":{"gitId":"fullfatwasabi"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":281,"author":{"gitId":"fullfatwasabi"},"content":"        /**","lastModifiedDate":"2021-10-12"},{"lineNumber":282,"author":{"gitId":"fullfatwasabi"},"content":"         * Returns an unmodifiable role set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2021-10-12"},{"lineNumber":283,"author":{"gitId":"fullfatwasabi"},"content":"         * if modification is attempted.","lastModifiedDate":"2021-10-12"},{"lineNumber":284,"author":{"gitId":"fullfatwasabi"},"content":"         * Returns {@code Optional#empty()} if {@code roles} is null.","lastModifiedDate":"2021-10-12"},{"lineNumber":285,"author":{"gitId":"fullfatwasabi"},"content":"         */","lastModifiedDate":"2021-10-12"},{"lineNumber":286,"author":{"gitId":"fullfatwasabi"},"content":"        public Optional\u003cSet\u003cRole\u003e\u003e getRoles() {","lastModifiedDate":"2021-10-12"},{"lineNumber":287,"author":{"gitId":"fullfatwasabi"},"content":"            return (roles !\u003d null) ? Optional.of(Collections.unmodifiableSet(roles)) : Optional.empty();","lastModifiedDate":"2021-10-12"},{"lineNumber":288,"author":{"gitId":"fullfatwasabi"},"content":"        }","lastModifiedDate":"2021-10-09"},{"lineNumber":289,"author":{"gitId":"fullfatwasabi"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":290,"author":{"gitId":"fullfatwasabi"},"content":"        public void setSalary(Salary salary) {","lastModifiedDate":"2021-10-09"},{"lineNumber":291,"author":{"gitId":"fullfatwasabi"},"content":"            this.salary \u003d salary;","lastModifiedDate":"2021-10-09"},{"lineNumber":292,"author":{"gitId":"fullfatwasabi"},"content":"        }","lastModifiedDate":"2021-10-09"},{"lineNumber":293,"author":{"gitId":"fullfatwasabi"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":294,"author":{"gitId":"fullfatwasabi"},"content":"        public Optional\u003cSalary\u003e getSalary() {","lastModifiedDate":"2021-10-09"},{"lineNumber":295,"author":{"gitId":"fullfatwasabi"},"content":"            return Optional.ofNullable(salary);","lastModifiedDate":"2021-10-09"},{"lineNumber":296,"author":{"gitId":"fullfatwasabi"},"content":"        }","lastModifiedDate":"2021-10-09"},{"lineNumber":297,"author":{"gitId":"fullfatwasabi"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":298,"author":{"gitId":"fullfatwasabi"},"content":"        public void setStatus(Status status) {","lastModifiedDate":"2021-10-09"},{"lineNumber":299,"author":{"gitId":"fullfatwasabi"},"content":"            this.status \u003d status;","lastModifiedDate":"2021-10-09"},{"lineNumber":300,"author":{"gitId":"fullfatwasabi"},"content":"        }","lastModifiedDate":"2021-10-09"},{"lineNumber":301,"author":{"gitId":"fullfatwasabi"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":302,"author":{"gitId":"fullfatwasabi"},"content":"        public Optional\u003cStatus\u003e getStatus() {","lastModifiedDate":"2021-10-09"},{"lineNumber":303,"author":{"gitId":"fullfatwasabi"},"content":"            return Optional.ofNullable(status);","lastModifiedDate":"2021-10-09"},{"lineNumber":304,"author":{"gitId":"fullfatwasabi"},"content":"        }","lastModifiedDate":"2021-10-09"},{"lineNumber":305,"author":{"gitId":"fullfatwasabi"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":306,"author":{"gitId":"Gabau"},"content":"        /**","lastModifiedDate":"2021-10-12"},{"lineNumber":307,"author":{"gitId":"Gabau"},"content":"         * Sets {@code periods} to this object\u0027s {@code periods}.","lastModifiedDate":"2021-10-12"},{"lineNumber":308,"author":{"gitId":"Gabau"},"content":"         * A defensive copy of {@code periods is used internally.}","lastModifiedDate":"2021-10-12"},{"lineNumber":309,"author":{"gitId":"Gabau"},"content":"         * @param periods","lastModifiedDate":"2021-10-12"},{"lineNumber":310,"author":{"gitId":"Gabau"},"content":"         */","lastModifiedDate":"2021-10-12"},{"lineNumber":311,"author":{"gitId":"Gabau"},"content":"        public void setPeriod(Set\u003cPeriod\u003e periods) {","lastModifiedDate":"2021-10-12"},{"lineNumber":312,"author":{"gitId":"Gabau"},"content":"            this.absentPeriods \u003d (periods !\u003d null) ? new HashSet\u003c\u003e(periods) : null;","lastModifiedDate":"2021-10-12"},{"lineNumber":313,"author":{"gitId":"Gabau"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":314,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":315,"author":{"gitId":"Gabau"},"content":"        /**","lastModifiedDate":"2021-10-12"},{"lineNumber":316,"author":{"gitId":"Gabau"},"content":"         * Returns an unmodifiable period set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2021-10-12"},{"lineNumber":317,"author":{"gitId":"Gabau"},"content":"         * if modification is attempted.","lastModifiedDate":"2021-10-12"},{"lineNumber":318,"author":{"gitId":"Gabau"},"content":"         * Returns {@code Optional#empty()} if {@code period} is null.","lastModifiedDate":"2021-10-12"},{"lineNumber":319,"author":{"gitId":"Gabau"},"content":"         */","lastModifiedDate":"2021-10-12"},{"lineNumber":320,"author":{"gitId":"Gabau"},"content":"        public Optional\u003cSet\u003cPeriod\u003e\u003e getPeriod() {","lastModifiedDate":"2021-10-12"},{"lineNumber":321,"author":{"gitId":"Gabau"},"content":"            return absentPeriods !\u003d null","lastModifiedDate":"2021-10-12"},{"lineNumber":322,"author":{"gitId":"Gabau"},"content":"                    ? Optional.of(Collections.unmodifiableSet(absentPeriods))","lastModifiedDate":"2021-10-12"},{"lineNumber":323,"author":{"gitId":"Gabau"},"content":"                    : Optional.empty();","lastModifiedDate":"2021-10-12"},{"lineNumber":324,"author":{"gitId":"Gabau"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":325,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":326,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":327,"author":{"gitId":"-"},"content":"         * Sets {@code tags} to this object\u0027s {@code tags}.","lastModifiedDate":"2018-01-11"},{"lineNumber":328,"author":{"gitId":"-"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2018-01-11"},{"lineNumber":329,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":330,"author":{"gitId":"-"},"content":"        public void setTags(Set\u003cTag\u003e tags) {","lastModifiedDate":"2017-06-21"},{"lineNumber":331,"author":{"gitId":"-"},"content":"            this.tags \u003d (tags !\u003d null) ? new HashSet\u003c\u003e(tags) : null;","lastModifiedDate":"2018-01-11"},{"lineNumber":332,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":333,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":334,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":335,"author":{"gitId":"-"},"content":"         * Returns an unmodifiable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2018-01-11"},{"lineNumber":336,"author":{"gitId":"-"},"content":"         * if modification is attempted.","lastModifiedDate":"2018-01-11"},{"lineNumber":337,"author":{"gitId":"-"},"content":"         * Returns {@code Optional#empty()} if {@code tags} is null.","lastModifiedDate":"2018-01-11"},{"lineNumber":338,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":339,"author":{"gitId":"-"},"content":"        public Optional\u003cSet\u003cTag\u003e\u003e getTags() {","lastModifiedDate":"2017-03-07"},{"lineNumber":340,"author":{"gitId":"-"},"content":"            return (tags !\u003d null) ? Optional.of(Collections.unmodifiableSet(tags)) : Optional.empty();","lastModifiedDate":"2018-01-11"},{"lineNumber":341,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":342,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":343,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-05"},{"lineNumber":344,"author":{"gitId":"-"},"content":"        public boolean equals(Object other) {","lastModifiedDate":"2017-05-05"},{"lineNumber":345,"author":{"gitId":"-"},"content":"            // short circuit if same object","lastModifiedDate":"2017-05-05"},{"lineNumber":346,"author":{"gitId":"-"},"content":"            if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-05"},{"lineNumber":347,"author":{"gitId":"-"},"content":"                return true;","lastModifiedDate":"2017-05-05"},{"lineNumber":348,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":349,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":350,"author":{"gitId":"-"},"content":"            // instanceof handles nulls","lastModifiedDate":"2017-05-05"},{"lineNumber":351,"author":{"gitId":"-"},"content":"            if (!(other instanceof EditPersonDescriptor)) {","lastModifiedDate":"2017-05-05"},{"lineNumber":352,"author":{"gitId":"-"},"content":"                return false;","lastModifiedDate":"2017-05-05"},{"lineNumber":353,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":354,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":355,"author":{"gitId":"-"},"content":"            // state check","lastModifiedDate":"2017-05-05"},{"lineNumber":356,"author":{"gitId":"-"},"content":"            EditPersonDescriptor e \u003d (EditPersonDescriptor) other;","lastModifiedDate":"2017-05-05"},{"lineNumber":357,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-21"},{"lineNumber":358,"author":{"gitId":"-"},"content":"            return getName().equals(e.getName())","lastModifiedDate":"2017-06-21"},{"lineNumber":359,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getPhone().equals(e.getPhone())","lastModifiedDate":"2017-06-21"},{"lineNumber":360,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getEmail().equals(e.getEmail())","lastModifiedDate":"2017-06-21"},{"lineNumber":361,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getAddress().equals(e.getAddress())","lastModifiedDate":"2017-06-21"},{"lineNumber":362,"author":{"gitId":"fullfatwasabi"},"content":"                    \u0026\u0026 getRoles().equals(e.getRoles())","lastModifiedDate":"2021-10-12"},{"lineNumber":363,"author":{"gitId":"fullfatwasabi"},"content":"                    \u0026\u0026 getSalary().equals(e.getSalary())","lastModifiedDate":"2021-10-09"},{"lineNumber":364,"author":{"gitId":"fullfatwasabi"},"content":"                    \u0026\u0026 getStatus().equals(e.getStatus())","lastModifiedDate":"2021-10-09"},{"lineNumber":365,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getTags().equals(e.getTags());","lastModifiedDate":"2021-10-13"},{"lineNumber":366,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-05"},{"lineNumber":367,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":368,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-26"}],"authorContributionMap":{"Gabau":88,"fullfatwasabi":58,"-":206,"IrvingHe000":16}},{"path":"src/main/java/seedu/address/logic/commands/FindCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2018-04-01"},{"lineNumber":6,"author":{"gitId":"mweeruien"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-10"},{"lineNumber":7,"author":{"gitId":"mweeruien"},"content":"import seedu.address.logic.parser.CliSyntax;","lastModifiedDate":"2021-10-10"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":9,"author":{"gitId":"mweeruien"},"content":"import seedu.address.model.person.predicates.NameContainsKeywordsPredicate;","lastModifiedDate":"2021-10-10"},{"lineNumber":10,"author":{"gitId":"mweeruien"},"content":"import seedu.address.model.person.predicates.StaffHasCorrectIndexPredicate;","lastModifiedDate":"2021-10-10"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * Finds and lists all persons in address book whose name contains any of the argument keywords.","lastModifiedDate":"2016-09-22"},{"lineNumber":14,"author":{"gitId":"mweeruien"},"content":" * Keyword matching is case-insensitive.","lastModifiedDate":"2021-10-10"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2016-09-22"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"find\";","lastModifiedDate":"2016-09-22"},{"lineNumber":19,"author":{"gitId":"mweeruien"},"content":"    public static final int INVALID_INDEX \u003d -1;","lastModifiedDate":"2021-10-10"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Finds all persons whose names contain any of \"","lastModifiedDate":"2016-09-22"},{"lineNumber":22,"author":{"gitId":"mweeruien"},"content":"            + \"the specified keywords (case-insensitive) or the index specified and \"","lastModifiedDate":"2021-10-10"},{"lineNumber":23,"author":{"gitId":"mweeruien"},"content":"            + \"displays them as a list with index numbers.\\n\"","lastModifiedDate":"2021-10-10"},{"lineNumber":24,"author":{"gitId":"mweeruien"},"content":"            + \"Name Search Parameters: \" + CliSyntax.PREFIX_DASH_NAME.getPrefix() + \" KEYWORD [MORE_KEYWORDS]...\\n\"","lastModifiedDate":"2021-10-10"},{"lineNumber":25,"author":{"gitId":"mweeruien"},"content":"            + \"Example: \" + COMMAND_WORD + \" alice bob charlie\\n\"","lastModifiedDate":"2021-10-10"},{"lineNumber":26,"author":{"gitId":"mweeruien"},"content":"            + \"Index Search Parameters: \" + CliSyntax.PREFIX_DASH_INDEX + \" INDEX\\n\"","lastModifiedDate":"2021-10-10"},{"lineNumber":27,"author":{"gitId":"mweeruien"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1\";","lastModifiedDate":"2021-10-10"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":29,"author":{"gitId":"mweeruien"},"content":"    private final NameContainsKeywordsPredicate namePredicate;","lastModifiedDate":"2021-10-10"},{"lineNumber":30,"author":{"gitId":"mweeruien"},"content":"    private final int index;","lastModifiedDate":"2021-10-10"},{"lineNumber":31,"author":{"gitId":"mweeruien"},"content":"    private StaffHasCorrectIndexPredicate indexPredicate \u003d null;","lastModifiedDate":"2021-10-10"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":33,"author":{"gitId":"mweeruien"},"content":"    /**","lastModifiedDate":"2021-10-10"},{"lineNumber":34,"author":{"gitId":"mweeruien"},"content":"     * Constructs a FindCommand object which searches by name","lastModifiedDate":"2021-10-10"},{"lineNumber":35,"author":{"gitId":"mweeruien"},"content":"     *","lastModifiedDate":"2021-10-10"},{"lineNumber":36,"author":{"gitId":"mweeruien"},"content":"     * @param namePredicate Predicate to filter the list by names that match a given name.","lastModifiedDate":"2021-10-10"},{"lineNumber":37,"author":{"gitId":"mweeruien"},"content":"     */","lastModifiedDate":"2021-10-10"},{"lineNumber":38,"author":{"gitId":"mweeruien"},"content":"    public FindCommand(NameContainsKeywordsPredicate namePredicate) {","lastModifiedDate":"2021-10-10"},{"lineNumber":39,"author":{"gitId":"mweeruien"},"content":"        this.namePredicate \u003d namePredicate;","lastModifiedDate":"2021-10-10"},{"lineNumber":40,"author":{"gitId":"mweeruien"},"content":"        this.index \u003d INVALID_INDEX; // not used","lastModifiedDate":"2021-10-10"},{"lineNumber":41,"author":{"gitId":"mweeruien"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":42,"author":{"gitId":"mweeruien"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":43,"author":{"gitId":"mweeruien"},"content":"    /**","lastModifiedDate":"2021-10-10"},{"lineNumber":44,"author":{"gitId":"mweeruien"},"content":"     * Constructs a FindCommand object which searches for the person at a specific index.","lastModifiedDate":"2021-10-10"},{"lineNumber":45,"author":{"gitId":"mweeruien"},"content":"     *","lastModifiedDate":"2021-10-10"},{"lineNumber":46,"author":{"gitId":"mweeruien"},"content":"     * @param index The index that the user searched for.","lastModifiedDate":"2021-10-10"},{"lineNumber":47,"author":{"gitId":"mweeruien"},"content":"     */","lastModifiedDate":"2021-10-10"},{"lineNumber":48,"author":{"gitId":"mweeruien"},"content":"    public FindCommand(int index) {","lastModifiedDate":"2021-10-10"},{"lineNumber":49,"author":{"gitId":"mweeruien"},"content":"        this.namePredicate \u003d null;","lastModifiedDate":"2021-10-10"},{"lineNumber":50,"author":{"gitId":"mweeruien"},"content":"        this.index \u003d index;","lastModifiedDate":"2021-10-10"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-22"},{"lineNumber":54,"author":{"gitId":"mweeruien"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-10-10"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":56,"author":{"gitId":"mweeruien"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":57,"author":{"gitId":"mweeruien"},"content":"        if (namePredicate !\u003d null) {","lastModifiedDate":"2021-10-10"},{"lineNumber":58,"author":{"gitId":"mweeruien"},"content":"            return executeNameSearch(model);","lastModifiedDate":"2021-10-10"},{"lineNumber":59,"author":{"gitId":"mweeruien"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":60,"author":{"gitId":"mweeruien"},"content":"        } else if (index \u003e -1) {","lastModifiedDate":"2021-10-10"},{"lineNumber":61,"author":{"gitId":"mweeruien"},"content":"            checkIndex(model); // throws an exception if index is out of range","lastModifiedDate":"2021-10-10"},{"lineNumber":62,"author":{"gitId":"mweeruien"},"content":"            indexPredicate \u003d new StaffHasCorrectIndexPredicate(index, model);","lastModifiedDate":"2021-10-10"},{"lineNumber":63,"author":{"gitId":"mweeruien"},"content":"            return executeIndexSearch(model);","lastModifiedDate":"2021-10-10"},{"lineNumber":64,"author":{"gitId":"mweeruien"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":65,"author":{"gitId":"mweeruien"},"content":"        } else {","lastModifiedDate":"2021-10-10"},{"lineNumber":66,"author":{"gitId":"mweeruien"},"content":"            throw new CommandException(\"Check if your input are correct: -n for name, -i for index,\\n\"","lastModifiedDate":"2021-10-10"},{"lineNumber":67,"author":{"gitId":"mweeruien"},"content":"                    + \"and that the index given is correct!\");","lastModifiedDate":"2021-10-10"},{"lineNumber":68,"author":{"gitId":"mweeruien"},"content":"        }","lastModifiedDate":"2021-10-10"},{"lineNumber":69,"author":{"gitId":"mweeruien"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":70,"author":{"gitId":"mweeruien"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":71,"author":{"gitId":"mweeruien"},"content":"    /**","lastModifiedDate":"2021-10-10"},{"lineNumber":72,"author":{"gitId":"mweeruien"},"content":"     * Executes a search by name.","lastModifiedDate":"2021-10-10"},{"lineNumber":73,"author":{"gitId":"mweeruien"},"content":"     *","lastModifiedDate":"2021-10-10"},{"lineNumber":74,"author":{"gitId":"mweeruien"},"content":"     * @param model The model which contains the list to be searched on.","lastModifiedDate":"2021-10-10"},{"lineNumber":75,"author":{"gitId":"mweeruien"},"content":"     * @return a CommandResult to be displayed.","lastModifiedDate":"2021-10-10"},{"lineNumber":76,"author":{"gitId":"mweeruien"},"content":"     */","lastModifiedDate":"2021-10-10"},{"lineNumber":77,"author":{"gitId":"mweeruien"},"content":"    public CommandResult executeNameSearch(Model model) {","lastModifiedDate":"2021-10-10"},{"lineNumber":78,"author":{"gitId":"mweeruien"},"content":"        model.updateFilteredPersonList(namePredicate);","lastModifiedDate":"2021-10-10"},{"lineNumber":79,"author":{"gitId":"mweeruien"},"content":"        return new CommandResult(","lastModifiedDate":"2021-10-10"},{"lineNumber":80,"author":{"gitId":"mweeruien"},"content":"                String.format(Messages.MESSAGE_PERSONS_LISTED_OVERVIEW, model.getFilteredPersonList().size()));","lastModifiedDate":"2021-10-10"},{"lineNumber":81,"author":{"gitId":"mweeruien"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":82,"author":{"gitId":"mweeruien"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":83,"author":{"gitId":"mweeruien"},"content":"    /**","lastModifiedDate":"2021-10-10"},{"lineNumber":84,"author":{"gitId":"mweeruien"},"content":"     * Executes a search by index.","lastModifiedDate":"2021-10-10"},{"lineNumber":85,"author":{"gitId":"mweeruien"},"content":"     *","lastModifiedDate":"2021-10-10"},{"lineNumber":86,"author":{"gitId":"mweeruien"},"content":"     * @param model The model which contains the list to be searched on.","lastModifiedDate":"2021-10-10"},{"lineNumber":87,"author":{"gitId":"mweeruien"},"content":"     * @return a CommandResult to be displayed.","lastModifiedDate":"2021-10-10"},{"lineNumber":88,"author":{"gitId":"mweeruien"},"content":"     */","lastModifiedDate":"2021-10-10"},{"lineNumber":89,"author":{"gitId":"mweeruien"},"content":"    public CommandResult executeIndexSearch(Model model) {","lastModifiedDate":"2021-10-10"},{"lineNumber":90,"author":{"gitId":"mweeruien"},"content":"        model.updateFilteredPersonList(indexPredicate);","lastModifiedDate":"2021-10-10"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        return new CommandResult(","lastModifiedDate":"2018-04-01"},{"lineNumber":92,"author":{"gitId":"-"},"content":"                String.format(Messages.MESSAGE_PERSONS_LISTED_OVERVIEW, model.getFilteredPersonList().size()));","lastModifiedDate":"2018-04-01"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":95,"author":{"gitId":"mweeruien"},"content":"    /**","lastModifiedDate":"2021-10-10"},{"lineNumber":96,"author":{"gitId":"mweeruien"},"content":"     * Checks if the index is within a suitable range for the list contained in the model.","lastModifiedDate":"2021-10-10"},{"lineNumber":97,"author":{"gitId":"mweeruien"},"content":"     *","lastModifiedDate":"2021-10-10"},{"lineNumber":98,"author":{"gitId":"mweeruien"},"content":"     * @param model The model which contains the list to be searched on.","lastModifiedDate":"2021-10-10"},{"lineNumber":99,"author":{"gitId":"mweeruien"},"content":"     * @throws CommandException When the index inputted is not within range.","lastModifiedDate":"2021-10-10"},{"lineNumber":100,"author":{"gitId":"mweeruien"},"content":"     */","lastModifiedDate":"2021-10-10"},{"lineNumber":101,"author":{"gitId":"mweeruien"},"content":"    public void checkIndex(Model model) throws CommandException {","lastModifiedDate":"2021-10-10"},{"lineNumber":102,"author":{"gitId":"mweeruien"},"content":"        int personListSize \u003d model.getFilteredPersonList().size();","lastModifiedDate":"2021-10-10"},{"lineNumber":103,"author":{"gitId":"mweeruien"},"content":"        if (index \u003e personListSize - 1) { // -1 so that index starts from 0","lastModifiedDate":"2021-10-10"},{"lineNumber":104,"author":{"gitId":"mweeruien"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2021-10-10"},{"lineNumber":105,"author":{"gitId":"mweeruien"},"content":"        }","lastModifiedDate":"2021-10-10"},{"lineNumber":106,"author":{"gitId":"mweeruien"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":107,"author":{"gitId":"mweeruien"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":108,"author":{"gitId":"mweeruien"},"content":"    /**","lastModifiedDate":"2021-10-10"},{"lineNumber":109,"author":{"gitId":"mweeruien"},"content":"     * Returns the index of the FindCommand object.","lastModifiedDate":"2021-10-10"},{"lineNumber":110,"author":{"gitId":"mweeruien"},"content":"     *","lastModifiedDate":"2021-10-10"},{"lineNumber":111,"author":{"gitId":"mweeruien"},"content":"     * @return index","lastModifiedDate":"2021-10-10"},{"lineNumber":112,"author":{"gitId":"mweeruien"},"content":"     */","lastModifiedDate":"2021-10-10"},{"lineNumber":113,"author":{"gitId":"mweeruien"},"content":"    public int getIndex() {","lastModifiedDate":"2021-10-10"},{"lineNumber":114,"author":{"gitId":"mweeruien"},"content":"        return this.index;","lastModifiedDate":"2021-10-10"},{"lineNumber":115,"author":{"gitId":"mweeruien"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":116,"author":{"gitId":"mweeruien"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":117,"author":{"gitId":"mweeruien"},"content":"    /**","lastModifiedDate":"2021-10-10"},{"lineNumber":118,"author":{"gitId":"mweeruien"},"content":"     * Returns the namePredicate of the FindCommand object.","lastModifiedDate":"2021-10-10"},{"lineNumber":119,"author":{"gitId":"mweeruien"},"content":"     *","lastModifiedDate":"2021-10-10"},{"lineNumber":120,"author":{"gitId":"mweeruien"},"content":"     * @return namePredicate","lastModifiedDate":"2021-10-10"},{"lineNumber":121,"author":{"gitId":"mweeruien"},"content":"     */","lastModifiedDate":"2021-10-10"},{"lineNumber":122,"author":{"gitId":"mweeruien"},"content":"    public NameContainsKeywordsPredicate getNamePredicate() {","lastModifiedDate":"2021-10-10"},{"lineNumber":123,"author":{"gitId":"mweeruien"},"content":"        return this.namePredicate;","lastModifiedDate":"2021-10-10"},{"lineNumber":124,"author":{"gitId":"mweeruien"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":125,"author":{"gitId":"mweeruien"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-27"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-27"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-27"},{"lineNumber":129,"author":{"gitId":"-"},"content":"                || (other instanceof FindCommand // instanceof handles nulls","lastModifiedDate":"2017-06-27"},{"lineNumber":130,"author":{"gitId":"mweeruien"},"content":"                \u0026\u0026 ((findByNameIsEquals((FindCommand) other)) || findByIndexIsEquals((FindCommand) other)));","lastModifiedDate":"2021-10-10"},{"lineNumber":131,"author":{"gitId":"mweeruien"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":132,"author":{"gitId":"mweeruien"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":133,"author":{"gitId":"mweeruien"},"content":"    /**","lastModifiedDate":"2021-10-10"},{"lineNumber":134,"author":{"gitId":"mweeruien"},"content":"     * Checks if another FindCommand object which searches by name is equal to the current FindCommand object.","lastModifiedDate":"2021-10-10"},{"lineNumber":135,"author":{"gitId":"mweeruien"},"content":"     *","lastModifiedDate":"2021-10-10"},{"lineNumber":136,"author":{"gitId":"mweeruien"},"content":"     * @param otherFind The other FindCommand object to be checked","lastModifiedDate":"2021-10-10"},{"lineNumber":137,"author":{"gitId":"mweeruien"},"content":"     * @return Whether the otherFind is equal to this","lastModifiedDate":"2021-10-10"},{"lineNumber":138,"author":{"gitId":"mweeruien"},"content":"     */","lastModifiedDate":"2021-10-10"},{"lineNumber":139,"author":{"gitId":"mweeruien"},"content":"    public boolean findByNameIsEquals(FindCommand otherFind) {","lastModifiedDate":"2021-10-10"},{"lineNumber":140,"author":{"gitId":"mweeruien"},"content":"        return (otherFind.getIndex() \u003d\u003d INVALID_INDEX \u0026\u0026 this.index \u003d\u003d INVALID_INDEX)","lastModifiedDate":"2021-10-10"},{"lineNumber":141,"author":{"gitId":"mweeruien"},"content":"                \u0026\u0026 (otherFind.getNamePredicate() !\u003d null \u0026\u0026 this.namePredicate !\u003d null)","lastModifiedDate":"2021-10-10"},{"lineNumber":142,"author":{"gitId":"mweeruien"},"content":"                \u0026\u0026 (this.namePredicate.equals(otherFind.getNamePredicate()));","lastModifiedDate":"2021-10-10"},{"lineNumber":143,"author":{"gitId":"mweeruien"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":144,"author":{"gitId":"mweeruien"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":145,"author":{"gitId":"mweeruien"},"content":"    /**","lastModifiedDate":"2021-10-10"},{"lineNumber":146,"author":{"gitId":"mweeruien"},"content":"     * Checks if another FindCommand object which searches by index is equal to the current FindCommand object.","lastModifiedDate":"2021-10-10"},{"lineNumber":147,"author":{"gitId":"mweeruien"},"content":"     *","lastModifiedDate":"2021-10-10"},{"lineNumber":148,"author":{"gitId":"mweeruien"},"content":"     * @param otherFind The other FindCommand object to be checked","lastModifiedDate":"2021-10-10"},{"lineNumber":149,"author":{"gitId":"mweeruien"},"content":"     * @return Whether the otherFind is equal to this","lastModifiedDate":"2021-10-10"},{"lineNumber":150,"author":{"gitId":"mweeruien"},"content":"     */","lastModifiedDate":"2021-10-10"},{"lineNumber":151,"author":{"gitId":"mweeruien"},"content":"    public boolean findByIndexIsEquals(FindCommand otherFind) {","lastModifiedDate":"2021-10-10"},{"lineNumber":152,"author":{"gitId":"mweeruien"},"content":"        return (otherFind.namePredicate \u003d\u003d null \u0026\u0026 this.namePredicate \u003d\u003d null)","lastModifiedDate":"2021-10-10"},{"lineNumber":153,"author":{"gitId":"mweeruien"},"content":"                \u0026\u0026 (otherFind.getIndex() !\u003d INVALID_INDEX \u0026\u0026 this.index !\u003d INVALID_INDEX)","lastModifiedDate":"2021-10-10"},{"lineNumber":154,"author":{"gitId":"mweeruien"},"content":"                \u0026\u0026 (this.index \u003d\u003d otherFind.getIndex());","lastModifiedDate":"2021-10-10"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":156,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"-":31,"mweeruien":125}},{"path":"src/main/java/seedu/address/logic/commands/MarkCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Gabau"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-10-12"},{"lineNumber":2,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":3,"author":{"gitId":"Gabau"},"content":"import static seedu.address.logic.commands.RemoveMarkCommand.listToString;","lastModifiedDate":"2021-10-16"},{"lineNumber":4,"author":{"gitId":"Gabau"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DAY_SHIFT;","lastModifiedDate":"2021-10-13"},{"lineNumber":5,"author":{"gitId":"Gabau"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_INDEX;","lastModifiedDate":"2021-10-13"},{"lineNumber":6,"author":{"gitId":"Gabau"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2021-10-13"},{"lineNumber":7,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":8,"author":{"gitId":"Gabau"},"content":"import java.util.List;","lastModifiedDate":"2021-10-12"},{"lineNumber":9,"author":{"gitId":"Gabau"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2021-10-12"},{"lineNumber":10,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":11,"author":{"gitId":"Gabau"},"content":"import javafx.collections.transformation.FilteredList;","lastModifiedDate":"2021-10-12"},{"lineNumber":12,"author":{"gitId":"Gabau"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2021-10-14"},{"lineNumber":13,"author":{"gitId":"Gabau"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-10-12"},{"lineNumber":14,"author":{"gitId":"Gabau"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-12"},{"lineNumber":15,"author":{"gitId":"Gabau"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-10-12"},{"lineNumber":16,"author":{"gitId":"Gabau"},"content":"import seedu.address.model.person.Period;","lastModifiedDate":"2021-10-12"},{"lineNumber":17,"author":{"gitId":"Gabau"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2021-10-12"},{"lineNumber":18,"author":{"gitId":"Gabau"},"content":"import seedu.address.model.person.PersonContainsFieldsPredicate;","lastModifiedDate":"2021-10-12"},{"lineNumber":19,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":20,"author":{"gitId":"Gabau"},"content":"/**","lastModifiedDate":"2021-10-12"},{"lineNumber":21,"author":{"gitId":"Gabau"},"content":" * Class representing the command for marking a person as absent.","lastModifiedDate":"2021-10-12"},{"lineNumber":22,"author":{"gitId":"Gabau"},"content":" */","lastModifiedDate":"2021-10-12"},{"lineNumber":23,"author":{"gitId":"Gabau"},"content":"public class MarkCommand extends Command {","lastModifiedDate":"2021-10-12"},{"lineNumber":24,"author":{"gitId":"Gabau"},"content":"    public static final String COMMAND_WORD \u003d \"mark\";","lastModifiedDate":"2021-10-12"},{"lineNumber":25,"author":{"gitId":"Gabau"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Used to mark someone as absent!\\n\"","lastModifiedDate":"2021-10-13"},{"lineNumber":26,"author":{"gitId":"Gabau"},"content":"            + \"e.g. \" + COMMAND_WORD + \" \" + PREFIX_INDEX + \"INDEX\"","lastModifiedDate":"2021-10-13"},{"lineNumber":27,"author":{"gitId":"Gabau"},"content":"            + \" \" + PREFIX_DAY_SHIFT + \"DATE\" + \",\\n\"","lastModifiedDate":"2021-10-13"},{"lineNumber":28,"author":{"gitId":"Gabau"},"content":"            + COMMAND_WORD + \" \" + PREFIX_NAME + \"NAME\"","lastModifiedDate":"2021-10-13"},{"lineNumber":29,"author":{"gitId":"Gabau"},"content":"            + PREFIX_DAY_SHIFT + \"DATE\" + \" \" + PREFIX_DAY_SHIFT + \"DATE\";","lastModifiedDate":"2021-10-13"},{"lineNumber":30,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":31,"author":{"gitId":"Gabau"},"content":"    public static final String DEFAULT_EXECUTION \u003d \"%1$d number of staff have been marked for the period %2$s\\n\"","lastModifiedDate":"2021-10-13"},{"lineNumber":32,"author":{"gitId":"Gabau"},"content":"            + \"%3$s\";","lastModifiedDate":"2021-10-12"},{"lineNumber":33,"author":{"gitId":"Gabau"},"content":"    public static final String NOTHING_CHANGED \u003d \"Staff has already been marked for the input duration: %1$s\";","lastModifiedDate":"2021-10-14"},{"lineNumber":34,"author":{"gitId":"Gabau"},"content":"    private final Period period;","lastModifiedDate":"2021-10-14"},{"lineNumber":35,"author":{"gitId":"Gabau"},"content":"    private final PersonContainsFieldsPredicate predicate;","lastModifiedDate":"2021-10-14"},{"lineNumber":36,"author":{"gitId":"Gabau"},"content":"    private final int index;","lastModifiedDate":"2021-10-14"},{"lineNumber":37,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":38,"author":{"gitId":"Gabau"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":39,"author":{"gitId":"Gabau"},"content":"     * Constructs an {@code MarkCommand} to indicate that a person who satisfies","lastModifiedDate":"2021-10-12"},{"lineNumber":40,"author":{"gitId":"Gabau"},"content":"     * the {@code PersonContainsFieldsPredicate} has been marked as not working","lastModifiedDate":"2021-10-12"},{"lineNumber":41,"author":{"gitId":"Gabau"},"content":"     * in {@code period}.","lastModifiedDate":"2021-10-13"},{"lineNumber":42,"author":{"gitId":"Gabau"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":43,"author":{"gitId":"Gabau"},"content":"    public MarkCommand(PersonContainsFieldsPredicate predicate, Period period) {","lastModifiedDate":"2021-10-12"},{"lineNumber":44,"author":{"gitId":"Gabau"},"content":"        this.period \u003d period;","lastModifiedDate":"2021-10-12"},{"lineNumber":45,"author":{"gitId":"Gabau"},"content":"        this.predicate \u003d predicate;","lastModifiedDate":"2021-10-12"},{"lineNumber":46,"author":{"gitId":"Gabau"},"content":"        this.index \u003d -1;","lastModifiedDate":"2021-10-14"},{"lineNumber":47,"author":{"gitId":"Gabau"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":48,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":49,"author":{"gitId":"Gabau"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":50,"author":{"gitId":"Gabau"},"content":"     * Constructs an {@code MarkCommand} to indicate that a person who is","lastModifiedDate":"2021-10-12"},{"lineNumber":51,"author":{"gitId":"Gabau"},"content":"     * at {@code index} during the execution of the command is not working during","lastModifiedDate":"2021-10-12"},{"lineNumber":52,"author":{"gitId":"Gabau"},"content":"     * {@code period}.","lastModifiedDate":"2021-10-12"},{"lineNumber":53,"author":{"gitId":"Gabau"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":54,"author":{"gitId":"Gabau"},"content":"    public MarkCommand(Index index, Period period, PersonContainsFieldsPredicate predicate) {","lastModifiedDate":"2021-10-12"},{"lineNumber":55,"author":{"gitId":"Gabau"},"content":"        this.period \u003d period;","lastModifiedDate":"2021-10-12"},{"lineNumber":56,"author":{"gitId":"Gabau"},"content":"        this.predicate \u003d predicate;","lastModifiedDate":"2021-10-12"},{"lineNumber":57,"author":{"gitId":"Gabau"},"content":"        this.index \u003d index.getZeroBased();","lastModifiedDate":"2021-10-14"},{"lineNumber":58,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":59,"author":{"gitId":"Gabau"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":60,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":61,"author":{"gitId":"Gabau"},"content":"    @Override","lastModifiedDate":"2021-10-12"},{"lineNumber":62,"author":{"gitId":"Gabau"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-10-12"},{"lineNumber":63,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":64,"author":{"gitId":"Gabau"},"content":"        if (index !\u003d -1) {","lastModifiedDate":"2021-10-14"},{"lineNumber":65,"author":{"gitId":"Gabau"},"content":"            return executeIndex(model);","lastModifiedDate":"2021-10-14"},{"lineNumber":66,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":67,"author":{"gitId":"Gabau"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":68,"author":{"gitId":"Gabau"},"content":"        FilteredList\u003cPerson\u003e toModify \u003d model.getFilteredPersonList().filtered(predicate);","lastModifiedDate":"2021-10-14"},{"lineNumber":69,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":70,"author":{"gitId":"Gabau"},"content":"        int total \u003d toModify.size();","lastModifiedDate":"2021-10-12"},{"lineNumber":71,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":72,"author":{"gitId":"Gabau"},"content":"        for (Person p : toModify) {","lastModifiedDate":"2021-10-14"},{"lineNumber":73,"author":{"gitId":"Gabau"},"content":"            if (p.mark(period).equals(p)) {","lastModifiedDate":"2021-10-14"},{"lineNumber":74,"author":{"gitId":"Gabau"},"content":"                throw new CommandException(String.format(NOTHING_CHANGED, p));","lastModifiedDate":"2021-10-14"},{"lineNumber":75,"author":{"gitId":"Gabau"},"content":"            }","lastModifiedDate":"2021-10-14"},{"lineNumber":76,"author":{"gitId":"Gabau"},"content":"        }","lastModifiedDate":"2021-10-14"},{"lineNumber":77,"author":{"gitId":"Gabau"},"content":"        for (Person p : toModify) {","lastModifiedDate":"2021-10-12"},{"lineNumber":78,"author":{"gitId":"Gabau"},"content":"            model.setPerson(p, p.mark(period));","lastModifiedDate":"2021-10-13"},{"lineNumber":79,"author":{"gitId":"Gabau"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":80,"author":{"gitId":"Gabau"},"content":"        List\u003cString\u003e names \u003d toModify.stream()","lastModifiedDate":"2021-10-16"},{"lineNumber":81,"author":{"gitId":"Gabau"},"content":"                .map(staff -\u003e staff.getName().toString())","lastModifiedDate":"2021-10-16"},{"lineNumber":82,"author":{"gitId":"Gabau"},"content":"                .collect(Collectors.toList());","lastModifiedDate":"2021-10-12"},{"lineNumber":83,"author":{"gitId":"Gabau"},"content":"        return new CommandResult(String.format(DEFAULT_EXECUTION, total, period, listToString(names)));","lastModifiedDate":"2021-10-16"},{"lineNumber":84,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":85,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":86,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":87,"author":{"gitId":"Gabau"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":88,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":89,"author":{"gitId":"Gabau"},"content":"    private CommandResult executeIndex(Model model) throws CommandException {","lastModifiedDate":"2021-10-14"},{"lineNumber":90,"author":{"gitId":"Gabau"},"content":"        if (index \u003e\u003d model.getFilteredPersonList().size()) {","lastModifiedDate":"2021-10-14"},{"lineNumber":91,"author":{"gitId":"Gabau"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2021-10-14"},{"lineNumber":92,"author":{"gitId":"Gabau"},"content":"        }","lastModifiedDate":"2021-10-14"},{"lineNumber":93,"author":{"gitId":"Gabau"},"content":"        Person staffToModify \u003d model.getFilteredPersonList().get(index);","lastModifiedDate":"2021-10-14"},{"lineNumber":94,"author":{"gitId":"Gabau"},"content":"        Person changedStaff \u003d staffToModify.mark(period);","lastModifiedDate":"2021-10-14"},{"lineNumber":95,"author":{"gitId":"Gabau"},"content":"        if (staffToModify.equals(changedStaff)) {","lastModifiedDate":"2021-10-14"},{"lineNumber":96,"author":{"gitId":"Gabau"},"content":"            throw new CommandException(String.format(NOTHING_CHANGED, staffToModify));","lastModifiedDate":"2021-10-14"},{"lineNumber":97,"author":{"gitId":"Gabau"},"content":"        }","lastModifiedDate":"2021-10-14"},{"lineNumber":98,"author":{"gitId":"Gabau"},"content":"        model.setPerson(staffToModify, changedStaff);","lastModifiedDate":"2021-10-14"},{"lineNumber":99,"author":{"gitId":"Gabau"},"content":"        return new CommandResult(String.format(DEFAULT_EXECUTION, 1, period, changedStaff.getName()));","lastModifiedDate":"2021-10-16"},{"lineNumber":100,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":101,"author":{"gitId":"Gabau"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":102,"author":{"gitId":"Gabau"},"content":"}","lastModifiedDate":"2021-10-12"}],"authorContributionMap":{"Gabau":102}},{"path":"src/main/java/seedu/address/logic/commands/RemoveMarkCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Gabau"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-10-13"},{"lineNumber":2,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":3,"author":{"gitId":"Gabau"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-13"},{"lineNumber":4,"author":{"gitId":"Gabau"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DAY_SHIFT;","lastModifiedDate":"2021-10-13"},{"lineNumber":5,"author":{"gitId":"Gabau"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_INDEX;","lastModifiedDate":"2021-10-13"},{"lineNumber":6,"author":{"gitId":"Gabau"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2021-10-13"},{"lineNumber":7,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":8,"author":{"gitId":"Gabau"},"content":"import java.util.List;","lastModifiedDate":"2021-10-13"},{"lineNumber":9,"author":{"gitId":"Gabau"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2021-10-13"},{"lineNumber":10,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":11,"author":{"gitId":"Gabau"},"content":"import javafx.collections.transformation.FilteredList;","lastModifiedDate":"2021-10-13"},{"lineNumber":12,"author":{"gitId":"Gabau"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2021-10-13"},{"lineNumber":13,"author":{"gitId":"Gabau"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-10-13"},{"lineNumber":14,"author":{"gitId":"Gabau"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-13"},{"lineNumber":15,"author":{"gitId":"Gabau"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-10-13"},{"lineNumber":16,"author":{"gitId":"Gabau"},"content":"import seedu.address.model.person.Period;","lastModifiedDate":"2021-10-13"},{"lineNumber":17,"author":{"gitId":"Gabau"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2021-10-13"},{"lineNumber":18,"author":{"gitId":"Gabau"},"content":"import seedu.address.model.person.PersonContainsFieldsPredicate;","lastModifiedDate":"2021-10-13"},{"lineNumber":19,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":20,"author":{"gitId":"Gabau"},"content":"/**","lastModifiedDate":"2021-10-13"},{"lineNumber":21,"author":{"gitId":"Gabau"},"content":" * Class representing the command to remove a mark.","lastModifiedDate":"2021-10-13"},{"lineNumber":22,"author":{"gitId":"Gabau"},"content":" */","lastModifiedDate":"2021-10-13"},{"lineNumber":23,"author":{"gitId":"Gabau"},"content":"public class RemoveMarkCommand extends Command {","lastModifiedDate":"2021-10-13"},{"lineNumber":24,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":25,"author":{"gitId":"Gabau"},"content":"    public static final String COMMAND_WORD \u003d \"unmark\";","lastModifiedDate":"2021-10-13"},{"lineNumber":26,"author":{"gitId":"Gabau"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Used to remove the marking of an absentee!\\n\"","lastModifiedDate":"2021-10-13"},{"lineNumber":27,"author":{"gitId":"Gabau"},"content":"            + \"e.g. \" + COMMAND_WORD + \" \" + PREFIX_INDEX + \"INDEX\"","lastModifiedDate":"2021-10-13"},{"lineNumber":28,"author":{"gitId":"Gabau"},"content":"            + \" \" + PREFIX_DAY_SHIFT + \"DATE\" + \",\\n\"","lastModifiedDate":"2021-10-13"},{"lineNumber":29,"author":{"gitId":"Gabau"},"content":"            + COMMAND_WORD + \" \" + PREFIX_NAME + \"NAME\"","lastModifiedDate":"2021-10-13"},{"lineNumber":30,"author":{"gitId":"Gabau"},"content":"            + PREFIX_DAY_SHIFT + \"DATE\" + \" \" + PREFIX_DAY_SHIFT + \"DATE\";","lastModifiedDate":"2021-10-13"},{"lineNumber":31,"author":{"gitId":"Gabau"},"content":"    public static final String NO_STAFF_SATISFIES_QUERY \u003d \"No one satisfies the conditions specified\";","lastModifiedDate":"2021-10-13"},{"lineNumber":32,"author":{"gitId":"Gabau"},"content":"    public static final String STAFF_UNMARKED \u003d \"Staff unmarked:\\n%1$s\";","lastModifiedDate":"2021-10-16"},{"lineNumber":33,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":34,"author":{"gitId":"Gabau"},"content":"    private final PersonContainsFieldsPredicate predicate;","lastModifiedDate":"2021-10-13"},{"lineNumber":35,"author":{"gitId":"Gabau"},"content":"    private final int index;","lastModifiedDate":"2021-10-13"},{"lineNumber":36,"author":{"gitId":"Gabau"},"content":"    private final Period period;","lastModifiedDate":"2021-10-13"},{"lineNumber":37,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":38,"author":{"gitId":"Gabau"},"content":"    /**","lastModifiedDate":"2021-10-13"},{"lineNumber":39,"author":{"gitId":"Gabau"},"content":"     * Constructs an {@code RemoveMarkCommand} to indicate that a person who satisfies","lastModifiedDate":"2021-10-13"},{"lineNumber":40,"author":{"gitId":"Gabau"},"content":"     * the {@code PersonContainsFieldsPredicate} has been marked as working","lastModifiedDate":"2021-10-13"},{"lineNumber":41,"author":{"gitId":"Gabau"},"content":"     * in {@code period}.","lastModifiedDate":"2021-10-13"},{"lineNumber":42,"author":{"gitId":"Gabau"},"content":"     */","lastModifiedDate":"2021-10-13"},{"lineNumber":43,"author":{"gitId":"Gabau"},"content":"    public RemoveMarkCommand(PersonContainsFieldsPredicate predicate, Period period) {","lastModifiedDate":"2021-10-13"},{"lineNumber":44,"author":{"gitId":"Gabau"},"content":"        index \u003d -1;","lastModifiedDate":"2021-10-13"},{"lineNumber":45,"author":{"gitId":"Gabau"},"content":"        this.predicate \u003d predicate;","lastModifiedDate":"2021-10-13"},{"lineNumber":46,"author":{"gitId":"Gabau"},"content":"        this.period \u003d period;","lastModifiedDate":"2021-10-13"},{"lineNumber":47,"author":{"gitId":"Gabau"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":48,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":49,"author":{"gitId":"Gabau"},"content":"    /**","lastModifiedDate":"2021-10-13"},{"lineNumber":50,"author":{"gitId":"Gabau"},"content":"     * Constructs an {@code RemoveMarkCommand} to indicate that a person who satisfies the","lastModifiedDate":"2021-10-13"},{"lineNumber":51,"author":{"gitId":"Gabau"},"content":"     * {@code PersonContainsFieldsPredicate} has been marked as working in","lastModifiedDate":"2021-10-13"},{"lineNumber":52,"author":{"gitId":"Gabau"},"content":"     * {@code period}.","lastModifiedDate":"2021-10-13"},{"lineNumber":53,"author":{"gitId":"Gabau"},"content":"     */","lastModifiedDate":"2021-10-13"},{"lineNumber":54,"author":{"gitId":"Gabau"},"content":"    public RemoveMarkCommand(PersonContainsFieldsPredicate predicate, Index index, Period period) {","lastModifiedDate":"2021-10-13"},{"lineNumber":55,"author":{"gitId":"Gabau"},"content":"        this.index \u003d index.getZeroBased();","lastModifiedDate":"2021-10-13"},{"lineNumber":56,"author":{"gitId":"Gabau"},"content":"        this.predicate \u003d predicate;","lastModifiedDate":"2021-10-13"},{"lineNumber":57,"author":{"gitId":"Gabau"},"content":"        this.period \u003d period;","lastModifiedDate":"2021-10-13"},{"lineNumber":58,"author":{"gitId":"Gabau"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":59,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":60,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":61,"author":{"gitId":"Gabau"},"content":"    @Override","lastModifiedDate":"2021-10-13"},{"lineNumber":62,"author":{"gitId":"Gabau"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-10-13"},{"lineNumber":63,"author":{"gitId":"Gabau"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-10-13"},{"lineNumber":64,"author":{"gitId":"Gabau"},"content":"        if (index !\u003d -1) {","lastModifiedDate":"2021-10-13"},{"lineNumber":65,"author":{"gitId":"Gabau"},"content":"            return executeIndex(model);","lastModifiedDate":"2021-10-13"},{"lineNumber":66,"author":{"gitId":"Gabau"},"content":"        }","lastModifiedDate":"2021-10-13"},{"lineNumber":67,"author":{"gitId":"Gabau"},"content":"        FilteredList\u003cPerson\u003e toEdit \u003d model.getUnFilteredPersonList()","lastModifiedDate":"2021-10-13"},{"lineNumber":68,"author":{"gitId":"Gabau"},"content":"                .filtered(this.predicate);","lastModifiedDate":"2021-10-13"},{"lineNumber":69,"author":{"gitId":"Gabau"},"content":"        if (toEdit.size() \u003d\u003d 0) {","lastModifiedDate":"2021-10-13"},{"lineNumber":70,"author":{"gitId":"Gabau"},"content":"            throw new CommandException(NO_STAFF_SATISFIES_QUERY);","lastModifiedDate":"2021-10-13"},{"lineNumber":71,"author":{"gitId":"Gabau"},"content":"        }","lastModifiedDate":"2021-10-13"},{"lineNumber":72,"author":{"gitId":"Gabau"},"content":"        for (Person p : toEdit) {","lastModifiedDate":"2021-10-13"},{"lineNumber":73,"author":{"gitId":"Gabau"},"content":"            model.setPerson(p, checkPerson(p));","lastModifiedDate":"2021-10-13"},{"lineNumber":74,"author":{"gitId":"Gabau"},"content":"        }","lastModifiedDate":"2021-10-13"},{"lineNumber":75,"author":{"gitId":"Gabau"},"content":"        List\u003cString\u003e toPrint \u003d toEdit.stream()","lastModifiedDate":"2021-10-13"},{"lineNumber":76,"author":{"gitId":"Gabau"},"content":"                .map(Person::getName)","lastModifiedDate":"2021-10-13"},{"lineNumber":77,"author":{"gitId":"Gabau"},"content":"                .map(Object::toString)","lastModifiedDate":"2021-10-13"},{"lineNumber":78,"author":{"gitId":"Gabau"},"content":"                .collect(Collectors.toList());","lastModifiedDate":"2021-10-13"},{"lineNumber":79,"author":{"gitId":"Gabau"},"content":"        return new CommandResult(String.format(STAFF_UNMARKED, listToString(toPrint)));","lastModifiedDate":"2021-10-13"},{"lineNumber":80,"author":{"gitId":"Gabau"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":81,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":82,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":83,"author":{"gitId":"Gabau"},"content":"    private CommandResult executeIndex(Model model) throws CommandException {","lastModifiedDate":"2021-10-13"},{"lineNumber":84,"author":{"gitId":"Gabau"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-10-13"},{"lineNumber":85,"author":{"gitId":"Gabau"},"content":"        if (index \u003e model.getFilteredPersonList().size()) {","lastModifiedDate":"2021-10-13"},{"lineNumber":86,"author":{"gitId":"Gabau"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2021-10-13"},{"lineNumber":87,"author":{"gitId":"Gabau"},"content":"        }","lastModifiedDate":"2021-10-13"},{"lineNumber":88,"author":{"gitId":"Gabau"},"content":"        Person toTest \u003d model.getFilteredPersonList().get(index);","lastModifiedDate":"2021-10-13"},{"lineNumber":89,"author":{"gitId":"Gabau"},"content":"        model.setPerson(toTest, checkPerson(toTest));","lastModifiedDate":"2021-10-13"},{"lineNumber":90,"author":{"gitId":"Gabau"},"content":"        return new CommandResult(String.format(STAFF_UNMARKED, toTest.getName()));","lastModifiedDate":"2021-10-16"},{"lineNumber":91,"author":{"gitId":"Gabau"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":92,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":93,"author":{"gitId":"Gabau"},"content":"    /**","lastModifiedDate":"2021-10-13"},{"lineNumber":94,"author":{"gitId":"Gabau"},"content":"     * Converts a {@code List\u003cString\u003e strings} of strings to the following format.","lastModifiedDate":"2021-10-13"},{"lineNumber":95,"author":{"gitId":"Gabau"},"content":"     * e.g. [\"Rudy\", \"Roxy\", \"Paul\"] would output","lastModifiedDate":"2021-10-13"},{"lineNumber":96,"author":{"gitId":"Gabau"},"content":"     * Rudy","lastModifiedDate":"2021-10-13"},{"lineNumber":97,"author":{"gitId":"Gabau"},"content":"     * Roxy","lastModifiedDate":"2021-10-13"},{"lineNumber":98,"author":{"gitId":"Gabau"},"content":"     * Paul","lastModifiedDate":"2021-10-13"},{"lineNumber":99,"author":{"gitId":"Gabau"},"content":"     * Note that there is no new line at the end.","lastModifiedDate":"2021-10-13"},{"lineNumber":100,"author":{"gitId":"Gabau"},"content":"     */","lastModifiedDate":"2021-10-13"},{"lineNumber":101,"author":{"gitId":"Gabau"},"content":"    public static String listToString(List\u003cString\u003e strings) {","lastModifiedDate":"2021-10-13"},{"lineNumber":102,"author":{"gitId":"Gabau"},"content":"        StringBuilder result \u003d new StringBuilder();","lastModifiedDate":"2021-10-13"},{"lineNumber":103,"author":{"gitId":"Gabau"},"content":"        for (String string : strings) {","lastModifiedDate":"2021-10-15"},{"lineNumber":104,"author":{"gitId":"Gabau"},"content":"            result.append(string);","lastModifiedDate":"2021-10-15"},{"lineNumber":105,"author":{"gitId":"Gabau"},"content":"            result.append(\"\\n\");","lastModifiedDate":"2021-10-16"},{"lineNumber":106,"author":{"gitId":"Gabau"},"content":"        }","lastModifiedDate":"2021-10-13"},{"lineNumber":107,"author":{"gitId":"Gabau"},"content":"        return result.toString().trim();","lastModifiedDate":"2021-10-16"},{"lineNumber":108,"author":{"gitId":"Gabau"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":109,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":110,"author":{"gitId":"Gabau"},"content":"    /**","lastModifiedDate":"2021-10-13"},{"lineNumber":111,"author":{"gitId":"Gabau"},"content":"     * Checks if the staff satisfies the {@code predicate} and","lastModifiedDate":"2021-10-13"},{"lineNumber":112,"author":{"gitId":"Gabau"},"content":"     * has {@code period} to be removed from the unmark command.","lastModifiedDate":"2021-10-13"},{"lineNumber":113,"author":{"gitId":"Gabau"},"content":"     *","lastModifiedDate":"2021-10-13"},{"lineNumber":114,"author":{"gitId":"Gabau"},"content":"     * @throws CommandException When the staff does not satisfy the conditions.","lastModifiedDate":"2021-10-13"},{"lineNumber":115,"author":{"gitId":"Gabau"},"content":"     */","lastModifiedDate":"2021-10-13"},{"lineNumber":116,"author":{"gitId":"Gabau"},"content":"    private Person checkPerson(Person toTest) throws CommandException {","lastModifiedDate":"2021-10-13"},{"lineNumber":117,"author":{"gitId":"Gabau"},"content":"        requireNonNull(toTest);","lastModifiedDate":"2021-10-13"},{"lineNumber":118,"author":{"gitId":"Gabau"},"content":"        //ensures that the staff to unmark satisfies the predicate","lastModifiedDate":"2021-10-13"},{"lineNumber":119,"author":{"gitId":"Gabau"},"content":"        if (!this.predicate.test(toTest)) {","lastModifiedDate":"2021-10-13"},{"lineNumber":120,"author":{"gitId":"Gabau"},"content":"            throw new CommandException(NO_STAFF_SATISFIES_QUERY);","lastModifiedDate":"2021-10-13"},{"lineNumber":121,"author":{"gitId":"Gabau"},"content":"        }","lastModifiedDate":"2021-10-13"},{"lineNumber":122,"author":{"gitId":"Gabau"},"content":"        Person result \u003d toTest.unMark(period);","lastModifiedDate":"2021-10-13"},{"lineNumber":123,"author":{"gitId":"Gabau"},"content":"        //when nothing has changed","lastModifiedDate":"2021-10-13"},{"lineNumber":124,"author":{"gitId":"Gabau"},"content":"        if (result.equals(toTest)) {","lastModifiedDate":"2021-10-13"},{"lineNumber":125,"author":{"gitId":"Gabau"},"content":"            throw new CommandException(NO_STAFF_SATISFIES_QUERY);","lastModifiedDate":"2021-10-13"},{"lineNumber":126,"author":{"gitId":"Gabau"},"content":"        }","lastModifiedDate":"2021-10-13"},{"lineNumber":127,"author":{"gitId":"Gabau"},"content":"        return result;","lastModifiedDate":"2021-10-13"},{"lineNumber":128,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":129,"author":{"gitId":"Gabau"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":130,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":131,"author":{"gitId":"Gabau"},"content":"    @Override","lastModifiedDate":"2021-10-13"},{"lineNumber":132,"author":{"gitId":"Gabau"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2021-10-13"},{"lineNumber":133,"author":{"gitId":"Gabau"},"content":"        return (obj !\u003d null)","lastModifiedDate":"2021-10-13"},{"lineNumber":134,"author":{"gitId":"Gabau"},"content":"                \u0026\u0026 (obj instanceof RemoveMarkCommand)","lastModifiedDate":"2021-10-13"},{"lineNumber":135,"author":{"gitId":"Gabau"},"content":"                \u0026\u0026 ((RemoveMarkCommand) obj).index \u003d\u003d index","lastModifiedDate":"2021-10-13"},{"lineNumber":136,"author":{"gitId":"Gabau"},"content":"                \u0026\u0026 ((RemoveMarkCommand) obj).predicate.equals(predicate)","lastModifiedDate":"2021-10-13"},{"lineNumber":137,"author":{"gitId":"Gabau"},"content":"                \u0026\u0026 ((RemoveMarkCommand) obj).period.equals(period);","lastModifiedDate":"2021-10-13"},{"lineNumber":138,"author":{"gitId":"Gabau"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":139,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":140,"author":{"gitId":"Gabau"},"content":"}","lastModifiedDate":"2021-10-13"}],"authorContributionMap":{"Gabau":140}},{"path":"src/main/java/seedu/address/logic/commands/ViewCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Gabau"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-10-03"},{"lineNumber":2,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":3,"author":{"gitId":"Gabau"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-03"},{"lineNumber":4,"author":{"gitId":"Gabau"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2021-10-07"},{"lineNumber":5,"author":{"gitId":"Gabau"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2021-10-07"},{"lineNumber":6,"author":{"gitId":"Gabau"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2021-10-07"},{"lineNumber":7,"author":{"gitId":"Gabau"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2021-10-07"},{"lineNumber":8,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":9,"author":{"gitId":"Gabau"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-10-03"},{"lineNumber":10,"author":{"gitId":"Gabau"},"content":"import seedu.address.model.person.PersonContainsFieldsPredicate;","lastModifiedDate":"2021-10-08"},{"lineNumber":11,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":12,"author":{"gitId":"Gabau"},"content":"/**","lastModifiedDate":"2021-10-03"},{"lineNumber":13,"author":{"gitId":"Gabau"},"content":" * Represents a command to view.","lastModifiedDate":"2021-10-03"},{"lineNumber":14,"author":{"gitId":"Gabau"},"content":" */","lastModifiedDate":"2021-10-03"},{"lineNumber":15,"author":{"gitId":"Gabau"},"content":"public class ViewCommand extends Command {","lastModifiedDate":"2021-10-03"},{"lineNumber":16,"author":{"gitId":"Gabau"},"content":"    public static final String COMMAND_WORD \u003d \"view\";","lastModifiedDate":"2021-10-03"},{"lineNumber":17,"author":{"gitId":"Gabau"},"content":"    public static final String HELP_MESSAGE \u003d COMMAND_WORD + \": Command to view a staff in the list view\\n\"","lastModifiedDate":"2021-10-12"},{"lineNumber":18,"author":{"gitId":"Gabau"},"content":"            + \"Used with search queries\\n\"","lastModifiedDate":"2021-10-07"},{"lineNumber":19,"author":{"gitId":"Gabau"},"content":"            + \"e.g. \" + COMMAND_WORD + \" \" + \"[\" + PREFIX_TAG + \"TAG]\" + \" [\" + PREFIX_NAME + \"NAME]\\n\"","lastModifiedDate":"2021-10-08"},{"lineNumber":20,"author":{"gitId":"Gabau"},"content":"            + \"OR \" + COMMAND_WORD + \" \" + \"[\" + PREFIX_EMAIL + \"EMAIL]\" + \" [\" + PREFIX_ADDRESS + \"ADDRESS]\";","lastModifiedDate":"2021-10-08"},{"lineNumber":21,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":22,"author":{"gitId":"Gabau"},"content":"    public static final String DEFAULT_COMMAND \u003d \"Staff(s) displayed: %1$s\";","lastModifiedDate":"2021-10-08"},{"lineNumber":23,"author":{"gitId":"Gabau"},"content":"    private PersonContainsFieldsPredicate testCondition;","lastModifiedDate":"2021-10-08"},{"lineNumber":24,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":25,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":26,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":27,"author":{"gitId":"Gabau"},"content":"    /**","lastModifiedDate":"2021-10-03"},{"lineNumber":28,"author":{"gitId":"Gabau"},"content":"     * Constructor of a view command","lastModifiedDate":"2021-10-03"},{"lineNumber":29,"author":{"gitId":"Gabau"},"content":"     *","lastModifiedDate":"2021-10-03"},{"lineNumber":30,"author":{"gitId":"Gabau"},"content":"     * @param testCondition the test condition to go by","lastModifiedDate":"2021-10-03"},{"lineNumber":31,"author":{"gitId":"Gabau"},"content":"     */","lastModifiedDate":"2021-10-03"},{"lineNumber":32,"author":{"gitId":"Gabau"},"content":"    public ViewCommand(PersonContainsFieldsPredicate testCondition) {","lastModifiedDate":"2021-10-08"},{"lineNumber":33,"author":{"gitId":"Gabau"},"content":"        this.testCondition \u003d testCondition;","lastModifiedDate":"2021-10-03"},{"lineNumber":34,"author":{"gitId":"Gabau"},"content":"    }","lastModifiedDate":"2021-10-03"},{"lineNumber":35,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":36,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":37,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":38,"author":{"gitId":"Gabau"},"content":"    private CommandResult getDefaultResult(Model model) {","lastModifiedDate":"2021-10-08"},{"lineNumber":39,"author":{"gitId":"Gabau"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-10-03"},{"lineNumber":40,"author":{"gitId":"Gabau"},"content":"        //places the person on the list view","lastModifiedDate":"2021-10-03"},{"lineNumber":41,"author":{"gitId":"Gabau"},"content":"        model.updateFilteredPersonList(testCondition);","lastModifiedDate":"2021-10-08"},{"lineNumber":42,"author":{"gitId":"Gabau"},"content":"        return new CommandResult(String.format(DEFAULT_COMMAND,","lastModifiedDate":"2021-10-03"},{"lineNumber":43,"author":{"gitId":"Gabau"},"content":"                model.getFilteredPersonList().toString()));","lastModifiedDate":"2021-10-03"},{"lineNumber":44,"author":{"gitId":"Gabau"},"content":"    }","lastModifiedDate":"2021-10-03"},{"lineNumber":45,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":46,"author":{"gitId":"Gabau"},"content":"    @Override","lastModifiedDate":"2021-10-03"},{"lineNumber":47,"author":{"gitId":"Gabau"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2021-10-03"},{"lineNumber":48,"author":{"gitId":"Gabau"},"content":"        return getDefaultResult(model);","lastModifiedDate":"2021-10-08"},{"lineNumber":49,"author":{"gitId":"Gabau"},"content":"    }","lastModifiedDate":"2021-10-03"},{"lineNumber":50,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":51,"author":{"gitId":"Gabau"},"content":"    @Override","lastModifiedDate":"2021-10-08"},{"lineNumber":52,"author":{"gitId":"Gabau"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-08"},{"lineNumber":53,"author":{"gitId":"Gabau"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-08"},{"lineNumber":54,"author":{"gitId":"Gabau"},"content":"                || (other instanceof ViewCommand","lastModifiedDate":"2021-10-08"},{"lineNumber":55,"author":{"gitId":"Gabau"},"content":"                \u0026\u0026 testCondition.equals(((ViewCommand) other).testCondition));","lastModifiedDate":"2021-10-08"},{"lineNumber":56,"author":{"gitId":"Gabau"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":57,"author":{"gitId":"Gabau"},"content":"}","lastModifiedDate":"2021-10-03"}],"authorContributionMap":{"Gabau":57}},{"path":"src/main/java/seedu/address/logic/commands/ViewScheduleCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Gabau"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-10-05"},{"lineNumber":2,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":3,"author":{"gitId":"Gabau"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-10"},{"lineNumber":4,"author":{"gitId":"Gabau"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2021-10-08"},{"lineNumber":5,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":6,"author":{"gitId":"Gabau"},"content":"import javafx.collections.transformation.FilteredList;","lastModifiedDate":"2021-10-08"},{"lineNumber":7,"author":{"gitId":"Gabau"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-08"},{"lineNumber":8,"author":{"gitId":"Gabau"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-10-05"},{"lineNumber":9,"author":{"gitId":"Gabau"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2021-10-05"},{"lineNumber":10,"author":{"gitId":"Gabau"},"content":"import seedu.address.model.person.PersonContainsFieldsPredicate;","lastModifiedDate":"2021-10-09"},{"lineNumber":11,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":12,"author":{"gitId":"Gabau"},"content":"/**","lastModifiedDate":"2021-10-05"},{"lineNumber":13,"author":{"gitId":"Gabau"},"content":" * Class representing the view schedule command","lastModifiedDate":"2021-10-05"},{"lineNumber":14,"author":{"gitId":"Gabau"},"content":" * which views the schedule by Person.","lastModifiedDate":"2021-10-05"},{"lineNumber":15,"author":{"gitId":"Gabau"},"content":" */","lastModifiedDate":"2021-10-05"},{"lineNumber":16,"author":{"gitId":"Gabau"},"content":"public class ViewScheduleCommand extends Command {","lastModifiedDate":"2021-10-05"},{"lineNumber":17,"author":{"gitId":"Gabau"},"content":"    public static final String DEFAULT_MESSAGE \u003d \"Schedule viewed of staff: %1$s\\n\";","lastModifiedDate":"2021-10-08"},{"lineNumber":18,"author":{"gitId":"Gabau"},"content":"    public static final String COMMAND_WORD \u003d \"viewSchedule\";","lastModifiedDate":"2021-10-05"},{"lineNumber":19,"author":{"gitId":"Gabau"},"content":"    public static final String HELP_MESSAGE \u003d COMMAND_WORD + \": view the schedule of a staff\\n\"","lastModifiedDate":"2021-10-12"},{"lineNumber":20,"author":{"gitId":"Gabau"},"content":"            + \"Method to use:\\n\"","lastModifiedDate":"2021-10-08"},{"lineNumber":21,"author":{"gitId":"Gabau"},"content":"            + \"viewSchedule [\" + PREFIX_NAME + \"NAME]\";","lastModifiedDate":"2021-10-08"},{"lineNumber":22,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":23,"author":{"gitId":"Gabau"},"content":"    private static final String NAME_NOT_IN_LIST_ERROR \u003d \"Name used not in dataset.\";","lastModifiedDate":"2021-10-08"},{"lineNumber":24,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":25,"author":{"gitId":"Gabau"},"content":"    private final PersonContainsFieldsPredicate predicate;","lastModifiedDate":"2021-10-09"},{"lineNumber":26,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":27,"author":{"gitId":"Gabau"},"content":"    public ViewScheduleCommand(PersonContainsFieldsPredicate predicate) {","lastModifiedDate":"2021-10-09"},{"lineNumber":28,"author":{"gitId":"Gabau"},"content":"        this.predicate \u003d predicate;","lastModifiedDate":"2021-10-09"},{"lineNumber":29,"author":{"gitId":"Gabau"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":30,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":31,"author":{"gitId":"Gabau"},"content":"    @Override","lastModifiedDate":"2021-10-05"},{"lineNumber":32,"author":{"gitId":"Gabau"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-10-08"},{"lineNumber":33,"author":{"gitId":"Gabau"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-10-10"},{"lineNumber":34,"author":{"gitId":"Gabau"},"content":"        //todo: change this filtered list to the overall model","lastModifiedDate":"2021-10-09"},{"lineNumber":35,"author":{"gitId":"Gabau"},"content":"        FilteredList\u003cPerson\u003e staffs \u003d model.getFilteredPersonList()","lastModifiedDate":"2021-10-08"},{"lineNumber":36,"author":{"gitId":"Gabau"},"content":"                .filtered(this.predicate);","lastModifiedDate":"2021-10-09"},{"lineNumber":37,"author":{"gitId":"Gabau"},"content":"        if (staffs.size() \u003d\u003d 0) {","lastModifiedDate":"2021-10-08"},{"lineNumber":38,"author":{"gitId":"Gabau"},"content":"            throw new CommandException(NAME_NOT_IN_LIST_ERROR);","lastModifiedDate":"2021-10-08"},{"lineNumber":39,"author":{"gitId":"Gabau"},"content":"        }","lastModifiedDate":"2021-10-08"},{"lineNumber":40,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":41,"author":{"gitId":"Gabau"},"content":"        String result \u003d \"\";","lastModifiedDate":"2021-10-08"},{"lineNumber":42,"author":{"gitId":"Gabau"},"content":"        for (int i \u003d 0; i \u003c staffs.size(); i++) {","lastModifiedDate":"2021-10-08"},{"lineNumber":43,"author":{"gitId":"Gabau"},"content":"            result +\u003d String.format(DEFAULT_MESSAGE, staffs.get(i).getName());","lastModifiedDate":"2021-10-08"},{"lineNumber":44,"author":{"gitId":"Gabau"},"content":"            result +\u003d staffs.get(i).getSchedule().toViewScheduleString();","lastModifiedDate":"2021-10-09"},{"lineNumber":45,"author":{"gitId":"Gabau"},"content":"        }","lastModifiedDate":"2021-10-08"},{"lineNumber":46,"author":{"gitId":"Gabau"},"content":"        return new CommandResult(result);","lastModifiedDate":"2021-10-08"},{"lineNumber":47,"author":{"gitId":"Gabau"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":48,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":49,"author":{"gitId":"Gabau"},"content":"}","lastModifiedDate":"2021-10-05"}],"authorContributionMap":{"Gabau":49}},{"path":"src/main/java/seedu/address/logic/parser/AddCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-02-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2021-10-09"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2021-10-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2021-10-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2021-10-09"},{"lineNumber":8,"author":{"gitId":"fullfatwasabi"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ROLE;","lastModifiedDate":"2021-10-09"},{"lineNumber":9,"author":{"gitId":"fullfatwasabi"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_SALARY;","lastModifiedDate":"2021-10-09"},{"lineNumber":10,"author":{"gitId":"fullfatwasabi"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_STATUS;","lastModifiedDate":"2021-10-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2021-10-09"},{"lineNumber":12,"author":{"gitId":"Gabau"},"content":"import static seedu.address.logic.parser.ParserUtil.arePrefixesPresent;","lastModifiedDate":"2021-10-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":14,"author":{"gitId":"Gabau"},"content":"import java.util.HashSet;","lastModifiedDate":"2021-10-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-17"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-02-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-03-17"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-03-17"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-03-17"},{"lineNumber":22,"author":{"gitId":"Gabau"},"content":"import seedu.address.model.person.Period;","lastModifiedDate":"2021-10-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-03-17"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-03-17"},{"lineNumber":25,"author":{"gitId":"fullfatwasabi"},"content":"import seedu.address.model.person.Role;","lastModifiedDate":"2021-10-09"},{"lineNumber":26,"author":{"gitId":"fullfatwasabi"},"content":"import seedu.address.model.person.Salary;","lastModifiedDate":"2021-10-09"},{"lineNumber":27,"author":{"gitId":"fullfatwasabi"},"content":"import seedu.address.model.person.Status;","lastModifiedDate":"2021-10-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-17"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new AddCommand object","lastModifiedDate":"2017-02-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"public class AddCommandParser implements Parser\u003cAddCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the AddCommand","lastModifiedDate":"2017-02-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * and returns an AddCommand object for execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":38,"author":{"gitId":"IrvingHe000"},"content":"     *","lastModifiedDate":"2021-09-22"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public AddCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2017-03-20"},{"lineNumber":43,"author":{"gitId":"fullfatwasabi"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ADDRESS,","lastModifiedDate":"2021-10-09"},{"lineNumber":44,"author":{"gitId":"fullfatwasabi"},"content":"                        PREFIX_ROLE, PREFIX_SALARY, PREFIX_STATUS, PREFIX_TAG);","lastModifiedDate":"2021-10-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":46,"author":{"gitId":"fullfatwasabi"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_NAME, PREFIX_ADDRESS, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_SALARY)","lastModifiedDate":"2021-10-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2017-12-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-03-11"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-17"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        Name name \u003d ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        Phone phone \u003d ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        Email email \u003d ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        Address address \u003d ParserUtil.parseAddress(argMultimap.getValue(PREFIX_ADDRESS).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":55,"author":{"gitId":"fullfatwasabi"},"content":"        Set\u003cRole\u003e roleList \u003d ParserUtil.parseRoles(argMultimap.getAllValues(PREFIX_ROLE));","lastModifiedDate":"2021-10-12"},{"lineNumber":56,"author":{"gitId":"fullfatwasabi"},"content":"        Salary salary \u003d ParserUtil.parseSalary(argMultimap.getValue(PREFIX_SALARY).get());","lastModifiedDate":"2021-10-09"},{"lineNumber":57,"author":{"gitId":"fullfatwasabi"},"content":"        Status status \u003d ParserUtil.parseStatuses(argMultimap.getAllValues(PREFIX_STATUS));","lastModifiedDate":"2021-10-09"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e tagList \u003d ParserUtil.parseTags(argMultimap.getAllValues(PREFIX_TAG));","lastModifiedDate":"2017-03-17"},{"lineNumber":59,"author":{"gitId":"Gabau"},"content":"        Set\u003cPeriod\u003e periods \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2021-10-12"},{"lineNumber":60,"author":{"gitId":"Gabau"},"content":"        Person staff \u003d new Person(name, phone, email, address, roleList, salary, status, tagList, periods);","lastModifiedDate":"2021-10-15"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":62,"author":{"gitId":"IrvingHe000"},"content":"        return new AddCommand(staff);","lastModifiedDate":"2021-09-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":65,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":67,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-05"}],"authorContributionMap":{"Gabau":6,"fullfatwasabi":12,"-":47,"IrvingHe000":2}},{"path":"src/main/java/seedu/address/logic/parser/AddShiftCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"IrvingHe000"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-10-10"},{"lineNumber":2,"author":{"gitId":"IrvingHe000"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":3,"author":{"gitId":"IrvingHe000"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-10"},{"lineNumber":4,"author":{"gitId":"IrvingHe000"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-10"},{"lineNumber":5,"author":{"gitId":"IrvingHe000"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DAY_SHIFT;","lastModifiedDate":"2021-10-10"},{"lineNumber":6,"author":{"gitId":"IrvingHe000"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_INDEX;","lastModifiedDate":"2021-10-10"},{"lineNumber":7,"author":{"gitId":"IrvingHe000"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2021-10-10"},{"lineNumber":8,"author":{"gitId":"IrvingHe000"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":9,"author":{"gitId":"IrvingHe000"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2021-10-10"},{"lineNumber":10,"author":{"gitId":"IrvingHe000"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":11,"author":{"gitId":"IrvingHe000"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-10-10"},{"lineNumber":12,"author":{"gitId":"IrvingHe000"},"content":"import seedu.address.logic.commands.AddShiftCommand;","lastModifiedDate":"2021-10-10"},{"lineNumber":13,"author":{"gitId":"IrvingHe000"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-10"},{"lineNumber":14,"author":{"gitId":"IrvingHe000"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2021-10-10"},{"lineNumber":15,"author":{"gitId":"IrvingHe000"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":16,"author":{"gitId":"Tetrerox"},"content":"/**","lastModifiedDate":"2021-10-13"},{"lineNumber":17,"author":{"gitId":"Tetrerox"},"content":" * Parses input arguments and creates a new AddShiftCommand object.","lastModifiedDate":"2021-10-13"},{"lineNumber":18,"author":{"gitId":"Tetrerox"},"content":" */","lastModifiedDate":"2021-10-13"},{"lineNumber":19,"author":{"gitId":"IrvingHe000"},"content":"public class AddShiftCommandParser implements Parser\u003cAddShiftCommand\u003e {","lastModifiedDate":"2021-10-10"},{"lineNumber":20,"author":{"gitId":"IrvingHe000"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":21,"author":{"gitId":"IrvingHe000"},"content":"    /**","lastModifiedDate":"2021-10-10"},{"lineNumber":22,"author":{"gitId":"IrvingHe000"},"content":"     * Parses the given {@code String} of arguments in the context of the AddShiftCommand","lastModifiedDate":"2021-10-10"},{"lineNumber":23,"author":{"gitId":"IrvingHe000"},"content":"     * and returns an AddShiftCommand object for execution.","lastModifiedDate":"2021-10-10"},{"lineNumber":24,"author":{"gitId":"IrvingHe000"},"content":"     *","lastModifiedDate":"2021-10-10"},{"lineNumber":25,"author":{"gitId":"IrvingHe000"},"content":"     * @throws ParseException if the user input does not conform the expected format.","lastModifiedDate":"2021-10-10"},{"lineNumber":26,"author":{"gitId":"IrvingHe000"},"content":"     */","lastModifiedDate":"2021-10-10"},{"lineNumber":27,"author":{"gitId":"IrvingHe000"},"content":"    public AddShiftCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-10-10"},{"lineNumber":28,"author":{"gitId":"IrvingHe000"},"content":"        requireNonNull(args);","lastModifiedDate":"2021-10-10"},{"lineNumber":29,"author":{"gitId":"IrvingHe000"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2021-10-10"},{"lineNumber":30,"author":{"gitId":"IrvingHe000"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_INDEX, PREFIX_DAY_SHIFT, PREFIX_NAME);","lastModifiedDate":"2021-10-10"},{"lineNumber":31,"author":{"gitId":"IrvingHe000"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":32,"author":{"gitId":"IrvingHe000"},"content":"        Index index \u003d null;","lastModifiedDate":"2021-10-10"},{"lineNumber":33,"author":{"gitId":"IrvingHe000"},"content":"        Name name \u003d null;","lastModifiedDate":"2021-10-10"},{"lineNumber":34,"author":{"gitId":"IrvingHe000"},"content":"        String shiftDayAndSlot;","lastModifiedDate":"2021-10-10"},{"lineNumber":35,"author":{"gitId":"IrvingHe000"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":36,"author":{"gitId":"IrvingHe000"},"content":"        //PREFIX_DAY_SHIFT must exist and exactly one from PREFIX_INDEX and PREFIX_NAME must exist.","lastModifiedDate":"2021-10-10"},{"lineNumber":37,"author":{"gitId":"IrvingHe000"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_DAY_SHIFT)","lastModifiedDate":"2021-10-10"},{"lineNumber":38,"author":{"gitId":"IrvingHe000"},"content":"                || !argMultimap.getPreamble().isEmpty() || (!arePrefixesPresent(argMultimap, PREFIX_INDEX)","lastModifiedDate":"2021-10-10"},{"lineNumber":39,"author":{"gitId":"IrvingHe000"},"content":"                \u0026\u0026 !arePrefixesPresent(argMultimap, PREFIX_NAME))","lastModifiedDate":"2021-10-10"},{"lineNumber":40,"author":{"gitId":"IrvingHe000"},"content":"                || (arePrefixesPresent(argMultimap, PREFIX_INDEX)","lastModifiedDate":"2021-10-10"},{"lineNumber":41,"author":{"gitId":"IrvingHe000"},"content":"                        \u0026\u0026 arePrefixesPresent(argMultimap, PREFIX_NAME))) {","lastModifiedDate":"2021-10-10"},{"lineNumber":42,"author":{"gitId":"IrvingHe000"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddShiftCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-10"},{"lineNumber":43,"author":{"gitId":"IrvingHe000"},"content":"        }","lastModifiedDate":"2021-10-10"},{"lineNumber":44,"author":{"gitId":"IrvingHe000"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":45,"author":{"gitId":"IrvingHe000"},"content":"        try {","lastModifiedDate":"2021-10-10"},{"lineNumber":46,"author":{"gitId":"IrvingHe000"},"content":"            if (argMultimap.getValue(PREFIX_INDEX).isPresent()) {","lastModifiedDate":"2021-10-10"},{"lineNumber":47,"author":{"gitId":"IrvingHe000"},"content":"                index \u003d ParserUtil.parseIndex(argMultimap.getValue(PREFIX_INDEX).get());","lastModifiedDate":"2021-10-10"},{"lineNumber":48,"author":{"gitId":"IrvingHe000"},"content":"            }","lastModifiedDate":"2021-10-10"},{"lineNumber":49,"author":{"gitId":"IrvingHe000"},"content":"            if (argMultimap.getValue(PREFIX_NAME).isPresent()) {","lastModifiedDate":"2021-10-10"},{"lineNumber":50,"author":{"gitId":"IrvingHe000"},"content":"                name \u003d ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get());","lastModifiedDate":"2021-10-10"},{"lineNumber":51,"author":{"gitId":"IrvingHe000"},"content":"            }","lastModifiedDate":"2021-10-10"},{"lineNumber":52,"author":{"gitId":"IrvingHe000"},"content":"            shiftDayAndSlot \u003d ParserUtil.parseDayOfWeek(argMultimap.getValue(PREFIX_DAY_SHIFT).get());","lastModifiedDate":"2021-10-10"},{"lineNumber":53,"author":{"gitId":"IrvingHe000"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2021-10-10"},{"lineNumber":54,"author":{"gitId":"IrvingHe000"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddShiftCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2021-10-10"},{"lineNumber":55,"author":{"gitId":"IrvingHe000"},"content":"        }","lastModifiedDate":"2021-10-10"},{"lineNumber":56,"author":{"gitId":"IrvingHe000"},"content":"        return new AddShiftCommand(index, name, shiftDayAndSlot);","lastModifiedDate":"2021-10-10"},{"lineNumber":57,"author":{"gitId":"IrvingHe000"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":58,"author":{"gitId":"IrvingHe000"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":59,"author":{"gitId":"IrvingHe000"},"content":"    /**","lastModifiedDate":"2021-10-10"},{"lineNumber":60,"author":{"gitId":"IrvingHe000"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2021-10-10"},{"lineNumber":61,"author":{"gitId":"IrvingHe000"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2021-10-10"},{"lineNumber":62,"author":{"gitId":"IrvingHe000"},"content":"     */","lastModifiedDate":"2021-10-10"},{"lineNumber":63,"author":{"gitId":"IrvingHe000"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2021-10-10"},{"lineNumber":64,"author":{"gitId":"IrvingHe000"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2021-10-10"},{"lineNumber":65,"author":{"gitId":"IrvingHe000"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":66,"author":{"gitId":"IrvingHe000"},"content":"}","lastModifiedDate":"2021-10-10"}],"authorContributionMap":{"Tetrerox":3,"IrvingHe000":63}},{"path":"src/main/java/seedu/address/logic/parser/AddressBookParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":11,"author":{"gitId":"IrvingHe000"},"content":"import seedu.address.logic.commands.AddShiftCommand;","lastModifiedDate":"2021-10-10"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ClearCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2017-01-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":15,"author":{"gitId":"Tetrerox"},"content":"import seedu.address.logic.commands.DeleteShiftCommand;","lastModifiedDate":"2021-10-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ExitCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.HelpCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":21,"author":{"gitId":"Gabau"},"content":"import seedu.address.logic.commands.MarkCommand;","lastModifiedDate":"2021-10-12"},{"lineNumber":22,"author":{"gitId":"Gabau"},"content":"import seedu.address.logic.commands.RemoveMarkCommand;","lastModifiedDate":"2021-10-13"},{"lineNumber":23,"author":{"gitId":"Gabau"},"content":"import seedu.address.logic.commands.ViewCommand;","lastModifiedDate":"2021-10-03"},{"lineNumber":24,"author":{"gitId":"Gabau"},"content":"import seedu.address.logic.commands.ViewScheduleCommand;","lastModifiedDate":"2021-10-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":" * Parses user input.","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"public class AddressBookParser {","lastModifiedDate":"2017-07-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Used for initial separation of command word and args.","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private static final Pattern BASIC_COMMAND_FORMAT \u003d Pattern.compile(\"(?\u003ccommandWord\u003e\\\\S+)(?\u003carguments\u003e.*)\");","lastModifiedDate":"2016-09-22"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * Parses user input into command for execution.","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * @param userInput full user input string","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * @return the command based on the user input","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public Command parseCommand(String userInput) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        final Matcher matcher \u003d BASIC_COMMAND_FORMAT.matcher(userInput.trim());","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-03-11"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        final String commandWord \u003d matcher.group(\"commandWord\");","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        switch (commandWord) {","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        case AddCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            return new AddCommandParser().parse(arguments);","lastModifiedDate":"2017-02-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        case EditCommand.COMMAND_WORD:","lastModifiedDate":"2016-12-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            return new EditCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        case DeleteCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"            return new DeleteCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":63,"author":{"gitId":"Gabau"},"content":"        case ViewScheduleCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-08"},{"lineNumber":64,"author":{"gitId":"Gabau"},"content":"            return new ViewScheduleCommandParser().parse(arguments);","lastModifiedDate":"2021-10-08"},{"lineNumber":65,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":66,"author":{"gitId":"Gabau"},"content":"        case MarkCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-12"},{"lineNumber":67,"author":{"gitId":"Gabau"},"content":"            return new MarkCommandParser().parse(arguments);","lastModifiedDate":"2021-10-12"},{"lineNumber":68,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":69,"author":{"gitId":"Gabau"},"content":"        case RemoveMarkCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-13"},{"lineNumber":70,"author":{"gitId":"Gabau"},"content":"            return new RemoveMarkCommandParser().parse(arguments);","lastModifiedDate":"2021-10-13"},{"lineNumber":71,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":72,"author":{"gitId":"Tetrerox"},"content":"        case DeleteShiftCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-13"},{"lineNumber":73,"author":{"gitId":"Tetrerox"},"content":"            return new DeleteShiftCommandParser().parse(arguments);","lastModifiedDate":"2021-10-13"},{"lineNumber":74,"author":{"gitId":"Tetrerox"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":75,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        case ClearCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":77,"author":{"gitId":"-"},"content":"            return new ClearCommand();","lastModifiedDate":"2016-09-21"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        case FindCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":80,"author":{"gitId":"-"},"content":"            return new FindCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":82,"author":{"gitId":"Gabau"},"content":"        case ViewCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-03"},{"lineNumber":83,"author":{"gitId":"Gabau"},"content":"            return new ViewCommandParser().parse(arguments);","lastModifiedDate":"2021-10-03"},{"lineNumber":84,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":85,"author":{"gitId":"IrvingHe000"},"content":"        case AddShiftCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-10"},{"lineNumber":86,"author":{"gitId":"IrvingHe000"},"content":"            return new AddShiftCommandParser().parse(arguments);","lastModifiedDate":"2021-10-10"},{"lineNumber":87,"author":{"gitId":"IrvingHe000"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        case ListCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":89,"author":{"gitId":"-"},"content":"            return new ListCommand();","lastModifiedDate":"2016-09-21"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        case ExitCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-24"},{"lineNumber":92,"author":{"gitId":"-"},"content":"            return new ExitCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        case HelpCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-26"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            return new HelpCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        default:","lastModifiedDate":"2016-08-26"},{"lineNumber":98,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-03-11"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"Tetrerox":4,"Gabau":18,"-":76,"IrvingHe000":4}},{"path":"src/main/java/seedu/address/logic/parser/ArgumentMultimap.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-03-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-03-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.HashMap;","lastModifiedDate":"2017-03-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-03-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Map;","lastModifiedDate":"2017-03-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-03-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-03-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Stores mapping of prefixes to their respective arguments.","lastModifiedDate":"2017-03-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Each key may be associated with multiple argument values.","lastModifiedDate":"2017-03-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Values for a given key are stored in a list, and the insertion ordering is maintained.","lastModifiedDate":"2017-03-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * Keys are unique, but the list of argument values may contain duplicate argument values, i.e. the same argument value","lastModifiedDate":"2017-03-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * can be inserted multiple times for the same prefix.","lastModifiedDate":"2017-03-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-03-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class ArgumentMultimap {","lastModifiedDate":"2017-03-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":18,"author":{"gitId":"IrvingHe000"},"content":"    /**","lastModifiedDate":"2021-09-22"},{"lineNumber":19,"author":{"gitId":"IrvingHe000"},"content":"     * Prefixes mapped to their respective arguments","lastModifiedDate":"2021-09-22"},{"lineNumber":20,"author":{"gitId":"IrvingHe000"},"content":"     **/","lastModifiedDate":"2021-09-22"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private final Map\u003cPrefix, List\u003cString\u003e\u003e argMultimap \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2017-03-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Associates the specified argument value with {@code prefix} key in this map.","lastModifiedDate":"2017-03-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * If the map previously contained a mapping for the key, the new value is appended to the list of existing values.","lastModifiedDate":"2017-03-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * @param prefix   Prefix key with which the specified argument value is to be associated","lastModifiedDate":"2017-03-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * @param argValue Argument value to be associated with the specified prefix key","lastModifiedDate":"2017-03-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void put(Prefix prefix, String argValue) {","lastModifiedDate":"2017-03-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        List\u003cString\u003e argValues \u003d getAllValues(prefix);","lastModifiedDate":"2017-03-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        argValues.add(argValue);","lastModifiedDate":"2017-03-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        argMultimap.put(prefix, argValues);","lastModifiedDate":"2017-03-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Returns the last value of {@code prefix}.","lastModifiedDate":"2017-03-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public Optional\u003cString\u003e getValue(Prefix prefix) {","lastModifiedDate":"2017-03-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        List\u003cString\u003e values \u003d getAllValues(prefix);","lastModifiedDate":"2017-03-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        return values.isEmpty() ? Optional.empty() : Optional.of(values.get(values.size() - 1));","lastModifiedDate":"2017-03-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * Returns all values of {@code prefix}.","lastModifiedDate":"2017-03-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * If the prefix does not exist or has no values, this will return an empty list.","lastModifiedDate":"2017-03-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * Modifying the returned list will not affect the underlying data structure of the ArgumentMultimap.","lastModifiedDate":"2017-03-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public List\u003cString\u003e getAllValues(Prefix prefix) {","lastModifiedDate":"2017-03-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        if (!argMultimap.containsKey(prefix)) {","lastModifiedDate":"2017-03-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            return new ArrayList\u003c\u003e();","lastModifiedDate":"2017-03-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        return new ArrayList\u003c\u003e(argMultimap.get(prefix));","lastModifiedDate":"2017-03-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * Returns the preamble (text before the first valid prefix). Trims any leading/trailing spaces.","lastModifiedDate":"2017-03-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public String getPreamble() {","lastModifiedDate":"2017-03-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        return getValue(new Prefix(\"\")).orElse(\"\");","lastModifiedDate":"2017-03-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":62,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":63,"author":{"gitId":"Gabau"},"content":"    /**","lastModifiedDate":"2021-10-07"},{"lineNumber":64,"author":{"gitId":"Gabau"},"content":"     * Returns true if the argMultiMap is empty.","lastModifiedDate":"2021-10-07"},{"lineNumber":65,"author":{"gitId":"Gabau"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":66,"author":{"gitId":"Gabau"},"content":"    public boolean isEmpty() {","lastModifiedDate":"2021-10-07"},{"lineNumber":67,"author":{"gitId":"Gabau"},"content":"        return argMultimap.size() \u003d\u003d 1;","lastModifiedDate":"2021-10-07"},{"lineNumber":68,"author":{"gitId":"Gabau"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":69,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":70,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-08"}],"authorContributionMap":{"Gabau":8,"-":59,"IrvingHe000":3}},{"path":"src/main/java/seedu/address/logic/parser/ArgumentTokenizer.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2016-10-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-01-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-01-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-10-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Tokenizes arguments string of the form: {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}\u003cbr\u003e","lastModifiedDate":"2016-10-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * e.g. {@code some preamble text t/ 11.00 t/12.00 k/ m/ July}  where prefixes are {@code t/ k/ m/}.\u003cbr\u003e","lastModifiedDate":"2017-05-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * 1. An argument\u0027s value can be an empty string e.g. the value of {@code k/} in the above example.\u003cbr\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * 2. Leading and trailing whitespaces of an argument value will be discarded.\u003cbr\u003e","lastModifiedDate":"2016-10-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * 3. An argument may be repeated and all its values will be accumulated e.g. the value of {@code t/}","lastModifiedDate":"2017-05-19"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * in the above example.\u003cbr\u003e","lastModifiedDate":"2016-10-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-10-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class ArgumentTokenizer {","lastModifiedDate":"2016-10-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * Tokenizes an arguments string and returns an {@code ArgumentMultimap} object that maps prefixes to their","lastModifiedDate":"2017-03-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * respective argument values. Only the given prefixes will be recognized in the arguments string.","lastModifiedDate":"2017-03-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * @param argsString Arguments string of the form: {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2017-03-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @param prefixes   Prefixes to tokenize the arguments string with","lastModifiedDate":"2017-03-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @return ArgumentMultimap object that maps prefixes to their arguments","lastModifiedDate":"2017-03-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static ArgumentMultimap tokenize(String argsString, Prefix... prefixes) {","lastModifiedDate":"2017-03-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        List\u003cPrefixPosition\u003e positions \u003d findAllPrefixPositions(argsString, prefixes);","lastModifiedDate":"2017-03-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        return extractArguments(argsString, positions);","lastModifiedDate":"2017-03-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Finds all zero-based prefix positions in the given arguments string.","lastModifiedDate":"2017-03-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * @param argsString Arguments string of the form: {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2017-03-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * @param prefixes   Prefixes to find in the arguments string","lastModifiedDate":"2017-03-20"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * @return List of zero-based prefix positions in the given arguments string","lastModifiedDate":"2017-03-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private static List\u003cPrefixPosition\u003e findAllPrefixPositions(String argsString, Prefix... prefixes) {","lastModifiedDate":"2017-03-20"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return Arrays.stream(prefixes)","lastModifiedDate":"2018-01-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                .flatMap(prefix -\u003e findPrefixPositions(argsString, prefix).stream())","lastModifiedDate":"2018-01-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"                .collect(Collectors.toList());","lastModifiedDate":"2018-01-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * {@see findAllPrefixPositions}","lastModifiedDate":"2017-03-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    private static List\u003cPrefixPosition\u003e findPrefixPositions(String argsString, Prefix prefix) {","lastModifiedDate":"2017-03-20"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        List\u003cPrefixPosition\u003e positions \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2016-10-16"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        int prefixPosition \u003d findPrefixPosition(argsString, prefix.getPrefix(), 0);","lastModifiedDate":"2017-05-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        while (prefixPosition !\u003d -1) {","lastModifiedDate":"2017-05-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            PrefixPosition extendedPrefix \u003d new PrefixPosition(prefix, prefixPosition);","lastModifiedDate":"2017-05-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            positions.add(extendedPrefix);","lastModifiedDate":"2016-10-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            prefixPosition \u003d findPrefixPosition(argsString, prefix.getPrefix(), prefixPosition);","lastModifiedDate":"2017-05-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return positions;","lastModifiedDate":"2016-10-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * Returns the index of the first occurrence of {@code prefix} in","lastModifiedDate":"2017-05-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * {@code argsString} starting from index {@code fromIndex}. An occurrence","lastModifiedDate":"2017-05-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * is valid if there is a whitespace before {@code prefix}. Returns -1 if no","lastModifiedDate":"2017-05-19"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * such occurrence can be found.","lastModifiedDate":"2017-05-19"},{"lineNumber":65,"author":{"gitId":"IrvingHe000"},"content":"     * \u003cp\u003e","lastModifiedDate":"2021-09-22"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     * E.g if {@code argsString} \u003d \"e/hip/900\", {@code prefix} \u003d \"p/\" and","lastModifiedDate":"2017-05-19"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     * {@code fromIndex} \u003d 0, this method returns -1 as there are no valid","lastModifiedDate":"2017-05-19"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     * occurrences of \"p/\" with whitespace before it. However, if","lastModifiedDate":"2017-05-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * {@code argsString} \u003d \"e/hi p/900\", {@code prefix} \u003d \"p/\" and","lastModifiedDate":"2017-05-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * {@code fromIndex} \u003d 0, this method returns 5.","lastModifiedDate":"2017-05-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-19"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    private static int findPrefixPosition(String argsString, String prefix, int fromIndex) {","lastModifiedDate":"2017-05-19"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        int prefixIndex \u003d argsString.indexOf(\" \" + prefix, fromIndex);","lastModifiedDate":"2017-05-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        return prefixIndex \u003d\u003d -1 ? -1","lastModifiedDate":"2017-05-19"},{"lineNumber":75,"author":{"gitId":"-"},"content":"                : prefixIndex + 1; // +1 as offset for whitespace","lastModifiedDate":"2017-05-19"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Extracts prefixes and their argument values, and returns an {@code ArgumentMultimap} object that maps the","lastModifiedDate":"2017-03-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * extracted prefixes to their respective arguments. Prefixes are extracted based on their zero-based positions in","lastModifiedDate":"2017-03-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * {@code argsString}.","lastModifiedDate":"2017-03-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * @param argsString      Arguments string of the form: {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2017-03-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * @param prefixPositions Zero-based positions of all prefixes in {@code argsString}","lastModifiedDate":"2017-03-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * @return ArgumentMultimap object that maps prefixes to their arguments","lastModifiedDate":"2017-03-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    private static ArgumentMultimap extractArguments(String argsString, List\u003cPrefixPosition\u003e prefixPositions) {","lastModifiedDate":"2017-03-20"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        // Sort by start position","lastModifiedDate":"2016-10-16"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        prefixPositions.sort((prefix1, prefix2) -\u003e prefix1.getStartPosition() - prefix2.getStartPosition());","lastModifiedDate":"2016-10-16"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        // Insert a PrefixPosition to represent the preamble","lastModifiedDate":"2016-10-16"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        PrefixPosition preambleMarker \u003d new PrefixPosition(new Prefix(\"\"), 0);","lastModifiedDate":"2016-10-16"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        prefixPositions.add(0, preambleMarker);","lastModifiedDate":"2016-10-16"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        // Add a dummy PrefixPosition to represent the end of the string","lastModifiedDate":"2016-10-16"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        PrefixPosition endPositionMarker \u003d new PrefixPosition(new Prefix(\"\"), argsString.length());","lastModifiedDate":"2016-10-16"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        prefixPositions.add(endPositionMarker);","lastModifiedDate":"2016-10-16"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        // Map prefixes to their argument values (if any)","lastModifiedDate":"2017-03-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d new ArgumentMultimap();","lastModifiedDate":"2017-03-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        for (int i \u003d 0; i \u003c prefixPositions.size() - 1; i++) {","lastModifiedDate":"2016-10-16"},{"lineNumber":103,"author":{"gitId":"-"},"content":"            // Extract and store prefixes and their arguments","lastModifiedDate":"2017-03-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"            Prefix argPrefix \u003d prefixPositions.get(i).getPrefix();","lastModifiedDate":"2017-03-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"            String argValue \u003d extractArgumentValue(argsString, prefixPositions.get(i), prefixPositions.get(i + 1));","lastModifiedDate":"2016-10-16"},{"lineNumber":106,"author":{"gitId":"-"},"content":"            argMultimap.put(argPrefix, argValue);","lastModifiedDate":"2017-03-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-16"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        return argMultimap;","lastModifiedDate":"2017-03-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":113,"author":{"gitId":"-"},"content":"     * Returns the trimmed value of the argument in the arguments string specified by {@code currentPrefixPosition}.","lastModifiedDate":"2017-03-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     * The end position of the value is determined by {@code nextPrefixPosition}.","lastModifiedDate":"2017-03-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    private static String extractArgumentValue(String argsString,","lastModifiedDate":"2017-03-20"},{"lineNumber":117,"author":{"gitId":"-"},"content":"                                               PrefixPosition currentPrefixPosition,","lastModifiedDate":"2016-10-16"},{"lineNumber":118,"author":{"gitId":"-"},"content":"                                               PrefixPosition nextPrefixPosition) {","lastModifiedDate":"2016-10-16"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        Prefix prefix \u003d currentPrefixPosition.getPrefix();","lastModifiedDate":"2016-10-16"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        int valueStartPos \u003d currentPrefixPosition.getStartPosition() + prefix.getPrefix().length();","lastModifiedDate":"2016-10-16"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        String value \u003d argsString.substring(valueStartPos, nextPrefixPosition.getStartPosition());","lastModifiedDate":"2016-10-16"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        return value.trim();","lastModifiedDate":"2016-10-16"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":128,"author":{"gitId":"-"},"content":"     * Represents a prefix\u0027s position in an arguments string.","lastModifiedDate":"2017-03-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    private static class PrefixPosition {","lastModifiedDate":"2017-03-20"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        private int startPosition;","lastModifiedDate":"2016-10-19"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        private final Prefix prefix;","lastModifiedDate":"2016-10-19"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        PrefixPosition(Prefix prefix, int startPosition) {","lastModifiedDate":"2016-10-19"},{"lineNumber":135,"author":{"gitId":"-"},"content":"            this.prefix \u003d prefix;","lastModifiedDate":"2016-10-19"},{"lineNumber":136,"author":{"gitId":"-"},"content":"            this.startPosition \u003d startPosition;","lastModifiedDate":"2016-10-19"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-19"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        int getStartPosition() {","lastModifiedDate":"2016-10-19"},{"lineNumber":140,"author":{"gitId":"-"},"content":"            return startPosition;","lastModifiedDate":"2018-08-14"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-19"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        Prefix getPrefix() {","lastModifiedDate":"2016-10-19"},{"lineNumber":144,"author":{"gitId":"-"},"content":"            return prefix;","lastModifiedDate":"2018-08-14"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-19"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-19"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":148,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-10-16"}],"authorContributionMap":{"-":147,"IrvingHe000":1}},{"path":"src/main/java/seedu/address/logic/parser/CliSyntax.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Contains Command Line Interface (CLI) syntax definitions common to multiple commands","lastModifiedDate":"2017-02-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class CliSyntax {","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    /* Prefix definitions */","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_NAME \u003d new Prefix(\"n/\");","lastModifiedDate":"2017-06-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_PHONE \u003d new Prefix(\"p/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_EMAIL \u003d new Prefix(\"e/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_ADDRESS \u003d new Prefix(\"a/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":13,"author":{"gitId":"fullfatwasabi"},"content":"    public static final Prefix PREFIX_ROLE \u003d new Prefix(\"r/\");","lastModifiedDate":"2021-10-09"},{"lineNumber":14,"author":{"gitId":"fullfatwasabi"},"content":"    public static final Prefix PREFIX_SALARY \u003d new Prefix(\"$/\");","lastModifiedDate":"2021-10-09"},{"lineNumber":15,"author":{"gitId":"fullfatwasabi"},"content":"    public static final Prefix PREFIX_STATUS \u003d new Prefix(\"s/\");","lastModifiedDate":"2021-10-09"},{"lineNumber":16,"author":{"gitId":"fullfatwasabi"},"content":"    public static final Prefix PREFIX_DAY_SHIFT \u003d new Prefix(\"d/\");","lastModifiedDate":"2021-10-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_TAG \u003d new Prefix(\"t/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":18,"author":{"gitId":"Gabau"},"content":"    public static final Prefix PREFIX_INDEX \u003d new Prefix(\"i/\");","lastModifiedDate":"2021-10-03"},{"lineNumber":19,"author":{"gitId":"mweeruien"},"content":"    public static final Prefix PREFIX_DASH_INDEX \u003d new Prefix(\"-i\");","lastModifiedDate":"2021-10-10"},{"lineNumber":20,"author":{"gitId":"mweeruien"},"content":"    public static final Prefix PREFIX_DASH_NAME \u003d new Prefix(\"-n\");","lastModifiedDate":"2021-10-10"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":22,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"Gabau":1,"fullfatwasabi":4,"-":15,"mweeruien":2}},{"path":"src/main/java/seedu/address/logic/parser/DeleteCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-01-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"Tetrerox"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-01-26"},{"lineNumber":5,"author":{"gitId":"Tetrerox"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_INDEX;","lastModifiedDate":"2021-10-09"},{"lineNumber":6,"author":{"gitId":"Tetrerox"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2021-10-10"},{"lineNumber":7,"author":{"gitId":"Tetrerox"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ROLE;","lastModifiedDate":"2021-10-10"},{"lineNumber":8,"author":{"gitId":"Tetrerox"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_STATUS;","lastModifiedDate":"2021-10-10"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2017-01-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":13,"author":{"gitId":"Tetrerox"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2021-10-10"},{"lineNumber":14,"author":{"gitId":"Tetrerox"},"content":"import seedu.address.model.person.Role;","lastModifiedDate":"2021-10-10"},{"lineNumber":15,"author":{"gitId":"Tetrerox"},"content":"import seedu.address.model.person.Status;","lastModifiedDate":"2021-10-10"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new DeleteCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class DeleteCommandParser implements Parser\u003cDeleteCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the DeleteCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * and returns a DeleteCommand object for execution.","lastModifiedDate":"2019-05-11"},{"lineNumber":25,"author":{"gitId":"IrvingHe000"},"content":"     *","lastModifiedDate":"2021-09-22"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public DeleteCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":29,"author":{"gitId":"Tetrerox"},"content":"        requireNonNull(args);","lastModifiedDate":"2021-10-09"},{"lineNumber":30,"author":{"gitId":"Tetrerox"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2021-10-10"},{"lineNumber":31,"author":{"gitId":"Tetrerox"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_INDEX, PREFIX_NAME, PREFIX_ROLE, PREFIX_STATUS);","lastModifiedDate":"2021-10-10"},{"lineNumber":32,"author":{"gitId":"Tetrerox"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":33,"author":{"gitId":"Tetrerox"},"content":"        if (!exactlyOneAcceptedPrefix(argMultimap)) {","lastModifiedDate":"2021-10-10"},{"lineNumber":34,"author":{"gitId":"Tetrerox"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-09"},{"lineNumber":35,"author":{"gitId":"Tetrerox"},"content":"        }","lastModifiedDate":"2021-10-10"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-05-15"},{"lineNumber":37,"author":{"gitId":"Tetrerox"},"content":"            if (argMultimap.getValue(PREFIX_INDEX).isPresent()) {","lastModifiedDate":"2021-10-10"},{"lineNumber":38,"author":{"gitId":"Tetrerox"},"content":"                Index index \u003d ParserUtil.parseIndex(argMultimap.getValue(PREFIX_INDEX).get());","lastModifiedDate":"2021-10-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                return new DeleteCommand(index);","lastModifiedDate":"2017-05-15"},{"lineNumber":40,"author":{"gitId":"Tetrerox"},"content":"            } else if (argMultimap.getValue(PREFIX_NAME).isPresent()) {","lastModifiedDate":"2021-10-10"},{"lineNumber":41,"author":{"gitId":"Tetrerox"},"content":"                Name name \u003d ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get());","lastModifiedDate":"2021-10-10"},{"lineNumber":42,"author":{"gitId":"Tetrerox"},"content":"                return new DeleteCommand(name);","lastModifiedDate":"2021-10-10"},{"lineNumber":43,"author":{"gitId":"Tetrerox"},"content":"            } else if (argMultimap.getValue(PREFIX_ROLE).isPresent()) {","lastModifiedDate":"2021-10-10"},{"lineNumber":44,"author":{"gitId":"Tetrerox"},"content":"                Role role \u003d ParserUtil.parseRole(argMultimap.getValue(PREFIX_ROLE).get());","lastModifiedDate":"2021-10-10"},{"lineNumber":45,"author":{"gitId":"Tetrerox"},"content":"                return new DeleteCommand(role);","lastModifiedDate":"2021-10-10"},{"lineNumber":46,"author":{"gitId":"Tetrerox"},"content":"            } else if (argMultimap.getValue(PREFIX_STATUS).isPresent()) {","lastModifiedDate":"2021-10-10"},{"lineNumber":47,"author":{"gitId":"Tetrerox"},"content":"                Status status \u003d ParserUtil.parseStatus(argMultimap.getValue(PREFIX_STATUS).get());","lastModifiedDate":"2021-10-10"},{"lineNumber":48,"author":{"gitId":"Tetrerox"},"content":"                return new DeleteCommand(status);","lastModifiedDate":"2021-10-10"},{"lineNumber":49,"author":{"gitId":"Tetrerox"},"content":"            } else {","lastModifiedDate":"2021-10-10"},{"lineNumber":50,"author":{"gitId":"Tetrerox"},"content":"                throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-10"},{"lineNumber":51,"author":{"gitId":"Tetrerox"},"content":"            }","lastModifiedDate":"2021-10-10"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2021-10-10"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            throw new ParseException(","lastModifiedDate":"2021-10-10"},{"lineNumber":54,"author":{"gitId":"-"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2021-10-10"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-10-10"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":58,"author":{"gitId":"Tetrerox"},"content":"    private boolean exactlyOneAcceptedPrefix(ArgumentMultimap argMultimap) {","lastModifiedDate":"2021-10-10"},{"lineNumber":59,"author":{"gitId":"Tetrerox"},"content":"        Prefix[] prefixes \u003d {PREFIX_INDEX, PREFIX_NAME, PREFIX_ROLE, PREFIX_STATUS};","lastModifiedDate":"2021-10-10"},{"lineNumber":60,"author":{"gitId":"Tetrerox"},"content":"        boolean isTrueOnlyOnce \u003d false;","lastModifiedDate":"2021-10-10"},{"lineNumber":61,"author":{"gitId":"Tetrerox"},"content":"        for (Prefix prefix : prefixes) {","lastModifiedDate":"2021-10-10"},{"lineNumber":62,"author":{"gitId":"Tetrerox"},"content":"            if (argMultimap.getValue(prefix).isPresent()) {","lastModifiedDate":"2021-10-10"},{"lineNumber":63,"author":{"gitId":"Tetrerox"},"content":"                if (isTrueOnlyOnce) {","lastModifiedDate":"2021-10-10"},{"lineNumber":64,"author":{"gitId":"Tetrerox"},"content":"                    return false;","lastModifiedDate":"2021-10-10"},{"lineNumber":65,"author":{"gitId":"Tetrerox"},"content":"                }","lastModifiedDate":"2021-10-10"},{"lineNumber":66,"author":{"gitId":"Tetrerox"},"content":"                isTrueOnlyOnce \u003d true;","lastModifiedDate":"2021-10-10"},{"lineNumber":67,"author":{"gitId":"Tetrerox"},"content":"            }","lastModifiedDate":"2021-10-10"},{"lineNumber":68,"author":{"gitId":"Tetrerox"},"content":"        }","lastModifiedDate":"2021-10-10"},{"lineNumber":69,"author":{"gitId":"Tetrerox"},"content":"        return isTrueOnlyOnce;","lastModifiedDate":"2021-10-10"},{"lineNumber":70,"author":{"gitId":"Tetrerox"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":71,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"Tetrerox":42,"-":28,"IrvingHe000":1}},{"path":"src/main/java/seedu/address/logic/parser/DeleteShiftCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Tetrerox"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-10-13"},{"lineNumber":2,"author":{"gitId":"Tetrerox"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":3,"author":{"gitId":"Tetrerox"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-13"},{"lineNumber":4,"author":{"gitId":"Tetrerox"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-13"},{"lineNumber":5,"author":{"gitId":"Tetrerox"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DAY_SHIFT;","lastModifiedDate":"2021-10-13"},{"lineNumber":6,"author":{"gitId":"Tetrerox"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_INDEX;","lastModifiedDate":"2021-10-13"},{"lineNumber":7,"author":{"gitId":"Tetrerox"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2021-10-13"},{"lineNumber":8,"author":{"gitId":"Tetrerox"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":9,"author":{"gitId":"Tetrerox"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2021-10-13"},{"lineNumber":10,"author":{"gitId":"Tetrerox"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":11,"author":{"gitId":"Tetrerox"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-10-13"},{"lineNumber":12,"author":{"gitId":"Tetrerox"},"content":"import seedu.address.logic.commands.DeleteShiftCommand;","lastModifiedDate":"2021-10-13"},{"lineNumber":13,"author":{"gitId":"Tetrerox"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-13"},{"lineNumber":14,"author":{"gitId":"Tetrerox"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2021-10-13"},{"lineNumber":15,"author":{"gitId":"Tetrerox"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":16,"author":{"gitId":"Tetrerox"},"content":"/**","lastModifiedDate":"2021-10-13"},{"lineNumber":17,"author":{"gitId":"Tetrerox"},"content":" * Parses input arguments and creates a new DeleteShiftCommand object.","lastModifiedDate":"2021-10-13"},{"lineNumber":18,"author":{"gitId":"Tetrerox"},"content":" */","lastModifiedDate":"2021-10-13"},{"lineNumber":19,"author":{"gitId":"Tetrerox"},"content":"public class DeleteShiftCommandParser implements Parser\u003cDeleteShiftCommand\u003e {","lastModifiedDate":"2021-10-13"},{"lineNumber":20,"author":{"gitId":"Tetrerox"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":21,"author":{"gitId":"Tetrerox"},"content":"    /**","lastModifiedDate":"2021-10-13"},{"lineNumber":22,"author":{"gitId":"Tetrerox"},"content":"     * Parses the given {@code String} of arguments in the context of the DeleteShiftCommand","lastModifiedDate":"2021-10-13"},{"lineNumber":23,"author":{"gitId":"Tetrerox"},"content":"     * and returns an DeleteShiftCommand object for execution.","lastModifiedDate":"2021-10-13"},{"lineNumber":24,"author":{"gitId":"Tetrerox"},"content":"     *","lastModifiedDate":"2021-10-13"},{"lineNumber":25,"author":{"gitId":"Tetrerox"},"content":"     * @throws ParseException if the user input does not conform the expected format.","lastModifiedDate":"2021-10-13"},{"lineNumber":26,"author":{"gitId":"Tetrerox"},"content":"     */","lastModifiedDate":"2021-10-13"},{"lineNumber":27,"author":{"gitId":"Tetrerox"},"content":"    @Override","lastModifiedDate":"2021-10-13"},{"lineNumber":28,"author":{"gitId":"Tetrerox"},"content":"    public DeleteShiftCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-10-13"},{"lineNumber":29,"author":{"gitId":"Tetrerox"},"content":"        requireNonNull(args);","lastModifiedDate":"2021-10-13"},{"lineNumber":30,"author":{"gitId":"Tetrerox"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2021-10-13"},{"lineNumber":31,"author":{"gitId":"Tetrerox"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_INDEX, PREFIX_DAY_SHIFT, PREFIX_NAME);","lastModifiedDate":"2021-10-13"},{"lineNumber":32,"author":{"gitId":"Tetrerox"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":33,"author":{"gitId":"Tetrerox"},"content":"        Index index \u003d null;","lastModifiedDate":"2021-10-13"},{"lineNumber":34,"author":{"gitId":"Tetrerox"},"content":"        Name name \u003d null;","lastModifiedDate":"2021-10-13"},{"lineNumber":35,"author":{"gitId":"Tetrerox"},"content":"        String shiftDayAndSlot;","lastModifiedDate":"2021-10-13"},{"lineNumber":36,"author":{"gitId":"Tetrerox"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":37,"author":{"gitId":"Tetrerox"},"content":"        //PREFIX_DAY_SHIFT must exist and exactly one from PREFIX_INDEX and PREFIX_NAME must exist.","lastModifiedDate":"2021-10-13"},{"lineNumber":38,"author":{"gitId":"Tetrerox"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_DAY_SHIFT)","lastModifiedDate":"2021-10-13"},{"lineNumber":39,"author":{"gitId":"Tetrerox"},"content":"                || !argMultimap.getPreamble().isEmpty() || (!arePrefixesPresent(argMultimap, PREFIX_INDEX)","lastModifiedDate":"2021-10-13"},{"lineNumber":40,"author":{"gitId":"Tetrerox"},"content":"                \u0026\u0026 !arePrefixesPresent(argMultimap, PREFIX_NAME))","lastModifiedDate":"2021-10-13"},{"lineNumber":41,"author":{"gitId":"Tetrerox"},"content":"                || (arePrefixesPresent(argMultimap, PREFIX_INDEX)","lastModifiedDate":"2021-10-13"},{"lineNumber":42,"author":{"gitId":"Tetrerox"},"content":"                \u0026\u0026 arePrefixesPresent(argMultimap, PREFIX_NAME))) {","lastModifiedDate":"2021-10-13"},{"lineNumber":43,"author":{"gitId":"Tetrerox"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteShiftCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-13"},{"lineNumber":44,"author":{"gitId":"Tetrerox"},"content":"        }","lastModifiedDate":"2021-10-13"},{"lineNumber":45,"author":{"gitId":"Tetrerox"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":46,"author":{"gitId":"Tetrerox"},"content":"        try {","lastModifiedDate":"2021-10-13"},{"lineNumber":47,"author":{"gitId":"Tetrerox"},"content":"            if (argMultimap.getValue(PREFIX_INDEX).isPresent()) {","lastModifiedDate":"2021-10-13"},{"lineNumber":48,"author":{"gitId":"Tetrerox"},"content":"                index \u003d ParserUtil.parseIndex(argMultimap.getValue(PREFIX_INDEX).get());","lastModifiedDate":"2021-10-13"},{"lineNumber":49,"author":{"gitId":"Tetrerox"},"content":"            }","lastModifiedDate":"2021-10-13"},{"lineNumber":50,"author":{"gitId":"Tetrerox"},"content":"            if (argMultimap.getValue(PREFIX_NAME).isPresent()) {","lastModifiedDate":"2021-10-13"},{"lineNumber":51,"author":{"gitId":"Tetrerox"},"content":"                name \u003d ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get());","lastModifiedDate":"2021-10-13"},{"lineNumber":52,"author":{"gitId":"Tetrerox"},"content":"            }","lastModifiedDate":"2021-10-13"},{"lineNumber":53,"author":{"gitId":"Tetrerox"},"content":"            shiftDayAndSlot \u003d ParserUtil.parseDayOfWeek(argMultimap.getValue(PREFIX_DAY_SHIFT).get());","lastModifiedDate":"2021-10-13"},{"lineNumber":54,"author":{"gitId":"Tetrerox"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2021-10-13"},{"lineNumber":55,"author":{"gitId":"Tetrerox"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2021-10-13"},{"lineNumber":56,"author":{"gitId":"Tetrerox"},"content":"                    DeleteShiftCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2021-10-13"},{"lineNumber":57,"author":{"gitId":"Tetrerox"},"content":"        }","lastModifiedDate":"2021-10-13"},{"lineNumber":58,"author":{"gitId":"Tetrerox"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":59,"author":{"gitId":"Tetrerox"},"content":"        return new DeleteShiftCommand(index, name, shiftDayAndSlot);","lastModifiedDate":"2021-10-13"},{"lineNumber":60,"author":{"gitId":"Tetrerox"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":61,"author":{"gitId":"Tetrerox"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":62,"author":{"gitId":"Tetrerox"},"content":"    /**","lastModifiedDate":"2021-10-13"},{"lineNumber":63,"author":{"gitId":"Tetrerox"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2021-10-13"},{"lineNumber":64,"author":{"gitId":"Tetrerox"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2021-10-13"},{"lineNumber":65,"author":{"gitId":"Tetrerox"},"content":"     */","lastModifiedDate":"2021-10-13"},{"lineNumber":66,"author":{"gitId":"Tetrerox"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2021-10-13"},{"lineNumber":67,"author":{"gitId":"Tetrerox"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2021-10-13"},{"lineNumber":68,"author":{"gitId":"Tetrerox"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":69,"author":{"gitId":"Tetrerox"},"content":"}","lastModifiedDate":"2021-10-13"}],"authorContributionMap":{"Tetrerox":69}},{"path":"src/main/java/seedu/address/logic/parser/EditCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-01-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-01-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2021-10-12"},{"lineNumber":6,"author":{"gitId":"Gabau"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DASH_INDEX;","lastModifiedDate":"2021-10-12"},{"lineNumber":7,"author":{"gitId":"Gabau"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DASH_NAME;","lastModifiedDate":"2021-10-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2021-10-07"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2021-10-07"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2021-10-07"},{"lineNumber":11,"author":{"gitId":"Gabau"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ROLE;","lastModifiedDate":"2021-10-09"},{"lineNumber":12,"author":{"gitId":"Gabau"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_SALARY;","lastModifiedDate":"2021-10-09"},{"lineNumber":13,"author":{"gitId":"Gabau"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_STATUS;","lastModifiedDate":"2021-10-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2021-10-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-01-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-01-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-01-26"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2021-09-22"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":25,"author":{"gitId":"Gabau"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2021-10-06"},{"lineNumber":26,"author":{"gitId":"fullfatwasabi"},"content":"import seedu.address.model.person.Role;","lastModifiedDate":"2021-10-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":30,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new EditCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":31,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"public class EditCommandParser implements Parser\u003cEditCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the EditCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * and returns an EditCommand object for execution.","lastModifiedDate":"2017-01-26"},{"lineNumber":37,"author":{"gitId":"IrvingHe000"},"content":"     *","lastModifiedDate":"2021-09-22"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public EditCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        requireNonNull(args);","lastModifiedDate":"2017-05-15"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2017-03-20"},{"lineNumber":43,"author":{"gitId":"Gabau"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_DASH_INDEX, PREFIX_DASH_NAME, PREFIX_NAME,","lastModifiedDate":"2021-10-12"},{"lineNumber":44,"author":{"gitId":"Gabau"},"content":"                        PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ADDRESS, PREFIX_TAG, PREFIX_STATUS, PREFIX_SALARY,","lastModifiedDate":"2021-10-09"},{"lineNumber":45,"author":{"gitId":"Gabau"},"content":"                        PREFIX_ROLE);","lastModifiedDate":"2021-10-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":47,"author":{"gitId":"Gabau"},"content":"        if (!argMultimap.getValue(PREFIX_DASH_INDEX).isPresent()","lastModifiedDate":"2021-10-12"},{"lineNumber":48,"author":{"gitId":"Gabau"},"content":"                \u0026\u0026 !argMultimap.getValue(PREFIX_DASH_NAME).isPresent()) {","lastModifiedDate":"2021-10-12"},{"lineNumber":49,"author":{"gitId":"Gabau"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-07"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-10-07"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        EditPersonDescriptor editPersonDescriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2021-09-22"},{"lineNumber":52,"author":{"gitId":"Gabau"},"content":"        if (argMultimap.getValue(PREFIX_STATUS).isPresent()) {","lastModifiedDate":"2021-10-09"},{"lineNumber":53,"author":{"gitId":"Gabau"},"content":"            editPersonDescriptor.setStatus(ParserUtil.parseStatus(argMultimap.getValue(PREFIX_STATUS).get()));","lastModifiedDate":"2021-10-09"},{"lineNumber":54,"author":{"gitId":"Gabau"},"content":"        }","lastModifiedDate":"2021-10-09"},{"lineNumber":55,"author":{"gitId":"Gabau"},"content":"        if (argMultimap.getValue(PREFIX_SALARY).isPresent()) {","lastModifiedDate":"2021-10-09"},{"lineNumber":56,"author":{"gitId":"Gabau"},"content":"            editPersonDescriptor.setSalary(ParserUtil.parseSalary(argMultimap.getValue(PREFIX_SALARY).get()));","lastModifiedDate":"2021-10-09"},{"lineNumber":57,"author":{"gitId":"Gabau"},"content":"        }","lastModifiedDate":"2021-10-09"},{"lineNumber":58,"author":{"gitId":"Gabau"},"content":"        if (argMultimap.getValue(PREFIX_ROLE).isPresent()) {","lastModifiedDate":"2021-10-09"},{"lineNumber":59,"author":{"gitId":"fullfatwasabi"},"content":"            parseRolesForEdit(argMultimap.getAllValues(PREFIX_ROLE)).ifPresent(editPersonDescriptor::setRoles);","lastModifiedDate":"2021-10-12"},{"lineNumber":60,"author":{"gitId":"Gabau"},"content":"        }","lastModifiedDate":"2021-10-09"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_NAME).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setName(ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get()));","lastModifiedDate":"2021-09-22"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_PHONE).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setPhone(ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get()));","lastModifiedDate":"2021-09-22"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_EMAIL).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":68,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setEmail(ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get()));","lastModifiedDate":"2021-09-22"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_ADDRESS).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setAddress(ParserUtil.parseAddress(argMultimap.getValue(PREFIX_ADDRESS).get()));","lastModifiedDate":"2021-09-22"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        parseTagsForEdit(argMultimap.getAllValues(PREFIX_TAG)).ifPresent(editPersonDescriptor::setTags);","lastModifiedDate":"2021-09-22"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        if (!editPersonDescriptor.isAnyFieldEdited()) {","lastModifiedDate":"2021-09-22"},{"lineNumber":76,"author":{"gitId":"-"},"content":"            throw new ParseException(EditCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2017-03-11"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":78,"author":{"gitId":"Gabau"},"content":"        try {","lastModifiedDate":"2021-10-06"},{"lineNumber":79,"author":{"gitId":"Gabau"},"content":"            if (argMultimap.getValue(PREFIX_DASH_INDEX).isPresent()) {","lastModifiedDate":"2021-10-12"},{"lineNumber":80,"author":{"gitId":"Gabau"},"content":"                Index index \u003d ParserUtil.parseIndex(argMultimap.getValue(PREFIX_DASH_INDEX).get());","lastModifiedDate":"2021-10-12"},{"lineNumber":81,"author":{"gitId":"fullfatwasabi"},"content":"                return new EditCommand(index, editPersonDescriptor);","lastModifiedDate":"2021-09-22"},{"lineNumber":82,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-01-26"},{"lineNumber":83,"author":{"gitId":"Gabau"},"content":"            if (argMultimap.getValue(PREFIX_DASH_NAME).isPresent()) {","lastModifiedDate":"2021-10-12"},{"lineNumber":84,"author":{"gitId":"Gabau"},"content":"                Name name \u003d ParserUtil.parseName(argMultimap.getValue(PREFIX_DASH_NAME).get());","lastModifiedDate":"2021-10-12"},{"lineNumber":85,"author":{"gitId":"Gabau"},"content":"                return new EditCommand(name, editPersonDescriptor);","lastModifiedDate":"2021-10-06"},{"lineNumber":86,"author":{"gitId":"Gabau"},"content":"            }","lastModifiedDate":"2021-10-06"},{"lineNumber":87,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":88,"author":{"gitId":"Gabau"},"content":"        } catch (ParseException e) {","lastModifiedDate":"2021-10-06"},{"lineNumber":89,"author":{"gitId":"Gabau"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditCommand.MESSAGE_USAGE), e);","lastModifiedDate":"2021-10-06"},{"lineNumber":90,"author":{"gitId":"Gabau"},"content":"        }","lastModifiedDate":"2021-10-06"},{"lineNumber":91,"author":{"gitId":"Gabau"},"content":"        throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-06"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e} if {@code tags} is non-empty.","lastModifiedDate":"2017-03-07"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * If {@code tags} contain only one element which is an empty string, it will be parsed into a","lastModifiedDate":"2017-01-26"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     * {@code Set\u003cTag\u003e} containing zero tags.","lastModifiedDate":"2017-03-07"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    private Optional\u003cSet\u003cTag\u003e\u003e parseTagsForEdit(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        assert tags !\u003d null;","lastModifiedDate":"2017-01-26"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        if (tags.isEmpty()) {","lastModifiedDate":"2017-01-26"},{"lineNumber":104,"author":{"gitId":"-"},"content":"            return Optional.empty();","lastModifiedDate":"2017-01-26"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        Collection\u003cString\u003e tagSet \u003d tags.size() \u003d\u003d 1 \u0026\u0026 tags.contains(\"\") ? Collections.emptySet() : tags;","lastModifiedDate":"2017-01-26"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        return Optional.of(ParserUtil.parseTags(tagSet));","lastModifiedDate":"2017-01-26"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":110,"author":{"gitId":"fullfatwasabi"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":111,"author":{"gitId":"fullfatwasabi"},"content":"     * Parses {@code Collection\u003cString\u003e roles} into a {@code Set\u003cRole\u003e} if {@code roles} is non-empty.","lastModifiedDate":"2021-10-12"},{"lineNumber":112,"author":{"gitId":"fullfatwasabi"},"content":"     * If {@code roles} contain only one element which is an empty string, it will be parsed into a","lastModifiedDate":"2021-10-12"},{"lineNumber":113,"author":{"gitId":"fullfatwasabi"},"content":"     * {@code Set\u003cRole\u003e} containing zero tags.","lastModifiedDate":"2021-10-12"},{"lineNumber":114,"author":{"gitId":"fullfatwasabi"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":115,"author":{"gitId":"fullfatwasabi"},"content":"    private Optional\u003cSet\u003cRole\u003e\u003e parseRolesForEdit(Collection\u003cString\u003e roles) throws ParseException {","lastModifiedDate":"2021-10-12"},{"lineNumber":116,"author":{"gitId":"fullfatwasabi"},"content":"        assert roles !\u003d null;","lastModifiedDate":"2021-10-12"},{"lineNumber":117,"author":{"gitId":"fullfatwasabi"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":118,"author":{"gitId":"fullfatwasabi"},"content":"        if (roles.isEmpty()) {","lastModifiedDate":"2021-10-12"},{"lineNumber":119,"author":{"gitId":"fullfatwasabi"},"content":"            return Optional.empty();","lastModifiedDate":"2021-10-12"},{"lineNumber":120,"author":{"gitId":"fullfatwasabi"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":121,"author":{"gitId":"fullfatwasabi"},"content":"        Collection\u003cString\u003e roleSet \u003d roles.size() \u003d\u003d 1 \u0026\u0026 roles.contains(\"\") ? Collections.emptySet() : roles;","lastModifiedDate":"2021-10-12"},{"lineNumber":122,"author":{"gitId":"fullfatwasabi"},"content":"        return Optional.of(ParserUtil.parseRoles(roleSet));","lastModifiedDate":"2021-10-12"},{"lineNumber":123,"author":{"gitId":"fullfatwasabi"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":124,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"Gabau":32,"fullfatwasabi":17,"-":74,"IrvingHe000":1}},{"path":"src/main/java/seedu/address/logic/parser/FindCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-01-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-01-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-01-26"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2017-01-26"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":9,"author":{"gitId":"mweeruien"},"content":"import seedu.address.model.person.predicates.NameContainsKeywordsPredicate;","lastModifiedDate":"2021-10-10"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new FindCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class FindCommandParser implements Parser\u003cFindCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the FindCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * and returns a FindCommand object for execution.","lastModifiedDate":"2019-05-11"},{"lineNumber":19,"author":{"gitId":"IrvingHe000"},"content":"     *","lastModifiedDate":"2021-09-22"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public FindCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":23,"author":{"gitId":"mweeruien"},"content":"        String trimmedArgs \u003d args.trim().replace(FindCommand.COMMAND_WORD, \"\");","lastModifiedDate":"2021-10-10"},{"lineNumber":24,"author":{"gitId":"mweeruien"},"content":"        checkTrimmedArgs(trimmedArgs);","lastModifiedDate":"2021-10-10"},{"lineNumber":25,"author":{"gitId":"mweeruien"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":26,"author":{"gitId":"mweeruien"},"content":"        if (trimmedArgs.contains(CliSyntax.PREFIX_DASH_NAME.getPrefix())) {","lastModifiedDate":"2021-10-10"},{"lineNumber":27,"author":{"gitId":"mweeruien"},"content":"            String[] nameKeywords \u003d trimmedArgs.replace(CliSyntax.PREFIX_DASH_NAME.getPrefix(), \"\")","lastModifiedDate":"2021-10-10"},{"lineNumber":28,"author":{"gitId":"mweeruien"},"content":"                    .trim().split(\"\\\\s+\");","lastModifiedDate":"2021-10-10"},{"lineNumber":29,"author":{"gitId":"mweeruien"},"content":"            return new FindCommand(new NameContainsKeywordsPredicate(Arrays.asList(nameKeywords)));","lastModifiedDate":"2021-10-10"},{"lineNumber":30,"author":{"gitId":"mweeruien"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":31,"author":{"gitId":"mweeruien"},"content":"        } else if (trimmedArgs.contains(CliSyntax.PREFIX_DASH_INDEX.getPrefix())) {","lastModifiedDate":"2021-10-10"},{"lineNumber":32,"author":{"gitId":"mweeruien"},"content":"            String indexString \u003d trimmedArgs.replace(\"-i\", \"\").trim();","lastModifiedDate":"2021-10-10"},{"lineNumber":33,"author":{"gitId":"mweeruien"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":34,"author":{"gitId":"mweeruien"},"content":"            try {","lastModifiedDate":"2021-10-10"},{"lineNumber":35,"author":{"gitId":"mweeruien"},"content":"                // TODO can consider creating an exception when the index is not in range","lastModifiedDate":"2021-10-10"},{"lineNumber":36,"author":{"gitId":"mweeruien"},"content":"                int index \u003d Integer.parseInt(indexString);","lastModifiedDate":"2021-10-10"},{"lineNumber":37,"author":{"gitId":"mweeruien"},"content":"                return new FindCommand(index - 1); // +1 so that it starts from 1 instead of 0","lastModifiedDate":"2021-10-10"},{"lineNumber":38,"author":{"gitId":"mweeruien"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":39,"author":{"gitId":"mweeruien"},"content":"            } catch (NumberFormatException e) {","lastModifiedDate":"2021-10-10"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                throw new ParseException(","lastModifiedDate":"2017-03-11"},{"lineNumber":41,"author":{"gitId":"mweeruien"},"content":"                        // \"Invalid number, check index\");","lastModifiedDate":"2021-10-10"},{"lineNumber":42,"author":{"gitId":"-"},"content":"                        String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-01-26"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-01-26"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":45,"author":{"gitId":"mweeruien"},"content":"        } else {","lastModifiedDate":"2021-10-10"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            throw new ParseException(","lastModifiedDate":"2021-10-10"},{"lineNumber":47,"author":{"gitId":"-"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-10"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-10-10"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":51,"author":{"gitId":"mweeruien"},"content":"    private void checkTrimmedArgs(String trimmedArgs) throws ParseException {","lastModifiedDate":"2021-10-10"},{"lineNumber":52,"author":{"gitId":"mweeruien"},"content":"        if (trimmedArgs.isEmpty()) {","lastModifiedDate":"2021-10-10"},{"lineNumber":53,"author":{"gitId":"mweeruien"},"content":"            throw new ParseException(","lastModifiedDate":"2021-10-10"},{"lineNumber":54,"author":{"gitId":"mweeruien"},"content":"                    //\"empty string found\");","lastModifiedDate":"2021-10-10"},{"lineNumber":55,"author":{"gitId":"mweeruien"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-10"},{"lineNumber":56,"author":{"gitId":"mweeruien"},"content":"        }","lastModifiedDate":"2021-10-10"},{"lineNumber":57,"author":{"gitId":"mweeruien"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":58,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"-":30,"mweeruien":27,"IrvingHe000":1}},{"path":"src/main/java/seedu/address/logic/parser/MarkCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Gabau"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-10-12"},{"lineNumber":2,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":3,"author":{"gitId":"Gabau"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2021-10-12"},{"lineNumber":4,"author":{"gitId":"Gabau"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DAY_SHIFT;","lastModifiedDate":"2021-10-12"},{"lineNumber":5,"author":{"gitId":"Gabau"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2021-10-12"},{"lineNumber":6,"author":{"gitId":"Gabau"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_INDEX;","lastModifiedDate":"2021-10-12"},{"lineNumber":7,"author":{"gitId":"Gabau"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2021-10-12"},{"lineNumber":8,"author":{"gitId":"Gabau"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2021-10-12"},{"lineNumber":9,"author":{"gitId":"Gabau"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ROLE;","lastModifiedDate":"2021-10-12"},{"lineNumber":10,"author":{"gitId":"Gabau"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_SALARY;","lastModifiedDate":"2021-10-12"},{"lineNumber":11,"author":{"gitId":"Gabau"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_STATUS;","lastModifiedDate":"2021-10-12"},{"lineNumber":12,"author":{"gitId":"Gabau"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2021-10-12"},{"lineNumber":13,"author":{"gitId":"Gabau"},"content":"import static seedu.address.logic.parser.ParserUtil.parsePeriod;","lastModifiedDate":"2021-10-12"},{"lineNumber":14,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":15,"author":{"gitId":"Gabau"},"content":"import java.util.List;","lastModifiedDate":"2021-10-12"},{"lineNumber":16,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":17,"author":{"gitId":"Gabau"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-10-12"},{"lineNumber":18,"author":{"gitId":"Gabau"},"content":"import seedu.address.logic.commands.MarkCommand;","lastModifiedDate":"2021-10-12"},{"lineNumber":19,"author":{"gitId":"Gabau"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-12"},{"lineNumber":20,"author":{"gitId":"Gabau"},"content":"import seedu.address.model.person.Period;","lastModifiedDate":"2021-10-12"},{"lineNumber":21,"author":{"gitId":"Gabau"},"content":"import seedu.address.model.person.PersonContainsFieldsPredicate;","lastModifiedDate":"2021-10-12"},{"lineNumber":22,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":23,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":24,"author":{"gitId":"Gabau"},"content":"public class MarkCommandParser implements Parser\u003cMarkCommand\u003e {","lastModifiedDate":"2021-10-12"},{"lineNumber":25,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":26,"author":{"gitId":"Gabau"},"content":"    private static final ParseException NO_FIELD_EXCEPTION \u003d new ParseException(MarkCommand.MESSAGE_USAGE);","lastModifiedDate":"2021-10-12"},{"lineNumber":27,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":28,"author":{"gitId":"Gabau"},"content":"    @Override","lastModifiedDate":"2021-10-12"},{"lineNumber":29,"author":{"gitId":"Gabau"},"content":"    public MarkCommand parse(String userInput) throws ParseException {","lastModifiedDate":"2021-10-12"},{"lineNumber":30,"author":{"gitId":"Gabau"},"content":"        //created to test if there are any identifiers","lastModifiedDate":"2021-10-12"},{"lineNumber":31,"author":{"gitId":"Gabau"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2021-10-13"},{"lineNumber":32,"author":{"gitId":"Gabau"},"content":"                ArgumentTokenizer.tokenize(userInput, PREFIX_NAME, PREFIX_PHONE, PREFIX_INDEX, PREFIX_DAY_SHIFT,","lastModifiedDate":"2021-10-13"},{"lineNumber":33,"author":{"gitId":"Gabau"},"content":"                        PREFIX_EMAIL, PREFIX_ADDRESS, PREFIX_TAG, PREFIX_STATUS, PREFIX_ROLE, PREFIX_SALARY);","lastModifiedDate":"2021-10-13"},{"lineNumber":34,"author":{"gitId":"Gabau"},"content":"        //created to test if there are","lastModifiedDate":"2021-10-12"},{"lineNumber":35,"author":{"gitId":"Gabau"},"content":"        List\u003cString\u003e periods \u003d argMultimap.getAllValues(PREFIX_DAY_SHIFT);","lastModifiedDate":"2021-10-12"},{"lineNumber":36,"author":{"gitId":"Gabau"},"content":"        if ((periods.size() !\u003d 1 \u0026\u0026 periods.size() !\u003d 2)) {","lastModifiedDate":"2021-10-12"},{"lineNumber":37,"author":{"gitId":"Gabau"},"content":"            throw NO_FIELD_EXCEPTION;","lastModifiedDate":"2021-10-12"},{"lineNumber":38,"author":{"gitId":"Gabau"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":39,"author":{"gitId":"Gabau"},"content":"        Period period \u003d parsePeriod(periods);","lastModifiedDate":"2021-10-12"},{"lineNumber":40,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":41,"author":{"gitId":"Gabau"},"content":"        PersonContainsFieldsPredicate predicate \u003d ParserUtil.testByAllFields(argMultimap);","lastModifiedDate":"2021-10-13"},{"lineNumber":42,"author":{"gitId":"Gabau"},"content":"        //checks for index","lastModifiedDate":"2021-10-13"},{"lineNumber":43,"author":{"gitId":"Gabau"},"content":"        if (argMultimap.getValue(PREFIX_INDEX).isPresent()) {","lastModifiedDate":"2021-10-13"},{"lineNumber":44,"author":{"gitId":"Gabau"},"content":"            Index index \u003d ParserUtil.parseIndex(argMultimap.getValue(PREFIX_INDEX).get());","lastModifiedDate":"2021-10-13"},{"lineNumber":45,"author":{"gitId":"Gabau"},"content":"            return new MarkCommand(index, period, predicate);","lastModifiedDate":"2021-10-13"},{"lineNumber":46,"author":{"gitId":"Gabau"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":47,"author":{"gitId":"Gabau"},"content":"        //checks for empty","lastModifiedDate":"2021-10-13"},{"lineNumber":48,"author":{"gitId":"Gabau"},"content":"        if (predicate.isEmpty()) {","lastModifiedDate":"2021-10-13"},{"lineNumber":49,"author":{"gitId":"Gabau"},"content":"            throw NO_FIELD_EXCEPTION;","lastModifiedDate":"2021-10-13"},{"lineNumber":50,"author":{"gitId":"Gabau"},"content":"        }","lastModifiedDate":"2021-10-13"},{"lineNumber":51,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":52,"author":{"gitId":"Gabau"},"content":"        return new MarkCommand(predicate, period);","lastModifiedDate":"2021-10-12"},{"lineNumber":53,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":54,"author":{"gitId":"Gabau"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":55,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":56,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":57,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":58,"author":{"gitId":"Gabau"},"content":"}","lastModifiedDate":"2021-10-12"}],"authorContributionMap":{"Gabau":58}},{"path":"src/main/java/seedu/address/logic/parser/Parser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-07-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2017-07-06"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-07-06"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-07-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a Parser that is able to parse user input into a {@code Command} of type {@code T}.","lastModifiedDate":"2017-07-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-07-06"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public interface Parser\u003cT extends Command\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-06"},{"lineNumber":12,"author":{"gitId":"-"},"content":"     * Parses {@code userInput} into a command and returns it.","lastModifiedDate":"2017-07-06"},{"lineNumber":13,"author":{"gitId":"IrvingHe000"},"content":"     *","lastModifiedDate":"2021-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * @throws ParseException if {@code userInput} does not conform the expected format","lastModifiedDate":"2017-07-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-06"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    T parse(String userInput) throws ParseException;","lastModifiedDate":"2017-07-06"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-07-06"}],"authorContributionMap":{"-":16,"IrvingHe000":1}},{"path":"src/main/java/seedu/address/logic/parser/ParserCheckedFunction.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Gabau"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-10-09"},{"lineNumber":2,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":3,"author":{"gitId":"Gabau"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-09"},{"lineNumber":4,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":5,"author":{"gitId":"Gabau"},"content":"@FunctionalInterface","lastModifiedDate":"2021-10-09"},{"lineNumber":6,"author":{"gitId":"Gabau"},"content":"public interface ParserCheckedFunction\u003cT, R\u003e {","lastModifiedDate":"2021-10-09"},{"lineNumber":7,"author":{"gitId":"Gabau"},"content":"    public R apply(T t) throws ParseException;","lastModifiedDate":"2021-10-09"},{"lineNumber":8,"author":{"gitId":"Gabau"},"content":"}","lastModifiedDate":"2021-10-09"}],"authorContributionMap":{"Gabau":8}},{"path":"src/main/java/seedu/address/logic/parser/ParserUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"Gabau"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2021-10-09"},{"lineNumber":5,"author":{"gitId":"Gabau"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2021-10-09"},{"lineNumber":6,"author":{"gitId":"Gabau"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2021-10-09"},{"lineNumber":7,"author":{"gitId":"Gabau"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2021-10-09"},{"lineNumber":8,"author":{"gitId":"Gabau"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ROLE;","lastModifiedDate":"2021-10-10"},{"lineNumber":9,"author":{"gitId":"Gabau"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_SALARY;","lastModifiedDate":"2021-10-10"},{"lineNumber":10,"author":{"gitId":"Gabau"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_STATUS;","lastModifiedDate":"2021-10-10"},{"lineNumber":11,"author":{"gitId":"Gabau"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2021-10-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":13,"author":{"gitId":"Gabau"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-10-12"},{"lineNumber":14,"author":{"gitId":"Gabau"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2021-10-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-02-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-02-11"},{"lineNumber":17,"author":{"gitId":"fullfatwasabi"},"content":"import java.util.List;","lastModifiedDate":"2021-10-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-02-11"},{"lineNumber":19,"author":{"gitId":"Gabau"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2021-10-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":21,"author":{"gitId":"Gabau"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2021-10-16"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2017-02-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-07-10"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2021-10-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2021-10-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2021-10-09"},{"lineNumber":28,"author":{"gitId":"Gabau"},"content":"import seedu.address.model.person.Period;","lastModifiedDate":"2021-10-12"},{"lineNumber":29,"author":{"gitId":"Gabau"},"content":"import seedu.address.model.person.PersonContainsFieldsPredicate;","lastModifiedDate":"2021-10-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2021-10-09"},{"lineNumber":31,"author":{"gitId":"fullfatwasabi"},"content":"import seedu.address.model.person.Role;","lastModifiedDate":"2021-10-09"},{"lineNumber":32,"author":{"gitId":"fullfatwasabi"},"content":"import seedu.address.model.person.Salary;","lastModifiedDate":"2021-10-09"},{"lineNumber":33,"author":{"gitId":"fullfatwasabi"},"content":"import seedu.address.model.person.Status;","lastModifiedDate":"2021-10-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-02-11"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":36,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":37,"author":{"gitId":"-"},"content":" * Contains utility methods used for parsing strings in the various *Parser classes.","lastModifiedDate":"2017-07-18"},{"lineNumber":38,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":39,"author":{"gitId":"-"},"content":"public class ParserUtil {","lastModifiedDate":"2017-02-11"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_INDEX \u003d \"Index is not a non-zero unsigned integer.\";","lastModifiedDate":"2017-06-02"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * Parses {@code oneBasedIndex} into an {@code Index} and returns it. Leading and trailing whitespaces will be","lastModifiedDate":"2017-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * trimmed.","lastModifiedDate":"2017-05-25"},{"lineNumber":46,"author":{"gitId":"IrvingHe000"},"content":"     *","lastModifiedDate":"2021-09-22"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * @throws ParseException if the specified index is invalid (not non-zero unsigned integer).","lastModifiedDate":"2018-07-10"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public static Index parseIndex(String oneBasedIndex) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        String trimmedIndex \u003d oneBasedIndex.trim();","lastModifiedDate":"2017-05-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        if (!StringUtil.isNonZeroUnsignedInteger(trimmedIndex)) {","lastModifiedDate":"2017-06-02"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_INVALID_INDEX);","lastModifiedDate":"2018-07-10"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        return Index.fromOneBased(Integer.parseInt(trimmedIndex));","lastModifiedDate":"2017-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * Parses a {@code String name} into a {@code Name}.","lastModifiedDate":"2017-05-29"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-29"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code name} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-29"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public static Name parseName(String name) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-29"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        String trimmedName \u003d name.trim();","lastModifiedDate":"2017-05-29"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(trimmedName)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":67,"author":{"gitId":"-"},"content":"            throw new ParseException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        return new Name(trimmedName);","lastModifiedDate":"2017-05-29"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * Parses a {@code String phone} into a {@code Phone}.","lastModifiedDate":"2017-05-30"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code phone} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public static Phone parsePhone(String phone) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        requireNonNull(phone);","lastModifiedDate":"2017-05-30"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        String trimmedPhone \u003d phone.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(trimmedPhone)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":82,"author":{"gitId":"-"},"content":"            throw new ParseException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        return new Phone(trimmedPhone);","lastModifiedDate":"2017-05-30"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     * Parses a {@code String address} into an {@code Address}.","lastModifiedDate":"2017-05-30"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code address} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    public static Address parseAddress(String address) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        requireNonNull(address);","lastModifiedDate":"2017-05-30"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        String trimmedAddress \u003d address.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        if (!Address.isValidAddress(trimmedAddress)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":97,"author":{"gitId":"-"},"content":"            throw new ParseException(Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        return new Address(trimmedAddress);","lastModifiedDate":"2017-05-30"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * Parses a {@code String email} into an {@code Email}.","lastModifiedDate":"2017-05-30"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code email} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    public static Email parseEmail(String email) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        requireNonNull(email);","lastModifiedDate":"2017-05-30"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        String trimmedEmail \u003d email.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        if (!Email.isValidEmail(trimmedEmail)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":112,"author":{"gitId":"-"},"content":"            throw new ParseException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        return new Email(trimmedEmail);","lastModifiedDate":"2017-05-30"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":117,"author":{"gitId":"fullfatwasabi"},"content":"    /**","lastModifiedDate":"2021-10-09"},{"lineNumber":118,"author":{"gitId":"fullfatwasabi"},"content":"     * Parses {@code Collection\u003cString\u003e roles} into a {@code Set\u003cRole\u003e}.","lastModifiedDate":"2021-10-12"},{"lineNumber":119,"author":{"gitId":"fullfatwasabi"},"content":"     */","lastModifiedDate":"2021-10-09"},{"lineNumber":120,"author":{"gitId":"fullfatwasabi"},"content":"    public static Set\u003cRole\u003e parseRoles(Collection\u003cString\u003e roles) throws ParseException {","lastModifiedDate":"2021-10-12"},{"lineNumber":121,"author":{"gitId":"fullfatwasabi"},"content":"        requireNonNull(roles);","lastModifiedDate":"2021-10-12"},{"lineNumber":122,"author":{"gitId":"fullfatwasabi"},"content":"        final Set\u003cRole\u003e roleSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2021-10-12"},{"lineNumber":123,"author":{"gitId":"fullfatwasabi"},"content":"        for (String roleName : roles) {","lastModifiedDate":"2021-10-12"},{"lineNumber":124,"author":{"gitId":"fullfatwasabi"},"content":"            roleSet.add(parseRole(roleName));","lastModifiedDate":"2021-10-12"},{"lineNumber":125,"author":{"gitId":"fullfatwasabi"},"content":"        }","lastModifiedDate":"2021-10-09"},{"lineNumber":126,"author":{"gitId":"fullfatwasabi"},"content":"        return roleSet;","lastModifiedDate":"2021-10-12"},{"lineNumber":127,"author":{"gitId":"fullfatwasabi"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":128,"author":{"gitId":"fullfatwasabi"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":129,"author":{"gitId":"fullfatwasabi"},"content":"    /**","lastModifiedDate":"2021-10-09"},{"lineNumber":130,"author":{"gitId":"fullfatwasabi"},"content":"     * Parses a {@code String salary} into a {@code Salary}.","lastModifiedDate":"2021-10-09"},{"lineNumber":131,"author":{"gitId":"fullfatwasabi"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2021-10-09"},{"lineNumber":132,"author":{"gitId":"fullfatwasabi"},"content":"     *","lastModifiedDate":"2021-10-09"},{"lineNumber":133,"author":{"gitId":"fullfatwasabi"},"content":"     * @throws ParseException if the given {@code salary} is invalid.","lastModifiedDate":"2021-10-09"},{"lineNumber":134,"author":{"gitId":"fullfatwasabi"},"content":"     */","lastModifiedDate":"2021-10-09"},{"lineNumber":135,"author":{"gitId":"fullfatwasabi"},"content":"    public static Salary parseSalary(String salary) throws ParseException {","lastModifiedDate":"2021-10-09"},{"lineNumber":136,"author":{"gitId":"fullfatwasabi"},"content":"        requireNonNull(salary);","lastModifiedDate":"2021-10-09"},{"lineNumber":137,"author":{"gitId":"fullfatwasabi"},"content":"        String trimmedSalary \u003d salary.trim();","lastModifiedDate":"2021-10-09"},{"lineNumber":138,"author":{"gitId":"fullfatwasabi"},"content":"        if (!Salary.isValidSalary(trimmedSalary)) {","lastModifiedDate":"2021-10-09"},{"lineNumber":139,"author":{"gitId":"fullfatwasabi"},"content":"            throw new ParseException(Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-09"},{"lineNumber":140,"author":{"gitId":"fullfatwasabi"},"content":"        }","lastModifiedDate":"2021-10-09"},{"lineNumber":141,"author":{"gitId":"fullfatwasabi"},"content":"        return new Salary(trimmedSalary);","lastModifiedDate":"2021-10-09"},{"lineNumber":142,"author":{"gitId":"fullfatwasabi"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":143,"author":{"gitId":"fullfatwasabi"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":144,"author":{"gitId":"fullfatwasabi"},"content":"    /**","lastModifiedDate":"2021-10-09"},{"lineNumber":145,"author":{"gitId":"fullfatwasabi"},"content":"     * Parses a {@code String status} into an {@code Status}.","lastModifiedDate":"2021-10-09"},{"lineNumber":146,"author":{"gitId":"fullfatwasabi"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2021-10-09"},{"lineNumber":147,"author":{"gitId":"fullfatwasabi"},"content":"     *","lastModifiedDate":"2021-10-09"},{"lineNumber":148,"author":{"gitId":"fullfatwasabi"},"content":"     * @throws ParseException if the given {@code status} is invalid.","lastModifiedDate":"2021-10-09"},{"lineNumber":149,"author":{"gitId":"fullfatwasabi"},"content":"     */","lastModifiedDate":"2021-10-09"},{"lineNumber":150,"author":{"gitId":"fullfatwasabi"},"content":"    public static Status parseStatuses(List\u003cString\u003e status) throws ParseException {","lastModifiedDate":"2021-10-09"},{"lineNumber":151,"author":{"gitId":"fullfatwasabi"},"content":"        int length \u003d status.size();","lastModifiedDate":"2021-10-09"},{"lineNumber":152,"author":{"gitId":"fullfatwasabi"},"content":"        if (length \u003d\u003d 0) {","lastModifiedDate":"2021-10-09"},{"lineNumber":153,"author":{"gitId":"fullfatwasabi"},"content":"            return Status.NO_STATUS;","lastModifiedDate":"2021-10-09"},{"lineNumber":154,"author":{"gitId":"fullfatwasabi"},"content":"        }","lastModifiedDate":"2021-10-09"},{"lineNumber":155,"author":{"gitId":"fullfatwasabi"},"content":"        String statusLast \u003d status.get(status.size() - 1);","lastModifiedDate":"2021-10-09"},{"lineNumber":156,"author":{"gitId":"fullfatwasabi"},"content":"        String trimmedStatus \u003d statusLast.trim();","lastModifiedDate":"2021-10-09"},{"lineNumber":157,"author":{"gitId":"fullfatwasabi"},"content":"        if (!Status.isValidStatus(trimmedStatus)) {","lastModifiedDate":"2021-10-09"},{"lineNumber":158,"author":{"gitId":"fullfatwasabi"},"content":"            throw new ParseException(Status.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-09"},{"lineNumber":159,"author":{"gitId":"fullfatwasabi"},"content":"        }","lastModifiedDate":"2021-10-09"},{"lineNumber":160,"author":{"gitId":"fullfatwasabi"},"content":"        return Status.translateStringToStatus(trimmedStatus);","lastModifiedDate":"2021-10-09"},{"lineNumber":161,"author":{"gitId":"fullfatwasabi"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":162,"author":{"gitId":"fullfatwasabi"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":163,"author":{"gitId":"IrvingHe000"},"content":"    /**","lastModifiedDate":"2021-10-10"},{"lineNumber":164,"author":{"gitId":"IrvingHe000"},"content":"     * Parses a {@code String dayOfWeek} into an {@code DayOfWeek}.","lastModifiedDate":"2021-10-10"},{"lineNumber":165,"author":{"gitId":"IrvingHe000"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2021-10-10"},{"lineNumber":166,"author":{"gitId":"IrvingHe000"},"content":"     * This parser is not case sensitive.","lastModifiedDate":"2021-10-10"},{"lineNumber":167,"author":{"gitId":"IrvingHe000"},"content":"     *","lastModifiedDate":"2021-10-10"},{"lineNumber":168,"author":{"gitId":"IrvingHe000"},"content":"     * @throws ParseException if the given {@code dayOfWeek} is invalid.","lastModifiedDate":"2021-10-10"},{"lineNumber":169,"author":{"gitId":"IrvingHe000"},"content":"     */","lastModifiedDate":"2021-10-10"},{"lineNumber":170,"author":{"gitId":"IrvingHe000"},"content":"    public static String parseDayOfWeek(String shiftDay) throws ParseException {","lastModifiedDate":"2021-10-10"},{"lineNumber":171,"author":{"gitId":"IrvingHe000"},"content":"        String messageConstraints \u003d \"Valid input format: dayOfWeek + slotNumber:\" + \"List of valid dayOfWeek: \"","lastModifiedDate":"2021-10-10"},{"lineNumber":172,"author":{"gitId":"IrvingHe000"},"content":"                + \"Monday, Tuesday, Wednesday, Thursday, Friday, Saturday, Sunday. (Not case-sensitive)\\n\"","lastModifiedDate":"2021-10-10"},{"lineNumber":173,"author":{"gitId":"IrvingHe000"},"content":"                + \"List of valid slotNumber: 1, 2.\";","lastModifiedDate":"2021-10-10"},{"lineNumber":174,"author":{"gitId":"IrvingHe000"},"content":"        requireNonNull(shiftDay);","lastModifiedDate":"2021-10-10"},{"lineNumber":175,"author":{"gitId":"IrvingHe000"},"content":"        String trimmedStr \u003d shiftDay.trim().toLowerCase();","lastModifiedDate":"2021-10-10"},{"lineNumber":176,"author":{"gitId":"IrvingHe000"},"content":"        String[] strings \u003d trimmedStr.split(\"-\");","lastModifiedDate":"2021-10-10"},{"lineNumber":177,"author":{"gitId":"Gabau"},"content":"        if (strings.length !\u003d 2) {","lastModifiedDate":"2021-10-10"},{"lineNumber":178,"author":{"gitId":"Gabau"},"content":"            throw new ParseException(messageConstraints);","lastModifiedDate":"2021-10-10"},{"lineNumber":179,"author":{"gitId":"Gabau"},"content":"        }","lastModifiedDate":"2021-10-10"},{"lineNumber":180,"author":{"gitId":"IrvingHe000"},"content":"        switch (strings[0]) {","lastModifiedDate":"2021-10-10"},{"lineNumber":181,"author":{"gitId":"IrvingHe000"},"content":"        case \"monday\":","lastModifiedDate":"2021-10-10"},{"lineNumber":182,"author":{"gitId":"IrvingHe000"},"content":"        case \"tuesday\":","lastModifiedDate":"2021-10-10"},{"lineNumber":183,"author":{"gitId":"IrvingHe000"},"content":"        case \"wednesday\":","lastModifiedDate":"2021-10-10"},{"lineNumber":184,"author":{"gitId":"IrvingHe000"},"content":"        case \"thursday\":","lastModifiedDate":"2021-10-10"},{"lineNumber":185,"author":{"gitId":"IrvingHe000"},"content":"        case \"friday\":","lastModifiedDate":"2021-10-10"},{"lineNumber":186,"author":{"gitId":"IrvingHe000"},"content":"        case \"saturday\":","lastModifiedDate":"2021-10-10"},{"lineNumber":187,"author":{"gitId":"IrvingHe000"},"content":"        case \"sunday\":","lastModifiedDate":"2021-10-10"},{"lineNumber":188,"author":{"gitId":"IrvingHe000"},"content":"            break;","lastModifiedDate":"2021-10-10"},{"lineNumber":189,"author":{"gitId":"IrvingHe000"},"content":"        default: throw new ParseException(messageConstraints);","lastModifiedDate":"2021-10-10"},{"lineNumber":190,"author":{"gitId":"IrvingHe000"},"content":"        }","lastModifiedDate":"2021-10-10"},{"lineNumber":191,"author":{"gitId":"IrvingHe000"},"content":"        switch (strings[1]) {","lastModifiedDate":"2021-10-10"},{"lineNumber":192,"author":{"gitId":"IrvingHe000"},"content":"        case \"0\":","lastModifiedDate":"2021-10-10"},{"lineNumber":193,"author":{"gitId":"IrvingHe000"},"content":"        case \"1\":","lastModifiedDate":"2021-10-10"},{"lineNumber":194,"author":{"gitId":"IrvingHe000"},"content":"            break;","lastModifiedDate":"2021-10-10"},{"lineNumber":195,"author":{"gitId":"IrvingHe000"},"content":"        default: throw new ParseException(messageConstraints);","lastModifiedDate":"2021-10-10"},{"lineNumber":196,"author":{"gitId":"IrvingHe000"},"content":"        }","lastModifiedDate":"2021-10-10"},{"lineNumber":197,"author":{"gitId":"IrvingHe000"},"content":"        return trimmedStr;","lastModifiedDate":"2021-10-10"},{"lineNumber":198,"author":{"gitId":"IrvingHe000"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":199,"author":{"gitId":"IrvingHe000"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":200,"author":{"gitId":"IrvingHe000"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":201,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":202,"author":{"gitId":"-"},"content":"     * Parses a {@code String tag} into a {@code Tag}.","lastModifiedDate":"2017-05-30"},{"lineNumber":203,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":204,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":205,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code tag} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":206,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":207,"author":{"gitId":"-"},"content":"    public static Tag parseTag(String tag) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":208,"author":{"gitId":"-"},"content":"        requireNonNull(tag);","lastModifiedDate":"2017-05-30"},{"lineNumber":209,"author":{"gitId":"-"},"content":"        String trimmedTag \u003d tag.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":210,"author":{"gitId":"-"},"content":"        if (!Tag.isValidTagName(trimmedTag)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":211,"author":{"gitId":"-"},"content":"            throw new ParseException(Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":212,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":213,"author":{"gitId":"-"},"content":"        return new Tag(trimmedTag);","lastModifiedDate":"2017-05-30"},{"lineNumber":214,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":216,"author":{"gitId":"Gabau"},"content":"    /**","lastModifiedDate":"2021-10-09"},{"lineNumber":217,"author":{"gitId":"Gabau"},"content":"     * Parses a {@code String status} into a {@code Status}.","lastModifiedDate":"2021-10-09"},{"lineNumber":218,"author":{"gitId":"Gabau"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2021-10-09"},{"lineNumber":219,"author":{"gitId":"Gabau"},"content":"     *","lastModifiedDate":"2021-10-09"},{"lineNumber":220,"author":{"gitId":"fullfatwasabi"},"content":"     * @throws ParseException if the given {@code status} is invalid","lastModifiedDate":"2021-10-12"},{"lineNumber":221,"author":{"gitId":"Gabau"},"content":"     */","lastModifiedDate":"2021-10-09"},{"lineNumber":222,"author":{"gitId":"Gabau"},"content":"    public static Status parseStatus(String status) throws ParseException {","lastModifiedDate":"2021-10-09"},{"lineNumber":223,"author":{"gitId":"Gabau"},"content":"        requireNonNull(status);","lastModifiedDate":"2021-10-09"},{"lineNumber":224,"author":{"gitId":"Gabau"},"content":"        String trimmedStatus \u003d status.trim();","lastModifiedDate":"2021-10-09"},{"lineNumber":225,"author":{"gitId":"Gabau"},"content":"        try {","lastModifiedDate":"2021-10-09"},{"lineNumber":226,"author":{"gitId":"Gabau"},"content":"            return Status.translateStringToStatus(trimmedStatus);","lastModifiedDate":"2021-10-09"},{"lineNumber":227,"author":{"gitId":"Gabau"},"content":"        } catch (IllegalArgumentException e) {","lastModifiedDate":"2021-10-09"},{"lineNumber":228,"author":{"gitId":"Gabau"},"content":"            throw new ParseException(Status.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-09"},{"lineNumber":229,"author":{"gitId":"Gabau"},"content":"        }","lastModifiedDate":"2021-10-09"},{"lineNumber":230,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":231,"author":{"gitId":"Gabau"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":232,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":233,"author":{"gitId":"Gabau"},"content":"    /**","lastModifiedDate":"2021-10-09"},{"lineNumber":234,"author":{"gitId":"Gabau"},"content":"     * Parses a {@code String role} into a {@code Role}.","lastModifiedDate":"2021-10-09"},{"lineNumber":235,"author":{"gitId":"Gabau"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2021-10-09"},{"lineNumber":236,"author":{"gitId":"Gabau"},"content":"     *","lastModifiedDate":"2021-10-09"},{"lineNumber":237,"author":{"gitId":"Gabau"},"content":"     * @throws ParseException if the given {@code role} is invalid.","lastModifiedDate":"2021-10-09"},{"lineNumber":238,"author":{"gitId":"Gabau"},"content":"     */","lastModifiedDate":"2021-10-09"},{"lineNumber":239,"author":{"gitId":"Gabau"},"content":"    public static Role parseRole(String role) throws ParseException {","lastModifiedDate":"2021-10-09"},{"lineNumber":240,"author":{"gitId":"Gabau"},"content":"        requireNonNull(role);","lastModifiedDate":"2021-10-09"},{"lineNumber":241,"author":{"gitId":"Gabau"},"content":"        String trimmedRole \u003d role.trim();","lastModifiedDate":"2021-10-09"},{"lineNumber":242,"author":{"gitId":"Gabau"},"content":"        try {","lastModifiedDate":"2021-10-09"},{"lineNumber":243,"author":{"gitId":"Gabau"},"content":"            return Role.translateStringToRole(trimmedRole);","lastModifiedDate":"2021-10-09"},{"lineNumber":244,"author":{"gitId":"Gabau"},"content":"        } catch (IllegalArgumentException e) {","lastModifiedDate":"2021-10-09"},{"lineNumber":245,"author":{"gitId":"Gabau"},"content":"            throw new ParseException(Role.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-09"},{"lineNumber":246,"author":{"gitId":"Gabau"},"content":"        }","lastModifiedDate":"2021-10-09"},{"lineNumber":247,"author":{"gitId":"Gabau"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":248,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":249,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":250,"author":{"gitId":"-"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e}.","lastModifiedDate":"2017-03-07"},{"lineNumber":251,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":252,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e parseTags(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":253,"author":{"gitId":"-"},"content":"        requireNonNull(tags);","lastModifiedDate":"2017-05-15"},{"lineNumber":254,"author":{"gitId":"-"},"content":"        final Set\u003cTag\u003e tagSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2017-02-11"},{"lineNumber":255,"author":{"gitId":"-"},"content":"        for (String tagName : tags) {","lastModifiedDate":"2017-02-11"},{"lineNumber":256,"author":{"gitId":"-"},"content":"            tagSet.add(parseTag(tagName));","lastModifiedDate":"2017-05-30"},{"lineNumber":257,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":258,"author":{"gitId":"-"},"content":"        return tagSet;","lastModifiedDate":"2017-03-07"},{"lineNumber":259,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":260,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":261,"author":{"gitId":"Gabau"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":262,"author":{"gitId":"Gabau"},"content":"     * Parses {@code Collection\u003cString\u003e periods} to a {@code period} from the earliest date to the","lastModifiedDate":"2021-10-15"},{"lineNumber":263,"author":{"gitId":"Gabau"},"content":"     * latest date in the collection.","lastModifiedDate":"2021-10-15"},{"lineNumber":264,"author":{"gitId":"Gabau"},"content":"     * @throws ParseException When the input does not have the correct format.","lastModifiedDate":"2021-10-16"},{"lineNumber":265,"author":{"gitId":"Gabau"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":266,"author":{"gitId":"Gabau"},"content":"    public static Period parsePeriod(Collection\u003cString\u003e periods) throws ParseException {","lastModifiedDate":"2021-10-16"},{"lineNumber":267,"author":{"gitId":"Gabau"},"content":"        LocalDate start \u003d LocalDate.MAX;","lastModifiedDate":"2021-10-12"},{"lineNumber":268,"author":{"gitId":"Gabau"},"content":"        LocalDate end \u003d LocalDate.MIN;","lastModifiedDate":"2021-10-12"},{"lineNumber":269,"author":{"gitId":"Gabau"},"content":"        try {","lastModifiedDate":"2021-10-16"},{"lineNumber":270,"author":{"gitId":"Gabau"},"content":"            for (String periodName : periods) {","lastModifiedDate":"2021-10-12"},{"lineNumber":271,"author":{"gitId":"Gabau"},"content":"                if (start.isAfter(LocalDate.parse(periodName))) {","lastModifiedDate":"2021-10-12"},{"lineNumber":272,"author":{"gitId":"Gabau"},"content":"                    start \u003d LocalDate.parse(periodName);","lastModifiedDate":"2021-10-12"},{"lineNumber":273,"author":{"gitId":"Gabau"},"content":"                }","lastModifiedDate":"2021-10-12"},{"lineNumber":274,"author":{"gitId":"Gabau"},"content":"                if (end.isBefore(LocalDate.parse(periodName))) {","lastModifiedDate":"2021-10-12"},{"lineNumber":275,"author":{"gitId":"Gabau"},"content":"                    end \u003d LocalDate.parse(periodName);","lastModifiedDate":"2021-10-12"},{"lineNumber":276,"author":{"gitId":"Gabau"},"content":"                }","lastModifiedDate":"2021-10-12"},{"lineNumber":277,"author":{"gitId":"Gabau"},"content":"            }","lastModifiedDate":"2021-10-12"},{"lineNumber":278,"author":{"gitId":"Gabau"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2021-10-16"},{"lineNumber":279,"author":{"gitId":"Gabau"},"content":"            throw new ParseException(Messages.MESSAGE_INVALID_DATE_PARSED);","lastModifiedDate":"2021-10-16"},{"lineNumber":280,"author":{"gitId":"Gabau"},"content":"        }","lastModifiedDate":"2021-10-16"},{"lineNumber":281,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":282,"author":{"gitId":"Gabau"},"content":"        return new Period(start, end);","lastModifiedDate":"2021-10-12"},{"lineNumber":283,"author":{"gitId":"Gabau"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":284,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":285,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":286,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":287,"author":{"gitId":"Gabau"},"content":"    /**","lastModifiedDate":"2021-10-09"},{"lineNumber":288,"author":{"gitId":"Gabau"},"content":"     * Parses {@code args} into {@code PersonContainsFieldsPredicate} which tests a person for all","lastModifiedDate":"2021-10-09"},{"lineNumber":289,"author":{"gitId":"Gabau"},"content":"     * of the qualifiers of the predicate.","lastModifiedDate":"2021-10-09"},{"lineNumber":290,"author":{"gitId":"Gabau"},"content":"     * @throws ParseException Throws parse exception when the input is not something needed.","lastModifiedDate":"2021-10-12"},{"lineNumber":291,"author":{"gitId":"Gabau"},"content":"     */","lastModifiedDate":"2021-10-09"},{"lineNumber":292,"author":{"gitId":"Gabau"},"content":"    public static PersonContainsFieldsPredicate testByAllFields(ArgumentMultimap argMultimap) throws ParseException {","lastModifiedDate":"2021-10-12"},{"lineNumber":293,"author":{"gitId":"Gabau"},"content":"        requireNonNull(argMultimap);","lastModifiedDate":"2021-10-12"},{"lineNumber":294,"author":{"gitId":"Gabau"},"content":"        PersonContainsFieldsPredicate predicate \u003d new PersonContainsFieldsPredicate();","lastModifiedDate":"2021-10-09"},{"lineNumber":295,"author":{"gitId":"Gabau"},"content":"        predicate.addFieldToTest(argMultimap.getValue(PREFIX_NAME), ParserUtil::parseName);","lastModifiedDate":"2021-10-10"},{"lineNumber":296,"author":{"gitId":"Gabau"},"content":"        predicate.addFieldToTest(argMultimap.getValue(PREFIX_PHONE), ParserUtil::parsePhone);","lastModifiedDate":"2021-10-10"},{"lineNumber":297,"author":{"gitId":"Gabau"},"content":"        predicate.addFieldToTest(argMultimap.getValue(PREFIX_EMAIL), ParserUtil::parseEmail);","lastModifiedDate":"2021-10-10"},{"lineNumber":298,"author":{"gitId":"Gabau"},"content":"        predicate.addFieldToTest(argMultimap.getValue(PREFIX_ADDRESS), ParserUtil::parseAddress);","lastModifiedDate":"2021-10-10"},{"lineNumber":299,"author":{"gitId":"Gabau"},"content":"        predicate.addFieldToTest(argMultimap.getValue(PREFIX_TAG), ParserUtil::parseTag);","lastModifiedDate":"2021-10-10"},{"lineNumber":300,"author":{"gitId":"Gabau"},"content":"        try {","lastModifiedDate":"2021-10-10"},{"lineNumber":301,"author":{"gitId":"Gabau"},"content":"            predicate.addFieldToTest(argMultimap.getValue(PREFIX_ROLE), Role::translateStringToRole);","lastModifiedDate":"2021-10-10"},{"lineNumber":302,"author":{"gitId":"Gabau"},"content":"            predicate.addFieldToTest(argMultimap.getValue(PREFIX_SALARY), Salary::new);","lastModifiedDate":"2021-10-10"},{"lineNumber":303,"author":{"gitId":"Gabau"},"content":"            predicate.addFieldToTest(argMultimap.getValue(PREFIX_STATUS), Status::translateStringToStatus);","lastModifiedDate":"2021-10-10"},{"lineNumber":304,"author":{"gitId":"Gabau"},"content":"        } catch (IllegalArgumentException iae) {","lastModifiedDate":"2021-10-12"},{"lineNumber":305,"author":{"gitId":"Gabau"},"content":"            throw new ParseException(iae.getMessage());","lastModifiedDate":"2021-10-12"},{"lineNumber":306,"author":{"gitId":"Gabau"},"content":"        }","lastModifiedDate":"2021-10-10"},{"lineNumber":307,"author":{"gitId":"Gabau"},"content":"        return predicate;","lastModifiedDate":"2021-10-09"},{"lineNumber":308,"author":{"gitId":"Gabau"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":309,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":310,"author":{"gitId":"Gabau"},"content":"    /**","lastModifiedDate":"2021-10-13"},{"lineNumber":311,"author":{"gitId":"Gabau"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2021-10-13"},{"lineNumber":312,"author":{"gitId":"Gabau"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2021-10-13"},{"lineNumber":313,"author":{"gitId":"Gabau"},"content":"     */","lastModifiedDate":"2021-10-13"},{"lineNumber":314,"author":{"gitId":"Gabau"},"content":"    public static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2021-10-13"},{"lineNumber":315,"author":{"gitId":"Gabau"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2021-10-13"},{"lineNumber":316,"author":{"gitId":"Gabau"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":317,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"Gabau":106,"fullfatwasabi":51,"-":124,"IrvingHe000":36}},{"path":"src/main/java/seedu/address/logic/parser/RemoveMarkCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Gabau"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-10-13"},{"lineNumber":2,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":3,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":4,"author":{"gitId":"Gabau"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2021-10-13"},{"lineNumber":5,"author":{"gitId":"Gabau"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DAY_SHIFT;","lastModifiedDate":"2021-10-13"},{"lineNumber":6,"author":{"gitId":"Gabau"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2021-10-13"},{"lineNumber":7,"author":{"gitId":"Gabau"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_INDEX;","lastModifiedDate":"2021-10-13"},{"lineNumber":8,"author":{"gitId":"Gabau"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2021-10-13"},{"lineNumber":9,"author":{"gitId":"Gabau"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2021-10-13"},{"lineNumber":10,"author":{"gitId":"Gabau"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ROLE;","lastModifiedDate":"2021-10-13"},{"lineNumber":11,"author":{"gitId":"Gabau"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_SALARY;","lastModifiedDate":"2021-10-13"},{"lineNumber":12,"author":{"gitId":"Gabau"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_STATUS;","lastModifiedDate":"2021-10-13"},{"lineNumber":13,"author":{"gitId":"Gabau"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2021-10-13"},{"lineNumber":14,"author":{"gitId":"Gabau"},"content":"import static seedu.address.logic.parser.ParserUtil.parsePeriod;","lastModifiedDate":"2021-10-13"},{"lineNumber":15,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":16,"author":{"gitId":"Gabau"},"content":"import java.util.List;","lastModifiedDate":"2021-10-13"},{"lineNumber":17,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":18,"author":{"gitId":"Gabau"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-10-13"},{"lineNumber":19,"author":{"gitId":"Gabau"},"content":"import seedu.address.logic.commands.RemoveMarkCommand;","lastModifiedDate":"2021-10-13"},{"lineNumber":20,"author":{"gitId":"Gabau"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-13"},{"lineNumber":21,"author":{"gitId":"Gabau"},"content":"import seedu.address.model.person.Period;","lastModifiedDate":"2021-10-13"},{"lineNumber":22,"author":{"gitId":"Gabau"},"content":"import seedu.address.model.person.PersonContainsFieldsPredicate;","lastModifiedDate":"2021-10-13"},{"lineNumber":23,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":24,"author":{"gitId":"Gabau"},"content":"/**","lastModifiedDate":"2021-10-13"},{"lineNumber":25,"author":{"gitId":"Gabau"},"content":" * Class representing the parser for the remove mark command.","lastModifiedDate":"2021-10-13"},{"lineNumber":26,"author":{"gitId":"Gabau"},"content":" */","lastModifiedDate":"2021-10-13"},{"lineNumber":27,"author":{"gitId":"Gabau"},"content":"public class RemoveMarkCommandParser implements Parser\u003cRemoveMarkCommand\u003e {","lastModifiedDate":"2021-10-13"},{"lineNumber":28,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":29,"author":{"gitId":"Gabau"},"content":"    private static final ParseException NO_FIELD_EXCEPTION \u003d new ParseException(RemoveMarkCommand.MESSAGE_USAGE);","lastModifiedDate":"2021-10-13"},{"lineNumber":30,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":31,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":32,"author":{"gitId":"Gabau"},"content":"    @Override","lastModifiedDate":"2021-10-13"},{"lineNumber":33,"author":{"gitId":"Gabau"},"content":"    public RemoveMarkCommand parse(String userInput) throws ParseException {","lastModifiedDate":"2021-10-13"},{"lineNumber":34,"author":{"gitId":"Gabau"},"content":"        //created to test if there are any identifiers","lastModifiedDate":"2021-10-13"},{"lineNumber":35,"author":{"gitId":"Gabau"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2021-10-13"},{"lineNumber":36,"author":{"gitId":"Gabau"},"content":"                ArgumentTokenizer.tokenize(userInput, PREFIX_NAME, PREFIX_PHONE, PREFIX_INDEX, PREFIX_DAY_SHIFT,","lastModifiedDate":"2021-10-13"},{"lineNumber":37,"author":{"gitId":"Gabau"},"content":"                        PREFIX_EMAIL, PREFIX_ADDRESS, PREFIX_TAG, PREFIX_STATUS, PREFIX_ROLE, PREFIX_SALARY);","lastModifiedDate":"2021-10-13"},{"lineNumber":38,"author":{"gitId":"Gabau"},"content":"        //created to test if there are","lastModifiedDate":"2021-10-13"},{"lineNumber":39,"author":{"gitId":"Gabau"},"content":"        List\u003cString\u003e periods \u003d argMultimap.getAllValues(PREFIX_DAY_SHIFT);","lastModifiedDate":"2021-10-13"},{"lineNumber":40,"author":{"gitId":"Gabau"},"content":"        if ((periods.size() !\u003d 1 \u0026\u0026 periods.size() !\u003d 2)) {","lastModifiedDate":"2021-10-13"},{"lineNumber":41,"author":{"gitId":"Gabau"},"content":"            throw NO_FIELD_EXCEPTION;","lastModifiedDate":"2021-10-13"},{"lineNumber":42,"author":{"gitId":"Gabau"},"content":"        }","lastModifiedDate":"2021-10-13"},{"lineNumber":43,"author":{"gitId":"Gabau"},"content":"        Period period \u003d parsePeriod(periods);","lastModifiedDate":"2021-10-13"},{"lineNumber":44,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":45,"author":{"gitId":"Gabau"},"content":"        PersonContainsFieldsPredicate predicate \u003d ParserUtil.testByAllFields(argMultimap);","lastModifiedDate":"2021-10-13"},{"lineNumber":46,"author":{"gitId":"Gabau"},"content":"        //checks for index","lastModifiedDate":"2021-10-13"},{"lineNumber":47,"author":{"gitId":"Gabau"},"content":"        if (argMultimap.getValue(PREFIX_INDEX).isPresent()) {","lastModifiedDate":"2021-10-13"},{"lineNumber":48,"author":{"gitId":"Gabau"},"content":"            Index index \u003d ParserUtil.parseIndex(argMultimap.getValue(PREFIX_INDEX).get());","lastModifiedDate":"2021-10-13"},{"lineNumber":49,"author":{"gitId":"Gabau"},"content":"            return new RemoveMarkCommand(predicate, index, period);","lastModifiedDate":"2021-10-13"},{"lineNumber":50,"author":{"gitId":"Gabau"},"content":"        }","lastModifiedDate":"2021-10-13"},{"lineNumber":51,"author":{"gitId":"Gabau"},"content":"        //checks for empty","lastModifiedDate":"2021-10-13"},{"lineNumber":52,"author":{"gitId":"Gabau"},"content":"        if (predicate.isEmpty()) {","lastModifiedDate":"2021-10-13"},{"lineNumber":53,"author":{"gitId":"Gabau"},"content":"            throw NO_FIELD_EXCEPTION;","lastModifiedDate":"2021-10-13"},{"lineNumber":54,"author":{"gitId":"Gabau"},"content":"        }","lastModifiedDate":"2021-10-13"},{"lineNumber":55,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":56,"author":{"gitId":"Gabau"},"content":"        return new RemoveMarkCommand(predicate, period);","lastModifiedDate":"2021-10-13"},{"lineNumber":57,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":58,"author":{"gitId":"Gabau"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":59,"author":{"gitId":"Gabau"},"content":"}","lastModifiedDate":"2021-10-13"}],"authorContributionMap":{"Gabau":59}},{"path":"src/main/java/seedu/address/logic/parser/ViewCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Gabau"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-10-03"},{"lineNumber":2,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":3,"author":{"gitId":"Gabau"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-12"},{"lineNumber":4,"author":{"gitId":"Gabau"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2021-10-12"},{"lineNumber":5,"author":{"gitId":"Gabau"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2021-10-12"},{"lineNumber":6,"author":{"gitId":"Gabau"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2021-10-12"},{"lineNumber":7,"author":{"gitId":"Gabau"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2021-10-12"},{"lineNumber":8,"author":{"gitId":"Gabau"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ROLE;","lastModifiedDate":"2021-10-12"},{"lineNumber":9,"author":{"gitId":"Gabau"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_SALARY;","lastModifiedDate":"2021-10-12"},{"lineNumber":10,"author":{"gitId":"Gabau"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_STATUS;","lastModifiedDate":"2021-10-12"},{"lineNumber":11,"author":{"gitId":"Gabau"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2021-10-12"},{"lineNumber":12,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":13,"author":{"gitId":"Gabau"},"content":"import seedu.address.logic.commands.ViewCommand;","lastModifiedDate":"2021-10-03"},{"lineNumber":14,"author":{"gitId":"Gabau"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-07"},{"lineNumber":15,"author":{"gitId":"Gabau"},"content":"import seedu.address.model.person.PersonContainsFieldsPredicate;","lastModifiedDate":"2021-10-08"},{"lineNumber":16,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":17,"author":{"gitId":"Gabau"},"content":"/**","lastModifiedDate":"2021-10-03"},{"lineNumber":18,"author":{"gitId":"Gabau"},"content":" * Class representing the parser for the view command.","lastModifiedDate":"2021-10-03"},{"lineNumber":19,"author":{"gitId":"Gabau"},"content":" */","lastModifiedDate":"2021-10-03"},{"lineNumber":20,"author":{"gitId":"Gabau"},"content":"public class ViewCommandParser implements Parser\u003cViewCommand\u003e {","lastModifiedDate":"2021-10-03"},{"lineNumber":21,"author":{"gitId":"Gabau"},"content":"    private static final ParseException NO_FIELD_EXCEPTION \u003d new ParseException(ViewCommand.HELP_MESSAGE);","lastModifiedDate":"2021-10-12"},{"lineNumber":22,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":23,"author":{"gitId":"Gabau"},"content":"    /**","lastModifiedDate":"2021-10-03"},{"lineNumber":24,"author":{"gitId":"Gabau"},"content":"     * Parser for the view command.","lastModifiedDate":"2021-10-03"},{"lineNumber":25,"author":{"gitId":"Gabau"},"content":"     *","lastModifiedDate":"2021-10-03"},{"lineNumber":26,"author":{"gitId":"Gabau"},"content":"     * @param args The input search fields","lastModifiedDate":"2021-10-03"},{"lineNumber":27,"author":{"gitId":"Gabau"},"content":"     * @throws ParseException If the use input does not conform to the expected format.","lastModifiedDate":"2021-10-08"},{"lineNumber":28,"author":{"gitId":"Gabau"},"content":"     */","lastModifiedDate":"2021-10-03"},{"lineNumber":29,"author":{"gitId":"Gabau"},"content":"    @Override","lastModifiedDate":"2021-10-03"},{"lineNumber":30,"author":{"gitId":"Gabau"},"content":"    public ViewCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-10-07"},{"lineNumber":31,"author":{"gitId":"Gabau"},"content":"        requireNonNull(args);","lastModifiedDate":"2021-10-12"},{"lineNumber":32,"author":{"gitId":"Gabau"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2021-10-12"},{"lineNumber":33,"author":{"gitId":"Gabau"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_PHONE,","lastModifiedDate":"2021-10-12"},{"lineNumber":34,"author":{"gitId":"Gabau"},"content":"                        PREFIX_EMAIL, PREFIX_ADDRESS, PREFIX_TAG, PREFIX_STATUS, PREFIX_ROLE, PREFIX_SALARY);","lastModifiedDate":"2021-10-12"},{"lineNumber":35,"author":{"gitId":"Gabau"},"content":"        if (argMultimap.isEmpty()) {","lastModifiedDate":"2021-10-12"},{"lineNumber":36,"author":{"gitId":"Gabau"},"content":"            throw NO_FIELD_EXCEPTION;","lastModifiedDate":"2021-10-12"},{"lineNumber":37,"author":{"gitId":"Gabau"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":38,"author":{"gitId":"Gabau"},"content":"        PersonContainsFieldsPredicate predicate \u003d ParserUtil.testByAllFields(argMultimap);","lastModifiedDate":"2021-10-12"},{"lineNumber":39,"author":{"gitId":"Gabau"},"content":"        return new ViewCommand(predicate);","lastModifiedDate":"2021-10-08"},{"lineNumber":40,"author":{"gitId":"Gabau"},"content":"    }","lastModifiedDate":"2021-10-03"},{"lineNumber":41,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":42,"author":{"gitId":"Gabau"},"content":"}","lastModifiedDate":"2021-10-03"}],"authorContributionMap":{"Gabau":42}},{"path":"src/main/java/seedu/address/logic/parser/ViewScheduleCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Gabau"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-10-05"},{"lineNumber":2,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":3,"author":{"gitId":"Gabau"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-09"},{"lineNumber":4,"author":{"gitId":"Gabau"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2021-10-12"},{"lineNumber":5,"author":{"gitId":"Gabau"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2021-10-12"},{"lineNumber":6,"author":{"gitId":"Gabau"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2021-10-12"},{"lineNumber":7,"author":{"gitId":"Gabau"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2021-10-12"},{"lineNumber":8,"author":{"gitId":"Gabau"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ROLE;","lastModifiedDate":"2021-10-12"},{"lineNumber":9,"author":{"gitId":"Gabau"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_SALARY;","lastModifiedDate":"2021-10-12"},{"lineNumber":10,"author":{"gitId":"Gabau"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_STATUS;","lastModifiedDate":"2021-10-12"},{"lineNumber":11,"author":{"gitId":"Gabau"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2021-10-12"},{"lineNumber":12,"author":{"gitId":"Gabau"},"content":"import static seedu.address.logic.parser.ParserUtil.testByAllFields;","lastModifiedDate":"2021-10-09"},{"lineNumber":13,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":14,"author":{"gitId":"Gabau"},"content":"import seedu.address.logic.commands.ViewScheduleCommand;","lastModifiedDate":"2021-10-08"},{"lineNumber":15,"author":{"gitId":"Gabau"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-05"},{"lineNumber":16,"author":{"gitId":"Gabau"},"content":"import seedu.address.model.person.PersonContainsFieldsPredicate;","lastModifiedDate":"2021-10-09"},{"lineNumber":17,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":18,"author":{"gitId":"Gabau"},"content":"/**","lastModifiedDate":"2021-10-05"},{"lineNumber":19,"author":{"gitId":"Gabau"},"content":" * Class representing the view schedule command parser.","lastModifiedDate":"2021-10-05"},{"lineNumber":20,"author":{"gitId":"Gabau"},"content":" */","lastModifiedDate":"2021-10-05"},{"lineNumber":21,"author":{"gitId":"Gabau"},"content":"public class ViewScheduleCommandParser implements Parser\u003cViewScheduleCommand\u003e {","lastModifiedDate":"2021-10-08"},{"lineNumber":22,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":23,"author":{"gitId":"Gabau"},"content":"    private static final ParseException NO_FIELD_EXCEPTION \u003d","lastModifiedDate":"2021-10-12"},{"lineNumber":24,"author":{"gitId":"Gabau"},"content":"            new ParseException(ViewScheduleCommand.HELP_MESSAGE);","lastModifiedDate":"2021-10-12"},{"lineNumber":25,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":26,"author":{"gitId":"Gabau"},"content":"    @Override","lastModifiedDate":"2021-10-05"},{"lineNumber":27,"author":{"gitId":"Gabau"},"content":"    public ViewScheduleCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-10-12"},{"lineNumber":28,"author":{"gitId":"Gabau"},"content":"        //currently defined for name prefix, undefined behaviour","lastModifiedDate":"2021-10-08"},{"lineNumber":29,"author":{"gitId":"Gabau"},"content":"        requireNonNull(args);","lastModifiedDate":"2021-10-12"},{"lineNumber":30,"author":{"gitId":"Gabau"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2021-10-12"},{"lineNumber":31,"author":{"gitId":"Gabau"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_PHONE,","lastModifiedDate":"2021-10-12"},{"lineNumber":32,"author":{"gitId":"Gabau"},"content":"                        PREFIX_EMAIL, PREFIX_ADDRESS, PREFIX_TAG, PREFIX_STATUS, PREFIX_ROLE, PREFIX_SALARY);","lastModifiedDate":"2021-10-12"},{"lineNumber":33,"author":{"gitId":"Gabau"},"content":"        if (argMultimap.isEmpty()) {","lastModifiedDate":"2021-10-12"},{"lineNumber":34,"author":{"gitId":"Gabau"},"content":"            throw new ParseException(ViewScheduleCommand.HELP_MESSAGE);","lastModifiedDate":"2021-10-12"},{"lineNumber":35,"author":{"gitId":"Gabau"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":36,"author":{"gitId":"Gabau"},"content":"        PersonContainsFieldsPredicate predicate \u003d testByAllFields(argMultimap);","lastModifiedDate":"2021-10-12"},{"lineNumber":37,"author":{"gitId":"Gabau"},"content":"        return new ViewScheduleCommand(predicate);","lastModifiedDate":"2021-10-09"},{"lineNumber":38,"author":{"gitId":"Gabau"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":39,"author":{"gitId":"Gabau"},"content":"}","lastModifiedDate":"2021-10-05"}],"authorContributionMap":{"Gabau":39}},{"path":"src/main/java/seedu/address/model/AddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.person.UniquePersonList;","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Wraps all data at the address-book level","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * Duplicates are not allowed (by .isSamePerson comparison)","lastModifiedDate":"2018-04-19"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class AddressBook implements ReadOnlyAddressBook {","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"IrvingHe000"},"content":"    private final UniquePersonList staffs;","lastModifiedDate":"2021-09-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * The \u0027unusual\u0027 code block below is a non-static initialization block, sometimes used to avoid duplication","lastModifiedDate":"2019-05-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * between constructors. See https://docs.oracle.com/javase/tutorial/java/javaOO/initial.html","lastModifiedDate":"2016-10-19"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Note that non-static init blocks are not recommended to use. There are other ways to avoid duplication","lastModifiedDate":"2016-10-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     *   among constructors.","lastModifiedDate":"2016-10-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    {","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"IrvingHe000"},"content":"        staffs \u003d new UniquePersonList();","lastModifiedDate":"2021-09-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public AddressBook() {}","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Creates an AddressBook using the Persons in the {@code toBeCopied}","lastModifiedDate":"2018-03-29"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public AddressBook(ReadOnlyAddressBook toBeCopied) {","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        this();","lastModifiedDate":"2016-12-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        resetData(toBeCopied);","lastModifiedDate":"2016-12-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    //// list overwrite operations","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":43,"author":{"gitId":"IrvingHe000"},"content":"     * Replaces the contents of the person list with {@code staffs}.","lastModifiedDate":"2021-09-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * {@code persons} must not contain duplicate persons.","lastModifiedDate":"2018-08-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":46,"author":{"gitId":"IrvingHe000"},"content":"    public void setPersons(List\u003cPerson\u003e staffs) {","lastModifiedDate":"2021-09-23"},{"lineNumber":47,"author":{"gitId":"IrvingHe000"},"content":"        this.staffs.setPersons(staffs);","lastModifiedDate":"2021-09-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     * Resets the existing data of this {@code AddressBook} with {@code newData}.","lastModifiedDate":"2017-08-16"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void resetData(ReadOnlyAddressBook newData) {","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        requireNonNull(newData);","lastModifiedDate":"2017-05-15"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-20"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        setPersons(newData.getPersonList());","lastModifiedDate":"2018-03-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    //// person-level operations","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * Returns true if a person with the same identity as {@code person} exists in the address book.","lastModifiedDate":"2018-08-06"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":64,"author":{"gitId":"IrvingHe000"},"content":"    public boolean hasPerson(Person staff) {","lastModifiedDate":"2021-09-23"},{"lineNumber":65,"author":{"gitId":"IrvingHe000"},"content":"        requireNonNull(staff);","lastModifiedDate":"2021-09-23"},{"lineNumber":66,"author":{"gitId":"IrvingHe000"},"content":"        return staffs.contains(staff);","lastModifiedDate":"2021-09-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * Adds a person to the address book.","lastModifiedDate":"2016-09-21"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     * The person must not already exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":73,"author":{"gitId":"IrvingHe000"},"content":"    public void addPerson(Person staff) {","lastModifiedDate":"2021-09-23"},{"lineNumber":74,"author":{"gitId":"IrvingHe000"},"content":"        staffs.add(staff);","lastModifiedDate":"2021-09-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * Replaces the given person {@code target} in the list with {@code editedPerson}.","lastModifiedDate":"2018-01-10"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":82,"author":{"gitId":"IrvingHe000"},"content":"    public void setPerson(Person target, Person editedStaff) {","lastModifiedDate":"2021-09-23"},{"lineNumber":83,"author":{"gitId":"IrvingHe000"},"content":"        requireNonNull(editedStaff);","lastModifiedDate":"2021-09-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":85,"author":{"gitId":"IrvingHe000"},"content":"        staffs.setPerson(target, editedStaff);","lastModifiedDate":"2021-09-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     * Removes {@code key} from this {@code AddressBook}.","lastModifiedDate":"2017-08-16"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     * {@code key} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public void removePerson(Person key) {","lastModifiedDate":"2018-08-07"},{"lineNumber":93,"author":{"gitId":"IrvingHe000"},"content":"        staffs.remove(key);","lastModifiedDate":"2021-09-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    //// util methods","lastModifiedDate":"2016-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-08"},{"lineNumber":100,"author":{"gitId":"IrvingHe000"},"content":"        return staffs.asUnmodifiableObservableList().size() + \" persons\";","lastModifiedDate":"2021-09-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        // TODO: refine later","lastModifiedDate":"2016-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":106,"author":{"gitId":"IrvingHe000"},"content":"        return staffs.asUnmodifiableObservableList();","lastModifiedDate":"2021-09-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-01"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-01"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-21"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-09-21"},{"lineNumber":112,"author":{"gitId":"-"},"content":"                || (other instanceof AddressBook // instanceof handles nulls","lastModifiedDate":"2016-09-21"},{"lineNumber":113,"author":{"gitId":"IrvingHe000"},"content":"                \u0026\u0026 staffs.equals(((AddressBook) other).staffs));","lastModifiedDate":"2021-09-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-21"},{"lineNumber":118,"author":{"gitId":"IrvingHe000"},"content":"        return staffs.hashCode();","lastModifiedDate":"2021-09-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":120,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"-":102,"IrvingHe000":18}},{"path":"src/main/java/seedu/address/model/Model.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"IrvingHe000"},"content":"import java.time.DayOfWeek;","lastModifiedDate":"2021-10-10"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":9,"author":{"gitId":"IrvingHe000"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2021-10-10"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":11,"author":{"gitId":"IrvingHe000"},"content":"import seedu.address.model.person.Slot;","lastModifiedDate":"2021-10-10"},{"lineNumber":12,"author":{"gitId":"IrvingHe000"},"content":"import seedu.address.model.person.exceptions.DuplicateShiftException;","lastModifiedDate":"2021-10-10"},{"lineNumber":13,"author":{"gitId":"Tetrerox"},"content":"import seedu.address.model.person.exceptions.NoShiftException;","lastModifiedDate":"2021-10-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * The API of the Model component.","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public interface Model {","lastModifiedDate":"2016-09-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /** {@code Predicate} that always evaluate to true */","lastModifiedDate":"2017-08-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    Predicate\u003cPerson\u003e PREDICATE_SHOW_ALL_PERSONS \u003d unused -\u003e true;","lastModifiedDate":"2018-01-10"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Replaces user prefs data with the data in {@code userPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    void setUserPrefs(ReadOnlyUserPrefs userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Returns the user prefs.","lastModifiedDate":"2018-11-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    ReadOnlyUserPrefs getUserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    void setAddressBookFilePath(Path addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Replaces address book data with the data in {@code addressBook}.","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    void setAddressBook(ReadOnlyAddressBook addressBook);","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    /** Returns the AddressBook */","lastModifiedDate":"2016-09-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    ReadOnlyAddressBook getAddressBook();","lastModifiedDate":"2016-09-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * Returns true if a person with the same identity as {@code person} exists in the address book.","lastModifiedDate":"2018-08-06"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    boolean hasPerson(Person person);","lastModifiedDate":"2018-08-06"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     * Deletes the given person.","lastModifiedDate":"2018-08-07"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     * The person must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    void deletePerson(Person target);","lastModifiedDate":"2018-08-07"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * Adds the given person.","lastModifiedDate":"2018-08-07"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * {@code person} must not already exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":75,"author":{"gitId":"IrvingHe000"},"content":"    void addPerson(Person staff);","lastModifiedDate":"2021-09-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * Replaces the given person {@code target} with {@code editedPerson}.","lastModifiedDate":"2017-06-07"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":82,"author":{"gitId":"IrvingHe000"},"content":"    void setPerson(Person target, Person editedStaff);","lastModifiedDate":"2021-09-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":84,"author":{"gitId":"mweeruien"},"content":"    /**","lastModifiedDate":"2021-10-10"},{"lineNumber":85,"author":{"gitId":"mweeruien"},"content":"     * Retrieves the Person at the index specified of the observed filtered list.","lastModifiedDate":"2021-10-10"},{"lineNumber":86,"author":{"gitId":"mweeruien"},"content":"     *","lastModifiedDate":"2021-10-10"},{"lineNumber":87,"author":{"gitId":"mweeruien"},"content":"     * @param index The index of the Person desired","lastModifiedDate":"2021-10-10"},{"lineNumber":88,"author":{"gitId":"mweeruien"},"content":"     * @return the Person at the index of the filtered list specified.","lastModifiedDate":"2021-10-10"},{"lineNumber":89,"author":{"gitId":"mweeruien"},"content":"     */","lastModifiedDate":"2021-10-10"},{"lineNumber":90,"author":{"gitId":"mweeruien"},"content":"    Person getFilteredPersonListByIndex(int index);","lastModifiedDate":"2021-10-10"},{"lineNumber":91,"author":{"gitId":"mweeruien"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":92,"author":{"gitId":"mweeruien"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":93,"author":{"gitId":"IrvingHe000"},"content":"    /**","lastModifiedDate":"2021-10-10"},{"lineNumber":94,"author":{"gitId":"IrvingHe000"},"content":"     * Returns the person with given name.","lastModifiedDate":"2021-10-10"},{"lineNumber":95,"author":{"gitId":"IrvingHe000"},"content":"     * @param name Given name.","lastModifiedDate":"2021-10-10"},{"lineNumber":96,"author":{"gitId":"IrvingHe000"},"content":"     * @return Matched Person.","lastModifiedDate":"2021-10-10"},{"lineNumber":97,"author":{"gitId":"IrvingHe000"},"content":"     */","lastModifiedDate":"2021-10-10"},{"lineNumber":98,"author":{"gitId":"IrvingHe000"},"content":"    Person findPersonByName(Name name);","lastModifiedDate":"2021-10-10"},{"lineNumber":99,"author":{"gitId":"IrvingHe000"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":100,"author":{"gitId":"IrvingHe000"},"content":"    /**","lastModifiedDate":"2021-10-10"},{"lineNumber":101,"author":{"gitId":"IrvingHe000"},"content":"     * Add a shift to a target staff\u0027s schedule.","lastModifiedDate":"2021-10-10"},{"lineNumber":102,"author":{"gitId":"IrvingHe000"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2021-10-10"},{"lineNumber":103,"author":{"gitId":"IrvingHe000"},"content":"     *","lastModifiedDate":"2021-10-10"},{"lineNumber":104,"author":{"gitId":"IrvingHe000"},"content":"     * @param target The target staff.","lastModifiedDate":"2021-10-10"},{"lineNumber":105,"author":{"gitId":"IrvingHe000"},"content":"     * @param dayOfWeek of the shift.","lastModifiedDate":"2021-10-10"},{"lineNumber":106,"author":{"gitId":"IrvingHe000"},"content":"     * @param slot of the shift.","lastModifiedDate":"2021-10-10"},{"lineNumber":107,"author":{"gitId":"IrvingHe000"},"content":"     * @throws DuplicateShiftException Throws when there is already a shift at the target slot.","lastModifiedDate":"2021-10-10"},{"lineNumber":108,"author":{"gitId":"IrvingHe000"},"content":"     */","lastModifiedDate":"2021-10-10"},{"lineNumber":109,"author":{"gitId":"IrvingHe000"},"content":"    void addShift(Person target, DayOfWeek dayOfWeek, Slot slot) throws DuplicateShiftException;","lastModifiedDate":"2021-10-10"},{"lineNumber":110,"author":{"gitId":"IrvingHe000"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":111,"author":{"gitId":"Tetrerox"},"content":"    /**","lastModifiedDate":"2021-10-13"},{"lineNumber":112,"author":{"gitId":"Tetrerox"},"content":"     * Deletes a shift from a target staff\u0027s schedule.","lastModifiedDate":"2021-10-13"},{"lineNumber":113,"author":{"gitId":"Tetrerox"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2021-10-13"},{"lineNumber":114,"author":{"gitId":"Tetrerox"},"content":"     *","lastModifiedDate":"2021-10-13"},{"lineNumber":115,"author":{"gitId":"Tetrerox"},"content":"     * @param target The target staff.","lastModifiedDate":"2021-10-13"},{"lineNumber":116,"author":{"gitId":"Tetrerox"},"content":"     * @param dayOfWeek of the shift.","lastModifiedDate":"2021-10-13"},{"lineNumber":117,"author":{"gitId":"Tetrerox"},"content":"     * @param slot of the shift.","lastModifiedDate":"2021-10-13"},{"lineNumber":118,"author":{"gitId":"Tetrerox"},"content":"     * @throws NoShiftException throws when a user tries to delete a shift that does not exist.","lastModifiedDate":"2021-10-13"},{"lineNumber":119,"author":{"gitId":"Tetrerox"},"content":"     */","lastModifiedDate":"2021-10-13"},{"lineNumber":120,"author":{"gitId":"Tetrerox"},"content":"    void deleteShift(Person target, DayOfWeek dayOfWeek, Slot slot) throws NoShiftException;","lastModifiedDate":"2021-10-13"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    /** Returns an unmodifiable view of the filtered person list */","lastModifiedDate":"2017-09-01"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    ObservableList\u003cPerson\u003e getFilteredPersonList();","lastModifiedDate":"2018-01-10"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":125,"author":{"gitId":"Gabau"},"content":"    /** Returns an unmodifiable view of the unfiltered person list */","lastModifiedDate":"2021-10-06"},{"lineNumber":126,"author":{"gitId":"Gabau"},"content":"    ObservableList\u003cPerson\u003e getUnFilteredPersonList();","lastModifiedDate":"2021-10-06"},{"lineNumber":127,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-05"},{"lineNumber":129,"author":{"gitId":"-"},"content":"     * Updates the filter of the filtered person list to filter by the given {@code predicate}.","lastModifiedDate":"2017-08-05"},{"lineNumber":130,"author":{"gitId":"-"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2017-08-05"},{"lineNumber":131,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-05"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate);","lastModifiedDate":"2018-01-10"},{"lineNumber":133,"author":{"gitId":"mweeruien"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":134,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"Tetrerox":11,"Gabau":3,"-":86,"mweeruien":10,"IrvingHe000":24}},{"path":"src/main/java/seedu/address/model/ModelManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-08-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2017-05-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"IrvingHe000"},"content":"import java.time.DayOfWeek;","lastModifiedDate":"2021-10-10"},{"lineNumber":8,"author":{"gitId":"IrvingHe000"},"content":"import java.util.List;","lastModifiedDate":"2021-10-10"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"IrvingHe000"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2021-10-10"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import javafx.collections.transformation.FilteredList;","lastModifiedDate":"2016-08-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":17,"author":{"gitId":"IrvingHe000"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2021-10-10"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":19,"author":{"gitId":"IrvingHe000"},"content":"import seedu.address.model.person.Slot;","lastModifiedDate":"2021-10-10"},{"lineNumber":20,"author":{"gitId":"IrvingHe000"},"content":"import seedu.address.model.person.exceptions.DuplicateShiftException;","lastModifiedDate":"2021-10-10"},{"lineNumber":21,"author":{"gitId":"Tetrerox"},"content":"import seedu.address.model.person.exceptions.NoShiftException;","lastModifiedDate":"2021-10-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * Represents the in-memory model of the address book data.","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class ModelManager implements Model {","lastModifiedDate":"2018-12-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(ModelManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private final AddressBook addressBook;","lastModifiedDate":"2019-01-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private final UserPrefs userPrefs;","lastModifiedDate":"2018-12-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private final FilteredList\u003cPerson\u003e filteredPersons;","lastModifiedDate":"2018-01-10"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Initializes a ModelManager with the given addressBook and userPrefs.","lastModifiedDate":"2016-12-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public ModelManager(ReadOnlyAddressBook addressBook, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        super();","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        requireAllNonNull(addressBook, userPrefs);","lastModifiedDate":"2017-05-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        logger.fine(\"Initializing with address book: \" + addressBook + \" and user prefs \" + userPrefs);","lastModifiedDate":"2016-12-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        this.addressBook \u003d new AddressBook(addressBook);","lastModifiedDate":"2019-01-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        this.userPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        filteredPersons \u003d new FilteredList\u003c\u003e(this.addressBook.getPersonList());","lastModifiedDate":"2019-01-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public ModelManager() {","lastModifiedDate":"2016-09-22"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        this(new AddressBook(), new UserPrefs());","lastModifiedDate":"2016-09-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        requireNonNull(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        this.userPrefs.resetData(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        return userPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        return userPrefs.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        return userPrefs.getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-11-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        requireNonNull(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d AddressBook \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    public void setAddressBook(ReadOnlyAddressBook addressBook) {","lastModifiedDate":"2018-11-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        this.addressBook.resetData(addressBook);","lastModifiedDate":"2019-01-25"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2016-09-21"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        return addressBook;","lastModifiedDate":"2019-01-25"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-15"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        return addressBook.hasPerson(person);","lastModifiedDate":"2019-01-25"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    public void deletePerson(Person target) {","lastModifiedDate":"2018-08-15"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        addressBook.removePerson(target);","lastModifiedDate":"2019-01-25"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":110,"author":{"gitId":"IrvingHe000"},"content":"    public void addPerson(Person staff) {","lastModifiedDate":"2021-09-23"},{"lineNumber":111,"author":{"gitId":"IrvingHe000"},"content":"        addressBook.addPerson(staff);","lastModifiedDate":"2021-09-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-26"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-13"},{"lineNumber":116,"author":{"gitId":"IrvingHe000"},"content":"    public void setPerson(Person target, Person editedStaff) {","lastModifiedDate":"2021-09-23"},{"lineNumber":117,"author":{"gitId":"IrvingHe000"},"content":"        requireAllNonNull(target, editedStaff);","lastModifiedDate":"2021-09-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":119,"author":{"gitId":"IrvingHe000"},"content":"        addressBook.setPerson(target, editedStaff);","lastModifiedDate":"2021-09-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":122,"author":{"gitId":"IrvingHe000"},"content":"    @Override","lastModifiedDate":"2021-10-10"},{"lineNumber":123,"author":{"gitId":"IrvingHe000"},"content":"    public Person findPersonByName(Name name) {","lastModifiedDate":"2021-10-10"},{"lineNumber":124,"author":{"gitId":"IrvingHe000"},"content":"        List\u003cPerson\u003e results \u003d filteredPersons.stream().filter(person -\u003e person.getName().equals(name))","lastModifiedDate":"2021-10-10"},{"lineNumber":125,"author":{"gitId":"IrvingHe000"},"content":"                .collect(Collectors.toList());","lastModifiedDate":"2021-10-10"},{"lineNumber":126,"author":{"gitId":"IrvingHe000"},"content":"        if (results.size() \u003d\u003d 0) {","lastModifiedDate":"2021-10-10"},{"lineNumber":127,"author":{"gitId":"IrvingHe000"},"content":"            return null;","lastModifiedDate":"2021-10-10"},{"lineNumber":128,"author":{"gitId":"IrvingHe000"},"content":"        }","lastModifiedDate":"2021-10-10"},{"lineNumber":129,"author":{"gitId":"IrvingHe000"},"content":"        return results.get(0);","lastModifiedDate":"2021-10-10"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Filtered Person List Accessors \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2016-10-12"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-19"},{"lineNumber":135,"author":{"gitId":"-"},"content":"     * Returns an unmodifiable view of the list of {@code Person} backed by the internal list of","lastModifiedDate":"2018-01-10"},{"lineNumber":136,"author":{"gitId":"-"},"content":"     * {@code versionedAddressBook}","lastModifiedDate":"2018-06-11"},{"lineNumber":137,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-19"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        return filteredPersons;","lastModifiedDate":"2018-12-09"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":143,"author":{"gitId":"mweeruien"},"content":"    /**","lastModifiedDate":"2021-10-10"},{"lineNumber":144,"author":{"gitId":"mweeruien"},"content":"     * Returns the Person from the filtered list with the corresponding index.","lastModifiedDate":"2021-10-10"},{"lineNumber":145,"author":{"gitId":"mweeruien"},"content":"     *","lastModifiedDate":"2021-10-10"},{"lineNumber":146,"author":{"gitId":"mweeruien"},"content":"     * @return the Person from the filtered list with the corresponding index.","lastModifiedDate":"2021-10-10"},{"lineNumber":147,"author":{"gitId":"mweeruien"},"content":"     */","lastModifiedDate":"2021-10-10"},{"lineNumber":148,"author":{"gitId":"mweeruien"},"content":"    @Override","lastModifiedDate":"2021-10-10"},{"lineNumber":149,"author":{"gitId":"mweeruien"},"content":"    public Person getFilteredPersonListByIndex(int index) {","lastModifiedDate":"2021-10-10"},{"lineNumber":150,"author":{"gitId":"mweeruien"},"content":"        if (filteredPersons.size() \u003d\u003d 0) {","lastModifiedDate":"2021-10-10"},{"lineNumber":151,"author":{"gitId":"mweeruien"},"content":"            return new FilteredList\u003c\u003e(this.addressBook.getPersonList()).get(index);","lastModifiedDate":"2021-10-10"},{"lineNumber":152,"author":{"gitId":"mweeruien"},"content":"        } else {","lastModifiedDate":"2021-10-10"},{"lineNumber":153,"author":{"gitId":"mweeruien"},"content":"            return filteredPersons.get(index);","lastModifiedDate":"2021-10-10"},{"lineNumber":154,"author":{"gitId":"mweeruien"},"content":"        }","lastModifiedDate":"2021-10-10"},{"lineNumber":155,"author":{"gitId":"mweeruien"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":156,"author":{"gitId":"mweeruien"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":157,"author":{"gitId":"mweeruien"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":158,"author":{"gitId":"mweeruien"},"content":"    /**","lastModifiedDate":"2021-10-10"},{"lineNumber":159,"author":{"gitId":"mweeruien"},"content":"     * Returns the unfiltered person list.","lastModifiedDate":"2021-10-10"},{"lineNumber":160,"author":{"gitId":"mweeruien"},"content":"     *","lastModifiedDate":"2021-10-10"},{"lineNumber":161,"author":{"gitId":"mweeruien"},"content":"     * @return Unfiltered Person list.","lastModifiedDate":"2021-10-10"},{"lineNumber":162,"author":{"gitId":"mweeruien"},"content":"     */","lastModifiedDate":"2021-10-10"},{"lineNumber":163,"author":{"gitId":"Gabau"},"content":"    @Override","lastModifiedDate":"2021-10-06"},{"lineNumber":164,"author":{"gitId":"Gabau"},"content":"    public ObservableList\u003cPerson\u003e getUnFilteredPersonList() {","lastModifiedDate":"2021-10-06"},{"lineNumber":165,"author":{"gitId":"Gabau"},"content":"        return new FilteredList\u003c\u003e(this.addressBook.getPersonList());","lastModifiedDate":"2021-10-13"},{"lineNumber":166,"author":{"gitId":"Gabau"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":167,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":168,"author":{"gitId":"mweeruien"},"content":"    /**","lastModifiedDate":"2021-10-10"},{"lineNumber":169,"author":{"gitId":"mweeruien"},"content":"     * Updates the filtered person list based on the predicate.","lastModifiedDate":"2021-10-10"},{"lineNumber":170,"author":{"gitId":"mweeruien"},"content":"     *","lastModifiedDate":"2021-10-10"},{"lineNumber":171,"author":{"gitId":"mweeruien"},"content":"     * @param predicate This filters the filtered person list.","lastModifiedDate":"2021-10-10"},{"lineNumber":172,"author":{"gitId":"mweeruien"},"content":"     */","lastModifiedDate":"2021-10-10"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2018-01-10"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2017-08-05"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        filteredPersons.setPredicate(predicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":179,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":180,"author":{"gitId":"IrvingHe000"},"content":"    @Override","lastModifiedDate":"2021-10-10"},{"lineNumber":181,"author":{"gitId":"IrvingHe000"},"content":"    public void addShift(Person target, DayOfWeek dayOfWeek, Slot slot) throws DuplicateShiftException {","lastModifiedDate":"2021-10-10"},{"lineNumber":182,"author":{"gitId":"IrvingHe000"},"content":"        requireAllNonNull(target, dayOfWeek, slot);","lastModifiedDate":"2021-10-10"},{"lineNumber":183,"author":{"gitId":"Tetrerox"},"content":"        target.addShift(dayOfWeek, slot);","lastModifiedDate":"2021-10-13"},{"lineNumber":184,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":185,"author":{"gitId":"IrvingHe000"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":186,"author":{"gitId":"IrvingHe000"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":187,"author":{"gitId":"Tetrerox"},"content":"    @Override","lastModifiedDate":"2021-10-13"},{"lineNumber":188,"author":{"gitId":"Tetrerox"},"content":"    public void deleteShift(Person target, DayOfWeek dayOfWeek, Slot slot) throws NoShiftException {","lastModifiedDate":"2021-10-13"},{"lineNumber":189,"author":{"gitId":"Tetrerox"},"content":"        requireAllNonNull(target, dayOfWeek, slot);","lastModifiedDate":"2021-10-13"},{"lineNumber":190,"author":{"gitId":"Tetrerox"},"content":"        target.removeShift(dayOfWeek, slot);","lastModifiedDate":"2021-10-13"},{"lineNumber":191,"author":{"gitId":"Tetrerox"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":192,"author":{"gitId":"Tetrerox"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":193,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-31"},{"lineNumber":194,"author":{"gitId":"-"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2017-05-31"},{"lineNumber":195,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-05-31"},{"lineNumber":196,"author":{"gitId":"-"},"content":"        if (obj \u003d\u003d this) {","lastModifiedDate":"2017-05-31"},{"lineNumber":197,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-31"},{"lineNumber":198,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":200,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-31"},{"lineNumber":201,"author":{"gitId":"-"},"content":"        if (!(obj instanceof ModelManager)) {","lastModifiedDate":"2017-05-31"},{"lineNumber":202,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-31"},{"lineNumber":203,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":204,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-05-31"},{"lineNumber":206,"author":{"gitId":"-"},"content":"        ModelManager other \u003d (ModelManager) obj;","lastModifiedDate":"2017-05-31"},{"lineNumber":207,"author":{"gitId":"-"},"content":"        return addressBook.equals(other.addressBook)","lastModifiedDate":"2019-01-25"},{"lineNumber":208,"author":{"gitId":"-"},"content":"                \u0026\u0026 userPrefs.equals(other.userPrefs)","lastModifiedDate":"2018-11-27"},{"lineNumber":209,"author":{"gitId":"-"},"content":"                \u0026\u0026 filteredPersons.equals(other.filteredPersons);","lastModifiedDate":"2019-01-25"},{"lineNumber":210,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":211,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":212,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"Tetrerox":8,"Gabau":7,"-":148,"mweeruien":25,"IrvingHe000":24}},{"path":"src/main/java/seedu/address/model/person/Address.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2021-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a Person\u0027s address in the address book.","lastModifiedDate":"2021-09-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidAddress(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"Gabau"},"content":"public class Address implements Field {","lastModifiedDate":"2021-10-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Addresses can take any values, and it should not be blank\";","lastModifiedDate":"2018-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2017-01-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * The first character of the address must not be a whitespace,","lastModifiedDate":"2017-01-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2017-01-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"[^\\\\s].*\";","lastModifiedDate":"2018-09-22"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public final String value;","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Constructs an {@code Address}.","lastModifiedDate":"2017-05-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * @param address A valid address.","lastModifiedDate":"2017-05-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public Address(String address) {","lastModifiedDate":"2017-05-30"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        requireNonNull(address);","lastModifiedDate":"2017-05-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        checkArgument(isValidAddress(address), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        value \u003d address;","lastModifiedDate":"2018-08-14"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid email.","lastModifiedDate":"2018-04-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public static boolean isValidAddress(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return value;","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"                || (other instanceof Address // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"                \u0026\u0026 value.equals(((Address) other).value)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        return value.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"Gabau":1,"-":56}},{"path":"src/main/java/seedu/address/model/person/Email.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2021-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a Person\u0027s email in the address book.","lastModifiedDate":"2021-09-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidEmail(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"Gabau"},"content":"public class Email implements Field {","lastModifiedDate":"2021-10-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private static final String SPECIAL_CHARACTERS \u003d \"+_.-\";","lastModifiedDate":"2021-07-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Emails should be of the format local-part@domain \"","lastModifiedDate":"2018-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"            + \"and adhere to the following constraints:\\n\"","lastModifiedDate":"2018-02-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"            + \"1. The local-part should only contain alphanumeric characters and these special characters, excluding \"","lastModifiedDate":"2018-02-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"            + \"the parentheses, (\" + SPECIAL_CHARACTERS + \"). The local-part may not start or end with any special \"","lastModifiedDate":"2021-07-20"},{"lineNumber":17,"author":{"gitId":"-"},"content":"            + \"characters.\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":18,"author":{"gitId":"-"},"content":"            + \"2. This is followed by a \u0027@\u0027 and then a domain name. The domain name is made up of domain labels \"","lastModifiedDate":"2021-07-20"},{"lineNumber":19,"author":{"gitId":"-"},"content":"            + \"separated by periods.\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            + \"The domain name must:\\n\"","lastModifiedDate":"2018-02-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            + \"    - end with a domain label at least 2 characters long\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            + \"    - have each domain label start and end with alphanumeric characters\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            + \"    - have each domain label consist of alphanumeric characters, separated only by hyphens, if any.\";","lastModifiedDate":"2021-07-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    // alphanumeric and special characters","lastModifiedDate":"2018-02-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static final String ALPHANUMERIC_NO_UNDERSCORE \u003d \"[^\\\\W_]+\"; // alphanumeric characters except underscore","lastModifiedDate":"2021-07-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String LOCAL_PART_REGEX \u003d \"^\" + ALPHANUMERIC_NO_UNDERSCORE + \"([\" + SPECIAL_CHARACTERS + \"]\"","lastModifiedDate":"2021-07-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            + ALPHANUMERIC_NO_UNDERSCORE + \")*\";","lastModifiedDate":"2021-07-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final String DOMAIN_PART_REGEX \u003d ALPHANUMERIC_NO_UNDERSCORE","lastModifiedDate":"2021-07-20"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            + \"(-\" + ALPHANUMERIC_NO_UNDERSCORE + \")*\";","lastModifiedDate":"2021-07-20"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private static final String DOMAIN_LAST_PART_REGEX \u003d \"(\" + DOMAIN_PART_REGEX + \"){2,}$\"; // At least two chars","lastModifiedDate":"2021-07-20"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final String DOMAIN_REGEX \u003d \"(\" + DOMAIN_PART_REGEX + \"\\\\.)*\" + DOMAIN_LAST_PART_REGEX;","lastModifiedDate":"2021-07-20"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d LOCAL_PART_REGEX + \"@\" + DOMAIN_REGEX;","lastModifiedDate":"2021-07-20"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public final String value;","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Constructs an {@code Email}.","lastModifiedDate":"2017-05-30"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * @param email A valid email address.","lastModifiedDate":"2017-05-30"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public Email(String email) {","lastModifiedDate":"2017-05-30"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        requireNonNull(email);","lastModifiedDate":"2017-05-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        checkArgument(isValidEmail(email), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        value \u003d email;","lastModifiedDate":"2018-08-14"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Returns if a given string is a valid email.","lastModifiedDate":"2018-04-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public static boolean isValidEmail(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        return value;","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"                || (other instanceof Email // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"                \u0026\u0026 value.equals(((Email) other).value)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return value.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"Gabau":1,"-":70}},{"path":"src/main/java/seedu/address/model/person/Field.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Gabau"},"content":"package seedu.address.model.person;","lastModifiedDate":"2021-10-08"},{"lineNumber":2,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":3,"author":{"gitId":"Gabau"},"content":"import java.util.Set;","lastModifiedDate":"2021-10-08"},{"lineNumber":4,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":5,"author":{"gitId":"Gabau"},"content":"/**","lastModifiedDate":"2021-10-08"},{"lineNumber":6,"author":{"gitId":"Gabau"},"content":" * Represents a field in a staff.","lastModifiedDate":"2021-10-08"},{"lineNumber":7,"author":{"gitId":"Gabau"},"content":" */","lastModifiedDate":"2021-10-08"},{"lineNumber":8,"author":{"gitId":"Gabau"},"content":"public interface Field {","lastModifiedDate":"2021-10-08"},{"lineNumber":9,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":10,"author":{"gitId":"Gabau"},"content":"    /**","lastModifiedDate":"2021-10-08"},{"lineNumber":11,"author":{"gitId":"Gabau"},"content":"     * Add input fields to field set.","lastModifiedDate":"2021-10-08"},{"lineNumber":12,"author":{"gitId":"Gabau"},"content":"     * @param fieldSet The field set to add to.","lastModifiedDate":"2021-10-08"},{"lineNumber":13,"author":{"gitId":"Gabau"},"content":"     * @param fields The fields to add.","lastModifiedDate":"2021-10-08"},{"lineNumber":14,"author":{"gitId":"Gabau"},"content":"     */","lastModifiedDate":"2021-10-08"},{"lineNumber":15,"author":{"gitId":"Gabau"},"content":"    static void addToFieldSet(Set\u003cField\u003e fieldSet, Field... fields) {","lastModifiedDate":"2021-10-08"},{"lineNumber":16,"author":{"gitId":"Gabau"},"content":"        for (Field field: fields) {","lastModifiedDate":"2021-10-08"},{"lineNumber":17,"author":{"gitId":"Gabau"},"content":"            fieldSet.add(field);","lastModifiedDate":"2021-10-08"},{"lineNumber":18,"author":{"gitId":"Gabau"},"content":"        }","lastModifiedDate":"2021-10-08"},{"lineNumber":19,"author":{"gitId":"Gabau"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":20,"author":{"gitId":"Gabau"},"content":"}","lastModifiedDate":"2021-10-08"}],"authorContributionMap":{"Gabau":20}},{"path":"src/main/java/seedu/address/model/person/Name.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2021-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a Person\u0027s name in the address book.","lastModifiedDate":"2021-09-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidName(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"Gabau"},"content":"public class Name implements Field {","lastModifiedDate":"2021-10-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2018-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"            \"Names should only contain alphanumeric characters and spaces, and it should not be blank\";","lastModifiedDate":"2018-04-04"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2017-01-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * The first character of the address must not be a whitespace,","lastModifiedDate":"2017-01-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2017-01-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"[\\\\p{Alnum}][\\\\p{Alnum} ]*\";","lastModifiedDate":"2018-09-22"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public final String fullName;","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Constructs a {@code Name}.","lastModifiedDate":"2017-05-30"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * @param name A valid name.","lastModifiedDate":"2017-05-30"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public Name(String name) {","lastModifiedDate":"2017-05-30"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        checkArgument(isValidName(name), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        fullName \u003d name;","lastModifiedDate":"2018-08-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid name.","lastModifiedDate":"2018-04-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static boolean isValidName(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return fullName;","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"                || (other instanceof Name // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"                \u0026\u0026 fullName.equals(((Name) other).fullName)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        return fullName.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"Gabau":1,"-":58}},{"path":"src/main/java/seedu/address/model/person/Period.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Gabau"},"content":"package seedu.address.model.person;","lastModifiedDate":"2021-10-12"},{"lineNumber":2,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":3,"author":{"gitId":"Gabau"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-14"},{"lineNumber":4,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":5,"author":{"gitId":"Gabau"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-10-12"},{"lineNumber":6,"author":{"gitId":"Gabau"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2021-10-12"},{"lineNumber":7,"author":{"gitId":"Gabau"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-14"},{"lineNumber":8,"author":{"gitId":"Gabau"},"content":"import java.util.Collection;","lastModifiedDate":"2021-10-14"},{"lineNumber":9,"author":{"gitId":"Gabau"},"content":"import java.util.List;","lastModifiedDate":"2021-10-14"},{"lineNumber":10,"author":{"gitId":"Gabau"},"content":"import java.util.function.Consumer;","lastModifiedDate":"2021-10-14"},{"lineNumber":11,"author":{"gitId":"Gabau"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2021-10-14"},{"lineNumber":12,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":13,"author":{"gitId":"Gabau"},"content":"/**","lastModifiedDate":"2021-10-12"},{"lineNumber":14,"author":{"gitId":"Gabau"},"content":" * Class representing a period of dates.","lastModifiedDate":"2021-10-12"},{"lineNumber":15,"author":{"gitId":"Gabau"},"content":" */","lastModifiedDate":"2021-10-12"},{"lineNumber":16,"author":{"gitId":"Gabau"},"content":"public class Period {","lastModifiedDate":"2021-10-12"},{"lineNumber":17,"author":{"gitId":"Gabau"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2021-10-12"},{"lineNumber":18,"author":{"gitId":"Gabau"},"content":"            \"Period should be a range of two dates with a space in between\\n\"","lastModifiedDate":"2021-10-12"},{"lineNumber":19,"author":{"gitId":"Gabau"},"content":"            + \"E.g. 1999-10-09 1999-11-15\";","lastModifiedDate":"2021-10-12"},{"lineNumber":20,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":21,"author":{"gitId":"Gabau"},"content":"    private static final String DELIMITER \u003d \" \";","lastModifiedDate":"2021-10-12"},{"lineNumber":22,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":23,"author":{"gitId":"Gabau"},"content":"    private LocalDate startDate;","lastModifiedDate":"2021-10-13"},{"lineNumber":24,"author":{"gitId":"Gabau"},"content":"    private LocalDate endDate;","lastModifiedDate":"2021-10-13"},{"lineNumber":25,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":26,"author":{"gitId":"Gabau"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":27,"author":{"gitId":"Gabau"},"content":"     * Constructs a {@code Period} with two {@code LocalDate},","lastModifiedDate":"2021-10-12"},{"lineNumber":28,"author":{"gitId":"Gabau"},"content":"     * order is not needed.","lastModifiedDate":"2021-10-12"},{"lineNumber":29,"author":{"gitId":"Gabau"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":30,"author":{"gitId":"Gabau"},"content":"    public Period(LocalDate startDate, LocalDate endDate) {","lastModifiedDate":"2021-10-13"},{"lineNumber":31,"author":{"gitId":"Gabau"},"content":"        //to swap","lastModifiedDate":"2021-10-12"},{"lineNumber":32,"author":{"gitId":"Gabau"},"content":"        if (startDate.isAfter(endDate)) {","lastModifiedDate":"2021-10-13"},{"lineNumber":33,"author":{"gitId":"Gabau"},"content":"            this.startDate \u003d endDate;","lastModifiedDate":"2021-10-13"},{"lineNumber":34,"author":{"gitId":"Gabau"},"content":"            this.endDate \u003d startDate;","lastModifiedDate":"2021-10-13"},{"lineNumber":35,"author":{"gitId":"Gabau"},"content":"        } else {","lastModifiedDate":"2021-10-12"},{"lineNumber":36,"author":{"gitId":"Gabau"},"content":"            this.startDate \u003d startDate;","lastModifiedDate":"2021-10-14"},{"lineNumber":37,"author":{"gitId":"Gabau"},"content":"            this.endDate \u003d endDate;","lastModifiedDate":"2021-10-13"},{"lineNumber":38,"author":{"gitId":"Gabau"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":39,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":40,"author":{"gitId":"Gabau"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":41,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":42,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":43,"author":{"gitId":"Gabau"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":44,"author":{"gitId":"Gabau"},"content":"     * Constructs a {@code Period} with a single {@code date}.","lastModifiedDate":"2021-10-12"},{"lineNumber":45,"author":{"gitId":"Gabau"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":46,"author":{"gitId":"Gabau"},"content":"    public Period(LocalDate date) {","lastModifiedDate":"2021-10-12"},{"lineNumber":47,"author":{"gitId":"Gabau"},"content":"        this.startDate \u003d date;","lastModifiedDate":"2021-10-13"},{"lineNumber":48,"author":{"gitId":"Gabau"},"content":"        this.endDate \u003d date;","lastModifiedDate":"2021-10-13"},{"lineNumber":49,"author":{"gitId":"Gabau"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":50,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":51,"author":{"gitId":"Gabau"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":52,"author":{"gitId":"Gabau"},"content":"     * Parses a {@code period} into a Period object.","lastModifiedDate":"2021-10-12"},{"lineNumber":53,"author":{"gitId":"Gabau"},"content":"     *","lastModifiedDate":"2021-10-12"},{"lineNumber":54,"author":{"gitId":"Gabau"},"content":"     * @throws DateTimeParseException when the input is invalid.","lastModifiedDate":"2021-10-12"},{"lineNumber":55,"author":{"gitId":"Gabau"},"content":"     * @throws IllegalArgumentException when the input cannot be split.","lastModifiedDate":"2021-10-13"},{"lineNumber":56,"author":{"gitId":"Gabau"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":57,"author":{"gitId":"Gabau"},"content":"    public static Period transformStringToPeriod(String period) {","lastModifiedDate":"2021-10-12"},{"lineNumber":58,"author":{"gitId":"Gabau"},"content":"        String[] splitPeriod \u003d period.split(DELIMITER);","lastModifiedDate":"2021-10-12"},{"lineNumber":59,"author":{"gitId":"Gabau"},"content":"        if (splitPeriod.length !\u003d 2) {","lastModifiedDate":"2021-10-13"},{"lineNumber":60,"author":{"gitId":"Gabau"},"content":"            throw new IllegalArgumentException(MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-13"},{"lineNumber":61,"author":{"gitId":"Gabau"},"content":"        }","lastModifiedDate":"2021-10-13"},{"lineNumber":62,"author":{"gitId":"Gabau"},"content":"        return new Period(LocalDate.parse(splitPeriod[0]),","lastModifiedDate":"2021-10-12"},{"lineNumber":63,"author":{"gitId":"Gabau"},"content":"                LocalDate.parse(splitPeriod[1]));","lastModifiedDate":"2021-10-12"},{"lineNumber":64,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":65,"author":{"gitId":"Gabau"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":66,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":67,"author":{"gitId":"Gabau"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":68,"author":{"gitId":"Gabau"},"content":"     * Checks if {@code date} is contained by the period inclusive of the","lastModifiedDate":"2021-10-12"},{"lineNumber":69,"author":{"gitId":"Gabau"},"content":"     * {@code start} and {@code end} of the Period object. Returns true","lastModifiedDate":"2021-10-12"},{"lineNumber":70,"author":{"gitId":"Gabau"},"content":"     * if it is contained and false otherwise.","lastModifiedDate":"2021-10-12"},{"lineNumber":71,"author":{"gitId":"Gabau"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":72,"author":{"gitId":"Gabau"},"content":"    public boolean contains(LocalDate date) {","lastModifiedDate":"2021-10-12"},{"lineNumber":73,"author":{"gitId":"Gabau"},"content":"        return withinExclusively(date)","lastModifiedDate":"2021-10-12"},{"lineNumber":74,"author":{"gitId":"Gabau"},"content":"                || atDelimiters(date);","lastModifiedDate":"2021-10-12"},{"lineNumber":75,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":76,"author":{"gitId":"Gabau"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":77,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":78,"author":{"gitId":"Gabau"},"content":"    /**","lastModifiedDate":"2021-10-13"},{"lineNumber":79,"author":{"gitId":"Gabau"},"content":"     * Returns true if {@code this} contains {@code period}.","lastModifiedDate":"2021-10-13"},{"lineNumber":80,"author":{"gitId":"Gabau"},"content":"     */","lastModifiedDate":"2021-10-13"},{"lineNumber":81,"author":{"gitId":"Gabau"},"content":"    public boolean contains(Period period) {","lastModifiedDate":"2021-10-13"},{"lineNumber":82,"author":{"gitId":"Gabau"},"content":"        return this.contains(period.startDate)","lastModifiedDate":"2021-10-13"},{"lineNumber":83,"author":{"gitId":"Gabau"},"content":"                \u0026\u0026 this.contains(period.endDate);","lastModifiedDate":"2021-10-13"},{"lineNumber":84,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":85,"author":{"gitId":"Gabau"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":86,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":87,"author":{"gitId":"Gabau"},"content":"    /**","lastModifiedDate":"2021-10-14"},{"lineNumber":88,"author":{"gitId":"Gabau"},"content":"     * Gets the complement duration of {@code period} and the","lastModifiedDate":"2021-10-14"},{"lineNumber":89,"author":{"gitId":"Gabau"},"content":"     * input period.","lastModifiedDate":"2021-10-14"},{"lineNumber":90,"author":{"gitId":"Gabau"},"content":"     */","lastModifiedDate":"2021-10-14"},{"lineNumber":91,"author":{"gitId":"Gabau"},"content":"    public Collection\u003cPeriod\u003e complement(Period period) {","lastModifiedDate":"2021-10-14"},{"lineNumber":92,"author":{"gitId":"Gabau"},"content":"        assert period.endDate.isAfter(period.startDate)","lastModifiedDate":"2021-10-14"},{"lineNumber":93,"author":{"gitId":"Gabau"},"content":"                || period.endDate.isEqual(period.startDate);","lastModifiedDate":"2021-10-14"},{"lineNumber":94,"author":{"gitId":"Gabau"},"content":"        assert endDate.isAfter(startDate)","lastModifiedDate":"2021-10-14"},{"lineNumber":95,"author":{"gitId":"Gabau"},"content":"                || endDate.isEqual(startDate);","lastModifiedDate":"2021-10-14"},{"lineNumber":96,"author":{"gitId":"Gabau"},"content":"        if (period.contains(this)) {","lastModifiedDate":"2021-10-14"},{"lineNumber":97,"author":{"gitId":"Gabau"},"content":"            return List.of();","lastModifiedDate":"2021-10-14"},{"lineNumber":98,"author":{"gitId":"Gabau"},"content":"        }","lastModifiedDate":"2021-10-14"},{"lineNumber":99,"author":{"gitId":"Gabau"},"content":"        if (contains(period)) {","lastModifiedDate":"2021-10-14"},{"lineNumber":100,"author":{"gitId":"Gabau"},"content":"            //when it is contained","lastModifiedDate":"2021-10-14"},{"lineNumber":101,"author":{"gitId":"Gabau"},"content":"            Period period1 \u003d new Period(startDate, period.startDate.minusDays(1));","lastModifiedDate":"2021-10-14"},{"lineNumber":102,"author":{"gitId":"Gabau"},"content":"            Period period2 \u003d new Period(period.endDate.plusDays(1), endDate);","lastModifiedDate":"2021-10-14"},{"lineNumber":103,"author":{"gitId":"Gabau"},"content":"            return List.of(period1, period2);","lastModifiedDate":"2021-10-14"},{"lineNumber":104,"author":{"gitId":"Gabau"},"content":"        }","lastModifiedDate":"2021-10-14"},{"lineNumber":105,"author":{"gitId":"Gabau"},"content":"        // startDate period.startDate endDate period.endDate","lastModifiedDate":"2021-10-14"},{"lineNumber":106,"author":{"gitId":"Gabau"},"content":"        // startDate \u003c-\u003e period.startDate - 1","lastModifiedDate":"2021-10-14"},{"lineNumber":107,"author":{"gitId":"Gabau"},"content":"        if (contains(period.startDate)) {","lastModifiedDate":"2021-10-14"},{"lineNumber":108,"author":{"gitId":"Gabau"},"content":"            return List.of(new Period(startDate, period.startDate.minusDays(1)));","lastModifiedDate":"2021-10-14"},{"lineNumber":109,"author":{"gitId":"Gabau"},"content":"        }","lastModifiedDate":"2021-10-14"},{"lineNumber":110,"author":{"gitId":"Gabau"},"content":"        // period.startDate startDate period.endDate endDate","lastModifiedDate":"2021-10-14"},{"lineNumber":111,"author":{"gitId":"Gabau"},"content":"        // period.endDate + 1 \u003c-\u003e endDate","lastModifiedDate":"2021-10-14"},{"lineNumber":112,"author":{"gitId":"Gabau"},"content":"        if (contains(period.endDate)) {","lastModifiedDate":"2021-10-14"},{"lineNumber":113,"author":{"gitId":"Gabau"},"content":"            return List.of(new Period(period.endDate.plusDays(1), endDate));","lastModifiedDate":"2021-10-14"},{"lineNumber":114,"author":{"gitId":"Gabau"},"content":"        }","lastModifiedDate":"2021-10-14"},{"lineNumber":115,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":116,"author":{"gitId":"Gabau"},"content":"        //when there is no need to","lastModifiedDate":"2021-10-14"},{"lineNumber":117,"author":{"gitId":"Gabau"},"content":"        return List.of(this);","lastModifiedDate":"2021-10-14"},{"lineNumber":118,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":119,"author":{"gitId":"Gabau"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":120,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":121,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":122,"author":{"gitId":"Gabau"},"content":"    /**","lastModifiedDate":"2021-10-14"},{"lineNumber":123,"author":{"gitId":"Gabau"},"content":"     * Unions the input {@code Collection\u003cPeriod\u003e periods} with {@code this}.","lastModifiedDate":"2021-10-14"},{"lineNumber":124,"author":{"gitId":"Gabau"},"content":"     */","lastModifiedDate":"2021-10-14"},{"lineNumber":125,"author":{"gitId":"Gabau"},"content":"    public Collection\u003cPeriod\u003e union(Collection\u003cPeriod\u003e periods) {","lastModifiedDate":"2021-10-14"},{"lineNumber":126,"author":{"gitId":"Gabau"},"content":"        if (periods.stream().count() \u003d\u003d 0) {","lastModifiedDate":"2021-10-14"},{"lineNumber":127,"author":{"gitId":"Gabau"},"content":"            //nothing to union to","lastModifiedDate":"2021-10-14"},{"lineNumber":128,"author":{"gitId":"Gabau"},"content":"            return List.of(this);","lastModifiedDate":"2021-10-14"},{"lineNumber":129,"author":{"gitId":"Gabau"},"content":"        }","lastModifiedDate":"2021-10-14"},{"lineNumber":130,"author":{"gitId":"Gabau"},"content":"        //optimisation","lastModifiedDate":"2021-10-14"},{"lineNumber":131,"author":{"gitId":"Gabau"},"content":"        if (periods.stream()","lastModifiedDate":"2021-10-14"},{"lineNumber":132,"author":{"gitId":"Gabau"},"content":"                .filter(p -\u003e p.contains(this)).count() !\u003d 0) {","lastModifiedDate":"2021-10-14"},{"lineNumber":133,"author":{"gitId":"Gabau"},"content":"            return periods;","lastModifiedDate":"2021-10-14"},{"lineNumber":134,"author":{"gitId":"Gabau"},"content":"        }","lastModifiedDate":"2021-10-14"},{"lineNumber":135,"author":{"gitId":"Gabau"},"content":"        //the list of periods to union","lastModifiedDate":"2021-10-14"},{"lineNumber":136,"author":{"gitId":"Gabau"},"content":"        List\u003cPeriod\u003e toMerge \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-14"},{"lineNumber":137,"author":{"gitId":"Gabau"},"content":"        Collection\u003cPeriod\u003e result \u003d periods.stream()","lastModifiedDate":"2021-10-14"},{"lineNumber":138,"author":{"gitId":"Gabau"},"content":"                .flatMap(p -\u003e this.union(p, pe -\u003e toMerge.add(pe)).stream())","lastModifiedDate":"2021-10-14"},{"lineNumber":139,"author":{"gitId":"Gabau"},"content":"                .collect(Collectors.toList());","lastModifiedDate":"2021-10-14"},{"lineNumber":140,"author":{"gitId":"Gabau"},"content":"        //merge the changed periods","lastModifiedDate":"2021-10-14"},{"lineNumber":141,"author":{"gitId":"Gabau"},"content":"        //in theory there is only two assuming collection is unique","lastModifiedDate":"2021-10-14"},{"lineNumber":142,"author":{"gitId":"Gabau"},"content":"        for (Period p : toMerge) {","lastModifiedDate":"2021-10-14"},{"lineNumber":143,"author":{"gitId":"Gabau"},"content":"            result \u003d p.union(result);","lastModifiedDate":"2021-10-14"},{"lineNumber":144,"author":{"gitId":"Gabau"},"content":"        }","lastModifiedDate":"2021-10-14"},{"lineNumber":145,"author":{"gitId":"Gabau"},"content":"        return result;","lastModifiedDate":"2021-10-14"},{"lineNumber":146,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":147,"author":{"gitId":"Gabau"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":148,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":149,"author":{"gitId":"Gabau"},"content":"    /**","lastModifiedDate":"2021-10-14"},{"lineNumber":150,"author":{"gitId":"Gabau"},"content":"     * Unions {@code period} with {@code this}.","lastModifiedDate":"2021-10-14"},{"lineNumber":151,"author":{"gitId":"Gabau"},"content":"     * The result is placed into the consumer if it is modified.","lastModifiedDate":"2021-10-14"},{"lineNumber":152,"author":{"gitId":"Gabau"},"content":"     */","lastModifiedDate":"2021-10-14"},{"lineNumber":153,"author":{"gitId":"Gabau"},"content":"    private Collection\u003cPeriod\u003e union(Period period, Consumer\u003cPeriod\u003e consumer) {","lastModifiedDate":"2021-10-14"},{"lineNumber":154,"author":{"gitId":"Gabau"},"content":"        requireNonNull(period);","lastModifiedDate":"2021-10-14"},{"lineNumber":155,"author":{"gitId":"Gabau"},"content":"        if (this.contains(period)) {","lastModifiedDate":"2021-10-14"},{"lineNumber":156,"author":{"gitId":"Gabau"},"content":"            return List.of(this);","lastModifiedDate":"2021-10-14"},{"lineNumber":157,"author":{"gitId":"Gabau"},"content":"        }","lastModifiedDate":"2021-10-14"},{"lineNumber":158,"author":{"gitId":"Gabau"},"content":"        if (period.contains(this)) {","lastModifiedDate":"2021-10-14"},{"lineNumber":159,"author":{"gitId":"Gabau"},"content":"            return List.of(period);","lastModifiedDate":"2021-10-14"},{"lineNumber":160,"author":{"gitId":"Gabau"},"content":"        }","lastModifiedDate":"2021-10-14"},{"lineNumber":161,"author":{"gitId":"Gabau"},"content":"        //can lead to multiple unions","lastModifiedDate":"2021-10-14"},{"lineNumber":162,"author":{"gitId":"Gabau"},"content":"        if (contains(period.startDate.minusDays(1))) {","lastModifiedDate":"2021-10-14"},{"lineNumber":163,"author":{"gitId":"Gabau"},"content":"            //we know that periods endDate is not contained","lastModifiedDate":"2021-10-14"},{"lineNumber":164,"author":{"gitId":"Gabau"},"content":"            Period res \u003d new Period(startDate, period.endDate);","lastModifiedDate":"2021-10-14"},{"lineNumber":165,"author":{"gitId":"Gabau"},"content":"            consumer.accept(res);","lastModifiedDate":"2021-10-14"},{"lineNumber":166,"author":{"gitId":"Gabau"},"content":"            return List.of();","lastModifiedDate":"2021-10-14"},{"lineNumber":167,"author":{"gitId":"Gabau"},"content":"        }","lastModifiedDate":"2021-10-14"},{"lineNumber":168,"author":{"gitId":"Gabau"},"content":"        if (contains(period.endDate.plusDays(1))) {","lastModifiedDate":"2021-10-14"},{"lineNumber":169,"author":{"gitId":"Gabau"},"content":"            //we know that period startDate is not contained","lastModifiedDate":"2021-10-14"},{"lineNumber":170,"author":{"gitId":"Gabau"},"content":"            Period res \u003d new Period(period.startDate, endDate);","lastModifiedDate":"2021-10-14"},{"lineNumber":171,"author":{"gitId":"Gabau"},"content":"            consumer.accept(res);","lastModifiedDate":"2021-10-14"},{"lineNumber":172,"author":{"gitId":"Gabau"},"content":"            return List.of();","lastModifiedDate":"2021-10-14"},{"lineNumber":173,"author":{"gitId":"Gabau"},"content":"        }","lastModifiedDate":"2021-10-14"},{"lineNumber":174,"author":{"gitId":"Gabau"},"content":"        return List.of(period, this);","lastModifiedDate":"2021-10-14"},{"lineNumber":175,"author":{"gitId":"Gabau"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":176,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":177,"author":{"gitId":"Gabau"},"content":"    private boolean withinExclusively(LocalDate date) {","lastModifiedDate":"2021-10-12"},{"lineNumber":178,"author":{"gitId":"Gabau"},"content":"        return (this.startDate.isBefore(date))","lastModifiedDate":"2021-10-13"},{"lineNumber":179,"author":{"gitId":"Gabau"},"content":"                \u0026\u0026 (this.endDate.isAfter(date));","lastModifiedDate":"2021-10-13"},{"lineNumber":180,"author":{"gitId":"Gabau"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":181,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":182,"author":{"gitId":"Gabau"},"content":"    private boolean atDelimiters(LocalDate date) {","lastModifiedDate":"2021-10-12"},{"lineNumber":183,"author":{"gitId":"Gabau"},"content":"        return this.startDate.isEqual(date)","lastModifiedDate":"2021-10-13"},{"lineNumber":184,"author":{"gitId":"Gabau"},"content":"                || this.endDate.isEqual(date);","lastModifiedDate":"2021-10-13"},{"lineNumber":185,"author":{"gitId":"Gabau"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":186,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":187,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":188,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":189,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":190,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":191,"author":{"gitId":"Gabau"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":192,"author":{"gitId":"Gabau"},"content":"     * Tests if the input string is a valid string representing a period.","lastModifiedDate":"2021-10-12"},{"lineNumber":193,"author":{"gitId":"Gabau"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":194,"author":{"gitId":"Gabau"},"content":"    public static boolean isValidPeriodString(String toTest) {","lastModifiedDate":"2021-10-12"},{"lineNumber":195,"author":{"gitId":"Gabau"},"content":"        String[] toTestSplit \u003d toTest.split(DELIMITER);","lastModifiedDate":"2021-10-12"},{"lineNumber":196,"author":{"gitId":"Gabau"},"content":"        if (toTestSplit.length !\u003d 2) {","lastModifiedDate":"2021-10-12"},{"lineNumber":197,"author":{"gitId":"Gabau"},"content":"            return false;","lastModifiedDate":"2021-10-12"},{"lineNumber":198,"author":{"gitId":"Gabau"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":199,"author":{"gitId":"Gabau"},"content":"        try {","lastModifiedDate":"2021-10-12"},{"lineNumber":200,"author":{"gitId":"Gabau"},"content":"            LocalDate.parse(toTestSplit[0]);","lastModifiedDate":"2021-10-12"},{"lineNumber":201,"author":{"gitId":"Gabau"},"content":"            LocalDate.parse(toTestSplit[1]);","lastModifiedDate":"2021-10-12"},{"lineNumber":202,"author":{"gitId":"Gabau"},"content":"        } catch (DateTimeParseException dtpe) {","lastModifiedDate":"2021-10-12"},{"lineNumber":203,"author":{"gitId":"Gabau"},"content":"            return false;","lastModifiedDate":"2021-10-12"},{"lineNumber":204,"author":{"gitId":"Gabau"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":205,"author":{"gitId":"Gabau"},"content":"        return true;","lastModifiedDate":"2021-10-12"},{"lineNumber":206,"author":{"gitId":"Gabau"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":207,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":208,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":209,"author":{"gitId":"Gabau"},"content":"    @Override","lastModifiedDate":"2021-10-12"},{"lineNumber":210,"author":{"gitId":"Gabau"},"content":"    public String toString() {","lastModifiedDate":"2021-10-12"},{"lineNumber":211,"author":{"gitId":"Gabau"},"content":"        return this.startDate + DELIMITER + this.endDate;","lastModifiedDate":"2021-10-13"},{"lineNumber":212,"author":{"gitId":"Gabau"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":213,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":214,"author":{"gitId":"Gabau"},"content":"    @Override","lastModifiedDate":"2021-10-13"},{"lineNumber":215,"author":{"gitId":"Gabau"},"content":"    public boolean equals(Object o) {","lastModifiedDate":"2021-10-13"},{"lineNumber":216,"author":{"gitId":"Gabau"},"content":"        return (o !\u003d null)","lastModifiedDate":"2021-10-13"},{"lineNumber":217,"author":{"gitId":"Gabau"},"content":"                \u0026\u0026 (o instanceof Period)","lastModifiedDate":"2021-10-13"},{"lineNumber":218,"author":{"gitId":"Gabau"},"content":"                \u0026\u0026 ((Period) o).startDate.equals(startDate)","lastModifiedDate":"2021-10-14"},{"lineNumber":219,"author":{"gitId":"Gabau"},"content":"                \u0026\u0026 ((Period) o).endDate.equals(endDate);","lastModifiedDate":"2021-10-14"},{"lineNumber":220,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":221,"author":{"gitId":"Gabau"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":222,"author":{"gitId":"Gabau"},"content":"}","lastModifiedDate":"2021-10-12"}],"authorContributionMap":{"Gabau":222}},{"path":"src/main/java/seedu/address/model/person/Person.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2016-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"Gabau"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2017-05-19"},{"lineNumber":5,"author":{"gitId":"Gabau"},"content":"import static seedu.address.model.person.Field.addToFieldSet;","lastModifiedDate":"2021-10-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":7,"author":{"gitId":"IrvingHe000"},"content":"import java.time.DayOfWeek;","lastModifiedDate":"2021-10-10"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-03-07"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-03-26"},{"lineNumber":10,"author":{"gitId":"Gabau"},"content":"import java.util.List;","lastModifiedDate":"2021-10-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2017-01-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":13,"author":{"gitId":"Gabau"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2021-10-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":15,"author":{"gitId":"IrvingHe000"},"content":"import seedu.address.model.person.exceptions.DuplicateShiftException;","lastModifiedDate":"2021-10-10"},{"lineNumber":16,"author":{"gitId":"Tetrerox"},"content":"import seedu.address.model.person.exceptions.NoShiftException;","lastModifiedDate":"2021-10-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-07"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":" * Represents a Person in the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * Guarantees: details are present and not null, field values are validated, immutable.","lastModifiedDate":"2017-12-20"},{"lineNumber":22,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"public class Person {","lastModifiedDate":"2018-01-10"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    // Identity fields","lastModifiedDate":"2018-04-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private final Name name;","lastModifiedDate":"2017-12-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final Phone phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final Email email;","lastModifiedDate":"2017-12-20"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    // Data fields","lastModifiedDate":"2018-04-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private final Address address;","lastModifiedDate":"2018-04-19"},{"lineNumber":32,"author":{"gitId":"fullfatwasabi"},"content":"    private final Set\u003cRole\u003e roles \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2021-10-13"},{"lineNumber":33,"author":{"gitId":"fullfatwasabi"},"content":"    private final Salary salary;","lastModifiedDate":"2021-10-09"},{"lineNumber":34,"author":{"gitId":"fullfatwasabi"},"content":"    private final Status status;","lastModifiedDate":"2021-10-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private final Set\u003cTag\u003e tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2018-03-26"},{"lineNumber":36,"author":{"gitId":"Gabau"},"content":"    private final Set\u003cField\u003e fields \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2021-10-08"},{"lineNumber":37,"author":{"gitId":"Gabau"},"content":"    private final Set\u003cPeriod\u003e absentDates \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2021-10-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"IrvingHe000"},"content":"    private Schedule schedule;","lastModifiedDate":"2021-10-10"},{"lineNumber":40,"author":{"gitId":"IrvingHe000"},"content":"    private int totalWeeklyWorkingHour;","lastModifiedDate":"2021-10-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"fullfatwasabi"},"content":"    public Person(Name name, Phone phone, Email email, Address address,","lastModifiedDate":"2021-10-09"},{"lineNumber":46,"author":{"gitId":"Gabau"},"content":"                  Set\u003cRole\u003e roles, Salary salary, Status status, Set\u003cTag\u003e tags, Set\u003cPeriod\u003e absentDates) {","lastModifiedDate":"2021-10-15"},{"lineNumber":47,"author":{"gitId":"fullfatwasabi"},"content":"        requireAllNonNull(name, phone, email, address, tags, roles);","lastModifiedDate":"2021-10-13"},{"lineNumber":48,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2017-12-20"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        this.email \u003d email;","lastModifiedDate":"2017-12-20"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        this.address \u003d address;","lastModifiedDate":"2017-12-20"},{"lineNumber":53,"author":{"gitId":"fullfatwasabi"},"content":"        if (roles.isEmpty()) {","lastModifiedDate":"2021-10-13"},{"lineNumber":54,"author":{"gitId":"fullfatwasabi"},"content":"            this.roles.add(Role.NO_ROLE);","lastModifiedDate":"2021-10-13"},{"lineNumber":55,"author":{"gitId":"fullfatwasabi"},"content":"        } else {","lastModifiedDate":"2021-10-13"},{"lineNumber":56,"author":{"gitId":"fullfatwasabi"},"content":"            this.roles.addAll(roles);","lastModifiedDate":"2021-10-13"},{"lineNumber":57,"author":{"gitId":"fullfatwasabi"},"content":"        }","lastModifiedDate":"2021-10-13"},{"lineNumber":58,"author":{"gitId":"fullfatwasabi"},"content":"        this.salary \u003d salary;","lastModifiedDate":"2021-10-09"},{"lineNumber":59,"author":{"gitId":"fullfatwasabi"},"content":"        this.status \u003d status;","lastModifiedDate":"2021-10-09"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        this.tags.addAll(tags);","lastModifiedDate":"2018-03-26"},{"lineNumber":61,"author":{"gitId":"fullfatwasabi"},"content":"        this.schedule \u003d new Schedule();","lastModifiedDate":"2021-10-09"},{"lineNumber":62,"author":{"gitId":"IrvingHe000"},"content":"        this.totalWeeklyWorkingHour \u003d schedule.getTotalWorkingHour();","lastModifiedDate":"2021-10-13"},{"lineNumber":63,"author":{"gitId":"Gabau"},"content":"        this.fields.addAll(tags);","lastModifiedDate":"2021-10-08"},{"lineNumber":64,"author":{"gitId":"Gabau"},"content":"        this.absentDates.addAll(absentDates);","lastModifiedDate":"2021-10-12"},{"lineNumber":65,"author":{"gitId":"fullfatwasabi"},"content":"        this.fields.addAll(roles);","lastModifiedDate":"2021-10-12"},{"lineNumber":66,"author":{"gitId":"fullfatwasabi"},"content":"        addToFieldSet(fields, name, phone, email, address, salary, status);","lastModifiedDate":"2021-10-12"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public Name getName() {","lastModifiedDate":"2017-07-12"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        return name;","lastModifiedDate":"2017-12-20"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public Phone getPhone() {","lastModifiedDate":"2017-07-12"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        return phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public Email getEmail() {","lastModifiedDate":"2017-07-12"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        return email;","lastModifiedDate":"2017-12-20"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":81,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public Address getAddress() {","lastModifiedDate":"2017-07-12"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        return address;","lastModifiedDate":"2017-12-20"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-12"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12"},{"lineNumber":86,"author":{"gitId":"fullfatwasabi"},"content":"    public Set\u003cRole\u003e getRoles() {","lastModifiedDate":"2021-10-12"},{"lineNumber":87,"author":{"gitId":"fullfatwasabi"},"content":"        return Collections.unmodifiableSet(roles);","lastModifiedDate":"2021-10-12"},{"lineNumber":88,"author":{"gitId":"fullfatwasabi"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":89,"author":{"gitId":"fullfatwasabi"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":90,"author":{"gitId":"fullfatwasabi"},"content":"    public Salary getSalary() {","lastModifiedDate":"2021-10-09"},{"lineNumber":91,"author":{"gitId":"fullfatwasabi"},"content":"        return salary;","lastModifiedDate":"2021-10-09"},{"lineNumber":92,"author":{"gitId":"fullfatwasabi"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":93,"author":{"gitId":"fullfatwasabi"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":94,"author":{"gitId":"fullfatwasabi"},"content":"    public Status getStatus() {","lastModifiedDate":"2021-10-09"},{"lineNumber":95,"author":{"gitId":"fullfatwasabi"},"content":"        return status;","lastModifiedDate":"2021-10-09"},{"lineNumber":96,"author":{"gitId":"fullfatwasabi"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":97,"author":{"gitId":"fullfatwasabi"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":98,"author":{"gitId":"fullfatwasabi"},"content":"    public Schedule getSchedule() {","lastModifiedDate":"2021-10-09"},{"lineNumber":99,"author":{"gitId":"fullfatwasabi"},"content":"        return schedule;","lastModifiedDate":"2021-10-09"},{"lineNumber":100,"author":{"gitId":"fullfatwasabi"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":101,"author":{"gitId":"fullfatwasabi"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":102,"author":{"gitId":"Gabau"},"content":"    public boolean containsFields(List\u003cField\u003e fields) {","lastModifiedDate":"2021-10-08"},{"lineNumber":103,"author":{"gitId":"Gabau"},"content":"        return this.fields.containsAll(fields);","lastModifiedDate":"2021-10-08"},{"lineNumber":104,"author":{"gitId":"Gabau"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":105,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":106,"author":{"gitId":"Gabau"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":107,"author":{"gitId":"Gabau"},"content":"     * Marks this {@code period} when the {@code Person} was not working.","lastModifiedDate":"2021-10-12"},{"lineNumber":108,"author":{"gitId":"Gabau"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":109,"author":{"gitId":"Gabau"},"content":"    public Person mark(Period period) {","lastModifiedDate":"2021-10-12"},{"lineNumber":110,"author":{"gitId":"Gabau"},"content":"        Set\u003cPeriod\u003e periods \u003d period.union(this.getAbsentDates())","lastModifiedDate":"2021-10-14"},{"lineNumber":111,"author":{"gitId":"Gabau"},"content":"                .stream()","lastModifiedDate":"2021-10-14"},{"lineNumber":112,"author":{"gitId":"Gabau"},"content":"                .collect(Collectors.toUnmodifiableSet());","lastModifiedDate":"2021-10-14"},{"lineNumber":113,"author":{"gitId":"Gabau"},"content":"        return new Person(name, phone, email, address,","lastModifiedDate":"2021-10-13"},{"lineNumber":114,"author":{"gitId":"Gabau"},"content":"                roles, salary, status, tags, periods);","lastModifiedDate":"2021-10-15"},{"lineNumber":115,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":116,"author":{"gitId":"Gabau"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":117,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":118,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":119,"author":{"gitId":"Gabau"},"content":"    /**","lastModifiedDate":"2021-10-13"},{"lineNumber":120,"author":{"gitId":"Gabau"},"content":"     * Removes the marking of {@code period} to mark that the person was working in","lastModifiedDate":"2021-10-13"},{"lineNumber":121,"author":{"gitId":"Gabau"},"content":"     * this period. The input period must contain the period to remove.","lastModifiedDate":"2021-10-13"},{"lineNumber":122,"author":{"gitId":"Gabau"},"content":"     *","lastModifiedDate":"2021-10-13"},{"lineNumber":123,"author":{"gitId":"Gabau"},"content":"     * @return The resulting person from marking that the person was working.","lastModifiedDate":"2021-10-13"},{"lineNumber":124,"author":{"gitId":"Gabau"},"content":"     */","lastModifiedDate":"2021-10-13"},{"lineNumber":125,"author":{"gitId":"Gabau"},"content":"    public Person unMark(Period period) {","lastModifiedDate":"2021-10-13"},{"lineNumber":126,"author":{"gitId":"Gabau"},"content":"        requireNonNull(period);","lastModifiedDate":"2021-10-13"},{"lineNumber":127,"author":{"gitId":"Gabau"},"content":"        Set\u003cPeriod\u003e result \u003d getAbsentDates().stream()","lastModifiedDate":"2021-10-14"},{"lineNumber":128,"author":{"gitId":"Gabau"},"content":"                .flatMap(p -\u003e p.complement(period).stream())","lastModifiedDate":"2021-10-14"},{"lineNumber":129,"author":{"gitId":"Gabau"},"content":"                .collect(Collectors.toSet());","lastModifiedDate":"2021-10-14"},{"lineNumber":130,"author":{"gitId":"Gabau"},"content":"        return new Person(name, phone, email, address,","lastModifiedDate":"2021-10-13"},{"lineNumber":131,"author":{"gitId":"Gabau"},"content":"                roles, salary, status, tags, result);","lastModifiedDate":"2021-10-15"},{"lineNumber":132,"author":{"gitId":"Gabau"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":133,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-07"},{"lineNumber":135,"author":{"gitId":"-"},"content":"     * Returns an immutable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2017-03-07"},{"lineNumber":136,"author":{"gitId":"-"},"content":"     * if modification is attempted.","lastModifiedDate":"2017-03-07"},{"lineNumber":137,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-07"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    public Set\u003cTag\u003e getTags() {","lastModifiedDate":"2017-03-07"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        return Collections.unmodifiableSet(tags);","lastModifiedDate":"2018-03-26"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":142,"author":{"gitId":"Gabau"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":143,"author":{"gitId":"Gabau"},"content":"     * Returns an immutable period set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2021-10-12"},{"lineNumber":144,"author":{"gitId":"Gabau"},"content":"     * if modification is attempted.","lastModifiedDate":"2021-10-12"},{"lineNumber":145,"author":{"gitId":"Gabau"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":146,"author":{"gitId":"Gabau"},"content":"    public Set\u003cPeriod\u003e getAbsentDates() {","lastModifiedDate":"2021-10-12"},{"lineNumber":147,"author":{"gitId":"Gabau"},"content":"        return Collections.unmodifiableSet(this.absentDates);","lastModifiedDate":"2021-10-12"},{"lineNumber":148,"author":{"gitId":"Gabau"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":149,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":150,"author":{"gitId":"IrvingHe000"},"content":"    /**","lastModifiedDate":"2021-10-10"},{"lineNumber":151,"author":{"gitId":"IrvingHe000"},"content":"     * Add a shift to the staff\u0027s schedule.","lastModifiedDate":"2021-10-10"},{"lineNumber":152,"author":{"gitId":"IrvingHe000"},"content":"     *","lastModifiedDate":"2021-10-10"},{"lineNumber":153,"author":{"gitId":"IrvingHe000"},"content":"     * @param dayOfWeek The day of the shift.","lastModifiedDate":"2021-10-10"},{"lineNumber":154,"author":{"gitId":"IrvingHe000"},"content":"     * @param slot The time slot of the shift.","lastModifiedDate":"2021-10-10"},{"lineNumber":155,"author":{"gitId":"IrvingHe000"},"content":"     * @throws DuplicateShiftException throws when there is already a shift in the target slot.","lastModifiedDate":"2021-10-10"},{"lineNumber":156,"author":{"gitId":"IrvingHe000"},"content":"     */","lastModifiedDate":"2021-10-10"},{"lineNumber":157,"author":{"gitId":"Tetrerox"},"content":"    public void addShift(DayOfWeek dayOfWeek, Slot slot) throws DuplicateShiftException {","lastModifiedDate":"2021-10-13"},{"lineNumber":158,"author":{"gitId":"IrvingHe000"},"content":"        schedule.addShift(dayOfWeek, slot);","lastModifiedDate":"2021-10-10"},{"lineNumber":159,"author":{"gitId":"IrvingHe000"},"content":"        totalWeeklyWorkingHour \u003d schedule.getTotalWorkingHour();","lastModifiedDate":"2021-10-13"},{"lineNumber":160,"author":{"gitId":"IrvingHe000"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":161,"author":{"gitId":"IrvingHe000"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":162,"author":{"gitId":"Tetrerox"},"content":"    /**","lastModifiedDate":"2021-10-13"},{"lineNumber":163,"author":{"gitId":"Tetrerox"},"content":"     * Removes a shift from the staff\u0027s schedule.","lastModifiedDate":"2021-10-13"},{"lineNumber":164,"author":{"gitId":"Tetrerox"},"content":"     *","lastModifiedDate":"2021-10-13"},{"lineNumber":165,"author":{"gitId":"Tetrerox"},"content":"     * @param dayOfWeek The day of the shift.","lastModifiedDate":"2021-10-13"},{"lineNumber":166,"author":{"gitId":"Tetrerox"},"content":"     * @param slot The time slot of the shift.","lastModifiedDate":"2021-10-13"},{"lineNumber":167,"author":{"gitId":"Tetrerox"},"content":"     * @throws NoShiftException throws when a user tries to delete a shift that does not exist.","lastModifiedDate":"2021-10-13"},{"lineNumber":168,"author":{"gitId":"Tetrerox"},"content":"     */","lastModifiedDate":"2021-10-13"},{"lineNumber":169,"author":{"gitId":"Tetrerox"},"content":"    public void removeShift(DayOfWeek dayOfWeek, Slot slot) throws NoShiftException {","lastModifiedDate":"2021-10-13"},{"lineNumber":170,"author":{"gitId":"Tetrerox"},"content":"        schedule.removeShift(dayOfWeek, slot);","lastModifiedDate":"2021-10-13"},{"lineNumber":171,"author":{"gitId":"IrvingHe000"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":172,"author":{"gitId":"IrvingHe000"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":173,"author":{"gitId":"IrvingHe000"},"content":"    public void setSchedule(Schedule schedule) {","lastModifiedDate":"2021-10-10"},{"lineNumber":174,"author":{"gitId":"IrvingHe000"},"content":"        this.schedule \u003d schedule;","lastModifiedDate":"2021-10-10"},{"lineNumber":175,"author":{"gitId":"IrvingHe000"},"content":"        totalWeeklyWorkingHour \u003d schedule.getTotalWorkingHour();","lastModifiedDate":"2021-10-13"},{"lineNumber":176,"author":{"gitId":"IrvingHe000"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":177,"author":{"gitId":"IrvingHe000"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":178,"author":{"gitId":"IrvingHe000"},"content":"    public int getTotalWeeklyWorkingHour() {","lastModifiedDate":"2021-10-13"},{"lineNumber":179,"author":{"gitId":"IrvingHe000"},"content":"        return totalWeeklyWorkingHour;","lastModifiedDate":"2021-10-13"},{"lineNumber":180,"author":{"gitId":"IrvingHe000"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":181,"author":{"gitId":"IrvingHe000"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":182,"author":{"gitId":"IrvingHe000"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":184,"author":{"gitId":"-"},"content":"     * Returns true if both persons have the same name.","lastModifiedDate":"2020-12-18"},{"lineNumber":185,"author":{"gitId":"-"},"content":"     * This defines a weaker notion of equality between two persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":186,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":187,"author":{"gitId":"IrvingHe000"},"content":"    public boolean isSamePerson(Person otherStaff) {","lastModifiedDate":"2021-09-23"},{"lineNumber":188,"author":{"gitId":"IrvingHe000"},"content":"        if (otherStaff \u003d\u003d this) {","lastModifiedDate":"2021-09-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-04-19"},{"lineNumber":190,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":192,"author":{"gitId":"IrvingHe000"},"content":"        return otherStaff !\u003d null","lastModifiedDate":"2021-09-23"},{"lineNumber":193,"author":{"gitId":"IrvingHe000"},"content":"                \u0026\u0026 otherStaff.getName().equals(getName());","lastModifiedDate":"2021-09-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":196,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":197,"author":{"gitId":"-"},"content":"     * Returns true if both persons have the same identity and data fields.","lastModifiedDate":"2018-04-19"},{"lineNumber":198,"author":{"gitId":"-"},"content":"     * This defines a stronger notion of equality between two persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":199,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":200,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":201,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":202,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-01-10"},{"lineNumber":203,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-01-10"},{"lineNumber":204,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":206,"author":{"gitId":"-"},"content":"        if (!(other instanceof Person)) {","lastModifiedDate":"2018-01-10"},{"lineNumber":207,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-01-10"},{"lineNumber":208,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":210,"author":{"gitId":"IrvingHe000"},"content":"        Person otherStaff \u003d (Person) other;","lastModifiedDate":"2021-09-23"},{"lineNumber":211,"author":{"gitId":"Gabau"},"content":"        //for some odd reason, the set equals method does not work, neither does the contains all","lastModifiedDate":"2021-10-13"},{"lineNumber":212,"author":{"gitId":"Gabau"},"content":"        List\u003cPeriod\u003e periods \u003d getAbsentDates().stream().collect(Collectors.toList());","lastModifiedDate":"2021-10-13"},{"lineNumber":213,"author":{"gitId":"Gabau"},"content":"        List\u003cPeriod\u003e otherPeriods \u003d otherStaff.getAbsentDates().stream().collect(Collectors.toList());","lastModifiedDate":"2021-10-13"},{"lineNumber":214,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":215,"author":{"gitId":"IrvingHe000"},"content":"        return otherStaff.getName().equals(getName())","lastModifiedDate":"2021-09-23"},{"lineNumber":216,"author":{"gitId":"IrvingHe000"},"content":"                \u0026\u0026 otherStaff.getPhone().equals(getPhone())","lastModifiedDate":"2021-09-23"},{"lineNumber":217,"author":{"gitId":"IrvingHe000"},"content":"                \u0026\u0026 otherStaff.getEmail().equals(getEmail())","lastModifiedDate":"2021-09-23"},{"lineNumber":218,"author":{"gitId":"IrvingHe000"},"content":"                \u0026\u0026 otherStaff.getAddress().equals(getAddress())","lastModifiedDate":"2021-09-23"},{"lineNumber":219,"author":{"gitId":"fullfatwasabi"},"content":"                \u0026\u0026 otherStaff.getRoles().equals(getRoles())","lastModifiedDate":"2021-10-12"},{"lineNumber":220,"author":{"gitId":"fullfatwasabi"},"content":"                \u0026\u0026 otherStaff.getSalary().equals(getSalary())","lastModifiedDate":"2021-10-09"},{"lineNumber":221,"author":{"gitId":"fullfatwasabi"},"content":"                \u0026\u0026 otherStaff.getStatus().equals(getStatus())","lastModifiedDate":"2021-10-09"},{"lineNumber":222,"author":{"gitId":"Gabau"},"content":"                \u0026\u0026 otherStaff.getTags().equals(getTags())","lastModifiedDate":"2021-10-13"},{"lineNumber":223,"author":{"gitId":"Gabau"},"content":"                \u0026\u0026 periods.containsAll(otherPeriods)","lastModifiedDate":"2021-10-13"},{"lineNumber":224,"author":{"gitId":"Gabau"},"content":"                \u0026\u0026 otherPeriods.containsAll(periods)","lastModifiedDate":"2021-10-15"},{"lineNumber":225,"author":{"gitId":"IrvingHe000"},"content":"                \u0026\u0026 otherStaff.totalWeeklyWorkingHour \u003d\u003d totalWeeklyWorkingHour;","lastModifiedDate":"2021-10-13"},{"lineNumber":226,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":227,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":228,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":229,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":230,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":231,"author":{"gitId":"-"},"content":"        // use this method for custom fields hashing instead of implementing your own","lastModifiedDate":"2016-08-24"},{"lineNumber":232,"author":{"gitId":"-"},"content":"        return Objects.hash(name, phone, email, address, tags);","lastModifiedDate":"2016-08-24"},{"lineNumber":233,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":234,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":235,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":236,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":237,"author":{"gitId":"-"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2018-01-10"},{"lineNumber":238,"author":{"gitId":"-"},"content":"        builder.append(getName())","lastModifiedDate":"2018-01-10"},{"lineNumber":239,"author":{"gitId":"-"},"content":"                .append(\"; Phone: \")","lastModifiedDate":"2020-12-11"},{"lineNumber":240,"author":{"gitId":"-"},"content":"                .append(getPhone())","lastModifiedDate":"2018-01-10"},{"lineNumber":241,"author":{"gitId":"-"},"content":"                .append(\"; Email: \")","lastModifiedDate":"2020-12-11"},{"lineNumber":242,"author":{"gitId":"-"},"content":"                .append(getEmail())","lastModifiedDate":"2018-01-10"},{"lineNumber":243,"author":{"gitId":"-"},"content":"                .append(\"; Address: \")","lastModifiedDate":"2020-12-11"},{"lineNumber":244,"author":{"gitId":"fullfatwasabi"},"content":"                .append(getAddress())","lastModifiedDate":"2021-10-09"},{"lineNumber":245,"author":{"gitId":"fullfatwasabi"},"content":"                .append(\"; Salary: \")","lastModifiedDate":"2021-10-09"},{"lineNumber":246,"author":{"gitId":"fullfatwasabi"},"content":"                .append(getSalary())","lastModifiedDate":"2021-10-09"},{"lineNumber":247,"author":{"gitId":"fullfatwasabi"},"content":"                .append(\"; Status: \")","lastModifiedDate":"2021-10-09"},{"lineNumber":248,"author":{"gitId":"fullfatwasabi"},"content":"                .append(getStatus());","lastModifiedDate":"2021-10-09"},{"lineNumber":249,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-12-11"},{"lineNumber":250,"author":{"gitId":"fullfatwasabi"},"content":"        Set\u003cRole\u003e roles \u003d getRoles();","lastModifiedDate":"2021-10-12"},{"lineNumber":251,"author":{"gitId":"fullfatwasabi"},"content":"        if (!roles.isEmpty()) {","lastModifiedDate":"2021-10-12"},{"lineNumber":252,"author":{"gitId":"fullfatwasabi"},"content":"            builder.append(\"; Roles: \");","lastModifiedDate":"2021-10-12"},{"lineNumber":253,"author":{"gitId":"fullfatwasabi"},"content":"            roles.forEach(builder::append);","lastModifiedDate":"2021-10-12"},{"lineNumber":254,"author":{"gitId":"fullfatwasabi"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":255,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e tags \u003d getTags();","lastModifiedDate":"2020-12-11"},{"lineNumber":256,"author":{"gitId":"-"},"content":"        if (!tags.isEmpty()) {","lastModifiedDate":"2020-12-11"},{"lineNumber":257,"author":{"gitId":"-"},"content":"            builder.append(\"; Tags: \");","lastModifiedDate":"2020-12-11"},{"lineNumber":258,"author":{"gitId":"-"},"content":"            tags.forEach(builder::append);","lastModifiedDate":"2020-12-11"},{"lineNumber":259,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-12-11"},{"lineNumber":260,"author":{"gitId":"-"},"content":"        return builder.toString();","lastModifiedDate":"2018-01-10"},{"lineNumber":261,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":262,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":263,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":264,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":265,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"Tetrerox":11,"Gabau":61,"fullfatwasabi":44,"-":111,"IrvingHe000":38}},{"path":"src/main/java/seedu/address/model/person/PersonContainsFieldsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Gabau"},"content":"package seedu.address.model.person;","lastModifiedDate":"2021-10-08"},{"lineNumber":2,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":3,"author":{"gitId":"Gabau"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-09"},{"lineNumber":4,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":5,"author":{"gitId":"Gabau"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-08"},{"lineNumber":6,"author":{"gitId":"Gabau"},"content":"import java.util.Optional;","lastModifiedDate":"2021-10-08"},{"lineNumber":7,"author":{"gitId":"Gabau"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2021-10-08"},{"lineNumber":8,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":9,"author":{"gitId":"Gabau"},"content":"import seedu.address.logic.parser.ParserCheckedFunction;","lastModifiedDate":"2021-10-09"},{"lineNumber":10,"author":{"gitId":"Gabau"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-09"},{"lineNumber":11,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":12,"author":{"gitId":"Gabau"},"content":"/**","lastModifiedDate":"2021-10-08"},{"lineNumber":13,"author":{"gitId":"Gabau"},"content":" * Predicate to check if the person contains the input fields.","lastModifiedDate":"2021-10-08"},{"lineNumber":14,"author":{"gitId":"Gabau"},"content":" */","lastModifiedDate":"2021-10-08"},{"lineNumber":15,"author":{"gitId":"Gabau"},"content":"public class PersonContainsFieldsPredicate implements Predicate\u003cPerson\u003e {","lastModifiedDate":"2021-10-08"},{"lineNumber":16,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":17,"author":{"gitId":"Gabau"},"content":"    private ArrayList\u003cField\u003e fields \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-08"},{"lineNumber":18,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":19,"author":{"gitId":"Gabau"},"content":"    /**","lastModifiedDate":"2021-10-08"},{"lineNumber":20,"author":{"gitId":"Gabau"},"content":"     * Constructor for a predicate to check if a person has a","lastModifiedDate":"2021-10-08"},{"lineNumber":21,"author":{"gitId":"Gabau"},"content":"     * group of fields.","lastModifiedDate":"2021-10-08"},{"lineNumber":22,"author":{"gitId":"Gabau"},"content":"     * @param fields The fields to check.","lastModifiedDate":"2021-10-08"},{"lineNumber":23,"author":{"gitId":"Gabau"},"content":"     */","lastModifiedDate":"2021-10-08"},{"lineNumber":24,"author":{"gitId":"Gabau"},"content":"    public PersonContainsFieldsPredicate(Field... fields) {","lastModifiedDate":"2021-10-08"},{"lineNumber":25,"author":{"gitId":"Gabau"},"content":"        for (Field field : fields) {","lastModifiedDate":"2021-10-08"},{"lineNumber":26,"author":{"gitId":"Gabau"},"content":"            this.fields.add(field);","lastModifiedDate":"2021-10-08"},{"lineNumber":27,"author":{"gitId":"Gabau"},"content":"        }","lastModifiedDate":"2021-10-08"},{"lineNumber":28,"author":{"gitId":"Gabau"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":29,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":30,"author":{"gitId":"Gabau"},"content":"    /**","lastModifiedDate":"2021-10-08"},{"lineNumber":31,"author":{"gitId":"Gabau"},"content":"     * Add a field to the predicate to test from a string.","lastModifiedDate":"2021-10-09"},{"lineNumber":32,"author":{"gitId":"Gabau"},"content":"     * @param fieldString The field to test.","lastModifiedDate":"2021-10-09"},{"lineNumber":33,"author":{"gitId":"Gabau"},"content":"     * @param func The function to create the field.","lastModifiedDate":"2021-10-09"},{"lineNumber":34,"author":{"gitId":"Gabau"},"content":"     */","lastModifiedDate":"2021-10-08"},{"lineNumber":35,"author":{"gitId":"Gabau"},"content":"    public void addFieldToTest(Optional\u003c? extends String\u003e fieldString,","lastModifiedDate":"2021-10-09"},{"lineNumber":36,"author":{"gitId":"Gabau"},"content":"                               ParserCheckedFunction\u003cString, Field\u003e func) throws ParseException {","lastModifiedDate":"2021-10-09"},{"lineNumber":37,"author":{"gitId":"Gabau"},"content":"        if (!fieldString.isPresent()) {","lastModifiedDate":"2021-10-09"},{"lineNumber":38,"author":{"gitId":"Gabau"},"content":"            return;","lastModifiedDate":"2021-10-08"},{"lineNumber":39,"author":{"gitId":"Gabau"},"content":"        }","lastModifiedDate":"2021-10-08"},{"lineNumber":40,"author":{"gitId":"Gabau"},"content":"        this.fields.add(func.apply(fieldString.get()));","lastModifiedDate":"2021-10-09"},{"lineNumber":41,"author":{"gitId":"Gabau"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":42,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":43,"author":{"gitId":"Gabau"},"content":"    /**","lastModifiedDate":"2021-10-09"},{"lineNumber":44,"author":{"gitId":"Gabau"},"content":"     * Adds the {@code field} to the predicate test conditions.","lastModifiedDate":"2021-10-09"},{"lineNumber":45,"author":{"gitId":"Gabau"},"content":"     */","lastModifiedDate":"2021-10-09"},{"lineNumber":46,"author":{"gitId":"Gabau"},"content":"    public void addFieldToTest(Field field) {","lastModifiedDate":"2021-10-09"},{"lineNumber":47,"author":{"gitId":"Gabau"},"content":"        requireNonNull(field);","lastModifiedDate":"2021-10-09"},{"lineNumber":48,"author":{"gitId":"Gabau"},"content":"        this.fields.add(field);","lastModifiedDate":"2021-10-09"},{"lineNumber":49,"author":{"gitId":"Gabau"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":50,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":51,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":52,"author":{"gitId":"Gabau"},"content":"    /**","lastModifiedDate":"2021-10-13"},{"lineNumber":53,"author":{"gitId":"Gabau"},"content":"     * Checks if the predicate tests for anything.","lastModifiedDate":"2021-10-13"},{"lineNumber":54,"author":{"gitId":"Gabau"},"content":"     * @return True if the predicate tests no fields.","lastModifiedDate":"2021-10-13"},{"lineNumber":55,"author":{"gitId":"Gabau"},"content":"     */","lastModifiedDate":"2021-10-13"},{"lineNumber":56,"author":{"gitId":"Gabau"},"content":"    public boolean isEmpty() {","lastModifiedDate":"2021-10-13"},{"lineNumber":57,"author":{"gitId":"Gabau"},"content":"        return this.fields.isEmpty();","lastModifiedDate":"2021-10-13"},{"lineNumber":58,"author":{"gitId":"Gabau"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":59,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":60,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":61,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":62,"author":{"gitId":"Gabau"},"content":"    @Override","lastModifiedDate":"2021-10-08"},{"lineNumber":63,"author":{"gitId":"Gabau"},"content":"    public boolean test(Person person) {","lastModifiedDate":"2021-10-08"},{"lineNumber":64,"author":{"gitId":"Gabau"},"content":"        if (isEmpty()) {","lastModifiedDate":"2021-10-13"},{"lineNumber":65,"author":{"gitId":"Gabau"},"content":"            return true;","lastModifiedDate":"2021-10-13"},{"lineNumber":66,"author":{"gitId":"Gabau"},"content":"        }","lastModifiedDate":"2021-10-13"},{"lineNumber":67,"author":{"gitId":"Gabau"},"content":"        return person.containsFields(this.fields);","lastModifiedDate":"2021-10-08"},{"lineNumber":68,"author":{"gitId":"Gabau"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":69,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":70,"author":{"gitId":"Gabau"},"content":"    @Override","lastModifiedDate":"2021-10-08"},{"lineNumber":71,"author":{"gitId":"Gabau"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2021-10-08"},{"lineNumber":72,"author":{"gitId":"Gabau"},"content":"        return obj !\u003d null","lastModifiedDate":"2021-10-08"},{"lineNumber":73,"author":{"gitId":"Gabau"},"content":"                \u0026\u0026 obj instanceof PersonContainsFieldsPredicate","lastModifiedDate":"2021-10-08"},{"lineNumber":74,"author":{"gitId":"Gabau"},"content":"                \u0026\u0026 this.fields.containsAll(((PersonContainsFieldsPredicate) obj).fields)","lastModifiedDate":"2021-10-08"},{"lineNumber":75,"author":{"gitId":"Gabau"},"content":"                \u0026\u0026 ((PersonContainsFieldsPredicate) obj).fields.containsAll(this.fields); //check equality","lastModifiedDate":"2021-10-08"},{"lineNumber":76,"author":{"gitId":"Gabau"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":77,"author":{"gitId":"Gabau"},"content":"}","lastModifiedDate":"2021-10-08"}],"authorContributionMap":{"Gabau":77}},{"path":"src/main/java/seedu/address/model/person/Phone.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2021-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a Person\u0027s phone number in the address book.","lastModifiedDate":"2021-09-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidPhone(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"Gabau"},"content":"public class Phone implements Field {","lastModifiedDate":"2021-10-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2018-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"            \"Phone numbers should only contain numbers, and it should be at least 3 digits long\";","lastModifiedDate":"2018-04-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"\\\\d{3,}\";","lastModifiedDate":"2018-09-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public final String value;","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * Constructs a {@code Phone}.","lastModifiedDate":"2017-05-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * @param phone A valid phone number.","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public Phone(String phone) {","lastModifiedDate":"2017-05-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        requireNonNull(phone);","lastModifiedDate":"2017-05-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        checkArgument(isValidPhone(phone), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        value \u003d phone;","lastModifiedDate":"2018-08-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid phone number.","lastModifiedDate":"2018-04-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static boolean isValidPhone(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return value;","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"                || (other instanceof Phone // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"                \u0026\u0026 value.equals(((Phone) other).value)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        return value.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"Gabau":1,"-":52}},{"path":"src/main/java/seedu/address/model/person/Role.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"IrvingHe000"},"content":"package seedu.address.model.person;","lastModifiedDate":"2021-09-26"},{"lineNumber":2,"author":{"gitId":"IrvingHe000"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":3,"author":{"gitId":"IrvingHe000"},"content":"/**","lastModifiedDate":"2021-09-26"},{"lineNumber":4,"author":{"gitId":"IrvingHe000"},"content":" * This class stands for every possible role for a staff","lastModifiedDate":"2021-09-26"},{"lineNumber":5,"author":{"gitId":"IrvingHe000"},"content":" */","lastModifiedDate":"2021-09-26"},{"lineNumber":6,"author":{"gitId":"Gabau"},"content":"public enum Role implements Field {","lastModifiedDate":"2021-10-08"},{"lineNumber":7,"author":{"gitId":"IrvingHe000"},"content":"    //Can add more later","lastModifiedDate":"2021-09-26"},{"lineNumber":8,"author":{"gitId":"fullfatwasabi"},"content":"    KITCHEN(\"kitchen\"), BARTENDER(\"bartender\"), FLOOR(\"floor\"), NO_ROLE(\"norole\");","lastModifiedDate":"2021-10-09"},{"lineNumber":9,"author":{"gitId":"IrvingHe000"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":10,"author":{"gitId":"fullfatwasabi"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2021-10-09"},{"lineNumber":11,"author":{"gitId":"fullfatwasabi"},"content":"            \"List of valid Roles: kitchen, bartender, floor, (norole if no role is assigned).\";","lastModifiedDate":"2021-10-13"},{"lineNumber":12,"author":{"gitId":"IrvingHe000"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":13,"author":{"gitId":"fullfatwasabi"},"content":"    private final String role;","lastModifiedDate":"2021-10-09"},{"lineNumber":14,"author":{"gitId":"fullfatwasabi"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":15,"author":{"gitId":"fullfatwasabi"},"content":"    Role(String role) {","lastModifiedDate":"2021-10-09"},{"lineNumber":16,"author":{"gitId":"IrvingHe000"},"content":"        this.role \u003d role;","lastModifiedDate":"2021-09-26"},{"lineNumber":17,"author":{"gitId":"IrvingHe000"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":18,"author":{"gitId":"IrvingHe000"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":19,"author":{"gitId":"IrvingHe000"},"content":"    /**","lastModifiedDate":"2021-09-26"},{"lineNumber":20,"author":{"gitId":"IrvingHe000"},"content":"     * Gets the value of a role.","lastModifiedDate":"2021-09-26"},{"lineNumber":21,"author":{"gitId":"IrvingHe000"},"content":"     *","lastModifiedDate":"2021-09-26"},{"lineNumber":22,"author":{"gitId":"IrvingHe000"},"content":"     * @return The value of a role.","lastModifiedDate":"2021-09-26"},{"lineNumber":23,"author":{"gitId":"IrvingHe000"},"content":"     */","lastModifiedDate":"2021-09-26"},{"lineNumber":24,"author":{"gitId":"IrvingHe000"},"content":"    public String getValue() {","lastModifiedDate":"2021-09-26"},{"lineNumber":25,"author":{"gitId":"IrvingHe000"},"content":"        return role;","lastModifiedDate":"2021-09-26"},{"lineNumber":26,"author":{"gitId":"IrvingHe000"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":27,"author":{"gitId":"fullfatwasabi"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":28,"author":{"gitId":"fullfatwasabi"},"content":"    /**","lastModifiedDate":"2021-10-09"},{"lineNumber":29,"author":{"gitId":"fullfatwasabi"},"content":"     * Translate a string into a Role enum if the string matches any Role values. Trims string.","lastModifiedDate":"2021-10-09"},{"lineNumber":30,"author":{"gitId":"fullfatwasabi"},"content":"     *","lastModifiedDate":"2021-10-09"},{"lineNumber":31,"author":{"gitId":"fullfatwasabi"},"content":"     * @param string String to be translated.","lastModifiedDate":"2021-10-09"},{"lineNumber":32,"author":{"gitId":"fullfatwasabi"},"content":"     * @return The translated Role if the string is valid.","lastModifiedDate":"2021-10-09"},{"lineNumber":33,"author":{"gitId":"fullfatwasabi"},"content":"     * @throws IllegalArgumentException if the string is invalid.","lastModifiedDate":"2021-10-09"},{"lineNumber":34,"author":{"gitId":"fullfatwasabi"},"content":"     */","lastModifiedDate":"2021-10-09"},{"lineNumber":35,"author":{"gitId":"fullfatwasabi"},"content":"    public static Role translateStringToRole(String string) throws IllegalArgumentException {","lastModifiedDate":"2021-10-09"},{"lineNumber":36,"author":{"gitId":"fullfatwasabi"},"content":"        String trimmedString \u003d string.trim();","lastModifiedDate":"2021-10-09"},{"lineNumber":37,"author":{"gitId":"fullfatwasabi"},"content":"        Role resultRole \u003d null;","lastModifiedDate":"2021-10-09"},{"lineNumber":38,"author":{"gitId":"fullfatwasabi"},"content":"        for (Role r : Role.values()) {","lastModifiedDate":"2021-10-09"},{"lineNumber":39,"author":{"gitId":"fullfatwasabi"},"content":"            if (r.getValue().equalsIgnoreCase(trimmedString)) {","lastModifiedDate":"2021-10-09"},{"lineNumber":40,"author":{"gitId":"fullfatwasabi"},"content":"                resultRole \u003d r;","lastModifiedDate":"2021-10-09"},{"lineNumber":41,"author":{"gitId":"fullfatwasabi"},"content":"            }","lastModifiedDate":"2021-10-09"},{"lineNumber":42,"author":{"gitId":"fullfatwasabi"},"content":"        }","lastModifiedDate":"2021-10-09"},{"lineNumber":43,"author":{"gitId":"fullfatwasabi"},"content":"        if (resultRole \u003d\u003d null) {","lastModifiedDate":"2021-10-09"},{"lineNumber":44,"author":{"gitId":"fullfatwasabi"},"content":"            throw new IllegalArgumentException(\"String provided does not match any roles.\");","lastModifiedDate":"2021-10-09"},{"lineNumber":45,"author":{"gitId":"fullfatwasabi"},"content":"        } else {","lastModifiedDate":"2021-10-09"},{"lineNumber":46,"author":{"gitId":"fullfatwasabi"},"content":"            return resultRole;","lastModifiedDate":"2021-10-09"},{"lineNumber":47,"author":{"gitId":"fullfatwasabi"},"content":"        }","lastModifiedDate":"2021-10-09"},{"lineNumber":48,"author":{"gitId":"fullfatwasabi"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":49,"author":{"gitId":"fullfatwasabi"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":50,"author":{"gitId":"fullfatwasabi"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":51,"author":{"gitId":"fullfatwasabi"},"content":"    /**","lastModifiedDate":"2021-10-09"},{"lineNumber":52,"author":{"gitId":"fullfatwasabi"},"content":"     * Returns if a given string is a valid Role.","lastModifiedDate":"2021-10-09"},{"lineNumber":53,"author":{"gitId":"fullfatwasabi"},"content":"     */","lastModifiedDate":"2021-10-09"},{"lineNumber":54,"author":{"gitId":"fullfatwasabi"},"content":"    public static boolean isValidRole(String test) {","lastModifiedDate":"2021-10-09"},{"lineNumber":55,"author":{"gitId":"fullfatwasabi"},"content":"        String trimmedTest \u003d test.trim();","lastModifiedDate":"2021-10-09"},{"lineNumber":56,"author":{"gitId":"fullfatwasabi"},"content":"        for (Role r : Role.values()) {","lastModifiedDate":"2021-10-09"},{"lineNumber":57,"author":{"gitId":"fullfatwasabi"},"content":"            if (r.getValue().equalsIgnoreCase(trimmedTest)) {","lastModifiedDate":"2021-10-09"},{"lineNumber":58,"author":{"gitId":"fullfatwasabi"},"content":"                return true;","lastModifiedDate":"2021-10-09"},{"lineNumber":59,"author":{"gitId":"fullfatwasabi"},"content":"            }","lastModifiedDate":"2021-10-09"},{"lineNumber":60,"author":{"gitId":"fullfatwasabi"},"content":"        }","lastModifiedDate":"2021-10-09"},{"lineNumber":61,"author":{"gitId":"fullfatwasabi"},"content":"        return false;","lastModifiedDate":"2021-10-09"},{"lineNumber":62,"author":{"gitId":"fullfatwasabi"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":63,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":64,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":65,"author":{"gitId":"Gabau"},"content":"    @Override","lastModifiedDate":"2021-10-10"},{"lineNumber":66,"author":{"gitId":"Gabau"},"content":"    public String toString() {","lastModifiedDate":"2021-10-10"},{"lineNumber":67,"author":{"gitId":"Gabau"},"content":"        return this.role;","lastModifiedDate":"2021-10-10"},{"lineNumber":68,"author":{"gitId":"Gabau"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":69,"author":{"gitId":"IrvingHe000"},"content":"}","lastModifiedDate":"2021-09-26"}],"authorContributionMap":{"Gabau":7,"fullfatwasabi":42,"IrvingHe000":20}},{"path":"src/main/java/seedu/address/model/person/Salary.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"fullfatwasabi"},"content":"package seedu.address.model.person;","lastModifiedDate":"2021-10-09"},{"lineNumber":2,"author":{"gitId":"fullfatwasabi"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":3,"author":{"gitId":"fullfatwasabi"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-09"},{"lineNumber":4,"author":{"gitId":"fullfatwasabi"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2021-10-09"},{"lineNumber":5,"author":{"gitId":"fullfatwasabi"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":6,"author":{"gitId":"fullfatwasabi"},"content":"/**","lastModifiedDate":"2021-10-09"},{"lineNumber":7,"author":{"gitId":"fullfatwasabi"},"content":" * Represents a Person\u0027s email in the address book.","lastModifiedDate":"2021-10-09"},{"lineNumber":8,"author":{"gitId":"fullfatwasabi"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidSalary(String)}","lastModifiedDate":"2021-10-09"},{"lineNumber":9,"author":{"gitId":"fullfatwasabi"},"content":" */","lastModifiedDate":"2021-10-09"},{"lineNumber":10,"author":{"gitId":"fullfatwasabi"},"content":"public class Salary implements Field {","lastModifiedDate":"2021-10-09"},{"lineNumber":11,"author":{"gitId":"fullfatwasabi"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":12,"author":{"gitId":"fullfatwasabi"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2021-10-12"},{"lineNumber":13,"author":{"gitId":"fullfatwasabi"},"content":"            \"Salaries have to be a positive integer representing the pay in cents.\";","lastModifiedDate":"2021-10-12"},{"lineNumber":14,"author":{"gitId":"fullfatwasabi"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":15,"author":{"gitId":"fullfatwasabi"},"content":"    public final Integer value;","lastModifiedDate":"2021-10-09"},{"lineNumber":16,"author":{"gitId":"fullfatwasabi"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":17,"author":{"gitId":"fullfatwasabi"},"content":"    /**","lastModifiedDate":"2021-10-09"},{"lineNumber":18,"author":{"gitId":"fullfatwasabi"},"content":"     * Constructs an {@code Salary}.","lastModifiedDate":"2021-10-09"},{"lineNumber":19,"author":{"gitId":"fullfatwasabi"},"content":"     *","lastModifiedDate":"2021-10-09"},{"lineNumber":20,"author":{"gitId":"fullfatwasabi"},"content":"     * @param salary A valid salary in cents.","lastModifiedDate":"2021-10-09"},{"lineNumber":21,"author":{"gitId":"fullfatwasabi"},"content":"     */","lastModifiedDate":"2021-10-09"},{"lineNumber":22,"author":{"gitId":"fullfatwasabi"},"content":"    public Salary(String salary) {","lastModifiedDate":"2021-10-09"},{"lineNumber":23,"author":{"gitId":"fullfatwasabi"},"content":"        requireNonNull(salary);","lastModifiedDate":"2021-10-09"},{"lineNumber":24,"author":{"gitId":"fullfatwasabi"},"content":"        checkArgument(isValidSalary(salary), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-09"},{"lineNumber":25,"author":{"gitId":"fullfatwasabi"},"content":"        value \u003d Integer.parseInt(salary);","lastModifiedDate":"2021-10-09"},{"lineNumber":26,"author":{"gitId":"fullfatwasabi"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":27,"author":{"gitId":"fullfatwasabi"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":28,"author":{"gitId":"fullfatwasabi"},"content":"    /**","lastModifiedDate":"2021-10-09"},{"lineNumber":29,"author":{"gitId":"fullfatwasabi"},"content":"     * Returns if a given string is a valid salary.","lastModifiedDate":"2021-10-09"},{"lineNumber":30,"author":{"gitId":"fullfatwasabi"},"content":"     */","lastModifiedDate":"2021-10-09"},{"lineNumber":31,"author":{"gitId":"fullfatwasabi"},"content":"    public static boolean isValidSalary(String test) {","lastModifiedDate":"2021-10-09"},{"lineNumber":32,"author":{"gitId":"fullfatwasabi"},"content":"        return test.matches(\"\\\\d+\");","lastModifiedDate":"2021-10-09"},{"lineNumber":33,"author":{"gitId":"fullfatwasabi"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":34,"author":{"gitId":"fullfatwasabi"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":35,"author":{"gitId":"fullfatwasabi"},"content":"    @Override","lastModifiedDate":"2021-10-09"},{"lineNumber":36,"author":{"gitId":"fullfatwasabi"},"content":"    public String toString() {","lastModifiedDate":"2021-10-09"},{"lineNumber":37,"author":{"gitId":"fullfatwasabi"},"content":"        return value.toString();","lastModifiedDate":"2021-10-09"},{"lineNumber":38,"author":{"gitId":"fullfatwasabi"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":39,"author":{"gitId":"fullfatwasabi"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":40,"author":{"gitId":"fullfatwasabi"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":41,"author":{"gitId":"fullfatwasabi"},"content":"     * Returns a String representation of the value of this Salary object in dollars.","lastModifiedDate":"2021-10-12"},{"lineNumber":42,"author":{"gitId":"fullfatwasabi"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":43,"author":{"gitId":"fullfatwasabi"},"content":"    public String convertToDollars() {","lastModifiedDate":"2021-10-12"},{"lineNumber":44,"author":{"gitId":"fullfatwasabi"},"content":"        int dollars \u003d value / 100;","lastModifiedDate":"2021-10-12"},{"lineNumber":45,"author":{"gitId":"fullfatwasabi"},"content":"        int cents \u003d value % 100;","lastModifiedDate":"2021-10-12"},{"lineNumber":46,"author":{"gitId":"fullfatwasabi"},"content":"        String centsString;","lastModifiedDate":"2021-10-12"},{"lineNumber":47,"author":{"gitId":"fullfatwasabi"},"content":"        if (cents \u003d\u003d 0) {","lastModifiedDate":"2021-10-12"},{"lineNumber":48,"author":{"gitId":"fullfatwasabi"},"content":"            centsString \u003d \"00\";","lastModifiedDate":"2021-10-12"},{"lineNumber":49,"author":{"gitId":"fullfatwasabi"},"content":"        } else if (cents \u003c 10) {","lastModifiedDate":"2021-10-12"},{"lineNumber":50,"author":{"gitId":"fullfatwasabi"},"content":"            centsString \u003d \"0\" + cents;","lastModifiedDate":"2021-10-12"},{"lineNumber":51,"author":{"gitId":"fullfatwasabi"},"content":"        } else {","lastModifiedDate":"2021-10-12"},{"lineNumber":52,"author":{"gitId":"fullfatwasabi"},"content":"            centsString \u003d String.valueOf(cents);","lastModifiedDate":"2021-10-12"},{"lineNumber":53,"author":{"gitId":"fullfatwasabi"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":54,"author":{"gitId":"fullfatwasabi"},"content":"        return (\"$\" + dollars + \".\" + centsString);","lastModifiedDate":"2021-10-12"},{"lineNumber":55,"author":{"gitId":"fullfatwasabi"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":56,"author":{"gitId":"fullfatwasabi"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":57,"author":{"gitId":"fullfatwasabi"},"content":"    @Override","lastModifiedDate":"2021-10-09"},{"lineNumber":58,"author":{"gitId":"fullfatwasabi"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-09"},{"lineNumber":59,"author":{"gitId":"fullfatwasabi"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-09"},{"lineNumber":60,"author":{"gitId":"fullfatwasabi"},"content":"                || (other instanceof Salary // instanceof handles nulls","lastModifiedDate":"2021-10-09"},{"lineNumber":61,"author":{"gitId":"fullfatwasabi"},"content":"                \u0026\u0026 value.equals(((Salary) other).value)); // state check","lastModifiedDate":"2021-10-09"},{"lineNumber":62,"author":{"gitId":"fullfatwasabi"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":63,"author":{"gitId":"fullfatwasabi"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":64,"author":{"gitId":"fullfatwasabi"},"content":"    @Override","lastModifiedDate":"2021-10-09"},{"lineNumber":65,"author":{"gitId":"fullfatwasabi"},"content":"    public int hashCode() {","lastModifiedDate":"2021-10-09"},{"lineNumber":66,"author":{"gitId":"fullfatwasabi"},"content":"        return value.hashCode();","lastModifiedDate":"2021-10-09"},{"lineNumber":67,"author":{"gitId":"fullfatwasabi"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":68,"author":{"gitId":"fullfatwasabi"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":69,"author":{"gitId":"fullfatwasabi"},"content":"}","lastModifiedDate":"2021-10-09"}],"authorContributionMap":{"fullfatwasabi":69}},{"path":"src/main/java/seedu/address/model/person/Schedule.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"IrvingHe000"},"content":"package seedu.address.model.person;","lastModifiedDate":"2021-09-26"},{"lineNumber":2,"author":{"gitId":"IrvingHe000"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":3,"author":{"gitId":"IrvingHe000"},"content":"import java.time.DayOfWeek;","lastModifiedDate":"2021-10-04"},{"lineNumber":4,"author":{"gitId":"fullfatwasabi"},"content":"import java.util.Objects;","lastModifiedDate":"2021-10-09"},{"lineNumber":5,"author":{"gitId":"IrvingHe000"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":6,"author":{"gitId":"IrvingHe000"},"content":"import seedu.address.model.person.exceptions.DuplicateShiftException;","lastModifiedDate":"2021-10-10"},{"lineNumber":7,"author":{"gitId":"Tetrerox"},"content":"import seedu.address.model.person.exceptions.NoShiftException;","lastModifiedDate":"2021-10-13"},{"lineNumber":8,"author":{"gitId":"IrvingHe000"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":9,"author":{"gitId":"IrvingHe000"},"content":"/**","lastModifiedDate":"2021-09-26"},{"lineNumber":10,"author":{"gitId":"IrvingHe000"},"content":" * Represents the schedule for the staff, which contains all the task for the staff.","lastModifiedDate":"2021-09-26"},{"lineNumber":11,"author":{"gitId":"IrvingHe000"},"content":" */","lastModifiedDate":"2021-09-26"},{"lineNumber":12,"author":{"gitId":"IrvingHe000"},"content":"public class Schedule {","lastModifiedDate":"2021-09-26"},{"lineNumber":13,"author":{"gitId":"fullfatwasabi"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":14,"author":{"gitId":"fullfatwasabi"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Schedule json string error! Invalid format.\"; //todo idek if need","lastModifiedDate":"2021-10-09"},{"lineNumber":15,"author":{"gitId":"fullfatwasabi"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":16,"author":{"gitId":"IrvingHe000"},"content":"    private static final int DAY_OF_WEEK \u003d 7;","lastModifiedDate":"2021-10-04"},{"lineNumber":17,"author":{"gitId":"IrvingHe000"},"content":"    private static final int PERIOD_OF_DAY \u003d 2;","lastModifiedDate":"2021-10-04"},{"lineNumber":18,"author":{"gitId":"IrvingHe000"},"content":"    // Set the number of hours for a slot as 4 hours","lastModifiedDate":"2021-10-13"},{"lineNumber":19,"author":{"gitId":"IrvingHe000"},"content":"    private static final int HOURS_PER_SLOT \u003d 4;","lastModifiedDate":"2021-10-13"},{"lineNumber":20,"author":{"gitId":"IrvingHe000"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":21,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":22,"author":{"gitId":"Gabau"},"content":"    private static final String SCHEDULE_DEFAULT \u003d \"Schedule:\\n\"","lastModifiedDate":"2021-10-08"},{"lineNumber":23,"author":{"gitId":"Gabau"},"content":"            + \"Monday: %1$s\\n\"","lastModifiedDate":"2021-10-08"},{"lineNumber":24,"author":{"gitId":"Gabau"},"content":"            + \"Tuesday: %2$s\\n\"","lastModifiedDate":"2021-10-08"},{"lineNumber":25,"author":{"gitId":"Gabau"},"content":"            + \"Wednesday: %3$s\\n\"","lastModifiedDate":"2021-10-08"},{"lineNumber":26,"author":{"gitId":"Gabau"},"content":"            + \"Thursday: %4$s\\n\"","lastModifiedDate":"2021-10-08"},{"lineNumber":27,"author":{"gitId":"Gabau"},"content":"            + \"Friday: %5$s\\n\"","lastModifiedDate":"2021-10-08"},{"lineNumber":28,"author":{"gitId":"Gabau"},"content":"            + \"Saturday: %6$s\\n\"","lastModifiedDate":"2021-10-08"},{"lineNumber":29,"author":{"gitId":"Gabau"},"content":"            + \"Sunday: %7$s\\n\";","lastModifiedDate":"2021-10-08"},{"lineNumber":30,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":31,"author":{"gitId":"IrvingHe000"},"content":"    private Shift[][] shifts \u003d new Shift[7][2];","lastModifiedDate":"2021-10-10"},{"lineNumber":32,"author":{"gitId":"IrvingHe000"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":33,"author":{"gitId":"IrvingHe000"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":34,"author":{"gitId":"IrvingHe000"},"content":"    /**","lastModifiedDate":"2021-10-04"},{"lineNumber":35,"author":{"gitId":"IrvingHe000"},"content":"     * Initialize schedule object.","lastModifiedDate":"2021-10-04"},{"lineNumber":36,"author":{"gitId":"IrvingHe000"},"content":"     */","lastModifiedDate":"2021-10-04"},{"lineNumber":37,"author":{"gitId":"IrvingHe000"},"content":"    public Schedule() {","lastModifiedDate":"2021-09-26"},{"lineNumber":38,"author":{"gitId":"IrvingHe000"},"content":"        this.shifts \u003d new Shift[DAY_OF_WEEK][PERIOD_OF_DAY];","lastModifiedDate":"2021-10-04"},{"lineNumber":39,"author":{"gitId":"IrvingHe000"},"content":"        for (int day \u003d 0; day \u003c DAY_OF_WEEK; day++) {","lastModifiedDate":"2021-10-04"},{"lineNumber":40,"author":{"gitId":"IrvingHe000"},"content":"            shifts[day][0] \u003d null;","lastModifiedDate":"2021-10-04"},{"lineNumber":41,"author":{"gitId":"IrvingHe000"},"content":"            shifts[day][1] \u003d null;","lastModifiedDate":"2021-10-04"},{"lineNumber":42,"author":{"gitId":"IrvingHe000"},"content":"        }","lastModifiedDate":"2021-09-26"},{"lineNumber":43,"author":{"gitId":"IrvingHe000"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":44,"author":{"gitId":"IrvingHe000"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":45,"author":{"gitId":"fullfatwasabi"},"content":"    /**","lastModifiedDate":"2021-10-09"},{"lineNumber":46,"author":{"gitId":"fullfatwasabi"},"content":"     * Alternate constructor for schedule object.","lastModifiedDate":"2021-10-09"},{"lineNumber":47,"author":{"gitId":"fullfatwasabi"},"content":"     */","lastModifiedDate":"2021-10-09"},{"lineNumber":48,"author":{"gitId":"fullfatwasabi"},"content":"    public Schedule(String loadString) {","lastModifiedDate":"2021-10-09"},{"lineNumber":49,"author":{"gitId":"fullfatwasabi"},"content":"        String[] shiftArray \u003d loadString.split(\" \");","lastModifiedDate":"2021-10-09"},{"lineNumber":50,"author":{"gitId":"fullfatwasabi"},"content":"        for (String s : shiftArray) {","lastModifiedDate":"2021-10-09"},{"lineNumber":51,"author":{"gitId":"fullfatwasabi"},"content":"            String[] shiftString \u003d s.split(\"-\");","lastModifiedDate":"2021-10-09"},{"lineNumber":52,"author":{"gitId":"fullfatwasabi"},"content":"            DayOfWeek shiftDay \u003d DayOfWeek.valueOf(shiftString[0]);","lastModifiedDate":"2021-10-09"},{"lineNumber":53,"author":{"gitId":"fullfatwasabi"},"content":"            Slot shiftSlot \u003d Slot.translateStringToSlot(shiftString[1]);","lastModifiedDate":"2021-10-09"},{"lineNumber":54,"author":{"gitId":"IrvingHe000"},"content":"            shifts[shiftDay.getValue() - 1][shiftSlot.getOrder()] \u003d new Shift(shiftDay, shiftSlot);","lastModifiedDate":"2021-10-10"},{"lineNumber":55,"author":{"gitId":"fullfatwasabi"},"content":"        }","lastModifiedDate":"2021-10-09"},{"lineNumber":56,"author":{"gitId":"fullfatwasabi"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":57,"author":{"gitId":"fullfatwasabi"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":58,"author":{"gitId":"IrvingHe000"},"content":"    /**","lastModifiedDate":"2021-09-26"},{"lineNumber":59,"author":{"gitId":"IrvingHe000"},"content":"     * Adds a new shift for a staff.","lastModifiedDate":"2021-10-04"},{"lineNumber":60,"author":{"gitId":"fullfatwasabi"},"content":"     *","lastModifiedDate":"2021-10-09"},{"lineNumber":61,"author":{"gitId":"IrvingHe000"},"content":"     * @param dayOfWeek The day of the shift in a week.","lastModifiedDate":"2021-10-04"},{"lineNumber":62,"author":{"gitId":"IrvingHe000"},"content":"     * @param slot The slot of the shift located.","lastModifiedDate":"2021-10-04"},{"lineNumber":63,"author":{"gitId":"IrvingHe000"},"content":"     * @throws DuplicateShiftException throws when there is already a shift in the target slot.","lastModifiedDate":"2021-10-10"},{"lineNumber":64,"author":{"gitId":"IrvingHe000"},"content":"     */","lastModifiedDate":"2021-09-26"},{"lineNumber":65,"author":{"gitId":"IrvingHe000"},"content":"    public void addShift(DayOfWeek dayOfWeek, Slot slot) throws DuplicateShiftException {","lastModifiedDate":"2021-10-10"},{"lineNumber":66,"author":{"gitId":"IrvingHe000"},"content":"        Shift shift \u003d new Shift(dayOfWeek, slot);","lastModifiedDate":"2021-10-10"},{"lineNumber":67,"author":{"gitId":"IrvingHe000"},"content":"        if (shifts[dayOfWeek.getValue() - 1][slot.getOrder()] !\u003d null) {","lastModifiedDate":"2021-10-10"},{"lineNumber":68,"author":{"gitId":"IrvingHe000"},"content":"            throw new DuplicateShiftException();","lastModifiedDate":"2021-10-10"},{"lineNumber":69,"author":{"gitId":"IrvingHe000"},"content":"        }","lastModifiedDate":"2021-10-10"},{"lineNumber":70,"author":{"gitId":"IrvingHe000"},"content":"        shifts[dayOfWeek.getValue() - 1][slot.getOrder()] \u003d shift;","lastModifiedDate":"2021-10-04"},{"lineNumber":71,"author":{"gitId":"IrvingHe000"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":72,"author":{"gitId":"IrvingHe000"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":73,"author":{"gitId":"IrvingHe000"},"content":"    /**","lastModifiedDate":"2021-09-26"},{"lineNumber":74,"author":{"gitId":"IrvingHe000"},"content":"     * Removes a new task for a staff.","lastModifiedDate":"2021-10-04"},{"lineNumber":75,"author":{"gitId":"fullfatwasabi"},"content":"     *","lastModifiedDate":"2021-10-09"},{"lineNumber":76,"author":{"gitId":"fullfatwasabi"},"content":"     * @param dayOfWeek The day of the shift in a week.","lastModifiedDate":"2021-10-09"},{"lineNumber":77,"author":{"gitId":"fullfatwasabi"},"content":"     * @param slot The period of the shift.","lastModifiedDate":"2021-10-09"},{"lineNumber":78,"author":{"gitId":"Tetrerox"},"content":"     * @throws NoShiftException throws when a user tries to delete a shift that does not exist.","lastModifiedDate":"2021-10-13"},{"lineNumber":79,"author":{"gitId":"IrvingHe000"},"content":"     */","lastModifiedDate":"2021-09-26"},{"lineNumber":80,"author":{"gitId":"Tetrerox"},"content":"    public void removeShift(DayOfWeek dayOfWeek, Slot slot) throws NoShiftException {","lastModifiedDate":"2021-10-13"},{"lineNumber":81,"author":{"gitId":"Tetrerox"},"content":"        if (shifts[dayOfWeek.getValue() - 1][slot.getOrder()] \u003d\u003d null) {","lastModifiedDate":"2021-10-13"},{"lineNumber":82,"author":{"gitId":"Tetrerox"},"content":"            throw new NoShiftException();","lastModifiedDate":"2021-10-13"},{"lineNumber":83,"author":{"gitId":"Tetrerox"},"content":"        }","lastModifiedDate":"2021-10-13"},{"lineNumber":84,"author":{"gitId":"IrvingHe000"},"content":"        shifts[dayOfWeek.getValue() - 1][slot.getOrder()] \u003d null;","lastModifiedDate":"2021-10-04"},{"lineNumber":85,"author":{"gitId":"IrvingHe000"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":86,"author":{"gitId":"IrvingHe000"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":87,"author":{"gitId":"IrvingHe000"},"content":"    /**","lastModifiedDate":"2021-09-26"},{"lineNumber":88,"author":{"gitId":"IrvingHe000"},"content":"     * Checks whether a staff is working in a certain period.","lastModifiedDate":"2021-10-04"},{"lineNumber":89,"author":{"gitId":"fullfatwasabi"},"content":"     *","lastModifiedDate":"2021-10-09"},{"lineNumber":90,"author":{"gitId":"IrvingHe000"},"content":"     * @param dayOfWeek The day want to check.","lastModifiedDate":"2021-10-04"},{"lineNumber":91,"author":{"gitId":"IrvingHe000"},"content":"     * @param slot The period want to check.","lastModifiedDate":"2021-10-04"},{"lineNumber":92,"author":{"gitId":"IrvingHe000"},"content":"     */","lastModifiedDate":"2021-09-26"},{"lineNumber":93,"author":{"gitId":"IrvingHe000"},"content":"    public boolean isWorking(DayOfWeek dayOfWeek, Slot slot) {","lastModifiedDate":"2021-10-04"},{"lineNumber":94,"author":{"gitId":"IrvingHe000"},"content":"        return shifts[dayOfWeek.getValue() - 1][slot.getOrder()] !\u003d null;","lastModifiedDate":"2021-10-04"},{"lineNumber":95,"author":{"gitId":"IrvingHe000"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":96,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":97,"author":{"gitId":"Gabau"},"content":"    /**","lastModifiedDate":"2021-10-08"},{"lineNumber":98,"author":{"gitId":"Gabau"},"content":"     * Creates the shift array in a legible text output.","lastModifiedDate":"2021-10-08"},{"lineNumber":99,"author":{"gitId":"Gabau"},"content":"     * @param shifts The shifts in to format.","lastModifiedDate":"2021-10-08"},{"lineNumber":100,"author":{"gitId":"Gabau"},"content":"     *","lastModifiedDate":"2021-10-09"},{"lineNumber":101,"author":{"gitId":"Gabau"},"content":"     * @return The string format to display.","lastModifiedDate":"2021-10-08"},{"lineNumber":102,"author":{"gitId":"Gabau"},"content":"     */","lastModifiedDate":"2021-10-08"},{"lineNumber":103,"author":{"gitId":"Gabau"},"content":"    private static String formatShiftsToString(Shift[] shifts) {","lastModifiedDate":"2021-10-08"},{"lineNumber":104,"author":{"gitId":"Gabau"},"content":"        String result \u003d \"\";","lastModifiedDate":"2021-10-08"},{"lineNumber":105,"author":{"gitId":"Gabau"},"content":"        for (Shift shift: shifts) {","lastModifiedDate":"2021-10-08"},{"lineNumber":106,"author":{"gitId":"Gabau"},"content":"            if (shift \u003d\u003d null) {","lastModifiedDate":"2021-10-08"},{"lineNumber":107,"author":{"gitId":"Gabau"},"content":"                continue;","lastModifiedDate":"2021-10-08"},{"lineNumber":108,"author":{"gitId":"Gabau"},"content":"            }","lastModifiedDate":"2021-10-08"},{"lineNumber":109,"author":{"gitId":"Gabau"},"content":"            result +\u003d \"\\n\\t\";","lastModifiedDate":"2021-10-08"},{"lineNumber":110,"author":{"gitId":"Gabau"},"content":"            result +\u003d shift;","lastModifiedDate":"2021-10-08"},{"lineNumber":111,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":112,"author":{"gitId":"Gabau"},"content":"        }","lastModifiedDate":"2021-10-08"},{"lineNumber":113,"author":{"gitId":"Gabau"},"content":"        return result;","lastModifiedDate":"2021-10-08"},{"lineNumber":114,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":115,"author":{"gitId":"Gabau"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":116,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":117,"author":{"gitId":"Gabau"},"content":"    /**","lastModifiedDate":"2021-10-09"},{"lineNumber":118,"author":{"gitId":"Gabau"},"content":"     * Method to display the schedule in a palatable manner.","lastModifiedDate":"2021-10-09"},{"lineNumber":119,"author":{"gitId":"Gabau"},"content":"     *","lastModifiedDate":"2021-10-09"},{"lineNumber":120,"author":{"gitId":"Gabau"},"content":"     * @return The displayed schedule.","lastModifiedDate":"2021-10-09"},{"lineNumber":121,"author":{"gitId":"Gabau"},"content":"     */","lastModifiedDate":"2021-10-09"},{"lineNumber":122,"author":{"gitId":"Gabau"},"content":"    public String toViewScheduleString() {","lastModifiedDate":"2021-10-09"},{"lineNumber":123,"author":{"gitId":"Gabau"},"content":"        return String.format(SCHEDULE_DEFAULT,","lastModifiedDate":"2021-10-08"},{"lineNumber":124,"author":{"gitId":"Gabau"},"content":"                formatShiftsToString(shifts[0]),","lastModifiedDate":"2021-10-08"},{"lineNumber":125,"author":{"gitId":"Gabau"},"content":"                formatShiftsToString(shifts[1]),","lastModifiedDate":"2021-10-08"},{"lineNumber":126,"author":{"gitId":"Gabau"},"content":"                formatShiftsToString(shifts[2]),","lastModifiedDate":"2021-10-08"},{"lineNumber":127,"author":{"gitId":"Gabau"},"content":"                formatShiftsToString(shifts[3]),","lastModifiedDate":"2021-10-08"},{"lineNumber":128,"author":{"gitId":"Gabau"},"content":"                formatShiftsToString(shifts[4]),","lastModifiedDate":"2021-10-08"},{"lineNumber":129,"author":{"gitId":"Gabau"},"content":"                formatShiftsToString(shifts[5]),","lastModifiedDate":"2021-10-08"},{"lineNumber":130,"author":{"gitId":"Gabau"},"content":"                formatShiftsToString(shifts[6]));","lastModifiedDate":"2021-10-08"},{"lineNumber":131,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":132,"author":{"gitId":"Gabau"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":133,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":134,"author":{"gitId":"IrvingHe000"},"content":"    /**","lastModifiedDate":"2021-10-13"},{"lineNumber":135,"author":{"gitId":"IrvingHe000"},"content":"     * Calculates the total working hours os one schedule.","lastModifiedDate":"2021-10-13"},{"lineNumber":136,"author":{"gitId":"IrvingHe000"},"content":"     *","lastModifiedDate":"2021-10-13"},{"lineNumber":137,"author":{"gitId":"IrvingHe000"},"content":"     * @return The total working hours.","lastModifiedDate":"2021-10-13"},{"lineNumber":138,"author":{"gitId":"IrvingHe000"},"content":"     */","lastModifiedDate":"2021-10-13"},{"lineNumber":139,"author":{"gitId":"IrvingHe000"},"content":"    public int getTotalWorkingHour() {","lastModifiedDate":"2021-10-13"},{"lineNumber":140,"author":{"gitId":"IrvingHe000"},"content":"        int totalHours \u003d 0;","lastModifiedDate":"2021-10-13"},{"lineNumber":141,"author":{"gitId":"IrvingHe000"},"content":"        for (Shift[] dayShifts : shifts) {","lastModifiedDate":"2021-10-13"},{"lineNumber":142,"author":{"gitId":"IrvingHe000"},"content":"            for (Shift shift : dayShifts) {","lastModifiedDate":"2021-10-13"},{"lineNumber":143,"author":{"gitId":"IrvingHe000"},"content":"                if (shift !\u003d null) {","lastModifiedDate":"2021-10-13"},{"lineNumber":144,"author":{"gitId":"IrvingHe000"},"content":"                    totalHours +\u003d HOURS_PER_SLOT;","lastModifiedDate":"2021-10-13"},{"lineNumber":145,"author":{"gitId":"IrvingHe000"},"content":"                }","lastModifiedDate":"2021-10-13"},{"lineNumber":146,"author":{"gitId":"IrvingHe000"},"content":"            }","lastModifiedDate":"2021-10-13"},{"lineNumber":147,"author":{"gitId":"IrvingHe000"},"content":"        }","lastModifiedDate":"2021-10-13"},{"lineNumber":148,"author":{"gitId":"IrvingHe000"},"content":"        return totalHours;","lastModifiedDate":"2021-10-13"},{"lineNumber":149,"author":{"gitId":"IrvingHe000"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":150,"author":{"gitId":"IrvingHe000"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":151,"author":{"gitId":"fullfatwasabi"},"content":"    /**","lastModifiedDate":"2021-10-09"},{"lineNumber":152,"author":{"gitId":"fullfatwasabi"},"content":"     * Returns String representation of the schedule object.","lastModifiedDate":"2021-10-09"},{"lineNumber":153,"author":{"gitId":"fullfatwasabi"},"content":"     *","lastModifiedDate":"2021-10-09"},{"lineNumber":154,"author":{"gitId":"fullfatwasabi"},"content":"     * @return String representation of all existing shifts in the schedule, concatenated with a whitespace.","lastModifiedDate":"2021-10-09"},{"lineNumber":155,"author":{"gitId":"fullfatwasabi"},"content":"     */","lastModifiedDate":"2021-10-09"},{"lineNumber":156,"author":{"gitId":"fullfatwasabi"},"content":"    @Override","lastModifiedDate":"2021-10-09"},{"lineNumber":157,"author":{"gitId":"fullfatwasabi"},"content":"    public String toString() {","lastModifiedDate":"2021-10-09"},{"lineNumber":158,"author":{"gitId":"fullfatwasabi"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2021-10-09"},{"lineNumber":159,"author":{"gitId":"fullfatwasabi"},"content":"        for (Shift[] innerArray : shifts) {","lastModifiedDate":"2021-10-09"},{"lineNumber":160,"author":{"gitId":"fullfatwasabi"},"content":"            for (Shift s : innerArray) {","lastModifiedDate":"2021-10-09"},{"lineNumber":161,"author":{"gitId":"fullfatwasabi"},"content":"                if (!Objects.isNull(s)) {","lastModifiedDate":"2021-10-09"},{"lineNumber":162,"author":{"gitId":"fullfatwasabi"},"content":"                    builder.append(s.toSaveString());","lastModifiedDate":"2021-10-09"},{"lineNumber":163,"author":{"gitId":"fullfatwasabi"},"content":"                }","lastModifiedDate":"2021-10-09"},{"lineNumber":164,"author":{"gitId":"fullfatwasabi"},"content":"            }","lastModifiedDate":"2021-10-09"},{"lineNumber":165,"author":{"gitId":"fullfatwasabi"},"content":"        }","lastModifiedDate":"2021-10-09"},{"lineNumber":166,"author":{"gitId":"fullfatwasabi"},"content":"        return builder.toString();","lastModifiedDate":"2021-10-09"},{"lineNumber":167,"author":{"gitId":"fullfatwasabi"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":168,"author":{"gitId":"fullfatwasabi"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":169,"author":{"gitId":"fullfatwasabi"},"content":"    /**","lastModifiedDate":"2021-10-09"},{"lineNumber":170,"author":{"gitId":"fullfatwasabi"},"content":"     * Returns if a given string is a valid scheduleString.","lastModifiedDate":"2021-10-09"},{"lineNumber":171,"author":{"gitId":"fullfatwasabi"},"content":"     */","lastModifiedDate":"2021-10-09"},{"lineNumber":172,"author":{"gitId":"fullfatwasabi"},"content":"    public static boolean isValidSchedule(String test) {","lastModifiedDate":"2021-10-09"},{"lineNumber":173,"author":{"gitId":"fullfatwasabi"},"content":"        if (test.equals(\"\")) {","lastModifiedDate":"2021-10-09"},{"lineNumber":174,"author":{"gitId":"fullfatwasabi"},"content":"            return true;","lastModifiedDate":"2021-10-09"},{"lineNumber":175,"author":{"gitId":"fullfatwasabi"},"content":"        }","lastModifiedDate":"2021-10-09"},{"lineNumber":176,"author":{"gitId":"fullfatwasabi"},"content":"        String[] shiftSplit \u003d test.split(\" \");","lastModifiedDate":"2021-10-09"},{"lineNumber":177,"author":{"gitId":"fullfatwasabi"},"content":"        for (String s : shiftSplit) {","lastModifiedDate":"2021-10-09"},{"lineNumber":178,"author":{"gitId":"fullfatwasabi"},"content":"            if (!Shift.isValidShift(s)) {","lastModifiedDate":"2021-10-09"},{"lineNumber":179,"author":{"gitId":"fullfatwasabi"},"content":"                return false;","lastModifiedDate":"2021-10-09"},{"lineNumber":180,"author":{"gitId":"fullfatwasabi"},"content":"            }","lastModifiedDate":"2021-10-09"},{"lineNumber":181,"author":{"gitId":"fullfatwasabi"},"content":"        }","lastModifiedDate":"2021-10-09"},{"lineNumber":182,"author":{"gitId":"fullfatwasabi"},"content":"        return true;","lastModifiedDate":"2021-10-09"},{"lineNumber":183,"author":{"gitId":"fullfatwasabi"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":184,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":185,"author":{"gitId":"IrvingHe000"},"content":"}","lastModifiedDate":"2021-09-26"}],"authorContributionMap":{"Tetrerox":6,"Gabau":49,"fullfatwasabi":54,"IrvingHe000":76}},{"path":"src/main/java/seedu/address/model/person/Shift.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"IrvingHe000"},"content":"package seedu.address.model.person;","lastModifiedDate":"2021-10-04"},{"lineNumber":2,"author":{"gitId":"IrvingHe000"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":3,"author":{"gitId":"IrvingHe000"},"content":"import java.time.DayOfWeek;","lastModifiedDate":"2021-10-04"},{"lineNumber":4,"author":{"gitId":"IrvingHe000"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":5,"author":{"gitId":"IrvingHe000"},"content":"/**","lastModifiedDate":"2021-10-04"},{"lineNumber":6,"author":{"gitId":"IrvingHe000"},"content":" * Represents a piece of work for a staff.","lastModifiedDate":"2021-10-04"},{"lineNumber":7,"author":{"gitId":"IrvingHe000"},"content":" */","lastModifiedDate":"2021-10-04"},{"lineNumber":8,"author":{"gitId":"IrvingHe000"},"content":"public class Shift {","lastModifiedDate":"2021-10-04"},{"lineNumber":9,"author":{"gitId":"IrvingHe000"},"content":"    private Slot slot;","lastModifiedDate":"2021-10-04"},{"lineNumber":10,"author":{"gitId":"IrvingHe000"},"content":"    private DayOfWeek dayOfWeek;","lastModifiedDate":"2021-10-04"},{"lineNumber":11,"author":{"gitId":"IrvingHe000"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":12,"author":{"gitId":"IrvingHe000"},"content":"    /**","lastModifiedDate":"2021-10-04"},{"lineNumber":13,"author":{"gitId":"IrvingHe000"},"content":"     * Constructor of Task given its weekday, time, and name.","lastModifiedDate":"2021-10-04"},{"lineNumber":14,"author":{"gitId":"fullfatwasabi"},"content":"     *","lastModifiedDate":"2021-10-09"},{"lineNumber":15,"author":{"gitId":"IrvingHe000"},"content":"     * @param dayOfWeek Weekday of the shift.","lastModifiedDate":"2021-10-04"},{"lineNumber":16,"author":{"gitId":"IrvingHe000"},"content":"     * @param slot The slot when the shift located.","lastModifiedDate":"2021-10-04"},{"lineNumber":17,"author":{"gitId":"IrvingHe000"},"content":"     */","lastModifiedDate":"2021-10-04"},{"lineNumber":18,"author":{"gitId":"IrvingHe000"},"content":"    public Shift(DayOfWeek dayOfWeek, Slot slot) {","lastModifiedDate":"2021-10-04"},{"lineNumber":19,"author":{"gitId":"IrvingHe000"},"content":"        this.dayOfWeek \u003d dayOfWeek;","lastModifiedDate":"2021-10-04"},{"lineNumber":20,"author":{"gitId":"IrvingHe000"},"content":"        this.slot \u003d slot;","lastModifiedDate":"2021-10-04"},{"lineNumber":21,"author":{"gitId":"IrvingHe000"},"content":"    }","lastModifiedDate":"2021-10-04"},{"lineNumber":22,"author":{"gitId":"IrvingHe000"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":23,"author":{"gitId":"IrvingHe000"},"content":"    /**","lastModifiedDate":"2021-10-04"},{"lineNumber":24,"author":{"gitId":"IrvingHe000"},"content":"     * Returns whether the shift is happening in the morning.","lastModifiedDate":"2021-10-04"},{"lineNumber":25,"author":{"gitId":"fullfatwasabi"},"content":"     *","lastModifiedDate":"2021-10-09"},{"lineNumber":26,"author":{"gitId":"IrvingHe000"},"content":"     * @return whether the shift is happening in the morning.","lastModifiedDate":"2021-10-04"},{"lineNumber":27,"author":{"gitId":"IrvingHe000"},"content":"     */","lastModifiedDate":"2021-10-04"},{"lineNumber":28,"author":{"gitId":"IrvingHe000"},"content":"    public boolean isInMorning() {","lastModifiedDate":"2021-10-04"},{"lineNumber":29,"author":{"gitId":"IrvingHe000"},"content":"        return this.slot.getValue().equals(\"morning\");","lastModifiedDate":"2021-10-04"},{"lineNumber":30,"author":{"gitId":"IrvingHe000"},"content":"    }","lastModifiedDate":"2021-10-04"},{"lineNumber":31,"author":{"gitId":"IrvingHe000"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":32,"author":{"gitId":"IrvingHe000"},"content":"    /**","lastModifiedDate":"2021-10-04"},{"lineNumber":33,"author":{"gitId":"IrvingHe000"},"content":"     * Returns whether the shift is happening in the afternoon.","lastModifiedDate":"2021-10-04"},{"lineNumber":34,"author":{"gitId":"fullfatwasabi"},"content":"     *","lastModifiedDate":"2021-10-09"},{"lineNumber":35,"author":{"gitId":"IrvingHe000"},"content":"     * @return whether the shift is happening in the afternoon.","lastModifiedDate":"2021-10-04"},{"lineNumber":36,"author":{"gitId":"IrvingHe000"},"content":"     */","lastModifiedDate":"2021-10-04"},{"lineNumber":37,"author":{"gitId":"IrvingHe000"},"content":"    public boolean isInAfternoon() {","lastModifiedDate":"2021-10-04"},{"lineNumber":38,"author":{"gitId":"IrvingHe000"},"content":"        return this.slot.getValue().equals(\"afternoon\");","lastModifiedDate":"2021-10-04"},{"lineNumber":39,"author":{"gitId":"IrvingHe000"},"content":"    }","lastModifiedDate":"2021-10-04"},{"lineNumber":40,"author":{"gitId":"IrvingHe000"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":41,"author":{"gitId":"IrvingHe000"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":42,"author":{"gitId":"IrvingHe000"},"content":"    @Override","lastModifiedDate":"2021-10-04"},{"lineNumber":43,"author":{"gitId":"IrvingHe000"},"content":"    public String toString() {","lastModifiedDate":"2021-10-04"},{"lineNumber":44,"author":{"gitId":"IrvingHe000"},"content":"        return dayOfWeek.toString() + \"-\" + slot.getValue();","lastModifiedDate":"2021-10-10"},{"lineNumber":45,"author":{"gitId":"IrvingHe000"},"content":"    }","lastModifiedDate":"2021-10-04"},{"lineNumber":46,"author":{"gitId":"IrvingHe000"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":47,"author":{"gitId":"fullfatwasabi"},"content":"    /**","lastModifiedDate":"2021-10-09"},{"lineNumber":48,"author":{"gitId":"fullfatwasabi"},"content":"     * Returns a String representation of the shift that is suitable for json.","lastModifiedDate":"2021-10-09"},{"lineNumber":49,"author":{"gitId":"fullfatwasabi"},"content":"     */","lastModifiedDate":"2021-10-09"},{"lineNumber":50,"author":{"gitId":"fullfatwasabi"},"content":"    public String toSaveString() {","lastModifiedDate":"2021-10-09"},{"lineNumber":51,"author":{"gitId":"IrvingHe000"},"content":"        return dayOfWeek.toString() + \"-\" + slot.getValue() + \" \";","lastModifiedDate":"2021-10-10"},{"lineNumber":52,"author":{"gitId":"fullfatwasabi"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":53,"author":{"gitId":"fullfatwasabi"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":54,"author":{"gitId":"fullfatwasabi"},"content":"    /**","lastModifiedDate":"2021-10-09"},{"lineNumber":55,"author":{"gitId":"fullfatwasabi"},"content":"     * Returns if a given string is a valid DayOfWeek.","lastModifiedDate":"2021-10-09"},{"lineNumber":56,"author":{"gitId":"fullfatwasabi"},"content":"     */","lastModifiedDate":"2021-10-09"},{"lineNumber":57,"author":{"gitId":"fullfatwasabi"},"content":"    public static boolean isValidDayOfWeek(String test) {","lastModifiedDate":"2021-10-09"},{"lineNumber":58,"author":{"gitId":"fullfatwasabi"},"content":"        for (DayOfWeek d :DayOfWeek.values()) {","lastModifiedDate":"2021-10-09"},{"lineNumber":59,"author":{"gitId":"fullfatwasabi"},"content":"            if (d.toString().equalsIgnoreCase(test)) {","lastModifiedDate":"2021-10-09"},{"lineNumber":60,"author":{"gitId":"fullfatwasabi"},"content":"                return true;","lastModifiedDate":"2021-10-09"},{"lineNumber":61,"author":{"gitId":"fullfatwasabi"},"content":"            }","lastModifiedDate":"2021-10-09"},{"lineNumber":62,"author":{"gitId":"fullfatwasabi"},"content":"        }","lastModifiedDate":"2021-10-09"},{"lineNumber":63,"author":{"gitId":"fullfatwasabi"},"content":"        return false;","lastModifiedDate":"2021-10-09"},{"lineNumber":64,"author":{"gitId":"fullfatwasabi"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":65,"author":{"gitId":"fullfatwasabi"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":66,"author":{"gitId":"fullfatwasabi"},"content":"    /**","lastModifiedDate":"2021-10-09"},{"lineNumber":67,"author":{"gitId":"fullfatwasabi"},"content":"     * Returns if a given string is a valid shift.","lastModifiedDate":"2021-10-09"},{"lineNumber":68,"author":{"gitId":"fullfatwasabi"},"content":"     */","lastModifiedDate":"2021-10-09"},{"lineNumber":69,"author":{"gitId":"fullfatwasabi"},"content":"    public static boolean isValidShift(String test) {","lastModifiedDate":"2021-10-09"},{"lineNumber":70,"author":{"gitId":"fullfatwasabi"},"content":"        boolean resultBoolean \u003d false;","lastModifiedDate":"2021-10-09"},{"lineNumber":71,"author":{"gitId":"fullfatwasabi"},"content":"        if (test.equals(\"\")) {","lastModifiedDate":"2021-10-09"},{"lineNumber":72,"author":{"gitId":"fullfatwasabi"},"content":"            return false;","lastModifiedDate":"2021-10-09"},{"lineNumber":73,"author":{"gitId":"fullfatwasabi"},"content":"        }","lastModifiedDate":"2021-10-09"},{"lineNumber":74,"author":{"gitId":"fullfatwasabi"},"content":"        String[] stringSplit \u003d test.split(\"-\");","lastModifiedDate":"2021-10-09"},{"lineNumber":75,"author":{"gitId":"IrvingHe000"},"content":"        if (stringSplit.length \u003d\u003d 2) {","lastModifiedDate":"2021-10-10"},{"lineNumber":76,"author":{"gitId":"fullfatwasabi"},"content":"            String dayString \u003d stringSplit[0];","lastModifiedDate":"2021-10-09"},{"lineNumber":77,"author":{"gitId":"fullfatwasabi"},"content":"            String slotString \u003d stringSplit[1];","lastModifiedDate":"2021-10-09"},{"lineNumber":78,"author":{"gitId":"fullfatwasabi"},"content":"            resultBoolean \u003d isValidDayOfWeek(dayString);","lastModifiedDate":"2021-10-09"},{"lineNumber":79,"author":{"gitId":"fullfatwasabi"},"content":"            resultBoolean \u0026\u003d Slot.isValidSlot(slotString);","lastModifiedDate":"2021-10-09"},{"lineNumber":80,"author":{"gitId":"fullfatwasabi"},"content":"        }","lastModifiedDate":"2021-10-09"},{"lineNumber":81,"author":{"gitId":"fullfatwasabi"},"content":"        return resultBoolean;","lastModifiedDate":"2021-10-09"},{"lineNumber":82,"author":{"gitId":"fullfatwasabi"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":83,"author":{"gitId":"fullfatwasabi"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":84,"author":{"gitId":"IrvingHe000"},"content":"    @Override","lastModifiedDate":"2021-10-04"},{"lineNumber":85,"author":{"gitId":"IrvingHe000"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-04"},{"lineNumber":86,"author":{"gitId":"IrvingHe000"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2021-10-04"},{"lineNumber":87,"author":{"gitId":"IrvingHe000"},"content":"            return true;","lastModifiedDate":"2021-10-04"},{"lineNumber":88,"author":{"gitId":"IrvingHe000"},"content":"        }","lastModifiedDate":"2021-10-04"},{"lineNumber":89,"author":{"gitId":"IrvingHe000"},"content":"        if (!(other instanceof Shift)) {","lastModifiedDate":"2021-10-04"},{"lineNumber":90,"author":{"gitId":"IrvingHe000"},"content":"            return false;","lastModifiedDate":"2021-10-04"},{"lineNumber":91,"author":{"gitId":"IrvingHe000"},"content":"        }","lastModifiedDate":"2021-10-04"},{"lineNumber":92,"author":{"gitId":"IrvingHe000"},"content":"        Shift otherShift \u003d (Shift) other;","lastModifiedDate":"2021-10-04"},{"lineNumber":93,"author":{"gitId":"IrvingHe000"},"content":"        return slot.equals(otherShift.slot) \u0026\u0026 dayOfWeek.equals(otherShift.dayOfWeek);","lastModifiedDate":"2021-10-10"},{"lineNumber":94,"author":{"gitId":"IrvingHe000"},"content":"    }","lastModifiedDate":"2021-10-04"},{"lineNumber":95,"author":{"gitId":"IrvingHe000"},"content":"}","lastModifiedDate":"2021-10-04"}],"authorContributionMap":{"fullfatwasabi":38,"IrvingHe000":57}},{"path":"src/main/java/seedu/address/model/person/Slot.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"IrvingHe000"},"content":"package seedu.address.model.person;","lastModifiedDate":"2021-10-04"},{"lineNumber":2,"author":{"gitId":"IrvingHe000"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":3,"author":{"gitId":"IrvingHe000"},"content":"/**","lastModifiedDate":"2021-10-04"},{"lineNumber":4,"author":{"gitId":"IrvingHe000"},"content":" * Represents possible working slot for a staff.","lastModifiedDate":"2021-10-04"},{"lineNumber":5,"author":{"gitId":"IrvingHe000"},"content":" */","lastModifiedDate":"2021-10-04"},{"lineNumber":6,"author":{"gitId":"IrvingHe000"},"content":"public enum Slot {","lastModifiedDate":"2021-10-04"},{"lineNumber":7,"author":{"gitId":"IrvingHe000"},"content":"    MORNING(\"morning\", 0), AFTERNOON(\"afternoon\", 1);","lastModifiedDate":"2021-10-04"},{"lineNumber":8,"author":{"gitId":"IrvingHe000"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":9,"author":{"gitId":"IrvingHe000"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2021-10-10"},{"lineNumber":10,"author":{"gitId":"IrvingHe000"},"content":"            \"List of valid slots: morning, afternoon.\";","lastModifiedDate":"2021-10-10"},{"lineNumber":11,"author":{"gitId":"IrvingHe000"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":12,"author":{"gitId":"IrvingHe000"},"content":"    private String period;","lastModifiedDate":"2021-10-04"},{"lineNumber":13,"author":{"gitId":"IrvingHe000"},"content":"    private int order;","lastModifiedDate":"2021-10-04"},{"lineNumber":14,"author":{"gitId":"IrvingHe000"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":15,"author":{"gitId":"IrvingHe000"},"content":"    private Slot(String period, int order) {","lastModifiedDate":"2021-10-04"},{"lineNumber":16,"author":{"gitId":"IrvingHe000"},"content":"        this.period \u003d period;","lastModifiedDate":"2021-10-04"},{"lineNumber":17,"author":{"gitId":"IrvingHe000"},"content":"        this.order \u003d order;","lastModifiedDate":"2021-10-04"},{"lineNumber":18,"author":{"gitId":"IrvingHe000"},"content":"    }","lastModifiedDate":"2021-10-04"},{"lineNumber":19,"author":{"gitId":"IrvingHe000"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":20,"author":{"gitId":"IrvingHe000"},"content":"    /**","lastModifiedDate":"2021-10-04"},{"lineNumber":21,"author":{"gitId":"IrvingHe000"},"content":"     * Gets the value of a slot.","lastModifiedDate":"2021-10-04"},{"lineNumber":22,"author":{"gitId":"fullfatwasabi"},"content":"     *","lastModifiedDate":"2021-10-09"},{"lineNumber":23,"author":{"gitId":"IrvingHe000"},"content":"     * @return The value of a slot.","lastModifiedDate":"2021-10-04"},{"lineNumber":24,"author":{"gitId":"IrvingHe000"},"content":"     */","lastModifiedDate":"2021-10-04"},{"lineNumber":25,"author":{"gitId":"IrvingHe000"},"content":"    public String getValue() {","lastModifiedDate":"2021-10-04"},{"lineNumber":26,"author":{"gitId":"IrvingHe000"},"content":"        return period;","lastModifiedDate":"2021-10-04"},{"lineNumber":27,"author":{"gitId":"IrvingHe000"},"content":"    }","lastModifiedDate":"2021-10-04"},{"lineNumber":28,"author":{"gitId":"IrvingHe000"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":29,"author":{"gitId":"IrvingHe000"},"content":"    /**","lastModifiedDate":"2021-10-04"},{"lineNumber":30,"author":{"gitId":"IrvingHe000"},"content":"     * Gets the order of a slot.","lastModifiedDate":"2021-10-04"},{"lineNumber":31,"author":{"gitId":"fullfatwasabi"},"content":"     *","lastModifiedDate":"2021-10-09"},{"lineNumber":32,"author":{"gitId":"IrvingHe000"},"content":"     * @return The order of a slot.","lastModifiedDate":"2021-10-04"},{"lineNumber":33,"author":{"gitId":"IrvingHe000"},"content":"     */","lastModifiedDate":"2021-10-04"},{"lineNumber":34,"author":{"gitId":"IrvingHe000"},"content":"    public int getOrder() {","lastModifiedDate":"2021-10-04"},{"lineNumber":35,"author":{"gitId":"IrvingHe000"},"content":"        return order;","lastModifiedDate":"2021-10-04"},{"lineNumber":36,"author":{"gitId":"IrvingHe000"},"content":"    }","lastModifiedDate":"2021-10-04"},{"lineNumber":37,"author":{"gitId":"fullfatwasabi"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":38,"author":{"gitId":"fullfatwasabi"},"content":"    /**","lastModifiedDate":"2021-10-09"},{"lineNumber":39,"author":{"gitId":"fullfatwasabi"},"content":"     * Translate a string into a Slot enum if the string matches any Slot values. Trims string.","lastModifiedDate":"2021-10-09"},{"lineNumber":40,"author":{"gitId":"fullfatwasabi"},"content":"     *","lastModifiedDate":"2021-10-09"},{"lineNumber":41,"author":{"gitId":"fullfatwasabi"},"content":"     * @param string String to be translated.","lastModifiedDate":"2021-10-09"},{"lineNumber":42,"author":{"gitId":"fullfatwasabi"},"content":"     * @return The translated Slot if the string is valid, null object otherwise.","lastModifiedDate":"2021-10-09"},{"lineNumber":43,"author":{"gitId":"fullfatwasabi"},"content":"     */","lastModifiedDate":"2021-10-09"},{"lineNumber":44,"author":{"gitId":"fullfatwasabi"},"content":"    public static Slot translateStringToSlot(String string) {","lastModifiedDate":"2021-10-09"},{"lineNumber":45,"author":{"gitId":"fullfatwasabi"},"content":"        String trimmedString \u003d string.trim();","lastModifiedDate":"2021-10-09"},{"lineNumber":46,"author":{"gitId":"fullfatwasabi"},"content":"        Slot resultSlot \u003d null;","lastModifiedDate":"2021-10-09"},{"lineNumber":47,"author":{"gitId":"fullfatwasabi"},"content":"        for (Slot s : Slot.values()) {","lastModifiedDate":"2021-10-09"},{"lineNumber":48,"author":{"gitId":"fullfatwasabi"},"content":"            if (s.getValue().equalsIgnoreCase(trimmedString)) {","lastModifiedDate":"2021-10-09"},{"lineNumber":49,"author":{"gitId":"fullfatwasabi"},"content":"                resultSlot \u003d s;","lastModifiedDate":"2021-10-09"},{"lineNumber":50,"author":{"gitId":"IrvingHe000"},"content":"                break;","lastModifiedDate":"2021-10-10"},{"lineNumber":51,"author":{"gitId":"IrvingHe000"},"content":"            }","lastModifiedDate":"2021-10-10"},{"lineNumber":52,"author":{"gitId":"IrvingHe000"},"content":"        }","lastModifiedDate":"2021-10-10"},{"lineNumber":53,"author":{"gitId":"IrvingHe000"},"content":"        return resultSlot;","lastModifiedDate":"2021-10-10"},{"lineNumber":54,"author":{"gitId":"IrvingHe000"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":55,"author":{"gitId":"IrvingHe000"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":56,"author":{"gitId":"IrvingHe000"},"content":"    public static Slot getSlotByOrder(String string) {","lastModifiedDate":"2021-10-10"},{"lineNumber":57,"author":{"gitId":"IrvingHe000"},"content":"        String trimmedString \u003d string.trim();","lastModifiedDate":"2021-10-10"},{"lineNumber":58,"author":{"gitId":"IrvingHe000"},"content":"        Slot resultSlot \u003d null;","lastModifiedDate":"2021-10-10"},{"lineNumber":59,"author":{"gitId":"IrvingHe000"},"content":"        for (Slot s : Slot.values()) {","lastModifiedDate":"2021-10-10"},{"lineNumber":60,"author":{"gitId":"IrvingHe000"},"content":"            if (String.valueOf(s.getOrder()).equals(trimmedString)) {","lastModifiedDate":"2021-10-10"},{"lineNumber":61,"author":{"gitId":"IrvingHe000"},"content":"                resultSlot \u003d s;","lastModifiedDate":"2021-10-10"},{"lineNumber":62,"author":{"gitId":"IrvingHe000"},"content":"                break;","lastModifiedDate":"2021-10-10"},{"lineNumber":63,"author":{"gitId":"fullfatwasabi"},"content":"            }","lastModifiedDate":"2021-10-09"},{"lineNumber":64,"author":{"gitId":"fullfatwasabi"},"content":"        }","lastModifiedDate":"2021-10-09"},{"lineNumber":65,"author":{"gitId":"fullfatwasabi"},"content":"        return resultSlot;","lastModifiedDate":"2021-10-09"},{"lineNumber":66,"author":{"gitId":"fullfatwasabi"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":67,"author":{"gitId":"fullfatwasabi"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":68,"author":{"gitId":"fullfatwasabi"},"content":"    /**","lastModifiedDate":"2021-10-09"},{"lineNumber":69,"author":{"gitId":"fullfatwasabi"},"content":"     * Checks if the string provided matches with any Slot enum strings.","lastModifiedDate":"2021-10-09"},{"lineNumber":70,"author":{"gitId":"fullfatwasabi"},"content":"     *","lastModifiedDate":"2021-10-09"},{"lineNumber":71,"author":{"gitId":"fullfatwasabi"},"content":"     * @param test String to be checked.","lastModifiedDate":"2021-10-09"},{"lineNumber":72,"author":{"gitId":"fullfatwasabi"},"content":"     * @return boolean true if valid, false otherwise","lastModifiedDate":"2021-10-09"},{"lineNumber":73,"author":{"gitId":"fullfatwasabi"},"content":"     */","lastModifiedDate":"2021-10-09"},{"lineNumber":74,"author":{"gitId":"fullfatwasabi"},"content":"    public static boolean isValidSlot(String test) {","lastModifiedDate":"2021-10-09"},{"lineNumber":75,"author":{"gitId":"fullfatwasabi"},"content":"        String trimmedTest \u003d test.trim();","lastModifiedDate":"2021-10-09"},{"lineNumber":76,"author":{"gitId":"fullfatwasabi"},"content":"        for (Slot s : Slot.values()) {","lastModifiedDate":"2021-10-09"},{"lineNumber":77,"author":{"gitId":"IrvingHe000"},"content":"            String sString \u003d String.valueOf(s.getValue());","lastModifiedDate":"2021-10-10"},{"lineNumber":78,"author":{"gitId":"fullfatwasabi"},"content":"            if (sString.equals(trimmedTest)) {","lastModifiedDate":"2021-10-09"},{"lineNumber":79,"author":{"gitId":"fullfatwasabi"},"content":"                return true;","lastModifiedDate":"2021-10-09"},{"lineNumber":80,"author":{"gitId":"fullfatwasabi"},"content":"            }","lastModifiedDate":"2021-10-09"},{"lineNumber":81,"author":{"gitId":"fullfatwasabi"},"content":"        }","lastModifiedDate":"2021-10-09"},{"lineNumber":82,"author":{"gitId":"fullfatwasabi"},"content":"        return false;","lastModifiedDate":"2021-10-09"},{"lineNumber":83,"author":{"gitId":"fullfatwasabi"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":84,"author":{"gitId":"IrvingHe000"},"content":"}","lastModifiedDate":"2021-10-04"}],"authorContributionMap":{"fullfatwasabi":35,"IrvingHe000":49}},{"path":"src/main/java/seedu/address/model/person/Status.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"fullfatwasabi"},"content":"package seedu.address.model.person;","lastModifiedDate":"2021-10-09"},{"lineNumber":2,"author":{"gitId":"fullfatwasabi"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":3,"author":{"gitId":"fullfatwasabi"},"content":"/**","lastModifiedDate":"2021-10-09"},{"lineNumber":4,"author":{"gitId":"fullfatwasabi"},"content":" * This class stands for every possible status for a staff","lastModifiedDate":"2021-10-09"},{"lineNumber":5,"author":{"gitId":"fullfatwasabi"},"content":" */","lastModifiedDate":"2021-10-09"},{"lineNumber":6,"author":{"gitId":"Gabau"},"content":"public enum Status implements Field {","lastModifiedDate":"2021-10-09"},{"lineNumber":7,"author":{"gitId":"fullfatwasabi"},"content":"    //Can add more later","lastModifiedDate":"2021-10-09"},{"lineNumber":8,"author":{"gitId":"fullfatwasabi"},"content":"    FULL_TIME(\"fulltime\"), PART_TIME(\"parttime\"), NO_STATUS(\"nostatus\");","lastModifiedDate":"2021-10-09"},{"lineNumber":9,"author":{"gitId":"fullfatwasabi"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":10,"author":{"gitId":"fullfatwasabi"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2021-10-09"},{"lineNumber":11,"author":{"gitId":"fullfatwasabi"},"content":"            \"List of valid Statuses: fulltime, parttime, (nostatus if no status is assigned).\"; //cleanup next time","lastModifiedDate":"2021-10-09"},{"lineNumber":12,"author":{"gitId":"fullfatwasabi"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":13,"author":{"gitId":"fullfatwasabi"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":14,"author":{"gitId":"fullfatwasabi"},"content":"    private final String status;","lastModifiedDate":"2021-10-09"},{"lineNumber":15,"author":{"gitId":"fullfatwasabi"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":16,"author":{"gitId":"fullfatwasabi"},"content":"    Status(String status) {","lastModifiedDate":"2021-10-09"},{"lineNumber":17,"author":{"gitId":"fullfatwasabi"},"content":"        this.status \u003d status;","lastModifiedDate":"2021-10-09"},{"lineNumber":18,"author":{"gitId":"fullfatwasabi"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":19,"author":{"gitId":"fullfatwasabi"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":20,"author":{"gitId":"fullfatwasabi"},"content":"    /**","lastModifiedDate":"2021-10-09"},{"lineNumber":21,"author":{"gitId":"fullfatwasabi"},"content":"     * Gets the value of a status.","lastModifiedDate":"2021-10-09"},{"lineNumber":22,"author":{"gitId":"fullfatwasabi"},"content":"     *","lastModifiedDate":"2021-10-09"},{"lineNumber":23,"author":{"gitId":"fullfatwasabi"},"content":"     * @return The value of a status.","lastModifiedDate":"2021-10-09"},{"lineNumber":24,"author":{"gitId":"fullfatwasabi"},"content":"     */","lastModifiedDate":"2021-10-09"},{"lineNumber":25,"author":{"gitId":"fullfatwasabi"},"content":"    public String getValue() {","lastModifiedDate":"2021-10-09"},{"lineNumber":26,"author":{"gitId":"fullfatwasabi"},"content":"        return status;","lastModifiedDate":"2021-10-09"},{"lineNumber":27,"author":{"gitId":"fullfatwasabi"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":28,"author":{"gitId":"fullfatwasabi"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":29,"author":{"gitId":"fullfatwasabi"},"content":"    /**","lastModifiedDate":"2021-10-09"},{"lineNumber":30,"author":{"gitId":"fullfatwasabi"},"content":"     * Translate a string into a Status enum if the string matches any Status values. Trims string.","lastModifiedDate":"2021-10-09"},{"lineNumber":31,"author":{"gitId":"fullfatwasabi"},"content":"     *","lastModifiedDate":"2021-10-09"},{"lineNumber":32,"author":{"gitId":"fullfatwasabi"},"content":"     * @param string String to be translated.","lastModifiedDate":"2021-10-09"},{"lineNumber":33,"author":{"gitId":"fullfatwasabi"},"content":"     * @return The translated Status if the string is valid.","lastModifiedDate":"2021-10-09"},{"lineNumber":34,"author":{"gitId":"fullfatwasabi"},"content":"     * @throws IllegalArgumentException if the string is invalid.","lastModifiedDate":"2021-10-09"},{"lineNumber":35,"author":{"gitId":"fullfatwasabi"},"content":"     */","lastModifiedDate":"2021-10-09"},{"lineNumber":36,"author":{"gitId":"fullfatwasabi"},"content":"    public static Status translateStringToStatus(String string) throws IllegalArgumentException {","lastModifiedDate":"2021-10-09"},{"lineNumber":37,"author":{"gitId":"fullfatwasabi"},"content":"        String trimmedString \u003d string.trim();","lastModifiedDate":"2021-10-09"},{"lineNumber":38,"author":{"gitId":"fullfatwasabi"},"content":"        Status resultStatus \u003d null;","lastModifiedDate":"2021-10-09"},{"lineNumber":39,"author":{"gitId":"fullfatwasabi"},"content":"        for (Status r : Status.values()) {","lastModifiedDate":"2021-10-09"},{"lineNumber":40,"author":{"gitId":"fullfatwasabi"},"content":"            if (r.getValue().equalsIgnoreCase(trimmedString)) {","lastModifiedDate":"2021-10-09"},{"lineNumber":41,"author":{"gitId":"fullfatwasabi"},"content":"                resultStatus \u003d r;","lastModifiedDate":"2021-10-09"},{"lineNumber":42,"author":{"gitId":"fullfatwasabi"},"content":"            }","lastModifiedDate":"2021-10-09"},{"lineNumber":43,"author":{"gitId":"fullfatwasabi"},"content":"        }","lastModifiedDate":"2021-10-09"},{"lineNumber":44,"author":{"gitId":"fullfatwasabi"},"content":"        if (resultStatus \u003d\u003d null) {","lastModifiedDate":"2021-10-09"},{"lineNumber":45,"author":{"gitId":"Gabau"},"content":"            throw new IllegalArgumentException(Status.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-09"},{"lineNumber":46,"author":{"gitId":"fullfatwasabi"},"content":"        } else {","lastModifiedDate":"2021-10-09"},{"lineNumber":47,"author":{"gitId":"fullfatwasabi"},"content":"            return resultStatus;","lastModifiedDate":"2021-10-09"},{"lineNumber":48,"author":{"gitId":"fullfatwasabi"},"content":"        }","lastModifiedDate":"2021-10-09"},{"lineNumber":49,"author":{"gitId":"fullfatwasabi"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":50,"author":{"gitId":"fullfatwasabi"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":51,"author":{"gitId":"fullfatwasabi"},"content":"    /**","lastModifiedDate":"2021-10-09"},{"lineNumber":52,"author":{"gitId":"fullfatwasabi"},"content":"     * Returns if a given string is a valid Status.","lastModifiedDate":"2021-10-09"},{"lineNumber":53,"author":{"gitId":"fullfatwasabi"},"content":"     */","lastModifiedDate":"2021-10-09"},{"lineNumber":54,"author":{"gitId":"fullfatwasabi"},"content":"    public static boolean isValidStatus(String test) {","lastModifiedDate":"2021-10-09"},{"lineNumber":55,"author":{"gitId":"fullfatwasabi"},"content":"        String trimmedTest \u003d test.trim();","lastModifiedDate":"2021-10-09"},{"lineNumber":56,"author":{"gitId":"fullfatwasabi"},"content":"        for (Status r : Status.values()) {","lastModifiedDate":"2021-10-09"},{"lineNumber":57,"author":{"gitId":"fullfatwasabi"},"content":"            if (r.getValue().equalsIgnoreCase(trimmedTest)) {","lastModifiedDate":"2021-10-09"},{"lineNumber":58,"author":{"gitId":"fullfatwasabi"},"content":"                return true;","lastModifiedDate":"2021-10-09"},{"lineNumber":59,"author":{"gitId":"fullfatwasabi"},"content":"            }","lastModifiedDate":"2021-10-09"},{"lineNumber":60,"author":{"gitId":"fullfatwasabi"},"content":"        }","lastModifiedDate":"2021-10-09"},{"lineNumber":61,"author":{"gitId":"fullfatwasabi"},"content":"        return false;","lastModifiedDate":"2021-10-09"},{"lineNumber":62,"author":{"gitId":"fullfatwasabi"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":63,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":64,"author":{"gitId":"Gabau"},"content":"    @Override","lastModifiedDate":"2021-10-09"},{"lineNumber":65,"author":{"gitId":"Gabau"},"content":"    public String toString() {","lastModifiedDate":"2021-10-09"},{"lineNumber":66,"author":{"gitId":"Gabau"},"content":"        return status;","lastModifiedDate":"2021-10-09"},{"lineNumber":67,"author":{"gitId":"Gabau"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":68,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":69,"author":{"gitId":"fullfatwasabi"},"content":"}","lastModifiedDate":"2021-10-09"}],"authorContributionMap":{"Gabau":8,"fullfatwasabi":61}},{"path":"src/main/java/seedu/address/model/person/UniquePersonList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2016-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2018-01-10"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Iterator;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.DuplicatePersonException;","lastModifiedDate":"2017-06-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.PersonNotFoundException;","lastModifiedDate":"2017-06-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * A list of persons that enforces uniqueness between its elements and does not allow nulls.","lastModifiedDate":"2016-09-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * A person is considered unique by comparing using {@code Person#isSamePerson(Person)}. As such, adding and updating of","lastModifiedDate":"2018-04-19"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * persons uses Person#isSamePerson(Person) for equality so as to ensure that the person being added or updated is","lastModifiedDate":"2018-04-19"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * unique in terms of identity in the UniquePersonList. However, the removal of a person uses Person#equals(Object) so","lastModifiedDate":"2018-04-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * as to ensure that the person with exactly the same fields will be removed.","lastModifiedDate":"2018-04-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * Supports a minimal set of list operations.","lastModifiedDate":"2016-09-22"},{"lineNumber":22,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * @see Person#isSamePerson(Person)","lastModifiedDate":"2018-04-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class UniquePersonList implements Iterable\u003cPerson\u003e {","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final ObservableList\u003cPerson\u003e internalList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2016-10-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final ObservableList\u003cPerson\u003e internalUnmodifiableList \u003d","lastModifiedDate":"2018-12-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            FXCollections.unmodifiableObservableList(internalList);","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Returns true if the list contains an equivalent person as the given argument.","lastModifiedDate":"2016-09-22"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public boolean contains(Person toCheck) {","lastModifiedDate":"2018-01-10"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2017-05-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        return internalList.stream().anyMatch(toCheck::isSamePerson);","lastModifiedDate":"2018-04-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * Adds a person to the list.","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * The person must not already exist in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void add(Person toAdd) {","lastModifiedDate":"2018-08-07"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2017-05-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        if (contains(toAdd)) {","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            throw new DuplicatePersonException();","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        internalList.add(toAdd);","lastModifiedDate":"2018-01-10"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Replaces the person {@code target} in the list with {@code editedPerson}.","lastModifiedDate":"2017-06-07"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":54,"author":{"gitId":"IrvingHe000"},"content":"     * The person identity of {@code editedStaff} must not be the same as another existing person in the list.","lastModifiedDate":"2021-09-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":56,"author":{"gitId":"IrvingHe000"},"content":"    public void setPerson(Person target, Person editedStaff) {","lastModifiedDate":"2021-09-23"},{"lineNumber":57,"author":{"gitId":"IrvingHe000"},"content":"        requireAllNonNull(target, editedStaff);","lastModifiedDate":"2021-09-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        int index \u003d internalList.indexOf(target);","lastModifiedDate":"2017-06-07"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        if (index \u003d\u003d -1) {","lastModifiedDate":"2017-06-07"},{"lineNumber":61,"author":{"gitId":"-"},"content":"            throw new PersonNotFoundException();","lastModifiedDate":"2017-06-07"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-06-07"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-07"},{"lineNumber":64,"author":{"gitId":"IrvingHe000"},"content":"        if (!target.isSamePerson(editedStaff) \u0026\u0026 contains(editedStaff)) {","lastModifiedDate":"2021-09-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            throw new DuplicatePersonException();","lastModifiedDate":"2016-12-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":68,"author":{"gitId":"IrvingHe000"},"content":"        internalList.set(index, editedStaff);","lastModifiedDate":"2021-09-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * Removes the equivalent person from the list.","lastModifiedDate":"2016-08-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * The person must exist in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public void remove(Person toRemove) {","lastModifiedDate":"2018-08-07"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        requireNonNull(toRemove);","lastModifiedDate":"2017-05-15"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        if (!internalList.remove(toRemove)) {","lastModifiedDate":"2018-02-28"},{"lineNumber":78,"author":{"gitId":"-"},"content":"            throw new PersonNotFoundException();","lastModifiedDate":"2016-08-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public void setPersons(UniquePersonList replacement) {","lastModifiedDate":"2016-10-19"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        requireNonNull(replacement);","lastModifiedDate":"2018-08-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        internalList.setAll(replacement.internalList);","lastModifiedDate":"2018-08-14"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-19"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     * Replaces the contents of this list with {@code persons}.","lastModifiedDate":"2018-08-07"},{"lineNumber":89,"author":{"gitId":"IrvingHe000"},"content":"     * {@code staffs} must not contain duplicate persons.","lastModifiedDate":"2021-09-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":91,"author":{"gitId":"IrvingHe000"},"content":"    public void setPersons(List\u003cPerson\u003e staffs) {","lastModifiedDate":"2021-09-23"},{"lineNumber":92,"author":{"gitId":"IrvingHe000"},"content":"        requireAllNonNull(staffs);","lastModifiedDate":"2021-09-23"},{"lineNumber":93,"author":{"gitId":"IrvingHe000"},"content":"        if (!personsAreUnique(staffs)) {","lastModifiedDate":"2021-09-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"            throw new DuplicatePersonException();","lastModifiedDate":"2018-01-21"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-21"},{"lineNumber":97,"author":{"gitId":"IrvingHe000"},"content":"        internalList.setAll(staffs);","lastModifiedDate":"2021-09-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-09-01"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * Returns the backing list as an unmodifiable {@code ObservableList}.","lastModifiedDate":"2017-09-01"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-09-01"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e asUnmodifiableObservableList() {","lastModifiedDate":"2018-04-05"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        return internalUnmodifiableList;","lastModifiedDate":"2018-12-09"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    public Iterator\u003cPerson\u003e iterator() {","lastModifiedDate":"2016-08-24"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        return internalList.iterator();","lastModifiedDate":"2016-08-24"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-21"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-09-21"},{"lineNumber":115,"author":{"gitId":"-"},"content":"                || (other instanceof UniquePersonList // instanceof handles nulls","lastModifiedDate":"2016-09-21"},{"lineNumber":116,"author":{"gitId":"-"},"content":"                        \u0026\u0026 internalList.equals(((UniquePersonList) other).internalList));","lastModifiedDate":"2018-08-14"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-21"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        return internalList.hashCode();","lastModifiedDate":"2016-09-21"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":125,"author":{"gitId":"-"},"content":"     * Returns true if {@code persons} contains only unique persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":126,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":127,"author":{"gitId":"IrvingHe000"},"content":"    private boolean personsAreUnique(List\u003cPerson\u003e staffs) {","lastModifiedDate":"2021-09-23"},{"lineNumber":128,"author":{"gitId":"IrvingHe000"},"content":"        for (int i \u003d 0; i \u003c staffs.size() - 1; i++) {","lastModifiedDate":"2021-09-23"},{"lineNumber":129,"author":{"gitId":"IrvingHe000"},"content":"            for (int j \u003d i + 1; j \u003c staffs.size(); j++) {","lastModifiedDate":"2021-09-23"},{"lineNumber":130,"author":{"gitId":"IrvingHe000"},"content":"                if (staffs.get(i).isSamePerson(staffs.get(j))) {","lastModifiedDate":"2021-09-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"                    return false;","lastModifiedDate":"2018-04-19"},{"lineNumber":132,"author":{"gitId":"-"},"content":"                }","lastModifiedDate":"2018-04-19"},{"lineNumber":133,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-04-19"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        return true;","lastModifiedDate":"2018-04-19"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":137,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"-":123,"IrvingHe000":14}},{"path":"src/main/java/seedu/address/model/person/exceptions/DuplicateShiftException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"IrvingHe000"},"content":"package seedu.address.model.person.exceptions;","lastModifiedDate":"2021-10-10"},{"lineNumber":2,"author":{"gitId":"IrvingHe000"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":3,"author":{"gitId":"IrvingHe000"},"content":"/**","lastModifiedDate":"2021-10-10"},{"lineNumber":4,"author":{"gitId":"IrvingHe000"},"content":" * Represents an error caused by user wants to add a duplicate shift inside a staff\u0027s schedule.","lastModifiedDate":"2021-10-10"},{"lineNumber":5,"author":{"gitId":"IrvingHe000"},"content":" */","lastModifiedDate":"2021-10-10"},{"lineNumber":6,"author":{"gitId":"IrvingHe000"},"content":"public class DuplicateShiftException extends RuntimeException {","lastModifiedDate":"2021-10-10"},{"lineNumber":7,"author":{"gitId":"IrvingHe000"},"content":"    public DuplicateShiftException() {","lastModifiedDate":"2021-10-10"},{"lineNumber":8,"author":{"gitId":"IrvingHe000"},"content":"        super(\"Operation would result in duplicate shift for a staff.\");","lastModifiedDate":"2021-10-10"},{"lineNumber":9,"author":{"gitId":"IrvingHe000"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":10,"author":{"gitId":"IrvingHe000"},"content":"}","lastModifiedDate":"2021-10-10"}],"authorContributionMap":{"IrvingHe000":10}},{"path":"src/main/java/seedu/address/model/person/exceptions/NoShiftException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Tetrerox"},"content":"package seedu.address.model.person.exceptions;","lastModifiedDate":"2021-10-13"},{"lineNumber":2,"author":{"gitId":"Tetrerox"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":3,"author":{"gitId":"Tetrerox"},"content":"/**","lastModifiedDate":"2021-10-13"},{"lineNumber":4,"author":{"gitId":"Tetrerox"},"content":" * Represents an error caused when a user wants to delete a shift that does not exist for the staff.","lastModifiedDate":"2021-10-13"},{"lineNumber":5,"author":{"gitId":"Tetrerox"},"content":" */","lastModifiedDate":"2021-10-13"},{"lineNumber":6,"author":{"gitId":"Tetrerox"},"content":"public class NoShiftException extends RuntimeException {","lastModifiedDate":"2021-10-13"},{"lineNumber":7,"author":{"gitId":"Tetrerox"},"content":"    public NoShiftException() {","lastModifiedDate":"2021-10-13"},{"lineNumber":8,"author":{"gitId":"Tetrerox"},"content":"        super(\"Shift does not exist for the staff.\");","lastModifiedDate":"2021-10-13"},{"lineNumber":9,"author":{"gitId":"Tetrerox"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":10,"author":{"gitId":"Tetrerox"},"content":"}","lastModifiedDate":"2021-10-13"}],"authorContributionMap":{"Tetrerox":10}},{"path":"src/main/java/seedu/address/model/person/exceptions/PersonNotFoundException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person.exceptions;","lastModifiedDate":"2021-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2021-09-22"},{"lineNumber":4,"author":{"gitId":"IrvingHe000"},"content":" * Signals that the operation is unable to find the specified staff in the address book.","lastModifiedDate":"2021-10-10"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2021-09-22"},{"lineNumber":6,"author":{"gitId":"IrvingHe000"},"content":"public class PersonNotFoundException extends RuntimeException {","lastModifiedDate":"2021-10-10"},{"lineNumber":7,"author":{"gitId":"IrvingHe000"},"content":"    public PersonNotFoundException() {","lastModifiedDate":"2021-10-10"},{"lineNumber":8,"author":{"gitId":"IrvingHe000"},"content":"        super(\"Target person does not exist in the address book.\");","lastModifiedDate":"2021-10-10"},{"lineNumber":9,"author":{"gitId":"IrvingHe000"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":10,"author":{"gitId":"IrvingHe000"},"content":"}","lastModifiedDate":"2021-10-10"}],"authorContributionMap":{"-":4,"IrvingHe000":6}},{"path":"src/main/java/seedu/address/model/person/predicates/NameContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"mweeruien"},"content":"package seedu.address.model.person.predicates;","lastModifiedDate":"2021-10-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2017-06-12"},{"lineNumber":7,"author":{"gitId":"mweeruien"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2021-10-10"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Tests that a {@code Person}\u0027s {@code Name} matches any of the keywords given.","lastModifiedDate":"2018-01-10"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class NameContainsKeywordsPredicate implements Predicate\u003cPerson\u003e {","lastModifiedDate":"2018-01-10"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private final List\u003cString\u003e keywords;","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public NameContainsKeywordsPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public boolean test(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        return keywords.stream()","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"                .anyMatch(keyword -\u003e StringUtil.containsWordIgnoreCase(person.getName().fullName, keyword));","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"                || (other instanceof NameContainsKeywordsPredicate // instanceof handles nulls","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"                \u0026\u0026 keywords.equals(((NameContainsKeywordsPredicate) other).keywords)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"-":30,"mweeruien":2}},{"path":"src/main/java/seedu/address/model/person/predicates/StaffHasCorrectIndexPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"mweeruien"},"content":"package seedu.address.model.person.predicates;","lastModifiedDate":"2021-10-10"},{"lineNumber":2,"author":{"gitId":"mweeruien"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":3,"author":{"gitId":"mweeruien"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2021-10-10"},{"lineNumber":4,"author":{"gitId":"mweeruien"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":5,"author":{"gitId":"mweeruien"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-10-10"},{"lineNumber":6,"author":{"gitId":"mweeruien"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2021-10-10"},{"lineNumber":7,"author":{"gitId":"mweeruien"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":8,"author":{"gitId":"mweeruien"},"content":"/**","lastModifiedDate":"2021-10-10"},{"lineNumber":9,"author":{"gitId":"mweeruien"},"content":" * Tests that a {@code Person}\u0027s {@code Index} matches the index given.","lastModifiedDate":"2021-10-10"},{"lineNumber":10,"author":{"gitId":"mweeruien"},"content":" *","lastModifiedDate":"2021-10-10"},{"lineNumber":11,"author":{"gitId":"mweeruien"},"content":" * This class is used in FindCommand.","lastModifiedDate":"2021-10-10"},{"lineNumber":12,"author":{"gitId":"mweeruien"},"content":" */","lastModifiedDate":"2021-10-10"},{"lineNumber":13,"author":{"gitId":"mweeruien"},"content":"public class StaffHasCorrectIndexPredicate implements Predicate\u003cPerson\u003e {","lastModifiedDate":"2021-10-10"},{"lineNumber":14,"author":{"gitId":"mweeruien"},"content":"    private final int index;","lastModifiedDate":"2021-10-10"},{"lineNumber":15,"author":{"gitId":"mweeruien"},"content":"    private final Model model;","lastModifiedDate":"2021-10-10"},{"lineNumber":16,"author":{"gitId":"mweeruien"},"content":"    private final Person correctPerson;","lastModifiedDate":"2021-10-10"},{"lineNumber":17,"author":{"gitId":"mweeruien"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":18,"author":{"gitId":"mweeruien"},"content":"    /**","lastModifiedDate":"2021-10-10"},{"lineNumber":19,"author":{"gitId":"mweeruien"},"content":"     * Constructs a StaffHasCorrectIndexPredicate object which returns true if the person tested against is the same as","lastModifiedDate":"2021-10-10"},{"lineNumber":20,"author":{"gitId":"mweeruien"},"content":"     * the person corresponding to the index inputted.","lastModifiedDate":"2021-10-10"},{"lineNumber":21,"author":{"gitId":"mweeruien"},"content":"     *","lastModifiedDate":"2021-10-10"},{"lineNumber":22,"author":{"gitId":"mweeruien"},"content":"     * @param index The index that the user inputted.","lastModifiedDate":"2021-10-10"},{"lineNumber":23,"author":{"gitId":"mweeruien"},"content":"     * @param model The model containing the list of Persons who will be searched from.","lastModifiedDate":"2021-10-10"},{"lineNumber":24,"author":{"gitId":"mweeruien"},"content":"     */","lastModifiedDate":"2021-10-10"},{"lineNumber":25,"author":{"gitId":"mweeruien"},"content":"    public StaffHasCorrectIndexPredicate(int index, Model model) {","lastModifiedDate":"2021-10-10"},{"lineNumber":26,"author":{"gitId":"mweeruien"},"content":"        this.index \u003d index;","lastModifiedDate":"2021-10-10"},{"lineNumber":27,"author":{"gitId":"mweeruien"},"content":"        this.model \u003d model;","lastModifiedDate":"2021-10-10"},{"lineNumber":28,"author":{"gitId":"mweeruien"},"content":"        this.correctPerson \u003d model.getFilteredPersonListByIndex(index);","lastModifiedDate":"2021-10-10"},{"lineNumber":29,"author":{"gitId":"mweeruien"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":30,"author":{"gitId":"mweeruien"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":31,"author":{"gitId":"mweeruien"},"content":"    @Override","lastModifiedDate":"2021-10-10"},{"lineNumber":32,"author":{"gitId":"mweeruien"},"content":"    public boolean test(Person person) {","lastModifiedDate":"2021-10-10"},{"lineNumber":33,"author":{"gitId":"mweeruien"},"content":"        return correctPerson.isSamePerson(person);","lastModifiedDate":"2021-10-10"},{"lineNumber":34,"author":{"gitId":"mweeruien"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":35,"author":{"gitId":"mweeruien"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":36,"author":{"gitId":"mweeruien"},"content":"    /**","lastModifiedDate":"2021-10-10"},{"lineNumber":37,"author":{"gitId":"mweeruien"},"content":"     * Returns the index of a StaffHasCorrectIndexPredicate object.","lastModifiedDate":"2021-10-10"},{"lineNumber":38,"author":{"gitId":"mweeruien"},"content":"     *","lastModifiedDate":"2021-10-10"},{"lineNumber":39,"author":{"gitId":"mweeruien"},"content":"     * @return the index of a StaffHasCorrectIndexPredicate object.","lastModifiedDate":"2021-10-10"},{"lineNumber":40,"author":{"gitId":"mweeruien"},"content":"     */","lastModifiedDate":"2021-10-10"},{"lineNumber":41,"author":{"gitId":"mweeruien"},"content":"    public int getIndex() {","lastModifiedDate":"2021-10-10"},{"lineNumber":42,"author":{"gitId":"mweeruien"},"content":"        return this.index;","lastModifiedDate":"2021-10-10"},{"lineNumber":43,"author":{"gitId":"mweeruien"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":44,"author":{"gitId":"mweeruien"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":45,"author":{"gitId":"mweeruien"},"content":"    @Override","lastModifiedDate":"2021-10-10"},{"lineNumber":46,"author":{"gitId":"mweeruien"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-10"},{"lineNumber":47,"author":{"gitId":"mweeruien"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-10"},{"lineNumber":48,"author":{"gitId":"mweeruien"},"content":"                || (other instanceof StaffHasCorrectIndexPredicate // instanceof handles nulls","lastModifiedDate":"2021-10-10"},{"lineNumber":49,"author":{"gitId":"mweeruien"},"content":"                \u0026\u0026 index \u003d\u003d (((StaffHasCorrectIndexPredicate) other).getIndex())); // state check","lastModifiedDate":"2021-10-10"},{"lineNumber":50,"author":{"gitId":"mweeruien"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":51,"author":{"gitId":"mweeruien"},"content":"}","lastModifiedDate":"2021-10-10"}],"authorContributionMap":{"mweeruien":51}},{"path":"src/main/java/seedu/address/model/tag/Tag.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.tag;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"Gabau"},"content":"import seedu.address.model.person.Field;","lastModifiedDate":"2021-10-08"},{"lineNumber":7,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Represents a Tag in the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Guarantees: immutable; name is valid as declared in {@link #isValidTagName(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"Gabau"},"content":"public class Tag implements Field {","lastModifiedDate":"2021-10-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Tags names should be alphanumeric\";","lastModifiedDate":"2018-09-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"\\\\p{Alnum}+\";","lastModifiedDate":"2018-09-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public final String tagName;","lastModifiedDate":"2016-10-19"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * Constructs a {@code Tag}.","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * @param tagName A valid tag name.","lastModifiedDate":"2017-05-30"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public Tag(String tagName) {","lastModifiedDate":"2017-05-30"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        requireNonNull(tagName);","lastModifiedDate":"2017-05-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        checkArgument(isValidTagName(tagName), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        this.tagName \u003d tagName;","lastModifiedDate":"2017-05-30"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid tag name.","lastModifiedDate":"2016-09-22"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public static boolean isValidTagName(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                || (other instanceof Tag // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"                \u0026\u0026 tagName.equals(((Tag) other).tagName)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        return tagName.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * Format state as text for viewing.","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        return \u0027[\u0027 + tagName + \u0027]\u0027;","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"Gabau":3,"-":53}},{"path":"src/main/java/seedu/address/model/util/SampleDataUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.util;","lastModifiedDate":"2016-12-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-01-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-12-20"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2016-12-20"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2021-10-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2021-10-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2021-10-09"},{"lineNumber":12,"author":{"gitId":"Gabau"},"content":"import seedu.address.model.person.Period;","lastModifiedDate":"2021-10-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2021-10-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2021-10-09"},{"lineNumber":15,"author":{"gitId":"fullfatwasabi"},"content":"import seedu.address.model.person.Role;","lastModifiedDate":"2021-10-09"},{"lineNumber":16,"author":{"gitId":"fullfatwasabi"},"content":"import seedu.address.model.person.Salary;","lastModifiedDate":"2021-10-09"},{"lineNumber":17,"author":{"gitId":"fullfatwasabi"},"content":"import seedu.address.model.person.Status;","lastModifiedDate":"2021-10-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-14"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":20,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * Contains utility methods for populating {@code AddressBook} with sample data.","lastModifiedDate":"2017-08-16"},{"lineNumber":22,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"public class SampleDataUtil {","lastModifiedDate":"2016-12-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public static Person[] getSamplePersons() {","lastModifiedDate":"2021-09-22"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        return new Person[] {","lastModifiedDate":"2021-09-22"},{"lineNumber":26,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Alex Yeoh\"), new Phone(\"87438807\"), new Email(\"alexyeoh@example.com\"),","lastModifiedDate":"2021-09-22"},{"lineNumber":27,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":28,"author":{"gitId":"Gabau"},"content":"                new Address(\"Blk 30 Geylang Street 29, #06-40\"), getRoleSet(\"floor\"),","lastModifiedDate":"2021-10-15"},{"lineNumber":29,"author":{"gitId":"Gabau"},"content":"                    new Salary(\"1000000\"), Status.PART_TIME,","lastModifiedDate":"2021-10-15"},{"lineNumber":30,"author":{"gitId":"Gabau"},"content":"                    getTagSet(\"friends\"), getPeriodSet()),","lastModifiedDate":"2021-10-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Bernice Yu\"), new Phone(\"99272758\"), new Email(\"berniceyu@example.com\"),","lastModifiedDate":"2021-09-22"},{"lineNumber":32,"author":{"gitId":"-"},"content":"                new Address(\"Blk 30 Lorong 3 Serangoon Gardens, #07-18\"),","lastModifiedDate":"2021-10-15"},{"lineNumber":33,"author":{"gitId":"Gabau"},"content":"                    getRoleSet(\"kitchen\"), new Salary(\"600000\"),","lastModifiedDate":"2021-10-15"},{"lineNumber":34,"author":{"gitId":"Gabau"},"content":"                    Status.FULL_TIME, getTagSet(\"colleagues\", \"friends\"), getPeriodSet()),","lastModifiedDate":"2021-10-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Charlotte Oliveiro\"), new Phone(\"93210283\"), new Email(\"charlotte@example.com\"),","lastModifiedDate":"2021-09-22"},{"lineNumber":36,"author":{"gitId":"-"},"content":"                new Address(\"Blk 11 Ang Mo Kio Street 74, #11-04\"),","lastModifiedDate":"2021-10-15"},{"lineNumber":37,"author":{"gitId":"Gabau"},"content":"                    getRoleSet(\"bartender\"), new Salary(\"700000\"),","lastModifiedDate":"2021-10-15"},{"lineNumber":38,"author":{"gitId":"Gabau"},"content":"                    Status.PART_TIME, getTagSet(\"neighbours\"), getPeriodSet()),","lastModifiedDate":"2021-10-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            new Person(new Name(\"David Li\"), new Phone(\"91031282\"), new Email(\"lidavid@example.com\"),","lastModifiedDate":"2021-09-22"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                new Address(\"Blk 436 Serangoon Gardens Street 26, #16-43\"),","lastModifiedDate":"2021-10-15"},{"lineNumber":41,"author":{"gitId":"Gabau"},"content":"                    getRoleSet(\"kitchen\"), new Salary(\"800000\"),","lastModifiedDate":"2021-10-15"},{"lineNumber":42,"author":{"gitId":"Gabau"},"content":"                    Status.FULL_TIME, getTagSet(\"family\"), getPeriodSet()),","lastModifiedDate":"2021-10-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Irfan Ibrahim\"), new Phone(\"92492021\"), new Email(\"irfan@example.com\"),","lastModifiedDate":"2021-09-22"},{"lineNumber":44,"author":{"gitId":"-"},"content":"                new Address(\"Blk 47 Tampines Street 20, #17-35\"),","lastModifiedDate":"2021-10-15"},{"lineNumber":45,"author":{"gitId":"Gabau"},"content":"                    getRoleSet(\"kitchen\"), new Salary(\"800000\"), Status.PART_TIME,","lastModifiedDate":"2021-10-15"},{"lineNumber":46,"author":{"gitId":"Gabau"},"content":"                    getTagSet(\"classmates\"), getPeriodSet()),","lastModifiedDate":"2021-10-12"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Roy Balakrishnan\"), new Phone(\"92624417\"), new Email(\"royb@example.com\"),","lastModifiedDate":"2021-09-22"},{"lineNumber":48,"author":{"gitId":"-"},"content":"                new Address(\"Blk 45 Aljunied Street 85, #11-31\"),","lastModifiedDate":"2021-10-15"},{"lineNumber":49,"author":{"gitId":"Gabau"},"content":"                    getRoleSet(\"floor\"), new Salary(\"700000\"), Status.PART_TIME,","lastModifiedDate":"2021-10-15"},{"lineNumber":50,"author":{"gitId":"Gabau"},"content":"                    getTagSet(\"colleagues\"), getPeriodSet())","lastModifiedDate":"2021-10-12"},{"lineNumber":51,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        };","lastModifiedDate":"2016-12-20"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public static ReadOnlyAddressBook getSampleAddressBook() {","lastModifiedDate":"2016-12-20"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        AddressBook sampleAb \u003d new AddressBook();","lastModifiedDate":"2017-04-07"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        for (Person samplePerson : getSamplePersons()) {","lastModifiedDate":"2021-09-22"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            sampleAb.addPerson(samplePerson);","lastModifiedDate":"2021-09-22"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        return sampleAb;","lastModifiedDate":"2017-04-07"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * Returns a tag set containing the list of strings given.","lastModifiedDate":"2017-03-14"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-14"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e getTagSet(String... strings) {","lastModifiedDate":"2017-05-30"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        return Arrays.stream(strings)","lastModifiedDate":"2018-01-21"},{"lineNumber":68,"author":{"gitId":"-"},"content":"                .map(Tag::new)","lastModifiedDate":"2018-01-21"},{"lineNumber":69,"author":{"gitId":"-"},"content":"                .collect(Collectors.toSet());","lastModifiedDate":"2018-01-21"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-14"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":72,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":73,"author":{"gitId":"Gabau"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":74,"author":{"gitId":"Gabau"},"content":"     * Returns a period set containing the list of strings given.","lastModifiedDate":"2021-10-12"},{"lineNumber":75,"author":{"gitId":"Gabau"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":76,"author":{"gitId":"Gabau"},"content":"    public static Set\u003cPeriod\u003e getPeriodSet(String ... strings) {","lastModifiedDate":"2021-10-12"},{"lineNumber":77,"author":{"gitId":"Gabau"},"content":"        return Arrays.stream(strings)","lastModifiedDate":"2021-10-12"},{"lineNumber":78,"author":{"gitId":"Gabau"},"content":"                .map(Period::transformStringToPeriod)","lastModifiedDate":"2021-10-12"},{"lineNumber":79,"author":{"gitId":"Gabau"},"content":"                .collect(Collectors.toSet());","lastModifiedDate":"2021-10-12"},{"lineNumber":80,"author":{"gitId":"Gabau"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":81,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":82,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":83,"author":{"gitId":"fullfatwasabi"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":84,"author":{"gitId":"fullfatwasabi"},"content":"     * Returns a role set containing the list of strings given.","lastModifiedDate":"2021-10-12"},{"lineNumber":85,"author":{"gitId":"fullfatwasabi"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":86,"author":{"gitId":"fullfatwasabi"},"content":"    public static Set\u003cRole\u003e getRoleSet(String... strings) {","lastModifiedDate":"2021-10-12"},{"lineNumber":87,"author":{"gitId":"fullfatwasabi"},"content":"        return Arrays.stream(strings)","lastModifiedDate":"2021-10-12"},{"lineNumber":88,"author":{"gitId":"fullfatwasabi"},"content":"                .map(Role::translateStringToRole)","lastModifiedDate":"2021-10-12"},{"lineNumber":89,"author":{"gitId":"fullfatwasabi"},"content":"                .collect(Collectors.toSet());","lastModifiedDate":"2021-10-12"},{"lineNumber":90,"author":{"gitId":"fullfatwasabi"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":91,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":92,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-20"}],"authorContributionMap":{"Gabau":28,"fullfatwasabi":11,"-":53}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedPeriod.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Gabau"},"content":"package seedu.address.storage;","lastModifiedDate":"2021-10-12"},{"lineNumber":2,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":3,"author":{"gitId":"Gabau"},"content":"import static seedu.address.model.person.Period.isValidPeriodString;","lastModifiedDate":"2021-10-12"},{"lineNumber":4,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":5,"author":{"gitId":"Gabau"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2021-10-12"},{"lineNumber":6,"author":{"gitId":"Gabau"},"content":"import com.fasterxml.jackson.annotation.JsonValue;","lastModifiedDate":"2021-10-12"},{"lineNumber":7,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":8,"author":{"gitId":"Gabau"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2021-10-12"},{"lineNumber":9,"author":{"gitId":"Gabau"},"content":"import seedu.address.model.person.Period;","lastModifiedDate":"2021-10-12"},{"lineNumber":10,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":11,"author":{"gitId":"Gabau"},"content":"/**","lastModifiedDate":"2021-10-12"},{"lineNumber":12,"author":{"gitId":"Gabau"},"content":" * Json friendly version of {@link Period}","lastModifiedDate":"2021-10-12"},{"lineNumber":13,"author":{"gitId":"Gabau"},"content":" */","lastModifiedDate":"2021-10-12"},{"lineNumber":14,"author":{"gitId":"Gabau"},"content":"public class JsonAdaptedPeriod {","lastModifiedDate":"2021-10-12"},{"lineNumber":15,"author":{"gitId":"Gabau"},"content":"    private final String period;","lastModifiedDate":"2021-10-12"},{"lineNumber":16,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":17,"author":{"gitId":"Gabau"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":18,"author":{"gitId":"Gabau"},"content":"     * Constructs a {@code JsonAdaptedPeriod} with the given string source.","lastModifiedDate":"2021-10-12"},{"lineNumber":19,"author":{"gitId":"Gabau"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":20,"author":{"gitId":"Gabau"},"content":"    @JsonCreator","lastModifiedDate":"2021-10-12"},{"lineNumber":21,"author":{"gitId":"Gabau"},"content":"    public JsonAdaptedPeriod(String period) {","lastModifiedDate":"2021-10-12"},{"lineNumber":22,"author":{"gitId":"Gabau"},"content":"        this.period \u003d period;","lastModifiedDate":"2021-10-12"},{"lineNumber":23,"author":{"gitId":"Gabau"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":24,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":25,"author":{"gitId":"Gabau"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":26,"author":{"gitId":"Gabau"},"content":"     * Converts a given {@code Period} into this class for Jackson use.","lastModifiedDate":"2021-10-12"},{"lineNumber":27,"author":{"gitId":"Gabau"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":28,"author":{"gitId":"Gabau"},"content":"    public JsonAdaptedPeriod(Period period) {","lastModifiedDate":"2021-10-12"},{"lineNumber":29,"author":{"gitId":"Gabau"},"content":"        this.period \u003d period.toString();","lastModifiedDate":"2021-10-12"},{"lineNumber":30,"author":{"gitId":"Gabau"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":31,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":32,"author":{"gitId":"Gabau"},"content":"    @JsonValue","lastModifiedDate":"2021-10-12"},{"lineNumber":33,"author":{"gitId":"Gabau"},"content":"    public String getPeriodName() {","lastModifiedDate":"2021-10-12"},{"lineNumber":34,"author":{"gitId":"Gabau"},"content":"        return period;","lastModifiedDate":"2021-10-12"},{"lineNumber":35,"author":{"gitId":"Gabau"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":36,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":37,"author":{"gitId":"Gabau"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":38,"author":{"gitId":"Gabau"},"content":"     * Converts this Jackson-friendly adapted Period object into the model\u0027s {@code Period} object.","lastModifiedDate":"2021-10-12"},{"lineNumber":39,"author":{"gitId":"Gabau"},"content":"     *","lastModifiedDate":"2021-10-12"},{"lineNumber":40,"author":{"gitId":"Gabau"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted tag.","lastModifiedDate":"2021-10-12"},{"lineNumber":41,"author":{"gitId":"Gabau"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":42,"author":{"gitId":"Gabau"},"content":"    public Period toModelType() throws IllegalValueException {","lastModifiedDate":"2021-10-12"},{"lineNumber":43,"author":{"gitId":"Gabau"},"content":"        if (!isValidPeriodString(period)) {","lastModifiedDate":"2021-10-12"},{"lineNumber":44,"author":{"gitId":"Gabau"},"content":"            throw new IllegalArgumentException(Period.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-12"},{"lineNumber":45,"author":{"gitId":"Gabau"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":46,"author":{"gitId":"Gabau"},"content":"        return Period.transformStringToPeriod(period);","lastModifiedDate":"2021-10-12"},{"lineNumber":47,"author":{"gitId":"Gabau"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":48,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":49,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":50,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":51,"author":{"gitId":"Gabau"},"content":"}","lastModifiedDate":"2021-10-12"}],"authorContributionMap":{"Gabau":51}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedPerson.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2021-10-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2021-10-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2021-10-09"},{"lineNumber":16,"author":{"gitId":"Gabau"},"content":"import seedu.address.model.person.Period;","lastModifiedDate":"2021-10-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2021-10-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2021-10-09"},{"lineNumber":19,"author":{"gitId":"fullfatwasabi"},"content":"import seedu.address.model.person.Role;","lastModifiedDate":"2021-10-09"},{"lineNumber":20,"author":{"gitId":"fullfatwasabi"},"content":"import seedu.address.model.person.Salary;","lastModifiedDate":"2021-10-09"},{"lineNumber":21,"author":{"gitId":"fullfatwasabi"},"content":"import seedu.address.model.person.Schedule;","lastModifiedDate":"2021-10-09"},{"lineNumber":22,"author":{"gitId":"fullfatwasabi"},"content":"import seedu.address.model.person.Status;","lastModifiedDate":"2021-10-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":" * Jackson-friendly version of {@link Person}.","lastModifiedDate":"2021-09-22"},{"lineNumber":28,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"class JsonAdaptedPerson {","lastModifiedDate":"2021-09-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Person\u0027s %s field is missing!\";","lastModifiedDate":"2021-09-22"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private final String name;","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private final String phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private final String email;","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private final String address;","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"fullfatwasabi"},"content":"    private final List\u003cJsonAdaptedRole\u003e roles \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-12"},{"lineNumber":38,"author":{"gitId":"fullfatwasabi"},"content":"    private final String salary;","lastModifiedDate":"2021-10-09"},{"lineNumber":39,"author":{"gitId":"fullfatwasabi"},"content":"    private final String status;","lastModifiedDate":"2021-10-09"},{"lineNumber":40,"author":{"gitId":"fullfatwasabi"},"content":"    private final String schedule;","lastModifiedDate":"2021-10-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private final List\u003cJsonAdaptedTag\u003e tagged \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-12"},{"lineNumber":42,"author":{"gitId":"Gabau"},"content":"    private final List\u003cJsonAdaptedPeriod\u003e absentDates \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * Constructs a {@code JsonAdaptedPerson} with the given person details.","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"fullfatwasabi"},"content":"    public JsonAdaptedPerson(@JsonProperty(\"name\") String name,","lastModifiedDate":"2021-10-09"},{"lineNumber":49,"author":{"gitId":"fullfatwasabi"},"content":"            @JsonProperty(\"phone\") String phone, @JsonProperty(\"email\") String email,","lastModifiedDate":"2021-10-09"},{"lineNumber":50,"author":{"gitId":"fullfatwasabi"},"content":"            @JsonProperty(\"address\") String address, @JsonProperty(\"role\") List\u003cJsonAdaptedRole\u003e roles,","lastModifiedDate":"2021-10-12"},{"lineNumber":51,"author":{"gitId":"fullfatwasabi"},"content":"            @JsonProperty(\"salary\") String salary, @JsonProperty(\"status\") String status,","lastModifiedDate":"2021-10-09"},{"lineNumber":52,"author":{"gitId":"Gabau"},"content":"            @JsonProperty(\"tagged\") List\u003cJsonAdaptedTag\u003e tagged, @JsonProperty(\"schedule\") String schedule,","lastModifiedDate":"2021-10-12"},{"lineNumber":53,"author":{"gitId":"Gabau"},"content":"            @JsonProperty(\"absentDates\") List\u003cJsonAdaptedPeriod\u003e absentDates) {","lastModifiedDate":"2021-10-12"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        this.email \u003d email;","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        this.address \u003d address;","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"fullfatwasabi"},"content":"        if (roles !\u003d null) {","lastModifiedDate":"2021-10-12"},{"lineNumber":59,"author":{"gitId":"fullfatwasabi"},"content":"            this.roles.addAll(roles);","lastModifiedDate":"2021-10-12"},{"lineNumber":60,"author":{"gitId":"fullfatwasabi"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":61,"author":{"gitId":"fullfatwasabi"},"content":"        this.salary \u003d salary;","lastModifiedDate":"2021-10-09"},{"lineNumber":62,"author":{"gitId":"fullfatwasabi"},"content":"        this.status \u003d status;","lastModifiedDate":"2021-10-09"},{"lineNumber":63,"author":{"gitId":"Gabau"},"content":"        this.schedule \u003d schedule;","lastModifiedDate":"2021-10-12"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        if (tagged !\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            this.tagged.addAll(tagged);","lastModifiedDate":"2018-08-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"Gabau"},"content":"        if (absentDates !\u003d null) {","lastModifiedDate":"2021-10-12"},{"lineNumber":68,"author":{"gitId":"Gabau"},"content":"            this.absentDates.addAll(absentDates);","lastModifiedDate":"2021-10-12"},{"lineNumber":69,"author":{"gitId":"Gabau"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":70,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":71,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     * Converts a given {@code Person} into this class for Jackson use.","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public JsonAdaptedPerson(Person source) {","lastModifiedDate":"2021-09-22"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        name \u003d source.getName().fullName;","lastModifiedDate":"2018-08-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        phone \u003d source.getPhone().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        email \u003d source.getEmail().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        address \u003d source.getAddress().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":82,"author":{"gitId":"fullfatwasabi"},"content":"        roles.addAll(source.getRoles().stream()","lastModifiedDate":"2021-10-12"},{"lineNumber":83,"author":{"gitId":"fullfatwasabi"},"content":"                .map(JsonAdaptedRole::new)","lastModifiedDate":"2021-10-12"},{"lineNumber":84,"author":{"gitId":"fullfatwasabi"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2021-10-12"},{"lineNumber":85,"author":{"gitId":"fullfatwasabi"},"content":"        salary \u003d source.getSalary().toString();","lastModifiedDate":"2021-10-09"},{"lineNumber":86,"author":{"gitId":"fullfatwasabi"},"content":"        status \u003d source.getStatus().getValue();","lastModifiedDate":"2021-10-09"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        tagged.addAll(source.getTags().stream()","lastModifiedDate":"2018-08-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"                .map(JsonAdaptedTag::new)","lastModifiedDate":"2018-08-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2018-08-13"},{"lineNumber":90,"author":{"gitId":"Gabau"},"content":"        absentDates.addAll(source.getAbsentDates().stream()","lastModifiedDate":"2021-10-12"},{"lineNumber":91,"author":{"gitId":"Gabau"},"content":"                .map(JsonAdaptedPeriod::new)","lastModifiedDate":"2021-10-12"},{"lineNumber":92,"author":{"gitId":"Gabau"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2021-10-12"},{"lineNumber":93,"author":{"gitId":"fullfatwasabi"},"content":"        schedule \u003d source.getSchedule().toString();","lastModifiedDate":"2021-10-09"},{"lineNumber":94,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     * Converts this Jackson-friendly adapted person object into the model\u0027s {@code Person} object.","lastModifiedDate":"2018-08-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted person.","lastModifiedDate":"2018-08-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    public Person toModelType() throws IllegalValueException {","lastModifiedDate":"2021-09-22"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        final List\u003cTag\u003e personTags \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2018-08-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        for (JsonAdaptedTag tag : tagged) {","lastModifiedDate":"2018-08-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"            personTags.add(tag.toModelType());","lastModifiedDate":"2018-08-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":108,"author":{"gitId":"Gabau"},"content":"        final List\u003cPeriod\u003e personAbsentPeriods \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-12"},{"lineNumber":109,"author":{"gitId":"Gabau"},"content":"        for (JsonAdaptedPeriod period : absentDates) {","lastModifiedDate":"2021-10-12"},{"lineNumber":110,"author":{"gitId":"Gabau"},"content":"            personAbsentPeriods.add(period.toModelType());","lastModifiedDate":"2021-10-12"},{"lineNumber":111,"author":{"gitId":"Gabau"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":112,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":113,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":114,"author":{"gitId":"fullfatwasabi"},"content":"        final List\u003cRole\u003e personRoles \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-12"},{"lineNumber":115,"author":{"gitId":"fullfatwasabi"},"content":"        for (JsonAdaptedRole role : roles) {","lastModifiedDate":"2021-10-12"},{"lineNumber":116,"author":{"gitId":"fullfatwasabi"},"content":"            personRoles.add(role.toModelType());","lastModifiedDate":"2021-10-12"},{"lineNumber":117,"author":{"gitId":"fullfatwasabi"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":118,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        if (name \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":120,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(name)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":123,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        final Name modelName \u003d new Name(name);","lastModifiedDate":"2018-08-13"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        if (phone \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":128,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(phone)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":131,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        final Phone modelPhone \u003d new Phone(phone);","lastModifiedDate":"2018-08-13"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        if (email \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":136,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        if (!Email.isValidEmail(email)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":139,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        final Email modelEmail \u003d new Email(email);","lastModifiedDate":"2018-08-13"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        if (address \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":144,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Address.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        if (!Address.isValidAddress(address)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":147,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        final Address modelAddress \u003d new Address(address);","lastModifiedDate":"2018-08-13"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":151,"author":{"gitId":"fullfatwasabi"},"content":"        final Set\u003cRole\u003e modelRoles \u003d new HashSet\u003c\u003e(personRoles);","lastModifiedDate":"2021-10-12"},{"lineNumber":152,"author":{"gitId":"fullfatwasabi"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":153,"author":{"gitId":"fullfatwasabi"},"content":"        if (salary \u003d\u003d null) {","lastModifiedDate":"2021-10-09"},{"lineNumber":154,"author":{"gitId":"fullfatwasabi"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Salary.class.getSimpleName()));","lastModifiedDate":"2021-10-09"},{"lineNumber":155,"author":{"gitId":"fullfatwasabi"},"content":"        }","lastModifiedDate":"2021-10-09"},{"lineNumber":156,"author":{"gitId":"fullfatwasabi"},"content":"        if (!Salary.isValidSalary(salary)) {","lastModifiedDate":"2021-10-09"},{"lineNumber":157,"author":{"gitId":"fullfatwasabi"},"content":"            throw new IllegalValueException(Salary.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-09"},{"lineNumber":158,"author":{"gitId":"fullfatwasabi"},"content":"        }","lastModifiedDate":"2021-10-09"},{"lineNumber":159,"author":{"gitId":"fullfatwasabi"},"content":"        final Salary modelSalary \u003d new Salary(salary);","lastModifiedDate":"2021-10-09"},{"lineNumber":160,"author":{"gitId":"fullfatwasabi"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":161,"author":{"gitId":"fullfatwasabi"},"content":"        if (status \u003d\u003d null) {","lastModifiedDate":"2021-10-09"},{"lineNumber":162,"author":{"gitId":"fullfatwasabi"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Status.class.getSimpleName()));","lastModifiedDate":"2021-10-09"},{"lineNumber":163,"author":{"gitId":"fullfatwasabi"},"content":"        }","lastModifiedDate":"2021-10-09"},{"lineNumber":164,"author":{"gitId":"fullfatwasabi"},"content":"        if (!Status.isValidStatus(status)) {","lastModifiedDate":"2021-10-09"},{"lineNumber":165,"author":{"gitId":"fullfatwasabi"},"content":"            throw new IllegalValueException(Status.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-09"},{"lineNumber":166,"author":{"gitId":"fullfatwasabi"},"content":"        }","lastModifiedDate":"2021-10-09"},{"lineNumber":167,"author":{"gitId":"fullfatwasabi"},"content":"        final Status modelStatus \u003d Status.translateStringToStatus(status);","lastModifiedDate":"2021-10-09"},{"lineNumber":168,"author":{"gitId":"fullfatwasabi"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        final Set\u003cTag\u003e modelTags \u003d new HashSet\u003c\u003e(personTags);","lastModifiedDate":"2018-08-13"},{"lineNumber":170,"author":{"gitId":"Gabau"},"content":"        final Set\u003cPeriod\u003e modelPeriods \u003d new HashSet\u003c\u003e(personAbsentPeriods);","lastModifiedDate":"2021-10-12"},{"lineNumber":171,"author":{"gitId":"fullfatwasabi"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":172,"author":{"gitId":"fullfatwasabi"},"content":"        if (schedule \u003d\u003d null) {","lastModifiedDate":"2021-10-09"},{"lineNumber":173,"author":{"gitId":"fullfatwasabi"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2021-10-09"},{"lineNumber":174,"author":{"gitId":"fullfatwasabi"},"content":"                    Schedule.class.getSimpleName()));","lastModifiedDate":"2021-10-09"},{"lineNumber":175,"author":{"gitId":"fullfatwasabi"},"content":"        }","lastModifiedDate":"2021-10-09"},{"lineNumber":176,"author":{"gitId":"IrvingHe000"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":177,"author":{"gitId":"IrvingHe000"},"content":"        if (!Schedule.isValidSchedule(schedule.trim())) {","lastModifiedDate":"2021-10-10"},{"lineNumber":178,"author":{"gitId":"fullfatwasabi"},"content":"            throw new IllegalValueException(Schedule.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-09"},{"lineNumber":179,"author":{"gitId":"fullfatwasabi"},"content":"        }","lastModifiedDate":"2021-10-09"},{"lineNumber":180,"author":{"gitId":"fullfatwasabi"},"content":"        Schedule modelSchedule;","lastModifiedDate":"2021-10-09"},{"lineNumber":181,"author":{"gitId":"IrvingHe000"},"content":"        if (schedule.trim().equals(\"\")) {","lastModifiedDate":"2021-10-10"},{"lineNumber":182,"author":{"gitId":"fullfatwasabi"},"content":"            modelSchedule \u003d new Schedule();","lastModifiedDate":"2021-10-09"},{"lineNumber":183,"author":{"gitId":"fullfatwasabi"},"content":"        } else {","lastModifiedDate":"2021-10-09"},{"lineNumber":184,"author":{"gitId":"IrvingHe000"},"content":"            modelSchedule \u003d new Schedule(schedule.trim());","lastModifiedDate":"2021-10-10"},{"lineNumber":185,"author":{"gitId":"fullfatwasabi"},"content":"        }","lastModifiedDate":"2021-10-09"},{"lineNumber":186,"author":{"gitId":"IrvingHe000"},"content":"        Person p \u003d new Person(modelName, modelPhone, modelEmail,","lastModifiedDate":"2021-10-10"},{"lineNumber":187,"author":{"gitId":"Gabau"},"content":"                modelAddress, modelRoles, modelSalary, modelStatus, modelTags, modelPeriods);","lastModifiedDate":"2021-10-15"},{"lineNumber":188,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":189,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":190,"author":{"gitId":"IrvingHe000"},"content":"        p.setSchedule(modelSchedule);","lastModifiedDate":"2021-10-10"},{"lineNumber":191,"author":{"gitId":"IrvingHe000"},"content":"        return p;","lastModifiedDate":"2021-10-10"},{"lineNumber":192,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":194,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"Gabau":26,"fullfatwasabi":56,"-":105,"IrvingHe000":7}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedRole.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"fullfatwasabi"},"content":"package seedu.address.storage;","lastModifiedDate":"2021-10-12"},{"lineNumber":2,"author":{"gitId":"fullfatwasabi"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":3,"author":{"gitId":"fullfatwasabi"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2021-10-12"},{"lineNumber":4,"author":{"gitId":"fullfatwasabi"},"content":"import com.fasterxml.jackson.annotation.JsonValue;","lastModifiedDate":"2021-10-12"},{"lineNumber":5,"author":{"gitId":"fullfatwasabi"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":6,"author":{"gitId":"fullfatwasabi"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2021-10-12"},{"lineNumber":7,"author":{"gitId":"fullfatwasabi"},"content":"import seedu.address.model.person.Role;","lastModifiedDate":"2021-10-12"},{"lineNumber":8,"author":{"gitId":"fullfatwasabi"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":9,"author":{"gitId":"fullfatwasabi"},"content":"/**","lastModifiedDate":"2021-10-12"},{"lineNumber":10,"author":{"gitId":"fullfatwasabi"},"content":" * Jackson-friendly version of {@link Role}.","lastModifiedDate":"2021-10-12"},{"lineNumber":11,"author":{"gitId":"fullfatwasabi"},"content":" */","lastModifiedDate":"2021-10-12"},{"lineNumber":12,"author":{"gitId":"fullfatwasabi"},"content":"class JsonAdaptedRole {","lastModifiedDate":"2021-10-12"},{"lineNumber":13,"author":{"gitId":"fullfatwasabi"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":14,"author":{"gitId":"fullfatwasabi"},"content":"    private final String roleName;","lastModifiedDate":"2021-10-12"},{"lineNumber":15,"author":{"gitId":"fullfatwasabi"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":16,"author":{"gitId":"fullfatwasabi"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":17,"author":{"gitId":"fullfatwasabi"},"content":"     * Constructs a {@code JsonAdaptedRole} with the given {@code roleName}.","lastModifiedDate":"2021-10-12"},{"lineNumber":18,"author":{"gitId":"fullfatwasabi"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":19,"author":{"gitId":"fullfatwasabi"},"content":"    @JsonCreator","lastModifiedDate":"2021-10-12"},{"lineNumber":20,"author":{"gitId":"fullfatwasabi"},"content":"    public JsonAdaptedRole(String roleName) {","lastModifiedDate":"2021-10-12"},{"lineNumber":21,"author":{"gitId":"fullfatwasabi"},"content":"        this.roleName \u003d roleName;","lastModifiedDate":"2021-10-12"},{"lineNumber":22,"author":{"gitId":"fullfatwasabi"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":23,"author":{"gitId":"fullfatwasabi"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":24,"author":{"gitId":"fullfatwasabi"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":25,"author":{"gitId":"fullfatwasabi"},"content":"     * Converts a given {@code Role} into this class for Jackson use.","lastModifiedDate":"2021-10-12"},{"lineNumber":26,"author":{"gitId":"fullfatwasabi"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":27,"author":{"gitId":"fullfatwasabi"},"content":"    public JsonAdaptedRole(Role source) {","lastModifiedDate":"2021-10-12"},{"lineNumber":28,"author":{"gitId":"fullfatwasabi"},"content":"        roleName \u003d source.toString();","lastModifiedDate":"2021-10-12"},{"lineNumber":29,"author":{"gitId":"fullfatwasabi"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":30,"author":{"gitId":"fullfatwasabi"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":31,"author":{"gitId":"fullfatwasabi"},"content":"    @JsonValue","lastModifiedDate":"2021-10-12"},{"lineNumber":32,"author":{"gitId":"fullfatwasabi"},"content":"    public String getRoleName() {","lastModifiedDate":"2021-10-12"},{"lineNumber":33,"author":{"gitId":"fullfatwasabi"},"content":"        return roleName;","lastModifiedDate":"2021-10-12"},{"lineNumber":34,"author":{"gitId":"fullfatwasabi"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":35,"author":{"gitId":"fullfatwasabi"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":36,"author":{"gitId":"fullfatwasabi"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":37,"author":{"gitId":"fullfatwasabi"},"content":"     * Converts this Jackson-friendly adapted role object into the model\u0027s {@code Role} object.","lastModifiedDate":"2021-10-12"},{"lineNumber":38,"author":{"gitId":"fullfatwasabi"},"content":"     *","lastModifiedDate":"2021-10-12"},{"lineNumber":39,"author":{"gitId":"fullfatwasabi"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted role.","lastModifiedDate":"2021-10-12"},{"lineNumber":40,"author":{"gitId":"fullfatwasabi"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":41,"author":{"gitId":"fullfatwasabi"},"content":"    public Role toModelType() throws IllegalValueException {","lastModifiedDate":"2021-10-12"},{"lineNumber":42,"author":{"gitId":"fullfatwasabi"},"content":"        if (!Role.isValidRole(roleName)) {","lastModifiedDate":"2021-10-12"},{"lineNumber":43,"author":{"gitId":"fullfatwasabi"},"content":"            throw new IllegalValueException(Role.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-12"},{"lineNumber":44,"author":{"gitId":"fullfatwasabi"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":45,"author":{"gitId":"fullfatwasabi"},"content":"        return Role.translateStringToRole(roleName);","lastModifiedDate":"2021-10-12"},{"lineNumber":46,"author":{"gitId":"fullfatwasabi"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":47,"author":{"gitId":"fullfatwasabi"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":48,"author":{"gitId":"fullfatwasabi"},"content":"}","lastModifiedDate":"2021-10-12"}],"authorContributionMap":{"fullfatwasabi":48}},{"path":"src/main/java/seedu/address/ui/PersonCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Comparator;","lastModifiedDate":"2019-01-02"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-01-02"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-09-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2016-09-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.layout.FlowPane;","lastModifiedDate":"2016-12-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2016-09-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":11,"author":{"gitId":"fullfatwasabi"},"content":"import seedu.address.model.person.Role;","lastModifiedDate":"2021-10-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * An UI component that displays information of a {@code Person}.","lastModifiedDate":"2017-08-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class PersonCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"PersonListCard.fxml\";","lastModifiedDate":"2016-09-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX.","lastModifiedDate":"2017-03-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","lastModifiedDate":"2017-03-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2017-03-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe issue on AddressBook level 4\u003c/a\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":28,"author":{"gitId":"IrvingHe000"},"content":"    public final Person staff;","lastModifiedDate":"2021-09-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private HBox cardPane;","lastModifiedDate":"2016-09-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private Label name;","lastModifiedDate":"2016-09-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private Label id;","lastModifiedDate":"2016-09-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private Label phone;","lastModifiedDate":"2016-09-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private Label address;","lastModifiedDate":"2016-09-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private Label email;","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":43,"author":{"gitId":"fullfatwasabi"},"content":"    private FlowPane roles;","lastModifiedDate":"2021-10-12"},{"lineNumber":44,"author":{"gitId":"fullfatwasabi"},"content":"    @FXML","lastModifiedDate":"2021-10-09"},{"lineNumber":45,"author":{"gitId":"fullfatwasabi"},"content":"    private Label salary;","lastModifiedDate":"2021-10-09"},{"lineNumber":46,"author":{"gitId":"fullfatwasabi"},"content":"    @FXML","lastModifiedDate":"2021-10-09"},{"lineNumber":47,"author":{"gitId":"fullfatwasabi"},"content":"    private Label status;","lastModifiedDate":"2021-10-09"},{"lineNumber":48,"author":{"gitId":"fullfatwasabi"},"content":"    @FXML","lastModifiedDate":"2021-10-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    private FlowPane tags;","lastModifiedDate":"2016-12-18"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Creates a {@code PersonCode} with the given {@code Person} and index to display.","lastModifiedDate":"2020-05-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":54,"author":{"gitId":"IrvingHe000"},"content":"    public PersonCard(Person staff, int displayedIndex) {","lastModifiedDate":"2021-09-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":56,"author":{"gitId":"IrvingHe000"},"content":"        this.staff \u003d staff;","lastModifiedDate":"2021-09-23"},{"lineNumber":57,"author":{"gitId":"IrvingHe000"},"content":"        name.setText(staff.getName().fullName);","lastModifiedDate":"2021-09-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        id.setText(displayedIndex + \". \");","lastModifiedDate":"2021-10-09"},{"lineNumber":59,"author":{"gitId":"IrvingHe000"},"content":"        phone.setText(staff.getPhone().value);","lastModifiedDate":"2021-09-23"},{"lineNumber":60,"author":{"gitId":"IrvingHe000"},"content":"        address.setText(staff.getAddress().value);","lastModifiedDate":"2021-09-23"},{"lineNumber":61,"author":{"gitId":"IrvingHe000"},"content":"        email.setText(staff.getEmail().value);","lastModifiedDate":"2021-09-23"},{"lineNumber":62,"author":{"gitId":"fullfatwasabi"},"content":"        staff.getRoles().stream()","lastModifiedDate":"2021-10-12"},{"lineNumber":63,"author":{"gitId":"fullfatwasabi"},"content":"                .sorted(Comparator.comparing(Role::toString))","lastModifiedDate":"2021-10-12"},{"lineNumber":64,"author":{"gitId":"fullfatwasabi"},"content":"                .forEach(role -\u003e roles.getChildren().add(new Label(role.toString())));","lastModifiedDate":"2021-10-12"},{"lineNumber":65,"author":{"gitId":"fullfatwasabi"},"content":"        salary.setText(staff.getSalary().convertToDollars());","lastModifiedDate":"2021-10-12"},{"lineNumber":66,"author":{"gitId":"fullfatwasabi"},"content":"        status.setText(staff.getStatus().getValue());","lastModifiedDate":"2021-10-09"},{"lineNumber":67,"author":{"gitId":"IrvingHe000"},"content":"        staff.getTags().stream()","lastModifiedDate":"2021-09-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"                .sorted(Comparator.comparing(tag -\u003e tag.tagName))","lastModifiedDate":"2019-01-02"},{"lineNumber":69,"author":{"gitId":"-"},"content":"                .forEach(tag -\u003e tags.getChildren().add(new Label(tag.tagName)));","lastModifiedDate":"2019-01-02"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-07-14"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-07-14"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-07-14"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2017-07-14"},{"lineNumber":76,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-07-14"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-07-14"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-07-14"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        if (!(other instanceof PersonCard)) {","lastModifiedDate":"2017-07-14"},{"lineNumber":81,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-07-14"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-07-14"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-07-14"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        PersonCard card \u003d (PersonCard) other;","lastModifiedDate":"2017-07-14"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        return id.getText().equals(card.id.getText())","lastModifiedDate":"2017-07-14"},{"lineNumber":87,"author":{"gitId":"IrvingHe000"},"content":"                \u0026\u0026 staff.equals(card.staff);","lastModifiedDate":"2021-09-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-14"},{"lineNumber":89,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"fullfatwasabi":12,"-":68,"IrvingHe000":9}},{"path":"src/main/java/seedu/address/ui/PersonListPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-08-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-08-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.ListCell;","lastModifiedDate":"2016-09-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.control.ListView;","lastModifiedDate":"2016-08-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Panel containing the list of persons.","lastModifiedDate":"2016-09-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class PersonListPanel extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"PersonListPanel.fxml\";","lastModifiedDate":"2016-09-14"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(PersonListPanel.class);","lastModifiedDate":"2017-04-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private ListView\u003cPerson\u003e personListView;","lastModifiedDate":"2018-02-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Creates a {@code PersonListPanel} with the given {@code ObservableList}.","lastModifiedDate":"2020-05-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":26,"author":{"gitId":"IrvingHe000"},"content":"    public PersonListPanel(ObservableList\u003cPerson\u003e staffList) {","lastModifiedDate":"2021-09-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":28,"author":{"gitId":"IrvingHe000"},"content":"        personListView.setItems(staffList);","lastModifiedDate":"2021-09-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        personListView.setCellFactory(listView -\u003e new PersonListViewCell());","lastModifiedDate":"2016-08-18"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Custom {@code ListCell} that displays the graphics of a {@code Person} using a {@code PersonCard}.","lastModifiedDate":"2018-02-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    class PersonListViewCell extends ListCell\u003cPerson\u003e {","lastModifiedDate":"2018-02-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":37,"author":{"gitId":"IrvingHe000"},"content":"        protected void updateItem(Person staff, boolean empty) {","lastModifiedDate":"2021-09-23"},{"lineNumber":38,"author":{"gitId":"IrvingHe000"},"content":"            super.updateItem(staff, empty);","lastModifiedDate":"2021-09-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":40,"author":{"gitId":"IrvingHe000"},"content":"            if (empty || staff \u003d\u003d null) {","lastModifiedDate":"2021-09-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"                setGraphic(null);","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"                setText(null);","lastModifiedDate":"2016-09-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            } else {","lastModifiedDate":"2016-09-21"},{"lineNumber":44,"author":{"gitId":"IrvingHe000"},"content":"                setGraphic(new PersonCard(staff, getIndex() + 1).getRoot());","lastModifiedDate":"2021-09-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-09-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"-":42,"IrvingHe000":6}},{"path":"src/main/java/seedu/address/ui/UiManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.application.Platform;","lastModifiedDate":"2016-08-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Alert;","lastModifiedDate":"2016-08-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Alert.AlertType;","lastModifiedDate":"2016-08-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2016-08-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.MainApp;","lastModifiedDate":"2016-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.Logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * The manager of the UI component.","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class UiManager implements Ui {","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String ALERT_DIALOG_PANE_FIELD_ID \u003d \"alertDialogPane\";","lastModifiedDate":"2017-04-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(UiManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":23,"author":{"gitId":"mweeruien"},"content":"    // private static final String ICON_APPLICATION \u003d \"/images/","lastModifiedDate":"2021-10-10"},{"lineNumber":24,"author":{"gitId":"mweeruien"},"content":"    // found under build/resources/main/images","lastModifiedDate":"2021-10-10"},{"lineNumber":25,"author":{"gitId":"mweeruien"},"content":"    private static final String ICON_APPLICATION \u003d \"/images/staffd_icon.jpg\";","lastModifiedDate":"2021-10-10"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private MainWindow mainWindow;","lastModifiedDate":"2016-08-18"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Creates a {@code UiManager} with the given {@code Logic}.","lastModifiedDate":"2020-05-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public UiManager(Logic logic) {","lastModifiedDate":"2018-12-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        super();","lastModifiedDate":"2016-08-18"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public void start(Stage primaryStage) {","lastModifiedDate":"2016-09-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        logger.info(\"Starting UI...\");","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        //Set the application icon.","lastModifiedDate":"2016-08-18"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        primaryStage.getIcons().add(getImage(ICON_APPLICATION));","lastModifiedDate":"2016-08-18"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-08-18"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            mainWindow \u003d new MainWindow(primaryStage, logic);","lastModifiedDate":"2018-12-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            mainWindow.show(); //This should be called before creating other UI parts","lastModifiedDate":"2016-08-18"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            mainWindow.fillInnerParts();","lastModifiedDate":"2016-08-18"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        } catch (Throwable e) {","lastModifiedDate":"2016-08-18"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            logger.severe(StringUtil.getDetails(e));","lastModifiedDate":"2016-09-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            showFatalErrorDialogAndShutdown(\"Fatal error during initializing\", e);","lastModifiedDate":"2016-08-18"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-18"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    private Image getImage(String imagePath) {","lastModifiedDate":"2016-08-18"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return new Image(MainApp.class.getResourceAsStream(imagePath));","lastModifiedDate":"2016-08-18"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    void showAlertDialogAndWait(Alert.AlertType type, String title, String headerText, String contentText) {","lastModifiedDate":"2016-09-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        showAlertDialogAndWait(mainWindow.getPrimaryStage(), type, title, headerText, contentText);","lastModifiedDate":"2016-08-18"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     * Shows an alert dialog on {@code owner} with the given parameters.","lastModifiedDate":"2017-08-16"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     * This method only returns after the user has closed the alert dialog.","lastModifiedDate":"2017-08-16"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    private static void showAlertDialogAndWait(Stage owner, AlertType type, String title, String headerText,","lastModifiedDate":"2016-09-21"},{"lineNumber":69,"author":{"gitId":"-"},"content":"                                               String contentText) {","lastModifiedDate":"2016-08-18"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        final Alert alert \u003d new Alert(type);","lastModifiedDate":"2016-08-18"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        alert.getDialogPane().getStylesheets().add(\"view/DarkTheme.css\");","lastModifiedDate":"2016-08-20"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        alert.initOwner(owner);","lastModifiedDate":"2016-08-18"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        alert.setTitle(title);","lastModifiedDate":"2016-08-18"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        alert.setHeaderText(headerText);","lastModifiedDate":"2016-08-18"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        alert.setContentText(contentText);","lastModifiedDate":"2016-08-18"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        alert.getDialogPane().setId(ALERT_DIALOG_PANE_FIELD_ID);","lastModifiedDate":"2016-10-12"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        alert.showAndWait();","lastModifiedDate":"2016-08-18"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * Shows an error alert dialog with {@code title} and error message, {@code e},","lastModifiedDate":"2017-08-16"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * and exits the application after the user has closed the alert dialog.","lastModifiedDate":"2017-08-16"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    private void showFatalErrorDialogAndShutdown(String title, Throwable e) {","lastModifiedDate":"2016-09-21"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        logger.severe(title + \" \" + e.getMessage() + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-21"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        showAlertDialogAndWait(Alert.AlertType.ERROR, title, e.getMessage(), e.toString());","lastModifiedDate":"2016-08-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        Platform.exit();","lastModifiedDate":"2016-08-18"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        System.exit(1);","lastModifiedDate":"2016-08-18"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-25"},{"lineNumber":91,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"-":88,"mweeruien":3}},{"path":"src/main/resources/view/DarkTheme.css","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":".background {","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    background-color: #383838; /* Used in the default.html file */","lastModifiedDate":"2017-03-02"},{"lineNumber":4,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":".label {","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Open Sans Semibold\";","lastModifiedDate":"2021-08-28"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    -fx-text-fill: #555555;","lastModifiedDate":"2016-08-15"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.9;","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":".label-bright {","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Open Sans Semibold\";","lastModifiedDate":"2021-08-28"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":".label-header {","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    -fx-font-size: 32pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Open Sans Light\";","lastModifiedDate":"2021-08-28"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":".text-field {","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    -fx-font-size: 12pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Open Sans Semibold\";","lastModifiedDate":"2021-08-28"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":".tab-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":".tab-pane .tab-header-area {","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    -fx-min-height: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    -fx-max-height: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"Gabau"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2021-10-03"},{"lineNumber":41,"author":{"gitId":"Gabau"},"content":"}","lastModifiedDate":"2021-10-03"},{"lineNumber":42,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":43,"author":{"gitId":"Gabau"},"content":".tab-pane .tab-header-area .tab-header-background {","lastModifiedDate":"2021-10-03"},{"lineNumber":44,"author":{"gitId":"Gabau"},"content":"    -fx-background-color: -fx-outer-border, -fx-text-box-border, grey;","lastModifiedDate":"2021-10-03"},{"lineNumber":45,"author":{"gitId":"Gabau"},"content":"}","lastModifiedDate":"2021-10-03"},{"lineNumber":46,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":47,"author":{"gitId":"Gabau"},"content":".tab.dark {","lastModifiedDate":"2021-10-03"},{"lineNumber":48,"author":{"gitId":"Gabau"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2021-10-03"},{"lineNumber":49,"author":{"gitId":"Gabau"},"content":"}","lastModifiedDate":"2021-10-03"},{"lineNumber":50,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":51,"author":{"gitId":"Gabau"},"content":".tab.dark .tab-label {","lastModifiedDate":"2021-10-03"},{"lineNumber":52,"author":{"gitId":"Gabau"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2021-10-03"},{"lineNumber":53,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":54,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":".table-view {","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    -fx-base: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    -fx-control-inner-background: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    -fx-table-cell-border-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    -fx-table-header-border-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    -fx-padding: 5;","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":".table-view .column-header-background {","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":".table-view .column-header, .table-view .filler {","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    -fx-size: 35;","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    -fx-border-width: 0 0 1 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    -fx-border-color:","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        transparent","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        transparent","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        derive(-fx-base, 80%)","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    -fx-border-insets: 0 10 1 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":".table-view .column-header .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    -fx-font-size: 20pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Open Sans Light\";","lastModifiedDate":"2021-08-28"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    -fx-alignment: center-left;","lastModifiedDate":"2016-08-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":87,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":".table-view:focused .table-row-cell:filled:focused:selected {","lastModifiedDate":"2016-08-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    -fx-background-color: -fx-focus-color;","lastModifiedDate":"2016-08-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":".split-pane:horizontal .split-pane-divider {","lastModifiedDate":"2016-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2017-03-02"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    -fx-border-color: transparent transparent transparent #4d4d4d;","lastModifiedDate":"2017-03-02"},{"lineNumber":96,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":98,"author":{"gitId":"-"},"content":".split-pane {","lastModifiedDate":"2016-08-15"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    -fx-border-radius: 1;","lastModifiedDate":"2016-08-15"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2016-08-15"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":102,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":".list-view {","lastModifiedDate":"2017-03-02"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    -fx-padding: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2018-01-10"},{"lineNumber":108,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":110,"author":{"gitId":"-"},"content":".list-cell {","lastModifiedDate":"2016-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    -fx-label-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    -fx-graphic-text-gap : 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":".list-cell:filled:even {","lastModifiedDate":"2017-03-02"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    -fx-background-color: #3c3e3f;","lastModifiedDate":"2017-03-02"},{"lineNumber":118,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":120,"author":{"gitId":"-"},"content":".list-cell:filled:odd {","lastModifiedDate":"2017-03-02"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    -fx-background-color: #515658;","lastModifiedDate":"2017-03-02"},{"lineNumber":122,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":124,"author":{"gitId":"-"},"content":".list-cell:filled:selected {","lastModifiedDate":"2017-03-02"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    -fx-background-color: #424d5f;","lastModifiedDate":"2017-03-02"},{"lineNumber":126,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":128,"author":{"gitId":"-"},"content":".list-cell:filled:selected #cardPane {","lastModifiedDate":"2017-03-02"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    -fx-border-color: #3e7b91;","lastModifiedDate":"2017-03-02"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2017-03-02"},{"lineNumber":131,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":133,"author":{"gitId":"-"},"content":".list-cell .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2017-03-02"},{"lineNumber":135,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":137,"author":{"gitId":"-"},"content":".cell_big_label {","lastModifiedDate":"2016-08-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Open Sans Semibold\";","lastModifiedDate":"2021-08-28"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    -fx-font-size: 16px;","lastModifiedDate":"2016-08-08"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    -fx-text-fill: #010504;","lastModifiedDate":"2016-08-08"},{"lineNumber":141,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":143,"author":{"gitId":"-"},"content":".cell_small_label {","lastModifiedDate":"2016-08-08"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Open Sans Regular\";","lastModifiedDate":"2021-08-28"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    -fx-font-size: 13px;","lastModifiedDate":"2017-03-02"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    -fx-text-fill: #010504;","lastModifiedDate":"2016-08-08"},{"lineNumber":147,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":149,"author":{"gitId":"-"},"content":".stack-pane {","lastModifiedDate":"2018-04-01"},{"lineNumber":150,"author":{"gitId":"-"},"content":"     -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":151,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":153,"author":{"gitId":"-"},"content":".pane-with-border {","lastModifiedDate":"2017-05-15"},{"lineNumber":154,"author":{"gitId":"-"},"content":"     -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2017-05-09"},{"lineNumber":155,"author":{"gitId":"-"},"content":"     -fx-border-color: derive(#1d1d1d, 10%);","lastModifiedDate":"2017-05-09"},{"lineNumber":156,"author":{"gitId":"-"},"content":"     -fx-border-top-width: 1px;","lastModifiedDate":"2017-05-09"},{"lineNumber":157,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-09"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":159,"author":{"gitId":"-"},"content":".status-bar {","lastModifiedDate":"2016-08-08"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2018-12-08"},{"lineNumber":161,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":163,"author":{"gitId":"-"},"content":".result-display {","lastModifiedDate":"2016-09-14"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2017-03-02"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Open Sans Light\";","lastModifiedDate":"2021-08-28"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    -fx-font-size: 13pt;","lastModifiedDate":"2017-03-02"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2017-03-02"},{"lineNumber":168,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":170,"author":{"gitId":"-"},"content":".result-display .label {","lastModifiedDate":"2016-09-14"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    -fx-text-fill: black !important;","lastModifiedDate":"2016-09-14"},{"lineNumber":172,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":174,"author":{"gitId":"-"},"content":".status-bar .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Open Sans Light\";","lastModifiedDate":"2021-08-28"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    -fx-padding: 4px;","lastModifiedDate":"2018-12-08"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    -fx-pref-height: 30px;","lastModifiedDate":"2018-12-08"},{"lineNumber":179,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":181,"author":{"gitId":"-"},"content":".status-bar-with-border {","lastModifiedDate":"2016-08-08"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    -fx-border-color: derive(#1d1d1d, 25%);","lastModifiedDate":"2016-08-15"},{"lineNumber":184,"author":{"gitId":"-"},"content":"    -fx-border-width: 1px;","lastModifiedDate":"2016-08-08"},{"lineNumber":185,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":187,"author":{"gitId":"-"},"content":".status-bar-with-border .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":188,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":189,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":191,"author":{"gitId":"-"},"content":".grid-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":192,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":193,"author":{"gitId":"-"},"content":"    -fx-border-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":194,"author":{"gitId":"-"},"content":"    -fx-border-width: 1px;","lastModifiedDate":"2016-08-08"},{"lineNumber":195,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":197,"author":{"gitId":"-"},"content":".grid-pane .stack-pane {","lastModifiedDate":"2018-04-01"},{"lineNumber":198,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":199,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":200,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":201,"author":{"gitId":"-"},"content":".context-menu {","lastModifiedDate":"2016-08-08"},{"lineNumber":202,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 50%);","lastModifiedDate":"2016-08-15"},{"lineNumber":203,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":204,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":205,"author":{"gitId":"-"},"content":".context-menu .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":206,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":207,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":208,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":209,"author":{"gitId":"-"},"content":".menu-bar {","lastModifiedDate":"2016-08-08"},{"lineNumber":210,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":211,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":212,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":213,"author":{"gitId":"-"},"content":".menu-bar .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":214,"author":{"gitId":"-"},"content":"    -fx-font-size: 14pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":215,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Open Sans Light\";","lastModifiedDate":"2021-08-28"},{"lineNumber":216,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":217,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.9;","lastModifiedDate":"2016-08-08"},{"lineNumber":218,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":220,"author":{"gitId":"-"},"content":".menu .left-container {","lastModifiedDate":"2016-08-08"},{"lineNumber":221,"author":{"gitId":"-"},"content":"    -fx-background-color: black;","lastModifiedDate":"2016-08-08"},{"lineNumber":222,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":223,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":224,"author":{"gitId":"-"},"content":"/*","lastModifiedDate":"2016-08-08"},{"lineNumber":225,"author":{"gitId":"-"},"content":" * Metro style Push Button","lastModifiedDate":"2016-08-08"},{"lineNumber":226,"author":{"gitId":"-"},"content":" * Author: Pedro Duque Vieira","lastModifiedDate":"2016-08-08"},{"lineNumber":227,"author":{"gitId":"-"},"content":" * http://pixelduke.wordpress.com/2012/10/23/jmetro-windows-8-controls-on-java/","lastModifiedDate":"2016-08-08"},{"lineNumber":228,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":229,"author":{"gitId":"-"},"content":".button {","lastModifiedDate":"2016-08-08"},{"lineNumber":230,"author":{"gitId":"-"},"content":"    -fx-padding: 5 22 5 22;","lastModifiedDate":"2016-08-08"},{"lineNumber":231,"author":{"gitId":"-"},"content":"    -fx-border-color: #e2e2e2;","lastModifiedDate":"2016-08-08"},{"lineNumber":232,"author":{"gitId":"-"},"content":"    -fx-border-width: 2;","lastModifiedDate":"2016-08-08"},{"lineNumber":233,"author":{"gitId":"-"},"content":"    -fx-background-radius: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":234,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":235,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Open Sans Regular\";","lastModifiedDate":"2021-08-28"},{"lineNumber":236,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":237,"author":{"gitId":"-"},"content":"    -fx-text-fill: #d8d8d8;","lastModifiedDate":"2016-08-08"},{"lineNumber":238,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0 0 0 0, 0, 1, 2;","lastModifiedDate":"2016-08-08"},{"lineNumber":239,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":240,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":241,"author":{"gitId":"-"},"content":".button:hover {","lastModifiedDate":"2016-08-08"},{"lineNumber":242,"author":{"gitId":"-"},"content":"    -fx-background-color: #3a3a3a;","lastModifiedDate":"2016-08-08"},{"lineNumber":243,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":244,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":245,"author":{"gitId":"-"},"content":".button:pressed, .button:default:hover:pressed {","lastModifiedDate":"2016-08-08"},{"lineNumber":246,"author":{"gitId":"-"},"content":"  -fx-background-color: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":247,"author":{"gitId":"-"},"content":"  -fx-text-fill: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":248,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":249,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":250,"author":{"gitId":"-"},"content":".button:focused {","lastModifiedDate":"2016-08-08"},{"lineNumber":251,"author":{"gitId":"-"},"content":"    -fx-border-color: white, white;","lastModifiedDate":"2016-08-08"},{"lineNumber":252,"author":{"gitId":"-"},"content":"    -fx-border-width: 1, 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":253,"author":{"gitId":"-"},"content":"    -fx-border-style: solid, segments(1, 1);","lastModifiedDate":"2016-08-08"},{"lineNumber":254,"author":{"gitId":"-"},"content":"    -fx-border-radius: 0, 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":255,"author":{"gitId":"-"},"content":"    -fx-border-insets: 1 1 1 1, 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":256,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":257,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":258,"author":{"gitId":"-"},"content":".button:disabled, .button:default:disabled {","lastModifiedDate":"2016-08-08"},{"lineNumber":259,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.4;","lastModifiedDate":"2016-08-08"},{"lineNumber":260,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":261,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":262,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":263,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":264,"author":{"gitId":"-"},"content":".button:default {","lastModifiedDate":"2016-08-08"},{"lineNumber":265,"author":{"gitId":"-"},"content":"    -fx-background-color: -fx-focus-color;","lastModifiedDate":"2016-08-08"},{"lineNumber":266,"author":{"gitId":"-"},"content":"    -fx-text-fill: #ffffff;","lastModifiedDate":"2016-08-08"},{"lineNumber":267,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":268,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":269,"author":{"gitId":"-"},"content":".button:default:hover {","lastModifiedDate":"2016-08-08"},{"lineNumber":270,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(-fx-focus-color, 30%);","lastModifiedDate":"2016-08-08"},{"lineNumber":271,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":272,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":273,"author":{"gitId":"-"},"content":".dialog-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":274,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":275,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":276,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":277,"author":{"gitId":"-"},"content":".dialog-pane \u003e *.button-bar \u003e *.container {","lastModifiedDate":"2016-08-08"},{"lineNumber":278,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":279,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":280,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":281,"author":{"gitId":"-"},"content":".dialog-pane \u003e *.label.content {","lastModifiedDate":"2016-08-08"},{"lineNumber":282,"author":{"gitId":"-"},"content":"    -fx-font-size: 14px;","lastModifiedDate":"2016-08-08"},{"lineNumber":283,"author":{"gitId":"-"},"content":"    -fx-font-weight: bold;","lastModifiedDate":"2016-08-08"},{"lineNumber":284,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":285,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":286,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":287,"author":{"gitId":"-"},"content":".dialog-pane:header *.header-panel {","lastModifiedDate":"2016-08-08"},{"lineNumber":288,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 25%);","lastModifiedDate":"2016-08-15"},{"lineNumber":289,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":290,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":291,"author":{"gitId":"-"},"content":".dialog-pane:header *.header-panel *.label {","lastModifiedDate":"2016-08-08"},{"lineNumber":292,"author":{"gitId":"-"},"content":"    -fx-font-size: 18px;","lastModifiedDate":"2016-08-08"},{"lineNumber":293,"author":{"gitId":"-"},"content":"    -fx-font-style: italic;","lastModifiedDate":"2016-08-08"},{"lineNumber":294,"author":{"gitId":"-"},"content":"    -fx-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":295,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":296,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":297,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":298,"author":{"gitId":"-"},"content":".scroll-bar {","lastModifiedDate":"2017-03-02"},{"lineNumber":299,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2017-03-02"},{"lineNumber":300,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":301,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":302,"author":{"gitId":"-"},"content":".scroll-bar .thumb {","lastModifiedDate":"2016-08-15"},{"lineNumber":303,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 50%);","lastModifiedDate":"2016-08-15"},{"lineNumber":304,"author":{"gitId":"-"},"content":"    -fx-background-insets: 3;","lastModifiedDate":"2016-08-15"},{"lineNumber":305,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":306,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":307,"author":{"gitId":"-"},"content":".scroll-bar .increment-button, .scroll-bar .decrement-button {","lastModifiedDate":"2016-08-15"},{"lineNumber":308,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-15"},{"lineNumber":309,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-15"},{"lineNumber":310,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":311,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":312,"author":{"gitId":"-"},"content":".scroll-bar .increment-arrow, .scroll-bar .decrement-arrow {","lastModifiedDate":"2016-08-15"},{"lineNumber":313,"author":{"gitId":"-"},"content":"    -fx-shape: \" \";","lastModifiedDate":"2016-08-15"},{"lineNumber":314,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"},{"lineNumber":315,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":316,"author":{"gitId":"-"},"content":".scroll-bar:vertical .increment-arrow, .scroll-bar:vertical .decrement-arrow {","lastModifiedDate":"2016-08-18"},{"lineNumber":317,"author":{"gitId":"-"},"content":"    -fx-padding: 1 8 1 8;","lastModifiedDate":"2016-08-15"},{"lineNumber":318,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":319,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":320,"author":{"gitId":"-"},"content":".scroll-bar:horizontal .increment-arrow, .scroll-bar:horizontal .decrement-arrow {","lastModifiedDate":"2016-08-18"},{"lineNumber":321,"author":{"gitId":"-"},"content":"    -fx-padding: 8 1 8 1;","lastModifiedDate":"2016-08-18"},{"lineNumber":322,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"},{"lineNumber":323,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":324,"author":{"gitId":"-"},"content":"#cardPane {","lastModifiedDate":"2016-08-08"},{"lineNumber":325,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":326,"author":{"gitId":"-"},"content":"    -fx-border-width: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":327,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":328,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":329,"author":{"gitId":"-"},"content":"#commandTypeLabel {","lastModifiedDate":"2016-08-08"},{"lineNumber":330,"author":{"gitId":"-"},"content":"    -fx-font-size: 11px;","lastModifiedDate":"2016-08-08"},{"lineNumber":331,"author":{"gitId":"-"},"content":"    -fx-text-fill: #F70D1A;","lastModifiedDate":"2016-08-08"},{"lineNumber":332,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":333,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":334,"author":{"gitId":"-"},"content":"#commandTextField {","lastModifiedDate":"2017-03-02"},{"lineNumber":335,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent #383838 transparent #383838;","lastModifiedDate":"2017-03-02"},{"lineNumber":336,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":337,"author":{"gitId":"-"},"content":"    -fx-border-color: #383838 #383838 #ffffff #383838;","lastModifiedDate":"2017-03-02"},{"lineNumber":338,"author":{"gitId":"-"},"content":"    -fx-border-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":339,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2017-03-02"},{"lineNumber":340,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Open Sans Light\";","lastModifiedDate":"2021-08-28"},{"lineNumber":341,"author":{"gitId":"-"},"content":"    -fx-font-size: 13pt;","lastModifiedDate":"2017-03-02"},{"lineNumber":342,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2017-03-02"},{"lineNumber":343,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":344,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":345,"author":{"gitId":"-"},"content":"#filterField, #personListPanel, #personWebpage {","lastModifiedDate":"2016-08-15"},{"lineNumber":346,"author":{"gitId":"-"},"content":"    -fx-effect: innershadow(gaussian, black, 10, 0, 0, 0);","lastModifiedDate":"2016-08-15"},{"lineNumber":347,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":348,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":349,"author":{"gitId":"-"},"content":"#resultDisplay .content {","lastModifiedDate":"2017-03-02"},{"lineNumber":350,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent, #383838, transparent, #383838;","lastModifiedDate":"2017-03-02"},{"lineNumber":351,"author":{"gitId":"-"},"content":"    -fx-background-radius: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":352,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":353,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":354,"author":{"gitId":"-"},"content":"#tags {","lastModifiedDate":"2016-12-18"},{"lineNumber":355,"author":{"gitId":"-"},"content":"    -fx-hgap: 7;","lastModifiedDate":"2016-12-18"},{"lineNumber":356,"author":{"gitId":"-"},"content":"    -fx-vgap: 3;","lastModifiedDate":"2016-12-18"},{"lineNumber":357,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-18"},{"lineNumber":358,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":359,"author":{"gitId":"-"},"content":"#tags .label {","lastModifiedDate":"2016-12-18"},{"lineNumber":360,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-12-18"},{"lineNumber":361,"author":{"gitId":"-"},"content":"    -fx-background-color: #3e7b91;","lastModifiedDate":"2017-03-02"},{"lineNumber":362,"author":{"gitId":"-"},"content":"    -fx-padding: 1 3 1 3;","lastModifiedDate":"2016-12-18"},{"lineNumber":363,"author":{"gitId":"-"},"content":"    -fx-border-radius: 2;","lastModifiedDate":"2016-12-18"},{"lineNumber":364,"author":{"gitId":"-"},"content":"    -fx-background-radius: 2;","lastModifiedDate":"2016-12-18"},{"lineNumber":365,"author":{"gitId":"-"},"content":"    -fx-font-size: 11;","lastModifiedDate":"2016-12-18"},{"lineNumber":366,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-18"}],"authorContributionMap":{"Gabau":14,"-":352}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import java.net.URL?\u003e","lastModifiedDate":"2016-08-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.Scene?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Menu?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuBar?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuItem?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":9,"author":{"gitId":"Gabau"},"content":"\u003c?import javafx.scene.control.Tab?\u003e","lastModifiedDate":"2021-10-03"},{"lineNumber":10,"author":{"gitId":"Gabau"},"content":"\u003c?import javafx.scene.control.TabPane?\u003e","lastModifiedDate":"2021-10-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.image.Image?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":12,"author":{"gitId":"Gabau"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2021-10-03"},{"lineNumber":13,"author":{"gitId":"Gabau"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2021-10-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":16,"author":{"gitId":"Gabau"},"content":"\u003c?import javafx.stage.Stage?\u003e","lastModifiedDate":"2021-10-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":18,"author":{"gitId":"mweeruien"},"content":"\u003cfx:root minHeight\u003d\"600\" minWidth\u003d\"450\" onCloseRequest\u003d\"#handleExit\" title\u003d\"Staff\u0027d\" type\u003d\"javafx.stage.Stage\" xmlns\u003d\"http://javafx.com/javafx/16\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-10-10"},{"lineNumber":19,"author":{"gitId":"-"},"content":"  \u003cicons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":20,"author":{"gitId":"mweeruien"},"content":"    \u003cImage url\u003d\"@/images/staffd_icon.jpg\" /\u003e","lastModifiedDate":"2021-10-10"},{"lineNumber":21,"author":{"gitId":"-"},"content":"  \u003c/icons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":22,"author":{"gitId":"-"},"content":"  \u003cscene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    \u003cScene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":24,"author":{"gitId":"-"},"content":"      \u003cstylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@Fonts.css\" /\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@DarkTheme.css\" /\u003e","lastModifiedDate":"2016-08-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@Extensions.css\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"      \u003c/stylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"Gabau"},"content":"            \u003cVBox fx:id\u003d\"mainVbox\" prefHeight\u003d\"471.0\" prefWidth\u003d\"925.0\"\u003e","lastModifiedDate":"2021-10-03"},{"lineNumber":30,"author":{"gitId":"fullfatwasabi"},"content":"                \u003cMenuBar fx:id\u003d\"menuBar\" prefHeight\u003d\"30.0\" prefWidth\u003d\"932.0\" VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2021-10-10"},{"lineNumber":31,"author":{"gitId":"-"},"content":"                    \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"File\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"                        \u003cMenuItem mnemonicParsing\u003d\"false\" onAction\u003d\"#handleExit\" text\u003d\"Exit\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"                    \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"                    \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"Help\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"                        \u003cMenuItem fx:id\u003d\"helpMenuItem\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleHelp\" text\u003d\"Help\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"                    \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"                \u003c/MenuBar\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"Gabau"},"content":"                \u003cHBox fx:id\u003d\"windowHbox\" prefHeight\u003d\"513.0\" prefWidth\u003d\"954.0\" styleClass\u003d\"pane-with-border\" VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2021-10-03"},{"lineNumber":39,"author":{"gitId":"Gabau"},"content":"                    \u003cchildren\u003e","lastModifiedDate":"2021-10-03"},{"lineNumber":40,"author":{"gitId":"fullfatwasabi"},"content":"                          \u003cStackPane fx:id\u003d\"resultDisplayPlaceholder\" alignment\u003d\"TOP_LEFT\" minHeight\u003d\"100\" prefHeight\u003d\"423.0\" prefWidth\u003d\"257.0\" styleClass\u003d\"pane-with-border\" HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2021-10-10"},{"lineNumber":41,"author":{"gitId":"-"},"content":"                              \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":42,"author":{"gitId":"Gabau"},"content":"                                  \u003cInsets bottom\u003d\"5\" left\u003d\"10\" right\u003d\"10\" top\u003d\"5\" /\u003e","lastModifiedDate":"2021-10-03"},{"lineNumber":43,"author":{"gitId":"-"},"content":"                              \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":44,"author":{"gitId":"-"},"content":"                          \u003c/StackPane\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":45,"author":{"gitId":"fullfatwasabi"},"content":"                        \u003cTabPane prefHeight\u003d\"322.0\" prefWidth\u003d\"700.0\" tabClosingPolicy\u003d\"UNAVAILABLE\" HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2021-10-10"},{"lineNumber":46,"author":{"gitId":"Gabau"},"content":"                            \u003ctabs\u003e","lastModifiedDate":"2021-10-03"},{"lineNumber":47,"author":{"gitId":"Gabau"},"content":"                                \u003cTab closable\u003d\"false\" styleClass\u003d\"dark\" text\u003d\"Staff View\"\u003e","lastModifiedDate":"2021-10-03"},{"lineNumber":48,"author":{"gitId":"Gabau"},"content":"                                    \u003ccontent\u003e","lastModifiedDate":"2021-10-03"},{"lineNumber":49,"author":{"gitId":"Gabau"},"content":"                                        \u003cAnchorPane prefHeight\u003d\"200.0\" prefWidth\u003d\"200.0\"\u003e","lastModifiedDate":"2021-10-03"},{"lineNumber":50,"author":{"gitId":"Gabau"},"content":"                                            \u003cchildren\u003e","lastModifiedDate":"2021-10-03"},{"lineNumber":51,"author":{"gitId":"Gabau"},"content":"                                                \u003cVBox fx:id\u003d\"personList\" minWidth\u003d\"340\" prefHeight\u003d\"431.0\" prefWidth\u003d\"432.0\" styleClass\u003d\"pane-with-border\" AnchorPane.bottomAnchor\u003d\"0.0\" AnchorPane.leftAnchor\u003d\"0.0\" AnchorPane.rightAnchor\u003d\"0.0\" AnchorPane.topAnchor\u003d\"0.0\"\u003e","lastModifiedDate":"2021-10-03"},{"lineNumber":52,"author":{"gitId":"-"},"content":"                                                    \u003cpadding\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":53,"author":{"gitId":"Gabau"},"content":"                                                        \u003cInsets bottom\u003d\"10\" left\u003d\"10\" right\u003d\"10\" top\u003d\"10\" /\u003e","lastModifiedDate":"2021-10-03"},{"lineNumber":54,"author":{"gitId":"-"},"content":"                                                    \u003c/padding\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":55,"author":{"gitId":"-"},"content":"                                                    \u003cStackPane fx:id\u003d\"personListPanelPlaceholder\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2017-06-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"                                                \u003c/VBox\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":57,"author":{"gitId":"Gabau"},"content":"                                            \u003c/children\u003e","lastModifiedDate":"2021-10-03"},{"lineNumber":58,"author":{"gitId":"Gabau"},"content":"                                        \u003c/AnchorPane\u003e","lastModifiedDate":"2021-10-03"},{"lineNumber":59,"author":{"gitId":"Gabau"},"content":"                                    \u003c/content\u003e","lastModifiedDate":"2021-10-03"},{"lineNumber":60,"author":{"gitId":"Gabau"},"content":"                                \u003c/Tab\u003e","lastModifiedDate":"2021-10-03"},{"lineNumber":61,"author":{"gitId":"Gabau"},"content":"                            \u003c/tabs\u003e","lastModifiedDate":"2021-10-03"},{"lineNumber":62,"author":{"gitId":"Gabau"},"content":"                        \u003c/TabPane\u003e","lastModifiedDate":"2021-10-03"},{"lineNumber":63,"author":{"gitId":"Gabau"},"content":"                    \u003c/children\u003e","lastModifiedDate":"2021-10-03"},{"lineNumber":64,"author":{"gitId":"Gabau"},"content":"                \u003c/HBox\u003e","lastModifiedDate":"2021-10-03"},{"lineNumber":65,"author":{"gitId":"fullfatwasabi"},"content":"                    \u003cStackPane fx:id\u003d\"commandBoxPlaceholder\" prefHeight\u003d\"40.0\" prefWidth\u003d\"264.0\" styleClass\u003d\"pane-with-border\"\u003e","lastModifiedDate":"2021-10-10"},{"lineNumber":66,"author":{"gitId":"fullfatwasabi"},"content":"                        \u003cpadding\u003e","lastModifiedDate":"2021-10-10"},{"lineNumber":67,"author":{"gitId":"fullfatwasabi"},"content":"                            \u003cInsets bottom\u003d\"5\" left\u003d\"10\" right\u003d\"10\" top\u003d\"5\" /\u003e","lastModifiedDate":"2021-10-10"},{"lineNumber":68,"author":{"gitId":"fullfatwasabi"},"content":"                        \u003c/padding\u003e","lastModifiedDate":"2021-10-10"},{"lineNumber":69,"author":{"gitId":"fullfatwasabi"},"content":"                    \u003c/StackPane\u003e","lastModifiedDate":"2021-10-10"},{"lineNumber":70,"author":{"gitId":"fullfatwasabi"},"content":"                    \u003cStackPane fx:id\u003d\"statusbarPlaceholder\" alignment\u003d\"BOTTOM_CENTER\" prefHeight\u003d\"20.0\" prefWidth\u003d\"472.0\" VBox.vgrow\u003d\"NEVER\" /\u003e","lastModifiedDate":"2021-10-10"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        \u003c/Scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    \u003c/scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":74,"author":{"gitId":"-"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2017-11-29"}],"authorContributionMap":{"Gabau":24,"fullfatwasabi":9,"-":39,"mweeruien":2}},{"path":"src/main/resources/view/PersonListCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.FlowPane?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"  \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    \u003ccolumnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"      \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\" /\u003e","lastModifiedDate":"2017-03-28"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    \u003c/columnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    \u003cVBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"105\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2017-03-28"},{"lineNumber":18,"author":{"gitId":"-"},"content":"      \u003cpadding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        \u003cInsets top\u003d\"5\" right\u003d\"5\" bottom\u003d\"5\" left\u003d\"15\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"      \u003c/padding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"      \u003cHBox spacing\u003d\"5\" alignment\u003d\"CENTER_LEFT\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"cell_big_label\"\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"          \u003cminWidth\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"            \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"          \u003c/minWidth\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        \u003c/Label\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        \u003cLabel fx:id\u003d\"name\" text\u003d\"\\$first\" styleClass\u003d\"cell_big_label\" /\u003e","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"      \u003c/HBox\u003e","lastModifiedDate":"2016-09-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"      \u003cFlowPane fx:id\u003d\"tags\" /\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":31,"author":{"gitId":"-"},"content":"      \u003cLabel fx:id\u003d\"phone\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$phone\" /\u003e","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"      \u003cLabel fx:id\u003d\"address\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$address\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"      \u003cLabel fx:id\u003d\"email\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$email\" /\u003e","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"fullfatwasabi"},"content":"      \u003cFlowPane fx:id\u003d\"roles\" /\u003e","lastModifiedDate":"2021-10-13"},{"lineNumber":35,"author":{"gitId":"fullfatwasabi"},"content":"      \u003cLabel fx:id\u003d\"status\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$status\" /\u003e","lastModifiedDate":"2021-10-09"},{"lineNumber":36,"author":{"gitId":"fullfatwasabi"},"content":"      \u003cLabel fx:id\u003d\"salary\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$salary\" /\u003e","lastModifiedDate":"2021-10-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"  \u003c/GridPane\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"fullfatwasabi":3,"-":36}},{"path":"src/main/resources/view/ResultDisplay.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.TextArea?\u003e","lastModifiedDate":"2016-10-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2017-06-22"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003cStackPane fx:id\u003d\"placeHolder\" styleClass\u003d\"pane-with-border\" xmlns\u003d\"http://javafx.com/javafx/8\"","lastModifiedDate":"2017-06-22"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2016-12-24"},{"lineNumber":8,"author":{"gitId":"fullfatwasabi"},"content":"  \u003cTextArea fx:id\u003d\"resultDisplay\" editable\u003d\"false\" styleClass\u003d\"result-display\" wrapText\u003d\"true\"/\u003e","lastModifiedDate":"2021-10-10"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c/StackPane\u003e","lastModifiedDate":"2017-06-22"}],"authorContributionMap":{"fullfatwasabi":1,"-":8}},{"path":"src/test/data/JsonAddressBookStorageTest/invalidAndValidPersonAddressBook.json","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"{","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  \"persons\": [ {","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    \"name\": \"Valid Person\",","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    \"phone\": \"9482424\",","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    \"email\": \"hans@example.com\",","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"fullfatwasabi"},"content":"    \"address\": \"4th street\",","lastModifiedDate":"2021-10-09"},{"lineNumber":7,"author":{"gitId":"fullfatwasabi"},"content":"    \"role\": [ \"floor\" ],","lastModifiedDate":"2021-10-13"},{"lineNumber":8,"author":{"gitId":"fullfatwasabi"},"content":"    \"status\": \"fulltime\",","lastModifiedDate":"2021-10-09"},{"lineNumber":9,"author":{"gitId":"fullfatwasabi"},"content":"    \"salary\": \"600000\"","lastModifiedDate":"2021-10-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"  }, {","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    \"name\": \"Person With Invalid Phone Field\",","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    \"phone\": \"948asdf2424\",","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    \"email\": \"hans@example.com\",","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"fullfatwasabi"},"content":"    \"address\": \"4th street\",","lastModifiedDate":"2021-10-09"},{"lineNumber":15,"author":{"gitId":"fullfatwasabi"},"content":"    \"role\": [ \"bartender\" ],","lastModifiedDate":"2021-10-13"},{"lineNumber":16,"author":{"gitId":"fullfatwasabi"},"content":"    \"status\": \"parttime\",","lastModifiedDate":"2021-10-09"},{"lineNumber":17,"author":{"gitId":"fullfatwasabi"},"content":"    \"salary\": \"800000\"","lastModifiedDate":"2021-10-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"  } ]","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"fullfatwasabi":8,"-":11}},{"path":"src/test/data/JsonAddressBookStorageTest/invalidPersonAddressBook.json","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"{","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  \"persons\": [ {","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    \"name\": \"Person with invalid name field: Ha!ns Mu@ster\",","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    \"phone\": \"9482424\",","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    \"email\": \"hans@example.com\",","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"fullfatwasabi"},"content":"    \"address\": \"4th street\",","lastModifiedDate":"2021-10-09"},{"lineNumber":7,"author":{"gitId":"fullfatwasabi"},"content":"    \"role\": [ \"kitchen\" ],","lastModifiedDate":"2021-10-13"},{"lineNumber":8,"author":{"gitId":"fullfatwasabi"},"content":"    \"status\": \"fulltime\",","lastModifiedDate":"2021-10-09"},{"lineNumber":9,"author":{"gitId":"fullfatwasabi"},"content":"    \"salary\": \"810000\"","lastModifiedDate":"2021-10-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"  } ]","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"fullfatwasabi":4,"-":7}},{"path":"src/test/data/JsonSerializableAddressBookTest/duplicatePersonAddressBook.json","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"{","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  \"persons\": [ {","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    \"name\": \"Alice Pauline\",","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    \"phone\": \"94351253\",","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    \"email\": \"alice@example.com\",","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    \"address\": \"123, Jurong West Ave 6, #08-111\",","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"fullfatwasabi"},"content":"    \"role\": [ \"floor\" ],","lastModifiedDate":"2021-10-13"},{"lineNumber":8,"author":{"gitId":"fullfatwasabi"},"content":"    \"salary\": \"900000\",","lastModifiedDate":"2021-10-09"},{"lineNumber":9,"author":{"gitId":"fullfatwasabi"},"content":"    \"status\": \"fulltime\",","lastModifiedDate":"2021-10-09"},{"lineNumber":10,"author":{"gitId":"fullfatwasabi"},"content":"    \"tagged\": [ \"friends\" ],","lastModifiedDate":"2021-10-09"},{"lineNumber":11,"author":{"gitId":"fullfatwasabi"},"content":"    \"schedule\": \"\"","lastModifiedDate":"2021-10-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"  }, {","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    \"name\": \"Alice Pauline\",","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    \"phone\": \"94351253\",","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    \"email\": \"pauline@example.com\",","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"fullfatwasabi"},"content":"    \"address\": \"4th street\",","lastModifiedDate":"2021-10-09"},{"lineNumber":17,"author":{"gitId":"fullfatwasabi"},"content":"    \"role\": [ \"bartender\" ],","lastModifiedDate":"2021-10-13"},{"lineNumber":18,"author":{"gitId":"fullfatwasabi"},"content":"    \"salary\": \"850000\",","lastModifiedDate":"2021-10-09"},{"lineNumber":19,"author":{"gitId":"fullfatwasabi"},"content":"    \"status\": \"fulltime\",","lastModifiedDate":"2021-10-09"},{"lineNumber":20,"author":{"gitId":"fullfatwasabi"},"content":"    \"schedule\": \"\"","lastModifiedDate":"2021-10-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"  } ]","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"fullfatwasabi":10,"-":12}},{"path":"src/test/data/JsonSerializableAddressBookTest/invalidPersonAddressBook.json","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"{","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  \"persons\": [ {","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"fullfatwasabi"},"content":"    \"name\": \"Alice Pauline\",","lastModifiedDate":"2021-10-09"},{"lineNumber":4,"author":{"gitId":"fullfatwasabi"},"content":"    \"phone\": \"94351253\",","lastModifiedDate":"2021-10-09"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    \"email\": \"invalid@email!3e\",","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"fullfatwasabi"},"content":"    \"address\": \"123, Jurong West Ave 6, #08-111\",","lastModifiedDate":"2021-10-09"},{"lineNumber":7,"author":{"gitId":"fullfatwasabi"},"content":"    \"role\": [ \"floor\" ],","lastModifiedDate":"2021-10-13"},{"lineNumber":8,"author":{"gitId":"fullfatwasabi"},"content":"    \"salary\": \"900000\",","lastModifiedDate":"2021-10-09"},{"lineNumber":9,"author":{"gitId":"fullfatwasabi"},"content":"    \"status\": \"fulltime\",","lastModifiedDate":"2021-10-09"},{"lineNumber":10,"author":{"gitId":"fullfatwasabi"},"content":"    \"tagged\": [ \"friends\" ],","lastModifiedDate":"2021-10-09"},{"lineNumber":11,"author":{"gitId":"fullfatwasabi"},"content":"    \"schedule\": \"\"","lastModifiedDate":"2021-10-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"  } ]","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"fullfatwasabi":8,"-":5}},{"path":"src/test/data/JsonSerializableAddressBookTest/typicalPersonsAddressBook.json","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"{","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  \"_comment\": \"AddressBook save file which contains the same Person values as in TypicalPersons#getTypicalAddressBook()\",","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"  \"persons\" : [ {","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    \"name\" : \"Alice Pauline\",","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    \"phone\" : \"94351253\",","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    \"email\" : \"alice@example.com\",","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    \"address\" : \"123, Jurong West Ave 6, #08-111\",","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"fullfatwasabi"},"content":"    \"role\" : [ \"floor\" ],","lastModifiedDate":"2021-10-13"},{"lineNumber":9,"author":{"gitId":"fullfatwasabi"},"content":"    \"salary\": \"1000000\",","lastModifiedDate":"2021-10-09"},{"lineNumber":10,"author":{"gitId":"fullfatwasabi"},"content":"    \"status\" : \"fulltime\",","lastModifiedDate":"2021-10-09"},{"lineNumber":11,"author":{"gitId":"fullfatwasabi"},"content":"    \"tagged\" : [ \"friends\" ],","lastModifiedDate":"2021-10-09"},{"lineNumber":12,"author":{"gitId":"Gabau"},"content":"    \"absentDates\" : [ \"2020-02-01 2020-02-03\" ],","lastModifiedDate":"2021-10-13"},{"lineNumber":13,"author":{"gitId":"fullfatwasabi"},"content":"    \"schedule\": \"\"","lastModifiedDate":"2021-10-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"  }, {","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    \"name\" : \"Benson Meier\",","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    \"phone\" : \"98765432\",","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    \"email\" : \"johnd@example.com\",","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    \"address\" : \"311, Clementi Ave 2, #02-25\",","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"fullfatwasabi"},"content":"    \"role\" : [ \"bartender\" ],","lastModifiedDate":"2021-10-13"},{"lineNumber":20,"author":{"gitId":"fullfatwasabi"},"content":"    \"salary\": \"1500000\",","lastModifiedDate":"2021-10-09"},{"lineNumber":21,"author":{"gitId":"fullfatwasabi"},"content":"    \"status\" : \"parttime\",","lastModifiedDate":"2021-10-09"},{"lineNumber":22,"author":{"gitId":"fullfatwasabi"},"content":"    \"tagged\" : [ \"owesMoney\", \"friends\" ],","lastModifiedDate":"2021-10-09"},{"lineNumber":23,"author":{"gitId":"fullfatwasabi"},"content":"    \"schedule\": \"\"","lastModifiedDate":"2021-10-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"  }, {","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    \"name\" : \"Carl Kurz\",","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    \"phone\" : \"95352563\",","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    \"email\" : \"heinz@example.com\",","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    \"address\" : \"wall street\",","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"fullfatwasabi"},"content":"    \"role\" : [ \"kitchen\" ],","lastModifiedDate":"2021-10-13"},{"lineNumber":30,"author":{"gitId":"fullfatwasabi"},"content":"    \"salary\": \"900000\",","lastModifiedDate":"2021-10-09"},{"lineNumber":31,"author":{"gitId":"fullfatwasabi"},"content":"    \"status\" : \"nostatus\",","lastModifiedDate":"2021-10-09"},{"lineNumber":32,"author":{"gitId":"fullfatwasabi"},"content":"    \"tagged\" : [ ],","lastModifiedDate":"2021-10-09"},{"lineNumber":33,"author":{"gitId":"fullfatwasabi"},"content":"    \"schedule\": \"\"","lastModifiedDate":"2021-10-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"  }, {","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    \"name\" : \"Daniel Meier\",","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    \"phone\" : \"87652533\",","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    \"email\" : \"cornelia@example.com\",","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    \"address\" : \"10th street\",","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"fullfatwasabi"},"content":"    \"role\" : [ \"floor\" ],","lastModifiedDate":"2021-10-13"},{"lineNumber":40,"author":{"gitId":"fullfatwasabi"},"content":"    \"salary\": \"900000\",","lastModifiedDate":"2021-10-09"},{"lineNumber":41,"author":{"gitId":"fullfatwasabi"},"content":"    \"status\" : \"fulltime\",","lastModifiedDate":"2021-10-09"},{"lineNumber":42,"author":{"gitId":"fullfatwasabi"},"content":"    \"tagged\" : [ \"friends\" ],","lastModifiedDate":"2021-10-09"},{"lineNumber":43,"author":{"gitId":"fullfatwasabi"},"content":"    \"schedule\": \"\"","lastModifiedDate":"2021-10-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"  }, {","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    \"name\" : \"Elle Meyer\",","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    \"phone\" : \"9482224\",","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    \"email\" : \"werner@example.com\",","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    \"address\" : \"michegan ave\",","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"fullfatwasabi"},"content":"    \"role\" : [ \"floor\" ],","lastModifiedDate":"2021-10-13"},{"lineNumber":50,"author":{"gitId":"fullfatwasabi"},"content":"    \"salary\": \"930000\",","lastModifiedDate":"2021-10-09"},{"lineNumber":51,"author":{"gitId":"fullfatwasabi"},"content":"    \"status\" : \"fulltime\",","lastModifiedDate":"2021-10-09"},{"lineNumber":52,"author":{"gitId":"fullfatwasabi"},"content":"    \"tagged\" : [ ],","lastModifiedDate":"2021-10-09"},{"lineNumber":53,"author":{"gitId":"fullfatwasabi"},"content":"    \"schedule\": \"\"","lastModifiedDate":"2021-10-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"  }, {","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    \"name\" : \"Fiona Kunz\",","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    \"phone\" : \"9482427\",","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    \"email\" : \"lydia@example.com\",","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    \"address\" : \"little tokyo\",","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"fullfatwasabi"},"content":"    \"role\" : [ \"bartender\" ],","lastModifiedDate":"2021-10-13"},{"lineNumber":60,"author":{"gitId":"fullfatwasabi"},"content":"    \"salary\": \"950000\",","lastModifiedDate":"2021-10-09"},{"lineNumber":61,"author":{"gitId":"fullfatwasabi"},"content":"    \"status\" : \"parttime\",","lastModifiedDate":"2021-10-09"},{"lineNumber":62,"author":{"gitId":"fullfatwasabi"},"content":"    \"tagged\" : [ ],","lastModifiedDate":"2021-10-09"},{"lineNumber":63,"author":{"gitId":"fullfatwasabi"},"content":"    \"schedule\": \"\"","lastModifiedDate":"2021-10-09"},{"lineNumber":64,"author":{"gitId":"-"},"content":"  }, {","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    \"name\" : \"George Best\",","lastModifiedDate":"2018-08-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    \"phone\" : \"9482442\",","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    \"email\" : \"anna@example.com\",","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    \"address\" : \"4th street\",","lastModifiedDate":"2018-08-13"},{"lineNumber":69,"author":{"gitId":"fullfatwasabi"},"content":"    \"role\" : [ \"norole\" ],","lastModifiedDate":"2021-10-13"},{"lineNumber":70,"author":{"gitId":"fullfatwasabi"},"content":"    \"salary\": \"850000\",","lastModifiedDate":"2021-10-09"},{"lineNumber":71,"author":{"gitId":"fullfatwasabi"},"content":"    \"status\" : \"fulltime\",","lastModifiedDate":"2021-10-09"},{"lineNumber":72,"author":{"gitId":"fullfatwasabi"},"content":"    \"tagged\" : [ ],","lastModifiedDate":"2021-10-09"},{"lineNumber":73,"author":{"gitId":"fullfatwasabi"},"content":"    \"schedule\": \"\"","lastModifiedDate":"2021-10-09"},{"lineNumber":74,"author":{"gitId":"-"},"content":"  } ]","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"Gabau":1,"fullfatwasabi":35,"-":39}},{"path":"src/test/java/seedu/address/commons/util/AppUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.util;","lastModifiedDate":"2016-09-30"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class AppUtilTest {","lastModifiedDate":"2016-09-30"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public void getImage_exitingImage() {","lastModifiedDate":"2016-09-30"},{"lineNumber":12,"author":{"gitId":"mweeruien"},"content":"        assertNotNull(AppUtil.getImage(\"/images/staffd_icon.jpg\"));","lastModifiedDate":"2021-10-10"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void getImage_nullGiven_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e AppUtil.getImage(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void checkArgument_true_nothingHappens() {","lastModifiedDate":"2017-05-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        AppUtil.checkArgument(true);","lastModifiedDate":"2017-05-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        AppUtil.checkArgument(true, \"\");","lastModifiedDate":"2017-05-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void checkArgument_falseWithoutErrorMessage_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e AppUtil.checkArgument(false));","lastModifiedDate":"2019-03-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void checkArgument_falseWithErrorMessage_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        String errorMessage \u003d \"error message\";","lastModifiedDate":"2017-05-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, errorMessage, () -\u003e AppUtil.checkArgument(false, errorMessage));","lastModifiedDate":"2019-03-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-30"}],"authorContributionMap":{"-":35,"mweeruien":1}},{"path":"src/test/java/seedu/address/logic/LogicManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX;","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2021-10-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2021-10-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2021-10-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2021-10-09"},{"lineNumber":10,"author":{"gitId":"fullfatwasabi"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ROLE_DESC_AMY;","lastModifiedDate":"2021-10-09"},{"lineNumber":11,"author":{"gitId":"fullfatwasabi"},"content":"import static seedu.address.logic.commands.CommandTestUtil.SALARY_DESC_AMY;","lastModifiedDate":"2021-10-09"},{"lineNumber":12,"author":{"gitId":"fullfatwasabi"},"content":"import static seedu.address.logic.commands.CommandTestUtil.STATUS_DESC_AMY;","lastModifiedDate":"2021-10-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2018-12-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2017-01-18"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2017-06-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2016-09-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2016-09-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-12-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-05-31"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2021-09-22"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonAddressBookStorage;","lastModifiedDate":"2018-12-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonUserPrefsStorage;","lastModifiedDate":"2018-12-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"import seedu.address.storage.StorageManager;","lastModifiedDate":"2018-12-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2018-12-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"public class LogicManagerTest {","lastModifiedDate":"2016-09-22"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private static final IOException DUMMY_IO_EXCEPTION \u003d new IOException(\"dummy exception\");","lastModifiedDate":"2018-12-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public Path temporaryFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2017-06-20"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2018-12-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2019-04-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d","lastModifiedDate":"2019-04-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"                new JsonAddressBookStorage(temporaryFolder.resolve(\"addressBook.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(temporaryFolder.resolve(\"userPrefs.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        StorageManager storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2018-12-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-20"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void execute_invalidCommandFormat_throwsParseException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        String invalidCommand \u003d \"uicfhmowqewca\";","lastModifiedDate":"2017-06-20"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertParseException(invalidCommand, MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-06-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-14"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public void execute_commandExecutionError_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":64,"author":{"gitId":"Tetrerox"},"content":"        String deleteCommand \u003d \"delete i/9\";","lastModifiedDate":"2021-10-09"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertCommandException(deleteCommand, MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2017-06-14"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void execute_validCommand_success() throws Exception {","lastModifiedDate":"2019-03-14"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        String listCommand \u003d ListCommand.COMMAND_WORD;","lastModifiedDate":"2017-06-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertCommandSuccess(listCommand, ListCommand.MESSAGE_SUCCESS, model);","lastModifiedDate":"2017-06-19"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public void execute_storageThrowsIoException_throwsCommandException() {","lastModifiedDate":"2019-04-25"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        // Setup LogicManager with JsonAddressBookIoExceptionThrowingStub","lastModifiedDate":"2018-12-09"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d","lastModifiedDate":"2018-12-09"},{"lineNumber":78,"author":{"gitId":"-"},"content":"                new JsonAddressBookIoExceptionThrowingStub(temporaryFolder.resolve(\"ioExceptionAddressBook.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d","lastModifiedDate":"2019-04-25"},{"lineNumber":80,"author":{"gitId":"-"},"content":"                new JsonUserPrefsStorage(temporaryFolder.resolve(\"ioExceptionUserPrefs.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        StorageManager storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2018-12-09"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        // Execute add command","lastModifiedDate":"2018-12-09"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        String addCommand \u003d AddCommand.COMMAND_WORD + NAME_DESC_AMY + PHONE_DESC_AMY + EMAIL_DESC_AMY","lastModifiedDate":"2018-12-09"},{"lineNumber":86,"author":{"gitId":"fullfatwasabi"},"content":"                + ADDRESS_DESC_AMY + ROLE_DESC_AMY + SALARY_DESC_AMY + STATUS_DESC_AMY;","lastModifiedDate":"2021-10-09"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        Person expectedPerson \u003d new PersonBuilder(AMY).withTags().build();","lastModifiedDate":"2021-09-22"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        ModelManager expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-12-09"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        expectedModel.addPerson(expectedPerson);","lastModifiedDate":"2021-09-22"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d LogicManager.FILE_OPS_ERROR_MESSAGE + DUMMY_IO_EXCEPTION;","lastModifiedDate":"2018-12-09"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        assertCommandFailure(addCommand, CommandException.class, expectedMessage, expectedModel);","lastModifiedDate":"2019-03-14"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    public void getFilteredPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e logic.getFilteredPersonList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * - no exceptions are thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * - the feedback message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    private void assertCommandSuccess(String inputCommand, String expectedMessage,","lastModifiedDate":"2019-03-14"},{"lineNumber":107,"author":{"gitId":"-"},"content":"            Model expectedModel) throws CommandException, ParseException {","lastModifiedDate":"2019-03-14"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        CommandResult result \u003d logic.execute(inputCommand);","lastModifiedDate":"2019-03-14"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        assertEquals(expectedMessage, result.getFeedbackToUser());","lastModifiedDate":"2019-03-14"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2019-03-14"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a ParseException is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":116,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    private void assertParseException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-03-11"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, ParseException.class, expectedMessage);","lastModifiedDate":"2017-03-11"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-14"},{"lineNumber":122,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a CommandException is thrown and that the result message is correct.","lastModifiedDate":"2017-06-14"},{"lineNumber":123,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":124,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-14"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    private void assertCommandException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-06-14"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, CommandException.class, expectedMessage);","lastModifiedDate":"2017-06-14"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":130,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that the exception is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":131,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":132,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":134,"author":{"gitId":"-"},"content":"            String expectedMessage) {","lastModifiedDate":"2019-03-14"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-05-31"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, expectedException, expectedMessage, expectedModel);","lastModifiedDate":"2019-03-14"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":141,"author":{"gitId":"-"},"content":"     * - the {@code expectedException} is thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":142,"author":{"gitId":"-"},"content":"     * - the resulting error message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":143,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":144,"author":{"gitId":"-"},"content":"     * @see #assertCommandSuccess(String, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":145,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":147,"author":{"gitId":"-"},"content":"            String expectedMessage, Model expectedModel) {","lastModifiedDate":"2017-05-31"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        assertThrows(expectedException, expectedMessage, () -\u003e logic.execute(inputCommand));","lastModifiedDate":"2019-03-14"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2017-05-31"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-19"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":153,"author":{"gitId":"-"},"content":"     * A stub class to throw an {@code IOException} when the save method is called.","lastModifiedDate":"2018-12-09"},{"lineNumber":154,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    private static class JsonAddressBookIoExceptionThrowingStub extends JsonAddressBookStorage {","lastModifiedDate":"2018-12-09"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        private JsonAddressBookIoExceptionThrowingStub(Path filePath) {","lastModifiedDate":"2018-12-09"},{"lineNumber":157,"author":{"gitId":"-"},"content":"            super(filePath);","lastModifiedDate":"2018-12-09"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        public void saveAddressBook(ReadOnlyAddressBook addressBook, Path filePath) throws IOException {","lastModifiedDate":"2018-12-09"},{"lineNumber":162,"author":{"gitId":"-"},"content":"            throw DUMMY_IO_EXCEPTION;","lastModifiedDate":"2018-12-09"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":165,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"Tetrerox":1,"fullfatwasabi":4,"-":160}},{"path":"src/test/java/seedu/address/logic/commands/AddCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-05-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-01-10"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-05-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-05-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-05-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2017-05-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-05-12"},{"lineNumber":18,"author":{"gitId":"Gabau"},"content":"import seedu.address.stubs.model.ModelStub;","lastModifiedDate":"2021-10-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-05-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class AddCommandTest {","lastModifiedDate":"2017-05-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void constructor_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AddCommand(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public void execute_personAcceptedByModel_addSuccessful() throws Exception {","lastModifiedDate":"2017-05-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        ModelStubAcceptingPersonAdded modelStub \u003d new ModelStubAcceptingPersonAdded();","lastModifiedDate":"2017-05-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-05-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        CommandResult commandResult \u003d new AddCommand(validPerson).execute(modelStub);","lastModifiedDate":"2019-01-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertEquals(String.format(AddCommand.MESSAGE_SUCCESS, validPerson), commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertEquals(Arrays.asList(validPerson), modelStub.personsAdded);","lastModifiedDate":"2017-05-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public void execute_duplicatePerson_throwsCommandException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-05-12"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        AddCommand addCommand \u003d new AddCommand(validPerson);","lastModifiedDate":"2018-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        ModelStub modelStub \u003d new ModelStubWithPerson(validPerson);","lastModifiedDate":"2018-08-07"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertThrows(CommandException.class, AddCommand.MESSAGE_DUPLICATE_PERSON, () -\u003e addCommand.execute(modelStub));","lastModifiedDate":"2019-05-03"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-22"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        Person alice \u003d new PersonBuilder().withName(\"Alice\").build();","lastModifiedDate":"2017-06-22"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        Person bob \u003d new PersonBuilder().withName(\"Bob\").build();","lastModifiedDate":"2017-06-22"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        AddCommand addAliceCommand \u003d new AddCommand(alice);","lastModifiedDate":"2017-06-22"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        AddCommand addBobCommand \u003d new AddCommand(bob);","lastModifiedDate":"2017-06-22"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        AddCommand addAliceCommandCopy \u003d new AddCommand(alice);","lastModifiedDate":"2017-06-22"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommandCopy));","lastModifiedDate":"2017-06-22"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(1));","lastModifiedDate":"2017-06-22"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(null));","lastModifiedDate":"2017-06-22"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(addBobCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * A Model stub that contains a single person.","lastModifiedDate":"2018-08-07"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    private class ModelStubWithPerson extends ModelStub {","lastModifiedDate":"2018-08-07"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        private final Person person;","lastModifiedDate":"2018-08-07"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        ModelStubWithPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":79,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":80,"author":{"gitId":"-"},"content":"            this.person \u003d person;","lastModifiedDate":"2018-08-07"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":85,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":86,"author":{"gitId":"-"},"content":"            return this.person.isSamePerson(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * A Model stub that always accept the person being added.","lastModifiedDate":"2017-05-12"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    private class ModelStubAcceptingPersonAdded extends ModelStub {","lastModifiedDate":"2017-05-12"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        final ArrayList\u003cPerson\u003e personsAdded \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2017-05-12"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-07"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":98,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":99,"author":{"gitId":"-"},"content":"            return personsAdded.stream().anyMatch(person::isSamePerson);","lastModifiedDate":"2018-08-07"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        public void addPerson(Person person) {","lastModifiedDate":"2018-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":105,"author":{"gitId":"-"},"content":"            personsAdded.add(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2017-05-04"},{"lineNumber":110,"author":{"gitId":"-"},"content":"            return new AddressBook();","lastModifiedDate":"2017-05-04"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":114,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-12"}],"authorContributionMap":{"Gabau":1,"-":113}},{"path":"src/test/java/seedu/address/logic/commands/AddShiftCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"IrvingHe000"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-10-14"},{"lineNumber":2,"author":{"gitId":"IrvingHe000"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":3,"author":{"gitId":"IrvingHe000"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-14"},{"lineNumber":4,"author":{"gitId":"IrvingHe000"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2021-10-14"},{"lineNumber":5,"author":{"gitId":"IrvingHe000"},"content":"import static seedu.address.logic.commands.AddShiftCommand.MESSAGE_ADD_SHIFT_SUCCESS;","lastModifiedDate":"2021-10-14"},{"lineNumber":6,"author":{"gitId":"IrvingHe000"},"content":"import static seedu.address.logic.commands.AddShiftCommand.MESSAGE_USAGE;","lastModifiedDate":"2021-10-14"},{"lineNumber":7,"author":{"gitId":"IrvingHe000"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2021-10-14"},{"lineNumber":8,"author":{"gitId":"IrvingHe000"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-10-14"},{"lineNumber":9,"author":{"gitId":"IrvingHe000"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2021-10-14"},{"lineNumber":10,"author":{"gitId":"IrvingHe000"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":11,"author":{"gitId":"IrvingHe000"},"content":"import java.time.DayOfWeek;","lastModifiedDate":"2021-10-14"},{"lineNumber":12,"author":{"gitId":"IrvingHe000"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":13,"author":{"gitId":"IrvingHe000"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-14"},{"lineNumber":14,"author":{"gitId":"IrvingHe000"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":15,"author":{"gitId":"IrvingHe000"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2021-10-14"},{"lineNumber":16,"author":{"gitId":"IrvingHe000"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-10-14"},{"lineNumber":17,"author":{"gitId":"IrvingHe000"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-10-14"},{"lineNumber":18,"author":{"gitId":"IrvingHe000"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2021-10-14"},{"lineNumber":19,"author":{"gitId":"IrvingHe000"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2021-10-14"},{"lineNumber":20,"author":{"gitId":"IrvingHe000"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2021-10-14"},{"lineNumber":21,"author":{"gitId":"IrvingHe000"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2021-10-14"},{"lineNumber":22,"author":{"gitId":"IrvingHe000"},"content":"import seedu.address.model.person.Slot;","lastModifiedDate":"2021-10-14"},{"lineNumber":23,"author":{"gitId":"IrvingHe000"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2021-10-14"},{"lineNumber":24,"author":{"gitId":"IrvingHe000"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":25,"author":{"gitId":"IrvingHe000"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":26,"author":{"gitId":"IrvingHe000"},"content":"public class AddShiftCommandTest {","lastModifiedDate":"2021-10-14"},{"lineNumber":27,"author":{"gitId":"IrvingHe000"},"content":"    @Test","lastModifiedDate":"2021-10-14"},{"lineNumber":28,"author":{"gitId":"IrvingHe000"},"content":"    public void equals() {","lastModifiedDate":"2021-10-14"},{"lineNumber":29,"author":{"gitId":"IrvingHe000"},"content":"        AddShiftCommand firstCommand \u003d new AddShiftCommand(Index.fromOneBased(1), new Name(\"testingName\"),","lastModifiedDate":"2021-10-14"},{"lineNumber":30,"author":{"gitId":"IrvingHe000"},"content":"                \"monday-1\");","lastModifiedDate":"2021-10-14"},{"lineNumber":31,"author":{"gitId":"IrvingHe000"},"content":"        AddShiftCommand secondCommand \u003d new AddShiftCommand(Index.fromOneBased(1), new Name(\"testingName\"),","lastModifiedDate":"2021-10-14"},{"lineNumber":32,"author":{"gitId":"IrvingHe000"},"content":"                \"MONDAY-1\");","lastModifiedDate":"2021-10-14"},{"lineNumber":33,"author":{"gitId":"IrvingHe000"},"content":"        AddShiftCommand thirdCommand \u003d new AddShiftCommand(Index.fromOneBased(2), new Name(\"testingName\"),","lastModifiedDate":"2021-10-14"},{"lineNumber":34,"author":{"gitId":"IrvingHe000"},"content":"                \"monday-1\");","lastModifiedDate":"2021-10-14"},{"lineNumber":35,"author":{"gitId":"IrvingHe000"},"content":"        AddShiftCommand fourthCommand \u003d new AddShiftCommand(Index.fromOneBased(1), new Name(\"differentName\"),","lastModifiedDate":"2021-10-14"},{"lineNumber":36,"author":{"gitId":"IrvingHe000"},"content":"                \"monday-1\");","lastModifiedDate":"2021-10-14"},{"lineNumber":37,"author":{"gitId":"IrvingHe000"},"content":"        AddShiftCommand fifthCommand \u003d new AddShiftCommand(Index.fromOneBased(1), new Name(\"testingName\"),","lastModifiedDate":"2021-10-14"},{"lineNumber":38,"author":{"gitId":"IrvingHe000"},"content":"                \"tuesday-1\");","lastModifiedDate":"2021-10-14"},{"lineNumber":39,"author":{"gitId":"IrvingHe000"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":40,"author":{"gitId":"IrvingHe000"},"content":"        // Object should equal itself","lastModifiedDate":"2021-10-14"},{"lineNumber":41,"author":{"gitId":"IrvingHe000"},"content":"        assertEquals(firstCommand, firstCommand);","lastModifiedDate":"2021-10-14"},{"lineNumber":42,"author":{"gitId":"IrvingHe000"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":43,"author":{"gitId":"IrvingHe000"},"content":"        // Not case sensitive","lastModifiedDate":"2021-10-14"},{"lineNumber":44,"author":{"gitId":"IrvingHe000"},"content":"        assertEquals(firstCommand, secondCommand);","lastModifiedDate":"2021-10-14"},{"lineNumber":45,"author":{"gitId":"IrvingHe000"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":46,"author":{"gitId":"IrvingHe000"},"content":"        assertNotEquals(firstCommand, thirdCommand);","lastModifiedDate":"2021-10-14"},{"lineNumber":47,"author":{"gitId":"IrvingHe000"},"content":"        assertNotEquals(firstCommand, fourthCommand);","lastModifiedDate":"2021-10-14"},{"lineNumber":48,"author":{"gitId":"IrvingHe000"},"content":"        assertNotEquals(firstCommand, fifthCommand);","lastModifiedDate":"2021-10-14"},{"lineNumber":49,"author":{"gitId":"IrvingHe000"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":50,"author":{"gitId":"IrvingHe000"},"content":"        // Not equal null","lastModifiedDate":"2021-10-14"},{"lineNumber":51,"author":{"gitId":"IrvingHe000"},"content":"        assertNotEquals(null, firstCommand);","lastModifiedDate":"2021-10-14"},{"lineNumber":52,"author":{"gitId":"IrvingHe000"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":53,"author":{"gitId":"IrvingHe000"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":54,"author":{"gitId":"IrvingHe000"},"content":"    @Test","lastModifiedDate":"2021-10-14"},{"lineNumber":55,"author":{"gitId":"IrvingHe000"},"content":"    public void execute_command_failure() {","lastModifiedDate":"2021-10-14"},{"lineNumber":56,"author":{"gitId":"IrvingHe000"},"content":"        Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2021-10-14"},{"lineNumber":57,"author":{"gitId":"IrvingHe000"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":58,"author":{"gitId":"IrvingHe000"},"content":"        AddShiftCommand nameNotFoundCommand \u003d new AddShiftCommand(null, new Name(\"Cannot found\"),","lastModifiedDate":"2021-10-14"},{"lineNumber":59,"author":{"gitId":"IrvingHe000"},"content":"                \"monday-1\");","lastModifiedDate":"2021-10-14"},{"lineNumber":60,"author":{"gitId":"IrvingHe000"},"content":"        AddShiftCommand indexOutOfBoundCommand \u003d new AddShiftCommand(Index.fromOneBased(100),","lastModifiedDate":"2021-10-14"},{"lineNumber":61,"author":{"gitId":"IrvingHe000"},"content":"                new Name(\"Alice Pauline\"), \"monday-1\");","lastModifiedDate":"2021-10-14"},{"lineNumber":62,"author":{"gitId":"IrvingHe000"},"content":"        AddShiftCommand personIsNullCommand \u003d new AddShiftCommand(null, null, \"monday-1\");","lastModifiedDate":"2021-10-14"},{"lineNumber":63,"author":{"gitId":"IrvingHe000"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":64,"author":{"gitId":"IrvingHe000"},"content":"        assertCommandFailure(indexOutOfBoundCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2021-10-14"},{"lineNumber":65,"author":{"gitId":"IrvingHe000"},"content":"        assertCommandFailure(personIsNullCommand, model, MESSAGE_USAGE);","lastModifiedDate":"2021-10-14"},{"lineNumber":66,"author":{"gitId":"IrvingHe000"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":67,"author":{"gitId":"IrvingHe000"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":68,"author":{"gitId":"IrvingHe000"},"content":"    @Test","lastModifiedDate":"2021-10-14"},{"lineNumber":69,"author":{"gitId":"IrvingHe000"},"content":"    public void execute_name() {","lastModifiedDate":"2021-10-14"},{"lineNumber":70,"author":{"gitId":"IrvingHe000"},"content":"        Model model \u003d new ModelManager();","lastModifiedDate":"2021-10-14"},{"lineNumber":71,"author":{"gitId":"IrvingHe000"},"content":"        Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2021-10-14"},{"lineNumber":72,"author":{"gitId":"IrvingHe000"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":73,"author":{"gitId":"IrvingHe000"},"content":"        Person alice \u003d new PersonBuilder().withName(\"Alice Pauline\")","lastModifiedDate":"2021-10-14"},{"lineNumber":74,"author":{"gitId":"IrvingHe000"},"content":"                .withAddress(\"123, Jurong West Ave 6, #08-111\").withEmail(\"alice@example.com\")","lastModifiedDate":"2021-10-14"},{"lineNumber":75,"author":{"gitId":"IrvingHe000"},"content":"                .withPhone(\"94351253\").withRoles(\"floor\").withSalary(\"1000000\").withStatus(\"fulltime\")","lastModifiedDate":"2021-10-15"},{"lineNumber":76,"author":{"gitId":"IrvingHe000"},"content":"                .withTags(\"friends\").build();","lastModifiedDate":"2021-10-14"},{"lineNumber":77,"author":{"gitId":"IrvingHe000"},"content":"        Person copyOfAlice \u003d new PersonBuilder().withName(\"Alice Pauline\")","lastModifiedDate":"2021-10-14"},{"lineNumber":78,"author":{"gitId":"IrvingHe000"},"content":"                .withAddress(\"123, Jurong West Ave 6, #08-111\").withEmail(\"alice@example.com\")","lastModifiedDate":"2021-10-14"},{"lineNumber":79,"author":{"gitId":"IrvingHe000"},"content":"                .withPhone(\"94351253\").withRoles(\"floor\").withSalary(\"1000000\").withStatus(\"fulltime\")","lastModifiedDate":"2021-10-15"},{"lineNumber":80,"author":{"gitId":"IrvingHe000"},"content":"                .withTags(\"friends\").build();","lastModifiedDate":"2021-10-14"},{"lineNumber":81,"author":{"gitId":"IrvingHe000"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":82,"author":{"gitId":"IrvingHe000"},"content":"        model.addPerson(alice);","lastModifiedDate":"2021-10-14"},{"lineNumber":83,"author":{"gitId":"IrvingHe000"},"content":"        expectedModel.addPerson(copyOfAlice);","lastModifiedDate":"2021-10-14"},{"lineNumber":84,"author":{"gitId":"IrvingHe000"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":85,"author":{"gitId":"IrvingHe000"},"content":"        AddShiftCommand firstCommand \u003d new AddShiftCommand(null, alice.getName(),","lastModifiedDate":"2021-10-14"},{"lineNumber":86,"author":{"gitId":"IrvingHe000"},"content":"                \"tuesday-1\");","lastModifiedDate":"2021-10-14"},{"lineNumber":87,"author":{"gitId":"IrvingHe000"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":88,"author":{"gitId":"IrvingHe000"},"content":"        expectedModel.findPersonByName(new Name(\"Alice Pauline\")).addShift(DayOfWeek.TUESDAY, Slot.AFTERNOON);","lastModifiedDate":"2021-10-15"},{"lineNumber":89,"author":{"gitId":"IrvingHe000"},"content":"        assertCommandSuccess(firstCommand, model, String.format(MESSAGE_ADD_SHIFT_SUCCESS, alice.getName(),","lastModifiedDate":"2021-10-14"},{"lineNumber":90,"author":{"gitId":"IrvingHe000"},"content":"                DayOfWeek.TUESDAY, Slot.AFTERNOON), expectedModel);","lastModifiedDate":"2021-10-14"},{"lineNumber":91,"author":{"gitId":"IrvingHe000"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":92,"author":{"gitId":"IrvingHe000"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":93,"author":{"gitId":"IrvingHe000"},"content":"    @Test","lastModifiedDate":"2021-10-14"},{"lineNumber":94,"author":{"gitId":"IrvingHe000"},"content":"    public void execute_index() {","lastModifiedDate":"2021-10-14"},{"lineNumber":95,"author":{"gitId":"IrvingHe000"},"content":"        Model model \u003d new ModelManager();","lastModifiedDate":"2021-10-14"},{"lineNumber":96,"author":{"gitId":"IrvingHe000"},"content":"        Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2021-10-14"},{"lineNumber":97,"author":{"gitId":"IrvingHe000"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":98,"author":{"gitId":"IrvingHe000"},"content":"        Person alice \u003d new PersonBuilder().withName(\"Alice Pauline\")","lastModifiedDate":"2021-10-14"},{"lineNumber":99,"author":{"gitId":"IrvingHe000"},"content":"                .withAddress(\"123, Jurong West Ave 6, #08-111\").withEmail(\"alice@example.com\")","lastModifiedDate":"2021-10-14"},{"lineNumber":100,"author":{"gitId":"IrvingHe000"},"content":"                .withPhone(\"94351253\").withRoles(\"floor\").withSalary(\"1000000\").withStatus(\"fulltime\")","lastModifiedDate":"2021-10-15"},{"lineNumber":101,"author":{"gitId":"IrvingHe000"},"content":"                .withTags(\"friends\").build();","lastModifiedDate":"2021-10-14"},{"lineNumber":102,"author":{"gitId":"IrvingHe000"},"content":"        Person copyOfAlice \u003d new PersonBuilder().withName(\"Alice Pauline\")","lastModifiedDate":"2021-10-14"},{"lineNumber":103,"author":{"gitId":"IrvingHe000"},"content":"                .withAddress(\"123, Jurong West Ave 6, #08-111\").withEmail(\"alice@example.com\")","lastModifiedDate":"2021-10-14"},{"lineNumber":104,"author":{"gitId":"IrvingHe000"},"content":"                .withPhone(\"94351253\").withRoles(\"floor\").withSalary(\"1000000\").withStatus(\"fulltime\")","lastModifiedDate":"2021-10-15"},{"lineNumber":105,"author":{"gitId":"IrvingHe000"},"content":"                .withTags(\"friends\").build();","lastModifiedDate":"2021-10-14"},{"lineNumber":106,"author":{"gitId":"IrvingHe000"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":107,"author":{"gitId":"IrvingHe000"},"content":"        model.addPerson(alice);","lastModifiedDate":"2021-10-14"},{"lineNumber":108,"author":{"gitId":"IrvingHe000"},"content":"        expectedModel.addPerson(copyOfAlice);","lastModifiedDate":"2021-10-14"},{"lineNumber":109,"author":{"gitId":"IrvingHe000"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":110,"author":{"gitId":"IrvingHe000"},"content":"        AddShiftCommand firstCommand \u003d new AddShiftCommand(Index.fromOneBased(1), null,","lastModifiedDate":"2021-10-14"},{"lineNumber":111,"author":{"gitId":"IrvingHe000"},"content":"                \"tuesday-1\");","lastModifiedDate":"2021-10-14"},{"lineNumber":112,"author":{"gitId":"IrvingHe000"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":113,"author":{"gitId":"IrvingHe000"},"content":"        expectedModel.findPersonByName(new Name(\"Alice Pauline\")).addShift(DayOfWeek.TUESDAY, Slot.AFTERNOON);","lastModifiedDate":"2021-10-15"},{"lineNumber":114,"author":{"gitId":"IrvingHe000"},"content":"        assertCommandSuccess(firstCommand, model, String.format(MESSAGE_ADD_SHIFT_SUCCESS, alice.getName(),","lastModifiedDate":"2021-10-14"},{"lineNumber":115,"author":{"gitId":"IrvingHe000"},"content":"                DayOfWeek.TUESDAY, Slot.AFTERNOON), expectedModel);","lastModifiedDate":"2021-10-14"},{"lineNumber":116,"author":{"gitId":"IrvingHe000"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":117,"author":{"gitId":"IrvingHe000"},"content":"}","lastModifiedDate":"2021-10-14"}],"authorContributionMap":{"IrvingHe000":117}},{"path":"src/test/java/seedu/address/logic/commands/CommandTestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"fullfatwasabi"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ROLE;","lastModifiedDate":"2021-10-09"},{"lineNumber":10,"author":{"gitId":"fullfatwasabi"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_SALARY;","lastModifiedDate":"2021-10-09"},{"lineNumber":11,"author":{"gitId":"fullfatwasabi"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_STATUS;","lastModifiedDate":"2021-10-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-07-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-06-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-07-20"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2018-01-31"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-06-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-06-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":24,"author":{"gitId":"mweeruien"},"content":"import seedu.address.model.person.predicates.NameContainsKeywordsPredicate;","lastModifiedDate":"2021-10-10"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-07-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":" * Contains helper methods for testing commands.","lastModifiedDate":"2017-06-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"public class CommandTestUtil {","lastModifiedDate":"2017-06-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_AMY \u003d \"Amy Bee\";","lastModifiedDate":"2017-07-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_BOB \u003d \"Bob Choo\";","lastModifiedDate":"2017-07-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public static final String VALID_PHONE_AMY \u003d \"11111111\";","lastModifiedDate":"2017-07-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static final String VALID_PHONE_BOB \u003d \"22222222\";","lastModifiedDate":"2017-07-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public static final String VALID_EMAIL_AMY \u003d \"amy@example.com\";","lastModifiedDate":"2017-07-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static final String VALID_EMAIL_BOB \u003d \"bob@example.com\";","lastModifiedDate":"2017-07-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static final String VALID_ADDRESS_AMY \u003d \"Block 312, Amy Street 1\";","lastModifiedDate":"2017-07-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public static final String VALID_ADDRESS_BOB \u003d \"Block 123, Bobby Street 3\";","lastModifiedDate":"2017-07-05"},{"lineNumber":40,"author":{"gitId":"fullfatwasabi"},"content":"    public static final String VALID_ROLE_AMY \u003d \"floor\";","lastModifiedDate":"2021-10-09"},{"lineNumber":41,"author":{"gitId":"fullfatwasabi"},"content":"    public static final String VALID_ROLE_BOB \u003d \"kitchen\";","lastModifiedDate":"2021-10-09"},{"lineNumber":42,"author":{"gitId":"fullfatwasabi"},"content":"    public static final String VALID_SALARY_AMY \u003d \"800000\";","lastModifiedDate":"2021-10-09"},{"lineNumber":43,"author":{"gitId":"fullfatwasabi"},"content":"    public static final String VALID_SALARY_BOB \u003d \"950000\";","lastModifiedDate":"2021-10-09"},{"lineNumber":44,"author":{"gitId":"fullfatwasabi"},"content":"    public static final String VALID_STATUS_AMY \u003d \"fulltime\";","lastModifiedDate":"2021-10-09"},{"lineNumber":45,"author":{"gitId":"fullfatwasabi"},"content":"    public static final String VALID_STATUS_BOB \u003d \"parttime\";","lastModifiedDate":"2021-10-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public static final String VALID_TAG_HUSBAND \u003d \"husband\";","lastModifiedDate":"2017-07-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public static final String VALID_TAG_FRIEND \u003d \"friend\";","lastModifiedDate":"2017-07-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_AMY \u003d \" \" + PREFIX_NAME + VALID_NAME_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_BOB \u003d \" \" + PREFIX_NAME + VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public static final String PHONE_DESC_AMY \u003d \" \" + PREFIX_PHONE + VALID_PHONE_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public static final String PHONE_DESC_BOB \u003d \" \" + PREFIX_PHONE + VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public static final String EMAIL_DESC_AMY \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public static final String EMAIL_DESC_BOB \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public static final String ADDRESS_DESC_AMY \u003d \" \" + PREFIX_ADDRESS + VALID_ADDRESS_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public static final String ADDRESS_DESC_BOB \u003d \" \" + PREFIX_ADDRESS + VALID_ADDRESS_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":57,"author":{"gitId":"fullfatwasabi"},"content":"    public static final String ROLE_DESC_AMY \u003d \" \" + PREFIX_ROLE + VALID_ROLE_AMY;","lastModifiedDate":"2021-10-09"},{"lineNumber":58,"author":{"gitId":"fullfatwasabi"},"content":"    public static final String ROLE_DESC_BOB \u003d \" \" + PREFIX_ROLE + VALID_ROLE_BOB;","lastModifiedDate":"2021-10-09"},{"lineNumber":59,"author":{"gitId":"fullfatwasabi"},"content":"    public static final String SALARY_DESC_AMY \u003d \" \" + PREFIX_SALARY + VALID_SALARY_AMY;","lastModifiedDate":"2021-10-09"},{"lineNumber":60,"author":{"gitId":"fullfatwasabi"},"content":"    public static final String SALARY_DESC_BOB \u003d \" \" + PREFIX_SALARY + VALID_SALARY_BOB;","lastModifiedDate":"2021-10-09"},{"lineNumber":61,"author":{"gitId":"fullfatwasabi"},"content":"    public static final String STATUS_DESC_AMY \u003d \" \" + PREFIX_STATUS + VALID_STATUS_AMY;","lastModifiedDate":"2021-10-09"},{"lineNumber":62,"author":{"gitId":"fullfatwasabi"},"content":"    public static final String STATUS_DESC_BOB \u003d \" \" + PREFIX_STATUS + VALID_STATUS_BOB;","lastModifiedDate":"2021-10-09"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public static final String TAG_DESC_FRIEND \u003d \" \" + PREFIX_TAG + VALID_TAG_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public static final String TAG_DESC_HUSBAND \u003d \" \" + PREFIX_TAG + VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public static final String INVALID_NAME_DESC \u003d \" \" + PREFIX_NAME + \"James\u0026\"; // \u0027\u0026\u0027 not allowed in names","lastModifiedDate":"2017-07-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public static final String INVALID_PHONE_DESC \u003d \" \" + PREFIX_PHONE + \"911a\"; // \u0027a\u0027 not allowed in phones","lastModifiedDate":"2017-07-05"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public static final String INVALID_EMAIL_DESC \u003d \" \" + PREFIX_EMAIL + \"bob!yahoo\"; // missing \u0027@\u0027 symbol","lastModifiedDate":"2017-07-05"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public static final String INVALID_ADDRESS_DESC \u003d \" \" + PREFIX_ADDRESS; // empty string not allowed for addresses","lastModifiedDate":"2017-07-05"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public static final String INVALID_TAG_DESC \u003d \" \" + PREFIX_TAG + \"hubby*\"; // \u0027*\u0027 not allowed in tags","lastModifiedDate":"2017-07-05"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_WHITESPACE \u003d \"\\t  \\r  \\n\";","lastModifiedDate":"2017-12-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_NON_EMPTY \u003d \"NonEmptyPreamble\";","lastModifiedDate":"2017-12-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public static final EditCommand.EditPersonDescriptor DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public static final EditCommand.EditPersonDescriptor DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    static {","lastModifiedDate":"2017-07-05"},{"lineNumber":79,"author":{"gitId":"fullfatwasabi"},"content":"        DESC_AMY \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY).withSalary(VALID_SALARY_AMY)","lastModifiedDate":"2021-10-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_AMY).withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY)","lastModifiedDate":"2017-07-05"},{"lineNumber":81,"author":{"gitId":"fullfatwasabi"},"content":"                .withRoles(VALID_ROLE_AMY).withStatus(VALID_STATUS_AMY).withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2021-10-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        DESC_BOB \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2017-07-05"},{"lineNumber":83,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB).withAddress(VALID_ADDRESS_BOB)","lastModifiedDate":"2017-07-05"},{"lineNumber":84,"author":{"gitId":"fullfatwasabi"},"content":"                .withRoles(VALID_ROLE_BOB).withSalary(VALID_SALARY_BOB).withStatus(VALID_STATUS_BOB)","lastModifiedDate":"2021-10-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-07-05"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-05"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     * - the returned {@link CommandResult} matches {@code expectedCommandResult} \u003cbr\u003e","lastModifiedDate":"2018-12-09"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * - the {@code actualModel} matches {@code expectedModel}","lastModifiedDate":"2019-01-25"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, CommandResult expectedCommandResult,","lastModifiedDate":"2019-01-25"},{"lineNumber":94,"author":{"gitId":"-"},"content":"            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":96,"author":{"gitId":"-"},"content":"            CommandResult result \u003d command.execute(actualModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":97,"author":{"gitId":"-"},"content":"            assertEquals(expectedCommandResult, result);","lastModifiedDate":"2018-12-09"},{"lineNumber":98,"author":{"gitId":"-"},"content":"            assertEquals(expectedModel, actualModel);","lastModifiedDate":"2017-06-05"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        } catch (CommandException ce) {","lastModifiedDate":"2017-08-15"},{"lineNumber":100,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"Execution of command should not fail.\", ce);","lastModifiedDate":"2017-08-15"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     * Convenience wrapper to {@link #assertCommandSuccess(Command, Model, CommandResult, Model)}","lastModifiedDate":"2019-01-25"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     * that takes a string {@code expectedMessage}.","lastModifiedDate":"2018-12-09"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, String expectedMessage,","lastModifiedDate":"2019-01-25"},{"lineNumber":109,"author":{"gitId":"-"},"content":"            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(expectedMessage);","lastModifiedDate":"2018-12-09"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, actualModel, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":116,"author":{"gitId":"-"},"content":"     * - a {@code CommandException} is thrown \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":117,"author":{"gitId":"-"},"content":"     * - the CommandException message matches {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":118,"author":{"gitId":"-"},"content":"     * - the address book, filtered person list and selected person in {@code actualModel} remain unchanged","lastModifiedDate":"2019-01-25"},{"lineNumber":119,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    public static void assertCommandFailure(Command command, Model actualModel, String expectedMessage) {","lastModifiedDate":"2019-01-25"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        // we are unable to defensively copy the model for comparison later, so we can","lastModifiedDate":"2017-06-05"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        // only do so by copying its components.","lastModifiedDate":"2017-06-05"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        AddressBook expectedAddressBook \u003d new AddressBook(actualModel.getAddressBook());","lastModifiedDate":"2017-06-05"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e expectedFilteredList \u003d new ArrayList\u003c\u003e(actualModel.getFilteredPersonList());","lastModifiedDate":"2018-01-10"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        assertThrows(CommandException.class, expectedMessage, () -\u003e command.execute(actualModel));","lastModifiedDate":"2019-05-03"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddressBook, actualModel.getAddressBook());","lastModifiedDate":"2017-06-05"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        assertEquals(expectedFilteredList, actualModel.getFilteredPersonList());","lastModifiedDate":"2017-06-05"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-20"},{"lineNumber":131,"author":{"gitId":"-"},"content":"     * Updates {@code model}\u0027s filtered list to show only the person at the given {@code targetIndex} in the","lastModifiedDate":"2018-01-31"},{"lineNumber":132,"author":{"gitId":"-"},"content":"     * {@code model}\u0027s address book.","lastModifiedDate":"2018-01-31"},{"lineNumber":133,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-20"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    public static void showPersonAtIndex(Model model, Index targetIndex) {","lastModifiedDate":"2018-01-31"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        assertTrue(targetIndex.getZeroBased() \u003c model.getFilteredPersonList().size());","lastModifiedDate":"2018-01-31"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-31"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        Person person \u003d model.getFilteredPersonList().get(targetIndex.getZeroBased());","lastModifiedDate":"2018-01-31"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        final String[] splitName \u003d person.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2017-07-20"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(new NameContainsKeywordsPredicate(Arrays.asList(splitName[0])));","lastModifiedDate":"2017-07-20"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        assertEquals(1, model.getFilteredPersonList().size());","lastModifiedDate":"2018-02-08"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-20"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":144,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"fullfatwasabi":18,"-":125,"mweeruien":1}},{"path":"src/test/java/seedu/address/logic/commands/DeleteCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2018-01-31"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":10,"author":{"gitId":"Tetrerox"},"content":"import static seedu.address.testutil.TypicalPersons.GEORGE;","lastModifiedDate":"2021-10-10"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2021-10-10"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2017-06-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-06-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-05"},{"lineNumber":20,"author":{"gitId":"Tetrerox"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2021-10-10"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2021-09-22"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for","lastModifiedDate":"2020-12-16"},{"lineNumber":25,"author":{"gitId":"-"},"content":" * {@code DeleteCommand}.","lastModifiedDate":"2018-01-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"public class DeleteCommandTest {","lastModifiedDate":"2017-06-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void execute_validIndexUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        Person personToDelete \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2021-09-22"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2018-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(DeleteCommand.MESSAGE_DELETE_PERSON_SUCCESS, personToDelete);","lastModifiedDate":"2021-09-22"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-06-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        expectedModel.deletePerson(personToDelete);","lastModifiedDate":"2021-09-22"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertCommandSuccess(deleteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void execute_invalidIndexUnfilteredList_throwsCommandException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPersonList().size() + 1);","lastModifiedDate":"2021-09-22"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(outOfBoundIndex);","lastModifiedDate":"2018-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertCommandFailure(deleteCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2019-01-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void execute_validIndexFilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        Person personToDelete \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2021-09-22"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2018-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(DeleteCommand.MESSAGE_DELETE_PERSON_SUCCESS, personToDelete);","lastModifiedDate":"2021-09-22"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-06-05"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        expectedModel.deletePerson(personToDelete);","lastModifiedDate":"2021-09-22"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        showNoPerson(expectedModel);","lastModifiedDate":"2017-06-05"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertCommandSuccess(deleteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void execute_invalidIndexFilteredList_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2017-06-05"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2017-06-05"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getPersonList().size());","lastModifiedDate":"2021-09-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(outOfBoundIndex);","lastModifiedDate":"2018-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertCommandFailure(deleteCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2019-01-25"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":81,"author":{"gitId":"Tetrerox"},"content":"    @Test","lastModifiedDate":"2021-10-10"},{"lineNumber":82,"author":{"gitId":"Tetrerox"},"content":"    public void execute_nameNotFound_throwsCommandException() {","lastModifiedDate":"2021-10-10"},{"lineNumber":83,"author":{"gitId":"Tetrerox"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2021-10-10"},{"lineNumber":84,"author":{"gitId":"Tetrerox"},"content":"        Name outOfBoundName \u003d GEORGE.getName();","lastModifiedDate":"2021-10-10"},{"lineNumber":85,"author":{"gitId":"Tetrerox"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":86,"author":{"gitId":"Tetrerox"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(outOfBoundName);","lastModifiedDate":"2021-10-10"},{"lineNumber":87,"author":{"gitId":"Tetrerox"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":88,"author":{"gitId":"Tetrerox"},"content":"        assertCommandFailure(deleteCommand, model, Messages.MESSAGE_INVALID_PERSON_SEARCHED);","lastModifiedDate":"2021-10-10"},{"lineNumber":89,"author":{"gitId":"Tetrerox"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":90,"author":{"gitId":"Tetrerox"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-01-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-08-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        DeleteCommand deleteFirstCommand \u003d new DeleteCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2018-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        DeleteCommand deleteSecondCommand \u003d new DeleteCommand(INDEX_SECOND_PERSON);","lastModifiedDate":"2018-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        DeleteCommand deleteFirstCommandCopy \u003d new DeleteCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2018-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommandCopy));","lastModifiedDate":"2017-06-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(1));","lastModifiedDate":"2017-06-27"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(null));","lastModifiedDate":"2017-06-27"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(deleteSecondCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     * Updates {@code model}\u0027s filtered list to show no one.","lastModifiedDate":"2017-06-05"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    private void showNoPerson(Model model) {","lastModifiedDate":"2017-06-05"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(p -\u003e false);","lastModifiedDate":"2021-09-22"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        assertTrue(model.getFilteredPersonList().isEmpty());","lastModifiedDate":"2021-09-22"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":121,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"Tetrerox":12,"-":109}},{"path":"src/test/java/seedu/address/logic/commands/EditCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-05-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2018-01-31"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2017-05-04"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2021-09-22"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-05-04"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-05-04"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-05-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-05-04"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2021-09-22"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2021-09-22"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-05-04"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-04"},{"lineNumber":31,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for EditCommand.","lastModifiedDate":"2020-12-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-04"},{"lineNumber":33,"author":{"gitId":"-"},"content":"public class EditCommandTest {","lastModifiedDate":"2017-05-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":38,"author":{"gitId":"Gabau"},"content":"    public void execute_allFieldsSpecifiedUnfilteredListIndex_success() {","lastModifiedDate":"2021-10-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2021-09-22"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(editedPerson).build();","lastModifiedDate":"2021-09-22"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON, descriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, editedPerson);","lastModifiedDate":"2021-09-22"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2017-06-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        expectedModel.setPerson(model.getFilteredPersonList().get(0), editedPerson);","lastModifiedDate":"2021-09-22"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":51,"author":{"gitId":"Gabau"},"content":"    @Test","lastModifiedDate":"2021-10-09"},{"lineNumber":52,"author":{"gitId":"Gabau"},"content":"    public void execute_allFieldsSpecifiedUnfilteredListName_success() {","lastModifiedDate":"2021-10-09"},{"lineNumber":53,"author":{"gitId":"Gabau"},"content":"        Person editedPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2021-10-09"},{"lineNumber":54,"author":{"gitId":"Gabau"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(editedPerson).build();","lastModifiedDate":"2021-10-09"},{"lineNumber":55,"author":{"gitId":"Gabau"},"content":"        EditCommand editCommand \u003d new EditCommand(model.getUnFilteredPersonList().get(0).getName(), descriptor);","lastModifiedDate":"2021-10-09"},{"lineNumber":56,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":57,"author":{"gitId":"Gabau"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, editedPerson);","lastModifiedDate":"2021-10-09"},{"lineNumber":58,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":59,"author":{"gitId":"Gabau"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2021-10-09"},{"lineNumber":60,"author":{"gitId":"Gabau"},"content":"        expectedModel.setPerson(model.getUnFilteredPersonList().get(0), editedPerson);","lastModifiedDate":"2021-10-09"},{"lineNumber":61,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":62,"author":{"gitId":"Gabau"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-10-09"},{"lineNumber":63,"author":{"gitId":"Gabau"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":64,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public void execute_someFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        Index indexLastPerson \u003d Index.fromOneBased(model.getFilteredPersonList().size());","lastModifiedDate":"2021-09-22"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        Person lastPerson \u003d model.getFilteredPersonList().get(indexLastPerson.getZeroBased());","lastModifiedDate":"2021-09-22"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        PersonBuilder personInList \u003d new PersonBuilder(lastPerson);","lastModifiedDate":"2021-09-22"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d personInList.withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2021-09-22"},{"lineNumber":72,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2017-05-18"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2021-09-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_BOB).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2017-05-18"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(indexLastPerson, descriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, editedPerson);","lastModifiedDate":"2021-09-22"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2017-05-18"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        expectedModel.setPerson(lastPerson, editedPerson);","lastModifiedDate":"2021-09-22"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public void execute_noFieldSpecifiedUnfilteredList_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON, new EditPersonDescriptor());","lastModifiedDate":"2021-09-22"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2021-09-22"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, editedPerson);","lastModifiedDate":"2021-09-22"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2017-05-18"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    public void execute_filteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        Person personInFilteredList \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2021-09-22"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d new PersonBuilder(personInFilteredList).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2021-09-22"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2018-08-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"                new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build());","lastModifiedDate":"2021-09-22"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, editedPerson);","lastModifiedDate":"2021-09-22"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2017-05-18"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        expectedModel.setPerson(model.getFilteredPersonList().get(0), editedPerson);","lastModifiedDate":"2021-09-22"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    public void execute_duplicatePersonUnfilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        Person firstPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2021-09-22"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(firstPerson).build();","lastModifiedDate":"2021-09-22"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_SECOND_PERSON, descriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, EditCommand.MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2019-01-25"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    public void execute_duplicatePersonFilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        // edit person in filtered list into a duplicate in address book","lastModifiedDate":"2017-05-18"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        Person personInList \u003d model.getAddressBook().getPersonList().get(INDEX_SECOND_PERSON.getZeroBased());","lastModifiedDate":"2021-09-22"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2018-08-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"                new EditPersonDescriptorBuilder(personInList).build());","lastModifiedDate":"2021-09-22"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, EditCommand.MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2019-01-25"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    public void execute_invalidPersonIndexUnfilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPersonList().size() + 1);","lastModifiedDate":"2021-09-22"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build();","lastModifiedDate":"2021-09-22"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(outOfBoundIndex, descriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2019-01-25"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-18"},{"lineNumber":146,"author":{"gitId":"-"},"content":"     * Edit filtered list where index is larger than size of filtered list,","lastModifiedDate":"2017-05-18"},{"lineNumber":147,"author":{"gitId":"-"},"content":"     * but smaller than size of address book","lastModifiedDate":"2017-05-18"},{"lineNumber":148,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-18"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    public void execute_invalidPersonIndexFilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2017-05-18"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2017-05-18"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getPersonList().size());","lastModifiedDate":"2021-09-22"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(outOfBoundIndex,","lastModifiedDate":"2018-08-08"},{"lineNumber":157,"author":{"gitId":"-"},"content":"                new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build());","lastModifiedDate":"2021-09-22"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2019-01-25"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-01-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-08-08"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        final EditCommand standardCommand \u003d new EditCommand(INDEX_FIRST_PERSON, DESC_AMY);","lastModifiedDate":"2018-08-08"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-08"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        EditPersonDescriptor copyDescriptor \u003d new EditPersonDescriptor(DESC_AMY);","lastModifiedDate":"2021-09-22"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        EditCommand commandWithSameValues \u003d new EditCommand(INDEX_FIRST_PERSON, copyDescriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        assertTrue(standardCommand.equals(commandWithSameValues));","lastModifiedDate":"2017-05-08"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-08"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        assertTrue(standardCommand.equals(standardCommand));","lastModifiedDate":"2017-05-08"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(null));","lastModifiedDate":"2017-05-08"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(new ClearCommand()));","lastModifiedDate":"2017-05-08"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(new EditCommand(INDEX_SECOND_PERSON, DESC_AMY)));","lastModifiedDate":"2017-05-25"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        // different descriptor -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(new EditCommand(INDEX_FIRST_PERSON, DESC_BOB)));","lastModifiedDate":"2017-05-25"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":187,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-08"}],"authorContributionMap":{"Gabau":15,"-":172}},{"path":"src/test/java/seedu/address/logic/commands/EditPersonDescriptorTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-05-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"fullfatwasabi"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ROLE_BOB;","lastModifiedDate":"2021-10-13"},{"lineNumber":12,"author":{"gitId":"fullfatwasabi"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_SALARY_BOB;","lastModifiedDate":"2021-10-13"},{"lineNumber":13,"author":{"gitId":"fullfatwasabi"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_STATUS_BOB;","lastModifiedDate":"2021-10-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2021-09-22"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2021-09-22"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class EditPersonDescriptorTest {","lastModifiedDate":"2021-09-22"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptorWithSameValues \u003d new EditPersonDescriptor(DESC_AMY);","lastModifiedDate":"2021-09-22"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertTrue(DESC_AMY.equals(descriptorWithSameValues));","lastModifiedDate":"2017-05-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertTrue(DESC_AMY.equals(DESC_AMY));","lastModifiedDate":"2017-05-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(null));","lastModifiedDate":"2017-05-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(5));","lastModifiedDate":"2017-05-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(DESC_BOB));","lastModifiedDate":"2017-05-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        EditPersonDescriptor editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2021-09-22"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":45,"author":{"gitId":"fullfatwasabi"},"content":"        // different roles -\u003e returns false","lastModifiedDate":"2021-10-13"},{"lineNumber":46,"author":{"gitId":"fullfatwasabi"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withRoles(VALID_ROLE_BOB).build();","lastModifiedDate":"2021-10-13"},{"lineNumber":47,"author":{"gitId":"fullfatwasabi"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2021-10-13"},{"lineNumber":48,"author":{"gitId":"fullfatwasabi"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":49,"author":{"gitId":"fullfatwasabi"},"content":"        // different salary -\u003e returns false","lastModifiedDate":"2021-10-13"},{"lineNumber":50,"author":{"gitId":"fullfatwasabi"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withSalary(VALID_SALARY_BOB).build();","lastModifiedDate":"2021-10-13"},{"lineNumber":51,"author":{"gitId":"fullfatwasabi"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2021-10-13"},{"lineNumber":52,"author":{"gitId":"fullfatwasabi"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":53,"author":{"gitId":"fullfatwasabi"},"content":"        // different status -\u003e returns false","lastModifiedDate":"2021-10-13"},{"lineNumber":54,"author":{"gitId":"fullfatwasabi"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withStatus(VALID_STATUS_BOB).build();","lastModifiedDate":"2021-10-13"},{"lineNumber":55,"author":{"gitId":"fullfatwasabi"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2021-10-13"},{"lineNumber":56,"author":{"gitId":"fullfatwasabi"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        // different phone -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2021-09-22"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        // different email -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withEmail(VALID_EMAIL_BOB).build();","lastModifiedDate":"2021-09-22"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        // different address -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withAddress(VALID_ADDRESS_BOB).build();","lastModifiedDate":"2021-09-22"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        // different tags -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2021-09-22"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":73,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-05"}],"authorContributionMap":{"fullfatwasabi":15,"-":58}},{"path":"src/test/java/seedu/address/logic/commands/FindCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_PERSONS_LISTED_OVERVIEW;","lastModifiedDate":"2017-06-12"},{"lineNumber":7,"author":{"gitId":"mweeruien"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2021-10-10"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2018-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.CARL;","lastModifiedDate":"2017-07-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ELLE;","lastModifiedDate":"2017-07-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.FIONA;","lastModifiedDate":"2017-07-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"mweeruien"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2021-10-10"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"mweeruien"},"content":"import seedu.address.model.person.predicates.NameContainsKeywordsPredicate;","lastModifiedDate":"2021-10-10"},{"lineNumber":24,"author":{"gitId":"mweeruien"},"content":"import seedu.address.model.person.predicates.StaffHasCorrectIndexPredicate;","lastModifiedDate":"2021-10-10"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) for {@code FindCommand}.","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"public class FindCommandTest {","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private Model expectedModel \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2018-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-06-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate firstPredicate \u003d","lastModifiedDate":"2017-06-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"                new NameContainsKeywordsPredicate(Collections.singletonList(\"first\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate secondPredicate \u003d","lastModifiedDate":"2017-06-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"                new NameContainsKeywordsPredicate(Collections.singletonList(\"second\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        FindCommand findFirstCommand \u003d new FindCommand(firstPredicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        FindCommand findSecondCommand \u003d new FindCommand(secondPredicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":42,"author":{"gitId":"mweeruien"},"content":"        FindCommand findThirdCommand \u003d new FindCommand(1);","lastModifiedDate":"2021-10-10"},{"lineNumber":43,"author":{"gitId":"mweeruien"},"content":"        FindCommand findFourthCommand \u003d new FindCommand(2);","lastModifiedDate":"2021-10-10"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        FindCommand findFirstCommandCopy \u003d new FindCommand(firstPredicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommandCopy));","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(1));","lastModifiedDate":"2017-06-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(null));","lastModifiedDate":"2017-06-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(findSecondCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":60,"author":{"gitId":"mweeruien"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":61,"author":{"gitId":"mweeruien"},"content":"        // Test equals() method for Find Commands that search by index","lastModifiedDate":"2021-10-10"},{"lineNumber":62,"author":{"gitId":"mweeruien"},"content":"        assertTrue(findThirdCommand.equals(new FindCommand(1)));","lastModifiedDate":"2021-10-10"},{"lineNumber":63,"author":{"gitId":"mweeruien"},"content":"        assertFalse(findThirdCommand.equals(findFourthCommand));","lastModifiedDate":"2021-10-10"},{"lineNumber":64,"author":{"gitId":"mweeruien"},"content":"        assertFalse(findFirstCommand.equals(findThirdCommand));","lastModifiedDate":"2021-10-10"},{"lineNumber":65,"author":{"gitId":"mweeruien"},"content":"        assertFalse(findFourthCommand.equals(findFirstCommand));","lastModifiedDate":"2021-10-10"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void execute_zeroKeywords_noPersonFound() {","lastModifiedDate":"2017-08-15"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 0);","lastModifiedDate":"2017-06-12"},{"lineNumber":71,"author":{"gitId":"mweeruien"},"content":"        NameContainsKeywordsPredicate predicate \u003d prepareNamePredicate(\" \");","lastModifiedDate":"2021-10-10"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        FindCommand command \u003d new FindCommand(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertEquals(Collections.emptyList(), model.getFilteredPersonList());","lastModifiedDate":"2018-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public void execute_multipleKeywords_multiplePersonsFound() {","lastModifiedDate":"2017-08-15"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 3);","lastModifiedDate":"2017-06-12"},{"lineNumber":81,"author":{"gitId":"mweeruien"},"content":"        NameContainsKeywordsPredicate predicate \u003d prepareNamePredicate(\"Kurz Elle Kunz\");","lastModifiedDate":"2021-10-10"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        FindCommand command \u003d new FindCommand(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertEquals(Arrays.asList(CARL, ELLE, FIONA), model.getFilteredPersonList());","lastModifiedDate":"2018-08-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":88,"author":{"gitId":"mweeruien"},"content":"    @Test","lastModifiedDate":"2021-10-10"},{"lineNumber":89,"author":{"gitId":"mweeruien"},"content":"    public void execute_indexSearchWithinRange() {","lastModifiedDate":"2021-10-10"},{"lineNumber":90,"author":{"gitId":"mweeruien"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 1);","lastModifiedDate":"2021-10-10"},{"lineNumber":91,"author":{"gitId":"mweeruien"},"content":"        StaffHasCorrectIndexPredicate predicate \u003d prepareIndexPredicate(2);","lastModifiedDate":"2021-10-10"},{"lineNumber":92,"author":{"gitId":"mweeruien"},"content":"        FindCommand command \u003d new FindCommand(2);","lastModifiedDate":"2021-10-10"},{"lineNumber":93,"author":{"gitId":"mweeruien"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2021-10-10"},{"lineNumber":94,"author":{"gitId":"mweeruien"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-10-10"},{"lineNumber":95,"author":{"gitId":"mweeruien"},"content":"        assertEquals(Arrays.asList(CARL), model.getFilteredPersonList());","lastModifiedDate":"2021-10-10"},{"lineNumber":96,"author":{"gitId":"mweeruien"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":97,"author":{"gitId":"mweeruien"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":98,"author":{"gitId":"mweeruien"},"content":"    @Test","lastModifiedDate":"2021-10-10"},{"lineNumber":99,"author":{"gitId":"mweeruien"},"content":"    public void execute_indexSearchOutOfRange() {","lastModifiedDate":"2021-10-10"},{"lineNumber":100,"author":{"gitId":"mweeruien"},"content":"        int outOfBoundIndex \u003d model.getFilteredPersonList().size() + 1;","lastModifiedDate":"2021-10-10"},{"lineNumber":101,"author":{"gitId":"mweeruien"},"content":"        FindCommand command \u003d new FindCommand(outOfBoundIndex);","lastModifiedDate":"2021-10-10"},{"lineNumber":102,"author":{"gitId":"mweeruien"},"content":"        assertCommandFailure(command, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2021-10-10"},{"lineNumber":103,"author":{"gitId":"mweeruien"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":104,"author":{"gitId":"mweeruien"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-12"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     * Parses {@code userInput} into a {@code NameContainsKeywordsPredicate}.","lastModifiedDate":"2018-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-12"},{"lineNumber":108,"author":{"gitId":"mweeruien"},"content":"    private NameContainsKeywordsPredicate prepareNamePredicate(String userInput) {","lastModifiedDate":"2021-10-10"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        return new NameContainsKeywordsPredicate(Arrays.asList(userInput.split(\"\\\\s+\")));","lastModifiedDate":"2018-08-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":111,"author":{"gitId":"mweeruien"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":112,"author":{"gitId":"mweeruien"},"content":"    /**","lastModifiedDate":"2021-10-10"},{"lineNumber":113,"author":{"gitId":"mweeruien"},"content":"     * Parses {@code userInput} into a {@code StaffHasCorrectIndexPredicate predicate}.","lastModifiedDate":"2021-10-10"},{"lineNumber":114,"author":{"gitId":"mweeruien"},"content":"     * Note that the index is the userInput - 1, as it starts from 0 instead of 1.","lastModifiedDate":"2021-10-10"},{"lineNumber":115,"author":{"gitId":"mweeruien"},"content":"     */","lastModifiedDate":"2021-10-10"},{"lineNumber":116,"author":{"gitId":"mweeruien"},"content":"    private StaffHasCorrectIndexPredicate prepareIndexPredicate(int index) {","lastModifiedDate":"2021-10-10"},{"lineNumber":117,"author":{"gitId":"mweeruien"},"content":"        return new StaffHasCorrectIndexPredicate(index, model);","lastModifiedDate":"2021-10-10"},{"lineNumber":118,"author":{"gitId":"mweeruien"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":119,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"-":79,"mweeruien":40}},{"path":"src/test/java/seedu/address/logic/commands/MarkCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Gabau"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-10-13"},{"lineNumber":2,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":3,"author":{"gitId":"Gabau"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2021-10-14"},{"lineNumber":4,"author":{"gitId":"Gabau"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-10-13"},{"lineNumber":5,"author":{"gitId":"Gabau"},"content":"import static seedu.address.logic.commands.RemoveMarkCommand.listToString;","lastModifiedDate":"2021-10-16"},{"lineNumber":6,"author":{"gitId":"Gabau"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2021-10-13"},{"lineNumber":7,"author":{"gitId":"Gabau"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2021-10-13"},{"lineNumber":8,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":9,"author":{"gitId":"Gabau"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-13"},{"lineNumber":10,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":11,"author":{"gitId":"Gabau"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-13"},{"lineNumber":12,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":13,"author":{"gitId":"Gabau"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-10-13"},{"lineNumber":14,"author":{"gitId":"Gabau"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-10-13"},{"lineNumber":15,"author":{"gitId":"Gabau"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2021-10-13"},{"lineNumber":16,"author":{"gitId":"Gabau"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2021-10-13"},{"lineNumber":17,"author":{"gitId":"Gabau"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2021-10-13"},{"lineNumber":18,"author":{"gitId":"Gabau"},"content":"import seedu.address.model.person.Period;","lastModifiedDate":"2021-10-13"},{"lineNumber":19,"author":{"gitId":"Gabau"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2021-10-13"},{"lineNumber":20,"author":{"gitId":"Gabau"},"content":"import seedu.address.model.person.PersonContainsFieldsPredicate;","lastModifiedDate":"2021-10-13"},{"lineNumber":21,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":22,"author":{"gitId":"Gabau"},"content":"public class MarkCommandTest {","lastModifiedDate":"2021-10-13"},{"lineNumber":23,"author":{"gitId":"Gabau"},"content":"    private static final Index DEFAULT_FIRST \u003d Index.fromOneBased(1);","lastModifiedDate":"2021-10-13"},{"lineNumber":24,"author":{"gitId":"Gabau"},"content":"    private static final Person DEFAULT_TEST_PERSON \u003d ALICE;","lastModifiedDate":"2021-10-13"},{"lineNumber":25,"author":{"gitId":"Gabau"},"content":"    private static final Name DEFAULT_TEST_NAME \u003d ALICE.getName();","lastModifiedDate":"2021-10-13"},{"lineNumber":26,"author":{"gitId":"Gabau"},"content":"    private static final Period DEFAULT_TEST_PERIOD \u003d ALICE.getAbsentDates().stream().findFirst().get();","lastModifiedDate":"2021-10-13"},{"lineNumber":27,"author":{"gitId":"Gabau"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2021-10-13"},{"lineNumber":28,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":29,"author":{"gitId":"Gabau"},"content":"    @Test","lastModifiedDate":"2021-10-13"},{"lineNumber":30,"author":{"gitId":"Gabau"},"content":"    public void execute_command_success() {","lastModifiedDate":"2021-10-13"},{"lineNumber":31,"author":{"gitId":"Gabau"},"content":"        PersonContainsFieldsPredicate predicate \u003d new PersonContainsFieldsPredicate();","lastModifiedDate":"2021-10-13"},{"lineNumber":32,"author":{"gitId":"Gabau"},"content":"        predicate.addFieldToTest(DEFAULT_TEST_NAME);","lastModifiedDate":"2021-10-13"},{"lineNumber":33,"author":{"gitId":"Gabau"},"content":"        ArrayList\u003cString\u003e ls \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-13"},{"lineNumber":34,"author":{"gitId":"Gabau"},"content":"        //placeholder string","lastModifiedDate":"2021-10-14"},{"lineNumber":35,"author":{"gitId":"Gabau"},"content":"        ls.add(DEFAULT_TEST_NAME.toString());","lastModifiedDate":"2021-10-13"},{"lineNumber":36,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":37,"author":{"gitId":"Gabau"},"content":"        model.setPerson(DEFAULT_TEST_PERSON, DEFAULT_TEST_PERSON.unMark(DEFAULT_TEST_PERIOD));","lastModifiedDate":"2021-10-14"},{"lineNumber":38,"author":{"gitId":"Gabau"},"content":"        String expectedResult \u003d String.format(MarkCommand.DEFAULT_EXECUTION, 1,","lastModifiedDate":"2021-10-16"},{"lineNumber":39,"author":{"gitId":"Gabau"},"content":"                DEFAULT_TEST_PERIOD, listToString(ls));","lastModifiedDate":"2021-10-16"},{"lineNumber":40,"author":{"gitId":"Gabau"},"content":"        MarkCommand defaultCommand \u003d new MarkCommand(predicate, DEFAULT_TEST_PERIOD);","lastModifiedDate":"2021-10-13"},{"lineNumber":41,"author":{"gitId":"Gabau"},"content":"        Model expectedModel \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2021-10-13"},{"lineNumber":42,"author":{"gitId":"Gabau"},"content":"        expectedModel.setPerson(DEFAULT_TEST_PERSON, DEFAULT_TEST_PERSON.mark(DEFAULT_TEST_PERIOD));","lastModifiedDate":"2021-10-13"},{"lineNumber":43,"author":{"gitId":"Gabau"},"content":"        assertCommandSuccess(defaultCommand, model, expectedResult, expectedModel);","lastModifiedDate":"2021-10-13"},{"lineNumber":44,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":45,"author":{"gitId":"Gabau"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":46,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":47,"author":{"gitId":"Gabau"},"content":"    @Test","lastModifiedDate":"2021-10-14"},{"lineNumber":48,"author":{"gitId":"Gabau"},"content":"    public void execute_command_failure() {","lastModifiedDate":"2021-10-14"},{"lineNumber":49,"author":{"gitId":"Gabau"},"content":"        PersonContainsFieldsPredicate predicate \u003d new PersonContainsFieldsPredicate();","lastModifiedDate":"2021-10-14"},{"lineNumber":50,"author":{"gitId":"Gabau"},"content":"        MarkCommand defaultCommand \u003d new MarkCommand(predicate, DEFAULT_TEST_PERIOD);","lastModifiedDate":"2021-10-14"},{"lineNumber":51,"author":{"gitId":"Gabau"},"content":"        Model expectedModel \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2021-10-14"},{"lineNumber":52,"author":{"gitId":"Gabau"},"content":"        expectedModel.setPerson(DEFAULT_TEST_PERSON, DEFAULT_TEST_PERSON.mark(DEFAULT_TEST_PERIOD));","lastModifiedDate":"2021-10-14"},{"lineNumber":53,"author":{"gitId":"Gabau"},"content":"        assertCommandFailure(defaultCommand, model, String.format(MarkCommand.NOTHING_CHANGED, ALICE));","lastModifiedDate":"2021-10-14"},{"lineNumber":54,"author":{"gitId":"Gabau"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":55,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":56,"author":{"gitId":"Gabau"},"content":"}","lastModifiedDate":"2021-10-13"}],"authorContributionMap":{"Gabau":56}},{"path":"src/test/java/seedu/address/logic/commands/RemoveMarkCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Gabau"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-10-13"},{"lineNumber":2,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":3,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":4,"author":{"gitId":"Gabau"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-13"},{"lineNumber":5,"author":{"gitId":"Gabau"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-13"},{"lineNumber":6,"author":{"gitId":"Gabau"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2021-10-13"},{"lineNumber":7,"author":{"gitId":"Gabau"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-10-13"},{"lineNumber":8,"author":{"gitId":"Gabau"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2021-10-13"},{"lineNumber":9,"author":{"gitId":"Gabau"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2021-10-13"},{"lineNumber":10,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":11,"author":{"gitId":"Gabau"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-10-13"},{"lineNumber":12,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":13,"author":{"gitId":"Gabau"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-13"},{"lineNumber":14,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":15,"author":{"gitId":"Gabau"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-10-13"},{"lineNumber":16,"author":{"gitId":"Gabau"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-10-13"},{"lineNumber":17,"author":{"gitId":"Gabau"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2021-10-13"},{"lineNumber":18,"author":{"gitId":"Gabau"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2021-10-13"},{"lineNumber":19,"author":{"gitId":"Gabau"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2021-10-13"},{"lineNumber":20,"author":{"gitId":"Gabau"},"content":"import seedu.address.model.person.Period;","lastModifiedDate":"2021-10-13"},{"lineNumber":21,"author":{"gitId":"Gabau"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2021-10-13"},{"lineNumber":22,"author":{"gitId":"Gabau"},"content":"import seedu.address.model.person.PersonContainsFieldsPredicate;","lastModifiedDate":"2021-10-13"},{"lineNumber":23,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":24,"author":{"gitId":"Gabau"},"content":"public class RemoveMarkCommandTest {","lastModifiedDate":"2021-10-13"},{"lineNumber":25,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":26,"author":{"gitId":"Gabau"},"content":"    private static final Index DEFAULT_FIRST \u003d Index.fromOneBased(1);","lastModifiedDate":"2021-10-13"},{"lineNumber":27,"author":{"gitId":"Gabau"},"content":"    private static final Person DEFAULT_TEST_PERSON \u003d ALICE;","lastModifiedDate":"2021-10-13"},{"lineNumber":28,"author":{"gitId":"Gabau"},"content":"    private static final Name DEFAULT_TEST_NAME \u003d ALICE.getName();","lastModifiedDate":"2021-10-13"},{"lineNumber":29,"author":{"gitId":"Gabau"},"content":"    private static final Period DEFAULT_TEST_PERIOD \u003d ALICE.getAbsentDates().stream().findFirst().get();","lastModifiedDate":"2021-10-13"},{"lineNumber":30,"author":{"gitId":"Gabau"},"content":"    private static final PersonContainsFieldsPredicate DEFAULT_PREDICATE \u003d","lastModifiedDate":"2021-10-13"},{"lineNumber":31,"author":{"gitId":"Gabau"},"content":"            new PersonContainsFieldsPredicate();","lastModifiedDate":"2021-10-13"},{"lineNumber":32,"author":{"gitId":"Gabau"},"content":"    private static final PersonContainsFieldsPredicate PERSON_LOOKUP_BY_NAME \u003d","lastModifiedDate":"2021-10-13"},{"lineNumber":33,"author":{"gitId":"Gabau"},"content":"            new PersonContainsFieldsPredicate(ALICE.getName());","lastModifiedDate":"2021-10-13"},{"lineNumber":34,"author":{"gitId":"Gabau"},"content":"    private static final Period INCORRECT_TEST_PERIOD \u003d","lastModifiedDate":"2021-10-13"},{"lineNumber":35,"author":{"gitId":"Gabau"},"content":"            new Period(LocalDate.MIN);","lastModifiedDate":"2021-10-13"},{"lineNumber":36,"author":{"gitId":"Gabau"},"content":"    private static final RemoveMarkCommand DEFAULT \u003d","lastModifiedDate":"2021-10-13"},{"lineNumber":37,"author":{"gitId":"Gabau"},"content":"            new RemoveMarkCommand(DEFAULT_PREDICATE, DEFAULT_FIRST,","lastModifiedDate":"2021-10-13"},{"lineNumber":38,"author":{"gitId":"Gabau"},"content":"                    DEFAULT_TEST_PERIOD);","lastModifiedDate":"2021-10-13"},{"lineNumber":39,"author":{"gitId":"Gabau"},"content":"    private static final RemoveMarkCommand WRONG_PERIOD \u003d","lastModifiedDate":"2021-10-13"},{"lineNumber":40,"author":{"gitId":"Gabau"},"content":"            new RemoveMarkCommand(DEFAULT_PREDICATE, DEFAULT_FIRST,","lastModifiedDate":"2021-10-13"},{"lineNumber":41,"author":{"gitId":"Gabau"},"content":"                    INCORRECT_TEST_PERIOD);","lastModifiedDate":"2021-10-13"},{"lineNumber":42,"author":{"gitId":"Gabau"},"content":"    private static final RemoveMarkCommand REMOVE_MARK_BY_NAME \u003d","lastModifiedDate":"2021-10-13"},{"lineNumber":43,"author":{"gitId":"Gabau"},"content":"            new RemoveMarkCommand(PERSON_LOOKUP_BY_NAME, DEFAULT_TEST_PERIOD);","lastModifiedDate":"2021-10-13"},{"lineNumber":44,"author":{"gitId":"Gabau"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2021-10-13"},{"lineNumber":45,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":46,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":47,"author":{"gitId":"Gabau"},"content":"    @Test","lastModifiedDate":"2021-10-13"},{"lineNumber":48,"author":{"gitId":"Gabau"},"content":"    public void execute_command_success() {","lastModifiedDate":"2021-10-13"},{"lineNumber":49,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":50,"author":{"gitId":"Gabau"},"content":"        Person toRemoveMark \u003d DEFAULT_TEST_PERSON;","lastModifiedDate":"2021-10-13"},{"lineNumber":51,"author":{"gitId":"Gabau"},"content":"        Model expectedModel \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2021-10-13"},{"lineNumber":52,"author":{"gitId":"Gabau"},"content":"        //set the expected person in the output","lastModifiedDate":"2021-10-13"},{"lineNumber":53,"author":{"gitId":"Gabau"},"content":"        expectedModel.setPerson(toRemoveMark, toRemoveMark.unMark(DEFAULT_TEST_PERIOD));","lastModifiedDate":"2021-10-13"},{"lineNumber":54,"author":{"gitId":"Gabau"},"content":"        assertCommandSuccess(DEFAULT, model, String.format(RemoveMarkCommand.STAFF_UNMARKED,","lastModifiedDate":"2021-10-13"},{"lineNumber":55,"author":{"gitId":"Gabau"},"content":"                toRemoveMark.getName()), expectedModel);","lastModifiedDate":"2021-10-13"},{"lineNumber":56,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":57,"author":{"gitId":"Gabau"},"content":"        model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2021-10-13"},{"lineNumber":58,"author":{"gitId":"Gabau"},"content":"        assertCommandSuccess(REMOVE_MARK_BY_NAME, model,","lastModifiedDate":"2021-10-13"},{"lineNumber":59,"author":{"gitId":"Gabau"},"content":"                String.format(RemoveMarkCommand.STAFF_UNMARKED, toRemoveMark.getName()), expectedModel);","lastModifiedDate":"2021-10-13"},{"lineNumber":60,"author":{"gitId":"Gabau"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":61,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":62,"author":{"gitId":"Gabau"},"content":"    @Test","lastModifiedDate":"2021-10-13"},{"lineNumber":63,"author":{"gitId":"Gabau"},"content":"    public void execute_command_failure() {","lastModifiedDate":"2021-10-13"},{"lineNumber":64,"author":{"gitId":"Gabau"},"content":"        //testing for incorrect period","lastModifiedDate":"2021-10-13"},{"lineNumber":65,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":66,"author":{"gitId":"Gabau"},"content":"        assertCommandFailure(WRONG_PERIOD, model, RemoveMarkCommand.NO_STAFF_SATISFIES_QUERY);","lastModifiedDate":"2021-10-13"},{"lineNumber":67,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":68,"author":{"gitId":"Gabau"},"content":"        //test for when the target does not exist","lastModifiedDate":"2021-10-13"},{"lineNumber":69,"author":{"gitId":"Gabau"},"content":"        model.deletePerson(DEFAULT_TEST_PERSON);","lastModifiedDate":"2021-10-13"},{"lineNumber":70,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":71,"author":{"gitId":"Gabau"},"content":"        assertCommandFailure(REMOVE_MARK_BY_NAME, model, RemoveMarkCommand.NO_STAFF_SATISFIES_QUERY);","lastModifiedDate":"2021-10-13"},{"lineNumber":72,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":73,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":74,"author":{"gitId":"Gabau"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":75,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":76,"author":{"gitId":"Gabau"},"content":"    @Test","lastModifiedDate":"2021-10-13"},{"lineNumber":77,"author":{"gitId":"Gabau"},"content":"    public void equals() {","lastModifiedDate":"2021-10-13"},{"lineNumber":78,"author":{"gitId":"Gabau"},"content":"        assertTrue(DEFAULT.equals(DEFAULT));","lastModifiedDate":"2021-10-13"},{"lineNumber":79,"author":{"gitId":"Gabau"},"content":"        assertTrue(REMOVE_MARK_BY_NAME.equals(REMOVE_MARK_BY_NAME));","lastModifiedDate":"2021-10-13"},{"lineNumber":80,"author":{"gitId":"Gabau"},"content":"        assertFalse(DEFAULT.equals(REMOVE_MARK_BY_NAME));","lastModifiedDate":"2021-10-13"},{"lineNumber":81,"author":{"gitId":"Gabau"},"content":"        assertFalse(REMOVE_MARK_BY_NAME.equals(DEFAULT));","lastModifiedDate":"2021-10-13"},{"lineNumber":82,"author":{"gitId":"Gabau"},"content":"        assertFalse(WRONG_PERIOD.equals(REMOVE_MARK_BY_NAME));","lastModifiedDate":"2021-10-13"},{"lineNumber":83,"author":{"gitId":"Gabau"},"content":"        assertFalse(DEFAULT.equals(WRONG_PERIOD));","lastModifiedDate":"2021-10-13"},{"lineNumber":84,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":85,"author":{"gitId":"Gabau"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":86,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":87,"author":{"gitId":"Gabau"},"content":"}","lastModifiedDate":"2021-10-13"}],"authorContributionMap":{"Gabau":87}},{"path":"src/test/java/seedu/address/logic/commands/ViewCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Gabau"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-10-08"},{"lineNumber":2,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":3,"author":{"gitId":"Gabau"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-10-08"},{"lineNumber":4,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":5,"author":{"gitId":"Gabau"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2021-10-08"},{"lineNumber":6,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":7,"author":{"gitId":"Gabau"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-08"},{"lineNumber":8,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":9,"author":{"gitId":"Gabau"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2021-10-08"},{"lineNumber":10,"author":{"gitId":"Gabau"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-10-08"},{"lineNumber":11,"author":{"gitId":"Gabau"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-10-08"},{"lineNumber":12,"author":{"gitId":"Gabau"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2021-10-08"},{"lineNumber":13,"author":{"gitId":"Gabau"},"content":"import seedu.address.model.person.PersonContainsFieldsPredicate;","lastModifiedDate":"2021-10-08"},{"lineNumber":14,"author":{"gitId":"Gabau"},"content":"import seedu.address.stubs.model.ModelStub;","lastModifiedDate":"2021-10-08"},{"lineNumber":15,"author":{"gitId":"Gabau"},"content":"import seedu.address.testutil.TypicalPersons;","lastModifiedDate":"2021-10-08"},{"lineNumber":16,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":17,"author":{"gitId":"Gabau"},"content":"public class ViewCommandTest {","lastModifiedDate":"2021-10-08"},{"lineNumber":18,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":19,"author":{"gitId":"Gabau"},"content":"    private Model model;","lastModifiedDate":"2021-10-08"},{"lineNumber":20,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":21,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":22,"author":{"gitId":"Gabau"},"content":"    @Test","lastModifiedDate":"2021-10-08"},{"lineNumber":23,"author":{"gitId":"Gabau"},"content":"    public void execute_success() {","lastModifiedDate":"2021-10-08"},{"lineNumber":24,"author":{"gitId":"Gabau"},"content":"        model \u003d new ReadOnlyModel();","lastModifiedDate":"2021-10-08"},{"lineNumber":25,"author":{"gitId":"Gabau"},"content":"        ViewCommand command \u003d new ViewCommand(new PersonContainsFieldsPredicate());","lastModifiedDate":"2021-10-08"},{"lineNumber":26,"author":{"gitId":"Gabau"},"content":"        Model expectedModel \u003d new ReadOnlyModel();","lastModifiedDate":"2021-10-08"},{"lineNumber":27,"author":{"gitId":"Gabau"},"content":"        assertCommandSuccess(command, model, new CommandResult(String.format(ViewCommand.DEFAULT_COMMAND,","lastModifiedDate":"2021-10-08"},{"lineNumber":28,"author":{"gitId":"Gabau"},"content":"                expectedModel.getFilteredPersonList().toString())), expectedModel);","lastModifiedDate":"2021-10-08"},{"lineNumber":29,"author":{"gitId":"Gabau"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":30,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":31,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":32,"author":{"gitId":"Gabau"},"content":"    private class ReadOnlyModel extends ModelStub {","lastModifiedDate":"2021-10-08"},{"lineNumber":33,"author":{"gitId":"Gabau"},"content":"        private ObservableList\u003cPerson\u003e testList;","lastModifiedDate":"2021-10-08"},{"lineNumber":34,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":35,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":36,"author":{"gitId":"Gabau"},"content":"        public ReadOnlyModel() {","lastModifiedDate":"2021-10-08"},{"lineNumber":37,"author":{"gitId":"Gabau"},"content":"            this.testList \u003d FXCollections.observableArrayList(TypicalPersons.ALICE,","lastModifiedDate":"2021-10-08"},{"lineNumber":38,"author":{"gitId":"Gabau"},"content":"                    TypicalPersons.BENSON, TypicalPersons.CARL);","lastModifiedDate":"2021-10-08"},{"lineNumber":39,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":40,"author":{"gitId":"Gabau"},"content":"        }","lastModifiedDate":"2021-10-08"},{"lineNumber":41,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":42,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":43,"author":{"gitId":"Gabau"},"content":"        @Override","lastModifiedDate":"2021-10-08"},{"lineNumber":44,"author":{"gitId":"Gabau"},"content":"        public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2021-10-08"},{"lineNumber":45,"author":{"gitId":"Gabau"},"content":"            this.testList \u003d this.testList.filtered(predicate);","lastModifiedDate":"2021-10-08"},{"lineNumber":46,"author":{"gitId":"Gabau"},"content":"        }","lastModifiedDate":"2021-10-08"},{"lineNumber":47,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":48,"author":{"gitId":"Gabau"},"content":"        @Override","lastModifiedDate":"2021-10-08"},{"lineNumber":49,"author":{"gitId":"Gabau"},"content":"        public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2021-10-08"},{"lineNumber":50,"author":{"gitId":"Gabau"},"content":"            return this.testList;","lastModifiedDate":"2021-10-08"},{"lineNumber":51,"author":{"gitId":"Gabau"},"content":"        }","lastModifiedDate":"2021-10-08"},{"lineNumber":52,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":53,"author":{"gitId":"Gabau"},"content":"        @Override","lastModifiedDate":"2021-10-08"},{"lineNumber":54,"author":{"gitId":"Gabau"},"content":"        public boolean equals(Object obj) {","lastModifiedDate":"2021-10-08"},{"lineNumber":55,"author":{"gitId":"Gabau"},"content":"            if (!(obj instanceof ReadOnlyModel)) {","lastModifiedDate":"2021-10-08"},{"lineNumber":56,"author":{"gitId":"Gabau"},"content":"                return false;","lastModifiedDate":"2021-10-08"},{"lineNumber":57,"author":{"gitId":"Gabau"},"content":"            }","lastModifiedDate":"2021-10-08"},{"lineNumber":58,"author":{"gitId":"Gabau"},"content":"            ReadOnlyModel readOnlyModel \u003d (ReadOnlyModel) obj;","lastModifiedDate":"2021-10-08"},{"lineNumber":59,"author":{"gitId":"Gabau"},"content":"            return readOnlyModel.testList.equals(this.testList);","lastModifiedDate":"2021-10-08"},{"lineNumber":60,"author":{"gitId":"Gabau"},"content":"        }","lastModifiedDate":"2021-10-08"},{"lineNumber":61,"author":{"gitId":"Gabau"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":62,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":63,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":64,"author":{"gitId":"Gabau"},"content":"}","lastModifiedDate":"2021-10-08"}],"authorContributionMap":{"Gabau":64}},{"path":"src/test/java/seedu/address/logic/parser/AddCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-10-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-06-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2021-10-09"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_BOB;","lastModifiedDate":"2021-10-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2021-10-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_BOB;","lastModifiedDate":"2021-10-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_ADDRESS_DESC;","lastModifiedDate":"2021-10-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_EMAIL_DESC;","lastModifiedDate":"2021-10-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2021-10-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_PHONE_DESC;","lastModifiedDate":"2021-10-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_TAG_DESC;","lastModifiedDate":"2021-10-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2021-10-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_BOB;","lastModifiedDate":"2021-10-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2021-10-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_BOB;","lastModifiedDate":"2021-10-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PREAMBLE_NON_EMPTY;","lastModifiedDate":"2021-10-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PREAMBLE_WHITESPACE;","lastModifiedDate":"2021-10-09"},{"lineNumber":19,"author":{"gitId":"fullfatwasabi"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ROLE_DESC_AMY;","lastModifiedDate":"2021-10-09"},{"lineNumber":20,"author":{"gitId":"fullfatwasabi"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ROLE_DESC_BOB;","lastModifiedDate":"2021-10-09"},{"lineNumber":21,"author":{"gitId":"fullfatwasabi"},"content":"import static seedu.address.logic.commands.CommandTestUtil.SALARY_DESC_AMY;","lastModifiedDate":"2021-10-09"},{"lineNumber":22,"author":{"gitId":"fullfatwasabi"},"content":"import static seedu.address.logic.commands.CommandTestUtil.SALARY_DESC_BOB;","lastModifiedDate":"2021-10-09"},{"lineNumber":23,"author":{"gitId":"fullfatwasabi"},"content":"import static seedu.address.logic.commands.CommandTestUtil.STATUS_DESC_AMY;","lastModifiedDate":"2021-10-09"},{"lineNumber":24,"author":{"gitId":"fullfatwasabi"},"content":"import static seedu.address.logic.commands.CommandTestUtil.STATUS_DESC_BOB;","lastModifiedDate":"2021-10-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_FRIEND;","lastModifiedDate":"2021-10-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_HUSBAND;","lastModifiedDate":"2021-10-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2021-10-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2021-10-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2021-10-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2021-10-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2021-10-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2021-10-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.AMY;","lastModifiedDate":"2018-07-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BOB;","lastModifiedDate":"2018-07-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-06-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2021-09-22"},{"lineNumber":42,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2021-09-22"},{"lineNumber":43,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2021-09-22"},{"lineNumber":44,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2021-09-22"},{"lineNumber":45,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2021-09-22"},{"lineNumber":46,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-06-15"},{"lineNumber":47,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-06-15"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":49,"author":{"gitId":"-"},"content":"public class AddCommandParserTest {","lastModifiedDate":"2017-06-15"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    private AddCommandParser parser \u003d new AddCommandParser();","lastModifiedDate":"2017-06-15"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void parse_allFieldsPresent_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        Person expectedPerson \u003d new PersonBuilder(BOB).withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2021-09-22"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        // whitespace only preamble","lastModifiedDate":"2017-12-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, PREAMBLE_WHITESPACE + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":58,"author":{"gitId":"fullfatwasabi"},"content":"                        + ADDRESS_DESC_BOB + ROLE_DESC_BOB + SALARY_DESC_BOB + STATUS_DESC_BOB + TAG_DESC_FRIEND,","lastModifiedDate":"2021-10-09"},{"lineNumber":59,"author":{"gitId":"fullfatwasabi"},"content":"                new AddCommand(expectedPerson));","lastModifiedDate":"2021-10-09"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        // multiple names - last name accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_AMY + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":63,"author":{"gitId":"fullfatwasabi"},"content":"                        + ADDRESS_DESC_BOB + ROLE_DESC_BOB + SALARY_DESC_BOB + STATUS_DESC_BOB + TAG_DESC_FRIEND,","lastModifiedDate":"2021-10-09"},{"lineNumber":64,"author":{"gitId":"fullfatwasabi"},"content":"                new AddCommand(expectedPerson));","lastModifiedDate":"2021-10-09"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        // multiple phones - last phone accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_AMY + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":68,"author":{"gitId":"fullfatwasabi"},"content":"                        + ADDRESS_DESC_BOB + ROLE_DESC_BOB + SALARY_DESC_BOB + STATUS_DESC_BOB + TAG_DESC_FRIEND,","lastModifiedDate":"2021-10-09"},{"lineNumber":69,"author":{"gitId":"fullfatwasabi"},"content":"                new AddCommand(expectedPerson));","lastModifiedDate":"2021-10-09"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // multiple emails - last email accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_AMY + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":73,"author":{"gitId":"fullfatwasabi"},"content":"                        + ADDRESS_DESC_BOB + ROLE_DESC_BOB + SALARY_DESC_BOB + STATUS_DESC_BOB + TAG_DESC_FRIEND,","lastModifiedDate":"2021-10-09"},{"lineNumber":74,"author":{"gitId":"fullfatwasabi"},"content":"                new AddCommand(expectedPerson));","lastModifiedDate":"2021-10-09"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        // multiple addresses - last address accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_AMY","lastModifiedDate":"2017-12-23"},{"lineNumber":78,"author":{"gitId":"fullfatwasabi"},"content":"                        + ADDRESS_DESC_BOB + ROLE_DESC_BOB + SALARY_DESC_BOB + STATUS_DESC_BOB + TAG_DESC_FRIEND,","lastModifiedDate":"2021-10-09"},{"lineNumber":79,"author":{"gitId":"fullfatwasabi"},"content":"                new AddCommand(expectedPerson));","lastModifiedDate":"2021-10-09"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        // multiple tags - all accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        Person expectedPersonMultipleTags \u003d new PersonBuilder(BOB).withTags(VALID_TAG_FRIEND, VALID_TAG_HUSBAND)","lastModifiedDate":"2021-09-22"},{"lineNumber":83,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-07-25"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":85,"author":{"gitId":"fullfatwasabi"},"content":"                        + ROLE_DESC_BOB + SALARY_DESC_BOB + STATUS_DESC_BOB + TAG_DESC_HUSBAND + TAG_DESC_FRIEND,","lastModifiedDate":"2021-10-09"},{"lineNumber":86,"author":{"gitId":"fullfatwasabi"},"content":"                new AddCommand(expectedPersonMultipleTags));","lastModifiedDate":"2021-10-09"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    public void parse_optionalFieldsMissing_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        // zero tags","lastModifiedDate":"2017-06-15"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        Person expectedPerson \u003d new PersonBuilder(AMY).withTags().build();","lastModifiedDate":"2021-09-22"},{"lineNumber":93,"author":{"gitId":"fullfatwasabi"},"content":"        assertParseSuccess(parser, NAME_DESC_AMY + PHONE_DESC_AMY + EMAIL_DESC_AMY","lastModifiedDate":"2021-10-09"},{"lineNumber":94,"author":{"gitId":"fullfatwasabi"},"content":"                        + ADDRESS_DESC_AMY + ROLE_DESC_AMY + SALARY_DESC_AMY + STATUS_DESC_AMY,","lastModifiedDate":"2021-10-09"},{"lineNumber":95,"author":{"gitId":"-"},"content":"                new AddCommand(expectedPerson));","lastModifiedDate":"2021-09-22"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    public void parse_compulsoryFieldMissing_failure() {","lastModifiedDate":"2017-06-15"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE);","lastModifiedDate":"2017-06-15"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        // missing name prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":103,"author":{"gitId":"fullfatwasabi"},"content":"        assertParseFailure(parser, VALID_NAME_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2021-10-09"},{"lineNumber":104,"author":{"gitId":"fullfatwasabi"},"content":"                        + ROLE_DESC_BOB + SALARY_DESC_BOB + STATUS_DESC_BOB, expectedMessage);","lastModifiedDate":"2021-10-09"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        // missing phone prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":107,"author":{"gitId":"fullfatwasabi"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + VALID_PHONE_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2021-10-09"},{"lineNumber":108,"author":{"gitId":"fullfatwasabi"},"content":"                        + ROLE_DESC_BOB + SALARY_DESC_BOB + STATUS_DESC_BOB, expectedMessage);","lastModifiedDate":"2021-10-09"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        // missing email prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":111,"author":{"gitId":"fullfatwasabi"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + VALID_EMAIL_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2021-10-09"},{"lineNumber":112,"author":{"gitId":"fullfatwasabi"},"content":"                        + ROLE_DESC_BOB + SALARY_DESC_BOB + STATUS_DESC_BOB,","lastModifiedDate":"2021-10-09"},{"lineNumber":113,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        // missing address prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":116,"author":{"gitId":"fullfatwasabi"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + VALID_ADDRESS_BOB","lastModifiedDate":"2021-10-09"},{"lineNumber":117,"author":{"gitId":"fullfatwasabi"},"content":"                        + ROLE_DESC_BOB + SALARY_DESC_BOB + STATUS_DESC_BOB,","lastModifiedDate":"2021-10-09"},{"lineNumber":118,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        // all prefixes missing","lastModifiedDate":"2017-06-15"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, VALID_NAME_BOB + VALID_PHONE_BOB + VALID_EMAIL_BOB + VALID_ADDRESS_BOB,","lastModifiedDate":"2017-12-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2017-06-15"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        // invalid name","lastModifiedDate":"2017-06-15"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":129,"author":{"gitId":"fullfatwasabi"},"content":"                        + ROLE_DESC_BOB + SALARY_DESC_BOB + STATUS_DESC_BOB + STATUS_DESC_BOB + TAG_DESC_HUSBAND","lastModifiedDate":"2021-10-09"},{"lineNumber":130,"author":{"gitId":"fullfatwasabi"},"content":"                        + TAG_DESC_FRIEND, Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-09"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        // invalid phone","lastModifiedDate":"2017-06-15"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + INVALID_PHONE_DESC + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":134,"author":{"gitId":"fullfatwasabi"},"content":"                        + ROLE_DESC_BOB + SALARY_DESC_BOB + STATUS_DESC_BOB + TAG_DESC_HUSBAND + TAG_DESC_FRIEND,","lastModifiedDate":"2021-10-09"},{"lineNumber":135,"author":{"gitId":"fullfatwasabi"},"content":"                Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-09"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        // invalid email","lastModifiedDate":"2017-06-15"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + INVALID_EMAIL_DESC + ADDRESS_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":139,"author":{"gitId":"fullfatwasabi"},"content":"                        + ROLE_DESC_BOB + SALARY_DESC_BOB + STATUS_DESC_BOB + TAG_DESC_HUSBAND + TAG_DESC_FRIEND,","lastModifiedDate":"2021-10-09"},{"lineNumber":140,"author":{"gitId":"fullfatwasabi"},"content":"                Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-09"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        // invalid address","lastModifiedDate":"2017-06-15"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + INVALID_ADDRESS_DESC","lastModifiedDate":"2017-12-23"},{"lineNumber":144,"author":{"gitId":"fullfatwasabi"},"content":"                        + ROLE_DESC_BOB + SALARY_DESC_BOB + STATUS_DESC_BOB + TAG_DESC_HUSBAND + TAG_DESC_FRIEND,","lastModifiedDate":"2021-10-09"},{"lineNumber":145,"author":{"gitId":"fullfatwasabi"},"content":"                Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-09"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        // invalid tag","lastModifiedDate":"2017-06-15"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":149,"author":{"gitId":"fullfatwasabi"},"content":"                        + ROLE_DESC_BOB + SALARY_DESC_BOB + STATUS_DESC_BOB + INVALID_TAG_DESC + VALID_TAG_FRIEND,","lastModifiedDate":"2021-10-09"},{"lineNumber":150,"author":{"gitId":"fullfatwasabi"},"content":"                Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-09"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        // two invalid values, only first invalid value reported","lastModifiedDate":"2017-06-15"},{"lineNumber":153,"author":{"gitId":"fullfatwasabi"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + PHONE_DESC_BOB + EMAIL_DESC_BOB + INVALID_ADDRESS_DESC","lastModifiedDate":"2021-10-09"},{"lineNumber":154,"author":{"gitId":"fullfatwasabi"},"content":"                        + ROLE_DESC_BOB + SALARY_DESC_BOB + STATUS_DESC_BOB, Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-09"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        // non-empty preamble","lastModifiedDate":"2017-12-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, PREAMBLE_NON_EMPTY + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":158,"author":{"gitId":"fullfatwasabi"},"content":"                        + ADDRESS_DESC_BOB + ROLE_DESC_BOB + SALARY_DESC_BOB + STATUS_DESC_BOB + TAG_DESC_HUSBAND","lastModifiedDate":"2021-10-09"},{"lineNumber":159,"author":{"gitId":"fullfatwasabi"},"content":"                        + TAG_DESC_FRIEND, String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-09"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":161,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-15"}],"authorContributionMap":{"fullfatwasabi":42,"-":119}},{"path":"src/test/java/seedu/address/logic/parser/AddShiftCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"IrvingHe000"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-10-14"},{"lineNumber":2,"author":{"gitId":"IrvingHe000"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":3,"author":{"gitId":"IrvingHe000"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-14"},{"lineNumber":4,"author":{"gitId":"IrvingHe000"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2021-10-14"},{"lineNumber":5,"author":{"gitId":"IrvingHe000"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2021-10-14"},{"lineNumber":6,"author":{"gitId":"IrvingHe000"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":7,"author":{"gitId":"IrvingHe000"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-14"},{"lineNumber":8,"author":{"gitId":"IrvingHe000"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":9,"author":{"gitId":"IrvingHe000"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-10-14"},{"lineNumber":10,"author":{"gitId":"IrvingHe000"},"content":"import seedu.address.logic.commands.AddShiftCommand;","lastModifiedDate":"2021-10-14"},{"lineNumber":11,"author":{"gitId":"IrvingHe000"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2021-10-14"},{"lineNumber":12,"author":{"gitId":"IrvingHe000"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":13,"author":{"gitId":"IrvingHe000"},"content":"public class AddShiftCommandParserTest {","lastModifiedDate":"2021-10-14"},{"lineNumber":14,"author":{"gitId":"IrvingHe000"},"content":"    private AddShiftCommandParser parser \u003d new AddShiftCommandParser();","lastModifiedDate":"2021-10-14"},{"lineNumber":15,"author":{"gitId":"IrvingHe000"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":16,"author":{"gitId":"IrvingHe000"},"content":"    @Test","lastModifiedDate":"2021-10-14"},{"lineNumber":17,"author":{"gitId":"IrvingHe000"},"content":"    public void parse_emptyArg_throwsParseException() {","lastModifiedDate":"2021-10-14"},{"lineNumber":18,"author":{"gitId":"IrvingHe000"},"content":"        assertParseFailure(parser, \"     \", String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2021-10-14"},{"lineNumber":19,"author":{"gitId":"IrvingHe000"},"content":"                AddShiftCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-14"},{"lineNumber":20,"author":{"gitId":"IrvingHe000"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":21,"author":{"gitId":"IrvingHe000"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":22,"author":{"gitId":"IrvingHe000"},"content":"    @Test","lastModifiedDate":"2021-10-14"},{"lineNumber":23,"author":{"gitId":"IrvingHe000"},"content":"    public void prefix_missing_throwsParseException() {","lastModifiedDate":"2021-10-14"},{"lineNumber":24,"author":{"gitId":"IrvingHe000"},"content":"        assertParseFailure(parser, \"addShift\", String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2021-10-14"},{"lineNumber":25,"author":{"gitId":"IrvingHe000"},"content":"                AddShiftCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-14"},{"lineNumber":26,"author":{"gitId":"IrvingHe000"},"content":"        assertParseFailure(parser, \"addShift d/monday-1\", String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2021-10-14"},{"lineNumber":27,"author":{"gitId":"IrvingHe000"},"content":"                AddShiftCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-14"},{"lineNumber":28,"author":{"gitId":"IrvingHe000"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":29,"author":{"gitId":"IrvingHe000"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":30,"author":{"gitId":"IrvingHe000"},"content":"    @Test","lastModifiedDate":"2021-10-14"},{"lineNumber":31,"author":{"gitId":"IrvingHe000"},"content":"    public void prefix_duplicate_throwsParseException() {","lastModifiedDate":"2021-10-14"},{"lineNumber":32,"author":{"gitId":"IrvingHe000"},"content":"        assertParseFailure(parser, \"addShift i/1 n/testingName d/monday-1\",","lastModifiedDate":"2021-10-14"},{"lineNumber":33,"author":{"gitId":"IrvingHe000"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddShiftCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-14"},{"lineNumber":34,"author":{"gitId":"IrvingHe000"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":35,"author":{"gitId":"IrvingHe000"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":36,"author":{"gitId":"IrvingHe000"},"content":"    @Test","lastModifiedDate":"2021-10-14"},{"lineNumber":37,"author":{"gitId":"IrvingHe000"},"content":"    public void parse_validArgs_returnsFindCommand() {","lastModifiedDate":"2021-10-14"},{"lineNumber":38,"author":{"gitId":"IrvingHe000"},"content":"        AddShiftCommand expectedNameCommand \u003d new AddShiftCommand(null, new Name(\"testing\"),","lastModifiedDate":"2021-10-14"},{"lineNumber":39,"author":{"gitId":"IrvingHe000"},"content":"                \"monday-1\");","lastModifiedDate":"2021-10-14"},{"lineNumber":40,"author":{"gitId":"IrvingHe000"},"content":"        AddShiftCommand expectedIndexCommand \u003d new AddShiftCommand(Index.fromOneBased(1), null,","lastModifiedDate":"2021-10-14"},{"lineNumber":41,"author":{"gitId":"IrvingHe000"},"content":"                \"monday-1\");","lastModifiedDate":"2021-10-14"},{"lineNumber":42,"author":{"gitId":"IrvingHe000"},"content":"        assertParseSuccess(parser, \" n/testing d/monday-1\", expectedNameCommand);","lastModifiedDate":"2021-10-14"},{"lineNumber":43,"author":{"gitId":"IrvingHe000"},"content":"        assertParseSuccess(parser, \" i/1 d/monday-1\", expectedIndexCommand);","lastModifiedDate":"2021-10-14"},{"lineNumber":44,"author":{"gitId":"IrvingHe000"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":45,"author":{"gitId":"IrvingHe000"},"content":"}","lastModifiedDate":"2021-10-14"}],"authorContributionMap":{"IrvingHe000":45}},{"path":"src/test/java/seedu/address/logic/parser/AddressBookParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-06-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2017-05-24"},{"lineNumber":7,"author":{"gitId":"Gabau"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DASH_INDEX;","lastModifiedDate":"2021-10-12"},{"lineNumber":8,"author":{"gitId":"Tetrerox"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_INDEX;","lastModifiedDate":"2021-10-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2017-06-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ClearCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2021-09-22"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ExitCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.HelpCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-05-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2021-09-22"},{"lineNumber":29,"author":{"gitId":"mweeruien"},"content":"import seedu.address.model.person.predicates.NameContainsKeywordsPredicate;","lastModifiedDate":"2021-10-10"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2021-09-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-06-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonUtil;","lastModifiedDate":"2017-06-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"public class AddressBookParserTest {","lastModifiedDate":"2017-07-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private final AddressBookParser parser \u003d new AddressBookParser();","lastModifiedDate":"2017-07-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public void parseCommand_add() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2021-09-22"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        AddCommand command \u003d (AddCommand) parser.parseCommand(PersonUtil.getAddCommand(person));","lastModifiedDate":"2021-09-22"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertEquals(new AddCommand(person), command);","lastModifiedDate":"2021-09-22"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public void parseCommand_clear() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD) instanceof ClearCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD + \" 3\") instanceof ClearCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public void parseCommand_delete() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        DeleteCommand command \u003d (DeleteCommand) parser.parseCommand(","lastModifiedDate":"2017-06-27"},{"lineNumber":54,"author":{"gitId":"Tetrerox"},"content":"                DeleteCommand.COMMAND_WORD + \" \" + PREFIX_INDEX + INDEX_FIRST_PERSON.getOneBased());","lastModifiedDate":"2021-10-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertEquals(new DeleteCommand(INDEX_FIRST_PERSON), command);","lastModifiedDate":"2017-06-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-10-09"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public void parseCommand_edit() throws Exception {","lastModifiedDate":"2021-10-09"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2021-10-09"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(person).build();","lastModifiedDate":"2021-10-09"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        EditCommand command \u003d (EditCommand) parser.parseCommand(EditCommand.COMMAND_WORD + \" \"","lastModifiedDate":"2021-10-09"},{"lineNumber":63,"author":{"gitId":"Gabau"},"content":"                + PREFIX_DASH_INDEX.getPrefix()","lastModifiedDate":"2021-10-12"},{"lineNumber":64,"author":{"gitId":"-"},"content":"                + INDEX_FIRST_PERSON.getOneBased() + \" \" + PersonUtil.getEditPersonDescriptorDetails(descriptor));","lastModifiedDate":"2021-10-09"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertEquals(new EditCommand(INDEX_FIRST_PERSON, descriptor), command);","lastModifiedDate":"2021-10-09"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void parseCommand_exit() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD) instanceof ExitCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD + \" 3\") instanceof ExitCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public void parseCommand_find() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        List\u003cString\u003e keywords \u003d Arrays.asList(\"foo\", \"bar\", \"baz\");","lastModifiedDate":"2017-06-12"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        FindCommand command \u003d (FindCommand) parser.parseCommand(","lastModifiedDate":"2017-06-27"},{"lineNumber":78,"author":{"gitId":"mweeruien"},"content":"                FindCommand.COMMAND_WORD + \" -n \" + keywords.stream().collect(Collectors.joining(\" \")));","lastModifiedDate":"2021-10-10"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertEquals(new FindCommand(new NameContainsKeywordsPredicate(keywords)), command);","lastModifiedDate":"2017-06-12"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void parseCommand_help() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD) instanceof HelpCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD + \" 3\") instanceof HelpCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    public void parseCommand_list() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD) instanceof ListCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD + \" 3\") instanceof ListCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    public void parseCommand_unrecognisedInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE), ()","lastModifiedDate":"2019-03-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"            -\u003e parser.parseCommand(\"\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    public void parseCommand_unknownCommand_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, MESSAGE_UNKNOWN_COMMAND, () -\u003e parser.parseCommand(\"unknownCommand\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":104,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24"}],"authorContributionMap":{"Tetrerox":2,"Gabau":2,"-":98,"mweeruien":2}},{"path":"src/test/java/seedu/address/logic/parser/DeleteCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-06-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-06-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":7,"author":{"gitId":"Tetrerox"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2021-10-10"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2017-06-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * As we are only doing white-box testing, our test cases do not cover path variations","lastModifiedDate":"2017-06-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * outside of the DeleteCommand code. For example, inputs \"1\" and \"1 abc\" take the","lastModifiedDate":"2017-06-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * same path through the DeleteCommand, and therefore we test only one of them.","lastModifiedDate":"2017-06-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * The path variation for those two cases occur inside the ParserUtil, and","lastModifiedDate":"2017-06-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * therefore should be covered by the ParserUtilTest.","lastModifiedDate":"2017-06-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class DeleteCommandParserTest {","lastModifiedDate":"2017-06-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private DeleteCommandParser parser \u003d new DeleteCommandParser();","lastModifiedDate":"2017-06-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-09"},{"lineNumber":25,"author":{"gitId":"Tetrerox"},"content":"    public void parse_validIndex_returnsDeleteCommand() {","lastModifiedDate":"2021-10-10"},{"lineNumber":26,"author":{"gitId":"Tetrerox"},"content":"        assertParseSuccess(parser, \" i/1\", new DeleteCommand(INDEX_FIRST_PERSON));","lastModifiedDate":"2021-10-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":29,"author":{"gitId":"Tetrerox"},"content":"    @Test","lastModifiedDate":"2021-10-10"},{"lineNumber":30,"author":{"gitId":"Tetrerox"},"content":"    public void parse_validName_returnsDeleteCommand() {","lastModifiedDate":"2021-10-10"},{"lineNumber":31,"author":{"gitId":"Tetrerox"},"content":"        assertParseSuccess(parser, \" n/Alice Pauline\", new DeleteCommand(ALICE.getName()));","lastModifiedDate":"2021-10-10"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"a\", String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-07-06"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-09"}],"authorContributionMap":{"Tetrerox":6,"-":32}},{"path":"src/test/java/seedu/address/logic/parser/EditCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-05-04"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_ADDRESS_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_EMAIL_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_PHONE_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_TAG_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":27,"author":{"gitId":"Gabau"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DASH_INDEX;","lastModifiedDate":"2021-10-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-05-04"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_THIRD_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":35,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":37,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-05-04"},{"lineNumber":39,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2021-09-22"},{"lineNumber":40,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2021-09-22"},{"lineNumber":41,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2021-09-22"},{"lineNumber":42,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2021-09-22"},{"lineNumber":43,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2021-09-22"},{"lineNumber":44,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-05-04"},{"lineNumber":45,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2021-09-22"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":47,"author":{"gitId":"-"},"content":"public class EditCommandParserTest {","lastModifiedDate":"2017-05-04"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    private static final String TAG_EMPTY \u003d \" \" + PREFIX_TAG;","lastModifiedDate":"2017-05-04"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    private static final String MESSAGE_INVALID_FORMAT \u003d","lastModifiedDate":"2017-05-04"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditCommand.MESSAGE_USAGE);","lastModifiedDate":"2017-05-04"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    private EditCommandParser parser \u003d new EditCommandParser();","lastModifiedDate":"2017-05-04"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void parse_missingParts_failure() {","lastModifiedDate":"2017-05-04"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        // no index specified","lastModifiedDate":"2017-05-04"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, VALID_NAME_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        // no field specified","lastModifiedDate":"2017-05-04"},{"lineNumber":62,"author":{"gitId":"Gabau"},"content":"        assertParseFailure(parser, \" -i 1\", EditCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2021-10-07"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        // no index and no field specified","lastModifiedDate":"2017-05-04"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void parse_invalidPreamble_failure() {","lastModifiedDate":"2017-06-06"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        // negative index","lastModifiedDate":"2017-05-04"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"-5\" + NAME_DESC_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        // zero index","lastModifiedDate":"2017-06-06"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"0\" + NAME_DESC_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-06"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        // invalid arguments being parsed as preamble","lastModifiedDate":"2017-06-06"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1 some random string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-06"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        // invalid prefix being parsed as preamble","lastModifiedDate":"2017-06-06"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1 i/ string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2017-05-04"},{"lineNumber":85,"author":{"gitId":"Gabau"},"content":"        String commandPrefix \u003d \" -i 1\";","lastModifiedDate":"2021-10-07"},{"lineNumber":86,"author":{"gitId":"Gabau"},"content":"        assertParseFailure(parser, commandPrefix","lastModifiedDate":"2021-10-07"},{"lineNumber":87,"author":{"gitId":"Gabau"},"content":"                + INVALID_NAME_DESC, Name.MESSAGE_CONSTRAINTS); // invalid name","lastModifiedDate":"2021-10-07"},{"lineNumber":88,"author":{"gitId":"Gabau"},"content":"        assertParseFailure(parser, commandPrefix","lastModifiedDate":"2021-10-07"},{"lineNumber":89,"author":{"gitId":"Gabau"},"content":"                + INVALID_PHONE_DESC, Phone.MESSAGE_CONSTRAINTS); // invalid phone","lastModifiedDate":"2021-10-07"},{"lineNumber":90,"author":{"gitId":"Gabau"},"content":"        assertParseFailure(parser, commandPrefix","lastModifiedDate":"2021-10-07"},{"lineNumber":91,"author":{"gitId":"Gabau"},"content":"                + INVALID_EMAIL_DESC, Email.MESSAGE_CONSTRAINTS); // invalid email","lastModifiedDate":"2021-10-07"},{"lineNumber":92,"author":{"gitId":"Gabau"},"content":"        assertParseFailure(parser, commandPrefix","lastModifiedDate":"2021-10-07"},{"lineNumber":93,"author":{"gitId":"Gabau"},"content":"                + INVALID_ADDRESS_DESC, Address.MESSAGE_CONSTRAINTS); // invalid address","lastModifiedDate":"2021-10-07"},{"lineNumber":94,"author":{"gitId":"Gabau"},"content":"        assertParseFailure(parser, commandPrefix","lastModifiedDate":"2021-10-07"},{"lineNumber":95,"author":{"gitId":"Gabau"},"content":"                + INVALID_TAG_DESC, Tag.MESSAGE_CONSTRAINTS); // invalid tag","lastModifiedDate":"2021-10-07"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        // invalid phone followed by valid email","lastModifiedDate":"2017-05-04"},{"lineNumber":98,"author":{"gitId":"Gabau"},"content":"        assertParseFailure(parser, commandPrefix + INVALID_PHONE_DESC + EMAIL_DESC_AMY, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-07"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        // valid phone followed by invalid phone. The test case for invalid phone followed by valid phone","lastModifiedDate":"2017-05-04"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        // is tested at {@code parse_invalidValueFollowedByValidValue_success()}","lastModifiedDate":"2017-05-04"},{"lineNumber":102,"author":{"gitId":"Gabau"},"content":"        assertParseFailure(parser, commandPrefix + PHONE_DESC_BOB + INVALID_PHONE_DESC, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-07"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        // while parsing {@code PREFIX_TAG} alone will reset the tags of the {@code Person} being edited,","lastModifiedDate":"2017-05-04"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        // parsing it together with a valid tag results in error","lastModifiedDate":"2017-05-04"},{"lineNumber":106,"author":{"gitId":"Gabau"},"content":"        assertParseFailure(parser, commandPrefix","lastModifiedDate":"2021-10-07"},{"lineNumber":107,"author":{"gitId":"Gabau"},"content":"                + TAG_DESC_FRIEND + TAG_DESC_HUSBAND + TAG_EMPTY, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-07"},{"lineNumber":108,"author":{"gitId":"Gabau"},"content":"        assertParseFailure(parser, commandPrefix","lastModifiedDate":"2021-10-07"},{"lineNumber":109,"author":{"gitId":"Gabau"},"content":"                + TAG_DESC_FRIEND + TAG_EMPTY + TAG_DESC_HUSBAND, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-07"},{"lineNumber":110,"author":{"gitId":"Gabau"},"content":"        assertParseFailure(parser, commandPrefix","lastModifiedDate":"2021-10-07"},{"lineNumber":111,"author":{"gitId":"Gabau"},"content":"                + TAG_EMPTY + TAG_DESC_FRIEND + TAG_DESC_HUSBAND, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-07"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        // multiple invalid values, but only the first invalid value is captured","lastModifiedDate":"2017-05-04"},{"lineNumber":114,"author":{"gitId":"Gabau"},"content":"        assertParseFailure(parser, commandPrefix","lastModifiedDate":"2021-10-07"},{"lineNumber":115,"author":{"gitId":"Gabau"},"content":"                        + INVALID_NAME_DESC + INVALID_EMAIL_DESC + VALID_ADDRESS_AMY + VALID_PHONE_AMY,","lastModifiedDate":"2021-10-07"},{"lineNumber":116,"author":{"gitId":"-"},"content":"                Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    public void parse_allFieldsSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":122,"author":{"gitId":"Gabau"},"content":"        String userInput \u003d \" \" + PREFIX_DASH_INDEX.getPrefix() + targetIndex.getOneBased()","lastModifiedDate":"2021-10-12"},{"lineNumber":123,"author":{"gitId":"Gabau"},"content":"                + PHONE_DESC_BOB + TAG_DESC_HUSBAND","lastModifiedDate":"2021-10-07"},{"lineNumber":124,"author":{"gitId":"-"},"content":"                + EMAIL_DESC_AMY + ADDRESS_DESC_AMY + NAME_DESC_AMY + TAG_DESC_FRIEND;","lastModifiedDate":"2017-06-06"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2021-09-22"},{"lineNumber":127,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY)","lastModifiedDate":"2017-05-04"},{"lineNumber":128,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    public void parse_someFieldsSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":137,"author":{"gitId":"Gabau"},"content":"        String userInput \u003d \" \" + PREFIX_DASH_INDEX.getPrefix()","lastModifiedDate":"2021-10-12"},{"lineNumber":138,"author":{"gitId":"Gabau"},"content":"                + targetIndex.getOneBased() + PHONE_DESC_BOB + EMAIL_DESC_AMY;","lastModifiedDate":"2021-10-07"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2021-09-22"},{"lineNumber":141,"author":{"gitId":"-"},"content":"                .withEmail(VALID_EMAIL_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    public void parse_oneFieldSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        // name","lastModifiedDate":"2017-05-04"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_THIRD_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":151,"author":{"gitId":"Gabau"},"content":"        String userInput \u003d \" \" + PREFIX_DASH_INDEX.getPrefix() + targetIndex.getOneBased() + NAME_DESC_AMY;","lastModifiedDate":"2021-10-12"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY).build();","lastModifiedDate":"2021-09-22"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        // phone","lastModifiedDate":"2017-05-04"},{"lineNumber":157,"author":{"gitId":"Gabau"},"content":"        userInput \u003d \" \" + PREFIX_DASH_INDEX.getPrefix() + targetIndex.getOneBased() + PHONE_DESC_AMY;","lastModifiedDate":"2021-10-12"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_AMY).build();","lastModifiedDate":"2021-09-22"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        // email","lastModifiedDate":"2017-05-04"},{"lineNumber":163,"author":{"gitId":"Gabau"},"content":"        userInput \u003d \" \" + PREFIX_DASH_INDEX.getPrefix() + targetIndex.getOneBased() + EMAIL_DESC_AMY;","lastModifiedDate":"2021-10-12"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withEmail(VALID_EMAIL_AMY).build();","lastModifiedDate":"2021-09-22"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        // address","lastModifiedDate":"2017-05-04"},{"lineNumber":169,"author":{"gitId":"Gabau"},"content":"        userInput \u003d \" \" + PREFIX_DASH_INDEX.getPrefix() + targetIndex.getOneBased() + ADDRESS_DESC_AMY;","lastModifiedDate":"2021-10-12"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withAddress(VALID_ADDRESS_AMY).build();","lastModifiedDate":"2021-09-22"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        // tags","lastModifiedDate":"2017-05-04"},{"lineNumber":175,"author":{"gitId":"Gabau"},"content":"        userInput \u003d \" \" + PREFIX_DASH_INDEX.getPrefix() + targetIndex.getOneBased() + TAG_DESC_FRIEND;","lastModifiedDate":"2021-10-12"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2021-09-22"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    public void parse_multipleRepeatedFields_acceptsLast() {","lastModifiedDate":"2017-08-15"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":184,"author":{"gitId":"Gabau"},"content":"        String userInput \u003d \" \" + PREFIX_DASH_INDEX.getPrefix() + targetIndex.getOneBased()","lastModifiedDate":"2021-10-12"},{"lineNumber":185,"author":{"gitId":"Gabau"},"content":"                + PHONE_DESC_AMY + ADDRESS_DESC_AMY + EMAIL_DESC_AMY","lastModifiedDate":"2021-10-07"},{"lineNumber":186,"author":{"gitId":"-"},"content":"                + TAG_DESC_FRIEND + PHONE_DESC_AMY + ADDRESS_DESC_AMY + EMAIL_DESC_AMY + TAG_DESC_FRIEND","lastModifiedDate":"2017-05-25"},{"lineNumber":187,"author":{"gitId":"-"},"content":"                + PHONE_DESC_BOB + ADDRESS_DESC_BOB + EMAIL_DESC_BOB + TAG_DESC_HUSBAND;","lastModifiedDate":"2017-05-25"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":189,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2021-09-22"},{"lineNumber":190,"author":{"gitId":"-"},"content":"                .withEmail(VALID_EMAIL_BOB).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_FRIEND, VALID_TAG_HUSBAND)","lastModifiedDate":"2017-05-04"},{"lineNumber":191,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2017-05-04"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":195,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":197,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":198,"author":{"gitId":"-"},"content":"    public void parse_invalidValueFollowedByValidValue_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":199,"author":{"gitId":"-"},"content":"        // no other valid values specified","lastModifiedDate":"2017-05-04"},{"lineNumber":200,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":201,"author":{"gitId":"Gabau"},"content":"        String userInput \u003d \" \" + PREFIX_DASH_INDEX.getPrefix()","lastModifiedDate":"2021-10-12"},{"lineNumber":202,"author":{"gitId":"Gabau"},"content":"                + targetIndex.getOneBased() + INVALID_PHONE_DESC + PHONE_DESC_BOB;","lastModifiedDate":"2021-10-07"},{"lineNumber":203,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2021-09-22"},{"lineNumber":204,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":206,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":207,"author":{"gitId":"-"},"content":"        // other valid values specified","lastModifiedDate":"2017-05-04"},{"lineNumber":208,"author":{"gitId":"Gabau"},"content":"        userInput \u003d \" \" + PREFIX_DASH_INDEX.getPrefix()","lastModifiedDate":"2021-10-12"},{"lineNumber":209,"author":{"gitId":"Gabau"},"content":"                + targetIndex.getOneBased() + EMAIL_DESC_BOB + INVALID_PHONE_DESC + ADDRESS_DESC_BOB","lastModifiedDate":"2021-10-07"},{"lineNumber":210,"author":{"gitId":"-"},"content":"                + PHONE_DESC_BOB;","lastModifiedDate":"2017-05-25"},{"lineNumber":211,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB)","lastModifiedDate":"2021-09-22"},{"lineNumber":212,"author":{"gitId":"-"},"content":"                .withAddress(VALID_ADDRESS_BOB).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":213,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":214,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":215,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":217,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":218,"author":{"gitId":"-"},"content":"    public void parse_resetTags_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":219,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_THIRD_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":220,"author":{"gitId":"Gabau"},"content":"        String userInput \u003d \" \" + PREFIX_DASH_INDEX.getPrefix() + \" \" + targetIndex.getOneBased() + TAG_EMPTY;","lastModifiedDate":"2021-10-12"},{"lineNumber":221,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":222,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withTags().build();","lastModifiedDate":"2021-09-22"},{"lineNumber":223,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":224,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":225,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":226,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":227,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-04"}],"authorContributionMap":{"Gabau":39,"-":188}},{"path":"src/test/java/seedu/address/logic/parser/FindCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-06-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-06-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":12,"author":{"gitId":"mweeruien"},"content":"import seedu.address.model.person.predicates.NameContainsKeywordsPredicate;","lastModifiedDate":"2021-10-10"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class FindCommandParserTest {","lastModifiedDate":"2017-06-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private FindCommandParser parser \u003d new FindCommandParser();","lastModifiedDate":"2017-06-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public void parse_emptyArg_throwsParseException() {","lastModifiedDate":"2017-06-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"     \", String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-07-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void parse_validArgs_returnsFindCommand() {","lastModifiedDate":"2017-08-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        // no leading and trailing whitespaces","lastModifiedDate":"2017-06-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        FindCommand expectedFindCommand \u003d","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"                new FindCommand(new NameContainsKeywordsPredicate(Arrays.asList(\"Alice\", \"Bob\")));","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"mweeruien"},"content":"        assertParseSuccess(parser, \"-n Alice Bob\", expectedFindCommand);","lastModifiedDate":"2021-10-10"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        // multiple whitespaces between keywords","lastModifiedDate":"2017-06-27"},{"lineNumber":31,"author":{"gitId":"mweeruien"},"content":"        assertParseSuccess(parser, \" -n \\n Alice \\n \\t Bob  \\t\", expectedFindCommand);","lastModifiedDate":"2021-10-10"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-27"}],"authorContributionMap":{"-":31,"mweeruien":3}},{"path":"src/test/java/seedu/address/logic/parser/ParserUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.ParserUtil.MESSAGE_INVALID_INDEX;","lastModifiedDate":"2017-06-02"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-05-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-05-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-05-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-07-10"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2021-09-22"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2021-09-22"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2021-09-22"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2021-09-22"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-05-22"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":23,"author":{"gitId":"-"},"content":"public class ParserUtilTest {","lastModifiedDate":"2017-05-22"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2017-05-22"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static final String INVALID_PHONE \u003d \"+651234\";","lastModifiedDate":"2017-05-22"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String INVALID_ADDRESS \u003d \" \";","lastModifiedDate":"2017-05-22"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private static final String INVALID_EMAIL \u003d \"example.com\";","lastModifiedDate":"2017-05-22"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final String INVALID_TAG \u003d \"#friend\";","lastModifiedDate":"2017-05-22"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private static final String VALID_NAME \u003d \"Rachel Walker\";","lastModifiedDate":"2017-05-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final String VALID_PHONE \u003d \"123456\";","lastModifiedDate":"2017-05-22"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private static final String VALID_ADDRESS \u003d \"123 Main Street #0505\";","lastModifiedDate":"2017-05-22"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private static final String VALID_EMAIL \u003d \"rachel@example.com\";","lastModifiedDate":"2017-05-22"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private static final String VALID_TAG_1 \u003d \"friend\";","lastModifiedDate":"2017-05-22"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private static final String VALID_TAG_2 \u003d \"neighbour\";","lastModifiedDate":"2017-05-22"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private static final String WHITESPACE \u003d \" \\t\\r\\n\";","lastModifiedDate":"2017-05-29"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public void parseIndex_invalidInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseIndex(\"10 a\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void parseIndex_outOfRangeInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, MESSAGE_INVALID_INDEX, ()","lastModifiedDate":"2019-03-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            -\u003e ParserUtil.parseIndex(Long.toString(Integer.MAX_VALUE + 1)));","lastModifiedDate":"2019-03-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void parseIndex_validInput_success() throws Exception {","lastModifiedDate":"2017-05-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        // No whitespaces","lastModifiedDate":"2017-05-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertEquals(INDEX_FIRST_PERSON, ParserUtil.parseIndex(\"1\"));","lastModifiedDate":"2017-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // Leading and trailing whitespaces","lastModifiedDate":"2017-05-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertEquals(INDEX_FIRST_PERSON, ParserUtil.parseIndex(\"  1  \"));","lastModifiedDate":"2017-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void parseName_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseName((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void parseName_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseName(INVALID_NAME));","lastModifiedDate":"2019-03-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public void parseName_validValueWithoutWhitespace_returnsName() throws Exception {","lastModifiedDate":"2017-05-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        Name expectedName \u003d new Name(VALID_NAME);","lastModifiedDate":"2017-05-22"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertEquals(expectedName, ParserUtil.parseName(VALID_NAME));","lastModifiedDate":"2017-05-29"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-29"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public void parseName_validValueWithWhitespace_returnsTrimmedName() throws Exception {","lastModifiedDate":"2017-05-29"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        String nameWithWhitespace \u003d WHITESPACE + VALID_NAME + WHITESPACE;","lastModifiedDate":"2017-05-29"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        Name expectedName \u003d new Name(VALID_NAME);","lastModifiedDate":"2017-05-29"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertEquals(expectedName, ParserUtil.parseName(nameWithWhitespace));","lastModifiedDate":"2017-05-29"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void parsePhone_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parsePhone((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public void parsePhone_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parsePhone(INVALID_PHONE));","lastModifiedDate":"2019-03-14"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    public void parsePhone_validValueWithoutWhitespace_returnsPhone() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        Phone expectedPhone \u003d new Phone(VALID_PHONE);","lastModifiedDate":"2017-05-22"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertEquals(expectedPhone, ParserUtil.parsePhone(VALID_PHONE));","lastModifiedDate":"2017-05-30"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    public void parsePhone_validValueWithWhitespace_returnsTrimmedPhone() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        String phoneWithWhitespace \u003d WHITESPACE + VALID_PHONE + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        Phone expectedPhone \u003d new Phone(VALID_PHONE);","lastModifiedDate":"2017-05-30"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        assertEquals(expectedPhone, ParserUtil.parsePhone(phoneWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    public void parseAddress_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseAddress((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    public void parseAddress_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseAddress(INVALID_ADDRESS));","lastModifiedDate":"2019-03-14"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    public void parseAddress_validValueWithoutWhitespace_returnsAddress() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        Address expectedAddress \u003d new Address(VALID_ADDRESS);","lastModifiedDate":"2017-05-22"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddress, ParserUtil.parseAddress(VALID_ADDRESS));","lastModifiedDate":"2017-05-30"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    public void parseAddress_validValueWithWhitespace_returnsTrimmedAddress() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        String addressWithWhitespace \u003d WHITESPACE + VALID_ADDRESS + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        Address expectedAddress \u003d new Address(VALID_ADDRESS);","lastModifiedDate":"2017-05-30"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddress, ParserUtil.parseAddress(addressWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    public void parseEmail_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseEmail((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    public void parseEmail_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseEmail(INVALID_EMAIL));","lastModifiedDate":"2019-03-14"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    public void parseEmail_validValueWithoutWhitespace_returnsEmail() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        Email expectedEmail \u003d new Email(VALID_EMAIL);","lastModifiedDate":"2017-05-22"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        assertEquals(expectedEmail, ParserUtil.parseEmail(VALID_EMAIL));","lastModifiedDate":"2017-05-30"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    public void parseEmail_validValueWithWhitespace_returnsTrimmedEmail() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        String emailWithWhitespace \u003d WHITESPACE + VALID_EMAIL + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        Email expectedEmail \u003d new Email(VALID_EMAIL);","lastModifiedDate":"2017-05-30"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        assertEquals(expectedEmail, ParserUtil.parseEmail(emailWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    public void parseTag_null_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseTag(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    public void parseTag_invalidValue_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseTag(INVALID_TAG));","lastModifiedDate":"2019-03-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    public void parseTag_validValueWithoutWhitespace_returnsTag() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        Tag expectedTag \u003d new Tag(VALID_TAG_1);","lastModifiedDate":"2017-05-30"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        assertEquals(expectedTag, ParserUtil.parseTag(VALID_TAG_1));","lastModifiedDate":"2017-05-30"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    public void parseTag_validValueWithWhitespace_returnsTrimmedTag() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        String tagWithWhitespace \u003d WHITESPACE + VALID_TAG_1 + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        Tag expectedTag \u003d new Tag(VALID_TAG_1);","lastModifiedDate":"2017-05-30"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        assertEquals(expectedTag, ParserUtil.parseTag(tagWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    public void parseTags_null_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseTags(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    public void parseTags_collectionWithInvalidTags_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseTags(Arrays.asList(VALID_TAG_1, INVALID_TAG)));","lastModifiedDate":"2019-03-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":184,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    public void parseTags_emptyCollection_returnsEmptySet() throws Exception {","lastModifiedDate":"2017-05-22"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        assertTrue(ParserUtil.parseTags(Collections.emptyList()).isEmpty());","lastModifiedDate":"2017-05-22"},{"lineNumber":187,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":189,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":190,"author":{"gitId":"-"},"content":"    public void parseTags_collectionWithValidTags_returnsTagSet() throws Exception {","lastModifiedDate":"2017-05-22"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e actualTagSet \u003d ParserUtil.parseTags(Arrays.asList(VALID_TAG_1, VALID_TAG_2));","lastModifiedDate":"2017-05-22"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e expectedTagSet \u003d new HashSet\u003cTag\u003e(Arrays.asList(new Tag(VALID_TAG_1), new Tag(VALID_TAG_2)));","lastModifiedDate":"2017-05-22"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        assertEquals(expectedTagSet, actualTagSet);","lastModifiedDate":"2017-05-22"},{"lineNumber":195,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":196,"author":{"gitId":"IrvingHe000"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":197,"author":{"gitId":"IrvingHe000"},"content":"    @Test","lastModifiedDate":"2021-10-14"},{"lineNumber":198,"author":{"gitId":"IrvingHe000"},"content":"    public void parseDayOfWeeks_invalidInput_throwsParseException() {","lastModifiedDate":"2021-10-14"},{"lineNumber":199,"author":{"gitId":"IrvingHe000"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseDayOfWeek(\"wrongInput\"));","lastModifiedDate":"2021-10-14"},{"lineNumber":200,"author":{"gitId":"IrvingHe000"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseDayOfWeek(\"monday-1-1\"));","lastModifiedDate":"2021-10-14"},{"lineNumber":201,"author":{"gitId":"IrvingHe000"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseDayOfWeek(\"1-monday\"));","lastModifiedDate":"2021-10-14"},{"lineNumber":202,"author":{"gitId":"IrvingHe000"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseDayOfWeek(\"1\"));","lastModifiedDate":"2021-10-14"},{"lineNumber":203,"author":{"gitId":"IrvingHe000"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":204,"author":{"gitId":"IrvingHe000"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":205,"author":{"gitId":"IrvingHe000"},"content":"    @Test","lastModifiedDate":"2021-10-14"},{"lineNumber":206,"author":{"gitId":"IrvingHe000"},"content":"    public void parseDayOfWeek_validInput_success() throws Exception {","lastModifiedDate":"2021-10-14"},{"lineNumber":207,"author":{"gitId":"IrvingHe000"},"content":"        assertEquals(\"monday-1\", ParserUtil.parseDayOfWeek(\"monday-1\"));","lastModifiedDate":"2021-10-14"},{"lineNumber":208,"author":{"gitId":"IrvingHe000"},"content":"        assertEquals(\"monday-0\", ParserUtil.parseDayOfWeek(\"MONDAY-0\"));","lastModifiedDate":"2021-10-14"},{"lineNumber":209,"author":{"gitId":"IrvingHe000"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":210,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-22"}],"authorContributionMap":{"-":196,"IrvingHe000":14}},{"path":"src/test/java/seedu/address/logic/parser/ViewCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Gabau"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-10-08"},{"lineNumber":2,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":3,"author":{"gitId":"Gabau"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2021-10-08"},{"lineNumber":4,"author":{"gitId":"Gabau"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2021-10-08"},{"lineNumber":5,"author":{"gitId":"Gabau"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2021-10-08"},{"lineNumber":6,"author":{"gitId":"Gabau"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2021-10-08"},{"lineNumber":7,"author":{"gitId":"Gabau"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2021-10-08"},{"lineNumber":8,"author":{"gitId":"Gabau"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2021-10-08"},{"lineNumber":9,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":10,"author":{"gitId":"Gabau"},"content":"import java.util.function.Function;","lastModifiedDate":"2021-10-08"},{"lineNumber":11,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":12,"author":{"gitId":"Gabau"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-08"},{"lineNumber":13,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":14,"author":{"gitId":"Gabau"},"content":"import seedu.address.logic.commands.ViewCommand;","lastModifiedDate":"2021-10-08"},{"lineNumber":15,"author":{"gitId":"Gabau"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2021-10-08"},{"lineNumber":16,"author":{"gitId":"Gabau"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2021-10-08"},{"lineNumber":17,"author":{"gitId":"Gabau"},"content":"import seedu.address.model.person.Field;","lastModifiedDate":"2021-10-08"},{"lineNumber":18,"author":{"gitId":"Gabau"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2021-10-08"},{"lineNumber":19,"author":{"gitId":"Gabau"},"content":"import seedu.address.model.person.PersonContainsFieldsPredicate;","lastModifiedDate":"2021-10-08"},{"lineNumber":20,"author":{"gitId":"Gabau"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2021-10-08"},{"lineNumber":21,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":22,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":23,"author":{"gitId":"Gabau"},"content":"public class ViewCommandParserTest {","lastModifiedDate":"2021-10-08"},{"lineNumber":24,"author":{"gitId":"Gabau"},"content":"    private static final String COMMAND_WORD \u003d ViewCommand.COMMAND_WORD;","lastModifiedDate":"2021-10-08"},{"lineNumber":25,"author":{"gitId":"Gabau"},"content":"    private static final String DEFAULT_TEST_NAME \u003d \"Alex Yeoh\";","lastModifiedDate":"2021-10-08"},{"lineNumber":26,"author":{"gitId":"Gabau"},"content":"    private static final String DEFAULT_TEST_ADDRESS \u003d \"311, Clementi Ave 2, #02-25\";","lastModifiedDate":"2021-10-08"},{"lineNumber":27,"author":{"gitId":"Gabau"},"content":"    private static final String DEFAULT_TEST_EMAIL \u003d \"alice@example.com\";","lastModifiedDate":"2021-10-08"},{"lineNumber":28,"author":{"gitId":"Gabau"},"content":"    private static final String DEFAULT_TEST_PHONE \u003d \"94351253\";","lastModifiedDate":"2021-10-08"},{"lineNumber":29,"author":{"gitId":"Gabau"},"content":"    private final ViewCommandParser parser \u003d new ViewCommandParser();","lastModifiedDate":"2021-10-08"},{"lineNumber":30,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":31,"author":{"gitId":"Gabau"},"content":"    @Test","lastModifiedDate":"2021-10-08"},{"lineNumber":32,"author":{"gitId":"Gabau"},"content":"    public void test_no_input() {","lastModifiedDate":"2021-10-08"},{"lineNumber":33,"author":{"gitId":"Gabau"},"content":"        String userInput \u003d COMMAND_WORD;","lastModifiedDate":"2021-10-08"},{"lineNumber":34,"author":{"gitId":"Gabau"},"content":"        ViewCommandParser parser \u003d new ViewCommandParser();","lastModifiedDate":"2021-10-08"},{"lineNumber":35,"author":{"gitId":"Gabau"},"content":"        assertParseFailure(parser, userInput, ViewCommand.HELP_MESSAGE);","lastModifiedDate":"2021-10-08"},{"lineNumber":36,"author":{"gitId":"Gabau"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":37,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":38,"author":{"gitId":"Gabau"},"content":"    @Test","lastModifiedDate":"2021-10-08"},{"lineNumber":39,"author":{"gitId":"Gabau"},"content":"    public void test_single_input() {","lastModifiedDate":"2021-10-08"},{"lineNumber":40,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":41,"author":{"gitId":"Gabau"},"content":"        String nameInput \u003d inputFormat(PREFIX_NAME, DEFAULT_TEST_NAME);","lastModifiedDate":"2021-10-08"},{"lineNumber":42,"author":{"gitId":"Gabau"},"content":"        ViewCommand nameExpectedCommand \u003d commandFromString(DEFAULT_TEST_NAME, Name::new);","lastModifiedDate":"2021-10-08"},{"lineNumber":43,"author":{"gitId":"Gabau"},"content":"        assertParseSuccess(parser, nameInput, nameExpectedCommand);","lastModifiedDate":"2021-10-08"},{"lineNumber":44,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":45,"author":{"gitId":"Gabau"},"content":"        String phoneInput \u003d inputFormat(PREFIX_PHONE, DEFAULT_TEST_PHONE);","lastModifiedDate":"2021-10-08"},{"lineNumber":46,"author":{"gitId":"Gabau"},"content":"        ViewCommand phoneExpectedCommand \u003d commandFromString(DEFAULT_TEST_PHONE, Phone::new);","lastModifiedDate":"2021-10-08"},{"lineNumber":47,"author":{"gitId":"Gabau"},"content":"        assertParseSuccess(parser, phoneInput, phoneExpectedCommand);","lastModifiedDate":"2021-10-08"},{"lineNumber":48,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":49,"author":{"gitId":"Gabau"},"content":"        String emailInput \u003d inputFormat(PREFIX_EMAIL, DEFAULT_TEST_EMAIL);","lastModifiedDate":"2021-10-08"},{"lineNumber":50,"author":{"gitId":"Gabau"},"content":"        ViewCommand emailExpectedCommand \u003d commandFromString(DEFAULT_TEST_EMAIL, Email::new);","lastModifiedDate":"2021-10-08"},{"lineNumber":51,"author":{"gitId":"Gabau"},"content":"        assertParseSuccess(parser, emailInput, emailExpectedCommand);","lastModifiedDate":"2021-10-08"},{"lineNumber":52,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":53,"author":{"gitId":"Gabau"},"content":"        String addressInput \u003d inputFormat(PREFIX_ADDRESS, DEFAULT_TEST_ADDRESS);","lastModifiedDate":"2021-10-08"},{"lineNumber":54,"author":{"gitId":"Gabau"},"content":"        ViewCommand addressExpectedCommand \u003d commandFromString(DEFAULT_TEST_ADDRESS, Address::new);","lastModifiedDate":"2021-10-08"},{"lineNumber":55,"author":{"gitId":"Gabau"},"content":"        assertParseSuccess(parser, addressInput, addressExpectedCommand);","lastModifiedDate":"2021-10-08"},{"lineNumber":56,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":57,"author":{"gitId":"Gabau"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":58,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":59,"author":{"gitId":"Gabau"},"content":"    private static ViewCommand commandFromString(String name, Function\u003cString, Field\u003e function) {","lastModifiedDate":"2021-10-08"},{"lineNumber":60,"author":{"gitId":"Gabau"},"content":"        return new ViewCommand(new PersonContainsFieldsPredicate(function.apply(name)));","lastModifiedDate":"2021-10-08"},{"lineNumber":61,"author":{"gitId":"Gabau"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":62,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":63,"author":{"gitId":"Gabau"},"content":"    @Test","lastModifiedDate":"2021-10-08"},{"lineNumber":64,"author":{"gitId":"Gabau"},"content":"    public void test_multiple_input() {","lastModifiedDate":"2021-10-08"},{"lineNumber":65,"author":{"gitId":"Gabau"},"content":"        String userInput \u003d COMMAND_WORD + \" \" + PREFIX_EMAIL + DEFAULT_TEST_EMAIL + \" \"","lastModifiedDate":"2021-10-08"},{"lineNumber":66,"author":{"gitId":"Gabau"},"content":"                + PREFIX_ADDRESS + DEFAULT_TEST_ADDRESS + \" \"","lastModifiedDate":"2021-10-08"},{"lineNumber":67,"author":{"gitId":"Gabau"},"content":"                + PREFIX_PHONE + DEFAULT_TEST_PHONE;","lastModifiedDate":"2021-10-08"},{"lineNumber":68,"author":{"gitId":"Gabau"},"content":"        PersonContainsFieldsPredicate predicate \u003d new PersonContainsFieldsPredicate(new Email(DEFAULT_TEST_EMAIL),","lastModifiedDate":"2021-10-08"},{"lineNumber":69,"author":{"gitId":"Gabau"},"content":"                new Address(DEFAULT_TEST_ADDRESS), new Phone(DEFAULT_TEST_PHONE));","lastModifiedDate":"2021-10-08"},{"lineNumber":70,"author":{"gitId":"Gabau"},"content":"        ViewCommand result \u003d new ViewCommand(predicate);","lastModifiedDate":"2021-10-08"},{"lineNumber":71,"author":{"gitId":"Gabau"},"content":"        assertParseSuccess(parser, userInput, result);","lastModifiedDate":"2021-10-08"},{"lineNumber":72,"author":{"gitId":"Gabau"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":73,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":74,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":75,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":76,"author":{"gitId":"Gabau"},"content":"    private String inputFormat(Prefix prefixName, String defaultTestName) {","lastModifiedDate":"2021-10-08"},{"lineNumber":77,"author":{"gitId":"Gabau"},"content":"        String singleInput \u003d COMMAND_WORD + \" %1$s\";","lastModifiedDate":"2021-10-08"},{"lineNumber":78,"author":{"gitId":"Gabau"},"content":"        return String.format(singleInput, prefixName.getPrefix() + defaultTestName);","lastModifiedDate":"2021-10-08"},{"lineNumber":79,"author":{"gitId":"Gabau"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":80,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":81,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":82,"author":{"gitId":"Gabau"},"content":"}","lastModifiedDate":"2021-10-08"},{"lineNumber":83,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-10-08"}],"authorContributionMap":{"Gabau":83}},{"path":"src/test/java/seedu/address/model/ModelManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2017-05-31"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"IrvingHe000"},"content":"import static org.junit.jupiter.api.Assertions.assertNull;","lastModifiedDate":"2021-10-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2017-08-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2017-07-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BENSON;","lastModifiedDate":"2017-07-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-09"},{"lineNumber":14,"author":{"gitId":"IrvingHe000"},"content":"import java.time.DayOfWeek;","lastModifiedDate":"2021-10-14"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-31"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":20,"author":{"gitId":"IrvingHe000"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2021-10-14"},{"lineNumber":21,"author":{"gitId":"IrvingHe000"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2021-10-14"},{"lineNumber":22,"author":{"gitId":"IrvingHe000"},"content":"import seedu.address.model.person.Slot;","lastModifiedDate":"2021-10-14"},{"lineNumber":23,"author":{"gitId":"IrvingHe000"},"content":"import seedu.address.model.person.exceptions.DuplicateShiftException;","lastModifiedDate":"2021-10-14"},{"lineNumber":24,"author":{"gitId":"mweeruien"},"content":"import seedu.address.model.person.predicates.NameContainsKeywordsPredicate;","lastModifiedDate":"2021-10-10"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.testutil.AddressBookBuilder;","lastModifiedDate":"2017-05-31"},{"lineNumber":26,"author":{"gitId":"IrvingHe000"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2021-10-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":28,"author":{"gitId":"-"},"content":"public class ModelManagerTest {","lastModifiedDate":"2017-05-31"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private ModelManager modelManager \u003d new ModelManager();","lastModifiedDate":"2018-08-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public void constructor() {","lastModifiedDate":"2018-11-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertEquals(new UserPrefs(), modelManager.getUserPrefs());","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertEquals(new GuiSettings(), modelManager.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertEquals(new AddressBook(), new AddressBook(modelManager.getAddressBook()));","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public void setUserPrefs_nullUserPrefs_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setUserPrefs(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void setUserPrefs_validUserPrefs_copiesUserPrefs() {","lastModifiedDate":"2018-12-06"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(Paths.get(\"address/book/file/path\"));","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(new GuiSettings(1, 2, 3, 4));","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        modelManager.setUserPrefs(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertEquals(userPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        // Modifying userPrefs should not modify modelManager\u0027s userPrefs","lastModifiedDate":"2018-12-06"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        UserPrefs oldUserPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(Paths.get(\"new/address/book/file/path\"));","lastModifiedDate":"2018-12-06"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertEquals(oldUserPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2018-12-06"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public void setGuiSettings_nullGuiSettings_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setGuiSettings(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public void setGuiSettings_validGuiSettings_setsGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(1, 2, 3, 4);","lastModifiedDate":"2018-11-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        modelManager.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertEquals(guiSettings, modelManager.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath_nullPath_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setAddressBookFilePath(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath_validPath_setsAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        Path path \u003d Paths.get(\"address/book/file/path\");","lastModifiedDate":"2018-11-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        modelManager.setAddressBookFilePath(path);","lastModifiedDate":"2018-11-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertEquals(path, modelManager.getAddressBookFilePath());","lastModifiedDate":"2018-11-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void hasPerson_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-06"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.hasPerson(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public void hasPerson_personNotInAddressBook_returnsFalse() {","lastModifiedDate":"2018-08-06"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    public void hasPerson_personInAddressBook_returnsTrue() {","lastModifiedDate":"2018-08-07"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        modelManager.addPerson(ALICE);","lastModifiedDate":"2018-08-06"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    public void getFilteredPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e modelManager.getFilteredPersonList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":103,"author":{"gitId":"IrvingHe000"},"content":"    @Test","lastModifiedDate":"2021-10-14"},{"lineNumber":104,"author":{"gitId":"IrvingHe000"},"content":"    public void getPersonTest() {","lastModifiedDate":"2021-10-14"},{"lineNumber":105,"author":{"gitId":"IrvingHe000"},"content":"        Person alice \u003d new PersonBuilder().withName(\"Alice Pauline\")","lastModifiedDate":"2021-10-14"},{"lineNumber":106,"author":{"gitId":"IrvingHe000"},"content":"                .withAddress(\"123, Jurong West Ave 6, #08-111\").withEmail(\"alice@example.com\")","lastModifiedDate":"2021-10-14"},{"lineNumber":107,"author":{"gitId":"IrvingHe000"},"content":"                .withPhone(\"94351253\").withRoles(\"floor\").withSalary(\"1000000\").withStatus(\"fulltime\")","lastModifiedDate":"2021-10-15"},{"lineNumber":108,"author":{"gitId":"IrvingHe000"},"content":"                .withTags(\"friends\").build();","lastModifiedDate":"2021-10-14"},{"lineNumber":109,"author":{"gitId":"IrvingHe000"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":110,"author":{"gitId":"IrvingHe000"},"content":"        modelManager.addPerson(alice);","lastModifiedDate":"2021-10-14"},{"lineNumber":111,"author":{"gitId":"IrvingHe000"},"content":"        assertEquals(alice, modelManager.findPersonByName(alice.getName()));","lastModifiedDate":"2021-10-14"},{"lineNumber":112,"author":{"gitId":"IrvingHe000"},"content":"        assertNull(modelManager.findPersonByName(new Name(\"random name\")));","lastModifiedDate":"2021-10-14"},{"lineNumber":113,"author":{"gitId":"IrvingHe000"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":114,"author":{"gitId":"IrvingHe000"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":115,"author":{"gitId":"IrvingHe000"},"content":"    @Test","lastModifiedDate":"2021-10-14"},{"lineNumber":116,"author":{"gitId":"IrvingHe000"},"content":"    public void addShift_throwsDuplicateShiftException() {","lastModifiedDate":"2021-10-14"},{"lineNumber":117,"author":{"gitId":"IrvingHe000"},"content":"        Person alice \u003d new PersonBuilder().withName(\"Alice Pauline\")","lastModifiedDate":"2021-10-14"},{"lineNumber":118,"author":{"gitId":"IrvingHe000"},"content":"                .withAddress(\"123, Jurong West Ave 6, #08-111\").withEmail(\"alice@example.com\")","lastModifiedDate":"2021-10-14"},{"lineNumber":119,"author":{"gitId":"IrvingHe000"},"content":"                .withPhone(\"94351253\").withRoles(\"floor\").withSalary(\"1000000\").withStatus(\"fulltime\")","lastModifiedDate":"2021-10-15"},{"lineNumber":120,"author":{"gitId":"IrvingHe000"},"content":"                .withTags(\"friends\").build();","lastModifiedDate":"2021-10-14"},{"lineNumber":121,"author":{"gitId":"IrvingHe000"},"content":"        modelManager.addPerson(alice);","lastModifiedDate":"2021-10-14"},{"lineNumber":122,"author":{"gitId":"IrvingHe000"},"content":"        modelManager.addShift(alice, DayOfWeek.MONDAY, Slot.AFTERNOON);","lastModifiedDate":"2021-10-14"},{"lineNumber":123,"author":{"gitId":"IrvingHe000"},"content":"        assertThrows(DuplicateShiftException.class, () -\u003e","lastModifiedDate":"2021-10-14"},{"lineNumber":124,"author":{"gitId":"IrvingHe000"},"content":"                modelManager.addShift(alice, DayOfWeek.MONDAY, Slot.AFTERNOON));","lastModifiedDate":"2021-10-14"},{"lineNumber":125,"author":{"gitId":"IrvingHe000"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":126,"author":{"gitId":"IrvingHe000"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":127,"author":{"gitId":"IrvingHe000"},"content":"    @Test","lastModifiedDate":"2021-10-14"},{"lineNumber":128,"author":{"gitId":"IrvingHe000"},"content":"    public void addShift_success() {","lastModifiedDate":"2021-10-14"},{"lineNumber":129,"author":{"gitId":"IrvingHe000"},"content":"        Person alice \u003d new PersonBuilder().withName(\"Alice Pauline\")","lastModifiedDate":"2021-10-14"},{"lineNumber":130,"author":{"gitId":"IrvingHe000"},"content":"                .withAddress(\"123, Jurong West Ave 6, #08-111\").withEmail(\"alice@example.com\")","lastModifiedDate":"2021-10-14"},{"lineNumber":131,"author":{"gitId":"IrvingHe000"},"content":"                .withPhone(\"94351253\").withRoles(\"floor\").withSalary(\"1000000\").withStatus(\"fulltime\")","lastModifiedDate":"2021-10-15"},{"lineNumber":132,"author":{"gitId":"IrvingHe000"},"content":"                .withTags(\"friends\").build();","lastModifiedDate":"2021-10-14"},{"lineNumber":133,"author":{"gitId":"IrvingHe000"},"content":"        modelManager.addPerson(alice);","lastModifiedDate":"2021-10-14"},{"lineNumber":134,"author":{"gitId":"IrvingHe000"},"content":"        modelManager.addShift(alice, DayOfWeek.MONDAY, Slot.AFTERNOON);","lastModifiedDate":"2021-10-14"},{"lineNumber":135,"author":{"gitId":"IrvingHe000"},"content":"        assertTrue(alice.getSchedule().isWorking(DayOfWeek.MONDAY, Slot.AFTERNOON));","lastModifiedDate":"2021-10-14"},{"lineNumber":136,"author":{"gitId":"IrvingHe000"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":137,"author":{"gitId":"IrvingHe000"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-31"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        AddressBook addressBook \u003d new AddressBookBuilder().withPerson(ALICE).withPerson(BENSON).build();","lastModifiedDate":"2017-07-19"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        AddressBook differentAddressBook \u003d new AddressBook();","lastModifiedDate":"2017-05-31"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-05-31"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-31"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        modelManager \u003d new ModelManager(addressBook, userPrefs);","lastModifiedDate":"2018-08-06"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        ModelManager modelManagerCopy \u003d new ModelManager(addressBook, userPrefs);","lastModifiedDate":"2017-05-31"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.equals(modelManagerCopy));","lastModifiedDate":"2017-05-31"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-31"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.equals(modelManager));","lastModifiedDate":"2017-05-31"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(null));","lastModifiedDate":"2017-05-31"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(5));","lastModifiedDate":"2017-05-31"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        // different addressBook -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(new ModelManager(differentAddressBook, userPrefs)));","lastModifiedDate":"2017-05-31"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        // different filteredList -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        String[] keywords \u003d ALICE.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2017-07-19"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        modelManager.updateFilteredPersonList(new NameContainsKeywordsPredicate(Arrays.asList(keywords)));","lastModifiedDate":"2017-06-12"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(new ModelManager(addressBook, userPrefs)));","lastModifiedDate":"2017-05-31"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        // resets modelManager to initial state for upcoming tests","lastModifiedDate":"2017-08-05"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        modelManager.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        // different userPrefs -\u003e returns false","lastModifiedDate":"2018-11-27"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        UserPrefs differentUserPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-05-31"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        differentUserPrefs.setAddressBookFilePath(Paths.get(\"differentFilePath\"));","lastModifiedDate":"2018-08-09"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(new ModelManager(addressBook, differentUserPrefs)));","lastModifiedDate":"2018-11-27"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":174,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-31"}],"authorContributionMap":{"-":131,"mweeruien":1,"IrvingHe000":42}},{"path":"src/test/java/seedu/address/model/person/NameContainsKeywordsPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2017-06-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":12,"author":{"gitId":"mweeruien"},"content":"import seedu.address.model.person.predicates.NameContainsKeywordsPredicate;","lastModifiedDate":"2021-10-10"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class NameContainsKeywordsPredicateTest {","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        List\u003cString\u003e firstPredicateKeywordList \u003d Collections.singletonList(\"first\");","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        List\u003cString\u003e secondPredicateKeywordList \u003d Arrays.asList(\"first\", \"second\");","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate firstPredicate \u003d new NameContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate secondPredicate \u003d new NameContainsKeywordsPredicate(secondPredicateKeywordList);","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate firstPredicateCopy \u003d new NameContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertTrue(firstPredicate.equals(firstPredicateCopy));","lastModifiedDate":"2017-06-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(1));","lastModifiedDate":"2017-06-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(null));","lastModifiedDate":"2017-06-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));","lastModifiedDate":"2017-06-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void test_nameContainsKeywords_returnsTrue() {","lastModifiedDate":"2017-08-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        // One keyword","lastModifiedDate":"2017-06-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d new NameContainsKeywordsPredicate(Collections.singletonList(\"Alice\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertTrue(predicate.test(new PersonBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // Multiple keywords","lastModifiedDate":"2017-06-12"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Alice\", \"Bob\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertTrue(predicate.test(new PersonBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        // Only one matching keyword","lastModifiedDate":"2017-06-12"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Bob\", \"Carol\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertTrue(predicate.test(new PersonBuilder().withName(\"Alice Carol\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        // Mixed-case keywords","lastModifiedDate":"2017-06-12"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"aLIce\", \"bOB\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertTrue(predicate.test(new PersonBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public void test_nameDoesNotContainKeywords_returnsFalse() {","lastModifiedDate":"2017-08-15"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        // Zero keywords","lastModifiedDate":"2017-06-12"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d new NameContainsKeywordsPredicate(Collections.emptyList());","lastModifiedDate":"2017-06-12"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertFalse(predicate.test(new PersonBuilder().withName(\"Alice\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // Non-matching keyword","lastModifiedDate":"2017-06-12"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Carol\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertFalse(predicate.test(new PersonBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // Keywords match phone, email and address, but does not match name","lastModifiedDate":"2017-06-12"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"12345\", \"alice@email.com\", \"Main\", \"Street\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertFalse(predicate.test(new PersonBuilder().withName(\"Alice\").withPhone(\"12345\")","lastModifiedDate":"2017-06-12"},{"lineNumber":74,"author":{"gitId":"-"},"content":"                .withEmail(\"alice@email.com\").withAddress(\"Main Street\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":76,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"-":75,"mweeruien":1}},{"path":"src/test/java/seedu/address/model/person/PeriodTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Gabau"},"content":"package seedu.address.model.person;","lastModifiedDate":"2021-10-12"},{"lineNumber":2,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":3,"author":{"gitId":"Gabau"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-12"},{"lineNumber":4,"author":{"gitId":"Gabau"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-12"},{"lineNumber":5,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":6,"author":{"gitId":"Gabau"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-10-12"},{"lineNumber":7,"author":{"gitId":"Gabau"},"content":"import java.util.Collection;","lastModifiedDate":"2021-10-14"},{"lineNumber":8,"author":{"gitId":"Gabau"},"content":"import java.util.List;","lastModifiedDate":"2021-10-14"},{"lineNumber":9,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":10,"author":{"gitId":"Gabau"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-12"},{"lineNumber":11,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":12,"author":{"gitId":"Gabau"},"content":"public class PeriodTest {","lastModifiedDate":"2021-10-12"},{"lineNumber":13,"author":{"gitId":"Gabau"},"content":"    private static final LocalDate TEST_DATE \u003d LocalDate.of(1999, 5, 14);","lastModifiedDate":"2021-10-12"},{"lineNumber":14,"author":{"gitId":"Gabau"},"content":"    private static final LocalDate PAST_TEST_DATE \u003d LocalDate.of(1999, 6, 14);","lastModifiedDate":"2021-10-12"},{"lineNumber":15,"author":{"gitId":"Gabau"},"content":"    private static final LocalDate BEFORE_TEST_DATE \u003d LocalDate.of(1999, 4, 14);","lastModifiedDate":"2021-10-12"},{"lineNumber":16,"author":{"gitId":"Gabau"},"content":"    private static final Period[] TEST_PERIODS \u003d new Period[]{","lastModifiedDate":"2021-10-14"},{"lineNumber":17,"author":{"gitId":"Gabau"},"content":"        new Period(LocalDate.of(12, 10, 1), LocalDate.of(12, 10, 1)),","lastModifiedDate":"2021-10-14"},{"lineNumber":18,"author":{"gitId":"Gabau"},"content":"        new Period(LocalDate.of(12, 10, 2), LocalDate.of(12, 10, 3)),","lastModifiedDate":"2021-10-14"},{"lineNumber":19,"author":{"gitId":"Gabau"},"content":"        new Period(LocalDate.of(12, 10, 4), LocalDate.of(12, 11, 1))","lastModifiedDate":"2021-10-14"},{"lineNumber":20,"author":{"gitId":"Gabau"},"content":"    };","lastModifiedDate":"2021-10-14"},{"lineNumber":21,"author":{"gitId":"Gabau"},"content":"    private Period singleTestPeriod \u003d new Period(TEST_DATE);","lastModifiedDate":"2021-10-14"},{"lineNumber":22,"author":{"gitId":"Gabau"},"content":"    private Period testPeriodAfterSingle \u003d new Period(PAST_TEST_DATE, TEST_DATE);","lastModifiedDate":"2021-10-14"},{"lineNumber":23,"author":{"gitId":"Gabau"},"content":"    private Period testPeriodBeforeSingle \u003d new Period(TEST_DATE, BEFORE_TEST_DATE);","lastModifiedDate":"2021-10-14"},{"lineNumber":24,"author":{"gitId":"Gabau"},"content":"    private Period singleTestPeriodAfter \u003d new Period(PAST_TEST_DATE);","lastModifiedDate":"2021-10-14"},{"lineNumber":25,"author":{"gitId":"Gabau"},"content":"    private Period singleTestPeriodBefore \u003d new Period(BEFORE_TEST_DATE);","lastModifiedDate":"2021-10-14"},{"lineNumber":26,"author":{"gitId":"Gabau"},"content":"    private Period overLargePeriod \u003d new Period(PAST_TEST_DATE, BEFORE_TEST_DATE);","lastModifiedDate":"2021-10-14"},{"lineNumber":27,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":28,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":29,"author":{"gitId":"Gabau"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":30,"author":{"gitId":"Gabau"},"content":"    public void test_contains_success() {","lastModifiedDate":"2021-10-12"},{"lineNumber":31,"author":{"gitId":"Gabau"},"content":"        //tests with local date time","lastModifiedDate":"2021-10-13"},{"lineNumber":32,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":33,"author":{"gitId":"Gabau"},"content":"        assertTrue(singleTestPeriod.contains(TEST_DATE));","lastModifiedDate":"2021-10-13"},{"lineNumber":34,"author":{"gitId":"Gabau"},"content":"        assertTrue(overLargePeriod.contains(TEST_DATE));","lastModifiedDate":"2021-10-12"},{"lineNumber":35,"author":{"gitId":"Gabau"},"content":"        assertTrue(overLargePeriod.contains(PAST_TEST_DATE));","lastModifiedDate":"2021-10-12"},{"lineNumber":36,"author":{"gitId":"Gabau"},"content":"        assertTrue(overLargePeriod.contains(BEFORE_TEST_DATE));","lastModifiedDate":"2021-10-12"},{"lineNumber":37,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":38,"author":{"gitId":"Gabau"},"content":"        //tests with period","lastModifiedDate":"2021-10-13"},{"lineNumber":39,"author":{"gitId":"Gabau"},"content":"        assertTrue(overLargePeriod.contains(testPeriodAfterSingle));","lastModifiedDate":"2021-10-13"},{"lineNumber":40,"author":{"gitId":"Gabau"},"content":"        assertTrue(overLargePeriod.contains(testPeriodBeforeSingle));","lastModifiedDate":"2021-10-13"},{"lineNumber":41,"author":{"gitId":"Gabau"},"content":"        assertTrue(testPeriodBeforeSingle.contains(singleTestPeriod));","lastModifiedDate":"2021-10-13"},{"lineNumber":42,"author":{"gitId":"Gabau"},"content":"        assertFalse(testPeriodAfterSingle.contains(overLargePeriod));","lastModifiedDate":"2021-10-13"},{"lineNumber":43,"author":{"gitId":"Gabau"},"content":"        assertFalse(testPeriodBeforeSingle.contains(testPeriodAfterSingle));","lastModifiedDate":"2021-10-13"},{"lineNumber":44,"author":{"gitId":"Gabau"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":45,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":46,"author":{"gitId":"Gabau"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":47,"author":{"gitId":"Gabau"},"content":"    public void test_contains_failure() {","lastModifiedDate":"2021-10-12"},{"lineNumber":48,"author":{"gitId":"Gabau"},"content":"        Period testPeriodAfterMid \u003d new Period(PAST_TEST_DATE, TEST_DATE);","lastModifiedDate":"2021-10-13"},{"lineNumber":49,"author":{"gitId":"Gabau"},"content":"        assertFalse(testPeriodAfterMid.contains(BEFORE_TEST_DATE));","lastModifiedDate":"2021-10-13"},{"lineNumber":50,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":51,"author":{"gitId":"Gabau"},"content":"        Period testPeriodBeforeMid \u003d new Period(TEST_DATE, BEFORE_TEST_DATE);","lastModifiedDate":"2021-10-13"},{"lineNumber":52,"author":{"gitId":"Gabau"},"content":"        assertFalse(testPeriodBeforeMid.contains(PAST_TEST_DATE));","lastModifiedDate":"2021-10-13"},{"lineNumber":53,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":54,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":55,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":56,"author":{"gitId":"Gabau"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":57,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":58,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":59,"author":{"gitId":"Gabau"},"content":"    @Test","lastModifiedDate":"2021-10-14"},{"lineNumber":60,"author":{"gitId":"Gabau"},"content":"    public void test_union_collection() {","lastModifiedDate":"2021-10-14"},{"lineNumber":61,"author":{"gitId":"Gabau"},"content":"        Collection\u003cPeriod\u003e periods \u003d List.of(singleTestPeriod, testPeriodBeforeSingle, testPeriodAfterSingle);","lastModifiedDate":"2021-10-14"},{"lineNumber":62,"author":{"gitId":"Gabau"},"content":"        Collection\u003cPeriod\u003e expectedResult \u003d List.of(overLargePeriod);","lastModifiedDate":"2021-10-14"},{"lineNumber":63,"author":{"gitId":"Gabau"},"content":"        assertTrue(overLargePeriod.union(periods).containsAll(expectedResult));","lastModifiedDate":"2021-10-14"},{"lineNumber":64,"author":{"gitId":"Gabau"},"content":"        assertTrue(expectedResult.containsAll(overLargePeriod.union(periods)));","lastModifiedDate":"2021-10-14"},{"lineNumber":65,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":66,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":67,"author":{"gitId":"Gabau"},"content":"        periods \u003d List.of(singleTestPeriod, singleTestPeriodBefore, singleTestPeriodAfter);","lastModifiedDate":"2021-10-14"},{"lineNumber":68,"author":{"gitId":"Gabau"},"content":"        Collection\u003cPeriod\u003e testPeriods \u003d testPeriodAfterSingle.union(periods);","lastModifiedDate":"2021-10-14"},{"lineNumber":69,"author":{"gitId":"Gabau"},"content":"        assertFalse(expectedResult.containsAll(testPeriodAfterSingle.union(periods)));","lastModifiedDate":"2021-10-14"},{"lineNumber":70,"author":{"gitId":"Gabau"},"content":"        assertFalse(testPeriodAfterSingle.union(periods).containsAll(expectedResult));","lastModifiedDate":"2021-10-14"},{"lineNumber":71,"author":{"gitId":"Gabau"},"content":"        assertNotEqual(expectedResult, testPeriods);","lastModifiedDate":"2021-10-14"},{"lineNumber":72,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":73,"author":{"gitId":"Gabau"},"content":"        expectedResult \u003d List.of(testPeriodAfterSingle, singleTestPeriodBefore);","lastModifiedDate":"2021-10-14"},{"lineNumber":74,"author":{"gitId":"Gabau"},"content":"        assertEquals(expectedResult, testPeriods);","lastModifiedDate":"2021-10-14"},{"lineNumber":75,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":76,"author":{"gitId":"Gabau"},"content":"        expectedResult \u003d List.of(new Period(LocalDate.of(12, 10, 1),","lastModifiedDate":"2021-10-14"},{"lineNumber":77,"author":{"gitId":"Gabau"},"content":"                LocalDate.of(12, 11, 1)));","lastModifiedDate":"2021-10-14"},{"lineNumber":78,"author":{"gitId":"Gabau"},"content":"        testPeriods \u003d List.of(TEST_PERIODS[0], TEST_PERIODS[2]);","lastModifiedDate":"2021-10-14"},{"lineNumber":79,"author":{"gitId":"Gabau"},"content":"        testPeriods \u003d TEST_PERIODS[1].union(testPeriods);","lastModifiedDate":"2021-10-14"},{"lineNumber":80,"author":{"gitId":"Gabau"},"content":"        assertEquals(expectedResult, testPeriods);","lastModifiedDate":"2021-10-14"},{"lineNumber":81,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":82,"author":{"gitId":"Gabau"},"content":"        //testing overlaps","lastModifiedDate":"2021-10-14"},{"lineNumber":83,"author":{"gitId":"Gabau"},"content":"        testPeriods \u003d List.of(createPeriod(1, 3), createPeriod(5, 7), createPeriod(9, 11));","lastModifiedDate":"2021-10-14"},{"lineNumber":84,"author":{"gitId":"Gabau"},"content":"        expectedResult \u003d List.of(createPeriod(1, 7), createPeriod(9, 11));","lastModifiedDate":"2021-10-14"},{"lineNumber":85,"author":{"gitId":"Gabau"},"content":"        testPeriods \u003d createPeriod(2, 6).union(testPeriods);","lastModifiedDate":"2021-10-14"},{"lineNumber":86,"author":{"gitId":"Gabau"},"content":"        assertEquals(expectedResult, testPeriods);","lastModifiedDate":"2021-10-14"},{"lineNumber":87,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":88,"author":{"gitId":"Gabau"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":89,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":90,"author":{"gitId":"Gabau"},"content":"    /**","lastModifiedDate":"2021-10-14"},{"lineNumber":91,"author":{"gitId":"Gabau"},"content":"     * Convenience method to create test periods.","lastModifiedDate":"2021-10-14"},{"lineNumber":92,"author":{"gitId":"Gabau"},"content":"     */","lastModifiedDate":"2021-10-14"},{"lineNumber":93,"author":{"gitId":"Gabau"},"content":"    private Period createPeriod(int val1, int val2) {","lastModifiedDate":"2021-10-14"},{"lineNumber":94,"author":{"gitId":"Gabau"},"content":"        return new Period(LocalDate.of(1, 1, val1 % 30),","lastModifiedDate":"2021-10-14"},{"lineNumber":95,"author":{"gitId":"Gabau"},"content":"                LocalDate.of(1, 1, val2 % 30));","lastModifiedDate":"2021-10-14"},{"lineNumber":96,"author":{"gitId":"Gabau"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":97,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":98,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":99,"author":{"gitId":"Gabau"},"content":"    private void assertNotEqual(Collection\u003cPeriod\u003e expected, Collection\u003cPeriod\u003e actual) {","lastModifiedDate":"2021-10-14"},{"lineNumber":100,"author":{"gitId":"Gabau"},"content":"        assertFalse(expected.containsAll(actual) \u0026\u0026 actual.containsAll(expected));","lastModifiedDate":"2021-10-14"},{"lineNumber":101,"author":{"gitId":"Gabau"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":102,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":103,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":104,"author":{"gitId":"Gabau"},"content":"    private void assertEquals(Collection\u003cPeriod\u003e expected, Collection\u003cPeriod\u003e actual) {","lastModifiedDate":"2021-10-14"},{"lineNumber":105,"author":{"gitId":"Gabau"},"content":"        assertTrue(expected.containsAll(actual));","lastModifiedDate":"2021-10-14"},{"lineNumber":106,"author":{"gitId":"Gabau"},"content":"        assertTrue(actual.containsAll(expected));","lastModifiedDate":"2021-10-14"},{"lineNumber":107,"author":{"gitId":"Gabau"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":108,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":109,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":110,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":111,"author":{"gitId":"Gabau"},"content":"    @Test","lastModifiedDate":"2021-10-13"},{"lineNumber":112,"author":{"gitId":"Gabau"},"content":"    public void equals() {","lastModifiedDate":"2021-10-13"},{"lineNumber":113,"author":{"gitId":"Gabau"},"content":"        Period testPeriodAfterMid \u003d new Period(PAST_TEST_DATE, TEST_DATE);","lastModifiedDate":"2021-10-13"},{"lineNumber":114,"author":{"gitId":"Gabau"},"content":"        Period testPeriodBeforeMid \u003d new Period(TEST_DATE, BEFORE_TEST_DATE);","lastModifiedDate":"2021-10-13"},{"lineNumber":115,"author":{"gitId":"Gabau"},"content":"        Period testPeriodAtMid \u003d new Period(TEST_DATE);","lastModifiedDate":"2021-10-13"},{"lineNumber":116,"author":{"gitId":"Gabau"},"content":"        Period alternateMid \u003d new Period(TEST_DATE, TEST_DATE);","lastModifiedDate":"2021-10-13"},{"lineNumber":117,"author":{"gitId":"Gabau"},"content":"        assertTrue(testPeriodAfterMid.equals(testPeriodAfterMid));","lastModifiedDate":"2021-10-13"},{"lineNumber":118,"author":{"gitId":"Gabau"},"content":"        assertTrue(testPeriodBeforeMid.equals(testPeriodBeforeMid));","lastModifiedDate":"2021-10-13"},{"lineNumber":119,"author":{"gitId":"Gabau"},"content":"        assertTrue(testPeriodAtMid.equals(testPeriodAtMid));","lastModifiedDate":"2021-10-13"},{"lineNumber":120,"author":{"gitId":"Gabau"},"content":"        assertTrue(testPeriodAtMid.equals(alternateMid));","lastModifiedDate":"2021-10-13"},{"lineNumber":121,"author":{"gitId":"Gabau"},"content":"        assertFalse(testPeriodAfterMid.equals(testPeriodBeforeMid));","lastModifiedDate":"2021-10-13"},{"lineNumber":122,"author":{"gitId":"Gabau"},"content":"        assertFalse(testPeriodAfterMid.equals(testPeriodAtMid));","lastModifiedDate":"2021-10-13"},{"lineNumber":123,"author":{"gitId":"Gabau"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":124,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":125,"author":{"gitId":"Gabau"},"content":"}","lastModifiedDate":"2021-10-12"},{"lineNumber":126,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-10-12"}],"authorContributionMap":{"Gabau":126}},{"path":"src/test/java/seedu/address/model/person/PersonTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2021-10-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":3,"author":{"gitId":"IrvingHe000"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-14"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":10,"author":{"gitId":"fullfatwasabi"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ROLE_BOB;","lastModifiedDate":"2021-10-09"},{"lineNumber":11,"author":{"gitId":"fullfatwasabi"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_SALARY_BOB;","lastModifiedDate":"2021-10-09"},{"lineNumber":12,"author":{"gitId":"fullfatwasabi"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_STATUS_BOB;","lastModifiedDate":"2021-10-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2018-04-19"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2018-04-19"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":18,"author":{"gitId":"IrvingHe000"},"content":"import java.time.DayOfWeek;","lastModifiedDate":"2021-10-14"},{"lineNumber":19,"author":{"gitId":"IrvingHe000"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2018-03-26"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class PersonTest {","lastModifiedDate":"2021-09-22"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void asObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2021-09-22"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e person.getTags().remove(0));","lastModifiedDate":"2021-09-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":32,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":33,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-19"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public void isSamePerson() {","lastModifiedDate":"2018-04-19"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.isSamePerson(ALICE));","lastModifiedDate":"2021-09-22"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.isSamePerson(null));","lastModifiedDate":"2021-09-22"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        // same name, all other attributes different -\u003e returns true","lastModifiedDate":"2020-12-18"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB)","lastModifiedDate":"2021-09-22"},{"lineNumber":44,"author":{"gitId":"fullfatwasabi"},"content":"                .withAddress(VALID_ADDRESS_BOB).withRoles(VALID_ROLE_BOB).withStatus(VALID_STATUS_BOB)","lastModifiedDate":"2021-10-13"},{"lineNumber":45,"author":{"gitId":"fullfatwasabi"},"content":"                .withSalary(VALID_SALARY_BOB).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2021-10-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.isSamePerson(editedAlice));","lastModifiedDate":"2021-09-22"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // different name, all other attributes same -\u003e returns false","lastModifiedDate":"2020-12-18"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.isSamePerson(editedAlice));","lastModifiedDate":"2021-09-22"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        // name differs in case, all other attributes same -\u003e returns false","lastModifiedDate":"2020-12-18"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        Person editedBob \u003d new PersonBuilder(BOB).withName(VALID_NAME_BOB.toLowerCase()).build();","lastModifiedDate":"2021-09-22"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertFalse(BOB.isSamePerson(editedBob));","lastModifiedDate":"2021-09-22"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        // name has trailing spaces, all other attributes same -\u003e returns false","lastModifiedDate":"2020-12-18"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        String nameWithTrailingSpaces \u003d VALID_NAME_BOB + \" \";","lastModifiedDate":"2020-12-18"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        editedBob \u003d new PersonBuilder(BOB).withName(nameWithTrailingSpaces).build();","lastModifiedDate":"2020-12-18"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertFalse(BOB.isSamePerson(editedBob));","lastModifiedDate":"2021-09-22"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":62,"author":{"gitId":"IrvingHe000"},"content":"    @Test","lastModifiedDate":"2021-10-14"},{"lineNumber":63,"author":{"gitId":"IrvingHe000"},"content":"    public void getTotalWeeklyWorkingHour() {","lastModifiedDate":"2021-10-14"},{"lineNumber":64,"author":{"gitId":"IrvingHe000"},"content":"        Person alice \u003d new PersonBuilder().withName(\"Alice Pauline\")","lastModifiedDate":"2021-10-14"},{"lineNumber":65,"author":{"gitId":"IrvingHe000"},"content":"                .withAddress(\"123, Jurong West Ave 6, #08-111\").withEmail(\"alice@example.com\")","lastModifiedDate":"2021-10-14"},{"lineNumber":66,"author":{"gitId":"IrvingHe000"},"content":"                .withPhone(\"94351253\").withRoles(\"floor\").withSalary(\"1000000\").withStatus(\"fulltime\")","lastModifiedDate":"2021-10-15"},{"lineNumber":67,"author":{"gitId":"IrvingHe000"},"content":"                .withTags(\"friends\").build();","lastModifiedDate":"2021-10-14"},{"lineNumber":68,"author":{"gitId":"IrvingHe000"},"content":"        assertEquals(0, alice.getTotalWeeklyWorkingHour());","lastModifiedDate":"2021-10-14"},{"lineNumber":69,"author":{"gitId":"IrvingHe000"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":70,"author":{"gitId":"IrvingHe000"},"content":"        alice.addShift(DayOfWeek.MONDAY, Slot.AFTERNOON);","lastModifiedDate":"2021-10-15"},{"lineNumber":71,"author":{"gitId":"IrvingHe000"},"content":"        assertEquals(4, alice.getTotalWeeklyWorkingHour());","lastModifiedDate":"2021-10-14"},{"lineNumber":72,"author":{"gitId":"IrvingHe000"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":73,"author":{"gitId":"IrvingHe000"},"content":"        Schedule newSchedule \u003d new Schedule();","lastModifiedDate":"2021-10-14"},{"lineNumber":74,"author":{"gitId":"IrvingHe000"},"content":"        alice.setSchedule(newSchedule);","lastModifiedDate":"2021-10-14"},{"lineNumber":75,"author":{"gitId":"IrvingHe000"},"content":"        assertEquals(0, alice.getTotalWeeklyWorkingHour());","lastModifiedDate":"2021-10-14"},{"lineNumber":76,"author":{"gitId":"IrvingHe000"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":77,"author":{"gitId":"IrvingHe000"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-19"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-04-19"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        Person aliceCopy \u003d new PersonBuilder(ALICE).build();","lastModifiedDate":"2021-09-22"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.equals(aliceCopy));","lastModifiedDate":"2018-04-19"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.equals(ALICE));","lastModifiedDate":"2018-04-19"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(null));","lastModifiedDate":"2018-04-19"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        // different type -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(5));","lastModifiedDate":"2018-04-19"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(BOB));","lastModifiedDate":"2018-04-19"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2021-09-22"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        // different phone -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        // different email -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withEmail(VALID_EMAIL_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        // different address -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-18"},{"lineNumber":112,"author":{"gitId":"fullfatwasabi"},"content":"        // different role -\u003e returns false","lastModifiedDate":"2021-10-09"},{"lineNumber":113,"author":{"gitId":"fullfatwasabi"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withRoles(VALID_ROLE_BOB).build();","lastModifiedDate":"2021-10-13"},{"lineNumber":114,"author":{"gitId":"fullfatwasabi"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2021-10-09"},{"lineNumber":115,"author":{"gitId":"fullfatwasabi"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":116,"author":{"gitId":"fullfatwasabi"},"content":"        // different salary -\u003e returns false","lastModifiedDate":"2021-10-09"},{"lineNumber":117,"author":{"gitId":"fullfatwasabi"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withSalary(VALID_SALARY_BOB).build();","lastModifiedDate":"2021-10-09"},{"lineNumber":118,"author":{"gitId":"fullfatwasabi"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2021-10-09"},{"lineNumber":119,"author":{"gitId":"fullfatwasabi"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":120,"author":{"gitId":"fullfatwasabi"},"content":"        // different status -\u003e returns false","lastModifiedDate":"2021-10-09"},{"lineNumber":121,"author":{"gitId":"fullfatwasabi"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withStatus(VALID_STATUS_BOB).build();","lastModifiedDate":"2021-10-09"},{"lineNumber":122,"author":{"gitId":"fullfatwasabi"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2021-10-09"},{"lineNumber":123,"author":{"gitId":"fullfatwasabi"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        // different tags -\u003e returns false","lastModifiedDate":"2018-04-18"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2018-04-18"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-18"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":128,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-09-01"}],"authorContributionMap":{"Gabau":2,"fullfatwasabi":17,"-":90,"IrvingHe000":19}},{"path":"src/test/java/seedu/address/model/person/RoleTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"fullfatwasabi"},"content":"package seedu.address.model.person;","lastModifiedDate":"2021-10-09"},{"lineNumber":2,"author":{"gitId":"fullfatwasabi"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":3,"author":{"gitId":"fullfatwasabi"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-09"},{"lineNumber":4,"author":{"gitId":"fullfatwasabi"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-09"},{"lineNumber":5,"author":{"gitId":"fullfatwasabi"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-09"},{"lineNumber":6,"author":{"gitId":"fullfatwasabi"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":7,"author":{"gitId":"fullfatwasabi"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-09"},{"lineNumber":8,"author":{"gitId":"fullfatwasabi"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":9,"author":{"gitId":"fullfatwasabi"},"content":"public class RoleTest {","lastModifiedDate":"2021-10-09"},{"lineNumber":10,"author":{"gitId":"fullfatwasabi"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":11,"author":{"gitId":"fullfatwasabi"},"content":"    @Test","lastModifiedDate":"2021-10-09"},{"lineNumber":12,"author":{"gitId":"fullfatwasabi"},"content":"    public void translate_null_throwsNullPointerException() {","lastModifiedDate":"2021-10-09"},{"lineNumber":13,"author":{"gitId":"fullfatwasabi"},"content":"        assertThrows(NullPointerException.class, () -\u003e Role.translateStringToRole(null));","lastModifiedDate":"2021-10-09"},{"lineNumber":14,"author":{"gitId":"fullfatwasabi"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":15,"author":{"gitId":"fullfatwasabi"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":16,"author":{"gitId":"fullfatwasabi"},"content":"    @Test","lastModifiedDate":"2021-10-09"},{"lineNumber":17,"author":{"gitId":"fullfatwasabi"},"content":"    public void translate_invalidRole_throwsIllegalArgumentException() {","lastModifiedDate":"2021-10-09"},{"lineNumber":18,"author":{"gitId":"fullfatwasabi"},"content":"        String invalidRole \u003d \"\";","lastModifiedDate":"2021-10-09"},{"lineNumber":19,"author":{"gitId":"fullfatwasabi"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e Role.translateStringToRole(invalidRole));","lastModifiedDate":"2021-10-09"},{"lineNumber":20,"author":{"gitId":"fullfatwasabi"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":21,"author":{"gitId":"fullfatwasabi"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":22,"author":{"gitId":"fullfatwasabi"},"content":"    @Test","lastModifiedDate":"2021-10-09"},{"lineNumber":23,"author":{"gitId":"fullfatwasabi"},"content":"    public void isValidRole() {","lastModifiedDate":"2021-10-09"},{"lineNumber":24,"author":{"gitId":"fullfatwasabi"},"content":"        // null address","lastModifiedDate":"2021-10-09"},{"lineNumber":25,"author":{"gitId":"fullfatwasabi"},"content":"        assertThrows(NullPointerException.class, () -\u003e Role.isValidRole(null));","lastModifiedDate":"2021-10-09"},{"lineNumber":26,"author":{"gitId":"fullfatwasabi"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":27,"author":{"gitId":"fullfatwasabi"},"content":"        // invalid addresses","lastModifiedDate":"2021-10-09"},{"lineNumber":28,"author":{"gitId":"fullfatwasabi"},"content":"        assertFalse(Role.isValidRole(\"\")); // empty string","lastModifiedDate":"2021-10-09"},{"lineNumber":29,"author":{"gitId":"fullfatwasabi"},"content":"        assertFalse(Role.isValidRole(\" \")); // spaces only","lastModifiedDate":"2021-10-09"},{"lineNumber":30,"author":{"gitId":"fullfatwasabi"},"content":"        assertFalse(Role.isValidRole(\"booper\")); // invalid String","lastModifiedDate":"2021-10-09"},{"lineNumber":31,"author":{"gitId":"fullfatwasabi"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":32,"author":{"gitId":"fullfatwasabi"},"content":"        // valid addresses","lastModifiedDate":"2021-10-09"},{"lineNumber":33,"author":{"gitId":"fullfatwasabi"},"content":"        assertTrue(Role.isValidRole(\"bartender\"));","lastModifiedDate":"2021-10-09"},{"lineNumber":34,"author":{"gitId":"fullfatwasabi"},"content":"        assertTrue(Role.isValidRole(\"floor\"));","lastModifiedDate":"2021-10-09"},{"lineNumber":35,"author":{"gitId":"fullfatwasabi"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":36,"author":{"gitId":"fullfatwasabi"},"content":"}","lastModifiedDate":"2021-10-09"}],"authorContributionMap":{"fullfatwasabi":36}},{"path":"src/test/java/seedu/address/model/person/SalaryTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"fullfatwasabi"},"content":"package seedu.address.model.person;","lastModifiedDate":"2021-10-09"},{"lineNumber":2,"author":{"gitId":"fullfatwasabi"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":3,"author":{"gitId":"fullfatwasabi"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-12"},{"lineNumber":4,"author":{"gitId":"fullfatwasabi"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-09"},{"lineNumber":5,"author":{"gitId":"fullfatwasabi"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-09"},{"lineNumber":6,"author":{"gitId":"fullfatwasabi"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-09"},{"lineNumber":7,"author":{"gitId":"fullfatwasabi"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":8,"author":{"gitId":"fullfatwasabi"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-09"},{"lineNumber":9,"author":{"gitId":"fullfatwasabi"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":10,"author":{"gitId":"fullfatwasabi"},"content":"public class SalaryTest {","lastModifiedDate":"2021-10-09"},{"lineNumber":11,"author":{"gitId":"fullfatwasabi"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":12,"author":{"gitId":"fullfatwasabi"},"content":"    @Test","lastModifiedDate":"2021-10-09"},{"lineNumber":13,"author":{"gitId":"fullfatwasabi"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2021-10-09"},{"lineNumber":14,"author":{"gitId":"fullfatwasabi"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Salary(null));","lastModifiedDate":"2021-10-09"},{"lineNumber":15,"author":{"gitId":"fullfatwasabi"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":16,"author":{"gitId":"fullfatwasabi"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":17,"author":{"gitId":"fullfatwasabi"},"content":"    @Test","lastModifiedDate":"2021-10-09"},{"lineNumber":18,"author":{"gitId":"fullfatwasabi"},"content":"    public void constructor_invalidSalary_throwsIllegalArgumentException() {","lastModifiedDate":"2021-10-09"},{"lineNumber":19,"author":{"gitId":"fullfatwasabi"},"content":"        String invalidSalary \u003d \"\";","lastModifiedDate":"2021-10-09"},{"lineNumber":20,"author":{"gitId":"fullfatwasabi"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Salary(invalidSalary));","lastModifiedDate":"2021-10-09"},{"lineNumber":21,"author":{"gitId":"fullfatwasabi"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":22,"author":{"gitId":"fullfatwasabi"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":23,"author":{"gitId":"fullfatwasabi"},"content":"    @Test","lastModifiedDate":"2021-10-09"},{"lineNumber":24,"author":{"gitId":"fullfatwasabi"},"content":"    public void isValidSalary() {","lastModifiedDate":"2021-10-09"},{"lineNumber":25,"author":{"gitId":"fullfatwasabi"},"content":"        // null salary","lastModifiedDate":"2021-10-12"},{"lineNumber":26,"author":{"gitId":"fullfatwasabi"},"content":"        assertThrows(NullPointerException.class, () -\u003e Salary.isValidSalary(null));","lastModifiedDate":"2021-10-09"},{"lineNumber":27,"author":{"gitId":"fullfatwasabi"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":28,"author":{"gitId":"fullfatwasabi"},"content":"        // invalid salary","lastModifiedDate":"2021-10-12"},{"lineNumber":29,"author":{"gitId":"fullfatwasabi"},"content":"        assertFalse(Salary.isValidSalary(\"\")); // empty string","lastModifiedDate":"2021-10-09"},{"lineNumber":30,"author":{"gitId":"fullfatwasabi"},"content":"        assertFalse(Salary.isValidSalary(\" \")); // spaces only","lastModifiedDate":"2021-10-09"},{"lineNumber":31,"author":{"gitId":"fullfatwasabi"},"content":"        assertFalse(Salary.isValidSalary(\"a lot\")); // non-numeric string","lastModifiedDate":"2021-10-09"},{"lineNumber":32,"author":{"gitId":"fullfatwasabi"},"content":"        assertFalse(Salary.isValidSalary(\"-500\"));","lastModifiedDate":"2021-10-12"},{"lineNumber":33,"author":{"gitId":"fullfatwasabi"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":34,"author":{"gitId":"fullfatwasabi"},"content":"        // valid salary","lastModifiedDate":"2021-10-12"},{"lineNumber":35,"author":{"gitId":"fullfatwasabi"},"content":"        assertTrue(Salary.isValidSalary(\"199999\"));","lastModifiedDate":"2021-10-09"},{"lineNumber":36,"author":{"gitId":"fullfatwasabi"},"content":"        assertTrue(Salary.isValidSalary(\"0\"));","lastModifiedDate":"2021-10-09"},{"lineNumber":37,"author":{"gitId":"fullfatwasabi"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":38,"author":{"gitId":"fullfatwasabi"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":39,"author":{"gitId":"fullfatwasabi"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":40,"author":{"gitId":"fullfatwasabi"},"content":"    public void convertToDollars() {","lastModifiedDate":"2021-10-12"},{"lineNumber":41,"author":{"gitId":"fullfatwasabi"},"content":"        // rounding correctly","lastModifiedDate":"2021-10-12"},{"lineNumber":42,"author":{"gitId":"fullfatwasabi"},"content":"        Salary shouldNotRoundUp \u003d new Salary(\"150\");","lastModifiedDate":"2021-10-12"},{"lineNumber":43,"author":{"gitId":"fullfatwasabi"},"content":"        assertEquals(\"$1.50\", shouldNotRoundUp.convertToDollars());","lastModifiedDate":"2021-10-12"},{"lineNumber":44,"author":{"gitId":"fullfatwasabi"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":45,"author":{"gitId":"fullfatwasabi"},"content":"        // salary with single digit cents displayed correctly","lastModifiedDate":"2021-10-12"},{"lineNumber":46,"author":{"gitId":"fullfatwasabi"},"content":"        Salary singleDigitCents \u003d new Salary(\"109\");","lastModifiedDate":"2021-10-12"},{"lineNumber":47,"author":{"gitId":"fullfatwasabi"},"content":"        assertEquals(\"$1.09\", singleDigitCents.convertToDollars());","lastModifiedDate":"2021-10-12"},{"lineNumber":48,"author":{"gitId":"fullfatwasabi"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":49,"author":{"gitId":"fullfatwasabi"},"content":"        // salary with no cents is displayed correctly","lastModifiedDate":"2021-10-12"},{"lineNumber":50,"author":{"gitId":"fullfatwasabi"},"content":"        Salary zeroDigitCents \u003d new Salary(\"100\");","lastModifiedDate":"2021-10-12"},{"lineNumber":51,"author":{"gitId":"fullfatwasabi"},"content":"        assertEquals(\"$1.00\", zeroDigitCents.convertToDollars());","lastModifiedDate":"2021-10-12"},{"lineNumber":52,"author":{"gitId":"fullfatwasabi"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":53,"author":{"gitId":"fullfatwasabi"},"content":"}","lastModifiedDate":"2021-10-09"}],"authorContributionMap":{"fullfatwasabi":53}},{"path":"src/test/java/seedu/address/model/person/ScheduleTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"fullfatwasabi"},"content":"package seedu.address.model.person;","lastModifiedDate":"2021-10-09"},{"lineNumber":2,"author":{"gitId":"fullfatwasabi"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":3,"author":{"gitId":"IrvingHe000"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-14"},{"lineNumber":4,"author":{"gitId":"fullfatwasabi"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-09"},{"lineNumber":5,"author":{"gitId":"fullfatwasabi"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-09"},{"lineNumber":6,"author":{"gitId":"fullfatwasabi"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-09"},{"lineNumber":7,"author":{"gitId":"fullfatwasabi"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":8,"author":{"gitId":"IrvingHe000"},"content":"import java.time.DayOfWeek;","lastModifiedDate":"2021-10-14"},{"lineNumber":9,"author":{"gitId":"IrvingHe000"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":10,"author":{"gitId":"fullfatwasabi"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-09"},{"lineNumber":11,"author":{"gitId":"fullfatwasabi"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":12,"author":{"gitId":"fullfatwasabi"},"content":"public class ScheduleTest {","lastModifiedDate":"2021-10-09"},{"lineNumber":13,"author":{"gitId":"fullfatwasabi"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":14,"author":{"gitId":"fullfatwasabi"},"content":"    @Test","lastModifiedDate":"2021-10-09"},{"lineNumber":15,"author":{"gitId":"fullfatwasabi"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2021-10-09"},{"lineNumber":16,"author":{"gitId":"fullfatwasabi"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Schedule(null));","lastModifiedDate":"2021-10-09"},{"lineNumber":17,"author":{"gitId":"fullfatwasabi"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":18,"author":{"gitId":"fullfatwasabi"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":19,"author":{"gitId":"fullfatwasabi"},"content":"    @Test","lastModifiedDate":"2021-10-09"},{"lineNumber":20,"author":{"gitId":"fullfatwasabi"},"content":"    public void constructor_invalidSchedule_throwsIllegalArgumentException() {","lastModifiedDate":"2021-10-09"},{"lineNumber":21,"author":{"gitId":"fullfatwasabi"},"content":"        String invalidSchedule \u003d \"\";","lastModifiedDate":"2021-10-09"},{"lineNumber":22,"author":{"gitId":"fullfatwasabi"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Schedule(invalidSchedule));","lastModifiedDate":"2021-10-09"},{"lineNumber":23,"author":{"gitId":"fullfatwasabi"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":24,"author":{"gitId":"fullfatwasabi"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":25,"author":{"gitId":"fullfatwasabi"},"content":"    @Test","lastModifiedDate":"2021-10-09"},{"lineNumber":26,"author":{"gitId":"fullfatwasabi"},"content":"    public void isValidSchedule() {","lastModifiedDate":"2021-10-09"},{"lineNumber":27,"author":{"gitId":"fullfatwasabi"},"content":"        // null address","lastModifiedDate":"2021-10-09"},{"lineNumber":28,"author":{"gitId":"fullfatwasabi"},"content":"        assertThrows(NullPointerException.class, () -\u003e Schedule.isValidSchedule(null));","lastModifiedDate":"2021-10-09"},{"lineNumber":29,"author":{"gitId":"fullfatwasabi"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":30,"author":{"gitId":"fullfatwasabi"},"content":"        // invalid addresses","lastModifiedDate":"2021-10-09"},{"lineNumber":31,"author":{"gitId":"fullfatwasabi"},"content":"        assertFalse(Schedule.isValidSchedule(\"mon-1-\")); // invalid string","lastModifiedDate":"2021-10-09"},{"lineNumber":32,"author":{"gitId":"fullfatwasabi"},"content":"        assertFalse(Schedule.isValidSchedule(\"abcde\")); // invalid string","lastModifiedDate":"2021-10-09"},{"lineNumber":33,"author":{"gitId":"fullfatwasabi"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":34,"author":{"gitId":"fullfatwasabi"},"content":"        // valid addresses","lastModifiedDate":"2021-10-09"},{"lineNumber":35,"author":{"gitId":"IrvingHe000"},"content":"        assertTrue(Schedule.isValidSchedule(\"monday-morning tuesday-afternoon\"));","lastModifiedDate":"2021-10-10"},{"lineNumber":36,"author":{"gitId":"fullfatwasabi"},"content":"        assertTrue(Schedule.isValidSchedule(\"\")); //empty schedule","lastModifiedDate":"2021-10-09"},{"lineNumber":37,"author":{"gitId":"fullfatwasabi"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":38,"author":{"gitId":"IrvingHe000"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":39,"author":{"gitId":"IrvingHe000"},"content":"    @Test","lastModifiedDate":"2021-10-14"},{"lineNumber":40,"author":{"gitId":"IrvingHe000"},"content":"    public void getTotalWorkingHourTest() {","lastModifiedDate":"2021-10-14"},{"lineNumber":41,"author":{"gitId":"IrvingHe000"},"content":"        Schedule schedule \u003d new Schedule();","lastModifiedDate":"2021-10-14"},{"lineNumber":42,"author":{"gitId":"IrvingHe000"},"content":"        assertEquals(0, schedule.getTotalWorkingHour());","lastModifiedDate":"2021-10-14"},{"lineNumber":43,"author":{"gitId":"IrvingHe000"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":44,"author":{"gitId":"IrvingHe000"},"content":"        schedule.addShift(DayOfWeek.MONDAY, Slot.AFTERNOON);","lastModifiedDate":"2021-10-14"},{"lineNumber":45,"author":{"gitId":"IrvingHe000"},"content":"        assertEquals(4, schedule.getTotalWorkingHour());","lastModifiedDate":"2021-10-14"},{"lineNumber":46,"author":{"gitId":"IrvingHe000"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":47,"author":{"gitId":"fullfatwasabi"},"content":"}","lastModifiedDate":"2021-10-09"}],"authorContributionMap":{"fullfatwasabi":34,"IrvingHe000":13}},{"path":"src/test/java/seedu/address/model/person/ShiftTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"IrvingHe000"},"content":"package seedu.address.model.person;","lastModifiedDate":"2021-10-14"},{"lineNumber":2,"author":{"gitId":"IrvingHe000"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":3,"author":{"gitId":"IrvingHe000"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-14"},{"lineNumber":4,"author":{"gitId":"IrvingHe000"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-14"},{"lineNumber":5,"author":{"gitId":"IrvingHe000"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":6,"author":{"gitId":"IrvingHe000"},"content":"import java.time.DayOfWeek;","lastModifiedDate":"2021-10-14"},{"lineNumber":7,"author":{"gitId":"IrvingHe000"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":8,"author":{"gitId":"IrvingHe000"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-14"},{"lineNumber":9,"author":{"gitId":"IrvingHe000"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":10,"author":{"gitId":"IrvingHe000"},"content":"public class ShiftTest {","lastModifiedDate":"2021-10-14"},{"lineNumber":11,"author":{"gitId":"IrvingHe000"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":12,"author":{"gitId":"IrvingHe000"},"content":"    private Shift firstShift \u003d new Shift(DayOfWeek.MONDAY, Slot.MORNING);","lastModifiedDate":"2021-10-14"},{"lineNumber":13,"author":{"gitId":"IrvingHe000"},"content":"    private Shift secondShift \u003d new Shift(DayOfWeek.TUESDAY, Slot.AFTERNOON);","lastModifiedDate":"2021-10-14"},{"lineNumber":14,"author":{"gitId":"IrvingHe000"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":15,"author":{"gitId":"IrvingHe000"},"content":"    @Test","lastModifiedDate":"2021-10-14"},{"lineNumber":16,"author":{"gitId":"IrvingHe000"},"content":"    public void isMorningTest() {","lastModifiedDate":"2021-10-14"},{"lineNumber":17,"author":{"gitId":"IrvingHe000"},"content":"        assertTrue(firstShift.isInMorning());","lastModifiedDate":"2021-10-14"},{"lineNumber":18,"author":{"gitId":"IrvingHe000"},"content":"        assertFalse(secondShift.isInMorning());","lastModifiedDate":"2021-10-14"},{"lineNumber":19,"author":{"gitId":"IrvingHe000"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":20,"author":{"gitId":"IrvingHe000"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":21,"author":{"gitId":"IrvingHe000"},"content":"    @Test","lastModifiedDate":"2021-10-14"},{"lineNumber":22,"author":{"gitId":"IrvingHe000"},"content":"    public void isAfternoonTest() {","lastModifiedDate":"2021-10-14"},{"lineNumber":23,"author":{"gitId":"IrvingHe000"},"content":"        assertTrue(secondShift.isInAfternoon());","lastModifiedDate":"2021-10-14"},{"lineNumber":24,"author":{"gitId":"IrvingHe000"},"content":"        assertFalse(firstShift.isInAfternoon());","lastModifiedDate":"2021-10-14"},{"lineNumber":25,"author":{"gitId":"IrvingHe000"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":26,"author":{"gitId":"IrvingHe000"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":27,"author":{"gitId":"IrvingHe000"},"content":"    @Test","lastModifiedDate":"2021-10-14"},{"lineNumber":28,"author":{"gitId":"IrvingHe000"},"content":"    public void isValidDayOfWeekTest() {","lastModifiedDate":"2021-10-14"},{"lineNumber":29,"author":{"gitId":"IrvingHe000"},"content":"        assertTrue(Shift.isValidDayOfWeek(\"monday\"));","lastModifiedDate":"2021-10-14"},{"lineNumber":30,"author":{"gitId":"IrvingHe000"},"content":"        assertTrue(Shift.isValidDayOfWeek(\"Monday\"));","lastModifiedDate":"2021-10-14"},{"lineNumber":31,"author":{"gitId":"IrvingHe000"},"content":"        assertTrue(Shift.isValidDayOfWeek(\"MONDAY\"));","lastModifiedDate":"2021-10-14"},{"lineNumber":32,"author":{"gitId":"IrvingHe000"},"content":"        assertFalse(Shift.isValidDayOfWeek(\"mon\"));","lastModifiedDate":"2021-10-14"},{"lineNumber":33,"author":{"gitId":"IrvingHe000"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":34,"author":{"gitId":"IrvingHe000"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":35,"author":{"gitId":"IrvingHe000"},"content":"    @Test","lastModifiedDate":"2021-10-14"},{"lineNumber":36,"author":{"gitId":"IrvingHe000"},"content":"    public void isValidShiftTest() {","lastModifiedDate":"2021-10-14"},{"lineNumber":37,"author":{"gitId":"IrvingHe000"},"content":"        assertTrue(Shift.isValidShift(\"monday-morning\"));","lastModifiedDate":"2021-10-14"},{"lineNumber":38,"author":{"gitId":"IrvingHe000"},"content":"        assertTrue(Shift.isValidShift(\"Monday-morning\"));","lastModifiedDate":"2021-10-14"},{"lineNumber":39,"author":{"gitId":"IrvingHe000"},"content":"        assertFalse(Shift.isValidShift(\"mon-morning\"));","lastModifiedDate":"2021-10-14"},{"lineNumber":40,"author":{"gitId":"IrvingHe000"},"content":"        assertFalse(Shift.isValidShift(\"monday-1\"));","lastModifiedDate":"2021-10-14"},{"lineNumber":41,"author":{"gitId":"IrvingHe000"},"content":"        assertFalse(Shift.isValidShift(\"\"));","lastModifiedDate":"2021-10-14"},{"lineNumber":42,"author":{"gitId":"IrvingHe000"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":43,"author":{"gitId":"IrvingHe000"},"content":"}","lastModifiedDate":"2021-10-14"}],"authorContributionMap":{"IrvingHe000":43}},{"path":"src/test/java/seedu/address/model/person/SlotTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"IrvingHe000"},"content":"package seedu.address.model.person;","lastModifiedDate":"2021-10-14"},{"lineNumber":2,"author":{"gitId":"IrvingHe000"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":3,"author":{"gitId":"IrvingHe000"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-14"},{"lineNumber":4,"author":{"gitId":"IrvingHe000"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-14"},{"lineNumber":5,"author":{"gitId":"IrvingHe000"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2021-10-14"},{"lineNumber":6,"author":{"gitId":"IrvingHe000"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-14"},{"lineNumber":7,"author":{"gitId":"IrvingHe000"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":8,"author":{"gitId":"IrvingHe000"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-14"},{"lineNumber":9,"author":{"gitId":"IrvingHe000"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":10,"author":{"gitId":"IrvingHe000"},"content":"public class SlotTest {","lastModifiedDate":"2021-10-14"},{"lineNumber":11,"author":{"gitId":"IrvingHe000"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":12,"author":{"gitId":"IrvingHe000"},"content":"    private static final Slot MORNING \u003d Slot.MORNING;","lastModifiedDate":"2021-10-14"},{"lineNumber":13,"author":{"gitId":"IrvingHe000"},"content":"    private static final Slot AFTERNOON \u003d Slot.AFTERNOON;","lastModifiedDate":"2021-10-14"},{"lineNumber":14,"author":{"gitId":"IrvingHe000"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":15,"author":{"gitId":"IrvingHe000"},"content":"    private static final String MORNING_LOWERCASE \u003d \"morning\";","lastModifiedDate":"2021-10-15"},{"lineNumber":16,"author":{"gitId":"IrvingHe000"},"content":"    private static final String MORNING_UPPERCASE \u003d \"MORNING\";","lastModifiedDate":"2021-10-15"},{"lineNumber":17,"author":{"gitId":"IrvingHe000"},"content":"    private static final String MORNING_START_WITH_UPPERCASE \u003d \"Morning\";","lastModifiedDate":"2021-10-15"},{"lineNumber":18,"author":{"gitId":"IrvingHe000"},"content":"    private static final String AFTERNOON_LOWERCASE \u003d \"afternoon\";","lastModifiedDate":"2021-10-15"},{"lineNumber":19,"author":{"gitId":"IrvingHe000"},"content":"    private static final String AFTERNOON_UPPERCASE \u003d \"AFTERNOON\";","lastModifiedDate":"2021-10-15"},{"lineNumber":20,"author":{"gitId":"IrvingHe000"},"content":"    private static final String AFTERNOON_START_WITH_UPPERCASE \u003d \"Afternoon\";","lastModifiedDate":"2021-10-15"},{"lineNumber":21,"author":{"gitId":"IrvingHe000"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":22,"author":{"gitId":"IrvingHe000"},"content":"    @Test","lastModifiedDate":"2021-10-14"},{"lineNumber":23,"author":{"gitId":"IrvingHe000"},"content":"    public void getValueTest() {","lastModifiedDate":"2021-10-14"},{"lineNumber":24,"author":{"gitId":"IrvingHe000"},"content":"        assertEquals(MORNING_LOWERCASE, MORNING.getValue());","lastModifiedDate":"2021-10-15"},{"lineNumber":25,"author":{"gitId":"IrvingHe000"},"content":"        assertEquals(AFTERNOON_LOWERCASE, AFTERNOON.getValue());","lastModifiedDate":"2021-10-15"},{"lineNumber":26,"author":{"gitId":"IrvingHe000"},"content":"        assertNotEquals(MORNING_UPPERCASE, MORNING.getValue());","lastModifiedDate":"2021-10-15"},{"lineNumber":27,"author":{"gitId":"IrvingHe000"},"content":"        assertNotEquals(AFTERNOON_UPPERCASE, AFTERNOON.getValue());","lastModifiedDate":"2021-10-15"},{"lineNumber":28,"author":{"gitId":"IrvingHe000"},"content":"        assertNotEquals(MORNING_START_WITH_UPPERCASE, MORNING.getValue());","lastModifiedDate":"2021-10-15"},{"lineNumber":29,"author":{"gitId":"IrvingHe000"},"content":"        assertNotEquals(AFTERNOON_START_WITH_UPPERCASE, AFTERNOON.getValue());","lastModifiedDate":"2021-10-15"},{"lineNumber":30,"author":{"gitId":"IrvingHe000"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":31,"author":{"gitId":"IrvingHe000"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":32,"author":{"gitId":"IrvingHe000"},"content":"    @Test","lastModifiedDate":"2021-10-14"},{"lineNumber":33,"author":{"gitId":"IrvingHe000"},"content":"    public void getOrderTest() {","lastModifiedDate":"2021-10-14"},{"lineNumber":34,"author":{"gitId":"IrvingHe000"},"content":"        assertEquals(0, MORNING.getOrder());","lastModifiedDate":"2021-10-14"},{"lineNumber":35,"author":{"gitId":"IrvingHe000"},"content":"        assertEquals(1, AFTERNOON.getOrder());","lastModifiedDate":"2021-10-14"},{"lineNumber":36,"author":{"gitId":"IrvingHe000"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":37,"author":{"gitId":"IrvingHe000"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":38,"author":{"gitId":"IrvingHe000"},"content":"    @Test","lastModifiedDate":"2021-10-14"},{"lineNumber":39,"author":{"gitId":"IrvingHe000"},"content":"    public void translateStringToSlotTest() {","lastModifiedDate":"2021-10-14"},{"lineNumber":40,"author":{"gitId":"IrvingHe000"},"content":"        assertEquals(MORNING, Slot.translateStringToSlot(MORNING_LOWERCASE));","lastModifiedDate":"2021-10-15"},{"lineNumber":41,"author":{"gitId":"IrvingHe000"},"content":"        assertEquals(MORNING, Slot.translateStringToSlot(MORNING_START_WITH_UPPERCASE));","lastModifiedDate":"2021-10-15"},{"lineNumber":42,"author":{"gitId":"IrvingHe000"},"content":"        assertEquals(MORNING, Slot.translateStringToSlot(MORNING_UPPERCASE));","lastModifiedDate":"2021-10-15"},{"lineNumber":43,"author":{"gitId":"IrvingHe000"},"content":"        assertEquals(MORNING, Slot.translateStringToSlot(\"   \" + MORNING_LOWERCASE + \"   \"));","lastModifiedDate":"2021-10-15"},{"lineNumber":44,"author":{"gitId":"IrvingHe000"},"content":"        assertEquals(AFTERNOON, Slot.translateStringToSlot(AFTERNOON_LOWERCASE));","lastModifiedDate":"2021-10-15"},{"lineNumber":45,"author":{"gitId":"IrvingHe000"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":46,"author":{"gitId":"IrvingHe000"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":47,"author":{"gitId":"IrvingHe000"},"content":"    @Test","lastModifiedDate":"2021-10-14"},{"lineNumber":48,"author":{"gitId":"IrvingHe000"},"content":"    public void getSlotByOrderTest() {","lastModifiedDate":"2021-10-14"},{"lineNumber":49,"author":{"gitId":"IrvingHe000"},"content":"        assertEquals(MORNING, Slot.getSlotByOrder(\"0\"));","lastModifiedDate":"2021-10-14"},{"lineNumber":50,"author":{"gitId":"IrvingHe000"},"content":"        assertEquals(AFTERNOON, Slot.getSlotByOrder(\"1\"));","lastModifiedDate":"2021-10-14"},{"lineNumber":51,"author":{"gitId":"IrvingHe000"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":52,"author":{"gitId":"IrvingHe000"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":53,"author":{"gitId":"IrvingHe000"},"content":"    @Test","lastModifiedDate":"2021-10-14"},{"lineNumber":54,"author":{"gitId":"IrvingHe000"},"content":"    public void isValidSlotTest() {","lastModifiedDate":"2021-10-14"},{"lineNumber":55,"author":{"gitId":"IrvingHe000"},"content":"        assertTrue(Slot.isValidSlot(MORNING_LOWERCASE));","lastModifiedDate":"2021-10-15"},{"lineNumber":56,"author":{"gitId":"IrvingHe000"},"content":"        assertTrue(Slot.isValidSlot(\"   \" + MORNING_LOWERCASE + \"   \"));","lastModifiedDate":"2021-10-15"},{"lineNumber":57,"author":{"gitId":"IrvingHe000"},"content":"        assertTrue(Slot.isValidSlot(AFTERNOON_LOWERCASE));","lastModifiedDate":"2021-10-15"},{"lineNumber":58,"author":{"gitId":"IrvingHe000"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":59,"author":{"gitId":"IrvingHe000"},"content":"        assertFalse(Slot.isValidSlot(MORNING_START_WITH_UPPERCASE));","lastModifiedDate":"2021-10-15"},{"lineNumber":60,"author":{"gitId":"IrvingHe000"},"content":"        assertFalse(Slot.isValidSlot(\"\"));","lastModifiedDate":"2021-10-14"},{"lineNumber":61,"author":{"gitId":"IrvingHe000"},"content":"        assertFalse(Slot.isValidSlot(\"random text\"));","lastModifiedDate":"2021-10-14"},{"lineNumber":62,"author":{"gitId":"IrvingHe000"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":63,"author":{"gitId":"IrvingHe000"},"content":"}","lastModifiedDate":"2021-10-14"}],"authorContributionMap":{"IrvingHe000":63}},{"path":"src/test/java/seedu/address/model/person/StatusTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"fullfatwasabi"},"content":"package seedu.address.model.person;","lastModifiedDate":"2021-10-09"},{"lineNumber":2,"author":{"gitId":"fullfatwasabi"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":3,"author":{"gitId":"fullfatwasabi"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-09"},{"lineNumber":4,"author":{"gitId":"fullfatwasabi"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-09"},{"lineNumber":5,"author":{"gitId":"fullfatwasabi"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-09"},{"lineNumber":6,"author":{"gitId":"fullfatwasabi"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":7,"author":{"gitId":"fullfatwasabi"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-09"},{"lineNumber":8,"author":{"gitId":"fullfatwasabi"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":9,"author":{"gitId":"fullfatwasabi"},"content":"public class StatusTest {","lastModifiedDate":"2021-10-09"},{"lineNumber":10,"author":{"gitId":"fullfatwasabi"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":11,"author":{"gitId":"fullfatwasabi"},"content":"    @Test","lastModifiedDate":"2021-10-09"},{"lineNumber":12,"author":{"gitId":"fullfatwasabi"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2021-10-09"},{"lineNumber":13,"author":{"gitId":"fullfatwasabi"},"content":"        assertThrows(NullPointerException.class, () -\u003e Status.translateStringToStatus(null));","lastModifiedDate":"2021-10-09"},{"lineNumber":14,"author":{"gitId":"fullfatwasabi"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":15,"author":{"gitId":"fullfatwasabi"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":16,"author":{"gitId":"fullfatwasabi"},"content":"    @Test","lastModifiedDate":"2021-10-09"},{"lineNumber":17,"author":{"gitId":"fullfatwasabi"},"content":"    public void constructor_invalidStatus_throwsIllegalArgumentException() {","lastModifiedDate":"2021-10-09"},{"lineNumber":18,"author":{"gitId":"fullfatwasabi"},"content":"        String invalidStatus \u003d \"\";","lastModifiedDate":"2021-10-09"},{"lineNumber":19,"author":{"gitId":"fullfatwasabi"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e Status.translateStringToStatus(invalidStatus));","lastModifiedDate":"2021-10-09"},{"lineNumber":20,"author":{"gitId":"fullfatwasabi"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":21,"author":{"gitId":"fullfatwasabi"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":22,"author":{"gitId":"fullfatwasabi"},"content":"    @Test","lastModifiedDate":"2021-10-09"},{"lineNumber":23,"author":{"gitId":"fullfatwasabi"},"content":"    public void isValidStatus() {","lastModifiedDate":"2021-10-09"},{"lineNumber":24,"author":{"gitId":"fullfatwasabi"},"content":"        // null address","lastModifiedDate":"2021-10-09"},{"lineNumber":25,"author":{"gitId":"fullfatwasabi"},"content":"        assertThrows(NullPointerException.class, () -\u003e Status.isValidStatus(null));","lastModifiedDate":"2021-10-09"},{"lineNumber":26,"author":{"gitId":"fullfatwasabi"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":27,"author":{"gitId":"fullfatwasabi"},"content":"        // invalid addresses","lastModifiedDate":"2021-10-09"},{"lineNumber":28,"author":{"gitId":"fullfatwasabi"},"content":"        assertFalse(Status.isValidStatus(\"\")); // empty string","lastModifiedDate":"2021-10-09"},{"lineNumber":29,"author":{"gitId":"fullfatwasabi"},"content":"        assertFalse(Status.isValidStatus(\"single and ready to mingle\")); // invalid status","lastModifiedDate":"2021-10-09"},{"lineNumber":30,"author":{"gitId":"fullfatwasabi"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":31,"author":{"gitId":"fullfatwasabi"},"content":"        // valid addresses","lastModifiedDate":"2021-10-09"},{"lineNumber":32,"author":{"gitId":"fullfatwasabi"},"content":"        assertTrue(Status.isValidStatus(\"parttime\"));","lastModifiedDate":"2021-10-09"},{"lineNumber":33,"author":{"gitId":"fullfatwasabi"},"content":"        assertTrue(Status.isValidStatus(\"nostatus\")); // one character","lastModifiedDate":"2021-10-09"},{"lineNumber":34,"author":{"gitId":"fullfatwasabi"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":35,"author":{"gitId":"fullfatwasabi"},"content":"}","lastModifiedDate":"2021-10-09"}],"authorContributionMap":{"fullfatwasabi":35}},{"path":"src/test/java/seedu/address/storage/JsonAdaptedPersonTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2021-10-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.storage.JsonAdaptedPerson.MISSING_FIELD_MESSAGE_FORMAT;","lastModifiedDate":"2021-09-22"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BENSON;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2021-10-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2021-10-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2021-10-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2021-10-09"},{"lineNumber":19,"author":{"gitId":"fullfatwasabi"},"content":"import seedu.address.model.person.Role;","lastModifiedDate":"2021-10-09"},{"lineNumber":20,"author":{"gitId":"fullfatwasabi"},"content":"import seedu.address.model.person.Salary;","lastModifiedDate":"2021-10-09"},{"lineNumber":21,"author":{"gitId":"fullfatwasabi"},"content":"import seedu.address.model.person.Status;","lastModifiedDate":"2021-10-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"public class JsonAdaptedPersonTest {","lastModifiedDate":"2021-09-22"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static final String INVALID_PHONE \u003d \"+651234\";","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String INVALID_ADDRESS \u003d \" \";","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private static final String INVALID_EMAIL \u003d \"example.com\";","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"fullfatwasabi"},"content":"    private static final String INVALID_ROLE \u003d \"customer\";","lastModifiedDate":"2021-10-09"},{"lineNumber":29,"author":{"gitId":"fullfatwasabi"},"content":"    private static final String INVALID_SALARY \u003d \"free\";","lastModifiedDate":"2021-10-09"},{"lineNumber":30,"author":{"gitId":"fullfatwasabi"},"content":"    private static final String INVALID_STATUS \u003d \"single\";","lastModifiedDate":"2021-10-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final String INVALID_TAG \u003d \"#friend\";","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private static final String VALID_NAME \u003d BENSON.getName().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private static final String VALID_PHONE \u003d BENSON.getPhone().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private static final String VALID_EMAIL \u003d BENSON.getEmail().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private static final String VALID_ADDRESS \u003d BENSON.getAddress().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"fullfatwasabi"},"content":"    private static final List\u003cJsonAdaptedRole\u003e VALID_ROLES \u003d BENSON.getRoles().stream()","lastModifiedDate":"2021-10-12"},{"lineNumber":38,"author":{"gitId":"fullfatwasabi"},"content":"            .map(JsonAdaptedRole::new)","lastModifiedDate":"2021-10-12"},{"lineNumber":39,"author":{"gitId":"fullfatwasabi"},"content":"            .collect(Collectors.toList());","lastModifiedDate":"2021-10-12"},{"lineNumber":40,"author":{"gitId":"fullfatwasabi"},"content":"    private static final String VALID_SALARY \u003d BENSON.getSalary().toString();","lastModifiedDate":"2021-10-09"},{"lineNumber":41,"author":{"gitId":"fullfatwasabi"},"content":"    private static final String VALID_STATUS \u003d BENSON.getStatus().getValue();","lastModifiedDate":"2021-10-12"},{"lineNumber":42,"author":{"gitId":"fullfatwasabi"},"content":"    private static final String VALID_SCHEDULE \u003d BENSON.getSchedule().toString();","lastModifiedDate":"2021-10-09"},{"lineNumber":43,"author":{"gitId":"Gabau"},"content":"    private static final List\u003cJsonAdaptedPeriod\u003e VALID_PERIODS \u003d BENSON.getAbsentDates().stream()","lastModifiedDate":"2021-10-12"},{"lineNumber":44,"author":{"gitId":"Gabau"},"content":"            .map(JsonAdaptedPeriod::new)","lastModifiedDate":"2021-10-12"},{"lineNumber":45,"author":{"gitId":"Gabau"},"content":"            .collect(Collectors.toList());","lastModifiedDate":"2021-10-12"},{"lineNumber":46,"author":{"gitId":"fullfatwasabi"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    private static final List\u003cJsonAdaptedTag\u003e VALID_TAGS \u003d BENSON.getTags().stream()","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            .map(JsonAdaptedTag::new)","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            .collect(Collectors.toList());","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public void toModelType_validPersonDetails_returnsPerson() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(BENSON);","lastModifiedDate":"2021-09-22"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertEquals(BENSON, person.toModelType());","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void toModelType_invalidName_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2021-09-22"},{"lineNumber":60,"author":{"gitId":"fullfatwasabi"},"content":"                new JsonAdaptedPerson(INVALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS, VALID_ROLES, VALID_SALARY,","lastModifiedDate":"2021-10-12"},{"lineNumber":61,"author":{"gitId":"Gabau"},"content":"                        VALID_STATUS, VALID_TAGS, VALID_SCHEDULE, VALID_PERIODS);","lastModifiedDate":"2021-10-12"},{"lineNumber":62,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Name.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public void toModelType_nullName_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":69,"author":{"gitId":"fullfatwasabi"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(null, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS,","lastModifiedDate":"2021-10-09"},{"lineNumber":70,"author":{"gitId":"Gabau"},"content":"                VALID_ROLES, VALID_SALARY, VALID_STATUS, VALID_TAGS, VALID_SCHEDULE, VALID_PERIODS);","lastModifiedDate":"2021-10-15"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public void toModelType_invalidPhone_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2021-09-22"},{"lineNumber":78,"author":{"gitId":"fullfatwasabi"},"content":"                new JsonAdaptedPerson(VALID_NAME, INVALID_PHONE, VALID_EMAIL, VALID_ADDRESS, VALID_ROLES,","lastModifiedDate":"2021-10-12"},{"lineNumber":79,"author":{"gitId":"Gabau"},"content":"                        VALID_SALARY, VALID_STATUS, VALID_TAGS, VALID_SCHEDULE, VALID_PERIODS);","lastModifiedDate":"2021-10-12"},{"lineNumber":80,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":81,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Phone.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public void toModelType_nullPhone_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":88,"author":{"gitId":"fullfatwasabi"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, null, VALID_EMAIL, VALID_ADDRESS,","lastModifiedDate":"2021-10-09"},{"lineNumber":89,"author":{"gitId":"Gabau"},"content":"                VALID_ROLES, VALID_SALARY, VALID_STATUS, VALID_TAGS, VALID_SCHEDULE, VALID_PERIODS);","lastModifiedDate":"2021-10-15"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    public void toModelType_invalidEmail_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2021-09-22"},{"lineNumber":97,"author":{"gitId":"fullfatwasabi"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, INVALID_EMAIL, VALID_ADDRESS, VALID_ROLES,","lastModifiedDate":"2021-10-12"},{"lineNumber":98,"author":{"gitId":"Gabau"},"content":"                        VALID_SALARY, VALID_STATUS, VALID_TAGS, VALID_SCHEDULE, VALID_PERIODS);","lastModifiedDate":"2021-10-12"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Email.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    public void toModelType_nullEmail_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":105,"author":{"gitId":"fullfatwasabi"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, null, VALID_ADDRESS,","lastModifiedDate":"2021-10-09"},{"lineNumber":106,"author":{"gitId":"Gabau"},"content":"                VALID_ROLES, VALID_SALARY, VALID_STATUS, VALID_TAGS, VALID_SCHEDULE, VALID_PERIODS);","lastModifiedDate":"2021-10-15"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    public void toModelType_invalidAddress_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2021-09-22"},{"lineNumber":114,"author":{"gitId":"fullfatwasabi"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, INVALID_ADDRESS, VALID_ROLES,","lastModifiedDate":"2021-10-12"},{"lineNumber":115,"author":{"gitId":"Gabau"},"content":"                        VALID_SALARY, VALID_STATUS, VALID_TAGS, VALID_SCHEDULE, VALID_PERIODS);","lastModifiedDate":"2021-10-12"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Address.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    public void toModelType_nullAddress_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":122,"author":{"gitId":"fullfatwasabi"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, null,","lastModifiedDate":"2021-10-09"},{"lineNumber":123,"author":{"gitId":"Gabau"},"content":"                VALID_ROLES, VALID_SALARY, VALID_STATUS, VALID_TAGS, VALID_SCHEDULE, VALID_PERIODS);","lastModifiedDate":"2021-10-15"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Address.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":128,"author":{"gitId":"fullfatwasabi"},"content":"    @Test","lastModifiedDate":"2021-10-09"},{"lineNumber":129,"author":{"gitId":"fullfatwasabi"},"content":"    public void toModelType_invalidRole_throwsIllegalValueException() {","lastModifiedDate":"2021-10-09"},{"lineNumber":130,"author":{"gitId":"fullfatwasabi"},"content":"        List\u003cJsonAdaptedRole\u003e invalidRoles \u003d new ArrayList\u003c\u003e(VALID_ROLES);","lastModifiedDate":"2021-10-13"},{"lineNumber":131,"author":{"gitId":"fullfatwasabi"},"content":"        invalidRoles.add(new JsonAdaptedRole(INVALID_ROLE));","lastModifiedDate":"2021-10-13"},{"lineNumber":132,"author":{"gitId":"fullfatwasabi"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2021-10-09"},{"lineNumber":133,"author":{"gitId":"fullfatwasabi"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS, invalidRoles,","lastModifiedDate":"2021-10-13"},{"lineNumber":134,"author":{"gitId":"Gabau"},"content":"                        VALID_SALARY, VALID_STATUS, VALID_TAGS, VALID_SCHEDULE, VALID_PERIODS);","lastModifiedDate":"2021-10-12"},{"lineNumber":135,"author":{"gitId":"fullfatwasabi"},"content":"        String expectedMessage \u003d Role.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2021-10-09"},{"lineNumber":136,"author":{"gitId":"fullfatwasabi"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2021-10-09"},{"lineNumber":137,"author":{"gitId":"fullfatwasabi"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":138,"author":{"gitId":"fullfatwasabi"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":139,"author":{"gitId":"fullfatwasabi"},"content":"    @Test","lastModifiedDate":"2021-10-09"},{"lineNumber":140,"author":{"gitId":"fullfatwasabi"},"content":"    public void toModelType_invalidSalary_throwsIllegalValueException() {","lastModifiedDate":"2021-10-09"},{"lineNumber":141,"author":{"gitId":"fullfatwasabi"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2021-10-09"},{"lineNumber":142,"author":{"gitId":"fullfatwasabi"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS, VALID_ROLES,","lastModifiedDate":"2021-10-12"},{"lineNumber":143,"author":{"gitId":"Gabau"},"content":"                        INVALID_SALARY, VALID_STATUS, VALID_TAGS, VALID_SCHEDULE, VALID_PERIODS);","lastModifiedDate":"2021-10-12"},{"lineNumber":144,"author":{"gitId":"fullfatwasabi"},"content":"        String expectedMessage \u003d Salary.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2021-10-09"},{"lineNumber":145,"author":{"gitId":"fullfatwasabi"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2021-10-09"},{"lineNumber":146,"author":{"gitId":"fullfatwasabi"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":147,"author":{"gitId":"fullfatwasabi"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":148,"author":{"gitId":"fullfatwasabi"},"content":"    @Test","lastModifiedDate":"2021-10-09"},{"lineNumber":149,"author":{"gitId":"fullfatwasabi"},"content":"    public void toModelType_nullSalary_throwsIllegalValueException() {","lastModifiedDate":"2021-10-09"},{"lineNumber":150,"author":{"gitId":"fullfatwasabi"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS,","lastModifiedDate":"2021-10-09"},{"lineNumber":151,"author":{"gitId":"Gabau"},"content":"                VALID_ROLES, null, VALID_STATUS, VALID_TAGS, VALID_SCHEDULE, VALID_PERIODS);","lastModifiedDate":"2021-10-15"},{"lineNumber":152,"author":{"gitId":"fullfatwasabi"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Salary.class.getSimpleName());","lastModifiedDate":"2021-10-09"},{"lineNumber":153,"author":{"gitId":"fullfatwasabi"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2021-10-09"},{"lineNumber":154,"author":{"gitId":"fullfatwasabi"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":155,"author":{"gitId":"fullfatwasabi"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":156,"author":{"gitId":"fullfatwasabi"},"content":"    @Test","lastModifiedDate":"2021-10-09"},{"lineNumber":157,"author":{"gitId":"fullfatwasabi"},"content":"    public void toModelType_invalidStatus_throwsIllegalValueException() {","lastModifiedDate":"2021-10-09"},{"lineNumber":158,"author":{"gitId":"fullfatwasabi"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2021-10-09"},{"lineNumber":159,"author":{"gitId":"fullfatwasabi"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS, VALID_ROLES, VALID_SALARY,","lastModifiedDate":"2021-10-12"},{"lineNumber":160,"author":{"gitId":"Gabau"},"content":"                        INVALID_STATUS, VALID_TAGS, VALID_SCHEDULE, VALID_PERIODS);","lastModifiedDate":"2021-10-12"},{"lineNumber":161,"author":{"gitId":"fullfatwasabi"},"content":"        String expectedMessage \u003d Status.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2021-10-09"},{"lineNumber":162,"author":{"gitId":"fullfatwasabi"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2021-10-09"},{"lineNumber":163,"author":{"gitId":"fullfatwasabi"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":164,"author":{"gitId":"fullfatwasabi"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":165,"author":{"gitId":"fullfatwasabi"},"content":"    @Test","lastModifiedDate":"2021-10-09"},{"lineNumber":166,"author":{"gitId":"fullfatwasabi"},"content":"    public void toModelType_nullStatus_throwsIllegalValueException() {","lastModifiedDate":"2021-10-09"},{"lineNumber":167,"author":{"gitId":"fullfatwasabi"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS,","lastModifiedDate":"2021-10-09"},{"lineNumber":168,"author":{"gitId":"Gabau"},"content":"                VALID_ROLES, VALID_SALARY, null, VALID_TAGS, VALID_SCHEDULE, VALID_PERIODS);","lastModifiedDate":"2021-10-15"},{"lineNumber":169,"author":{"gitId":"fullfatwasabi"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Status.class.getSimpleName());","lastModifiedDate":"2021-10-09"},{"lineNumber":170,"author":{"gitId":"fullfatwasabi"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2021-10-09"},{"lineNumber":171,"author":{"gitId":"fullfatwasabi"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":172,"author":{"gitId":"fullfatwasabi"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    public void toModelType_invalidTags_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        List\u003cJsonAdaptedTag\u003e invalidTags \u003d new ArrayList\u003c\u003e(VALID_TAGS);","lastModifiedDate":"2018-08-13"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        invalidTags.add(new JsonAdaptedTag(INVALID_TAG));","lastModifiedDate":"2018-08-13"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2021-09-22"},{"lineNumber":178,"author":{"gitId":"fullfatwasabi"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS, VALID_ROLES, VALID_SALARY,","lastModifiedDate":"2021-10-12"},{"lineNumber":179,"author":{"gitId":"Gabau"},"content":"                        VALID_STATUS, invalidTags, VALID_SCHEDULE, VALID_PERIODS);","lastModifiedDate":"2021-10-12"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":182,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"Gabau":20,"fullfatwasabi":62,"-":100}},{"path":"src/test/java/seedu/address/stubs/model/ModelStub.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Gabau"},"content":"package seedu.address.stubs.model;","lastModifiedDate":"2021-10-08"},{"lineNumber":2,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":3,"author":{"gitId":"Gabau"},"content":"import java.nio.file.Path;","lastModifiedDate":"2021-10-08"},{"lineNumber":4,"author":{"gitId":"IrvingHe000"},"content":"import java.time.DayOfWeek;","lastModifiedDate":"2021-10-10"},{"lineNumber":5,"author":{"gitId":"Gabau"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2021-10-08"},{"lineNumber":6,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":7,"author":{"gitId":"Gabau"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-10-07"},{"lineNumber":8,"author":{"gitId":"Gabau"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2021-10-07"},{"lineNumber":9,"author":{"gitId":"Gabau"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-10-07"},{"lineNumber":10,"author":{"gitId":"Gabau"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2021-10-07"},{"lineNumber":11,"author":{"gitId":"Gabau"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2021-10-07"},{"lineNumber":12,"author":{"gitId":"IrvingHe000"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2021-10-10"},{"lineNumber":13,"author":{"gitId":"Gabau"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2021-10-07"},{"lineNumber":14,"author":{"gitId":"IrvingHe000"},"content":"import seedu.address.model.person.Slot;","lastModifiedDate":"2021-10-10"},{"lineNumber":15,"author":{"gitId":"IrvingHe000"},"content":"import seedu.address.model.person.exceptions.DuplicateShiftException;","lastModifiedDate":"2021-10-10"},{"lineNumber":16,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":17,"author":{"gitId":"Gabau"},"content":"/**","lastModifiedDate":"2021-10-07"},{"lineNumber":18,"author":{"gitId":"Gabau"},"content":" * A default model stub that have all of the methods failing.","lastModifiedDate":"2021-10-07"},{"lineNumber":19,"author":{"gitId":"Gabau"},"content":" */","lastModifiedDate":"2021-10-07"},{"lineNumber":20,"author":{"gitId":"Gabau"},"content":"public class ModelStub implements Model {","lastModifiedDate":"2021-10-07"},{"lineNumber":21,"author":{"gitId":"Gabau"},"content":"    @Override","lastModifiedDate":"2021-10-07"},{"lineNumber":22,"author":{"gitId":"Gabau"},"content":"    public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2021-10-07"},{"lineNumber":23,"author":{"gitId":"Gabau"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-07"},{"lineNumber":24,"author":{"gitId":"Gabau"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":25,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":26,"author":{"gitId":"Gabau"},"content":"    @Override","lastModifiedDate":"2021-10-07"},{"lineNumber":27,"author":{"gitId":"Gabau"},"content":"    public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2021-10-07"},{"lineNumber":28,"author":{"gitId":"Gabau"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-07"},{"lineNumber":29,"author":{"gitId":"Gabau"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":30,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":31,"author":{"gitId":"Gabau"},"content":"    @Override","lastModifiedDate":"2021-10-07"},{"lineNumber":32,"author":{"gitId":"Gabau"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2021-10-07"},{"lineNumber":33,"author":{"gitId":"Gabau"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-07"},{"lineNumber":34,"author":{"gitId":"Gabau"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":35,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":36,"author":{"gitId":"Gabau"},"content":"    @Override","lastModifiedDate":"2021-10-07"},{"lineNumber":37,"author":{"gitId":"Gabau"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2021-10-07"},{"lineNumber":38,"author":{"gitId":"Gabau"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-07"},{"lineNumber":39,"author":{"gitId":"Gabau"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":40,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":41,"author":{"gitId":"Gabau"},"content":"    @Override","lastModifiedDate":"2021-10-07"},{"lineNumber":42,"author":{"gitId":"Gabau"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2021-10-07"},{"lineNumber":43,"author":{"gitId":"Gabau"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-07"},{"lineNumber":44,"author":{"gitId":"Gabau"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":45,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":46,"author":{"gitId":"Gabau"},"content":"    @Override","lastModifiedDate":"2021-10-07"},{"lineNumber":47,"author":{"gitId":"Gabau"},"content":"    public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2021-10-07"},{"lineNumber":48,"author":{"gitId":"Gabau"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-07"},{"lineNumber":49,"author":{"gitId":"Gabau"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":50,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":51,"author":{"gitId":"Gabau"},"content":"    @Override","lastModifiedDate":"2021-10-07"},{"lineNumber":52,"author":{"gitId":"Gabau"},"content":"    public void addPerson(Person person) {","lastModifiedDate":"2021-10-07"},{"lineNumber":53,"author":{"gitId":"Gabau"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-07"},{"lineNumber":54,"author":{"gitId":"Gabau"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":55,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":56,"author":{"gitId":"Gabau"},"content":"    @Override","lastModifiedDate":"2021-10-07"},{"lineNumber":57,"author":{"gitId":"Gabau"},"content":"    public void setAddressBook(ReadOnlyAddressBook newData) {","lastModifiedDate":"2021-10-07"},{"lineNumber":58,"author":{"gitId":"Gabau"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-07"},{"lineNumber":59,"author":{"gitId":"Gabau"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":60,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":61,"author":{"gitId":"Gabau"},"content":"    @Override","lastModifiedDate":"2021-10-07"},{"lineNumber":62,"author":{"gitId":"Gabau"},"content":"    public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2021-10-07"},{"lineNumber":63,"author":{"gitId":"Gabau"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-07"},{"lineNumber":64,"author":{"gitId":"Gabau"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":65,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":66,"author":{"gitId":"Gabau"},"content":"    @Override","lastModifiedDate":"2021-10-07"},{"lineNumber":67,"author":{"gitId":"Gabau"},"content":"    public boolean hasPerson(Person person) {","lastModifiedDate":"2021-10-07"},{"lineNumber":68,"author":{"gitId":"Gabau"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-07"},{"lineNumber":69,"author":{"gitId":"Gabau"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":70,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":71,"author":{"gitId":"Gabau"},"content":"    @Override","lastModifiedDate":"2021-10-07"},{"lineNumber":72,"author":{"gitId":"Gabau"},"content":"    public void deletePerson(Person target) {","lastModifiedDate":"2021-10-07"},{"lineNumber":73,"author":{"gitId":"Gabau"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-07"},{"lineNumber":74,"author":{"gitId":"Gabau"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":75,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":76,"author":{"gitId":"IrvingHe000"},"content":"    @Override","lastModifiedDate":"2021-10-10"},{"lineNumber":77,"author":{"gitId":"IrvingHe000"},"content":"    public void addShift(Person target, DayOfWeek dayOfWeek, Slot slot) throws DuplicateShiftException {","lastModifiedDate":"2021-10-10"},{"lineNumber":78,"author":{"gitId":"IrvingHe000"},"content":"        throw new AssertionError(\"This method should not be called\");","lastModifiedDate":"2021-10-10"},{"lineNumber":79,"author":{"gitId":"IrvingHe000"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":80,"author":{"gitId":"IrvingHe000"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":81,"author":{"gitId":"Tetrerox"},"content":"    @Override","lastModifiedDate":"2021-10-13"},{"lineNumber":82,"author":{"gitId":"Tetrerox"},"content":"    public void deleteShift(Person target, DayOfWeek dayOfWeek, Slot slot) {","lastModifiedDate":"2021-10-13"},{"lineNumber":83,"author":{"gitId":"Tetrerox"},"content":"        throw new AssertionError(\"This method should not be called\");","lastModifiedDate":"2021-10-13"},{"lineNumber":84,"author":{"gitId":"Tetrerox"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":85,"author":{"gitId":"Tetrerox"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":86,"author":{"gitId":"Gabau"},"content":"    @Override","lastModifiedDate":"2021-10-07"},{"lineNumber":87,"author":{"gitId":"Gabau"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2021-10-07"},{"lineNumber":88,"author":{"gitId":"Gabau"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-07"},{"lineNumber":89,"author":{"gitId":"Gabau"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":90,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":91,"author":{"gitId":"mweeruien"},"content":"    /**","lastModifiedDate":"2021-10-10"},{"lineNumber":92,"author":{"gitId":"mweeruien"},"content":"     * Retrieves the Person at the index specified of the observed filtered list.","lastModifiedDate":"2021-10-10"},{"lineNumber":93,"author":{"gitId":"mweeruien"},"content":"     *","lastModifiedDate":"2021-10-10"},{"lineNumber":94,"author":{"gitId":"mweeruien"},"content":"     * @param index The index of the Person desired","lastModifiedDate":"2021-10-10"},{"lineNumber":95,"author":{"gitId":"mweeruien"},"content":"     * @return the Person at the index of the filtered list specified.","lastModifiedDate":"2021-10-10"},{"lineNumber":96,"author":{"gitId":"mweeruien"},"content":"     */","lastModifiedDate":"2021-10-10"},{"lineNumber":97,"author":{"gitId":"mweeruien"},"content":"    @Override","lastModifiedDate":"2021-10-10"},{"lineNumber":98,"author":{"gitId":"mweeruien"},"content":"    public Person getFilteredPersonListByIndex(int index) {","lastModifiedDate":"2021-10-10"},{"lineNumber":99,"author":{"gitId":"mweeruien"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-10"},{"lineNumber":100,"author":{"gitId":"mweeruien"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":101,"author":{"gitId":"mweeruien"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":102,"author":{"gitId":"IrvingHe000"},"content":"    @Override","lastModifiedDate":"2021-10-10"},{"lineNumber":103,"author":{"gitId":"IrvingHe000"},"content":"    public Person findPersonByName(Name name) {","lastModifiedDate":"2021-10-10"},{"lineNumber":104,"author":{"gitId":"IrvingHe000"},"content":"        throw new AssertionError(\"This method should not be called\");","lastModifiedDate":"2021-10-10"},{"lineNumber":105,"author":{"gitId":"IrvingHe000"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":106,"author":{"gitId":"IrvingHe000"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":107,"author":{"gitId":"Gabau"},"content":"    @Override","lastModifiedDate":"2021-10-07"},{"lineNumber":108,"author":{"gitId":"Gabau"},"content":"    public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2021-10-07"},{"lineNumber":109,"author":{"gitId":"Gabau"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-07"},{"lineNumber":110,"author":{"gitId":"Gabau"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":111,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":112,"author":{"gitId":"Gabau"},"content":"    @Override","lastModifiedDate":"2021-10-09"},{"lineNumber":113,"author":{"gitId":"Gabau"},"content":"    public ObservableList\u003cPerson\u003e getUnFilteredPersonList() {","lastModifiedDate":"2021-10-09"},{"lineNumber":114,"author":{"gitId":"Gabau"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-09"},{"lineNumber":115,"author":{"gitId":"Gabau"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":116,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":117,"author":{"gitId":"Gabau"},"content":"    @Override","lastModifiedDate":"2021-10-07"},{"lineNumber":118,"author":{"gitId":"Gabau"},"content":"    public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2021-10-07"},{"lineNumber":119,"author":{"gitId":"Gabau"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-07"},{"lineNumber":120,"author":{"gitId":"Gabau"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":121,"author":{"gitId":"Gabau"},"content":"}","lastModifiedDate":"2021-10-07"}],"authorContributionMap":{"Tetrerox":5,"Gabau":91,"mweeruien":11,"IrvingHe000":14}},{"path":"src/test/java/seedu/address/testutil/EditPersonDescriptorBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2017-05-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-12-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2017-12-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2017-12-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2021-09-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2021-10-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2021-10-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2021-10-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2021-10-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2021-10-09"},{"lineNumber":13,"author":{"gitId":"fullfatwasabi"},"content":"import seedu.address.model.person.Role;","lastModifiedDate":"2021-10-09"},{"lineNumber":14,"author":{"gitId":"fullfatwasabi"},"content":"import seedu.address.model.person.Salary;","lastModifiedDate":"2021-10-09"},{"lineNumber":15,"author":{"gitId":"fullfatwasabi"},"content":"import seedu.address.model.person.Status;","lastModifiedDate":"2021-10-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-12-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * A utility class to help with building EditPersonDescriptor objects.","lastModifiedDate":"2017-05-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class EditPersonDescriptorBuilder {","lastModifiedDate":"2021-09-22"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private EditPersonDescriptor descriptor;","lastModifiedDate":"2021-09-22"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder() {","lastModifiedDate":"2021-09-22"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2021-09-22"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder(EditPersonDescriptor descriptor) {","lastModifiedDate":"2021-09-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        this.descriptor \u003d new EditPersonDescriptor(descriptor);","lastModifiedDate":"2021-09-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Returns an {@code EditPersonDescriptor} with fields containing {@code person}\u0027s details","lastModifiedDate":"2017-06-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder(Person person) {","lastModifiedDate":"2021-09-22"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2021-09-22"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        descriptor.setName(person.getName());","lastModifiedDate":"2021-09-22"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        descriptor.setPhone(person.getPhone());","lastModifiedDate":"2021-09-22"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        descriptor.setEmail(person.getEmail());","lastModifiedDate":"2021-09-22"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        descriptor.setAddress(person.getAddress());","lastModifiedDate":"2021-09-22"},{"lineNumber":42,"author":{"gitId":"fullfatwasabi"},"content":"        descriptor.setRoles(person.getRoles());","lastModifiedDate":"2021-10-13"},{"lineNumber":43,"author":{"gitId":"fullfatwasabi"},"content":"        descriptor.setSalary(person.getSalary());","lastModifiedDate":"2021-10-09"},{"lineNumber":44,"author":{"gitId":"fullfatwasabi"},"content":"        descriptor.setStatus(person.getStatus());","lastModifiedDate":"2021-10-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        descriptor.setTags(person.getTags());","lastModifiedDate":"2021-09-22"},{"lineNumber":46,"author":{"gitId":"Gabau"},"content":"        descriptor.setPeriod(person.getAbsentDates());","lastModifiedDate":"2021-10-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * Sets the {@code Name} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withName(String name) {","lastModifiedDate":"2021-09-22"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        descriptor.setName(new Name(name));","lastModifiedDate":"2017-12-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * Sets the {@code Phone} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withPhone(String phone) {","lastModifiedDate":"2021-09-22"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        descriptor.setPhone(new Phone(phone));","lastModifiedDate":"2017-12-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     * Sets the {@code Email} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withEmail(String email) {","lastModifiedDate":"2021-09-22"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        descriptor.setEmail(new Email(email));","lastModifiedDate":"2017-12-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * Sets the {@code Address} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withAddress(String address) {","lastModifiedDate":"2021-09-22"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        descriptor.setAddress(new Address(address));","lastModifiedDate":"2017-12-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":81,"author":{"gitId":"fullfatwasabi"},"content":"    /**","lastModifiedDate":"2021-10-09"},{"lineNumber":82,"author":{"gitId":"fullfatwasabi"},"content":"     * Parses the {@code roles} into a {@code Set\u003cRole\u003e} and set it to the {@code EditPersonDescriptor}","lastModifiedDate":"2021-10-13"},{"lineNumber":83,"author":{"gitId":"fullfatwasabi"},"content":"     * that we are building.","lastModifiedDate":"2021-10-13"},{"lineNumber":84,"author":{"gitId":"fullfatwasabi"},"content":"     */","lastModifiedDate":"2021-10-09"},{"lineNumber":85,"author":{"gitId":"fullfatwasabi"},"content":"    public EditPersonDescriptorBuilder withRoles(String... roles) {","lastModifiedDate":"2021-10-13"},{"lineNumber":86,"author":{"gitId":"fullfatwasabi"},"content":"        Set\u003cRole\u003e roleSet \u003d Stream.of(roles).map(Role::translateStringToRole).collect(Collectors.toSet());","lastModifiedDate":"2021-10-13"},{"lineNumber":87,"author":{"gitId":"fullfatwasabi"},"content":"        descriptor.setRoles(roleSet);","lastModifiedDate":"2021-10-13"},{"lineNumber":88,"author":{"gitId":"fullfatwasabi"},"content":"        return this;","lastModifiedDate":"2021-10-09"},{"lineNumber":89,"author":{"gitId":"fullfatwasabi"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":90,"author":{"gitId":"fullfatwasabi"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":91,"author":{"gitId":"fullfatwasabi"},"content":"    /**","lastModifiedDate":"2021-10-09"},{"lineNumber":92,"author":{"gitId":"fullfatwasabi"},"content":"     * Sets the {@code Salary} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2021-10-09"},{"lineNumber":93,"author":{"gitId":"fullfatwasabi"},"content":"     */","lastModifiedDate":"2021-10-09"},{"lineNumber":94,"author":{"gitId":"fullfatwasabi"},"content":"    public EditPersonDescriptorBuilder withSalary(String salary) {","lastModifiedDate":"2021-10-09"},{"lineNumber":95,"author":{"gitId":"fullfatwasabi"},"content":"        descriptor.setSalary(new Salary(salary));","lastModifiedDate":"2021-10-09"},{"lineNumber":96,"author":{"gitId":"fullfatwasabi"},"content":"        return this;","lastModifiedDate":"2021-10-09"},{"lineNumber":97,"author":{"gitId":"fullfatwasabi"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":98,"author":{"gitId":"fullfatwasabi"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":99,"author":{"gitId":"fullfatwasabi"},"content":"    /**","lastModifiedDate":"2021-10-09"},{"lineNumber":100,"author":{"gitId":"fullfatwasabi"},"content":"     * Sets the {@code Status} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2021-10-09"},{"lineNumber":101,"author":{"gitId":"fullfatwasabi"},"content":"     */","lastModifiedDate":"2021-10-09"},{"lineNumber":102,"author":{"gitId":"fullfatwasabi"},"content":"    public EditPersonDescriptorBuilder withStatus(String status) {","lastModifiedDate":"2021-10-09"},{"lineNumber":103,"author":{"gitId":"fullfatwasabi"},"content":"        descriptor.setStatus(Status.translateStringToStatus(status));","lastModifiedDate":"2021-10-09"},{"lineNumber":104,"author":{"gitId":"fullfatwasabi"},"content":"        return this;","lastModifiedDate":"2021-10-09"},{"lineNumber":105,"author":{"gitId":"fullfatwasabi"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":106,"author":{"gitId":"fullfatwasabi"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":108,"author":{"gitId":"-"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code EditPersonDescriptor}","lastModifiedDate":"2017-07-26"},{"lineNumber":109,"author":{"gitId":"-"},"content":"     * that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":110,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withTags(String... tags) {","lastModifiedDate":"2021-09-22"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e tagSet \u003d Stream.of(tags).map(Tag::new).collect(Collectors.toSet());","lastModifiedDate":"2017-12-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        descriptor.setTags(tagSet);","lastModifiedDate":"2017-12-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    public EditPersonDescriptor build() {","lastModifiedDate":"2021-09-22"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        return descriptor;","lastModifiedDate":"2017-05-05"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":120,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-05"}],"authorContributionMap":{"Gabau":1,"fullfatwasabi":32,"-":87}},{"path":"src/test/java/seedu/address/testutil/PersonBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2016-09-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-12-20"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-04-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2021-10-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2021-10-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2021-10-09"},{"lineNumber":9,"author":{"gitId":"Gabau"},"content":"import seedu.address.model.person.Period;","lastModifiedDate":"2021-10-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2021-10-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2021-10-09"},{"lineNumber":12,"author":{"gitId":"fullfatwasabi"},"content":"import seedu.address.model.person.Role;","lastModifiedDate":"2021-10-09"},{"lineNumber":13,"author":{"gitId":"fullfatwasabi"},"content":"import seedu.address.model.person.Salary;","lastModifiedDate":"2021-10-09"},{"lineNumber":14,"author":{"gitId":"fullfatwasabi"},"content":"import seedu.address.model.person.Status;","lastModifiedDate":"2021-10-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-04-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.util.SampleDataUtil;","lastModifiedDate":"2017-04-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * A utility class to help with building Person objects.","lastModifiedDate":"2017-04-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class PersonBuilder {","lastModifiedDate":"2016-09-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_NAME \u003d \"Amy Bee\";","lastModifiedDate":"2020-12-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_PHONE \u003d \"85355255\";","lastModifiedDate":"2017-04-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_EMAIL \u003d \"amy@gmail.com\";","lastModifiedDate":"2020-12-18"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_ADDRESS \u003d \"123, Jurong West Ave 6, #08-111\";","lastModifiedDate":"2017-04-05"},{"lineNumber":27,"author":{"gitId":"fullfatwasabi"},"content":"    public static final String DEFAULT_SALARY \u003d \"900000\";","lastModifiedDate":"2021-10-09"},{"lineNumber":28,"author":{"gitId":"fullfatwasabi"},"content":"    public static final String DEFAULT_ROLE \u003d \"floor\";","lastModifiedDate":"2021-10-13"},{"lineNumber":29,"author":{"gitId":"fullfatwasabi"},"content":"    public static final String DEFAULT_STATUS \u003d \"parttime\";","lastModifiedDate":"2021-10-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private Name name;","lastModifiedDate":"2017-12-20"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private Phone phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private Email email;","lastModifiedDate":"2017-12-20"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private Address address;","lastModifiedDate":"2017-12-20"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private Set\u003cTag\u003e tags;","lastModifiedDate":"2017-12-20"},{"lineNumber":36,"author":{"gitId":"fullfatwasabi"},"content":"    private Set\u003cRole\u003e roles;","lastModifiedDate":"2021-10-13"},{"lineNumber":37,"author":{"gitId":"fullfatwasabi"},"content":"    private Salary salary;","lastModifiedDate":"2021-10-09"},{"lineNumber":38,"author":{"gitId":"fullfatwasabi"},"content":"    private Status status;","lastModifiedDate":"2021-10-09"},{"lineNumber":39,"author":{"gitId":"Gabau"},"content":"    private Set\u003cPeriod\u003e absentDates;","lastModifiedDate":"2021-10-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Creates a {@code PersonBuilder} with the default details.","lastModifiedDate":"2020-05-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public PersonBuilder() {","lastModifiedDate":"2017-08-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        name \u003d new Name(DEFAULT_NAME);","lastModifiedDate":"2017-12-20"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        phone \u003d new Phone(DEFAULT_PHONE);","lastModifiedDate":"2017-12-20"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        email \u003d new Email(DEFAULT_EMAIL);","lastModifiedDate":"2017-12-20"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        address \u003d new Address(DEFAULT_ADDRESS);","lastModifiedDate":"2017-12-20"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2018-03-26"},{"lineNumber":50,"author":{"gitId":"Gabau"},"content":"        absentDates \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2021-10-12"},{"lineNumber":51,"author":{"gitId":"fullfatwasabi"},"content":"        roles \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2021-10-13"},{"lineNumber":52,"author":{"gitId":"fullfatwasabi"},"content":"        roles.add(Role.NO_ROLE);","lastModifiedDate":"2021-10-13"},{"lineNumber":53,"author":{"gitId":"fullfatwasabi"},"content":"        salary \u003d new Salary(DEFAULT_SALARY);","lastModifiedDate":"2021-10-09"},{"lineNumber":54,"author":{"gitId":"fullfatwasabi"},"content":"        status \u003d Status.translateStringToStatus(DEFAULT_STATUS);","lastModifiedDate":"2021-10-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-11"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * Initializes the PersonBuilder with the data of {@code personToCopy}.","lastModifiedDate":"2016-12-11"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-11"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public PersonBuilder(Person personToCopy) {","lastModifiedDate":"2021-09-22"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        name \u003d personToCopy.getName();","lastModifiedDate":"2021-09-22"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        phone \u003d personToCopy.getPhone();","lastModifiedDate":"2021-09-22"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        email \u003d personToCopy.getEmail();","lastModifiedDate":"2021-09-22"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        address \u003d personToCopy.getAddress();","lastModifiedDate":"2021-09-22"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        tags \u003d new HashSet\u003c\u003e(personToCopy.getTags());","lastModifiedDate":"2021-09-22"},{"lineNumber":66,"author":{"gitId":"fullfatwasabi"},"content":"        roles \u003d new HashSet\u003c\u003e(personToCopy.getRoles());","lastModifiedDate":"2021-10-13"},{"lineNumber":67,"author":{"gitId":"fullfatwasabi"},"content":"        salary \u003d personToCopy.getSalary();","lastModifiedDate":"2021-10-09"},{"lineNumber":68,"author":{"gitId":"fullfatwasabi"},"content":"        status \u003d personToCopy.getStatus();","lastModifiedDate":"2021-10-09"},{"lineNumber":69,"author":{"gitId":"Gabau"},"content":"        absentDates \u003d personToCopy.getAbsentDates();","lastModifiedDate":"2021-10-12"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-11"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-11"},{"lineNumber":72,"author":{"gitId":"Gabau"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":73,"author":{"gitId":"Gabau"},"content":"     * Parses the {@code periods} into a {@code Set\u003cPeriod\u003e} and set it to the {@code Person}","lastModifiedDate":"2021-10-12"},{"lineNumber":74,"author":{"gitId":"Gabau"},"content":"     * that we are building.","lastModifiedDate":"2021-10-12"},{"lineNumber":75,"author":{"gitId":"Gabau"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":76,"author":{"gitId":"Gabau"},"content":"    public PersonBuilder withAbsentDates(String ... periods) {","lastModifiedDate":"2021-10-12"},{"lineNumber":77,"author":{"gitId":"Gabau"},"content":"        this.absentDates \u003d SampleDataUtil.getPeriodSet(periods);","lastModifiedDate":"2021-10-12"},{"lineNumber":78,"author":{"gitId":"Gabau"},"content":"        return this;","lastModifiedDate":"2021-10-12"},{"lineNumber":79,"author":{"gitId":"Gabau"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":80,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":81,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * Sets the {@code Name} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public PersonBuilder withName(String name) {","lastModifiedDate":"2017-08-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        this.name \u003d new Name(name);","lastModifiedDate":"2017-12-20"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    public PersonBuilder withTags(String ... tags) {","lastModifiedDate":"2017-08-15"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        this.tags \u003d SampleDataUtil.getTagSet(tags);","lastModifiedDate":"2017-12-20"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     * Sets the {@code Address} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    public PersonBuilder withAddress(String address) {","lastModifiedDate":"2017-08-15"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        this.address \u003d new Address(address);","lastModifiedDate":"2017-12-20"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     * Sets the {@code Phone} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":108,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public PersonBuilder withPhone(String phone) {","lastModifiedDate":"2017-08-15"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        this.phone \u003d new Phone(phone);","lastModifiedDate":"2017-12-20"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     * Sets the {@code Email} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":116,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    public PersonBuilder withEmail(String email) {","lastModifiedDate":"2017-08-15"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        this.email \u003d new Email(email);","lastModifiedDate":"2017-12-20"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":122,"author":{"gitId":"fullfatwasabi"},"content":"    /**","lastModifiedDate":"2021-10-09"},{"lineNumber":123,"author":{"gitId":"fullfatwasabi"},"content":"     * Parses the {@code roles} into a {@code Set\u003cRole\u003e} and set it to the {@code Person} that we are building.","lastModifiedDate":"2021-10-13"},{"lineNumber":124,"author":{"gitId":"fullfatwasabi"},"content":"     */","lastModifiedDate":"2021-10-09"},{"lineNumber":125,"author":{"gitId":"fullfatwasabi"},"content":"    public PersonBuilder withRoles(String ... roles) {","lastModifiedDate":"2021-10-13"},{"lineNumber":126,"author":{"gitId":"fullfatwasabi"},"content":"        this.roles \u003d SampleDataUtil.getRoleSet(roles);","lastModifiedDate":"2021-10-13"},{"lineNumber":127,"author":{"gitId":"fullfatwasabi"},"content":"        return this;","lastModifiedDate":"2021-10-09"},{"lineNumber":128,"author":{"gitId":"fullfatwasabi"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":129,"author":{"gitId":"fullfatwasabi"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":130,"author":{"gitId":"fullfatwasabi"},"content":"    /**","lastModifiedDate":"2021-10-09"},{"lineNumber":131,"author":{"gitId":"fullfatwasabi"},"content":"     * Sets the {@code Salary} of the {@code Person} that we are building.","lastModifiedDate":"2021-10-09"},{"lineNumber":132,"author":{"gitId":"fullfatwasabi"},"content":"     */","lastModifiedDate":"2021-10-09"},{"lineNumber":133,"author":{"gitId":"fullfatwasabi"},"content":"    public PersonBuilder withSalary(String salary) {","lastModifiedDate":"2021-10-09"},{"lineNumber":134,"author":{"gitId":"fullfatwasabi"},"content":"        this.salary \u003d new Salary(salary);","lastModifiedDate":"2021-10-09"},{"lineNumber":135,"author":{"gitId":"fullfatwasabi"},"content":"        return this;","lastModifiedDate":"2021-10-09"},{"lineNumber":136,"author":{"gitId":"fullfatwasabi"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":137,"author":{"gitId":"fullfatwasabi"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":138,"author":{"gitId":"fullfatwasabi"},"content":"    /**","lastModifiedDate":"2021-10-09"},{"lineNumber":139,"author":{"gitId":"fullfatwasabi"},"content":"     * Sets the {@code Status} of the {@code Person} that we are building.","lastModifiedDate":"2021-10-09"},{"lineNumber":140,"author":{"gitId":"fullfatwasabi"},"content":"     */","lastModifiedDate":"2021-10-09"},{"lineNumber":141,"author":{"gitId":"fullfatwasabi"},"content":"    public PersonBuilder withStatus(String status) {","lastModifiedDate":"2021-10-09"},{"lineNumber":142,"author":{"gitId":"fullfatwasabi"},"content":"        this.status \u003d Status.translateStringToStatus(status);","lastModifiedDate":"2021-10-09"},{"lineNumber":143,"author":{"gitId":"fullfatwasabi"},"content":"        return this;","lastModifiedDate":"2021-10-09"},{"lineNumber":144,"author":{"gitId":"fullfatwasabi"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":145,"author":{"gitId":"fullfatwasabi"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    public Person build() {","lastModifiedDate":"2021-09-22"},{"lineNumber":147,"author":{"gitId":"Gabau"},"content":"        return new Person(name, phone, email, address, roles, salary, status, tags, absentDates);","lastModifiedDate":"2021-10-15"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":150,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-03"}],"authorContributionMap":{"Gabau":15,"fullfatwasabi":40,"-":95}},{"path":"src/test/java/seedu/address/testutil/PersonUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2017-04-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2021-10-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2021-10-09"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2021-10-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2021-10-09"},{"lineNumber":7,"author":{"gitId":"fullfatwasabi"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ROLE;","lastModifiedDate":"2021-10-09"},{"lineNumber":8,"author":{"gitId":"fullfatwasabi"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_SALARY;","lastModifiedDate":"2021-10-09"},{"lineNumber":9,"author":{"gitId":"fullfatwasabi"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_STATUS;","lastModifiedDate":"2021-10-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2021-10-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2018-03-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-03-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2021-09-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2021-09-22"},{"lineNumber":17,"author":{"gitId":"fullfatwasabi"},"content":"import seedu.address.model.person.Role;","lastModifiedDate":"2021-10-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2018-03-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-04-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * A utility class for Person.","lastModifiedDate":"2017-04-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-04-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"public class PersonUtil {","lastModifiedDate":"2017-04-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-04-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * Returns an add command string for adding the {@code person}.","lastModifiedDate":"2017-04-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-04-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public static String getAddCommand(Person person) {","lastModifiedDate":"2021-09-22"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        return AddCommand.COMMAND_WORD + \" \" + getPersonDetails(person);","lastModifiedDate":"2021-09-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-04-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Returns the part of command string for the given {@code person}\u0027s details.","lastModifiedDate":"2017-04-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-04-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static String getPersonDetails(Person person) {","lastModifiedDate":"2021-09-22"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2017-04-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_NAME + person.getName().fullName + \" \");","lastModifiedDate":"2021-09-22"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_PHONE + person.getPhone().value + \" \");","lastModifiedDate":"2021-09-22"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_EMAIL + person.getEmail().value + \" \");","lastModifiedDate":"2021-09-22"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_ADDRESS + person.getAddress().value + \" \");","lastModifiedDate":"2021-09-22"},{"lineNumber":41,"author":{"gitId":"fullfatwasabi"},"content":"        person.getRoles().stream().forEach(","lastModifiedDate":"2021-10-13"},{"lineNumber":42,"author":{"gitId":"fullfatwasabi"},"content":"            s -\u003e sb.append(PREFIX_ROLE + s.getValue() + \" \")","lastModifiedDate":"2021-10-13"},{"lineNumber":43,"author":{"gitId":"fullfatwasabi"},"content":"        );","lastModifiedDate":"2021-10-13"},{"lineNumber":44,"author":{"gitId":"fullfatwasabi"},"content":"        sb.append(PREFIX_SALARY + person.getSalary().toString() + \" \");","lastModifiedDate":"2021-10-09"},{"lineNumber":45,"author":{"gitId":"fullfatwasabi"},"content":"        sb.append(PREFIX_STATUS + person.getStatus().getValue() + \" \");","lastModifiedDate":"2021-10-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        person.getTags().stream().forEach(","lastModifiedDate":"2021-09-22"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            s -\u003e sb.append(PREFIX_TAG + s.tagName + \" \")","lastModifiedDate":"2017-05-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        );","lastModifiedDate":"2017-05-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2017-04-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Returns the part of command string for the given {@code EditPersonDescriptor}\u0027s details.","lastModifiedDate":"2018-03-26"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public static String getEditPersonDescriptorDetails(EditPersonDescriptor descriptor) {","lastModifiedDate":"2021-09-22"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2018-03-26"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        descriptor.getName().ifPresent(name -\u003e sb.append(PREFIX_NAME).append(name.fullName).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        descriptor.getPhone().ifPresent(phone -\u003e sb.append(PREFIX_PHONE).append(phone.value).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        descriptor.getEmail().ifPresent(email -\u003e sb.append(PREFIX_EMAIL).append(email.value).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        descriptor.getAddress().ifPresent(address -\u003e sb.append(PREFIX_ADDRESS).append(address.value).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":61,"author":{"gitId":"fullfatwasabi"},"content":"        if (descriptor.getRoles().isPresent()) {","lastModifiedDate":"2021-10-13"},{"lineNumber":62,"author":{"gitId":"fullfatwasabi"},"content":"            Set\u003cRole\u003e roles \u003d descriptor.getRoles().get();","lastModifiedDate":"2021-10-13"},{"lineNumber":63,"author":{"gitId":"fullfatwasabi"},"content":"            roles.forEach(s -\u003e sb.append(PREFIX_ROLE).append(s.getValue()).append(\" \"));","lastModifiedDate":"2021-10-13"},{"lineNumber":64,"author":{"gitId":"fullfatwasabi"},"content":"        }","lastModifiedDate":"2021-10-13"},{"lineNumber":65,"author":{"gitId":"fullfatwasabi"},"content":"        descriptor.getSalary().ifPresent(salary -\u003e sb.append(PREFIX_SALARY).append(salary.toString()).append(\" \"));","lastModifiedDate":"2021-10-09"},{"lineNumber":66,"author":{"gitId":"Gabau"},"content":"        descriptor.getStatus().ifPresent(status -\u003e sb.append(PREFIX_STATUS).append(status.getValue()).append(\" \"));","lastModifiedDate":"2021-10-09"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        if (descriptor.getTags().isPresent()) {","lastModifiedDate":"2018-03-26"},{"lineNumber":68,"author":{"gitId":"-"},"content":"            Set\u003cTag\u003e tags \u003d descriptor.getTags().get();","lastModifiedDate":"2018-03-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"            if (tags.isEmpty()) {","lastModifiedDate":"2018-03-26"},{"lineNumber":70,"author":{"gitId":"fullfatwasabi"},"content":"                sb.append(PREFIX_TAG).append(\" \");","lastModifiedDate":"2021-10-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            } else {","lastModifiedDate":"2018-03-26"},{"lineNumber":72,"author":{"gitId":"-"},"content":"                tags.forEach(s -\u003e sb.append(PREFIX_TAG).append(s.tagName).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-03-26"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-03-26"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2018-03-26"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-26"},{"lineNumber":77,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-04-05"}],"authorContributionMap":{"Gabau":1,"fullfatwasabi":15,"-":61}},{"path":"src/test/java/seedu/address/testutil/TypicalPersons.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2016-09-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_AMY;","lastModifiedDate":"2021-10-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2021-10-09"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;","lastModifiedDate":"2021-10-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2021-10-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2021-10-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2021-10-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2021-10-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2021-10-09"},{"lineNumber":11,"author":{"gitId":"fullfatwasabi"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ROLE_AMY;","lastModifiedDate":"2021-10-09"},{"lineNumber":12,"author":{"gitId":"fullfatwasabi"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ROLE_BOB;","lastModifiedDate":"2021-10-09"},{"lineNumber":13,"author":{"gitId":"fullfatwasabi"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_SALARY_AMY;","lastModifiedDate":"2021-10-09"},{"lineNumber":14,"author":{"gitId":"fullfatwasabi"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_SALARY_BOB;","lastModifiedDate":"2021-10-09"},{"lineNumber":15,"author":{"gitId":"fullfatwasabi"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_STATUS_AMY;","lastModifiedDate":"2021-10-09"},{"lineNumber":16,"author":{"gitId":"fullfatwasabi"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_STATUS_BOB;","lastModifiedDate":"2021-10-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2021-10-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2021-10-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-22"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-08-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-08-07"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-08-07"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-07"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-09-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2021-09-22"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":" * A utility class containing a list of {@code Person} objects to be used in tests.","lastModifiedDate":"2017-08-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"public class TypicalPersons {","lastModifiedDate":"2017-04-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static final Person ALICE \u003d new PersonBuilder().withName(\"Alice Pauline\")","lastModifiedDate":"2021-09-22"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            .withAddress(\"123, Jurong West Ave 6, #08-111\").withEmail(\"alice@example.com\")","lastModifiedDate":"2017-04-05"},{"lineNumber":34,"author":{"gitId":"fullfatwasabi"},"content":"            .withPhone(\"94351253\").withRoles(\"floor\").withSalary(\"1000000\").withStatus(\"fulltime\")","lastModifiedDate":"2021-10-13"},{"lineNumber":35,"author":{"gitId":"Gabau"},"content":"            .withTags(\"friends\").withAbsentDates(\"2020-02-01 2020-02-03\").build();","lastModifiedDate":"2021-10-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public static final Person BENSON \u003d new PersonBuilder().withName(\"Benson Meier\")","lastModifiedDate":"2021-09-22"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            .withAddress(\"311, Clementi Ave 2, #02-25\")","lastModifiedDate":"2017-09-21"},{"lineNumber":38,"author":{"gitId":"fullfatwasabi"},"content":"            .withEmail(\"johnd@example.com\").withPhone(\"98765432\").withRoles(\"bartender\").withSalary(\"1500000\")","lastModifiedDate":"2021-10-13"},{"lineNumber":39,"author":{"gitId":"fullfatwasabi"},"content":"            .withStatus(\"parttime\").withTags(\"owesMoney\", \"friends\").build();","lastModifiedDate":"2021-10-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public static final Person CARL \u003d new PersonBuilder().withName(\"Carl Kurz\").withPhone(\"95352563\")","lastModifiedDate":"2021-09-22"},{"lineNumber":41,"author":{"gitId":"fullfatwasabi"},"content":"            .withEmail(\"heinz@example.com\").withAddress(\"wall street\").withRoles(\"kitchen\")","lastModifiedDate":"2021-10-13"},{"lineNumber":42,"author":{"gitId":"fullfatwasabi"},"content":"            .withSalary(\"900000\").withStatus(\"nostatus\").build();","lastModifiedDate":"2021-10-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public static final Person DANIEL \u003d new PersonBuilder().withName(\"Daniel Meier\").withPhone(\"87652533\")","lastModifiedDate":"2021-09-22"},{"lineNumber":44,"author":{"gitId":"fullfatwasabi"},"content":"            .withEmail(\"cornelia@example.com\").withAddress(\"10th street\")","lastModifiedDate":"2021-10-09"},{"lineNumber":45,"author":{"gitId":"fullfatwasabi"},"content":"            .withRoles(\"floor\").withSalary(\"900000\").withStatus(\"fulltime\").withTags(\"friends\").build();","lastModifiedDate":"2021-10-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public static final Person ELLE \u003d new PersonBuilder().withName(\"Elle Meyer\").withPhone(\"9482224\")","lastModifiedDate":"2021-09-22"},{"lineNumber":47,"author":{"gitId":"fullfatwasabi"},"content":"            .withEmail(\"werner@example.com\").withRoles(\"floor\").withSalary(\"930000\").withStatus(\"fulltime\")","lastModifiedDate":"2021-10-13"},{"lineNumber":48,"author":{"gitId":"fullfatwasabi"},"content":"            .withAddress(\"michegan ave\").build();","lastModifiedDate":"2021-10-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public static final Person FIONA \u003d new PersonBuilder().withName(\"Fiona Kunz\").withPhone(\"9482427\")","lastModifiedDate":"2021-09-22"},{"lineNumber":50,"author":{"gitId":"fullfatwasabi"},"content":"            .withEmail(\"lydia@example.com\").withAddress(\"little tokyo\").withRoles(\"bartender\")","lastModifiedDate":"2021-10-13"},{"lineNumber":51,"author":{"gitId":"fullfatwasabi"},"content":"            .withSalary(\"950000\").withStatus(\"parttime\").build();","lastModifiedDate":"2021-10-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public static final Person GEORGE \u003d new PersonBuilder().withName(\"George Best\").withPhone(\"9482442\")","lastModifiedDate":"2021-09-22"},{"lineNumber":53,"author":{"gitId":"fullfatwasabi"},"content":"            .withEmail(\"anna@example.com\").withAddress(\"4th street\").withRoles(\"norole\")","lastModifiedDate":"2021-10-13"},{"lineNumber":54,"author":{"gitId":"fullfatwasabi"},"content":"            .withSalary(\"850000\").withStatus(\"fulltime\").build();","lastModifiedDate":"2021-10-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    // Manually added","lastModifiedDate":"2016-09-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public static final Person HOON \u003d new PersonBuilder().withName(\"Hoon Meier\").withPhone(\"8482424\")","lastModifiedDate":"2021-09-22"},{"lineNumber":58,"author":{"gitId":"fullfatwasabi"},"content":"            .withEmail(\"stefan@example.com\").withAddress(\"little india\").withRoles(\"floor\")","lastModifiedDate":"2021-10-13"},{"lineNumber":59,"author":{"gitId":"fullfatwasabi"},"content":"            .withSalary(\"900000\").withStatus(\"fulltime\").build();","lastModifiedDate":"2021-10-09"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public static final Person IDA \u003d new PersonBuilder().withName(\"Ida Mueller\").withPhone(\"8482131\")","lastModifiedDate":"2021-09-22"},{"lineNumber":61,"author":{"gitId":"fullfatwasabi"},"content":"            .withEmail(\"hans@example.com\").withAddress(\"chicago ave\").withRoles(\"bartender\")","lastModifiedDate":"2021-10-13"},{"lineNumber":62,"author":{"gitId":"fullfatwasabi"},"content":"            .withSalary(\"1000000\").withStatus(\"parttime\").build();","lastModifiedDate":"2021-10-09"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-22"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    // Manually added - Person\u0027s details found in {@code CommandTestUtil}","lastModifiedDate":"2017-08-22"},{"lineNumber":65,"author":{"gitId":"fullfatwasabi"},"content":"    public static final Person AMY \u003d new PersonBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2021-10-09"},{"lineNumber":66,"author":{"gitId":"fullfatwasabi"},"content":"            .withPhone(VALID_PHONE_AMY).withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY)","lastModifiedDate":"2021-10-09"},{"lineNumber":67,"author":{"gitId":"fullfatwasabi"},"content":"            .withRoles(VALID_ROLE_AMY).withSalary(VALID_SALARY_AMY).withStatus(VALID_STATUS_AMY)","lastModifiedDate":"2021-10-13"},{"lineNumber":68,"author":{"gitId":"fullfatwasabi"},"content":"            .withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2021-10-09"},{"lineNumber":69,"author":{"gitId":"fullfatwasabi"},"content":"    public static final Person BOB \u003d new PersonBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2021-10-09"},{"lineNumber":70,"author":{"gitId":"fullfatwasabi"},"content":"            .withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB).withAddress(VALID_ADDRESS_BOB)","lastModifiedDate":"2021-10-09"},{"lineNumber":71,"author":{"gitId":"fullfatwasabi"},"content":"            .withRoles(VALID_ROLE_BOB).withSalary(VALID_SALARY_BOB).withStatus(VALID_STATUS_BOB)","lastModifiedDate":"2021-10-13"},{"lineNumber":72,"author":{"gitId":"fullfatwasabi"},"content":"            .withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND).build();","lastModifiedDate":"2021-10-09"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-21"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public static final String KEYWORD_MATCHING_MEIER \u003d \"Meier\"; // A keyword that matches MEIER","lastModifiedDate":"2017-09-21"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    private TypicalPersons() {} // prevents instantiation","lastModifiedDate":"2017-07-20"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Returns an {@code AddressBook} with all the typical persons.","lastModifiedDate":"2017-08-05"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public static AddressBook getTypicalAddressBook() {","lastModifiedDate":"2017-08-05"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        AddressBook ab \u003d new AddressBook();","lastModifiedDate":"2017-08-05"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        for (Person person : getTypicalPersons()) {","lastModifiedDate":"2021-09-22"},{"lineNumber":84,"author":{"gitId":"-"},"content":"            ab.addPerson(person);","lastModifiedDate":"2021-09-22"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        return ab;","lastModifiedDate":"2016-09-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-04"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    public static List\u003cPerson\u003e getTypicalPersons() {","lastModifiedDate":"2021-09-22"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(ALICE, BENSON, CARL, DANIEL, ELLE, FIONA, GEORGE));","lastModifiedDate":"2017-08-07"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-08-04"},{"lineNumber":92,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-13"}],"authorContributionMap":{"Gabau":1,"fullfatwasabi":31,"-":60}}]
