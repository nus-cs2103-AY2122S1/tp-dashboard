[{"path":"README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"XXJJXJ"},"content":"[![CI Status](https://github.com/AY2122S1-CS2103T-T10-2/tp/workflows/Java%20CI/badge.svg)](https://github.com/AY2122S1-CS2103T-T10-2/tp/actions)","lastModifiedDate":"2021-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"![Ui](docs/images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"XXJJXJ"},"content":"**Managera is a desktop application for managing your event details and its corresponding participant credentials.** While it has a GUI, most of the user interactions happen using a CLI (Command Line Interface).","lastModifiedDate":"2021-09-22"},{"lineNumber":6,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":7,"author":{"gitId":"XXJJXJ"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-09-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":"Example usages:","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":10,"author":{"gitId":"XXJJXJ"},"content":"* Add and Delete Events","lastModifiedDate":"2021-09-22"},{"lineNumber":11,"author":{"gitId":"XXJJXJ"},"content":"* Add Participants to Events","lastModifiedDate":"2021-09-22"},{"lineNumber":12,"author":{"gitId":"XXJJXJ"},"content":"* Remove Participants from Events","lastModifiedDate":"2021-09-22"},{"lineNumber":13,"author":{"gitId":"XXJJXJ"},"content":"* List Participants of an Event","lastModifiedDate":"2021-09-22"},{"lineNumber":14,"author":{"gitId":"XXJJXJ"},"content":"* View details of an Event","lastModifiedDate":"2021-09-22"},{"lineNumber":15,"author":{"gitId":"XXJJXJ"},"content":"* Sort Events by Date and Time","lastModifiedDate":"2021-09-22"},{"lineNumber":16,"author":{"gitId":"XXJJXJ"},"content":"* Filter Events by Date and Time","lastModifiedDate":"2021-09-22"},{"lineNumber":17,"author":{"gitId":"XXJJXJ"},"content":"* Find a Participant and view his details","lastModifiedDate":"2021-09-22"},{"lineNumber":18,"author":{"gitId":"XXJJXJ"},"content":"* Mark Event as Done","lastModifiedDate":"2021-09-22"},{"lineNumber":19,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":20,"author":{"gitId":"XXJJXJ"},"content":"* For the detailed documentation of this project, see the **[Managera Product Website](https://ay2122s1-cs2103t-t10-2.github.io/tp/UserGuide.html)**.","lastModifiedDate":"2021-09-25"},{"lineNumber":21,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":22,"author":{"gitId":"XXJJXJ"},"content":"**Acknowledgements**","lastModifiedDate":"2021-09-22"},{"lineNumber":23,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":24,"author":{"gitId":"XXJJXJ"},"content":"* This project is based on the AddressBook-Level3 project created by the [SE-EDU initiative](https://se-education.org).","lastModifiedDate":"2021-09-22"}],"authorContributionMap":{"XXJJXJ":20,"-":4}},{"path":"build.gradle","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2016-08-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00274.0.4\u0027","lastModifiedDate":"2019-02-28"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2016-12-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    id \u0027jacoco\u0027","lastModifiedDate":"2020-08-07"},{"lineNumber":7,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":9,"author":{"gitId":"-"},"content":"mainClassName \u003d \u0027seedu.address.Main\u0027","lastModifiedDate":"2019-02-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"sourceCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":12,"author":{"gitId":"-"},"content":"targetCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    maven { url \u0027https://oss.sonatype.org/content/repositories/snapshots/\u0027 }","lastModifiedDate":"2018-04-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2016-10-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.29\u0027","lastModifiedDate":"2020-05-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-10-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2018-03-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2018-03-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    finalizedBy jacocoTestReport","lastModifiedDate":"2020-08-07"},{"lineNumber":26,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-08-07"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-08-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"task coverage(type: JacocoReport) {","lastModifiedDate":"2020-08-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    sourceDirectories.from files(sourceSets.main.allSource.srcDirs)","lastModifiedDate":"2020-08-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    classDirectories.from files(sourceSets.main.output)","lastModifiedDate":"2020-08-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    executionData.from files(jacocoTestReport.executionData)","lastModifiedDate":"2020-08-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    afterEvaluate {","lastModifiedDate":"2020-08-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        classDirectories.from files(classDirectories.files.collect {","lastModifiedDate":"2020-08-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            fileTree(dir: it, exclude: [\u0027**/*.jar\u0027])","lastModifiedDate":"2020-08-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        })","lastModifiedDate":"2020-08-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    reports {","lastModifiedDate":"2020-08-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        html.enabled \u003d true","lastModifiedDate":"2020-08-07"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        xml.enabled \u003d true","lastModifiedDate":"2020-08-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-03-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    String jUnitVersion \u003d \u00275.4.0\u0027","lastModifiedDate":"2019-02-10"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2019-02-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.core\u0027, name: \u0027jackson-databind\u0027, version: \u00272.7.0\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.datatype\u0027, name: \u0027jackson-datatype-jsr310\u0027, version: \u00272.7.4\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":68,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2016-08-29"},{"lineNumber":69,"author":{"gitId":"lowkangn"},"content":"    archiveName \u003d \u0027managera.jar\u0027","lastModifiedDate":"2021-09-25"},{"lineNumber":70,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"defaultTasks \u0027clean\u0027, \u0027test\u0027","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"-":71,"lowkangn":1}},{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: About Us","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"We are a team based in the [School of Computing, National University of Singapore](http://www.comp.nus.edu.sg).","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"You can reach us at the email `seer[at]comp.nus.edu.sg`","lastModifiedDate":"2020-06-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"## Project team","lastModifiedDate":"2020-06-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"kanjitp"},"content":"### Kan Jitpakdi","lastModifiedDate":"2021-09-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"kanjitp"},"content":"\u003cimg src\u003d\"images/kanjitp.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2021-09-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"kanjitp"},"content":"[[github](https://github.com/kanjitp)]","lastModifiedDate":"2021-09-18"},{"lineNumber":17,"author":{"gitId":"kanjitp"},"content":"[[portfolio](team/kanjitp.md)]","lastModifiedDate":"2021-09-18"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"* Role: Project Advisor","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"kanjitp"},"content":"* Responsibilities: Full Stack","lastModifiedDate":"2021-09-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"lowkangn"},"content":"### Low Kang Ngee","lastModifiedDate":"2021-09-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"lowkangn"},"content":"\u003cimg src\u003d\"images/lowkangn.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2021-09-18"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"lowkangn"},"content":"[[github](http://github.com/lowkangn)]","lastModifiedDate":"2021-09-18"},{"lineNumber":27,"author":{"gitId":"lowkangn"},"content":"[[portfolio](team/lowkangn.md)]","lastModifiedDate":"2021-09-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"lowkangn"},"content":"- Role: Developer","lastModifiedDate":"2021-09-18"},{"lineNumber":30,"author":{"gitId":"lowkangn"},"content":"- Responsibilities: Testing + Deliverables and deadlines","lastModifiedDate":"2021-09-18"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"XXJJXJ"},"content":"### Ye Xinjian","lastModifiedDate":"2021-09-18"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"XXJJXJ"},"content":"\u003cimg src\u003d\"images/xxjjxj.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2021-09-18"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"XXJJXJ"},"content":"[[github](http://github.com/XXJJXJ)] [[portfolio](team/xxjjxj.md)]","lastModifiedDate":"2021-09-18"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":39,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"XXJJXJ"},"content":"* Responsibilities: Documentation + Code Quality","lastModifiedDate":"2021-09-18"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"ntwbruce"},"content":"### Ng Tze Wei Bruce Mitchell","lastModifiedDate":"2021-09-18"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"ntwbruce"},"content":"\u003cimg src\u003d\"images/ntwbruce.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2021-09-18"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"ntwbruce"},"content":"[[github](http://github.com/ntwbruce)]","lastModifiedDate":"2021-09-18"},{"lineNumber":48,"author":{"gitId":"ntwbruce"},"content":"[[portfolio](team/ntwbruce.md)]","lastModifiedDate":"2021-09-18"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"davelowqx"},"content":"- Role: Developer","lastModifiedDate":"2021-09-18"},{"lineNumber":51,"author":{"gitId":"davelowqx"},"content":"- Responsibilities: Dev Ops + Threading","lastModifiedDate":"2021-09-18"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"davelowqx"},"content":"### Dave Low","lastModifiedDate":"2021-09-18"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"davelowqx"},"content":"\u003cimg src\u003d\"images/davelowqx.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2021-09-18"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"davelowqx"},"content":"[[github](http://github.com/davelowqx)]","lastModifiedDate":"2021-09-18"},{"lineNumber":58,"author":{"gitId":"davelowqx"},"content":"[[portfolio](team/davelowqx.md)]","lastModifiedDate":"2021-09-18"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"davelowqx"},"content":"- Role: Businessman","lastModifiedDate":"2021-09-18"},{"lineNumber":61,"author":{"gitId":"davelowqx"},"content":"- Responsibilities: Playing Golf","lastModifiedDate":"2021-09-18"}],"authorContributionMap":{"XXJJXJ":4,"kanjitp":5,"davelowqx":8,"ntwbruce":4,"-":34,"lowkangn":6}},{"path":"docs/DeveloperGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: Developer Guide","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"ntwbruce"},"content":"## Table of Contents","lastModifiedDate":"2021-09-22"},{"lineNumber":6,"author":{"gitId":"ntwbruce"},"content":"- [**Acknowledgements**](#acknowledgements)","lastModifiedDate":"2021-09-22"},{"lineNumber":7,"author":{"gitId":"ntwbruce"},"content":"- [**Setting up, getting started**](#setting-up-getting-started)","lastModifiedDate":"2021-09-22"},{"lineNumber":8,"author":{"gitId":"ntwbruce"},"content":"- [**Design**](#design)","lastModifiedDate":"2021-09-22"},{"lineNumber":9,"author":{"gitId":"ntwbruce"},"content":"    * [Architecture](#architecture)","lastModifiedDate":"2021-09-22"},{"lineNumber":10,"author":{"gitId":"ntwbruce"},"content":"    * [UI component](#ui-component)","lastModifiedDate":"2021-09-22"},{"lineNumber":11,"author":{"gitId":"ntwbruce"},"content":"    * [Logic component](#logic-component)","lastModifiedDate":"2021-09-22"},{"lineNumber":12,"author":{"gitId":"ntwbruce"},"content":"    * [Model component](#model-component)","lastModifiedDate":"2021-09-22"},{"lineNumber":13,"author":{"gitId":"ntwbruce"},"content":"    * [Storage component](#storage-component)","lastModifiedDate":"2021-09-22"},{"lineNumber":14,"author":{"gitId":"ntwbruce"},"content":"    * [Common classes](#common-classes)","lastModifiedDate":"2021-09-22"},{"lineNumber":15,"author":{"gitId":"ntwbruce"},"content":"- [**Implementation**](#implementation)","lastModifiedDate":"2021-09-22"},{"lineNumber":16,"author":{"gitId":"ntwbruce"},"content":"    * [Undo/redo feature](#proposed-undoredo-feature)","lastModifiedDate":"2021-09-22"},{"lineNumber":17,"author":{"gitId":"ntwbruce"},"content":"        + [Proposed implementation](#proposed-implementation)","lastModifiedDate":"2021-09-22"},{"lineNumber":18,"author":{"gitId":"ntwbruce"},"content":"        + [Design considerations](#design-considerations)","lastModifiedDate":"2021-09-22"},{"lineNumber":19,"author":{"gitId":"ntwbruce"},"content":"    * [Data archiving](#proposed-data-archiving)","lastModifiedDate":"2021-09-22"},{"lineNumber":20,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":21,"author":{"gitId":"ntwbruce"},"content":"- [**Documentation, logging, testing, configuration, dev-ops**](#documentation-logging-testing-configuration-dev-ops)","lastModifiedDate":"2021-09-22"},{"lineNumber":22,"author":{"gitId":"ntwbruce"},"content":"- [**Appendix: Requirements**](#appendix-requirements)","lastModifiedDate":"2021-09-22"},{"lineNumber":23,"author":{"gitId":"ntwbruce"},"content":"    * [Product scope](#product-scope)","lastModifiedDate":"2021-09-22"},{"lineNumber":24,"author":{"gitId":"ntwbruce"},"content":"    * [User stories](#user-stories)","lastModifiedDate":"2021-09-22"},{"lineNumber":25,"author":{"gitId":"ntwbruce"},"content":"    * [Use cases](#use-cases)","lastModifiedDate":"2021-09-22"},{"lineNumber":26,"author":{"gitId":"ntwbruce"},"content":"    * [Non-Functional Requirements](#non-functional-requirements)","lastModifiedDate":"2021-09-22"},{"lineNumber":27,"author":{"gitId":"ntwbruce"},"content":"    * [Glossary](#glossary)","lastModifiedDate":"2021-09-22"},{"lineNumber":28,"author":{"gitId":"ntwbruce"},"content":"- [**Appendix: Instructions for manual testing**](#appendix-instructions-for-manual-testing)","lastModifiedDate":"2021-09-22"},{"lineNumber":29,"author":{"gitId":"ntwbruce"},"content":"    * [Launch and shutdown](#launch-and-shutdown)","lastModifiedDate":"2021-09-22"},{"lineNumber":30,"author":{"gitId":"ntwbruce"},"content":"    * [Deleting a person](#deleting-a-person)","lastModifiedDate":"2021-09-22"},{"lineNumber":31,"author":{"gitId":"ntwbruce"},"content":"    * [Saving data](#saving-data)","lastModifiedDate":"2021-09-22"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":35,"author":{"gitId":"-"},"content":"## **Acknowledgements**","lastModifiedDate":"2021-07-30"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":37,"author":{"gitId":"-"},"content":"* {list here sources of all reused/adapted ideas, code, documentation, and third-party libraries -- include links to the original source as well}","lastModifiedDate":"2021-07-30"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":39,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-07-30"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"## **Setting up, getting started**","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"Refer to the guide [_Setting up and getting started_](SettingUp.md).","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"## **Design**","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":":bulb: **Tip:** The `.puml` files used to create diagrams in this document can be found in the [diagrams](https://github.com/se-edu/addressbook-level3/tree/master/docs/diagrams/) folder. Refer to the [_PlantUML Tutorial_ at se-edu/guides](https://se-education.org/guides/tutorials/plantUml.html) to learn how to create and edit diagrams.","lastModifiedDate":"2021-07-31"},{"lineNumber":52,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"### Architecture","lastModifiedDate":"2021-07-31"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureDiagram.png\" width\u003d\"280\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"The ***Architecture Diagram*** given above explains the high-level design of the App.","lastModifiedDate":"2021-07-31"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"Given below is a quick overview of main components and how they interact with each other.","lastModifiedDate":"2021-07-31"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":62,"author":{"gitId":"-"},"content":"**Main components of the architecture**","lastModifiedDate":"2021-07-31"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"**`Main`** has two classes called [`Main`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/Main.java) and [`MainApp`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/MainApp.java). It is responsible for,","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"* At app launch: Initializes the components in the correct sequence, and connects them up with each other.","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"* At shut down: Shuts down the components and invokes cleanup methods where necessary.","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"[**`Commons`**](#common-classes) represents a collection of classes used by multiple other components.","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"The rest of the App consists of four components.","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"* [**`UI`**](#ui-component): The UI of the App.","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"* [**`Logic`**](#logic-component): The command executor.","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"* [**`Model`**](#model-component): Holds the data of the App in memory.","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"* [**`Storage`**](#storage-component): Reads data from, and writes data to, the hard disk.","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"**How the architecture components interact with each other**","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"The *Sequence Diagram* below shows how the components interact with each other for the scenario where the user issues the command `delete 1`.","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureSequenceDiagram.png\" width\u003d\"574\" /\u003e","lastModifiedDate":"2020-06-07"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"Each of the four main components (also shown in the diagram above),","lastModifiedDate":"2021-07-31"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":86,"author":{"gitId":"-"},"content":"* defines its *API* in an `interface` with the same name as the Component.","lastModifiedDate":"2021-07-31"},{"lineNumber":87,"author":{"gitId":"-"},"content":"* implements its functionality using a concrete `{Component Name}Manager` class (which follows the corresponding API `interface` mentioned in the previous point.","lastModifiedDate":"2021-07-31"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":89,"author":{"gitId":"-"},"content":"For example, the `Logic` component defines its API in the `Logic.java` interface and implements its functionality using the `LogicManager.java` class which follows the `Logic` interface. Other components interact with a given component through its interface rather than the concrete class (reason: to prevent outside component\u0027s being coupled to the implementation of a component), as illustrated in the (partial) class diagram below.","lastModifiedDate":"2021-07-31"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":91,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ComponentManagers.png\" width\u003d\"300\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":93,"author":{"gitId":"-"},"content":"The sections below give more details of each component.","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"### UI component","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"The **API** of this component is specified in [`Ui.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/Ui.java)","lastModifiedDate":"2021-07-31"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"![Structure of the UI Component](images/UiClassDiagram.png)","lastModifiedDate":"2021-07-31"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"The UI consists of a `MainWindow` that is made up of parts e.g.`CommandBox`, `ResultDisplay`, `PersonListPanel`, `StatusBarFooter` etc. All these, including the `MainWindow`, inherit from the abstract `UiPart` class which captures the commonalities between classes that represent parts of the visible GUI.","lastModifiedDate":"2021-07-31"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"The `UI` component uses the JavaFx UI framework. The layout of these UI parts are defined in matching `.fxml` files that are in the `src/main/resources/view` folder. For example, the layout of the [`MainWindow`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/MainWindow.java) is specified in [`MainWindow.fxml`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/resources/view/MainWindow.fxml)","lastModifiedDate":"2021-07-31"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"The `UI` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"* executes user commands using the `Logic` component.","lastModifiedDate":"2021-07-31"},{"lineNumber":108,"author":{"gitId":"-"},"content":"* listens for changes to `Model` data so that the UI can be updated with the modified data.","lastModifiedDate":"2021-07-31"},{"lineNumber":109,"author":{"gitId":"-"},"content":"* keeps a reference to the `Logic` component, because the `UI` relies on the `Logic` to execute commands.","lastModifiedDate":"2021-07-31"},{"lineNumber":110,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component, as it displays `Person` object residing in the `Model`.","lastModifiedDate":"2021-07-31"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"### Logic component","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"**API** : [`Logic.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/logic/Logic.java)","lastModifiedDate":"2021-07-31"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"Here\u0027s a (partial) class diagram of the `Logic` component:","lastModifiedDate":"2021-07-31"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/LogicClassDiagram.png\" width\u003d\"550\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"How the `Logic` component works:","lastModifiedDate":"2021-07-31"},{"lineNumber":121,"author":{"gitId":"-"},"content":"1. When `Logic` is called upon to execute a command, it uses the `AddressBookParser` class to parse the user command.","lastModifiedDate":"2021-07-31"},{"lineNumber":122,"author":{"gitId":"-"},"content":"1. This results in a `Command` object (more precisely, an object of one of its subclasses e.g., `AddCommand`) which is executed by the `LogicManager`.","lastModifiedDate":"2021-07-31"},{"lineNumber":123,"author":{"gitId":"-"},"content":"1. The command can communicate with the `Model` when it is executed (e.g. to add a person).","lastModifiedDate":"2021-07-31"},{"lineNumber":124,"author":{"gitId":"-"},"content":"1. The result of the command execution is encapsulated as a `CommandResult` object which is returned back from `Logic`.","lastModifiedDate":"2021-07-31"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":126,"author":{"gitId":"-"},"content":"The Sequence Diagram below illustrates the interactions within the `Logic` component for the `execute(\"delete 1\")` API call.","lastModifiedDate":"2021-07-31"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"![Interactions Inside the Logic Component for the `delete 1` Command](images/DeleteSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `DeleteCommandParser` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2020-05-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"Here are the other classes in `Logic` (omitted from the class diagram above) that are used for parsing a user command:","lastModifiedDate":"2021-07-31"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":135,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ParserClasses.png\" width\u003d\"600\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"How the parsing works:","lastModifiedDate":"2021-07-31"},{"lineNumber":138,"author":{"gitId":"-"},"content":"* When called upon to parse a user command, the `AddressBookParser` class creates an `XYZCommandParser` (`XYZ` is a placeholder for the specific command name e.g., `AddCommandParser`) which uses the other classes shown above to parse the user command and create a `XYZCommand` object (e.g., `AddCommand`) which the `AddressBookParser` returns back as a `Command` object.","lastModifiedDate":"2021-07-31"},{"lineNumber":139,"author":{"gitId":"-"},"content":"* All `XYZCommandParser` classes (e.g., `AddCommandParser`, `DeleteCommandParser`, ...) inherit from the `Parser` interface so that they can be treated similarly where possible e.g, during testing.","lastModifiedDate":"2021-07-31"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"### Model component","lastModifiedDate":"2021-07-31"},{"lineNumber":142,"author":{"gitId":"-"},"content":"**API** : [`Model.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/model/Model.java)","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ModelClassDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"The `Model` component,","lastModifiedDate":"2021-07-31"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"* stores the address book data i.e., all `Person` objects (which are contained in a `UniquePersonList` object).","lastModifiedDate":"2021-07-31"},{"lineNumber":150,"author":{"gitId":"-"},"content":"* stores the currently \u0027selected\u0027 `Person` objects (e.g., results of a search query) as a separate _filtered_ list which is exposed to outsiders as an unmodifiable `ObservableList\u003cPerson\u003e` that can be \u0027observed\u0027 e.g. the UI can be bound to this list so that the UI automatically updates when the data in the list change.","lastModifiedDate":"2021-07-31"},{"lineNumber":151,"author":{"gitId":"-"},"content":"* stores a `UserPref` object that represents the user’s preferences. This is exposed to the outside as a `ReadOnlyUserPref` objects.","lastModifiedDate":"2021-07-31"},{"lineNumber":152,"author":{"gitId":"-"},"content":"* does not depend on any of the other three components (as the `Model` represents data entities of the domain, they should make sense on their own without depending on other components)","lastModifiedDate":"2021-07-31"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":154,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** An alternative (arguably, a more OOP) model is given below. It has a `Tag` list in the `AddressBook`, which `Person` references. This allows `AddressBook` to only require one `Tag` object per unique tag, instead of each `Person` needing their own `Tag` objects.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":156,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/BetterModelClassDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"### Storage component","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"**API** : [`Storage.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/storage/Storage.java)","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/StorageClassDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":167,"author":{"gitId":"-"},"content":"The `Storage` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"* can save both address book data and user preference data in json format, and read them back into corresponding objects.","lastModifiedDate":"2021-07-31"},{"lineNumber":169,"author":{"gitId":"-"},"content":"* inherits from both `AddressBookStorage` and `UserPrefStorage`, which means it can be treated as either one (if only the functionality of only one is needed).","lastModifiedDate":"2021-07-31"},{"lineNumber":170,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component (because the `Storage` component\u0027s job is to save/retrieve objects that belong to the `Model`)","lastModifiedDate":"2021-07-21"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"### Common classes","lastModifiedDate":"2020-05-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":174,"author":{"gitId":"-"},"content":"Classes used by multiple components are in the `seedu.addressbook.commons` package.","lastModifiedDate":"2020-05-23"},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":178,"author":{"gitId":"-"},"content":"## **Implementation**","lastModifiedDate":"2020-05-23"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":180,"author":{"gitId":"-"},"content":"This section describes some noteworthy details on how certain features are implemented.","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Undo/redo feature","lastModifiedDate":"2020-06-07"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"#### Proposed Implementation","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":186,"author":{"gitId":"-"},"content":"The proposed undo/redo mechanism is facilitated by `VersionedAddressBook`. It extends `AddressBook` with an undo/redo history, stored internally as an `addressBookStateList` and `currentStatePointer`. Additionally, it implements the following operations:","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":188,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#commit()` — Saves the current address book state in its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#undo()` — Restores the previous address book state from its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#redo()` — Restores a previously undone address book state from its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"These operations are exposed in the `Model` interface as `Model#commitAddressBook()`, `Model#undoAddressBook()` and `Model#redoAddressBook()` respectively.","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"Given below is an example usage scenario and how the undo/redo mechanism behaves at each step.","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"Step 1. The user launches the application for the first time. The `VersionedAddressBook` will be initialized with the initial address book state, and the `currentStatePointer` pointing to that single address book state.","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":"![UndoRedoState0](images/UndoRedoState0.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"-"},"content":"Step 2. The user executes `delete 5` command to delete the 5th person in the address book. The `delete` command calls `Model#commitAddressBook()`, causing the modified state of the address book after the `delete 5` command executes to be saved in the `addressBookStateList`, and the `currentStatePointer` is shifted to the newly inserted address book state.","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"![UndoRedoState1](images/UndoRedoState1.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":204,"author":{"gitId":"-"},"content":"Step 3. The user executes `add n/David …​` to add a new person. The `add` command also calls `Model#commitAddressBook()`, causing another modified address book state to be saved into the `addressBookStateList`.","lastModifiedDate":"2020-05-23"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":206,"author":{"gitId":"-"},"content":"![UndoRedoState2](images/UndoRedoState2.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":208,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If a command fails its execution, it will not call `Model#commitAddressBook()`, so the address book state will not be saved into the `addressBookStateList`.","lastModifiedDate":"2020-05-23"},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":210,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":212,"author":{"gitId":"-"},"content":"Step 4. The user now decides that adding the person was a mistake, and decides to undo that action by executing the `undo` command. The `undo` command will call `Model#undoAddressBook()`, which will shift the `currentStatePointer` once to the left, pointing it to the previous address book state, and restores the address book to that state.","lastModifiedDate":"2020-05-23"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"![UndoRedoState3](images/UndoRedoState3.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":216,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currentStatePointer` is at index 0, pointing to the initial AddressBook state, then there are no previous AddressBook states to restore. The `undo` command uses `Model#canUndoAddressBook()` to check if this is the case. If so, it will return an error to the user rather","lastModifiedDate":"2020-05-23"},{"lineNumber":217,"author":{"gitId":"-"},"content":"than attempting to perform the undo.","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":219,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":220,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":221,"author":{"gitId":"-"},"content":"The following sequence diagram shows how the undo operation works:","lastModifiedDate":"2020-05-23"},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":223,"author":{"gitId":"-"},"content":"![UndoSequenceDiagram](images/UndoSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":224,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":225,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `UndoCommand` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2020-05-23"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":229,"author":{"gitId":"-"},"content":"The `redo` command does the opposite — it calls `Model#redoAddressBook()`, which shifts the `currentStatePointer` once to the right, pointing to the previously undone state, and restores the address book to that state.","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currentStatePointer` is at index `addressBookStateList.size() - 1`, pointing to the latest address book state, then there are no undone AddressBook states to restore. The `redo` command uses `Model#canRedoAddressBook()` to check if this is the case. If so, it will return an error to the user rather than attempting to perform the redo.","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":235,"author":{"gitId":"-"},"content":"Step 5. The user then decides to execute the command `list`. Commands that do not modify the address book, such as `list`, will usually not call `Model#commitAddressBook()`, `Model#undoAddressBook()` or `Model#redoAddressBook()`. Thus, the `addressBookStateList` remains unchanged.","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":"![UndoRedoState4](images/UndoRedoState4.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":238,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"Step 6. The user executes `clear`, which calls `Model#commitAddressBook()`. Since the `currentStatePointer` is not pointing at the end of the `addressBookStateList`, all address book states after the `currentStatePointer` will be purged. Reason: It no longer makes sense to redo the `add n/David …​` command. This is the behavior that most modern desktop applications follow.","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":"![UndoRedoState5](images/UndoRedoState5.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"-"},"content":"The following activity diagram summarizes what happens when a user executes a new command:","lastModifiedDate":"2020-05-23"},{"lineNumber":244,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":245,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/CommitActivityDiagram.png\" width\u003d\"250\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":246,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":247,"author":{"gitId":"-"},"content":"#### Design considerations:","lastModifiedDate":"2021-07-31"},{"lineNumber":248,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":249,"author":{"gitId":"-"},"content":"**Aspect: How undo \u0026 redo executes:**","lastModifiedDate":"2021-07-31"},{"lineNumber":250,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":251,"author":{"gitId":"-"},"content":"* **Alternative 1 (current choice):** Saves the entire address book.","lastModifiedDate":"2020-05-23"},{"lineNumber":252,"author":{"gitId":"-"},"content":"  * Pros: Easy to implement.","lastModifiedDate":"2020-05-23"},{"lineNumber":253,"author":{"gitId":"-"},"content":"  * Cons: May have performance issues in terms of memory usage.","lastModifiedDate":"2020-05-23"},{"lineNumber":254,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":255,"author":{"gitId":"-"},"content":"* **Alternative 2:** Individual command knows how to undo/redo by","lastModifiedDate":"2020-05-23"},{"lineNumber":256,"author":{"gitId":"-"},"content":"  itself.","lastModifiedDate":"2020-05-23"},{"lineNumber":257,"author":{"gitId":"-"},"content":"  * Pros: Will use less memory (e.g. for `delete`, just save the person being deleted).","lastModifiedDate":"2020-05-23"},{"lineNumber":258,"author":{"gitId":"-"},"content":"  * Cons: We must ensure that the implementation of each individual command are correct.","lastModifiedDate":"2020-05-23"},{"lineNumber":259,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":260,"author":{"gitId":"-"},"content":"_{more aspects and alternatives to be added}_","lastModifiedDate":"2020-05-23"},{"lineNumber":261,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":262,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Data archiving","lastModifiedDate":"2020-05-23"},{"lineNumber":263,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":264,"author":{"gitId":"-"},"content":"_{Explain here how the data archiving feature will be implemented}_","lastModifiedDate":"2020-05-23"},{"lineNumber":265,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":266,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":267,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":268,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":269,"author":{"gitId":"-"},"content":"## **Documentation, logging, testing, configuration, dev-ops**","lastModifiedDate":"2020-06-07"},{"lineNumber":270,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":271,"author":{"gitId":"-"},"content":"* [Documentation guide](Documentation.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":272,"author":{"gitId":"-"},"content":"* [Testing guide](Testing.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":273,"author":{"gitId":"-"},"content":"* [Logging guide](Logging.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":274,"author":{"gitId":"-"},"content":"* [Configuration guide](Configuration.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":275,"author":{"gitId":"-"},"content":"* [DevOps guide](DevOps.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":276,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":277,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":278,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":279,"author":{"gitId":"-"},"content":"## **Appendix: Requirements**","lastModifiedDate":"2020-05-23"},{"lineNumber":280,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":281,"author":{"gitId":"-"},"content":"### Product scope","lastModifiedDate":"2020-05-23"},{"lineNumber":282,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":283,"author":{"gitId":"-"},"content":"**Target user profile**:","lastModifiedDate":"2020-05-23"},{"lineNumber":284,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":285,"author":{"gitId":"lowkangn"},"content":"* has a need to manage a significant number of events and contacts","lastModifiedDate":"2021-09-18"},{"lineNumber":286,"author":{"gitId":"-"},"content":"* prefer desktop apps over other types","lastModifiedDate":"2020-05-23"},{"lineNumber":287,"author":{"gitId":"-"},"content":"* can type fast","lastModifiedDate":"2020-05-23"},{"lineNumber":288,"author":{"gitId":"-"},"content":"* prefers typing to mouse interactions","lastModifiedDate":"2020-05-26"},{"lineNumber":289,"author":{"gitId":"-"},"content":"* is reasonably comfortable using CLI apps","lastModifiedDate":"2020-05-23"},{"lineNumber":290,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":291,"author":{"gitId":"lowkangn"},"content":"**Value proposition**: manage events and event participants faster than a typical mouse/GUI driven app","lastModifiedDate":"2021-09-18"},{"lineNumber":292,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":293,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":294,"author":{"gitId":"-"},"content":"### User stories","lastModifiedDate":"2020-06-07"},{"lineNumber":295,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":296,"author":{"gitId":"-"},"content":"Priorities: High (must have) - `* * *`, Medium (nice to have) - `* *`, Low (unlikely to have) - `*`","lastModifiedDate":"2020-05-23"},{"lineNumber":297,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":298,"author":{"gitId":"-"},"content":"| Priority | As a …​                                    | I want to …​                     | So that I can…​                                                          |","lastModifiedDate":"2020-05-23"},{"lineNumber":299,"author":{"gitId":"lowkangn"},"content":"| -------- | ------------------------------------------- | ---------------------------------- | ------------------------------------------------------------------------------ |","lastModifiedDate":"2021-09-18"},{"lineNumber":300,"author":{"gitId":"lowkangn"},"content":"| `* * *`  | Event organiser                             | add an upcoming event to my list   | keep track of the details of all events I will be organising                   |","lastModifiedDate":"2021-09-18"},{"lineNumber":301,"author":{"gitId":"lowkangn"},"content":"| `* * *`  | Event organiser                             | add a participant to an event      | keep track of the participants for an event                                    |","lastModifiedDate":"2021-09-18"},{"lineNumber":302,"author":{"gitId":"lowkangn"},"content":"| `* * *`  | Event organiser with many concluded events  | delete events from my list         | keep my list of events tidy                                                    |","lastModifiedDate":"2021-09-18"},{"lineNumber":303,"author":{"gitId":"lowkangn"},"content":"| `* * *`  | Event organiser                             | remove a participant from an event | maintain an accurate list of participants attending the event                  |","lastModifiedDate":"2021-09-18"},{"lineNumber":304,"author":{"gitId":"lowkangn"},"content":"| `* * *`  | Event organiser that has concluded an event | mark the event as done             | safely ignore events in my list that have already passed                       |","lastModifiedDate":"2021-09-18"},{"lineNumber":305,"author":{"gitId":"lowkangn"},"content":"| `* *`    | Event organiser with many events            | sort events by date and time       | keep track of which events occur when and prepare accordingly                  |","lastModifiedDate":"2021-09-18"},{"lineNumber":306,"author":{"gitId":"lowkangn"},"content":"| `*`      | Event organiser with many participants      | find a participant by name         | I can contact the participant to inform him of updates or changes to the event |","lastModifiedDate":"2021-09-22"},{"lineNumber":307,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":308,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":309,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":310,"author":{"gitId":"-"},"content":"### Use cases","lastModifiedDate":"2020-06-07"},{"lineNumber":311,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":312,"author":{"gitId":"ntwbruce"},"content":"(For all use cases below, the **System** is `Managera` and the **Actor** is an `Event Organiser`, unless specified otherwise)","lastModifiedDate":"2021-09-20"},{"lineNumber":313,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":314,"author":{"gitId":"ntwbruce"},"content":"**Use case: UC01 - Add an Event**","lastModifiedDate":"2021-09-20"},{"lineNumber":315,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":316,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2020-05-23"},{"lineNumber":317,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":318,"author":{"gitId":"ntwbruce"},"content":"1.  Event Organiser requests to add an Event, specifying the name and date of the Event.","lastModifiedDate":"2021-09-20"},{"lineNumber":319,"author":{"gitId":"ntwbruce"},"content":"2.  Managera adds the new Event with the given name and date to its Event list.","lastModifiedDate":"2021-09-20"},{"lineNumber":320,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":321,"author":{"gitId":"-"},"content":"    Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":322,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":323,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2020-05-23"},{"lineNumber":324,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":325,"author":{"gitId":"ntwbruce"},"content":"* 1a. Event Organiser omits name and/or date parameters required for adding an Event.","lastModifiedDate":"2021-09-22"},{"lineNumber":326,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":327,"author":{"gitId":"ntwbruce"},"content":"    * 1a1. Managera shows an error message citing missing parameters.","lastModifiedDate":"2021-09-20"},{"lineNumber":328,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":329,"author":{"gitId":"ntwbruce"},"content":"      Use case resumes at step 1.","lastModifiedDate":"2021-09-20"},{"lineNumber":330,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":331,"author":{"gitId":"ntwbruce"},"content":"* 1b. Event Organiser provides an Event time in addition to name and date.","lastModifiedDate":"2021-09-20"},{"lineNumber":332,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":333,"author":{"gitId":"ntwbruce"},"content":"    * 1b1. Managera adds the new Event with the given name, date and time to its Event list.","lastModifiedDate":"2021-09-20"},{"lineNumber":334,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":335,"author":{"gitId":"-"},"content":"      Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":336,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":337,"author":{"gitId":"ntwbruce"},"content":"**Use case: UC02 - Add Participant to Event**","lastModifiedDate":"2021-09-22"},{"lineNumber":338,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":339,"author":{"gitId":"ntwbruce"},"content":"Preconditions: At least one Event and one Participant have been added to Managera.","lastModifiedDate":"2021-09-22"},{"lineNumber":340,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":341,"author":{"gitId":"ntwbruce"},"content":"**MSS**","lastModifiedDate":"2021-09-22"},{"lineNumber":342,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":343,"author":{"gitId":"ntwbruce"},"content":"1.  Event Organiser requests to add a Participant to an Event, specifying the Event\u0027s name and Participant\u0027s ID.","lastModifiedDate":"2021-09-22"},{"lineNumber":344,"author":{"gitId":"ntwbruce"},"content":"2.  Managera adds the Participant with the specified ID to the specified Event.","lastModifiedDate":"2021-09-22"},{"lineNumber":345,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":346,"author":{"gitId":"ntwbruce"},"content":"    Use case ends.","lastModifiedDate":"2021-09-22"},{"lineNumber":347,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":348,"author":{"gitId":"ntwbruce"},"content":"**Extensions**","lastModifiedDate":"2021-09-22"},{"lineNumber":349,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":350,"author":{"gitId":"ntwbruce"},"content":"* 1a. Event Organiser omits parameters required for adding a Participant to an Event.","lastModifiedDate":"2021-09-22"},{"lineNumber":351,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":352,"author":{"gitId":"ntwbruce"},"content":"    * 1a1. Managera shows an error message citing missing parameters.","lastModifiedDate":"2021-09-22"},{"lineNumber":353,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":354,"author":{"gitId":"ntwbruce"},"content":"      Use case resumes at step 1.","lastModifiedDate":"2021-09-22"},{"lineNumber":355,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":356,"author":{"gitId":"ntwbruce"},"content":"* 1b. Event Organiser provides an invalid Participant ID.","lastModifiedDate":"2021-09-22"},{"lineNumber":357,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":358,"author":{"gitId":"ntwbruce"},"content":"    * 1b1. Managera shows an error message stating that the given ID does not correspond to an existing Participant.","lastModifiedDate":"2021-09-22"},{"lineNumber":359,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":360,"author":{"gitId":"ntwbruce"},"content":"      Use case resumes at step 1.","lastModifiedDate":"2021-09-22"},{"lineNumber":361,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":362,"author":{"gitId":"ntwbruce"},"content":"* 1c. Event Organiser provides an invalid Event name.","lastModifiedDate":"2021-09-22"},{"lineNumber":363,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":364,"author":{"gitId":"ntwbruce"},"content":"    * 1c1. Managera shows an error message stating that the given name does not correspond to an existing Event.","lastModifiedDate":"2021-09-22"},{"lineNumber":365,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":366,"author":{"gitId":"ntwbruce"},"content":"      Use case resumes at step 1.","lastModifiedDate":"2021-09-22"},{"lineNumber":367,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":368,"author":{"gitId":"ntwbruce"},"content":"**Use case: UC03 - Remove an Event**","lastModifiedDate":"2021-09-22"},{"lineNumber":369,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":370,"author":{"gitId":"ntwbruce"},"content":"Preconditions: At least one Event has been added to Managera.","lastModifiedDate":"2021-09-22"},{"lineNumber":371,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":372,"author":{"gitId":"ntwbruce"},"content":"**MSS**","lastModifiedDate":"2021-09-20"},{"lineNumber":373,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":374,"author":{"gitId":"ntwbruce"},"content":"1.  Event Organiser requests to remove an Event, specifying the name of the Event.","lastModifiedDate":"2021-09-20"},{"lineNumber":375,"author":{"gitId":"ntwbruce"},"content":"2.  Managera removes the Event with the given name from its Event list.","lastModifiedDate":"2021-09-20"},{"lineNumber":376,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":377,"author":{"gitId":"ntwbruce"},"content":"    Use case ends.","lastModifiedDate":"2021-09-20"},{"lineNumber":378,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":379,"author":{"gitId":"ntwbruce"},"content":"**Extensions**","lastModifiedDate":"2021-09-20"},{"lineNumber":380,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":381,"author":{"gitId":"ntwbruce"},"content":"* 1a. Event Organiser omits name parameter required for removing an Event.","lastModifiedDate":"2021-09-22"},{"lineNumber":382,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":383,"author":{"gitId":"ntwbruce"},"content":"    * 1a1. Managera shows an error message citing missing parameter.","lastModifiedDate":"2021-09-20"},{"lineNumber":384,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":385,"author":{"gitId":"ntwbruce"},"content":"      Use case resumes at step 1.","lastModifiedDate":"2021-09-20"},{"lineNumber":386,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":387,"author":{"gitId":"ntwbruce"},"content":"* 1b. Event Organiser provides an invalid Event name.","lastModifiedDate":"2021-09-22"},{"lineNumber":388,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":389,"author":{"gitId":"ntwbruce"},"content":"    * 1b1. Managera shows an error message stating that the given name does not correspond to an existing Event.","lastModifiedDate":"2021-09-20"},{"lineNumber":390,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":391,"author":{"gitId":"ntwbruce"},"content":"      Use case resumes at step 1.","lastModifiedDate":"2021-09-20"},{"lineNumber":392,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":393,"author":{"gitId":"ntwbruce"},"content":"* 1c. Event Organiser provides an Event date and time in addition to name.","lastModifiedDate":"2021-09-20"},{"lineNumber":394,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":395,"author":{"gitId":"ntwbruce"},"content":"    * 1c1. Managera removes the new Event with the given name, date and time to its Event list.","lastModifiedDate":"2021-09-22"},{"lineNumber":396,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":397,"author":{"gitId":"ntwbruce"},"content":"      Use case ends.","lastModifiedDate":"2021-09-22"},{"lineNumber":398,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":399,"author":{"gitId":"ntwbruce"},"content":"**Use case: UC04 - Remove Participant from Event**","lastModifiedDate":"2021-09-22"},{"lineNumber":400,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":401,"author":{"gitId":"ntwbruce"},"content":"Preconditions: At least one Event and one Participant have been added to Managera. ","lastModifiedDate":"2021-09-22"},{"lineNumber":402,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":403,"author":{"gitId":"ntwbruce"},"content":"**MSS**","lastModifiedDate":"2021-09-22"},{"lineNumber":404,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":405,"author":{"gitId":"ntwbruce"},"content":"1.  Event Organiser requests to remove a Participant from an Event, specifying the Event\u0027s name and Participant\u0027s ID.","lastModifiedDate":"2021-09-22"},{"lineNumber":406,"author":{"gitId":"ntwbruce"},"content":"2.  Managera removes the Participant with the specified ID from the specified Event.","lastModifiedDate":"2021-09-22"},{"lineNumber":407,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":408,"author":{"gitId":"ntwbruce"},"content":"    Use case ends.","lastModifiedDate":"2021-09-20"},{"lineNumber":409,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":410,"author":{"gitId":"ntwbruce"},"content":"**Extensions**","lastModifiedDate":"2021-09-22"},{"lineNumber":411,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":412,"author":{"gitId":"ntwbruce"},"content":"* 1a. Event Organiser provides invalid Participant ID.","lastModifiedDate":"2021-09-22"},{"lineNumber":413,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":414,"author":{"gitId":"ntwbruce"},"content":"    * 1a1. Managera shows an error message stating that the given ID does not correspond to an existing Participant.","lastModifiedDate":"2021-09-22"},{"lineNumber":415,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":416,"author":{"gitId":"ntwbruce"},"content":"      Use case resumes at step 1.","lastModifiedDate":"2021-09-22"},{"lineNumber":417,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":418,"author":{"gitId":"ntwbruce"},"content":"* 1b. Event Organiser provides invalid Event name.","lastModifiedDate":"2021-09-22"},{"lineNumber":419,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":420,"author":{"gitId":"ntwbruce"},"content":"    * 1b1. Managera shows an error message stating that the given name does not correspond to an existing Event.","lastModifiedDate":"2021-09-22"},{"lineNumber":421,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":422,"author":{"gitId":"ntwbruce"},"content":"      Use case resumes at step 1.","lastModifiedDate":"2021-09-22"},{"lineNumber":423,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":424,"author":{"gitId":"ntwbruce"},"content":"* 1c. Event Organiser provides valid Event name and participant ID, but corresponding Participant is not in the corresponding Event\u0027s participant list.","lastModifiedDate":"2021-09-22"},{"lineNumber":425,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":426,"author":{"gitId":"ntwbruce"},"content":"    * 1c1. Managera shows an error message stating that the Participant is not taking part in the given Event.","lastModifiedDate":"2021-09-22"},{"lineNumber":427,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":428,"author":{"gitId":"ntwbruce"},"content":"      Use case resumes at step 1.","lastModifiedDate":"2021-09-22"},{"lineNumber":429,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":430,"author":{"gitId":"ntwbruce"},"content":"**Use case: UC05 - Mark Event as done**","lastModifiedDate":"2021-09-22"},{"lineNumber":431,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":432,"author":{"gitId":"ntwbruce"},"content":"Preconditions: At least one Event has been added to Managera.","lastModifiedDate":"2021-09-22"},{"lineNumber":433,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":434,"author":{"gitId":"ntwbruce"},"content":"**MSS**","lastModifiedDate":"2021-09-20"},{"lineNumber":435,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":436,"author":{"gitId":"ntwbruce"},"content":"1.  Event Organiser requests to mark an Event as done, specifying the name of the Event.","lastModifiedDate":"2021-09-20"},{"lineNumber":437,"author":{"gitId":"ntwbruce"},"content":"2.  Managera marks the Event with the given name in its Event list as done.","lastModifiedDate":"2021-09-20"},{"lineNumber":438,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":439,"author":{"gitId":"ntwbruce"},"content":"    Use case ends.","lastModifiedDate":"2021-09-20"},{"lineNumber":440,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":441,"author":{"gitId":"ntwbruce"},"content":"**Extensions**","lastModifiedDate":"2021-09-20"},{"lineNumber":442,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":443,"author":{"gitId":"ntwbruce"},"content":"* 1a. Event Organiser omits name parameter required for marking an Event as done.","lastModifiedDate":"2021-09-22"},{"lineNumber":444,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":445,"author":{"gitId":"ntwbruce"},"content":"    * 1a1. Managera shows an error message citing missing parameter.","lastModifiedDate":"2021-09-20"},{"lineNumber":446,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":447,"author":{"gitId":"ntwbruce"},"content":"      Use case resumes at step 1.","lastModifiedDate":"2021-09-20"},{"lineNumber":448,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":449,"author":{"gitId":"ntwbruce"},"content":"* 1b. Event Organiser provides invalid Event name.","lastModifiedDate":"2021-09-20"},{"lineNumber":450,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":451,"author":{"gitId":"ntwbruce"},"content":"    * 1b1. Managera shows an error message stating that the given name does not correspond to an existing Event.","lastModifiedDate":"2021-09-20"},{"lineNumber":452,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":453,"author":{"gitId":"ntwbruce"},"content":"      Use case resumes at step 1.","lastModifiedDate":"2021-09-20"},{"lineNumber":454,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":455,"author":{"gitId":"ntwbruce"},"content":"* 1c. Event Organiser provides an Event date and time in addition to name.","lastModifiedDate":"2021-09-20"},{"lineNumber":456,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":457,"author":{"gitId":"ntwbruce"},"content":"    * 1c1. Managera marks the Event with the given name, date and time in its Event list as done.","lastModifiedDate":"2021-09-20"},{"lineNumber":458,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":459,"author":{"gitId":"ntwbruce"},"content":"      Use case ends.","lastModifiedDate":"2021-09-20"},{"lineNumber":460,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":461,"author":{"gitId":"ntwbruce"},"content":"**Use case: UC06 - Sort Events by time**","lastModifiedDate":"2021-09-22"},{"lineNumber":462,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":463,"author":{"gitId":"ntwbruce"},"content":"Preconditions: At least one Event has been added to Managera.","lastModifiedDate":"2021-09-22"},{"lineNumber":464,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":465,"author":{"gitId":"ntwbruce"},"content":"**MSS**","lastModifiedDate":"2021-09-20"},{"lineNumber":466,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":467,"author":{"gitId":"ntwbruce"},"content":"1.  Event Organiser requests to sort the current list of Events.","lastModifiedDate":"2021-09-20"},{"lineNumber":468,"author":{"gitId":"ntwbruce"},"content":"2.  Managera sorts the list of Events in chronological order and displays the list.","lastModifiedDate":"2021-09-20"},{"lineNumber":469,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":470,"author":{"gitId":"ntwbruce"},"content":"    Use case ends.","lastModifiedDate":"2021-09-20"},{"lineNumber":471,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":472,"author":{"gitId":"ntwbruce"},"content":"**Use case: UC07 - Find Participant and access details**","lastModifiedDate":"2021-09-22"},{"lineNumber":473,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":474,"author":{"gitId":"ntwbruce"},"content":"**Preconditions: At least one Participant has been added to Managera.**","lastModifiedDate":"2021-09-22"},{"lineNumber":475,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":476,"author":{"gitId":"ntwbruce"},"content":"**MSS**","lastModifiedDate":"2021-09-20"},{"lineNumber":477,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":478,"author":{"gitId":"ntwbruce"},"content":"1.  Event Organiser requests Participant details, specifying a Participant name.","lastModifiedDate":"2021-09-22"},{"lineNumber":479,"author":{"gitId":"ntwbruce"},"content":"2.  Managera displays the details of all Participants with the given name.","lastModifiedDate":"2021-09-22"},{"lineNumber":480,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":481,"author":{"gitId":"ntwbruce"},"content":"    Use case ends.","lastModifiedDate":"2021-09-20"},{"lineNumber":482,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":483,"author":{"gitId":"ntwbruce"},"content":"**Use case: UC08 - Filter Events by date**","lastModifiedDate":"2021-09-22"},{"lineNumber":484,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":485,"author":{"gitId":"ntwbruce"},"content":"Preconditions: At least one Event has been added to Managera.","lastModifiedDate":"2021-09-22"},{"lineNumber":486,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":487,"author":{"gitId":"ntwbruce"},"content":"**MSS**","lastModifiedDate":"2021-09-20"},{"lineNumber":488,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":489,"author":{"gitId":"ntwbruce"},"content":"1.  Event Organiser requests to filter Events from the current list of Events that take place on a specified date.","lastModifiedDate":"2021-09-22"},{"lineNumber":490,"author":{"gitId":"ntwbruce"},"content":"2.  Managera finds the Events that take place on the given date and displays them in a list.","lastModifiedDate":"2021-09-22"},{"lineNumber":491,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":492,"author":{"gitId":"ntwbruce"},"content":"    Use case ends.","lastModifiedDate":"2021-09-20"},{"lineNumber":493,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":494,"author":{"gitId":"ntwbruce"},"content":"**Extensions**","lastModifiedDate":"2021-09-20"},{"lineNumber":495,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":496,"author":{"gitId":"ntwbruce"},"content":"* 1a. Event Organiser omits date parameter required for filtering Events.","lastModifiedDate":"2021-09-22"},{"lineNumber":497,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":498,"author":{"gitId":"ntwbruce"},"content":"    * 1a1. Managera shows an error message citing missing parameter.","lastModifiedDate":"2021-09-22"},{"lineNumber":499,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":500,"author":{"gitId":"ntwbruce"},"content":"      Use case resumes at step 1.","lastModifiedDate":"2021-09-22"},{"lineNumber":501,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":502,"author":{"gitId":"ntwbruce"},"content":"**Use case: UC09 - Show Event details**","lastModifiedDate":"2021-09-22"},{"lineNumber":503,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":504,"author":{"gitId":"ntwbruce"},"content":"Preconditions: At least one Event has been added to Managera.","lastModifiedDate":"2021-09-22"},{"lineNumber":505,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":506,"author":{"gitId":"ntwbruce"},"content":"**MSS**","lastModifiedDate":"2021-09-20"},{"lineNumber":507,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":508,"author":{"gitId":"ntwbruce"},"content":"1.  Event Organiser requests Event details, specifying an Event name.","lastModifiedDate":"2021-09-22"},{"lineNumber":509,"author":{"gitId":"ntwbruce"},"content":"2.  Managera displays the details of the Event with the given name.","lastModifiedDate":"2021-09-22"},{"lineNumber":510,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":511,"author":{"gitId":"ntwbruce"},"content":"    Use case ends.","lastModifiedDate":"2021-09-20"},{"lineNumber":512,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":513,"author":{"gitId":"ntwbruce"},"content":"**Extensions**","lastModifiedDate":"2021-09-20"},{"lineNumber":514,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":515,"author":{"gitId":"ntwbruce"},"content":"* 1a. Event Organiser omits name parameter required for showing Event details.","lastModifiedDate":"2021-09-22"},{"lineNumber":516,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":517,"author":{"gitId":"ntwbruce"},"content":"    * 1a1. Managera shows an error message citing missing parameter.","lastModifiedDate":"2021-09-22"},{"lineNumber":518,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":519,"author":{"gitId":"ntwbruce"},"content":"      Use case resumes at step 1.","lastModifiedDate":"2021-09-22"},{"lineNumber":520,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":521,"author":{"gitId":"ntwbruce"},"content":"* 1b. Event Organiser provides invalid Event name.","lastModifiedDate":"2021-09-20"},{"lineNumber":522,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":523,"author":{"gitId":"ntwbruce"},"content":"    * 1b1. Managera shows an error message stating that the given name does not correspond to an existing Event.","lastModifiedDate":"2021-09-20"},{"lineNumber":524,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":525,"author":{"gitId":"ntwbruce"},"content":"      Use case resumes at step 1.","lastModifiedDate":"2021-09-22"},{"lineNumber":526,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":527,"author":{"gitId":"ntwbruce"},"content":"**Use case: UC10 - Show Event Participants**","lastModifiedDate":"2021-09-22"},{"lineNumber":528,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":529,"author":{"gitId":"ntwbruce"},"content":"Preconditions: At least one Event has been added to Managera.","lastModifiedDate":"2021-09-22"},{"lineNumber":530,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":531,"author":{"gitId":"ntwbruce"},"content":"**MSS**","lastModifiedDate":"2021-09-20"},{"lineNumber":532,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":533,"author":{"gitId":"ntwbruce"},"content":"1.  Event Organiser requests a list of Event Participants, specifying an Event name.","lastModifiedDate":"2021-09-22"},{"lineNumber":534,"author":{"gitId":"ntwbruce"},"content":"2.  Managera displays the list of Participants of the Event with the given name.","lastModifiedDate":"2021-09-22"},{"lineNumber":535,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":536,"author":{"gitId":"ntwbruce"},"content":"    Use case ends.","lastModifiedDate":"2021-09-20"},{"lineNumber":537,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":538,"author":{"gitId":"ntwbruce"},"content":"**Extensions**","lastModifiedDate":"2021-09-22"},{"lineNumber":539,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":540,"author":{"gitId":"ntwbruce"},"content":"* 1a. Event Organiser omits name parameter required for show Event participants.","lastModifiedDate":"2021-09-22"},{"lineNumber":541,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":542,"author":{"gitId":"ntwbruce"},"content":"    * 1a1. Managera shows an error message citing missing parameter.","lastModifiedDate":"2021-09-22"},{"lineNumber":543,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":544,"author":{"gitId":"ntwbruce"},"content":"      Use case resumes at step 1.","lastModifiedDate":"2021-09-22"},{"lineNumber":545,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":546,"author":{"gitId":"ntwbruce"},"content":"* 1b. Event Organiser provides invalid Event name.","lastModifiedDate":"2021-09-22"},{"lineNumber":547,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":548,"author":{"gitId":"ntwbruce"},"content":"    * 1b1. Managera shows an error message stating that the given name does not correspond to an existing Event.","lastModifiedDate":"2021-09-22"},{"lineNumber":549,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":550,"author":{"gitId":"ntwbruce"},"content":"      Use case resumes at step 1.","lastModifiedDate":"2021-09-22"},{"lineNumber":551,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":552,"author":{"gitId":"-"},"content":"### Non-Functional Requirements","lastModifiedDate":"2020-05-23"},{"lineNumber":553,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":554,"author":{"gitId":"-"},"content":"1.  Should work on any _mainstream OS_ as long as it has Java `11` or above installed.","lastModifiedDate":"2020-05-23"},{"lineNumber":555,"author":{"gitId":"-"},"content":"2.  Should be able to hold up to 1000 persons without a noticeable sluggishness in performance for typical usage. ","lastModifiedDate":"2020-05-23"},{"lineNumber":556,"author":{"gitId":"lowkangn"},"content":"3.  Should be able to hold up to 100 events without a noticeable sluggishness in performance for typical usage.","lastModifiedDate":"2021-09-22"},{"lineNumber":557,"author":{"gitId":"lowkangn"},"content":"4.  A user with above average typing speed for regular English text (i.e. not code, not system admin commands) should be able to accomplish most of the tasks faster using commands than using the mouse.","lastModifiedDate":"2021-09-22"},{"lineNumber":558,"author":{"gitId":"lowkangn"},"content":"5.  Should work without having to use an installer or compiler.","lastModifiedDate":"2021-09-22"},{"lineNumber":559,"author":{"gitId":"lowkangn"},"content":"6.  Should work without requiring an internet connection.","lastModifiedDate":"2021-09-22"},{"lineNumber":560,"author":{"gitId":"lowkangn"},"content":"7.  Saved data should be kept in a single file to allow for easy transfer to a different device.","lastModifiedDate":"2021-09-22"},{"lineNumber":561,"author":{"gitId":"lowkangn"},"content":"8.  The system should respond within two seconds.","lastModifiedDate":"2021-09-22"},{"lineNumber":562,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":563,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":564,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":565,"author":{"gitId":"-"},"content":"### Glossary","lastModifiedDate":"2020-05-23"},{"lineNumber":566,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":567,"author":{"gitId":"-"},"content":"* **Mainstream OS**: Windows, Linux, Unix, OS-X","lastModifiedDate":"2020-05-23"},{"lineNumber":568,"author":{"gitId":"lowkangn"},"content":"* **Command Line Interface (CLI)**: A CLI is a text-based interface that processes commands to a computer program in the form of lines of text.","lastModifiedDate":"2021-09-22"},{"lineNumber":569,"author":{"gitId":"lowkangn"},"content":"* **Graphical User Interface (GUI)**: A GUI is a form of user interface through which users interact with electronic devices via visual indicator representations.","lastModifiedDate":"2021-09-22"},{"lineNumber":570,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":571,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":572,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":573,"author":{"gitId":"-"},"content":"## **Appendix: Instructions for manual testing**","lastModifiedDate":"2020-05-23"},{"lineNumber":574,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":575,"author":{"gitId":"-"},"content":"Given below are instructions to test the app manually.","lastModifiedDate":"2020-05-23"},{"lineNumber":576,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":577,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** These instructions only provide a starting point for testers to work on;","lastModifiedDate":"2020-05-23"},{"lineNumber":578,"author":{"gitId":"-"},"content":"testers are expected to do more *exploratory* testing.","lastModifiedDate":"2020-05-23"},{"lineNumber":579,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":580,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":581,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":582,"author":{"gitId":"-"},"content":"### Launch and shutdown","lastModifiedDate":"2020-05-23"},{"lineNumber":583,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":584,"author":{"gitId":"-"},"content":"1. Initial launch","lastModifiedDate":"2020-05-23"},{"lineNumber":585,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":586,"author":{"gitId":"-"},"content":"   1. Download the jar file and copy into an empty folder","lastModifiedDate":"2020-05-23"},{"lineNumber":587,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":588,"author":{"gitId":"-"},"content":"   1. Double-click the jar file Expected: Shows the GUI with a set of sample contacts. The window size may not be optimum.","lastModifiedDate":"2020-05-23"},{"lineNumber":589,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":590,"author":{"gitId":"-"},"content":"1. Saving window preferences","lastModifiedDate":"2020-05-23"},{"lineNumber":591,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":592,"author":{"gitId":"-"},"content":"   1. Resize the window to an optimum size. Move the window to a different location. Close the window.","lastModifiedDate":"2020-05-23"},{"lineNumber":593,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":594,"author":{"gitId":"-"},"content":"   1. Re-launch the app by double-clicking the jar file.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":595,"author":{"gitId":"-"},"content":"       Expected: The most recent window size and location is retained.","lastModifiedDate":"2020-05-23"},{"lineNumber":596,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":597,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":598,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":599,"author":{"gitId":"-"},"content":"### Deleting a person","lastModifiedDate":"2020-05-23"},{"lineNumber":600,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":601,"author":{"gitId":"-"},"content":"1. Deleting a person while all persons are being shown","lastModifiedDate":"2020-05-23"},{"lineNumber":602,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":603,"author":{"gitId":"-"},"content":"   1. Prerequisites: List all persons using the `list` command. Multiple persons in the list.","lastModifiedDate":"2020-05-23"},{"lineNumber":604,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":605,"author":{"gitId":"-"},"content":"   1. Test case: `delete 1`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":606,"author":{"gitId":"-"},"content":"      Expected: First contact is deleted from the list. Details of the deleted contact shown in the status message. Timestamp in the status bar is updated.","lastModifiedDate":"2020-05-23"},{"lineNumber":607,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":608,"author":{"gitId":"-"},"content":"   1. Test case: `delete 0`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":609,"author":{"gitId":"-"},"content":"      Expected: No person is deleted. Error details shown in the status message. Status bar remains the same.","lastModifiedDate":"2020-05-23"},{"lineNumber":610,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":611,"author":{"gitId":"-"},"content":"   1. Other incorrect delete commands to try: `delete`, `delete x`, `...` (where x is larger than the list size)\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":612,"author":{"gitId":"-"},"content":"      Expected: Similar to previous.","lastModifiedDate":"2020-05-23"},{"lineNumber":613,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":614,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":615,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":616,"author":{"gitId":"-"},"content":"### Saving data","lastModifiedDate":"2020-05-23"},{"lineNumber":617,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":618,"author":{"gitId":"-"},"content":"1. Dealing with missing/corrupted data files","lastModifiedDate":"2020-05-23"},{"lineNumber":619,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":620,"author":{"gitId":"-"},"content":"   1. _{explain how to simulate a missing/corrupted file, and the expected behavior}_","lastModifiedDate":"2020-05-23"},{"lineNumber":621,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":622,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"ntwbruce":245,"-":359,"lowkangn":18}},{"path":"docs/UserGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: User Guide","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"ntwbruce"},"content":"Managera is a **desktop app that provides event organisers with a convenient method of keeping track of upcoming events and the details of their participants and collaborators**. It does not handle communication between the event organiser and the participants or collaborators.","lastModifiedDate":"2021-09-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"ntwbruce"},"content":"## Table of Contents","lastModifiedDate":"2021-09-22"},{"lineNumber":9,"author":{"gitId":"ntwbruce"},"content":"- [**Quick start**](#quick-start)","lastModifiedDate":"2021-09-22"},{"lineNumber":10,"author":{"gitId":"ntwbruce"},"content":"- [**Features**](#features)","lastModifiedDate":"2021-09-22"},{"lineNumber":11,"author":{"gitId":"ntwbruce"},"content":"    * [Viewing help : `help`](#viewing-help--help)","lastModifiedDate":"2021-09-22"},{"lineNumber":12,"author":{"gitId":"ntwbruce"},"content":"    * [Adding a Participant: `add`](#adding-a-participant-add)","lastModifiedDate":"2021-09-24"},{"lineNumber":13,"author":{"gitId":"ntwbruce"},"content":"    * [Listing all Participants: `list`](#listing-all-participants--list)","lastModifiedDate":"2021-09-24"},{"lineNumber":14,"author":{"gitId":"ntwbruce"},"content":"    * [Editing a Participant: `edit`](#editing-a-participant--edit)","lastModifiedDate":"2021-09-24"},{"lineNumber":15,"author":{"gitId":"ntwbruce"},"content":"    * [Locating Participants by name: `find`](#locating-participants-by-name-find)","lastModifiedDate":"2021-09-24"},{"lineNumber":16,"author":{"gitId":"ntwbruce"},"content":"    * [Deleting a Participant: `delete`](#deleting-a-participant--delete)","lastModifiedDate":"2021-09-24"},{"lineNumber":17,"author":{"gitId":"ntwbruce"},"content":"    * [Clearing all Participants: `clear`](#clearing-all-participants--clear)","lastModifiedDate":"2021-09-24"},{"lineNumber":18,"author":{"gitId":"ntwbruce"},"content":"    * [Adding an event: `addEvent`](#adding-an-event-addevent)","lastModifiedDate":"2021-09-22"},{"lineNumber":19,"author":{"gitId":"ntwbruce"},"content":"    * [Removing an event: `removeEvent`](#removing-an-event--removeevent)","lastModifiedDate":"2021-09-22"},{"lineNumber":20,"author":{"gitId":"ntwbruce"},"content":"    * [Mark an Event as done: `doneEvent`](#mark-an-event-as-done-doneevent)","lastModifiedDate":"2021-09-22"},{"lineNumber":21,"author":{"gitId":"ntwbruce"},"content":"    * [Sort Events: `sortEvents`](#sort-events-sortevents)","lastModifiedDate":"2021-09-22"},{"lineNumber":22,"author":{"gitId":"ntwbruce"},"content":"    * [Filter Events: `filterEvents`](#filter-events-filterevents)","lastModifiedDate":"2021-09-22"},{"lineNumber":23,"author":{"gitId":"ntwbruce"},"content":"    * [Add Participant to Event: `addParticipant`](#add-participant-to-event-addparticipant)","lastModifiedDate":"2021-09-22"},{"lineNumber":24,"author":{"gitId":"ntwbruce"},"content":"    * [Remove Participant from Event: `removeParticipant`](#remove-participant-from-event-removeparticipant)","lastModifiedDate":"2021-09-22"},{"lineNumber":25,"author":{"gitId":"ntwbruce"},"content":"    * [Show Event details: `showDetails`](#show-event-details-showdetails)","lastModifiedDate":"2021-09-22"},{"lineNumber":26,"author":{"gitId":"ntwbruce"},"content":"    * [Show Event Participants: `showParticipants`](#show-event-participants-showparticipants)","lastModifiedDate":"2021-09-22"},{"lineNumber":27,"author":{"gitId":"ntwbruce"},"content":"    * [Find Participant and access details: `findParticipant`](#find-participant-and-access-details-findparticipant)","lastModifiedDate":"2021-09-22"},{"lineNumber":28,"author":{"gitId":"ntwbruce"},"content":"    * [Exiting the program: `exit`](#exiting-the-program--exit)","lastModifiedDate":"2021-09-24"},{"lineNumber":29,"author":{"gitId":"ntwbruce"},"content":"    * [Saving the data](#saving-the-data)","lastModifiedDate":"2021-09-24"},{"lineNumber":30,"author":{"gitId":"ntwbruce"},"content":"    * [Editing the data file](#editing-the-data-file)","lastModifiedDate":"2021-09-24"},{"lineNumber":31,"author":{"gitId":"ntwbruce"},"content":"    * [Archiving data files `[coming in v2.0]`](#archiving-data-files-coming-in-v20)","lastModifiedDate":"2021-09-24"},{"lineNumber":32,"author":{"gitId":"ntwbruce"},"content":"- [**FAQ**](#faq)","lastModifiedDate":"2021-09-22"},{"lineNumber":33,"author":{"gitId":"ntwbruce"},"content":"- [**Command summary**](#command-summary)","lastModifiedDate":"2021-09-22"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"## Quick start","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"1. Ensure you have Java `11` or above installed in your Computer.","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"ntwbruce"},"content":"1. Download the latest `managera.jar` from [here](https://github.com/AY2122S1-CS2103T-T10-2/tp/releases).","lastModifiedDate":"2021-09-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"ntwbruce"},"content":"1. Copy the file to the folder you want to use as the _home folder_ for Managera.","lastModifiedDate":"2021-09-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"1. Double-click the file to start the app. The GUI similar to the below should appear in a few seconds. Note how the app contains some sample data.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"   ![Ui](images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"ntwbruce"},"content":"1. Type the command in the command box and press Enter to execute it. e.g. typing **`help`** and pressing Enter will open the help window. \u003cbr\u003e","lastModifiedDate":"2021-09-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"   Some example commands you can try:","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"ntwbruce"},"content":"   * **`list`** : Lists all Participants.","lastModifiedDate":"2021-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"ntwbruce"},"content":"   * **`add`**`n/John Doe p/98765432 e/johnd@example.com a/John street, block 123, #01-01` : Adds a Participant named `John Doe` to Managera.","lastModifiedDate":"2021-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"ntwbruce"},"content":"   * **`delete`**`3` : Deletes the 3rd Participant shown in the current list.","lastModifiedDate":"2021-09-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"ntwbruce"},"content":"   * **`clear`** : Deletes all Participants.","lastModifiedDate":"2021-09-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"   * **`exit`** : Exits the app.","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     ","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"ntwbruce"},"content":"   * **`addEvent n/My First Event d/2021-01-01`** : Adds a new Event to the list called \u0027My First Event\u0027.","lastModifiedDate":"2021-09-24"},{"lineNumber":62,"author":{"gitId":"ntwbruce"},"content":"     ","lastModifiedDate":"2021-09-24"},{"lineNumber":63,"author":{"gitId":"ntwbruce"},"content":"   * **`findParticipant Arnold`** : Returns the details of Participants whose names include \u0027Arnold\u0027.","lastModifiedDate":"2021-09-24"},{"lineNumber":64,"author":{"gitId":"ntwbruce"},"content":"     ","lastModifiedDate":"2021-09-24"},{"lineNumber":65,"author":{"gitId":"ntwbruce"},"content":"   * **`sortEvents`** : Sorts the current list of Events in chronological order.","lastModifiedDate":"2021-09-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"1. Refer to the [Features](#features) below for details of each command.","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"## Features","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"**:information_source: Notes about the command format:**\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"* Words in `UPPER_CASE` are the parameters to be supplied by the user.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"ntwbruce"},"content":"  e.g. in `addEvent n/NAME d/DATE`, `n/NAME` and `d/DATE` are parameters which can be used as `addEvent n/CS2103T Final d/2021-11-23`.","lastModifiedDate":"2021-09-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"* Items in square brackets are optional.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"ntwbruce"},"content":"  e.g. `addEvent n/NAME d/DATE [t/TIME]` can be used as `addEvent n/CS2103T Final d/2021-11-23 t/1700` or as `addEvent n/CS2103T Final d/2021-11-23`.","lastModifiedDate":"2021-09-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"* Items with `…`​ after them can be used multiple times including zero times.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"* Parameters can be in any order.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"ntwbruce"},"content":"  e.g. if the command specifies `n/NAME d/DATE`, `d/DATE n/NAME` is also acceptable.","lastModifiedDate":"2021-09-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"ntwbruce"},"content":"* If a parameter is expected only once in the command, but you specified it multiple times, only the last occurrence of the parameter will be taken.\u003cbr\u003e","lastModifiedDate":"2021-09-24"},{"lineNumber":89,"author":{"gitId":"ntwbruce"},"content":"  e.g. if you specify `t/1700 t/1800`, only `t/1800` will be taken.","lastModifiedDate":"2021-09-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":91,"author":{"gitId":"ntwbruce"},"content":"* Extraneous parameters for commands that do not take in parameters (namely `help`, `list`, `clear`, `sortEvents` and `exit`) will be ignored.\u003cbr\u003e","lastModifiedDate":"2021-09-24"},{"lineNumber":92,"author":{"gitId":"ntwbruce"},"content":"  e.g. if the command specifies `sortEvents 123`, it will be interpreted as `sortEvents`.","lastModifiedDate":"2021-09-24"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-03"},{"lineNumber":94,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"### Viewing help : `help`","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"ntwbruce"},"content":"Shows a message explaining how to access the help page.","lastModifiedDate":"2021-09-24"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"![help message](images/helpMessage.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"Format: `help`","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"ntwbruce"},"content":"### Adding a Participant: `add`","lastModifiedDate":"2021-09-24"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"ntwbruce"},"content":"Adds a Participant to Managera.","lastModifiedDate":"2021-09-24"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"Format: `add n/NAME p/PHONE_NUMBER e/EMAIL a/ADDRESS [t/TAG]…​`","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Tip:**","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"ntwbruce"},"content":"A Participant can have any number of tags (including 0)","lastModifiedDate":"2021-09-24"},{"lineNumber":113,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"* `add n/John Doe p/98765432 e/johnd@example.com a/John street, block 123, #01-01`","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"* `add n/Betsy Crowe t/friend e/betsycrowe@example.com a/Newgate Prison p/1234567 t/criminal`","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"ntwbruce"},"content":"### Listing all Participants : `list`","lastModifiedDate":"2021-09-24"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"ntwbruce"},"content":"Shows a list of all Participants in Managera.","lastModifiedDate":"2021-09-24"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"Format: `list`","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"ntwbruce"},"content":"### Editing a Participant : `edit`","lastModifiedDate":"2021-09-24"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":127,"author":{"gitId":"ntwbruce"},"content":"Edits an existing Participant in Managera.","lastModifiedDate":"2021-09-24"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"Format: `edit INDEX [n/NAME] [p/PHONE] [e/EMAIL] [a/ADDRESS] [t/TAG]…​`","lastModifiedDate":"2020-05-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":131,"author":{"gitId":"ntwbruce"},"content":"* Edits the Participant at the specified `INDEX`. The index refers to the index number shown in the displayed Participant list. The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2021-09-24"},{"lineNumber":132,"author":{"gitId":"-"},"content":"* At least one of the optional fields must be provided.","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"* Existing values will be updated to the input values.","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"ntwbruce"},"content":"* When editing tags, the existing tags of the Participant will be removed i.e adding of tags is not cumulative.","lastModifiedDate":"2021-09-24"},{"lineNumber":135,"author":{"gitId":"ntwbruce"},"content":"* You can remove all the Participant’s tags by typing `t/` without","lastModifiedDate":"2021-09-24"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    specifying any tags after it.","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"ntwbruce"},"content":"*  `edit 1 p/91234567 e/johndoe@example.com` Edits the phone number and email address of the 1st Participant to be `91234567` and `johndoe@example.com` respectively.","lastModifiedDate":"2021-09-24"},{"lineNumber":140,"author":{"gitId":"ntwbruce"},"content":"*  `edit 2 n/Betsy Crower t/` Edits the name of the 2nd Participant to be `Betsy Crower` and clears all existing tags.","lastModifiedDate":"2021-09-24"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":142,"author":{"gitId":"ntwbruce"},"content":"### Locating Participants by name: `find`","lastModifiedDate":"2021-09-24"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"ntwbruce"},"content":"Finds Participant whose names contain any of the given keywords.","lastModifiedDate":"2021-09-24"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":"Format: `find KEYWORD [MORE_KEYWORDS]`","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"* The search is case-insensitive. e.g `hans` will match `Hans`","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"* The order of the keywords does not matter. e.g. `Hans Bo` will match `Bo Hans`","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"* Only the name is searched.","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"* Only full words will be matched e.g. `Han` will not match `Hans`","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"ntwbruce"},"content":"* Participants matching at least one keyword will be returned (i.e. `OR` search).","lastModifiedDate":"2021-09-24"},{"lineNumber":153,"author":{"gitId":"-"},"content":"  e.g. `Hans Bo` will return `Hans Gruber`, `Bo Yang`","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"* `find John` returns `john` and `John Doe`","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"* `find alex david` returns `Alex Yeoh`, `David Li`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"  ![result for \u0027find alex david\u0027](images/findAlexDavidResult.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"ntwbruce"},"content":"### Deleting a Participant : `delete`","lastModifiedDate":"2021-09-24"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"ntwbruce"},"content":"Deletes the specified Participant from Managera.","lastModifiedDate":"2021-09-24"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"Format: `delete INDEX`","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"ntwbruce"},"content":"* Deletes the Participant at the specified `INDEX`.","lastModifiedDate":"2021-09-24"},{"lineNumber":167,"author":{"gitId":"ntwbruce"},"content":"* The index refers to the index number shown in the displayed Participant list.","lastModifiedDate":"2021-09-24"},{"lineNumber":168,"author":{"gitId":"-"},"content":"* The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"ntwbruce"},"content":"* `list` followed by `delete 2` deletes the 2nd Participant on the current list.","lastModifiedDate":"2021-09-24"},{"lineNumber":172,"author":{"gitId":"ntwbruce"},"content":"* `find Betsy` followed by `delete 1` deletes the 1st Participant in the results of the `find` command. ","lastModifiedDate":"2021-09-24"},{"lineNumber":173,"author":{"gitId":"-"},"content":" ","lastModifiedDate":"2020-05-23"},{"lineNumber":174,"author":{"gitId":"ntwbruce"},"content":"### Clearing all Participants : `clear`","lastModifiedDate":"2021-09-24"},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"ntwbruce"},"content":"Clears all Participants from Managera.","lastModifiedDate":"2021-09-24"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":178,"author":{"gitId":"-"},"content":"Format: `clear`","lastModifiedDate":"2020-05-23"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":180,"author":{"gitId":"davelowqx"},"content":"### Adding an event: `addEvent`","lastModifiedDate":"2021-09-18"},{"lineNumber":181,"author":{"gitId":"davelowqx"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":182,"author":{"gitId":"davelowqx"},"content":"Creates an Event at the specified date and time.","lastModifiedDate":"2021-09-18"},{"lineNumber":183,"author":{"gitId":"davelowqx"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":184,"author":{"gitId":"davelowqx"},"content":"Format: `addEvent n/NAME d/DATE [t/TIME]` ","lastModifiedDate":"2021-09-18"},{"lineNumber":185,"author":{"gitId":"davelowqx"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":186,"author":{"gitId":"lowkangn"},"content":"Example Usage:","lastModifiedDate":"2021-09-22"},{"lineNumber":187,"author":{"gitId":"lowkangn"},"content":"* `addEvent n/CS2100 Finals d/2021-11-20 t/0900` - Creates an Event \"CS2100 Finals\" on 20th November 2021 9:00am.","lastModifiedDate":"2021-09-18"},{"lineNumber":188,"author":{"gitId":"lowkangn"},"content":"* `addEvent n/240Km Marathon d/2022-08-20` - Creates a full day Event \"240 km Marathon\" on 20th August 2022.","lastModifiedDate":"2021-09-18"},{"lineNumber":189,"author":{"gitId":"davelowqx"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":190,"author":{"gitId":"davelowqx"},"content":"### Removing an event : `removeEvent`","lastModifiedDate":"2021-09-18"},{"lineNumber":191,"author":{"gitId":"davelowqx"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":192,"author":{"gitId":"davelowqx"},"content":"Removes an Event. If there are multiple events with the same name, specify the DATE (in YYYY-MM-DD format) and TIME (24h format) to remove that event.","lastModifiedDate":"2021-09-18"},{"lineNumber":193,"author":{"gitId":"davelowqx"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":194,"author":{"gitId":"davelowqx"},"content":"Format: `removeEvent n/NAME [d/DATE] [t/TIME]` ","lastModifiedDate":"2021-09-18"},{"lineNumber":195,"author":{"gitId":"davelowqx"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":196,"author":{"gitId":"lowkangn"},"content":"Example Usage:","lastModifiedDate":"2021-09-22"},{"lineNumber":197,"author":{"gitId":"lowkangn"},"content":"* `removeEvent n/CS2100 Finals d/2021-11-20  t/0900` - Removes the Event “CS2100 Finals” on 20th November 2021 9:00am.","lastModifiedDate":"2021-09-18"},{"lineNumber":198,"author":{"gitId":"lowkangn"},"content":"* `removeEvent n/240km Marathon d/2022-08-20` - Removes the Event “240 km Marathon” on 20th August 2022.","lastModifiedDate":"2021-09-18"},{"lineNumber":199,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":200,"author":{"gitId":"lowkangn"},"content":"### Mark an Event as done: `doneEvent`","lastModifiedDate":"2021-09-18"},{"lineNumber":201,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":202,"author":{"gitId":"lowkangn"},"content":"Format:","lastModifiedDate":"2021-09-18"},{"lineNumber":203,"author":{"gitId":"lowkangn"},"content":"`doneEvent n/NAME [d/DATE] [t/TIME]` - Marks an Event as done, if there are multiple events with the same name, specify the DATE (in YYYY-MM-DD format) and TIME (24h format) to select that event.","lastModifiedDate":"2021-09-18"},{"lineNumber":204,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":205,"author":{"gitId":"lowkangn"},"content":"Example Usage:","lastModifiedDate":"2021-09-18"},{"lineNumber":206,"author":{"gitId":"XXJJXJ"},"content":"* `doneEvent n/CS2100 Finals d/2021-11-20  t/0900` - Marks the Event “CS2100 Finals” on 20th November 2021 9:00am as done.","lastModifiedDate":"2021-09-20"},{"lineNumber":207,"author":{"gitId":"XXJJXJ"},"content":"* `doneEvent n/240km Marathon d/2022-08-20` - Marks the Event “240 km Marathon” on 20th August 2022 as done.","lastModifiedDate":"2021-09-20"},{"lineNumber":208,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":209,"author":{"gitId":"davelowqx"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":210,"author":{"gitId":"XXJJXJ"},"content":"### Sort Events: `sortEvents`","lastModifiedDate":"2021-09-20"},{"lineNumber":211,"author":{"gitId":"XXJJXJ"},"content":"Sorts the current list of Events in chronological order with the earlier events at the top and later events at the bottom.","lastModifiedDate":"2021-09-20"},{"lineNumber":212,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":213,"author":{"gitId":"XXJJXJ"},"content":"Format:","lastModifiedDate":"2021-09-20"},{"lineNumber":214,"author":{"gitId":"XXJJXJ"},"content":"`sortEvents`","lastModifiedDate":"2021-09-20"},{"lineNumber":215,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":216,"author":{"gitId":"XXJJXJ"},"content":"### Filter Events: `filterEvents`","lastModifiedDate":"2021-09-20"},{"lineNumber":217,"author":{"gitId":"XXJJXJ"},"content":"Filters the list of events for events occurring on a specific date.","lastModifiedDate":"2021-09-20"},{"lineNumber":218,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":219,"author":{"gitId":"XXJJXJ"},"content":"Format:","lastModifiedDate":"2021-09-20"},{"lineNumber":220,"author":{"gitId":"XXJJXJ"},"content":"`filterEvents DATE`","lastModifiedDate":"2021-09-20"},{"lineNumber":221,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":222,"author":{"gitId":"XXJJXJ"},"content":"Example Usage:","lastModifiedDate":"2021-09-20"},{"lineNumber":223,"author":{"gitId":"XXJJXJ"},"content":"* `filterEvents 2021-09-18` - Filters the list of events to show only events occurring on 18th September 2021.","lastModifiedDate":"2021-09-20"},{"lineNumber":224,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":225,"author":{"gitId":"kanjitp"},"content":"### Add Participant to Event: `addParticipant`","lastModifiedDate":"2021-09-22"},{"lineNumber":226,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":227,"author":{"gitId":"kanjitp"},"content":"Format: ","lastModifiedDate":"2021-09-22"},{"lineNumber":228,"author":{"gitId":"kanjitp"},"content":"`addParticipant e/EVENT_NAME p/PARTICIPANT_ID` - Adds Participant with matching participantID to Event.","lastModifiedDate":"2021-09-22"},{"lineNumber":229,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":230,"author":{"gitId":"kanjitp"},"content":"Example Usage:","lastModifiedDate":"2021-09-22"},{"lineNumber":231,"author":{"gitId":"kanjitp"},"content":"* `addParticipant e/CS2103T Finals p/mikerowe1` - Adds Mike Rowe whose participantID is mikerowe1 to Event CS2103T Finals.","lastModifiedDate":"2021-09-22"},{"lineNumber":232,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":233,"author":{"gitId":"kanjitp"},"content":"### Remove Participant from Event: `removeParticipant`","lastModifiedDate":"2021-09-22"},{"lineNumber":234,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":235,"author":{"gitId":"kanjitp"},"content":"Format:","lastModifiedDate":"2021-09-22"},{"lineNumber":236,"author":{"gitId":"kanjitp"},"content":"`removeParticipant e/EVENT_NAME p/PARTICIPANT_ID` - Removes Participant with matching participantID from event.","lastModifiedDate":"2021-09-22"},{"lineNumber":237,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":238,"author":{"gitId":"kanjitp"},"content":"Example Usage:","lastModifiedDate":"2021-09-22"},{"lineNumber":239,"author":{"gitId":"kanjitp"},"content":"* `removeParticipant e/CS2103T Finals p/mikerowe1` - Removes Mike Rowe whose participant ID is mikerowe1 from event CS2103T Finals.","lastModifiedDate":"2021-09-22"},{"lineNumber":240,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":241,"author":{"gitId":"ntwbruce"},"content":"### Show Event details: `showDetails`","lastModifiedDate":"2021-09-18"},{"lineNumber":242,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":243,"author":{"gitId":"ntwbruce"},"content":"Format:","lastModifiedDate":"2021-09-18"},{"lineNumber":244,"author":{"gitId":"ntwbruce"},"content":"`showDetails EVENT_NAME` - Displays the details of the Event matching the given name.","lastModifiedDate":"2021-09-18"},{"lineNumber":245,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":246,"author":{"gitId":"ntwbruce"},"content":"Example Usage:","lastModifiedDate":"2021-09-18"},{"lineNumber":247,"author":{"gitId":"XXJJXJ"},"content":"* `showDetails CS2103T Finals` - Displays the date and time of the ‘CS2103T Finals’ Event.","lastModifiedDate":"2021-09-20"},{"lineNumber":248,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":249,"author":{"gitId":"ntwbruce"},"content":"### Show Event Participants: `showParticipants`","lastModifiedDate":"2021-09-18"},{"lineNumber":250,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":251,"author":{"gitId":"ntwbruce"},"content":"Format:","lastModifiedDate":"2021-09-18"},{"lineNumber":252,"author":{"gitId":"ntwbruce"},"content":"`showParticipants EVENT_NAME` - Displays the list of participants of the Event matching the given name.","lastModifiedDate":"2021-09-18"},{"lineNumber":253,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":254,"author":{"gitId":"ntwbruce"},"content":"Example Usage:","lastModifiedDate":"2021-09-18"},{"lineNumber":255,"author":{"gitId":"XXJJXJ"},"content":"* `showParticipants CS2103T Finals` - Displays the list of participants of the ‘CS2103T Finals’ Event.","lastModifiedDate":"2021-09-20"},{"lineNumber":256,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":257,"author":{"gitId":"lowkangn"},"content":"### Find Participant and access details: `findParticipant`","lastModifiedDate":"2021-09-18"},{"lineNumber":258,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":259,"author":{"gitId":"lowkangn"},"content":"Format:","lastModifiedDate":"2021-09-18"},{"lineNumber":260,"author":{"gitId":"lowkangn"},"content":"`findParticipant KEYWORD` - Finds any participants whose name contains the given KEYWORD and returns the details about each participant.","lastModifiedDate":"2021-09-18"},{"lineNumber":261,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":262,"author":{"gitId":"lowkangn"},"content":"Example Usage:","lastModifiedDate":"2021-09-18"},{"lineNumber":263,"author":{"gitId":"XXJJXJ"},"content":"* `findParticipant Mike` - Filters the list of Participants for Participants who have names containing “Mike”.","lastModifiedDate":"2021-09-20"},{"lineNumber":264,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":265,"author":{"gitId":"-"},"content":"### Exiting the program : `exit`","lastModifiedDate":"2021-09-24"},{"lineNumber":266,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":267,"author":{"gitId":"-"},"content":"Exits the program.","lastModifiedDate":"2021-09-24"},{"lineNumber":268,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":269,"author":{"gitId":"-"},"content":"Format: `exit`","lastModifiedDate":"2021-09-24"},{"lineNumber":270,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":271,"author":{"gitId":"-"},"content":"### Saving the data","lastModifiedDate":"2021-09-24"},{"lineNumber":272,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":273,"author":{"gitId":"ntwbruce"},"content":"Managera data are saved in the hard disk automatically after any command that changes the data. There is no need to save manually.","lastModifiedDate":"2021-09-24"},{"lineNumber":274,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":275,"author":{"gitId":"-"},"content":"### Editing the data file","lastModifiedDate":"2021-09-24"},{"lineNumber":276,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":277,"author":{"gitId":"ntwbruce"},"content":"Managera data are saved as a JSON file `[JAR file location]/data/addressbook.json`. Advanced users are welcome to update data directly by editing that data file.","lastModifiedDate":"2021-09-24"},{"lineNumber":278,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":279,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e:exclamation: **Caution:**","lastModifiedDate":"2021-09-24"},{"lineNumber":280,"author":{"gitId":"ntwbruce"},"content":"If your changes to the data file makes its format invalid, Managera will discard all data and start with an empty data file at the next run.","lastModifiedDate":"2021-09-24"},{"lineNumber":281,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-09-24"},{"lineNumber":282,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":283,"author":{"gitId":"-"},"content":"### Archiving data files `[coming in v2.0]`","lastModifiedDate":"2021-09-24"},{"lineNumber":284,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":285,"author":{"gitId":"-"},"content":"_Details coming soon ..._","lastModifiedDate":"2021-09-24"},{"lineNumber":286,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":287,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":288,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":289,"author":{"gitId":"-"},"content":"## FAQ","lastModifiedDate":"2020-05-23"},{"lineNumber":290,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":291,"author":{"gitId":"-"},"content":"**Q**: How do I transfer my data to another Computer?\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":292,"author":{"gitId":"ntwbruce"},"content":"**A**: Install the app in the other computer and overwrite the empty data file it creates with the file that contains the data of your previous Managera home folder.","lastModifiedDate":"2021-09-24"},{"lineNumber":293,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":294,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":295,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":296,"author":{"gitId":"-"},"content":"## Command summary","lastModifiedDate":"2020-05-23"},{"lineNumber":297,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":298,"author":{"gitId":"-"},"content":"Action | Format, Examples","lastModifiedDate":"2020-05-23"},{"lineNumber":299,"author":{"gitId":"-"},"content":"--------|------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":300,"author":{"gitId":"ntwbruce"},"content":"**Help** | `help`","lastModifiedDate":"2021-09-24"},{"lineNumber":301,"author":{"gitId":"-"},"content":"**Add** | `add n/NAME p/PHONE_NUMBER e/EMAIL a/ADDRESS [t/TAG]…​` \u003cbr\u003e e.g., `add n/James Ho p/22224444 e/jamesho@example.com a/123, Clementi Rd, 1234665 t/friend t/colleague`","lastModifiedDate":"2020-05-23"},{"lineNumber":302,"author":{"gitId":"ntwbruce"},"content":"**List** | `list`","lastModifiedDate":"2021-09-24"},{"lineNumber":303,"author":{"gitId":"-"},"content":"**Edit** | `edit INDEX [n/NAME] [p/PHONE_NUMBER] [e/EMAIL] [a/ADDRESS] [t/TAG]…​`\u003cbr\u003e e.g.,`edit 2 n/James Lee e/jameslee@example.com`","lastModifiedDate":"2020-05-23"},{"lineNumber":304,"author":{"gitId":"-"},"content":"**Find** | `find KEYWORD [MORE_KEYWORDS]`\u003cbr\u003e e.g., `find James Jake`","lastModifiedDate":"2020-05-23"},{"lineNumber":305,"author":{"gitId":"ntwbruce"},"content":"**Delete** | `delete INDEX`\u003cbr\u003e e.g., `delete 3`","lastModifiedDate":"2021-09-24"},{"lineNumber":306,"author":{"gitId":"ntwbruce"},"content":"**Clear** | `clear`","lastModifiedDate":"2021-09-24"},{"lineNumber":307,"author":{"gitId":"davelowqx"},"content":"**Add Event** | `addEvent n/NAME d/DATE [t/TIME]` \u003cbr\u003e e.g., `addEvent n/CS2100 Finals d/2021-11-20 t/0900`","lastModifiedDate":"2021-09-18"},{"lineNumber":308,"author":{"gitId":"davelowqx"},"content":"**Remove Event** | `removeEvent n/NAME [d/DATE] [t/TIME]`  \u003cbr\u003e e.g., `removeEvent n/CS2100 Finals d/2021-11-20  t/0900`","lastModifiedDate":"2021-09-18"},{"lineNumber":309,"author":{"gitId":"XXJJXJ"},"content":"**Mark an Event as done** | `doneEvent n/NAME [d/DATE] [t/TIME]` \u003cbr\u003e e.g. `doneEvent n/240km Marathon d/2022-08-20`","lastModifiedDate":"2021-09-20"},{"lineNumber":310,"author":{"gitId":"XXJJXJ"},"content":"**Sort Events** | `sortEvents`","lastModifiedDate":"2021-09-20"},{"lineNumber":311,"author":{"gitId":"XXJJXJ"},"content":"**Filter Events** | `filterEvents DATE` \u003cbr\u003e e.g. `filterEvents 2021-09-18`","lastModifiedDate":"2021-09-20"},{"lineNumber":312,"author":{"gitId":"kanjitp"},"content":"**add Participant to Event** | `addParticipant e/EVENT_NAME p/PARTICIPANT_ID` \u003cbr\u003e e.g. `addParticipant e/2103T Finals p/mikerowe1`","lastModifiedDate":"2021-09-22"},{"lineNumber":313,"author":{"gitId":"kanjitp"},"content":"**remove Participant from Event** | `removeParticipant e/EVENT_NAME p/PARTICIPANT_ID` \u003cbr\u003e e.g. `removeParticipant e/CS2103T Finals p/mikerowe1`","lastModifiedDate":"2021-09-22"},{"lineNumber":314,"author":{"gitId":"ntwbruce"},"content":"**Show Event Details** | `showDetails EVENT_NAME` \u003cbr\u003e e.g., `showDetails CS2103T Finals`","lastModifiedDate":"2021-09-18"},{"lineNumber":315,"author":{"gitId":"ntwbruce"},"content":"**Show Event Participants** | `showParticipants EVENT_NAME` \u003cbr\u003e e.g., `showParticipants CS2103T Finals`","lastModifiedDate":"2021-09-18"},{"lineNumber":316,"author":{"gitId":"XXJJXJ"},"content":"**Find Participants** | `findParticipant KEYWORD` \u003cbr\u003e e.g. `findParticipant Mike`","lastModifiedDate":"2021-09-20"},{"lineNumber":317,"author":{"gitId":"ntwbruce"},"content":"**exit** | `exit`","lastModifiedDate":"2021-09-24"}],"authorContributionMap":{"XXJJXJ":24,"davelowqx":16,"kanjitp":18,"ntwbruce":97,"-":143,"lowkangn":19}},{"path":"docs/_sass/minima/_base.scss","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"html {","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  font-size: $base-font-size;","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Reset some basic elements","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"body, h1, h2, h3, h4, h5, h6,","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"p, blockquote, pre, hr,","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"dl, dd, ol, ul, figure {","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"  margin: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"  padding: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * Basic styling","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"body {","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"  font: $base-font-weight #{$base-font-size}/#{$base-line-height} $base-font-family;","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"  color: $text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"  background-color: $background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"  -webkit-text-size-adjust: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"  -webkit-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     -moz-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"       -o-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"          font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"  font-kerning: normal;","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"  display: flex;","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"  min-height: 100vh;","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"  flex-direction: column;","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"  overflow-wrap: break-word;","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":" * Set `margin-bottom` to maintain vertical rhythm","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"h1, h2, h3, h4, h5, h6,","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"p, blockquote, pre,","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"ul, ol, dl, figure,","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"%vertical-rhythm {","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"hr {","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"  margin-top: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":" * `main` element","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"main {","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"  display: block; /* Default value of `display` of `main` element is \u0027inline\u0027 in IE 11. */","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":" * Images","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"img {","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"  max-width: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"  vertical-align: middle;","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":" * Figures","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"figure \u003e img {","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"  display: block;","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"figcaption {","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"  font-size: $small-font-size;","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":" * Lists","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"ul, ol {","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"  margin-left: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"li {","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"  \u003e ul,","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"  \u003e ol {","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    margin-bottom: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":" * Headings","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"h1, h2, h3, h4, h5, h6 {","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"  font-weight: $base-font-weight;","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":" * Links","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"a {","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"  color: $link-base-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"  text-decoration: none;","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"  \u0026:visited {","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    color: $link-visited-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"  \u0026:hover {","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    color: $text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    text-decoration: underline;","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"  .social-media-list \u0026:hover {","lastModifiedDate":"2020-05-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    text-decoration: none;","lastModifiedDate":"2020-05-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    .username {","lastModifiedDate":"2020-05-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"      text-decoration: underline;","lastModifiedDate":"2020-05-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":" * Blockquotes","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"blockquote {","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"  color: $brand-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":142,"author":{"gitId":"-"},"content":"  border-left: 4px solid $brand-color-light;","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"  padding-left: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"-"},"content":"  @include relative-font-size(1.125);","lastModifiedDate":"2020-05-23"},{"lineNumber":145,"author":{"gitId":"-"},"content":"  font-style: italic;","lastModifiedDate":"2020-05-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"  \u003e :last-child {","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    margin-bottom: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"  i, em {","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    font-style: normal;","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":" * Code formatting","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"pre,","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"code {","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"  font-family: $code-font-family;","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"  font-size: 0.9375em;","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"  border: 1px solid $brand-color-light;","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"  border-radius: 3px;","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"  background-color: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"code {","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"  padding: 1px 5px;","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":174,"author":{"gitId":"-"},"content":"pre {","lastModifiedDate":"2020-05-23"},{"lineNumber":175,"author":{"gitId":"-"},"content":"  padding: 8px 12px;","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"  overflow-x: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":178,"author":{"gitId":"-"},"content":"  \u003e code {","lastModifiedDate":"2020-05-23"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    border: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    padding-right: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    padding-left: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":".highlight {","lastModifiedDate":"2020-05-23"},{"lineNumber":186,"author":{"gitId":"-"},"content":"  border-radius: 3px;","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"  background: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":188,"author":{"gitId":"-"},"content":"  @extend %vertical-rhythm;","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"  .highlighter-rouge \u0026 {","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    background: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":" * Wrapper","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"-"},"content":".wrapper {","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"  max-width: calc(#{$content-width} - (#{$spacing-unit}));","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"  margin-right: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"  margin-left: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":204,"author":{"gitId":"-"},"content":"  padding-right: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":205,"author":{"gitId":"-"},"content":"  padding-left: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":206,"author":{"gitId":"-"},"content":"  @extend %clearfix;","lastModifiedDate":"2020-05-23"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":208,"author":{"gitId":"-"},"content":"  @media screen and (min-width: $on-large) {","lastModifiedDate":"2020-05-23"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    max-width: calc(#{$content-width} - (#{$spacing-unit} * 2));","lastModifiedDate":"2020-05-23"},{"lineNumber":210,"author":{"gitId":"-"},"content":"    padding-right: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    padding-left: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":212,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":213,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":217,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":" * Clearfix","lastModifiedDate":"2020-05-23"},{"lineNumber":219,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":220,"author":{"gitId":"-"},"content":"%clearfix:after {","lastModifiedDate":"2020-05-23"},{"lineNumber":221,"author":{"gitId":"-"},"content":"  content: \"\";","lastModifiedDate":"2020-05-23"},{"lineNumber":222,"author":{"gitId":"-"},"content":"  display: table;","lastModifiedDate":"2020-05-23"},{"lineNumber":223,"author":{"gitId":"-"},"content":"  clear: both;","lastModifiedDate":"2020-05-23"},{"lineNumber":224,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":229,"author":{"gitId":"-"},"content":" * Icons","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":".orange {","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"-"},"content":"  color: #f66a0a;","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":".grey {","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":"  color: #828282;","lastModifiedDate":"2020-05-23"},{"lineNumber":238,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":" * Tables","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"-"},"content":"table {","lastModifiedDate":"2020-05-23"},{"lineNumber":244,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":245,"author":{"gitId":"-"},"content":"  width: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":246,"author":{"gitId":"-"},"content":"  text-align: $table-text-align;","lastModifiedDate":"2020-05-23"},{"lineNumber":247,"author":{"gitId":"-"},"content":"  color: $table-text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":248,"author":{"gitId":"-"},"content":"  border-collapse: collapse;","lastModifiedDate":"2020-05-23"},{"lineNumber":249,"author":{"gitId":"-"},"content":"  border: 1px solid $table-border-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":250,"author":{"gitId":"-"},"content":"  tr {","lastModifiedDate":"2020-05-23"},{"lineNumber":251,"author":{"gitId":"-"},"content":"    \u0026:nth-child(even) {","lastModifiedDate":"2020-05-23"},{"lineNumber":252,"author":{"gitId":"-"},"content":"      background-color: $table-zebra-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":253,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":254,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":255,"author":{"gitId":"-"},"content":"  th, td {","lastModifiedDate":"2020-05-23"},{"lineNumber":256,"author":{"gitId":"-"},"content":"    padding: ($spacing-unit / 3) ($spacing-unit / 2);","lastModifiedDate":"2020-05-23"},{"lineNumber":257,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":258,"author":{"gitId":"-"},"content":"  th {","lastModifiedDate":"2020-05-23"},{"lineNumber":259,"author":{"gitId":"-"},"content":"    background-color: $table-header-bg-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":260,"author":{"gitId":"-"},"content":"    border: 1px solid $table-header-border;","lastModifiedDate":"2020-05-23"},{"lineNumber":261,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":262,"author":{"gitId":"-"},"content":"  td {","lastModifiedDate":"2020-05-23"},{"lineNumber":263,"author":{"gitId":"-"},"content":"    border: 1px solid $table-border-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":264,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":265,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":266,"author":{"gitId":"-"},"content":"  @include media-query($on-laptop) {","lastModifiedDate":"2020-05-23"},{"lineNumber":267,"author":{"gitId":"-"},"content":"    display: block;","lastModifiedDate":"2020-05-23"},{"lineNumber":268,"author":{"gitId":"-"},"content":"    overflow-x: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":269,"author":{"gitId":"-"},"content":"    -webkit-overflow-scrolling: touch;","lastModifiedDate":"2020-05-23"},{"lineNumber":270,"author":{"gitId":"-"},"content":"            -ms-overflow-style: -ms-autohiding-scrollbar;","lastModifiedDate":"2020-05-23"},{"lineNumber":271,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":272,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":273,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-01-11"},{"lineNumber":274,"author":{"gitId":"-"},"content":"@media print {","lastModifiedDate":"2021-01-12"},{"lineNumber":275,"author":{"gitId":"-"},"content":"  /**","lastModifiedDate":"2021-01-11"},{"lineNumber":276,"author":{"gitId":"-"},"content":"  * Prevents page break from cutting through content when printing","lastModifiedDate":"2021-01-12"},{"lineNumber":277,"author":{"gitId":"-"},"content":"  */","lastModifiedDate":"2021-01-11"},{"lineNumber":278,"author":{"gitId":"-"},"content":"  body {","lastModifiedDate":"2021-01-11"},{"lineNumber":279,"author":{"gitId":"-"},"content":"    display: block;","lastModifiedDate":"2021-01-11"},{"lineNumber":280,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-11"},{"lineNumber":281,"author":{"gitId":"-"},"content":"  /**","lastModifiedDate":"2021-01-12"},{"lineNumber":282,"author":{"gitId":"-"},"content":"  * Replaces the top navigation menu with the project name when printing","lastModifiedDate":"2021-01-12"},{"lineNumber":283,"author":{"gitId":"-"},"content":"  */","lastModifiedDate":"2021-01-12"},{"lineNumber":284,"author":{"gitId":"-"},"content":"  .site-header .wrapper {","lastModifiedDate":"2021-01-12"},{"lineNumber":285,"author":{"gitId":"-"},"content":"    display: none;","lastModifiedDate":"2021-01-12"},{"lineNumber":286,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-12"},{"lineNumber":287,"author":{"gitId":"-"},"content":"  .site-header {","lastModifiedDate":"2021-01-12"},{"lineNumber":288,"author":{"gitId":"-"},"content":"    text-align: center;","lastModifiedDate":"2021-01-12"},{"lineNumber":289,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-12"},{"lineNumber":290,"author":{"gitId":"-"},"content":"  .site-header:before {","lastModifiedDate":"2021-01-12"},{"lineNumber":291,"author":{"gitId":"XXJJXJ"},"content":"    content: \"Managera\";","lastModifiedDate":"2021-09-18"},{"lineNumber":292,"author":{"gitId":"-"},"content":"    font-size: 32px;","lastModifiedDate":"2021-01-12"},{"lineNumber":293,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-11"},{"lineNumber":294,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-01-12"},{"lineNumber":295,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-01-12"}],"authorContributionMap":{"XXJJXJ":1,"-":294}},{"path":"docs/index.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"XXJJXJ"},"content":"title: Managera","lastModifiedDate":"2021-09-22"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"XXJJXJ"},"content":"[![CI Status](https://github.com/AY2122S1-CS2103T-T10-2/tp/workflows/Java%20CI/badge.svg)](https://github.com/AY2122S1-CS2103T-T10-2/tp/actions)","lastModifiedDate":"2021-09-22"},{"lineNumber":7,"author":{"gitId":"-"},"content":"[![codecov](https://codecov.io/gh/AY2122S1-CS2103T-T10-2/tp/branch/master/graph/badge.svg?token\u003dSVE776T4OX)](https://codecov.io/gh/AY2122S1-CS2103T-T10-2/tp)","lastModifiedDate":"2021-09-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"![Ui](images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"XXJJXJ"},"content":"**Managera is a desktop application for managing your event details and its corresponding participant credentials.** While it has a GUI, most of the user interactions happen using a CLI (Command Line Interface).","lastModifiedDate":"2021-09-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"XXJJXJ"},"content":"* If you are interested in using Managera, head over to the [_Quick Start_ section of the **User Guide**](UserGuide.html#quick-start).","lastModifiedDate":"2021-09-22"},{"lineNumber":14,"author":{"gitId":"XXJJXJ"},"content":"* If you are interested about developing Managera, the [**Developer Guide**](DeveloperGuide.html) is a good place to start.","lastModifiedDate":"2021-09-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"**Acknowledgements**","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"XXJJXJ"},"content":"* This project is based on the AddressBook-Level3 project created by the [SE-EDU initiative](https://se-education.org).","lastModifiedDate":"2021-09-22"},{"lineNumber":20,"author":{"gitId":"-"},"content":"* Libraries used: [JavaFX](https://openjfx.io/), [Jackson](https://github.com/FasterXML/jackson), [JUnit5](https://github.com/junit-team/junit5)","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"XXJJXJ":6,"-":14}},{"path":"docs/team/davelowqx.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"davelowqx"},"content":"---","lastModifiedDate":"2021-09-18"},{"lineNumber":2,"author":{"gitId":"davelowqx"},"content":"layout: page","lastModifiedDate":"2021-09-18"},{"lineNumber":3,"author":{"gitId":"davelowqx"},"content":"title: Dave Low\u0027s Project Portfolio Page","lastModifiedDate":"2021-09-18"},{"lineNumber":4,"author":{"gitId":"davelowqx"},"content":"---","lastModifiedDate":"2021-09-18"},{"lineNumber":5,"author":{"gitId":"davelowqx"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":6,"author":{"gitId":"davelowqx"},"content":"### Project: AddressBook Level 3","lastModifiedDate":"2021-09-18"},{"lineNumber":7,"author":{"gitId":"davelowqx"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":8,"author":{"gitId":"davelowqx"},"content":"AddressBook - Level 3 is a desktop address book application used for teaching Software Engineering principles. The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java, and has about 10 kLoC.","lastModifiedDate":"2021-09-18"},{"lineNumber":9,"author":{"gitId":"davelowqx"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":10,"author":{"gitId":"davelowqx"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2021-09-18"},{"lineNumber":11,"author":{"gitId":"davelowqx"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":12,"author":{"gitId":"davelowqx"},"content":"- **New Feature**: Added the ability to undo/redo previous commands.","lastModifiedDate":"2021-09-18"},{"lineNumber":13,"author":{"gitId":"davelowqx"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":14,"author":{"gitId":"davelowqx"},"content":"  - What it does: allows the user to undo all previous commands one at a time. Preceding undo commands can be reversed by using the redo command.","lastModifiedDate":"2021-09-18"},{"lineNumber":15,"author":{"gitId":"davelowqx"},"content":"  - Justification: This feature improves the product significantly because a user can make mistakes in commands and the app should provide a convenient way to rectify them.","lastModifiedDate":"2021-09-18"},{"lineNumber":16,"author":{"gitId":"davelowqx"},"content":"  - Highlights: This enhancement affects existing commands and commands to be added in future. It required an in-depth analysis of design alternatives. The implementation too was challenging as it required changes to existing commands.","lastModifiedDate":"2021-09-18"},{"lineNumber":17,"author":{"gitId":"davelowqx"},"content":"  - Credits: _{mention here if you reused any code/ideas from elsewhere or if a third-party library is heavily used in the feature so that a reader can make a more accurate judgement of how much effort went into the feature}_","lastModifiedDate":"2021-09-18"},{"lineNumber":18,"author":{"gitId":"davelowqx"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":19,"author":{"gitId":"davelowqx"},"content":"- **New Feature**: Added a history command that allows the user to navigate to previous commands using up/down keys.","lastModifiedDate":"2021-09-18"},{"lineNumber":20,"author":{"gitId":"davelowqx"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":21,"author":{"gitId":"davelowqx"},"content":"- **Code contributed**: [RepoSense link]()","lastModifiedDate":"2021-09-18"},{"lineNumber":22,"author":{"gitId":"davelowqx"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":23,"author":{"gitId":"davelowqx"},"content":"- **Project management**:","lastModifiedDate":"2021-09-18"},{"lineNumber":24,"author":{"gitId":"davelowqx"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":25,"author":{"gitId":"davelowqx"},"content":"  - Managed releases `v1.3` - `v1.5rc` (3 releases) on GitHub","lastModifiedDate":"2021-09-18"},{"lineNumber":26,"author":{"gitId":"davelowqx"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":27,"author":{"gitId":"davelowqx"},"content":"- **Enhancements to existing features**:","lastModifiedDate":"2021-09-18"},{"lineNumber":28,"author":{"gitId":"davelowqx"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":29,"author":{"gitId":"davelowqx"},"content":"  - Updated the GUI color scheme (Pull requests [\\#33](), [\\#34]())","lastModifiedDate":"2021-09-18"},{"lineNumber":30,"author":{"gitId":"davelowqx"},"content":"  - Wrote additional tests for existing features to increase coverage from 88% to 92% (Pull requests [\\#36](), [\\#38]())","lastModifiedDate":"2021-09-18"},{"lineNumber":31,"author":{"gitId":"davelowqx"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":32,"author":{"gitId":"davelowqx"},"content":"- **Documentation**:","lastModifiedDate":"2021-09-18"},{"lineNumber":33,"author":{"gitId":"davelowqx"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":34,"author":{"gitId":"davelowqx"},"content":"  - User Guide:","lastModifiedDate":"2021-09-18"},{"lineNumber":35,"author":{"gitId":"davelowqx"},"content":"    - Added documentation for the features `delete` and `find` [\\#72]()","lastModifiedDate":"2021-09-18"},{"lineNumber":36,"author":{"gitId":"davelowqx"},"content":"    - Did cosmetic tweaks to existing documentation of features `clear`, `exit`: [\\#74]()","lastModifiedDate":"2021-09-18"},{"lineNumber":37,"author":{"gitId":"davelowqx"},"content":"  - Developer Guide:","lastModifiedDate":"2021-09-18"},{"lineNumber":38,"author":{"gitId":"davelowqx"},"content":"    - Added implementation details of the `delete` feature.","lastModifiedDate":"2021-09-18"},{"lineNumber":39,"author":{"gitId":"davelowqx"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":40,"author":{"gitId":"davelowqx"},"content":"- **Community**:","lastModifiedDate":"2021-09-18"},{"lineNumber":41,"author":{"gitId":"davelowqx"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":42,"author":{"gitId":"davelowqx"},"content":"  - PRs reviewed (with non-trivial review comments): [\\#12](), [\\#32](), [\\#19](), [\\#42]()","lastModifiedDate":"2021-09-18"},{"lineNumber":43,"author":{"gitId":"davelowqx"},"content":"  - Contributed to forum discussions (examples: [1](), [2](), [3](), [4]())","lastModifiedDate":"2021-09-18"},{"lineNumber":44,"author":{"gitId":"davelowqx"},"content":"  - Reported bugs and suggestions for other teams in the class (examples: [1](), [2](), [3]())","lastModifiedDate":"2021-09-18"},{"lineNumber":45,"author":{"gitId":"davelowqx"},"content":"  - Some parts of the history feature I added was adopted by several other class mates ([1](), [2]())","lastModifiedDate":"2021-09-18"},{"lineNumber":46,"author":{"gitId":"davelowqx"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":47,"author":{"gitId":"davelowqx"},"content":"- **Tools**:","lastModifiedDate":"2021-09-18"},{"lineNumber":48,"author":{"gitId":"davelowqx"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":49,"author":{"gitId":"davelowqx"},"content":"  - Integrated a third party library (Natty) to the project ([\\#42]())","lastModifiedDate":"2021-09-18"},{"lineNumber":50,"author":{"gitId":"davelowqx"},"content":"  - Integrated a new Github plugin (CircleCI) to the team repo","lastModifiedDate":"2021-09-18"},{"lineNumber":51,"author":{"gitId":"davelowqx"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":52,"author":{"gitId":"davelowqx"},"content":"- _{you can add/remove categories in the list above}_","lastModifiedDate":"2021-09-18"}],"authorContributionMap":{"davelowqx":52}},{"path":"docs/team/kanjitp.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"kanjitp"},"content":"---","lastModifiedDate":"2021-09-18"},{"lineNumber":2,"author":{"gitId":"kanjitp"},"content":"layout: page","lastModifiedDate":"2021-09-18"},{"lineNumber":3,"author":{"gitId":"kanjitp"},"content":"title: Kan Jitpakdi\u0027s Project Portfolio Page","lastModifiedDate":"2021-09-18"},{"lineNumber":4,"author":{"gitId":"kanjitp"},"content":"---","lastModifiedDate":"2021-09-18"},{"lineNumber":5,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":6,"author":{"gitId":"kanjitp"},"content":"### Project: Managera","lastModifiedDate":"2021-09-18"},{"lineNumber":7,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":8,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":9,"author":{"gitId":"kanjitp"},"content":"Managera is a desktop app that provides event organisers with a convenient method of keeping track of upcoming events and the details of their participants and collaborators. It does not handle communication between the event organiser and the participants or collaborators.","lastModifiedDate":"2021-09-18"},{"lineNumber":10,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":11,"author":{"gitId":"kanjitp"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2021-09-18"},{"lineNumber":12,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":13,"author":{"gitId":"kanjitp"},"content":"* **New Feature**: `Add Participants to Event`","lastModifiedDate":"2021-09-18"},{"lineNumber":14,"author":{"gitId":"kanjitp"},"content":"  * Added Participant class extending from Person class","lastModifiedDate":"2021-09-18"},{"lineNumber":15,"author":{"gitId":"kanjitp"},"content":"  * Added BirthDate, Note classes to be used as fields in Participant","lastModifiedDate":"2021-09-18"},{"lineNumber":16,"author":{"gitId":"kanjitp"},"content":"  * Highlights: (To be added)","lastModifiedDate":"2021-09-18"},{"lineNumber":17,"author":{"gitId":"kanjitp"},"content":"  * Credits: (To be added if any)","lastModifiedDate":"2021-09-18"},{"lineNumber":18,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":19,"author":{"gitId":"kanjitp"},"content":"* **New Feature**: `Remove Participants from Event`","lastModifiedDate":"2021-09-18"},{"lineNumber":20,"author":{"gitId":"kanjitp"},"content":"  * Created Classes the same as `Add Participant to Event`","lastModifiedDate":"2021-09-18"},{"lineNumber":21,"author":{"gitId":"kanjitp"},"content":"  * Highlights: (To be added)","lastModifiedDate":"2021-09-18"},{"lineNumber":22,"author":{"gitId":"kanjitp"},"content":"  * Credits: (To be added if any)","lastModifiedDate":"2021-09-18"},{"lineNumber":23,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":24,"author":{"gitId":"kanjitp"},"content":"* **Code contributed**: [RepoSense link]()","lastModifiedDate":"2021-09-18"},{"lineNumber":25,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":26,"author":{"gitId":"kanjitp"},"content":"* **Project management**:","lastModifiedDate":"2021-09-18"},{"lineNumber":27,"author":{"gitId":"kanjitp"},"content":"  * (To be added)","lastModifiedDate":"2021-09-18"},{"lineNumber":28,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":29,"author":{"gitId":"kanjitp"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2021-09-18"},{"lineNumber":30,"author":{"gitId":"kanjitp"},"content":"  * (To be added)","lastModifiedDate":"2021-09-18"},{"lineNumber":31,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":32,"author":{"gitId":"kanjitp"},"content":"* **Documentation**:","lastModifiedDate":"2021-09-18"},{"lineNumber":33,"author":{"gitId":"kanjitp"},"content":"  * User Guide:","lastModifiedDate":"2021-09-18"},{"lineNumber":34,"author":{"gitId":"kanjitp"},"content":"    * Added documentation for the features `addParticipant` and `removeParticipant` [\\#72]()","lastModifiedDate":"2021-09-18"},{"lineNumber":35,"author":{"gitId":"kanjitp"},"content":"    * Added FAQ for Managera inspiration and the origin of the name   ","lastModifiedDate":"2021-09-18"},{"lineNumber":36,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":37,"author":{"gitId":"kanjitp"},"content":"* **Community**:","lastModifiedDate":"2021-09-18"},{"lineNumber":38,"author":{"gitId":"kanjitp"},"content":"  ","lastModifiedDate":"2021-09-18"},{"lineNumber":39,"author":{"gitId":"kanjitp"},"content":"* **Tools**:","lastModifiedDate":"2021-09-18"},{"lineNumber":40,"author":{"gitId":"kanjitp"},"content":"  ","lastModifiedDate":"2021-09-18"},{"lineNumber":41,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-18"}],"authorContributionMap":{"kanjitp":41}},{"path":"docs/team/lowkangn.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"lowkangn"},"content":"---","lastModifiedDate":"2021-09-18"},{"lineNumber":2,"author":{"gitId":"lowkangn"},"content":"layout: page","lastModifiedDate":"2021-09-18"},{"lineNumber":3,"author":{"gitId":"lowkangn"},"content":"title: Low Kang Ngee\u0027s Project Portfolio Page","lastModifiedDate":"2021-09-18"},{"lineNumber":4,"author":{"gitId":"lowkangn"},"content":"---","lastModifiedDate":"2021-09-18"},{"lineNumber":5,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":6,"author":{"gitId":"lowkangn"},"content":"### Project: AddressBook Level 3","lastModifiedDate":"2021-09-18"},{"lineNumber":7,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":8,"author":{"gitId":"lowkangn"},"content":"Managera is a desktop app that provides event organisers with a convenient method of keeping track of upcoming events and the details of their participants and collaborators. It does not handle communication between the event organiser and the participants or collaborators.","lastModifiedDate":"2021-09-18"},{"lineNumber":9,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":10,"author":{"gitId":"lowkangn"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2021-09-18"}],"authorContributionMap":{"lowkangn":10}},{"path":"docs/team/ntwbruce.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"ntwbruce"},"content":"---","lastModifiedDate":"2021-09-18"},{"lineNumber":2,"author":{"gitId":"ntwbruce"},"content":"layout: page","lastModifiedDate":"2021-09-18"},{"lineNumber":3,"author":{"gitId":"ntwbruce"},"content":"title: Bruce Ng\u0027s Project Portfolio Page","lastModifiedDate":"2021-09-18"},{"lineNumber":4,"author":{"gitId":"ntwbruce"},"content":"---","lastModifiedDate":"2021-09-18"},{"lineNumber":5,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":6,"author":{"gitId":"ntwbruce"},"content":"### Project: Managera","lastModifiedDate":"2021-09-18"},{"lineNumber":7,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":8,"author":{"gitId":"ntwbruce"},"content":"Managera - a desktop app that provides event organisers with a convenient method of keeping track of upcoming events and ","lastModifiedDate":"2021-09-18"},{"lineNumber":9,"author":{"gitId":"ntwbruce"},"content":"the details of their participants and collaborators. It does not handle communication between the event organiser and ","lastModifiedDate":"2021-09-18"},{"lineNumber":10,"author":{"gitId":"ntwbruce"},"content":"the participants or collaborators.","lastModifiedDate":"2021-09-18"},{"lineNumber":11,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":12,"author":{"gitId":"ntwbruce"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2021-09-18"},{"lineNumber":13,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":14,"author":{"gitId":"ntwbruce"},"content":"* **Code contributed**: [RepoSense link]()","lastModifiedDate":"2021-09-18"},{"lineNumber":15,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":16,"author":{"gitId":"ntwbruce"},"content":"* **Project management**:","lastModifiedDate":"2021-09-18"},{"lineNumber":17,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":18,"author":{"gitId":"ntwbruce"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2021-09-18"},{"lineNumber":19,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":20,"author":{"gitId":"ntwbruce"},"content":"* **Documentation**:","lastModifiedDate":"2021-09-18"},{"lineNumber":21,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":22,"author":{"gitId":"ntwbruce"},"content":"* **Community**:","lastModifiedDate":"2021-09-18"},{"lineNumber":23,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":24,"author":{"gitId":"ntwbruce"},"content":"* **Tools**:","lastModifiedDate":"2021-09-18"}],"authorContributionMap":{"ntwbruce":24}},{"path":"docs/team/xxjjxj.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"XXJJXJ"},"content":"---","lastModifiedDate":"2021-09-18"},{"lineNumber":2,"author":{"gitId":"XXJJXJ"},"content":"layout: page","lastModifiedDate":"2021-09-18"},{"lineNumber":3,"author":{"gitId":"XXJJXJ"},"content":"title: Ye Xinjian\u0027s Project Portfolio Page","lastModifiedDate":"2021-09-18"},{"lineNumber":4,"author":{"gitId":"XXJJXJ"},"content":"---","lastModifiedDate":"2021-09-18"},{"lineNumber":5,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":6,"author":{"gitId":"XXJJXJ"},"content":"### Project: AddressBook Level 3","lastModifiedDate":"2021-09-18"},{"lineNumber":7,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":8,"author":{"gitId":"XXJJXJ"},"content":"AddressBook - Level 3 is a desktop address book application used for teaching Software Engineering principles. The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java, and has about 10 kLoC.","lastModifiedDate":"2021-09-18"},{"lineNumber":9,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":10,"author":{"gitId":"XXJJXJ"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2021-09-18"}],"authorContributionMap":{"XXJJXJ":10}},{"path":"src/main/java/seedu/address/commons/core/LogsCenter.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.core;","lastModifiedDate":"2016-09-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-09-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.logging.ConsoleHandler;","lastModifiedDate":"2017-01-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.FileHandler;","lastModifiedDate":"2017-01-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.logging.Level;","lastModifiedDate":"2017-01-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.logging.SimpleFormatter;","lastModifiedDate":"2017-01-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Configures and manages loggers and handlers, including their logging level","lastModifiedDate":"2016-09-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * Named {@link Logger}s can be obtained from this class\u003cbr\u003e","lastModifiedDate":"2016-09-29"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * These loggers have been configured to output messages to the console and a {@code .log} file by default,","lastModifiedDate":"2016-09-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":" *   at the {@code INFO} level. A new {@code .log} file with a new numbering will be created after the log","lastModifiedDate":"2016-09-29"},{"lineNumber":16,"author":{"gitId":"-"},"content":" *   file reaches 5MB big, up to a maximum of 5 files.\u003cbr\u003e","lastModifiedDate":"2016-09-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class LogsCenter {","lastModifiedDate":"2016-09-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private static final int MAX_FILE_COUNT \u003d 5;","lastModifiedDate":"2016-09-28"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final int MAX_FILE_SIZE_IN_BYTES \u003d (int) (Math.pow(2, 20) * 5); // 5MB","lastModifiedDate":"2016-09-28"},{"lineNumber":21,"author":{"gitId":"lowkangn"},"content":"    private static final String LOG_FILE \u003d \"managera.log\";","lastModifiedDate":"2021-09-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static Level currentLogLevel \u003d Level.INFO;","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(LogsCenter.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static FileHandler fileHandler;","lastModifiedDate":"2016-09-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static ConsoleHandler consoleHandler;","lastModifiedDate":"2016-09-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Initializes with a custom log level (specified in the {@code config} object)","lastModifiedDate":"2016-09-29"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Loggers obtained *AFTER* this initialization will have their logging level changed\u003cbr\u003e","lastModifiedDate":"2016-09-29"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Logging levels for existing loggers will only be updated if the logger with the same name","lastModifiedDate":"2016-10-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * is requested again from the LogsCenter.","lastModifiedDate":"2016-10-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-29"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public static void init(Config config) {","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        currentLogLevel \u003d config.getLogLevel();","lastModifiedDate":"2016-09-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        logger.info(\"currentLogLevel: \" + currentLogLevel);","lastModifiedDate":"2016-09-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * Creates a logger with the given name.","lastModifiedDate":"2017-03-20"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public static Logger getLogger(String name) {","lastModifiedDate":"2016-09-28"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        Logger logger \u003d Logger.getLogger(name);","lastModifiedDate":"2016-09-28"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        logger.setUseParentHandlers(false);","lastModifiedDate":"2016-09-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        removeHandlers(logger);","lastModifiedDate":"2016-09-28"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        addConsoleHandler(logger);","lastModifiedDate":"2016-09-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        addFileHandler(logger);","lastModifiedDate":"2016-09-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return Logger.getLogger(name);","lastModifiedDate":"2016-09-28"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Creates a Logger for the given class name.","lastModifiedDate":"2017-01-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e Logger getLogger(Class\u003cT\u003e clazz) {","lastModifiedDate":"2017-01-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        if (clazz \u003d\u003d null) {","lastModifiedDate":"2017-04-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            return Logger.getLogger(\"\");","lastModifiedDate":"2017-04-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-04-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        return getLogger(clazz.getSimpleName());","lastModifiedDate":"2017-01-16"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * Adds the {@code consoleHandler} to the {@code logger}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * Creates the {@code consoleHandler} if it is null.","lastModifiedDate":"2017-08-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    private static void addConsoleHandler(Logger logger) {","lastModifiedDate":"2016-09-09"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        if (consoleHandler \u003d\u003d null) {","lastModifiedDate":"2017-04-05"},{"lineNumber":68,"author":{"gitId":"-"},"content":"            consoleHandler \u003d createConsoleHandler();","lastModifiedDate":"2017-04-05"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-04-05"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        logger.addHandler(consoleHandler);","lastModifiedDate":"2016-09-09"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * Remove all the handlers from {@code logger}.","lastModifiedDate":"2017-08-16"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    private static void removeHandlers(Logger logger) {","lastModifiedDate":"2016-09-28"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        Arrays.stream(logger.getHandlers())","lastModifiedDate":"2018-01-21"},{"lineNumber":78,"author":{"gitId":"-"},"content":"                .forEach(logger::removeHandler);","lastModifiedDate":"2018-01-21"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-28"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * Adds the {@code fileHandler} to the {@code logger}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * Creates {@code fileHandler} if it is null.","lastModifiedDate":"2017-08-16"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    private static void addFileHandler(Logger logger) {","lastModifiedDate":"2016-09-09"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-09"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            if (fileHandler \u003d\u003d null) {","lastModifiedDate":"2017-04-05"},{"lineNumber":88,"author":{"gitId":"-"},"content":"                fileHandler \u003d createFileHandler();","lastModifiedDate":"2017-04-05"},{"lineNumber":89,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-04-05"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            logger.addHandler(fileHandler);","lastModifiedDate":"2016-09-09"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-09"},{"lineNumber":92,"author":{"gitId":"-"},"content":"            logger.warning(\"Error adding file handler for logger.\");","lastModifiedDate":"2016-09-09"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * Creates a {@code FileHandler} for the log file.","lastModifiedDate":"2017-08-16"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     * @throws IOException if there are problems opening the file.","lastModifiedDate":"2017-08-16"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    private static FileHandler createFileHandler() throws IOException {","lastModifiedDate":"2016-09-09"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        FileHandler fileHandler \u003d new FileHandler(LOG_FILE, MAX_FILE_SIZE_IN_BYTES, MAX_FILE_COUNT, true);","lastModifiedDate":"2016-09-28"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        fileHandler.setFormatter(new SimpleFormatter());","lastModifiedDate":"2016-09-09"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        fileHandler.setLevel(currentLogLevel);","lastModifiedDate":"2016-09-09"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        return fileHandler;","lastModifiedDate":"2016-09-09"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    private static ConsoleHandler createConsoleHandler() {","lastModifiedDate":"2016-09-09"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        ConsoleHandler consoleHandler \u003d new ConsoleHandler();","lastModifiedDate":"2016-09-09"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        consoleHandler.setLevel(currentLogLevel);","lastModifiedDate":"2016-09-09"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        return consoleHandler;","lastModifiedDate":"2016-09-09"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"-":111,"lowkangn":1}},{"path":"src/main/java/seedu/address/logic/Logic.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2016-09-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-12-03"},{"lineNumber":11,"author":{"gitId":"XXJJXJ"},"content":"import seedu.address.model.event.Event;","lastModifiedDate":"2021-09-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * API of the Logic component","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public interface Logic {","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2016-09-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * @param commandText The command as entered by the user.","lastModifiedDate":"2016-09-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * @return the result of the command execution.","lastModifiedDate":"2016-09-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @throws ParseException If an error occurs during parsing.","lastModifiedDate":"2017-03-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    CommandResult execute(String commandText) throws CommandException, ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Returns the AddressBook.","lastModifiedDate":"2018-12-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * @see seedu.address.model.Model#getAddressBook()","lastModifiedDate":"2018-12-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    ReadOnlyAddressBook getAddressBook();","lastModifiedDate":"2018-12-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /** Returns an unmodifiable view of the filtered list of persons */","lastModifiedDate":"2017-09-01"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    ObservableList\u003cPerson\u003e getFilteredPersonList();","lastModifiedDate":"2018-01-10"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-26"},{"lineNumber":37,"author":{"gitId":"XXJJXJ"},"content":"    /** Returns an unmodifiable view of list of Events */","lastModifiedDate":"2021-09-18"},{"lineNumber":38,"author":{"gitId":"XXJJXJ"},"content":"    ObservableList\u003cEvent\u003e getEventList();","lastModifiedDate":"2021-09-18"},{"lineNumber":39,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     * Set the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"XXJJXJ":4,"-":50}},{"path":"src/main/java/seedu/address/logic/LogicManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-29"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2016-09-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2016-09-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.AddressBookParser;","lastModifiedDate":"2017-07-07"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-12-03"},{"lineNumber":17,"author":{"gitId":"XXJJXJ"},"content":"import seedu.address.model.event.Event;","lastModifiedDate":"2021-09-18"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.storage.Storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * The main LogicManager of the app.","lastModifiedDate":"2016-09-22"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class LogicManager implements Logic {","lastModifiedDate":"2018-12-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static final String FILE_OPS_ERROR_MESSAGE \u003d \"Could not save data to file: \";","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(LogicManager.class);","lastModifiedDate":"2016-09-29"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final Model model;","lastModifiedDate":"2016-09-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private final Storage storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private final AddressBookParser addressBookParser;","lastModifiedDate":"2017-07-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Constructs a {@code LogicManager} with the given {@code Model} and {@code Storage}.","lastModifiedDate":"2020-05-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public LogicManager(Model model, Storage storage) {","lastModifiedDate":"2018-12-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        this.model \u003d model;","lastModifiedDate":"2016-09-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        addressBookParser \u003d new AddressBookParser();","lastModifiedDate":"2018-01-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public CommandResult execute(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        logger.info(\"----------------[USER COMMAND][\" + commandText + \"]\");","lastModifiedDate":"2016-09-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        CommandResult commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        Command command \u003d addressBookParser.parseCommand(commandText);","lastModifiedDate":"2017-07-07"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        commandResult \u003d command.execute(model);","lastModifiedDate":"2019-01-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            storage.saveAddressBook(model.getAddressBook());","lastModifiedDate":"2018-12-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2018-12-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            throw new CommandException(FILE_OPS_ERROR_MESSAGE + ioe, ioe);","lastModifiedDate":"2018-12-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-03"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2018-12-03"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        return model.getAddressBook();","lastModifiedDate":"2018-12-03"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-03"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        return model.getFilteredPersonList();","lastModifiedDate":"2016-09-25"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-29"},{"lineNumber":68,"author":{"gitId":"XXJJXJ"},"content":"    @Override","lastModifiedDate":"2021-09-18"},{"lineNumber":69,"author":{"gitId":"XXJJXJ"},"content":"    public ObservableList\u003cEvent\u003e getEventList() {","lastModifiedDate":"2021-09-18"},{"lineNumber":70,"author":{"gitId":"XXJJXJ"},"content":"        return model.getEventList();","lastModifiedDate":"2021-09-18"},{"lineNumber":71,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":72,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        return model.getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        return model.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        model.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"XXJJXJ":6,"-":81}},{"path":"src/main/java/seedu/address/logic/parser/AddressBookParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ClearCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2017-01-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ExitCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.HelpCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * Parses user input.","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"public class AddressBookParser {","lastModifiedDate":"2017-07-07"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * Used for initial separation of command word and args.","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final Pattern BASIC_COMMAND_FORMAT \u003d Pattern.compile(\"(?\u003ccommandWord\u003e\\\\S+)(?\u003carguments\u003e.*)\");","lastModifiedDate":"2016-09-22"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Parses user input into command for execution.","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * @param userInput full user input string","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * @return the command based on the user input","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public Command parseCommand(String userInput) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        final Matcher matcher \u003d BASIC_COMMAND_FORMAT.matcher(userInput.trim());","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-03-11"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        final String commandWord \u003d matcher.group(\"commandWord\");","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        switch (commandWord) {","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        case AddCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            return new AddCommandParser().parse(arguments);","lastModifiedDate":"2017-02-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        case EditCommand.COMMAND_WORD:","lastModifiedDate":"2016-12-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            return new EditCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        case DeleteCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            return new DeleteCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        case ClearCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            return new ClearCommand();","lastModifiedDate":"2016-09-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        case FindCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"            return new FindCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        case ListCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            return new ListCommand();","lastModifiedDate":"2016-09-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        case ExitCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"            return new ExitCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        case HelpCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"            return new HelpCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":71,"author":{"gitId":"XXJJXJ"},"content":"        //Add new Commands and cases here:","lastModifiedDate":"2021-09-18"},{"lineNumber":72,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":73,"author":{"gitId":"XXJJXJ"},"content":"        // TODO: addEvent (Use Parser):","lastModifiedDate":"2021-09-18"},{"lineNumber":74,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":75,"author":{"gitId":"XXJJXJ"},"content":"        // TODO: removeEvent (Use Parser):","lastModifiedDate":"2021-09-18"},{"lineNumber":76,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":77,"author":{"gitId":"XXJJXJ"},"content":"        // TODO: doneEvent (Use Parser):","lastModifiedDate":"2021-09-19"},{"lineNumber":78,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":79,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":80,"author":{"gitId":"XXJJXJ"},"content":"        // TODO: sortEvents:","lastModifiedDate":"2021-09-18"},{"lineNumber":81,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":82,"author":{"gitId":"XXJJXJ"},"content":"        // TODO: filterEvents (Use Parser):","lastModifiedDate":"2021-09-18"},{"lineNumber":83,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":84,"author":{"gitId":"XXJJXJ"},"content":"        // TODO: addParticipant (Use Parser):","lastModifiedDate":"2021-09-18"},{"lineNumber":85,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":86,"author":{"gitId":"XXJJXJ"},"content":"        // TODO: removeParticipant (Use Parser):","lastModifiedDate":"2021-09-18"},{"lineNumber":87,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":88,"author":{"gitId":"XXJJXJ"},"content":"        // TODO: findParticipant (Use Parser):","lastModifiedDate":"2021-09-18"},{"lineNumber":89,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":90,"author":{"gitId":"XXJJXJ"},"content":"        // TODO: showDetails (Use Parser):","lastModifiedDate":"2021-09-18"},{"lineNumber":91,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":92,"author":{"gitId":"XXJJXJ"},"content":"        // TODO: showParticipants (Use Parser):","lastModifiedDate":"2021-09-18"},{"lineNumber":93,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        default:","lastModifiedDate":"2016-08-26"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-03-11"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":99,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"XXJJXJ":23,"-":76}},{"path":"src/main/java/seedu/address/logic/parser/CliSyntax.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Contains Command Line Interface (CLI) syntax definitions common to multiple commands","lastModifiedDate":"2017-02-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class CliSyntax {","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    /* Prefix definitions */","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"XXJJXJ"},"content":"    public static final Prefix PREFIX_PARTICIPANT_ID \u003d new Prefix(\"id/\");","lastModifiedDate":"2021-09-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_NAME \u003d new Prefix(\"n/\");","lastModifiedDate":"2017-06-06"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_PHONE \u003d new Prefix(\"p/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_EMAIL \u003d new Prefix(\"e/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_ADDRESS \u003d new Prefix(\"a/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":14,"author":{"gitId":"XXJJXJ"},"content":"    public static final Prefix PREFIX_TAG \u003d new Prefix(\"tag/\");","lastModifiedDate":"2021-09-25"},{"lineNumber":15,"author":{"gitId":"XXJJXJ"},"content":"    public static final Prefix PREFIX_TIME \u003d new Prefix(\"t/\");","lastModifiedDate":"2021-09-25"},{"lineNumber":16,"author":{"gitId":"XXJJXJ"},"content":"    public static final Prefix PREFIX_EVENT \u003d new Prefix(\"ev/\");","lastModifiedDate":"2021-09-25"},{"lineNumber":17,"author":{"gitId":"XXJJXJ"},"content":"    public static final Prefix PREFIX_DATE \u003d new Prefix(\"d/\");","lastModifiedDate":"2021-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":19,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"XXJJXJ":5,"-":14}},{"path":"src/main/java/seedu/address/model/AddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"XXJJXJ"},"content":"import seedu.address.model.event.Event;","lastModifiedDate":"2021-09-18"},{"lineNumber":9,"author":{"gitId":"XXJJXJ"},"content":"import seedu.address.model.event.UniqueEventList;","lastModifiedDate":"2021-09-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.UniquePersonList;","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Wraps all data at the address-book level","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * Duplicates are not allowed (by .isSamePerson comparison)","lastModifiedDate":"2018-04-19"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class AddressBook implements ReadOnlyAddressBook {","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private final UniquePersonList persons;","lastModifiedDate":"2016-08-26"},{"lineNumber":20,"author":{"gitId":"XXJJXJ"},"content":"    private final UniqueEventList events;","lastModifiedDate":"2021-09-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * The \u0027unusual\u0027 code block below is a non-static initialization block, sometimes used to avoid duplication","lastModifiedDate":"2019-05-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * between constructors. See https://docs.oracle.com/javase/tutorial/java/javaOO/initial.html","lastModifiedDate":"2016-10-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * Note that non-static init blocks are not recommended to use. There are other ways to avoid duplication","lastModifiedDate":"2016-10-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     *   among constructors.","lastModifiedDate":"2016-10-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    {","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        persons \u003d new UniquePersonList();","lastModifiedDate":"2016-08-26"},{"lineNumber":31,"author":{"gitId":"XXJJXJ"},"content":"        //Add on for Managera","lastModifiedDate":"2021-09-18"},{"lineNumber":32,"author":{"gitId":"XXJJXJ"},"content":"        events \u003d new UniqueEventList();","lastModifiedDate":"2021-09-18"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public AddressBook() {}","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * Creates an AddressBook using the Persons in the {@code toBeCopied}","lastModifiedDate":"2018-03-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public AddressBook(ReadOnlyAddressBook toBeCopied) {","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        this();","lastModifiedDate":"2016-12-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        resetData(toBeCopied);","lastModifiedDate":"2016-12-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    //// list overwrite operations","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Replaces the contents of the person list with {@code persons}.","lastModifiedDate":"2018-08-07"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * {@code persons} must not contain duplicate persons.","lastModifiedDate":"2018-08-07"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void setPersons(List\u003cPerson\u003e persons) {","lastModifiedDate":"2018-08-07"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        this.persons.setPersons(persons);","lastModifiedDate":"2016-10-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * Resets the existing data of this {@code AddressBook} with {@code newData}.","lastModifiedDate":"2017-08-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void resetData(ReadOnlyAddressBook newData) {","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        requireNonNull(newData);","lastModifiedDate":"2017-05-15"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-20"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        setPersons(newData.getPersonList());","lastModifiedDate":"2018-03-29"},{"lineNumber":62,"author":{"gitId":"XXJJXJ"},"content":"        setEvents(newData.getEventList());","lastModifiedDate":"2021-09-18"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    //// person-level operations","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     * Returns true if a person with the same identity as {@code person} exists in the address book.","lastModifiedDate":"2018-08-06"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-06"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        return persons.contains(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * Adds a person to the address book.","lastModifiedDate":"2016-09-21"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     * The person must not already exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public void addPerson(Person p) {","lastModifiedDate":"2018-08-07"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        persons.add(p);","lastModifiedDate":"2018-03-29"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * Replaces the given person {@code target} in the list with {@code editedPerson}.","lastModifiedDate":"2018-01-10"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        requireNonNull(editedPerson);","lastModifiedDate":"2018-01-10"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        persons.setPerson(target, editedPerson);","lastModifiedDate":"2018-03-29"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * Removes {@code key} from this {@code AddressBook}.","lastModifiedDate":"2017-08-16"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     * {@code key} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    public void removePerson(Person key) {","lastModifiedDate":"2018-08-07"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        persons.remove(key);","lastModifiedDate":"2018-02-28"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":102,"author":{"gitId":"XXJJXJ"},"content":"    //Add on for Managera","lastModifiedDate":"2021-09-18"},{"lineNumber":103,"author":{"gitId":"XXJJXJ"},"content":"    /**","lastModifiedDate":"2021-09-18"},{"lineNumber":104,"author":{"gitId":"XXJJXJ"},"content":"     * Replaces the contents of the event list with {@code events}.","lastModifiedDate":"2021-09-18"},{"lineNumber":105,"author":{"gitId":"XXJJXJ"},"content":"     * {@code events} must not contain duplicate events.","lastModifiedDate":"2021-09-18"},{"lineNumber":106,"author":{"gitId":"XXJJXJ"},"content":"     */","lastModifiedDate":"2021-09-18"},{"lineNumber":107,"author":{"gitId":"XXJJXJ"},"content":"    public void setEvents(List\u003cEvent\u003e events) {","lastModifiedDate":"2021-09-18"},{"lineNumber":108,"author":{"gitId":"XXJJXJ"},"content":"        this.events.setEvents(events);","lastModifiedDate":"2021-09-18"},{"lineNumber":109,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":110,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":111,"author":{"gitId":"XXJJXJ"},"content":"    /**","lastModifiedDate":"2021-09-18"},{"lineNumber":112,"author":{"gitId":"XXJJXJ"},"content":"     * Returns true if an event with the same identity as {@code event} exists in the address book.","lastModifiedDate":"2021-09-18"},{"lineNumber":113,"author":{"gitId":"XXJJXJ"},"content":"     */","lastModifiedDate":"2021-09-18"},{"lineNumber":114,"author":{"gitId":"XXJJXJ"},"content":"    public boolean hasEvent(Event event) {","lastModifiedDate":"2021-09-18"},{"lineNumber":115,"author":{"gitId":"XXJJXJ"},"content":"        requireNonNull(event);","lastModifiedDate":"2021-09-18"},{"lineNumber":116,"author":{"gitId":"XXJJXJ"},"content":"        return events.contains(event);","lastModifiedDate":"2021-09-18"},{"lineNumber":117,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":118,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":119,"author":{"gitId":"XXJJXJ"},"content":"    /**","lastModifiedDate":"2021-09-18"},{"lineNumber":120,"author":{"gitId":"XXJJXJ"},"content":"     * Adds a person to the address book.","lastModifiedDate":"2021-09-18"},{"lineNumber":121,"author":{"gitId":"XXJJXJ"},"content":"     * The person must not already exist in the address book.","lastModifiedDate":"2021-09-18"},{"lineNumber":122,"author":{"gitId":"XXJJXJ"},"content":"     */","lastModifiedDate":"2021-09-18"},{"lineNumber":123,"author":{"gitId":"XXJJXJ"},"content":"    public void addEvent(Event e) {","lastModifiedDate":"2021-09-18"},{"lineNumber":124,"author":{"gitId":"XXJJXJ"},"content":"        events.add(e);","lastModifiedDate":"2021-09-18"},{"lineNumber":125,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":126,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":127,"author":{"gitId":"XXJJXJ"},"content":"    //setEvent omitted for future implementation","lastModifiedDate":"2021-09-18"},{"lineNumber":128,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":129,"author":{"gitId":"XXJJXJ"},"content":"    /**","lastModifiedDate":"2021-09-18"},{"lineNumber":130,"author":{"gitId":"XXJJXJ"},"content":"     * Removes {@code key} from this {@code AddressBook}.","lastModifiedDate":"2021-09-18"},{"lineNumber":131,"author":{"gitId":"XXJJXJ"},"content":"     * {@code key} must exist in the address book.","lastModifiedDate":"2021-09-18"},{"lineNumber":132,"author":{"gitId":"XXJJXJ"},"content":"     */","lastModifiedDate":"2021-09-18"},{"lineNumber":133,"author":{"gitId":"XXJJXJ"},"content":"    public void removeEvent(Event key) {","lastModifiedDate":"2021-09-18"},{"lineNumber":134,"author":{"gitId":"XXJJXJ"},"content":"        events.remove(key);","lastModifiedDate":"2021-09-18"},{"lineNumber":135,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":136,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    //// util methods","lastModifiedDate":"2016-08-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-08"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        return persons.asUnmodifiableObservableList().size() + \" persons\";","lastModifiedDate":"2018-04-05"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        // TODO: refine later","lastModifiedDate":"2016-08-08"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        return persons.asUnmodifiableObservableList();","lastModifiedDate":"2018-04-05"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-01"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-01"},{"lineNumber":150,"author":{"gitId":"XXJJXJ"},"content":"    @Override","lastModifiedDate":"2021-09-18"},{"lineNumber":151,"author":{"gitId":"XXJJXJ"},"content":"    public ObservableList\u003cEvent\u003e getEventList() {","lastModifiedDate":"2021-09-18"},{"lineNumber":152,"author":{"gitId":"XXJJXJ"},"content":"        return events.asUnmodifiableObservableList();","lastModifiedDate":"2021-09-18"},{"lineNumber":153,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":154,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-21"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-09-21"},{"lineNumber":158,"author":{"gitId":"-"},"content":"                || (other instanceof AddressBook // instanceof handles nulls","lastModifiedDate":"2016-09-21"},{"lineNumber":159,"author":{"gitId":"-"},"content":"                \u0026\u0026 persons.equals(((AddressBook) other).persons));","lastModifiedDate":"2018-08-14"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-21"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        return persons.hashCode();","lastModifiedDate":"2018-03-29"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":166,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"XXJJXJ":46,"-":120}},{"path":"src/main/java/seedu/address/model/Model.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":8,"author":{"gitId":"XXJJXJ"},"content":"import seedu.address.model.event.Event;","lastModifiedDate":"2021-09-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * The API of the Model component.","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public interface Model {","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /** {@code Predicate} that always evaluate to true */","lastModifiedDate":"2017-08-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    Predicate\u003cPerson\u003e PREDICATE_SHOW_ALL_PERSONS \u003d unused -\u003e true;","lastModifiedDate":"2018-01-10"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * Replaces user prefs data with the data in {@code userPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    void setUserPrefs(ReadOnlyUserPrefs userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Returns the user prefs.","lastModifiedDate":"2018-11-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    ReadOnlyUserPrefs getUserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    void setAddressBookFilePath(Path addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * Replaces address book data with the data in {@code addressBook}.","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    void setAddressBook(ReadOnlyAddressBook addressBook);","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    /** Returns the AddressBook */","lastModifiedDate":"2016-09-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    ReadOnlyAddressBook getAddressBook();","lastModifiedDate":"2016-09-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * Returns true if a person with the same identity as {@code person} exists in the address book.","lastModifiedDate":"2018-08-06"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    boolean hasPerson(Person person);","lastModifiedDate":"2018-08-06"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * Deletes the given person.","lastModifiedDate":"2018-08-07"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * The person must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    void deletePerson(Person target);","lastModifiedDate":"2018-08-07"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     * Adds the given person.","lastModifiedDate":"2018-08-07"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * {@code person} must not already exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    void addPerson(Person person);","lastModifiedDate":"2018-08-07"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * Replaces the given person {@code target} with {@code editedPerson}.","lastModifiedDate":"2017-06-07"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    void setPerson(Person target, Person editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    /** Returns an unmodifiable view of the filtered person list */","lastModifiedDate":"2017-09-01"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    ObservableList\u003cPerson\u003e getFilteredPersonList();","lastModifiedDate":"2018-01-10"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-05"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * Updates the filter of the filtered person list to filter by the given {@code predicate}.","lastModifiedDate":"2017-08-05"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2017-08-05"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-05"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate);","lastModifiedDate":"2018-01-10"},{"lineNumber":88,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":89,"author":{"gitId":"XXJJXJ"},"content":"    /** Returns an unmodifiable view of list of Events */","lastModifiedDate":"2021-09-18"},{"lineNumber":90,"author":{"gitId":"XXJJXJ"},"content":"    ObservableList\u003cEvent\u003e getEventList();","lastModifiedDate":"2021-09-18"},{"lineNumber":91,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"XXJJXJ":4,"-":87}},{"path":"src/main/java/seedu/address/model/ModelManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-08-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2017-05-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.collections.transformation.FilteredList;","lastModifiedDate":"2016-08-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":14,"author":{"gitId":"XXJJXJ"},"content":"import seedu.address.model.event.Event;","lastModifiedDate":"2021-09-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * Represents the in-memory model of the address book data.","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class ModelManager implements Model {","lastModifiedDate":"2018-12-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(ModelManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private final AddressBook addressBook;","lastModifiedDate":"2019-01-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private final UserPrefs userPrefs;","lastModifiedDate":"2018-12-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private final FilteredList\u003cPerson\u003e filteredPersons;","lastModifiedDate":"2018-01-10"},{"lineNumber":26,"author":{"gitId":"XXJJXJ"},"content":"    //Add-ons for Managera","lastModifiedDate":"2021-09-18"},{"lineNumber":27,"author":{"gitId":"XXJJXJ"},"content":"    private final FilteredList\u003cEvent\u003e events;","lastModifiedDate":"2021-09-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Initializes a ModelManager with the given addressBook and userPrefs.","lastModifiedDate":"2016-12-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public ModelManager(ReadOnlyAddressBook addressBook, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        super();","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        requireAllNonNull(addressBook, userPrefs);","lastModifiedDate":"2017-05-19"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        logger.fine(\"Initializing with address book: \" + addressBook + \" and user prefs \" + userPrefs);","lastModifiedDate":"2016-12-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        this.addressBook \u003d new AddressBook(addressBook);","lastModifiedDate":"2019-01-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        this.userPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        filteredPersons \u003d new FilteredList\u003c\u003e(this.addressBook.getPersonList());","lastModifiedDate":"2019-01-25"},{"lineNumber":41,"author":{"gitId":"XXJJXJ"},"content":"        //Add-ons for Managera","lastModifiedDate":"2021-09-18"},{"lineNumber":42,"author":{"gitId":"XXJJXJ"},"content":"        events \u003d new FilteredList\u003c\u003e(this.addressBook.getEventList());","lastModifiedDate":"2021-09-18"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public ModelManager() {","lastModifiedDate":"2016-09-22"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        this(new AddressBook(), new UserPrefs());","lastModifiedDate":"2016-09-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        requireNonNull(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        this.userPrefs.resetData(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        return userPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        return userPrefs.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        return userPrefs.getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-11-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        requireNonNull(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d AddressBook \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public void setAddressBook(ReadOnlyAddressBook addressBook) {","lastModifiedDate":"2018-11-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        this.addressBook.resetData(addressBook);","lastModifiedDate":"2019-01-25"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2016-09-21"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        return addressBook;","lastModifiedDate":"2019-01-25"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-15"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        return addressBook.hasPerson(person);","lastModifiedDate":"2019-01-25"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    public void deletePerson(Person target) {","lastModifiedDate":"2018-08-15"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        addressBook.removePerson(target);","lastModifiedDate":"2019-01-25"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    public void addPerson(Person person) {","lastModifiedDate":"2018-08-15"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        addressBook.addPerson(person);","lastModifiedDate":"2019-01-25"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-26"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-13"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        requireAllNonNull(target, editedPerson);","lastModifiedDate":"2017-06-07"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        addressBook.setPerson(target, editedPerson);","lastModifiedDate":"2019-01-25"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Filtered Person List Accessors \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2016-10-12"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-19"},{"lineNumber":123,"author":{"gitId":"-"},"content":"     * Returns an unmodifiable view of the list of {@code Person} backed by the internal list of","lastModifiedDate":"2018-01-10"},{"lineNumber":124,"author":{"gitId":"-"},"content":"     * {@code versionedAddressBook}","lastModifiedDate":"2018-06-11"},{"lineNumber":125,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-19"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        return filteredPersons;","lastModifiedDate":"2018-12-09"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2018-01-10"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2017-08-05"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        filteredPersons.setPredicate(predicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":137,"author":{"gitId":"XXJJXJ"},"content":"    /**","lastModifiedDate":"2021-09-18"},{"lineNumber":138,"author":{"gitId":"XXJJXJ"},"content":"     * Returns an unmodifiable view of the list of {@code Event} backed by the internal list of","lastModifiedDate":"2021-09-18"},{"lineNumber":139,"author":{"gitId":"XXJJXJ"},"content":"     * {@code versionedAddressBook}","lastModifiedDate":"2021-09-18"},{"lineNumber":140,"author":{"gitId":"XXJJXJ"},"content":"     */","lastModifiedDate":"2021-09-18"},{"lineNumber":141,"author":{"gitId":"XXJJXJ"},"content":"    @Override","lastModifiedDate":"2021-09-18"},{"lineNumber":142,"author":{"gitId":"XXJJXJ"},"content":"    public ObservableList\u003cEvent\u003e getEventList() {","lastModifiedDate":"2021-09-18"},{"lineNumber":143,"author":{"gitId":"XXJJXJ"},"content":"        return events;","lastModifiedDate":"2021-09-18"},{"lineNumber":144,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":145,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-31"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2017-05-31"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-05-31"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        if (obj \u003d\u003d this) {","lastModifiedDate":"2017-05-31"},{"lineNumber":150,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-31"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-31"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        if (!(obj instanceof ModelManager)) {","lastModifiedDate":"2017-05-31"},{"lineNumber":155,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-31"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-05-31"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        ModelManager other \u003d (ModelManager) obj;","lastModifiedDate":"2017-05-31"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        return addressBook.equals(other.addressBook)","lastModifiedDate":"2019-01-25"},{"lineNumber":161,"author":{"gitId":"-"},"content":"                \u0026\u0026 userPrefs.equals(other.userPrefs)","lastModifiedDate":"2018-11-27"},{"lineNumber":162,"author":{"gitId":"-"},"content":"                \u0026\u0026 filteredPersons.equals(other.filteredPersons);","lastModifiedDate":"2019-01-25"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":165,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"XXJJXJ":14,"-":151}},{"path":"src/main/java/seedu/address/model/ReadOnlyAddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"XXJJXJ"},"content":"import seedu.address.model.event.Event;","lastModifiedDate":"2021-09-18"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Unmodifiable view of an address book","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public interface ReadOnlyAddressBook {","lastModifiedDate":"2019-01-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     * Returns an unmodifiable view of the persons list.","lastModifiedDate":"2016-12-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * This list will not contain any duplicate persons.","lastModifiedDate":"2016-12-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    ObservableList\u003cPerson\u003e getPersonList();","lastModifiedDate":"2018-01-10"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"XXJJXJ"},"content":"    /**","lastModifiedDate":"2021-09-18"},{"lineNumber":19,"author":{"gitId":"XXJJXJ"},"content":"     * Returns an unmodifiable view of the events list.","lastModifiedDate":"2021-09-18"},{"lineNumber":20,"author":{"gitId":"XXJJXJ"},"content":"     * This list will not contain any duplicate events.","lastModifiedDate":"2021-09-18"},{"lineNumber":21,"author":{"gitId":"XXJJXJ"},"content":"     */","lastModifiedDate":"2021-09-18"},{"lineNumber":22,"author":{"gitId":"XXJJXJ"},"content":"    ObservableList\u003cEvent\u003e getEventList();","lastModifiedDate":"2021-09-18"},{"lineNumber":23,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"XXJJXJ":7,"-":17}},{"path":"src/main/java/seedu/address/model/event/Event.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"XXJJXJ"},"content":"package seedu.address.model.event;","lastModifiedDate":"2021-09-17"},{"lineNumber":2,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":3,"author":{"gitId":"XXJJXJ"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-09-17"},{"lineNumber":4,"author":{"gitId":"XXJJXJ"},"content":"import java.util.Collections;","lastModifiedDate":"2021-09-17"},{"lineNumber":5,"author":{"gitId":"XXJJXJ"},"content":"import java.util.List;","lastModifiedDate":"2021-09-17"},{"lineNumber":6,"author":{"gitId":"XXJJXJ"},"content":"import java.util.Objects;","lastModifiedDate":"2021-09-18"},{"lineNumber":7,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":8,"author":{"gitId":"XXJJXJ"},"content":"import seedu.address.model.particpant.Participant;","lastModifiedDate":"2021-09-17"},{"lineNumber":9,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":10,"author":{"gitId":"XXJJXJ"},"content":"/**","lastModifiedDate":"2021-09-17"},{"lineNumber":11,"author":{"gitId":"XXJJXJ"},"content":" * This is an Event class.","lastModifiedDate":"2021-09-17"},{"lineNumber":12,"author":{"gitId":"XXJJXJ"},"content":" */","lastModifiedDate":"2021-09-17"},{"lineNumber":13,"author":{"gitId":"XXJJXJ"},"content":"public class Event implements Comparable\u003cEvent\u003e {","lastModifiedDate":"2021-09-18"},{"lineNumber":14,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":15,"author":{"gitId":"XXJJXJ"},"content":"    private boolean isDone \u003d false;","lastModifiedDate":"2021-09-17"},{"lineNumber":16,"author":{"gitId":"XXJJXJ"},"content":"    private ArrayList\u003cParticipant\u003e participants \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-09-17"},{"lineNumber":17,"author":{"gitId":"XXJJXJ"},"content":"    private EventName eventName;","lastModifiedDate":"2021-09-18"},{"lineNumber":18,"author":{"gitId":"XXJJXJ"},"content":"    private EventDate eventDate;","lastModifiedDate":"2021-09-18"},{"lineNumber":19,"author":{"gitId":"XXJJXJ"},"content":"    private EventTime eventTime;","lastModifiedDate":"2021-09-18"},{"lineNumber":20,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":21,"author":{"gitId":"XXJJXJ"},"content":"    /**","lastModifiedDate":"2021-09-17"},{"lineNumber":22,"author":{"gitId":"XXJJXJ"},"content":"     * This is the constructor of an Event.","lastModifiedDate":"2021-09-18"},{"lineNumber":23,"author":{"gitId":"XXJJXJ"},"content":"     *","lastModifiedDate":"2021-09-17"},{"lineNumber":24,"author":{"gitId":"XXJJXJ"},"content":"     * @param name of the Event.","lastModifiedDate":"2021-09-17"},{"lineNumber":25,"author":{"gitId":"XXJJXJ"},"content":"     * @param date at which the Event occurs.","lastModifiedDate":"2021-09-17"},{"lineNumber":26,"author":{"gitId":"XXJJXJ"},"content":"     * @param time of the Event.","lastModifiedDate":"2021-09-17"},{"lineNumber":27,"author":{"gitId":"XXJJXJ"},"content":"     */","lastModifiedDate":"2021-09-17"},{"lineNumber":28,"author":{"gitId":"XXJJXJ"},"content":"    public Event(EventName name, EventDate date, EventTime time) {","lastModifiedDate":"2021-09-18"},{"lineNumber":29,"author":{"gitId":"XXJJXJ"},"content":"        this.eventName \u003d name;","lastModifiedDate":"2021-09-18"},{"lineNumber":30,"author":{"gitId":"XXJJXJ"},"content":"        this.eventDate \u003d date;","lastModifiedDate":"2021-09-18"},{"lineNumber":31,"author":{"gitId":"XXJJXJ"},"content":"        this.eventTime \u003d time;","lastModifiedDate":"2021-09-18"},{"lineNumber":32,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":33,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":34,"author":{"gitId":"XXJJXJ"},"content":"    /**","lastModifiedDate":"2021-09-17"},{"lineNumber":35,"author":{"gitId":"XXJJXJ"},"content":"     * This is an overloaded constructor of Event.","lastModifiedDate":"2021-09-17"},{"lineNumber":36,"author":{"gitId":"XXJJXJ"},"content":"     *","lastModifiedDate":"2021-09-17"},{"lineNumber":37,"author":{"gitId":"XXJJXJ"},"content":"     * @param name of the Event.","lastModifiedDate":"2021-09-17"},{"lineNumber":38,"author":{"gitId":"XXJJXJ"},"content":"     * @param date at which the Event occurs.","lastModifiedDate":"2021-09-17"},{"lineNumber":39,"author":{"gitId":"XXJJXJ"},"content":"     */","lastModifiedDate":"2021-09-17"},{"lineNumber":40,"author":{"gitId":"XXJJXJ"},"content":"    public Event(EventName name, EventDate date) {","lastModifiedDate":"2021-09-18"},{"lineNumber":41,"author":{"gitId":"XXJJXJ"},"content":"        this(name, date, new EventTime());","lastModifiedDate":"2021-09-18"},{"lineNumber":42,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":43,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":44,"author":{"gitId":"XXJJXJ"},"content":"    public EventName getName() {","lastModifiedDate":"2021-09-18"},{"lineNumber":45,"author":{"gitId":"XXJJXJ"},"content":"        return this.eventName;","lastModifiedDate":"2021-09-18"},{"lineNumber":46,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":47,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":48,"author":{"gitId":"XXJJXJ"},"content":"    public EventDate getDate() {","lastModifiedDate":"2021-09-18"},{"lineNumber":49,"author":{"gitId":"XXJJXJ"},"content":"        return this.eventDate;","lastModifiedDate":"2021-09-18"},{"lineNumber":50,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":51,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":52,"author":{"gitId":"XXJJXJ"},"content":"    public EventTime getTime() {","lastModifiedDate":"2021-09-18"},{"lineNumber":53,"author":{"gitId":"XXJJXJ"},"content":"        return this.eventTime;","lastModifiedDate":"2021-09-18"},{"lineNumber":54,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":55,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":56,"author":{"gitId":"XXJJXJ"},"content":"    public boolean getIsDone() {","lastModifiedDate":"2021-09-17"},{"lineNumber":57,"author":{"gitId":"XXJJXJ"},"content":"        return this.isDone;","lastModifiedDate":"2021-09-17"},{"lineNumber":58,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":59,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":60,"author":{"gitId":"XXJJXJ"},"content":"    public List\u003cParticipant\u003e getParticipants() {","lastModifiedDate":"2021-09-17"},{"lineNumber":61,"author":{"gitId":"XXJJXJ"},"content":"        return Collections.unmodifiableList(this.participants);","lastModifiedDate":"2021-09-17"},{"lineNumber":62,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":63,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":64,"author":{"gitId":"XXJJXJ"},"content":"    /**","lastModifiedDate":"2021-09-17"},{"lineNumber":65,"author":{"gitId":"XXJJXJ"},"content":"     * Marks the Event as done.","lastModifiedDate":"2021-09-17"},{"lineNumber":66,"author":{"gitId":"XXJJXJ"},"content":"     */","lastModifiedDate":"2021-09-17"},{"lineNumber":67,"author":{"gitId":"XXJJXJ"},"content":"    public void markAsDone() {","lastModifiedDate":"2021-09-17"},{"lineNumber":68,"author":{"gitId":"XXJJXJ"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2021-09-17"},{"lineNumber":69,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":70,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":71,"author":{"gitId":"XXJJXJ"},"content":"    /**","lastModifiedDate":"2021-09-18"},{"lineNumber":72,"author":{"gitId":"XXJJXJ"},"content":"     * Returns true if both events have the same name.","lastModifiedDate":"2021-09-18"},{"lineNumber":73,"author":{"gitId":"XXJJXJ"},"content":"     * This defines a weaker notion of equality between two events.","lastModifiedDate":"2021-09-18"},{"lineNumber":74,"author":{"gitId":"XXJJXJ"},"content":"     *","lastModifiedDate":"2021-09-18"},{"lineNumber":75,"author":{"gitId":"XXJJXJ"},"content":"     * @param otherEvent to be compared to this event.","lastModifiedDate":"2021-09-18"},{"lineNumber":76,"author":{"gitId":"XXJJXJ"},"content":"     * @return A boolean to indicate if the events are the same or has the same name.","lastModifiedDate":"2021-09-18"},{"lineNumber":77,"author":{"gitId":"XXJJXJ"},"content":"     */","lastModifiedDate":"2021-09-18"},{"lineNumber":78,"author":{"gitId":"XXJJXJ"},"content":"    public boolean isSameEvent(Event otherEvent) {","lastModifiedDate":"2021-09-18"},{"lineNumber":79,"author":{"gitId":"XXJJXJ"},"content":"        if (otherEvent \u003d\u003d this) {","lastModifiedDate":"2021-09-18"},{"lineNumber":80,"author":{"gitId":"XXJJXJ"},"content":"            return true;","lastModifiedDate":"2021-09-18"},{"lineNumber":81,"author":{"gitId":"XXJJXJ"},"content":"        }","lastModifiedDate":"2021-09-18"},{"lineNumber":82,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":83,"author":{"gitId":"XXJJXJ"},"content":"        return otherEvent !\u003d null","lastModifiedDate":"2021-09-18"},{"lineNumber":84,"author":{"gitId":"XXJJXJ"},"content":"                \u0026\u0026 otherEvent.getName().equals(getName());","lastModifiedDate":"2021-09-18"},{"lineNumber":85,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":86,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":87,"author":{"gitId":"XXJJXJ"},"content":"    /**","lastModifiedDate":"2021-09-18"},{"lineNumber":88,"author":{"gitId":"XXJJXJ"},"content":"     * Returns true if both events have the same identity and data fields.","lastModifiedDate":"2021-09-18"},{"lineNumber":89,"author":{"gitId":"XXJJXJ"},"content":"     * This defines a stronger notion of equality between two events.","lastModifiedDate":"2021-09-18"},{"lineNumber":90,"author":{"gitId":"XXJJXJ"},"content":"     */","lastModifiedDate":"2021-09-18"},{"lineNumber":91,"author":{"gitId":"XXJJXJ"},"content":"    @Override","lastModifiedDate":"2021-09-18"},{"lineNumber":92,"author":{"gitId":"XXJJXJ"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-09-18"},{"lineNumber":93,"author":{"gitId":"XXJJXJ"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2021-09-18"},{"lineNumber":94,"author":{"gitId":"XXJJXJ"},"content":"            return true;","lastModifiedDate":"2021-09-18"},{"lineNumber":95,"author":{"gitId":"XXJJXJ"},"content":"        }","lastModifiedDate":"2021-09-18"},{"lineNumber":96,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":97,"author":{"gitId":"XXJJXJ"},"content":"        if (!(other instanceof Event)) {","lastModifiedDate":"2021-09-18"},{"lineNumber":98,"author":{"gitId":"XXJJXJ"},"content":"            return false;","lastModifiedDate":"2021-09-18"},{"lineNumber":99,"author":{"gitId":"XXJJXJ"},"content":"        }","lastModifiedDate":"2021-09-18"},{"lineNumber":100,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":101,"author":{"gitId":"XXJJXJ"},"content":"        Event otherEvent \u003d (Event) other;","lastModifiedDate":"2021-09-18"},{"lineNumber":102,"author":{"gitId":"XXJJXJ"},"content":"        return otherEvent.getName().equals(getName())","lastModifiedDate":"2021-09-18"},{"lineNumber":103,"author":{"gitId":"XXJJXJ"},"content":"                \u0026\u0026 otherEvent.getDate().equals(getDate())","lastModifiedDate":"2021-09-18"},{"lineNumber":104,"author":{"gitId":"XXJJXJ"},"content":"                \u0026\u0026 otherEvent.getTime().equals(getTime())","lastModifiedDate":"2021-09-18"},{"lineNumber":105,"author":{"gitId":"XXJJXJ"},"content":"                \u0026\u0026 otherEvent.getIsDone() \u003d\u003d (getIsDone())","lastModifiedDate":"2021-09-18"},{"lineNumber":106,"author":{"gitId":"XXJJXJ"},"content":"                \u0026\u0026 otherEvent.getParticipants().equals(getParticipants());","lastModifiedDate":"2021-09-18"},{"lineNumber":107,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":108,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":109,"author":{"gitId":"XXJJXJ"},"content":"    @Override","lastModifiedDate":"2021-09-18"},{"lineNumber":110,"author":{"gitId":"XXJJXJ"},"content":"    public int hashCode() {","lastModifiedDate":"2021-09-18"},{"lineNumber":111,"author":{"gitId":"XXJJXJ"},"content":"        // use this method for custom fields hashing instead of implementing your own","lastModifiedDate":"2021-09-18"},{"lineNumber":112,"author":{"gitId":"XXJJXJ"},"content":"        return Objects.hash(eventName, isDone, eventDate, eventTime, participants);","lastModifiedDate":"2021-09-18"},{"lineNumber":113,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":114,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":115,"author":{"gitId":"XXJJXJ"},"content":"    @Override","lastModifiedDate":"2021-09-17"},{"lineNumber":116,"author":{"gitId":"XXJJXJ"},"content":"    public String toString() {","lastModifiedDate":"2021-09-17"},{"lineNumber":117,"author":{"gitId":"XXJJXJ"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2021-09-18"},{"lineNumber":118,"author":{"gitId":"XXJJXJ"},"content":"        builder.append(\"[\").append((isDone ? \"X\" : \" \")).append(\"] \")","lastModifiedDate":"2021-09-18"},{"lineNumber":119,"author":{"gitId":"XXJJXJ"},"content":"                .append(eventName.toString()).append(\" (at: \")","lastModifiedDate":"2021-09-18"},{"lineNumber":120,"author":{"gitId":"XXJJXJ"},"content":"                .append(eventDate.toString()).append(\" \")","lastModifiedDate":"2021-09-18"},{"lineNumber":121,"author":{"gitId":"XXJJXJ"},"content":"                .append(eventTime.toString())","lastModifiedDate":"2021-09-18"},{"lineNumber":122,"author":{"gitId":"XXJJXJ"},"content":"                .append(\") \")","lastModifiedDate":"2021-09-18"},{"lineNumber":123,"author":{"gitId":"XXJJXJ"},"content":"                .append(\"Total Participants: \").append(this.participants.size());","lastModifiedDate":"2021-09-18"},{"lineNumber":124,"author":{"gitId":"XXJJXJ"},"content":"        return builder.toString();","lastModifiedDate":"2021-09-18"},{"lineNumber":125,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":126,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":127,"author":{"gitId":"XXJJXJ"},"content":"    @Override","lastModifiedDate":"2021-09-18"},{"lineNumber":128,"author":{"gitId":"XXJJXJ"},"content":"    public int compareTo(Event o) {","lastModifiedDate":"2021-09-18"},{"lineNumber":129,"author":{"gitId":"XXJJXJ"},"content":"        int compareDateResult \u003d this.eventDate.date.compareTo(o.eventDate.date);","lastModifiedDate":"2021-09-18"},{"lineNumber":130,"author":{"gitId":"XXJJXJ"},"content":"        if (compareDateResult \u003d\u003d 0) { // same date","lastModifiedDate":"2021-09-18"},{"lineNumber":131,"author":{"gitId":"XXJJXJ"},"content":"            int compareTimeResult \u003d this.eventTime.time.compareTo(o.eventTime.time);","lastModifiedDate":"2021-09-18"},{"lineNumber":132,"author":{"gitId":"XXJJXJ"},"content":"            if (compareTimeResult \u003d\u003d 0) { // same time","lastModifiedDate":"2021-09-18"},{"lineNumber":133,"author":{"gitId":"XXJJXJ"},"content":"                return this.eventName.eventName.compareTo(o.eventName.eventName);","lastModifiedDate":"2021-09-18"},{"lineNumber":134,"author":{"gitId":"XXJJXJ"},"content":"            } else {","lastModifiedDate":"2021-09-18"},{"lineNumber":135,"author":{"gitId":"XXJJXJ"},"content":"                return compareTimeResult;","lastModifiedDate":"2021-09-18"},{"lineNumber":136,"author":{"gitId":"XXJJXJ"},"content":"            }","lastModifiedDate":"2021-09-18"},{"lineNumber":137,"author":{"gitId":"XXJJXJ"},"content":"        } else {","lastModifiedDate":"2021-09-18"},{"lineNumber":138,"author":{"gitId":"XXJJXJ"},"content":"            return compareDateResult;","lastModifiedDate":"2021-09-18"},{"lineNumber":139,"author":{"gitId":"XXJJXJ"},"content":"        }","lastModifiedDate":"2021-09-18"},{"lineNumber":140,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":141,"author":{"gitId":"XXJJXJ"},"content":"}","lastModifiedDate":"2021-09-17"}],"authorContributionMap":{"XXJJXJ":141}},{"path":"src/main/java/seedu/address/model/event/EventDate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"XXJJXJ"},"content":"package seedu.address.model.event;","lastModifiedDate":"2021-09-18"},{"lineNumber":2,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":3,"author":{"gitId":"XXJJXJ"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-09-18"},{"lineNumber":4,"author":{"gitId":"XXJJXJ"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2021-09-18"},{"lineNumber":5,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":6,"author":{"gitId":"XXJJXJ"},"content":"import java.text.DateFormat;","lastModifiedDate":"2021-09-20"},{"lineNumber":7,"author":{"gitId":"XXJJXJ"},"content":"import java.text.ParseException;","lastModifiedDate":"2021-09-20"},{"lineNumber":8,"author":{"gitId":"XXJJXJ"},"content":"import java.text.SimpleDateFormat;","lastModifiedDate":"2021-09-20"},{"lineNumber":9,"author":{"gitId":"XXJJXJ"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-09-18"},{"lineNumber":10,"author":{"gitId":"XXJJXJ"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-09-20"},{"lineNumber":11,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":12,"author":{"gitId":"XXJJXJ"},"content":"/**","lastModifiedDate":"2021-09-18"},{"lineNumber":13,"author":{"gitId":"XXJJXJ"},"content":" * This is an EventDate class representing the Date of an Event.","lastModifiedDate":"2021-09-18"},{"lineNumber":14,"author":{"gitId":"XXJJXJ"},"content":" */","lastModifiedDate":"2021-09-18"},{"lineNumber":15,"author":{"gitId":"XXJJXJ"},"content":"public class EventDate {","lastModifiedDate":"2021-09-18"},{"lineNumber":16,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":17,"author":{"gitId":"XXJJXJ"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Dates should be in YYYY-MM-DD format!\";","lastModifiedDate":"2021-09-18"},{"lineNumber":18,"author":{"gitId":"XXJJXJ"},"content":"    public static final String DATE_FORMAT \u003d \"y-M-d\";","lastModifiedDate":"2021-09-20"},{"lineNumber":19,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":20,"author":{"gitId":"XXJJXJ"},"content":"    public final LocalDate date;","lastModifiedDate":"2021-09-18"},{"lineNumber":21,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":22,"author":{"gitId":"XXJJXJ"},"content":"    /**","lastModifiedDate":"2021-09-18"},{"lineNumber":23,"author":{"gitId":"XXJJXJ"},"content":"     * Constructs an {@code EventDate}","lastModifiedDate":"2021-09-18"},{"lineNumber":24,"author":{"gitId":"XXJJXJ"},"content":"     *","lastModifiedDate":"2021-09-18"},{"lineNumber":25,"author":{"gitId":"XXJJXJ"},"content":"     * @param date of the Event.","lastModifiedDate":"2021-09-18"},{"lineNumber":26,"author":{"gitId":"XXJJXJ"},"content":"     */","lastModifiedDate":"2021-09-18"},{"lineNumber":27,"author":{"gitId":"XXJJXJ"},"content":"    public EventDate(String date) {","lastModifiedDate":"2021-09-18"},{"lineNumber":28,"author":{"gitId":"XXJJXJ"},"content":"        requireNonNull(date);","lastModifiedDate":"2021-09-18"},{"lineNumber":29,"author":{"gitId":"XXJJXJ"},"content":"        checkArgument(isValidDate(date), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-09-18"},{"lineNumber":30,"author":{"gitId":"XXJJXJ"},"content":"        this.date \u003d LocalDate.parse(date, DateTimeFormatter.ofPattern(DATE_FORMAT));","lastModifiedDate":"2021-09-20"},{"lineNumber":31,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":32,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":33,"author":{"gitId":"XXJJXJ"},"content":"    /**","lastModifiedDate":"2021-09-18"},{"lineNumber":34,"author":{"gitId":"XXJJXJ"},"content":"     * Returns true if a given string is a valid date.","lastModifiedDate":"2021-09-18"},{"lineNumber":35,"author":{"gitId":"XXJJXJ"},"content":"     *","lastModifiedDate":"2021-09-18"},{"lineNumber":36,"author":{"gitId":"XXJJXJ"},"content":"     * @param test A String representing a date to be tested.","lastModifiedDate":"2021-09-18"},{"lineNumber":37,"author":{"gitId":"XXJJXJ"},"content":"     * @return A boolean to indicate if a string is a valid date.","lastModifiedDate":"2021-09-18"},{"lineNumber":38,"author":{"gitId":"XXJJXJ"},"content":"     */","lastModifiedDate":"2021-09-18"},{"lineNumber":39,"author":{"gitId":"XXJJXJ"},"content":"    public static boolean isValidDate(String test) {","lastModifiedDate":"2021-09-18"},{"lineNumber":40,"author":{"gitId":"XXJJXJ"},"content":"        DateFormat sdf \u003d new SimpleDateFormat(DATE_FORMAT);","lastModifiedDate":"2021-09-20"},{"lineNumber":41,"author":{"gitId":"XXJJXJ"},"content":"        sdf.setLenient(false);","lastModifiedDate":"2021-09-20"},{"lineNumber":42,"author":{"gitId":"XXJJXJ"},"content":"        try {","lastModifiedDate":"2021-09-18"},{"lineNumber":43,"author":{"gitId":"XXJJXJ"},"content":"            sdf.parse(test);","lastModifiedDate":"2021-09-20"},{"lineNumber":44,"author":{"gitId":"XXJJXJ"},"content":"        } catch (ParseException e) {","lastModifiedDate":"2021-09-20"},{"lineNumber":45,"author":{"gitId":"XXJJXJ"},"content":"            return false;","lastModifiedDate":"2021-09-20"},{"lineNumber":46,"author":{"gitId":"XXJJXJ"},"content":"        }","lastModifiedDate":"2021-09-18"},{"lineNumber":47,"author":{"gitId":"XXJJXJ"},"content":"        return true;","lastModifiedDate":"2021-09-20"},{"lineNumber":48,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":49,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":50,"author":{"gitId":"XXJJXJ"},"content":"    @Override","lastModifiedDate":"2021-09-18"},{"lineNumber":51,"author":{"gitId":"XXJJXJ"},"content":"    public String toString() {","lastModifiedDate":"2021-09-18"},{"lineNumber":52,"author":{"gitId":"XXJJXJ"},"content":"        return date.toString();","lastModifiedDate":"2021-09-18"},{"lineNumber":53,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":54,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":55,"author":{"gitId":"XXJJXJ"},"content":"    @Override","lastModifiedDate":"2021-09-18"},{"lineNumber":56,"author":{"gitId":"XXJJXJ"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-09-18"},{"lineNumber":57,"author":{"gitId":"XXJJXJ"},"content":"        return other \u003d\u003d this","lastModifiedDate":"2021-09-18"},{"lineNumber":58,"author":{"gitId":"XXJJXJ"},"content":"                || (other instanceof EventDate","lastModifiedDate":"2021-09-18"},{"lineNumber":59,"author":{"gitId":"XXJJXJ"},"content":"                \u0026\u0026 date.equals(((EventDate) other).date));","lastModifiedDate":"2021-09-18"},{"lineNumber":60,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":61,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":62,"author":{"gitId":"XXJJXJ"},"content":"    @Override","lastModifiedDate":"2021-09-18"},{"lineNumber":63,"author":{"gitId":"XXJJXJ"},"content":"    public int hashCode() {","lastModifiedDate":"2021-09-18"},{"lineNumber":64,"author":{"gitId":"XXJJXJ"},"content":"        return date.hashCode();","lastModifiedDate":"2021-09-18"},{"lineNumber":65,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":66,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":67,"author":{"gitId":"XXJJXJ"},"content":"}","lastModifiedDate":"2021-09-18"}],"authorContributionMap":{"XXJJXJ":67}},{"path":"src/main/java/seedu/address/model/event/EventName.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"XXJJXJ"},"content":"package seedu.address.model.event;","lastModifiedDate":"2021-09-18"},{"lineNumber":2,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":3,"author":{"gitId":"XXJJXJ"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-09-18"},{"lineNumber":4,"author":{"gitId":"XXJJXJ"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2021-09-18"},{"lineNumber":5,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":6,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":7,"author":{"gitId":"XXJJXJ"},"content":"/**","lastModifiedDate":"2021-09-18"},{"lineNumber":8,"author":{"gitId":"XXJJXJ"},"content":" * Represents an Event\u0027s name in the address book.","lastModifiedDate":"2021-09-18"},{"lineNumber":9,"author":{"gitId":"XXJJXJ"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidEventName(String)}","lastModifiedDate":"2021-09-18"},{"lineNumber":10,"author":{"gitId":"XXJJXJ"},"content":" */","lastModifiedDate":"2021-09-18"},{"lineNumber":11,"author":{"gitId":"XXJJXJ"},"content":"public class EventName {","lastModifiedDate":"2021-09-18"},{"lineNumber":12,"author":{"gitId":"XXJJXJ"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2021-09-18"},{"lineNumber":13,"author":{"gitId":"XXJJXJ"},"content":"            \"EventNames should only contain alphanumeric characters and spaces, and it should not be blank\";","lastModifiedDate":"2021-09-18"},{"lineNumber":14,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":15,"author":{"gitId":"XXJJXJ"},"content":"    /*","lastModifiedDate":"2021-09-18"},{"lineNumber":16,"author":{"gitId":"XXJJXJ"},"content":"     * The first character of the address must not be a whitespace,","lastModifiedDate":"2021-09-18"},{"lineNumber":17,"author":{"gitId":"XXJJXJ"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2021-09-18"},{"lineNumber":18,"author":{"gitId":"XXJJXJ"},"content":"     */","lastModifiedDate":"2021-09-18"},{"lineNumber":19,"author":{"gitId":"XXJJXJ"},"content":"    public static final String VALIDATION_REGEX \u003d \"[\\\\p{Alnum}][\\\\p{Alnum} ]*\";","lastModifiedDate":"2021-09-18"},{"lineNumber":20,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":21,"author":{"gitId":"XXJJXJ"},"content":"    public final String eventName;","lastModifiedDate":"2021-09-18"},{"lineNumber":22,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":23,"author":{"gitId":"XXJJXJ"},"content":"    /**","lastModifiedDate":"2021-09-18"},{"lineNumber":24,"author":{"gitId":"XXJJXJ"},"content":"     * Constructs an {@code EventName}.","lastModifiedDate":"2021-09-18"},{"lineNumber":25,"author":{"gitId":"XXJJXJ"},"content":"     *","lastModifiedDate":"2021-09-18"},{"lineNumber":26,"author":{"gitId":"XXJJXJ"},"content":"     * @param name A valid name.","lastModifiedDate":"2021-09-18"},{"lineNumber":27,"author":{"gitId":"XXJJXJ"},"content":"     */","lastModifiedDate":"2021-09-18"},{"lineNumber":28,"author":{"gitId":"XXJJXJ"},"content":"    public EventName(String name) {","lastModifiedDate":"2021-09-18"},{"lineNumber":29,"author":{"gitId":"XXJJXJ"},"content":"        requireNonNull(name);","lastModifiedDate":"2021-09-18"},{"lineNumber":30,"author":{"gitId":"XXJJXJ"},"content":"        checkArgument(isValidEventName(name), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-09-18"},{"lineNumber":31,"author":{"gitId":"XXJJXJ"},"content":"        eventName \u003d name;","lastModifiedDate":"2021-09-18"},{"lineNumber":32,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":33,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":34,"author":{"gitId":"XXJJXJ"},"content":"    /**","lastModifiedDate":"2021-09-18"},{"lineNumber":35,"author":{"gitId":"XXJJXJ"},"content":"     * Returns true if a given string is a valid name.","lastModifiedDate":"2021-09-18"},{"lineNumber":36,"author":{"gitId":"XXJJXJ"},"content":"     *","lastModifiedDate":"2021-09-18"},{"lineNumber":37,"author":{"gitId":"XXJJXJ"},"content":"     * @param test A String that represents a name to be tested.","lastModifiedDate":"2021-09-18"},{"lineNumber":38,"author":{"gitId":"XXJJXJ"},"content":"     * @return A boolean indicating if the String is a valid name.","lastModifiedDate":"2021-09-18"},{"lineNumber":39,"author":{"gitId":"XXJJXJ"},"content":"     */","lastModifiedDate":"2021-09-18"},{"lineNumber":40,"author":{"gitId":"XXJJXJ"},"content":"    public static boolean isValidEventName(String test) {","lastModifiedDate":"2021-09-18"},{"lineNumber":41,"author":{"gitId":"XXJJXJ"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2021-09-18"},{"lineNumber":42,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":43,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":44,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":45,"author":{"gitId":"XXJJXJ"},"content":"    @Override","lastModifiedDate":"2021-09-18"},{"lineNumber":46,"author":{"gitId":"XXJJXJ"},"content":"    public String toString() {","lastModifiedDate":"2021-09-18"},{"lineNumber":47,"author":{"gitId":"XXJJXJ"},"content":"        return eventName;","lastModifiedDate":"2021-09-18"},{"lineNumber":48,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":49,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":50,"author":{"gitId":"XXJJXJ"},"content":"    @Override","lastModifiedDate":"2021-09-18"},{"lineNumber":51,"author":{"gitId":"XXJJXJ"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-09-18"},{"lineNumber":52,"author":{"gitId":"XXJJXJ"},"content":"        return other \u003d\u003d this","lastModifiedDate":"2021-09-18"},{"lineNumber":53,"author":{"gitId":"XXJJXJ"},"content":"                || (other instanceof EventName","lastModifiedDate":"2021-09-18"},{"lineNumber":54,"author":{"gitId":"XXJJXJ"},"content":"                \u0026\u0026 eventName.equals(((EventName) other).eventName));","lastModifiedDate":"2021-09-18"},{"lineNumber":55,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":56,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":57,"author":{"gitId":"XXJJXJ"},"content":"    @Override","lastModifiedDate":"2021-09-18"},{"lineNumber":58,"author":{"gitId":"XXJJXJ"},"content":"    public int hashCode() {","lastModifiedDate":"2021-09-18"},{"lineNumber":59,"author":{"gitId":"XXJJXJ"},"content":"        return eventName.hashCode();","lastModifiedDate":"2021-09-18"},{"lineNumber":60,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":61,"author":{"gitId":"XXJJXJ"},"content":"}","lastModifiedDate":"2021-09-18"}],"authorContributionMap":{"XXJJXJ":61}},{"path":"src/main/java/seedu/address/model/event/EventTime.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"XXJJXJ"},"content":"package seedu.address.model.event;","lastModifiedDate":"2021-09-18"},{"lineNumber":2,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":3,"author":{"gitId":"XXJJXJ"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-09-18"},{"lineNumber":4,"author":{"gitId":"XXJJXJ"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2021-09-18"},{"lineNumber":5,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":6,"author":{"gitId":"XXJJXJ"},"content":"import java.text.DateFormat;","lastModifiedDate":"2021-09-20"},{"lineNumber":7,"author":{"gitId":"XXJJXJ"},"content":"import java.text.ParseException;","lastModifiedDate":"2021-09-20"},{"lineNumber":8,"author":{"gitId":"XXJJXJ"},"content":"import java.text.SimpleDateFormat;","lastModifiedDate":"2021-09-20"},{"lineNumber":9,"author":{"gitId":"XXJJXJ"},"content":"import java.time.LocalTime;","lastModifiedDate":"2021-09-18"},{"lineNumber":10,"author":{"gitId":"XXJJXJ"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-09-18"},{"lineNumber":11,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":12,"author":{"gitId":"XXJJXJ"},"content":"/**","lastModifiedDate":"2021-09-18"},{"lineNumber":13,"author":{"gitId":"XXJJXJ"},"content":" * This is an EventTime class that represents the Time of an Event.","lastModifiedDate":"2021-09-18"},{"lineNumber":14,"author":{"gitId":"XXJJXJ"},"content":" */","lastModifiedDate":"2021-09-18"},{"lineNumber":15,"author":{"gitId":"XXJJXJ"},"content":"public class EventTime {","lastModifiedDate":"2021-09-18"},{"lineNumber":16,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":17,"author":{"gitId":"XXJJXJ"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Time should be in 2359 format.\";","lastModifiedDate":"2021-09-18"},{"lineNumber":18,"author":{"gitId":"XXJJXJ"},"content":"    public static final String TIME_FORMAT \u003d \"HHmm\";","lastModifiedDate":"2021-09-20"},{"lineNumber":19,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":20,"author":{"gitId":"XXJJXJ"},"content":"    public final LocalTime time;","lastModifiedDate":"2021-09-18"},{"lineNumber":21,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":22,"author":{"gitId":"XXJJXJ"},"content":"    /**","lastModifiedDate":"2021-09-18"},{"lineNumber":23,"author":{"gitId":"XXJJXJ"},"content":"     * Constructors an {@code EventTime}","lastModifiedDate":"2021-09-18"},{"lineNumber":24,"author":{"gitId":"XXJJXJ"},"content":"     *","lastModifiedDate":"2021-09-18"},{"lineNumber":25,"author":{"gitId":"XXJJXJ"},"content":"     * @param time    A valid time.","lastModifiedDate":"2021-09-18"},{"lineNumber":26,"author":{"gitId":"XXJJXJ"},"content":"     */","lastModifiedDate":"2021-09-18"},{"lineNumber":27,"author":{"gitId":"XXJJXJ"},"content":"    public EventTime(String time) {","lastModifiedDate":"2021-09-18"},{"lineNumber":28,"author":{"gitId":"XXJJXJ"},"content":"        requireNonNull(time);","lastModifiedDate":"2021-09-18"},{"lineNumber":29,"author":{"gitId":"XXJJXJ"},"content":"        checkArgument(isValidTime(time), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-09-18"},{"lineNumber":30,"author":{"gitId":"XXJJXJ"},"content":"        this.time \u003d LocalTime.parse(time, DateTimeFormatter.ofPattern(TIME_FORMAT));","lastModifiedDate":"2021-09-20"},{"lineNumber":31,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":32,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":33,"author":{"gitId":"XXJJXJ"},"content":"    public EventTime() {","lastModifiedDate":"2021-09-18"},{"lineNumber":34,"author":{"gitId":"XXJJXJ"},"content":"        this.time \u003d LocalTime.MIN;","lastModifiedDate":"2021-09-18"},{"lineNumber":35,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":36,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":37,"author":{"gitId":"XXJJXJ"},"content":"    /**","lastModifiedDate":"2021-09-18"},{"lineNumber":38,"author":{"gitId":"XXJJXJ"},"content":"     * Returns true if a given string is a valid time.","lastModifiedDate":"2021-09-18"},{"lineNumber":39,"author":{"gitId":"XXJJXJ"},"content":"     *","lastModifiedDate":"2021-09-18"},{"lineNumber":40,"author":{"gitId":"XXJJXJ"},"content":"     * @param test A String to be tested if it is a valid time.","lastModifiedDate":"2021-09-18"},{"lineNumber":41,"author":{"gitId":"XXJJXJ"},"content":"     * @return A boolean indicating if the string is a valid time.","lastModifiedDate":"2021-09-18"},{"lineNumber":42,"author":{"gitId":"XXJJXJ"},"content":"     */","lastModifiedDate":"2021-09-18"},{"lineNumber":43,"author":{"gitId":"XXJJXJ"},"content":"    public static boolean isValidTime(String test) {","lastModifiedDate":"2021-09-18"},{"lineNumber":44,"author":{"gitId":"XXJJXJ"},"content":"        DateFormat sdf \u003d new SimpleDateFormat(TIME_FORMAT);","lastModifiedDate":"2021-09-20"},{"lineNumber":45,"author":{"gitId":"XXJJXJ"},"content":"        sdf.setLenient(false);","lastModifiedDate":"2021-09-20"},{"lineNumber":46,"author":{"gitId":"XXJJXJ"},"content":"        try {","lastModifiedDate":"2021-09-18"},{"lineNumber":47,"author":{"gitId":"XXJJXJ"},"content":"            sdf.parse(test);","lastModifiedDate":"2021-09-20"},{"lineNumber":48,"author":{"gitId":"XXJJXJ"},"content":"        } catch (ParseException e) {","lastModifiedDate":"2021-09-20"},{"lineNumber":49,"author":{"gitId":"XXJJXJ"},"content":"            return false;","lastModifiedDate":"2021-09-20"},{"lineNumber":50,"author":{"gitId":"XXJJXJ"},"content":"        }","lastModifiedDate":"2021-09-18"},{"lineNumber":51,"author":{"gitId":"XXJJXJ"},"content":"        return true;","lastModifiedDate":"2021-09-20"},{"lineNumber":52,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":53,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":54,"author":{"gitId":"XXJJXJ"},"content":"    @Override","lastModifiedDate":"2021-09-18"},{"lineNumber":55,"author":{"gitId":"XXJJXJ"},"content":"    public String toString() {","lastModifiedDate":"2021-09-18"},{"lineNumber":56,"author":{"gitId":"XXJJXJ"},"content":"        return this.time.equals(LocalTime.MIN) ? \"\" : this.time.format(DateTimeFormatter.ofPattern(\"HHmm\"));","lastModifiedDate":"2021-09-18"},{"lineNumber":57,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":58,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":59,"author":{"gitId":"XXJJXJ"},"content":"    @Override","lastModifiedDate":"2021-09-18"},{"lineNumber":60,"author":{"gitId":"XXJJXJ"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-09-18"},{"lineNumber":61,"author":{"gitId":"XXJJXJ"},"content":"        return other \u003d\u003d this","lastModifiedDate":"2021-09-18"},{"lineNumber":62,"author":{"gitId":"XXJJXJ"},"content":"                || (other instanceof EventTime","lastModifiedDate":"2021-09-18"},{"lineNumber":63,"author":{"gitId":"XXJJXJ"},"content":"                \u0026\u0026 time.equals(((EventTime) other).time));","lastModifiedDate":"2021-09-18"},{"lineNumber":64,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":65,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":66,"author":{"gitId":"XXJJXJ"},"content":"    @Override","lastModifiedDate":"2021-09-18"},{"lineNumber":67,"author":{"gitId":"XXJJXJ"},"content":"    public int hashCode() {","lastModifiedDate":"2021-09-18"},{"lineNumber":68,"author":{"gitId":"XXJJXJ"},"content":"        return time.hashCode();","lastModifiedDate":"2021-09-18"},{"lineNumber":69,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":70,"author":{"gitId":"XXJJXJ"},"content":"}","lastModifiedDate":"2021-09-18"}],"authorContributionMap":{"XXJJXJ":70}},{"path":"src/main/java/seedu/address/model/event/UniqueEventList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"XXJJXJ"},"content":"package seedu.address.model.event;","lastModifiedDate":"2021-09-18"},{"lineNumber":2,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":3,"author":{"gitId":"XXJJXJ"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-09-18"},{"lineNumber":4,"author":{"gitId":"XXJJXJ"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2021-09-18"},{"lineNumber":5,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":6,"author":{"gitId":"XXJJXJ"},"content":"import java.util.Iterator;","lastModifiedDate":"2021-09-18"},{"lineNumber":7,"author":{"gitId":"XXJJXJ"},"content":"import java.util.List;","lastModifiedDate":"2021-09-18"},{"lineNumber":8,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":9,"author":{"gitId":"XXJJXJ"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2021-09-18"},{"lineNumber":10,"author":{"gitId":"XXJJXJ"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-09-18"},{"lineNumber":11,"author":{"gitId":"XXJJXJ"},"content":"import seedu.address.model.event.exceptions.DuplicateEventException;","lastModifiedDate":"2021-09-18"},{"lineNumber":12,"author":{"gitId":"XXJJXJ"},"content":"import seedu.address.model.event.exceptions.EventNotFoundException;","lastModifiedDate":"2021-09-18"},{"lineNumber":13,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":14,"author":{"gitId":"XXJJXJ"},"content":"/**","lastModifiedDate":"2021-09-18"},{"lineNumber":15,"author":{"gitId":"XXJJXJ"},"content":" * A list of events that enforces uniqueness between its elements and does not allow nulls.","lastModifiedDate":"2021-09-18"},{"lineNumber":16,"author":{"gitId":"XXJJXJ"},"content":" * An event is considered unique by comparing using {@code Event#isSameEvent(Event)}. As such, adding and updating of","lastModifiedDate":"2021-09-18"},{"lineNumber":17,"author":{"gitId":"XXJJXJ"},"content":" * events uses Event#isSameEvent(Event) for equality so as to ensure that the event being added or updated is","lastModifiedDate":"2021-09-18"},{"lineNumber":18,"author":{"gitId":"XXJJXJ"},"content":" * unique in terms of identity in the UniqueEventList. However, the removal of a event uses Event#equals(Object) so","lastModifiedDate":"2021-09-18"},{"lineNumber":19,"author":{"gitId":"XXJJXJ"},"content":" * as to ensure that the event with exactly the same fields will be removed.","lastModifiedDate":"2021-09-18"},{"lineNumber":20,"author":{"gitId":"XXJJXJ"},"content":" *","lastModifiedDate":"2021-09-18"},{"lineNumber":21,"author":{"gitId":"XXJJXJ"},"content":" * Supports a minimal set of list operations.","lastModifiedDate":"2021-09-18"},{"lineNumber":22,"author":{"gitId":"XXJJXJ"},"content":" *","lastModifiedDate":"2021-09-18"},{"lineNumber":23,"author":{"gitId":"XXJJXJ"},"content":" * @see Event#isSameEvent(Event)","lastModifiedDate":"2021-09-18"},{"lineNumber":24,"author":{"gitId":"XXJJXJ"},"content":" */","lastModifiedDate":"2021-09-18"},{"lineNumber":25,"author":{"gitId":"XXJJXJ"},"content":"public class UniqueEventList implements Iterable\u003cEvent\u003e {","lastModifiedDate":"2021-09-18"},{"lineNumber":26,"author":{"gitId":"XXJJXJ"},"content":"    private final ObservableList\u003cEvent\u003e internalList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2021-09-18"},{"lineNumber":27,"author":{"gitId":"XXJJXJ"},"content":"    private final ObservableList\u003cEvent\u003e internalUnmodifiableList \u003d","lastModifiedDate":"2021-09-18"},{"lineNumber":28,"author":{"gitId":"XXJJXJ"},"content":"            FXCollections.unmodifiableObservableList(internalList);","lastModifiedDate":"2021-09-18"},{"lineNumber":29,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":30,"author":{"gitId":"XXJJXJ"},"content":"    /**","lastModifiedDate":"2021-09-18"},{"lineNumber":31,"author":{"gitId":"XXJJXJ"},"content":"     * Returns true if the list contains an equivalent event as the given argument.","lastModifiedDate":"2021-09-18"},{"lineNumber":32,"author":{"gitId":"XXJJXJ"},"content":"     */","lastModifiedDate":"2021-09-18"},{"lineNumber":33,"author":{"gitId":"XXJJXJ"},"content":"    public boolean contains(Event toCheck) {","lastModifiedDate":"2021-09-18"},{"lineNumber":34,"author":{"gitId":"XXJJXJ"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2021-09-18"},{"lineNumber":35,"author":{"gitId":"XXJJXJ"},"content":"        return internalList.stream().anyMatch(toCheck::isSameEvent);","lastModifiedDate":"2021-09-18"},{"lineNumber":36,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":37,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":38,"author":{"gitId":"XXJJXJ"},"content":"    /**","lastModifiedDate":"2021-09-18"},{"lineNumber":39,"author":{"gitId":"XXJJXJ"},"content":"     * Adds an event to the list.","lastModifiedDate":"2021-09-18"},{"lineNumber":40,"author":{"gitId":"XXJJXJ"},"content":"     * The event must not already exist in the list.","lastModifiedDate":"2021-09-18"},{"lineNumber":41,"author":{"gitId":"XXJJXJ"},"content":"     *","lastModifiedDate":"2021-09-18"},{"lineNumber":42,"author":{"gitId":"XXJJXJ"},"content":"     * @param toAdd An Event instance to be added to the list.","lastModifiedDate":"2021-09-18"},{"lineNumber":43,"author":{"gitId":"XXJJXJ"},"content":"     */","lastModifiedDate":"2021-09-18"},{"lineNumber":44,"author":{"gitId":"XXJJXJ"},"content":"    public void add(Event toAdd) {","lastModifiedDate":"2021-09-18"},{"lineNumber":45,"author":{"gitId":"XXJJXJ"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2021-09-18"},{"lineNumber":46,"author":{"gitId":"XXJJXJ"},"content":"        if (contains(toAdd)) {","lastModifiedDate":"2021-09-18"},{"lineNumber":47,"author":{"gitId":"XXJJXJ"},"content":"            throw new DuplicateEventException();","lastModifiedDate":"2021-09-18"},{"lineNumber":48,"author":{"gitId":"XXJJXJ"},"content":"        }","lastModifiedDate":"2021-09-18"},{"lineNumber":49,"author":{"gitId":"XXJJXJ"},"content":"        internalList.add(toAdd);","lastModifiedDate":"2021-09-18"},{"lineNumber":50,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":51,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":52,"author":{"gitId":"XXJJXJ"},"content":"    //Edit function setEvent temporarily omitted.","lastModifiedDate":"2021-09-18"},{"lineNumber":53,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":54,"author":{"gitId":"XXJJXJ"},"content":"    /**","lastModifiedDate":"2021-09-18"},{"lineNumber":55,"author":{"gitId":"XXJJXJ"},"content":"     * Removes the equivalent event from the list.","lastModifiedDate":"2021-09-18"},{"lineNumber":56,"author":{"gitId":"XXJJXJ"},"content":"     * The event must exist in the list.","lastModifiedDate":"2021-09-18"},{"lineNumber":57,"author":{"gitId":"XXJJXJ"},"content":"     *","lastModifiedDate":"2021-09-18"},{"lineNumber":58,"author":{"gitId":"XXJJXJ"},"content":"     * @param toRemove An Event instance to be removed from the list.","lastModifiedDate":"2021-09-18"},{"lineNumber":59,"author":{"gitId":"XXJJXJ"},"content":"     */","lastModifiedDate":"2021-09-18"},{"lineNumber":60,"author":{"gitId":"XXJJXJ"},"content":"    public void remove(Event toRemove) {","lastModifiedDate":"2021-09-18"},{"lineNumber":61,"author":{"gitId":"XXJJXJ"},"content":"        requireNonNull(toRemove);","lastModifiedDate":"2021-09-18"},{"lineNumber":62,"author":{"gitId":"XXJJXJ"},"content":"        if (!internalList.remove(toRemove)) {","lastModifiedDate":"2021-09-18"},{"lineNumber":63,"author":{"gitId":"XXJJXJ"},"content":"            throw new EventNotFoundException();","lastModifiedDate":"2021-09-18"},{"lineNumber":64,"author":{"gitId":"XXJJXJ"},"content":"        }","lastModifiedDate":"2021-09-18"},{"lineNumber":65,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":66,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":67,"author":{"gitId":"XXJJXJ"},"content":"    /**","lastModifiedDate":"2021-09-18"},{"lineNumber":68,"author":{"gitId":"XXJJXJ"},"content":"     * Sets the list of Events.","lastModifiedDate":"2021-09-18"},{"lineNumber":69,"author":{"gitId":"XXJJXJ"},"content":"     *","lastModifiedDate":"2021-09-18"},{"lineNumber":70,"author":{"gitId":"XXJJXJ"},"content":"     * @param replacement A UniqueEventList that replaces the current list of events.","lastModifiedDate":"2021-09-18"},{"lineNumber":71,"author":{"gitId":"XXJJXJ"},"content":"     */","lastModifiedDate":"2021-09-18"},{"lineNumber":72,"author":{"gitId":"XXJJXJ"},"content":"    public void setEvents(UniqueEventList replacement) {","lastModifiedDate":"2021-09-18"},{"lineNumber":73,"author":{"gitId":"XXJJXJ"},"content":"        requireNonNull(replacement);","lastModifiedDate":"2021-09-18"},{"lineNumber":74,"author":{"gitId":"XXJJXJ"},"content":"        internalList.setAll(replacement.internalList);","lastModifiedDate":"2021-09-18"},{"lineNumber":75,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":76,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":77,"author":{"gitId":"XXJJXJ"},"content":"    /**","lastModifiedDate":"2021-09-18"},{"lineNumber":78,"author":{"gitId":"XXJJXJ"},"content":"     * Replaces the contents of this list with {@code events}.","lastModifiedDate":"2021-09-18"},{"lineNumber":79,"author":{"gitId":"XXJJXJ"},"content":"     * {@code events} must not contain duplicate events.","lastModifiedDate":"2021-09-18"},{"lineNumber":80,"author":{"gitId":"XXJJXJ"},"content":"     *","lastModifiedDate":"2021-09-18"},{"lineNumber":81,"author":{"gitId":"XXJJXJ"},"content":"     * @param events A List of Events.","lastModifiedDate":"2021-09-18"},{"lineNumber":82,"author":{"gitId":"XXJJXJ"},"content":"     */","lastModifiedDate":"2021-09-18"},{"lineNumber":83,"author":{"gitId":"XXJJXJ"},"content":"    public void setEvents(List\u003cEvent\u003e events) {","lastModifiedDate":"2021-09-18"},{"lineNumber":84,"author":{"gitId":"XXJJXJ"},"content":"        requireAllNonNull(events);","lastModifiedDate":"2021-09-18"},{"lineNumber":85,"author":{"gitId":"XXJJXJ"},"content":"        if (!eventsAreUnique(events)) {","lastModifiedDate":"2021-09-18"},{"lineNumber":86,"author":{"gitId":"XXJJXJ"},"content":"            throw new DuplicateEventException();","lastModifiedDate":"2021-09-18"},{"lineNumber":87,"author":{"gitId":"XXJJXJ"},"content":"        }","lastModifiedDate":"2021-09-18"},{"lineNumber":88,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":89,"author":{"gitId":"XXJJXJ"},"content":"        internalList.setAll(events);","lastModifiedDate":"2021-09-18"},{"lineNumber":90,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":91,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":92,"author":{"gitId":"XXJJXJ"},"content":"    /**","lastModifiedDate":"2021-09-18"},{"lineNumber":93,"author":{"gitId":"XXJJXJ"},"content":"     * Returns the backing list as an unmodifiable {@code ObservableList}.","lastModifiedDate":"2021-09-18"},{"lineNumber":94,"author":{"gitId":"XXJJXJ"},"content":"     */","lastModifiedDate":"2021-09-18"},{"lineNumber":95,"author":{"gitId":"XXJJXJ"},"content":"    public ObservableList\u003cEvent\u003e asUnmodifiableObservableList() {","lastModifiedDate":"2021-09-18"},{"lineNumber":96,"author":{"gitId":"XXJJXJ"},"content":"        return internalUnmodifiableList;","lastModifiedDate":"2021-09-18"},{"lineNumber":97,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":98,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":99,"author":{"gitId":"XXJJXJ"},"content":"    @Override","lastModifiedDate":"2021-09-18"},{"lineNumber":100,"author":{"gitId":"XXJJXJ"},"content":"    public Iterator\u003cEvent\u003e iterator() {","lastModifiedDate":"2021-09-18"},{"lineNumber":101,"author":{"gitId":"XXJJXJ"},"content":"        return internalList.iterator();","lastModifiedDate":"2021-09-18"},{"lineNumber":102,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":103,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":104,"author":{"gitId":"XXJJXJ"},"content":"    @Override","lastModifiedDate":"2021-09-18"},{"lineNumber":105,"author":{"gitId":"XXJJXJ"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-09-18"},{"lineNumber":106,"author":{"gitId":"XXJJXJ"},"content":"        return other \u003d\u003d this","lastModifiedDate":"2021-09-18"},{"lineNumber":107,"author":{"gitId":"XXJJXJ"},"content":"                || (other instanceof UniqueEventList","lastModifiedDate":"2021-09-18"},{"lineNumber":108,"author":{"gitId":"XXJJXJ"},"content":"                \u0026\u0026 internalList.equals(((UniqueEventList) other).internalList));","lastModifiedDate":"2021-09-18"},{"lineNumber":109,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":110,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":111,"author":{"gitId":"XXJJXJ"},"content":"    /**","lastModifiedDate":"2021-09-18"},{"lineNumber":112,"author":{"gitId":"XXJJXJ"},"content":"     * Returns true if {@code events} contains only unique events.","lastModifiedDate":"2021-09-18"},{"lineNumber":113,"author":{"gitId":"XXJJXJ"},"content":"     */","lastModifiedDate":"2021-09-18"},{"lineNumber":114,"author":{"gitId":"XXJJXJ"},"content":"    private boolean eventsAreUnique(List\u003cEvent\u003e events) {","lastModifiedDate":"2021-09-18"},{"lineNumber":115,"author":{"gitId":"XXJJXJ"},"content":"        for (int i \u003d 0; i \u003c events.size() - 1; i++) {","lastModifiedDate":"2021-09-18"},{"lineNumber":116,"author":{"gitId":"XXJJXJ"},"content":"            for (int j \u003d i + 1; j \u003c events.size(); j++) {","lastModifiedDate":"2021-09-18"},{"lineNumber":117,"author":{"gitId":"XXJJXJ"},"content":"                if (events.get(i).isSameEvent(events.get(j))) {","lastModifiedDate":"2021-09-18"},{"lineNumber":118,"author":{"gitId":"XXJJXJ"},"content":"                    return false;","lastModifiedDate":"2021-09-18"},{"lineNumber":119,"author":{"gitId":"XXJJXJ"},"content":"                }","lastModifiedDate":"2021-09-18"},{"lineNumber":120,"author":{"gitId":"XXJJXJ"},"content":"            }","lastModifiedDate":"2021-09-18"},{"lineNumber":121,"author":{"gitId":"XXJJXJ"},"content":"        }","lastModifiedDate":"2021-09-18"},{"lineNumber":122,"author":{"gitId":"XXJJXJ"},"content":"        return true;","lastModifiedDate":"2021-09-18"},{"lineNumber":123,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":124,"author":{"gitId":"XXJJXJ"},"content":"}","lastModifiedDate":"2021-09-18"}],"authorContributionMap":{"XXJJXJ":124}},{"path":"src/main/java/seedu/address/model/event/exceptions/DuplicateEventException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"XXJJXJ"},"content":"package seedu.address.model.event.exceptions;","lastModifiedDate":"2021-09-18"},{"lineNumber":2,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":3,"author":{"gitId":"XXJJXJ"},"content":"/**","lastModifiedDate":"2021-09-18"},{"lineNumber":4,"author":{"gitId":"XXJJXJ"},"content":" * Signals that the operation will result in duplicate Events (Events are considered duplicates if they have the same","lastModifiedDate":"2021-09-18"},{"lineNumber":5,"author":{"gitId":"XXJJXJ"},"content":" * identity).","lastModifiedDate":"2021-09-18"},{"lineNumber":6,"author":{"gitId":"XXJJXJ"},"content":" */","lastModifiedDate":"2021-09-18"},{"lineNumber":7,"author":{"gitId":"XXJJXJ"},"content":"public class DuplicateEventException extends RuntimeException {","lastModifiedDate":"2021-09-18"},{"lineNumber":8,"author":{"gitId":"XXJJXJ"},"content":"    public DuplicateEventException() {","lastModifiedDate":"2021-09-18"},{"lineNumber":9,"author":{"gitId":"XXJJXJ"},"content":"        super(\"Operation will result in Duplicate Events!\");","lastModifiedDate":"2021-09-18"},{"lineNumber":10,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":11,"author":{"gitId":"XXJJXJ"},"content":"}","lastModifiedDate":"2021-09-18"}],"authorContributionMap":{"XXJJXJ":11}},{"path":"src/main/java/seedu/address/model/event/exceptions/EventNotFoundException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"XXJJXJ"},"content":"package seedu.address.model.event.exceptions;","lastModifiedDate":"2021-09-18"},{"lineNumber":2,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":3,"author":{"gitId":"XXJJXJ"},"content":"/**","lastModifiedDate":"2021-09-18"},{"lineNumber":4,"author":{"gitId":"XXJJXJ"},"content":" * Signals that the operation is unable to find the specified event.","lastModifiedDate":"2021-09-18"},{"lineNumber":5,"author":{"gitId":"XXJJXJ"},"content":" */","lastModifiedDate":"2021-09-18"},{"lineNumber":6,"author":{"gitId":"XXJJXJ"},"content":"public class EventNotFoundException extends RuntimeException {","lastModifiedDate":"2021-09-18"},{"lineNumber":7,"author":{"gitId":"XXJJXJ"},"content":"}","lastModifiedDate":"2021-09-18"}],"authorContributionMap":{"XXJJXJ":7}},{"path":"src/main/java/seedu/address/model/particpant/BirthDate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.particpant;","lastModifiedDate":"2021-09-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2021-09-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-09-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.time.Period;","lastModifiedDate":"2021-09-11"},{"lineNumber":7,"author":{"gitId":"XXJJXJ"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2021-09-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2021-09-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Represents a Participant\u0027s date of birth in the event.","lastModifiedDate":"2021-09-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidBirthDate(LocalDate)}}","lastModifiedDate":"2021-09-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2021-09-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class BirthDate {","lastModifiedDate":"2021-09-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DATE_CONSTRAINTS \u003d \"Date of birth cannot be in the future or invalid\";","lastModifiedDate":"2021-09-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private final LocalDate date;","lastModifiedDate":"2021-09-11"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private BirthDate(LocalDate date) {","lastModifiedDate":"2021-09-11"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        this.date \u003d date;","lastModifiedDate":"2021-09-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-09-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * Factory method for birthdate starting from dayOfMonth, then month, then year.","lastModifiedDate":"2021-09-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2021-09-11"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * @param dayOfMonth day of the month.","lastModifiedDate":"2021-09-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * @param month      month from 1-12.","lastModifiedDate":"2021-09-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * @param year       year to be this year or before, year in the future is invalid in this case.","lastModifiedDate":"2021-09-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * @return Birthdate object with specified date.","lastModifiedDate":"2021-09-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-09-11"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public static BirthDate of(int year, int month, int dayOfMonth) {","lastModifiedDate":"2021-09-11"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        LocalDate date \u003d LocalDate.of(year, month, dayOfMonth);","lastModifiedDate":"2021-09-11"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        checkArgument(isPresentOrPast(date), MESSAGE_DATE_CONSTRAINTS);","lastModifiedDate":"2021-09-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        return new BirthDate(date);","lastModifiedDate":"2021-09-11"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-11"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":39,"author":{"gitId":"XXJJXJ"},"content":"    /**","lastModifiedDate":"2021-09-18"},{"lineNumber":40,"author":{"gitId":"XXJJXJ"},"content":"     * Factory method for birthdate using LocalDate instance.","lastModifiedDate":"2021-09-18"},{"lineNumber":41,"author":{"gitId":"XXJJXJ"},"content":"     *","lastModifiedDate":"2021-09-18"},{"lineNumber":42,"author":{"gitId":"XXJJXJ"},"content":"     * @param date    A LocalDate instance.","lastModifiedDate":"2021-09-18"},{"lineNumber":43,"author":{"gitId":"XXJJXJ"},"content":"     * @return        A BirthDate instance.","lastModifiedDate":"2021-09-18"},{"lineNumber":44,"author":{"gitId":"XXJJXJ"},"content":"     */","lastModifiedDate":"2021-09-18"},{"lineNumber":45,"author":{"gitId":"XXJJXJ"},"content":"    public static BirthDate of(LocalDate date) {","lastModifiedDate":"2021-09-18"},{"lineNumber":46,"author":{"gitId":"XXJJXJ"},"content":"        return new BirthDate(date);","lastModifiedDate":"2021-09-18"},{"lineNumber":47,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":48,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-09-11"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * Factory method for birthdate which might not have been initialised yet.","lastModifiedDate":"2021-09-12"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2021-09-11"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * @return Birthdate with \"N/A\" String representation.","lastModifiedDate":"2021-09-12"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-09-11"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public static BirthDate notSpecified() {","lastModifiedDate":"2021-09-11"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        return new BirthDate(null);","lastModifiedDate":"2021-09-11"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-11"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-09-11"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     * Getter for date of this BirthDate.","lastModifiedDate":"2021-09-12"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2021-09-11"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * @return date of the BirthDate.","lastModifiedDate":"2021-09-12"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-09-11"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public LocalDate getDate() {","lastModifiedDate":"2021-09-11"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        return this.date;","lastModifiedDate":"2021-09-11"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-11"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-09-11"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     * Returns the age from the BirthDate.","lastModifiedDate":"2021-09-12"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2021-09-11"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * @return age","lastModifiedDate":"2021-09-11"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-09-11"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public int getAge() {","lastModifiedDate":"2021-09-11"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        return Period.between(this.date, LocalDate.now()).getYears();","lastModifiedDate":"2021-09-11"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-11"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-09-11"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     * Returns true if a given LocalDate instance is in the past or present.","lastModifiedDate":"2021-09-12"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * This is used to ensure no one\u0027s BirthDate is in the future.","lastModifiedDate":"2021-09-12"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2021-09-12"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * @param date     A LocalDate instance.","lastModifiedDate":"2021-09-12"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * @return         A boolean representing if a date is in the past or present.","lastModifiedDate":"2021-09-12"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-09-11"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public static boolean isPresentOrPast(LocalDate date) {","lastModifiedDate":"2021-09-12"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        return (LocalDate.now().isEqual(date) || LocalDate.now().isAfter(date));","lastModifiedDate":"2021-09-11"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-11"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":87,"author":{"gitId":"XXJJXJ"},"content":"    //Add on for Json Conversion in JsonAdaptedParticipants","lastModifiedDate":"2021-09-18"},{"lineNumber":88,"author":{"gitId":"XXJJXJ"},"content":"    /**","lastModifiedDate":"2021-09-18"},{"lineNumber":89,"author":{"gitId":"XXJJXJ"},"content":"     * Returns true if a given String form of birthDate is valid.","lastModifiedDate":"2021-09-18"},{"lineNumber":90,"author":{"gitId":"XXJJXJ"},"content":"     *","lastModifiedDate":"2021-09-18"},{"lineNumber":91,"author":{"gitId":"XXJJXJ"},"content":"     * @param birthDate   A String representing a date.","lastModifiedDate":"2021-09-18"},{"lineNumber":92,"author":{"gitId":"XXJJXJ"},"content":"     * @return            A boolean representing if the String form birthDate is valid.","lastModifiedDate":"2021-09-18"},{"lineNumber":93,"author":{"gitId":"XXJJXJ"},"content":"     */","lastModifiedDate":"2021-09-18"},{"lineNumber":94,"author":{"gitId":"XXJJXJ"},"content":"    public static boolean isValidBirthDate(String birthDate) {","lastModifiedDate":"2021-09-18"},{"lineNumber":95,"author":{"gitId":"XXJJXJ"},"content":"        boolean isValid;","lastModifiedDate":"2021-09-20"},{"lineNumber":96,"author":{"gitId":"XXJJXJ"},"content":"        try {","lastModifiedDate":"2021-09-18"},{"lineNumber":97,"author":{"gitId":"XXJJXJ"},"content":"            LocalDate date \u003d LocalDate.parse(birthDate);","lastModifiedDate":"2021-09-18"},{"lineNumber":98,"author":{"gitId":"XXJJXJ"},"content":"            isValid \u003d isPresentOrPast(date);","lastModifiedDate":"2021-09-20"},{"lineNumber":99,"author":{"gitId":"XXJJXJ"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2021-09-18"},{"lineNumber":100,"author":{"gitId":"XXJJXJ"},"content":"            isValid \u003d false;","lastModifiedDate":"2021-09-20"},{"lineNumber":101,"author":{"gitId":"XXJJXJ"},"content":"        }","lastModifiedDate":"2021-09-18"},{"lineNumber":102,"author":{"gitId":"XXJJXJ"},"content":"        return isValid;","lastModifiedDate":"2021-09-20"},{"lineNumber":103,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":104,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2021-09-11"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-09-11"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2021-09-11"},{"lineNumber":108,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2021-09-11"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-09-11"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        if (!(other instanceof BirthDate)) {","lastModifiedDate":"2021-09-11"},{"lineNumber":112,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2021-09-11"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-09-11"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        BirthDate otherBirthDate \u003d (BirthDate) other;","lastModifiedDate":"2021-09-11"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        if (this.getDate() \u003d\u003d null || otherBirthDate.getDate() \u003d\u003d null) {","lastModifiedDate":"2021-09-11"},{"lineNumber":117,"author":{"gitId":"-"},"content":"            return this.getDate() \u003d\u003d otherBirthDate.getDate();","lastModifiedDate":"2021-09-11"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        } else {","lastModifiedDate":"2021-09-11"},{"lineNumber":119,"author":{"gitId":"-"},"content":"            return otherBirthDate.getDate().equals(getDate());","lastModifiedDate":"2021-09-11"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-09-11"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-11"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2021-09-11"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2021-09-11"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        if (this.date \u003d\u003d null) {","lastModifiedDate":"2021-09-11"},{"lineNumber":127,"author":{"gitId":"-"},"content":"            return \"N/A\";","lastModifiedDate":"2021-09-11"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-09-11"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        return date.toString();","lastModifiedDate":"2021-09-11"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-11"},{"lineNumber":131,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-09-11"}],"authorContributionMap":{"XXJJXJ":29,"-":102}},{"path":"src/main/java/seedu/address/model/util/SampleDataUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.util;","lastModifiedDate":"2016-12-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-01-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-12-20"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2016-12-20"},{"lineNumber":9,"author":{"gitId":"XXJJXJ"},"content":"import seedu.address.model.event.Event;","lastModifiedDate":"2021-09-18"},{"lineNumber":10,"author":{"gitId":"XXJJXJ"},"content":"import seedu.address.model.event.EventDate;","lastModifiedDate":"2021-09-18"},{"lineNumber":11,"author":{"gitId":"XXJJXJ"},"content":"import seedu.address.model.event.EventName;","lastModifiedDate":"2021-09-18"},{"lineNumber":12,"author":{"gitId":"XXJJXJ"},"content":"import seedu.address.model.event.EventTime;","lastModifiedDate":"2021-09-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.particpant.Note;","lastModifiedDate":"2021-09-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2016-12-20"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2016-12-20"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2016-12-20"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-12-20"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2016-12-20"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * Contains utility methods for populating {@code AddressBook} with sample data.","lastModifiedDate":"2017-08-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class SampleDataUtil {","lastModifiedDate":"2016-12-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static Person[] getSamplePersons() {","lastModifiedDate":"2016-12-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        return new Person[] {","lastModifiedDate":"2016-12-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Alex Yeoh\"), new Phone(\"87438807\"), new Email(\"alexyeoh@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"                new Address(\"Blk 30 Geylang Street 29, #06-40\"),","lastModifiedDate":"2016-12-20"},{"lineNumber":29,"author":{"gitId":"-"},"content":"                getTagSet(\"friends\")),","lastModifiedDate":"2017-03-14"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Bernice Yu\"), new Phone(\"99272758\"), new Email(\"berniceyu@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"                new Address(\"Blk 30 Lorong 3 Serangoon Gardens, #07-18\"),","lastModifiedDate":"2016-12-20"},{"lineNumber":32,"author":{"gitId":"-"},"content":"                getTagSet(\"colleagues\", \"friends\")),","lastModifiedDate":"2017-03-14"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Charlotte Oliveiro\"), new Phone(\"93210283\"), new Email(\"charlotte@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"                new Address(\"Blk 11 Ang Mo Kio Street 74, #11-04\"),","lastModifiedDate":"2016-12-20"},{"lineNumber":35,"author":{"gitId":"-"},"content":"                getTagSet(\"neighbours\")),","lastModifiedDate":"2017-03-14"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            new Person(new Name(\"David Li\"), new Phone(\"91031282\"), new Email(\"lidavid@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"                new Address(\"Blk 436 Serangoon Gardens Street 26, #16-43\"),","lastModifiedDate":"2016-12-20"},{"lineNumber":38,"author":{"gitId":"-"},"content":"                getTagSet(\"family\")),","lastModifiedDate":"2017-03-14"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Irfan Ibrahim\"), new Phone(\"92492021\"), new Email(\"irfan@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                new Address(\"Blk 47 Tampines Street 20, #17-35\"),","lastModifiedDate":"2016-12-20"},{"lineNumber":41,"author":{"gitId":"-"},"content":"                getTagSet(\"classmates\")),","lastModifiedDate":"2017-03-14"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Roy Balakrishnan\"), new Phone(\"92624417\"), new Email(\"royb@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"                new Address(\"Blk 45 Aljunied Street 85, #11-31\"),","lastModifiedDate":"2016-12-20"},{"lineNumber":44,"author":{"gitId":"-"},"content":"                getTagSet(\"colleagues\"))","lastModifiedDate":"2017-03-14"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        };","lastModifiedDate":"2016-12-20"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":48,"author":{"gitId":"XXJJXJ"},"content":"    public static Event[] getSampleEvents() {","lastModifiedDate":"2021-09-18"},{"lineNumber":49,"author":{"gitId":"XXJJXJ"},"content":"        return new Event[] {","lastModifiedDate":"2021-09-18"},{"lineNumber":50,"author":{"gitId":"XXJJXJ"},"content":"            new Event(new EventName(\"240Km Marathon\"), new EventDate(\"2022-08-20\")),","lastModifiedDate":"2021-09-18"},{"lineNumber":51,"author":{"gitId":"XXJJXJ"},"content":"            new Event(new EventName(\"CS2100 Finals\"), new EventDate(\"2021-11-20\"), new EventTime(\"0900\")),","lastModifiedDate":"2021-09-18"},{"lineNumber":52,"author":{"gitId":"XXJJXJ"},"content":"            new Event(new EventName(\"CS2103T Submission\"), new EventDate(\"2021-09-30\")),","lastModifiedDate":"2021-09-18"},{"lineNumber":53,"author":{"gitId":"XXJJXJ"},"content":"            new Event(new EventName(\"End of Recess Week\"), new EventDate(\"2021-09-26\"), new EventTime(\"2359\")),","lastModifiedDate":"2021-09-18"},{"lineNumber":54,"author":{"gitId":"XXJJXJ"},"content":"            new Event(new EventName(\"Recess Week\"), new EventDate(\"2021-09-20\"), new EventTime(\"0000\")),","lastModifiedDate":"2021-09-18"},{"lineNumber":55,"author":{"gitId":"XXJJXJ"},"content":"            new Event(new EventName(\"Dinner\"), new EventDate(\"2021-09-21\"), new EventTime(\"2100\")),","lastModifiedDate":"2021-09-18"},{"lineNumber":56,"author":{"gitId":"XXJJXJ"},"content":"            new Event(new EventName(\"Lunch\"), new EventDate(\"2021-09-21\"), new EventTime(\"1300\")),","lastModifiedDate":"2021-09-18"},{"lineNumber":57,"author":{"gitId":"XXJJXJ"},"content":"            new Event(new EventName(\"BreakFast\"), new EventDate(\"2021-09-21\"), new EventTime(\"0800\"))","lastModifiedDate":"2021-09-18"},{"lineNumber":58,"author":{"gitId":"XXJJXJ"},"content":"        };","lastModifiedDate":"2021-09-18"},{"lineNumber":59,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":60,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public static ReadOnlyAddressBook getSampleAddressBook() {","lastModifiedDate":"2016-12-20"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        AddressBook sampleAb \u003d new AddressBook();","lastModifiedDate":"2017-04-07"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        for (Person samplePerson : getSamplePersons()) {","lastModifiedDate":"2016-12-20"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            sampleAb.addPerson(samplePerson);","lastModifiedDate":"2017-04-07"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-20"},{"lineNumber":66,"author":{"gitId":"XXJJXJ"},"content":"        for (Event sampleEvent : getSampleEvents()) {","lastModifiedDate":"2021-09-18"},{"lineNumber":67,"author":{"gitId":"XXJJXJ"},"content":"            sampleAb.addEvent(sampleEvent);","lastModifiedDate":"2021-09-18"},{"lineNumber":68,"author":{"gitId":"XXJJXJ"},"content":"        }","lastModifiedDate":"2021-09-18"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        return sampleAb;","lastModifiedDate":"2017-04-07"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-14"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * Returns a tag set containing the list of strings given.","lastModifiedDate":"2017-03-14"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-14"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e getTagSet(String... strings) {","lastModifiedDate":"2017-05-30"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        return Arrays.stream(strings)","lastModifiedDate":"2018-01-21"},{"lineNumber":77,"author":{"gitId":"-"},"content":"                .map(Tag::new)","lastModifiedDate":"2018-01-21"},{"lineNumber":78,"author":{"gitId":"-"},"content":"                .collect(Collectors.toSet());","lastModifiedDate":"2018-01-21"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-14"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-09-11"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * Return a note set containing the list of notes","lastModifiedDate":"2021-09-11"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2021-09-11"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * @param notes      An array of notes.","lastModifiedDate":"2021-09-12"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * @return           Set of Notes.","lastModifiedDate":"2021-09-12"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-09-11"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public static Set\u003cNote\u003e getNoteSet(Note... notes) {","lastModifiedDate":"2021-09-11"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        return Arrays.stream(notes).collect(Collectors.toSet());","lastModifiedDate":"2021-09-11"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-11"},{"lineNumber":90,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-20"}],"authorContributionMap":{"XXJJXJ":20,"-":70}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedEvent.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"XXJJXJ"},"content":"package seedu.address.storage;","lastModifiedDate":"2021-09-18"},{"lineNumber":2,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":3,"author":{"gitId":"XXJJXJ"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-09-18"},{"lineNumber":4,"author":{"gitId":"XXJJXJ"},"content":"import java.util.List;","lastModifiedDate":"2021-09-18"},{"lineNumber":5,"author":{"gitId":"XXJJXJ"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2021-09-18"},{"lineNumber":6,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":7,"author":{"gitId":"XXJJXJ"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2021-09-18"},{"lineNumber":8,"author":{"gitId":"XXJJXJ"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2021-09-18"},{"lineNumber":9,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":10,"author":{"gitId":"XXJJXJ"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2021-09-18"},{"lineNumber":11,"author":{"gitId":"XXJJXJ"},"content":"import seedu.address.model.event.Event;","lastModifiedDate":"2021-09-18"},{"lineNumber":12,"author":{"gitId":"XXJJXJ"},"content":"import seedu.address.model.event.EventDate;","lastModifiedDate":"2021-09-18"},{"lineNumber":13,"author":{"gitId":"XXJJXJ"},"content":"import seedu.address.model.event.EventName;","lastModifiedDate":"2021-09-18"},{"lineNumber":14,"author":{"gitId":"XXJJXJ"},"content":"import seedu.address.model.event.EventTime;","lastModifiedDate":"2021-09-18"},{"lineNumber":15,"author":{"gitId":"XXJJXJ"},"content":"import seedu.address.model.particpant.Participant;","lastModifiedDate":"2021-09-18"},{"lineNumber":16,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":17,"author":{"gitId":"XXJJXJ"},"content":"/**","lastModifiedDate":"2021-09-18"},{"lineNumber":18,"author":{"gitId":"XXJJXJ"},"content":" * Json friendly {@link Event}","lastModifiedDate":"2021-09-18"},{"lineNumber":19,"author":{"gitId":"XXJJXJ"},"content":" */","lastModifiedDate":"2021-09-18"},{"lineNumber":20,"author":{"gitId":"XXJJXJ"},"content":"public class JsonAdaptedEvent {","lastModifiedDate":"2021-09-18"},{"lineNumber":21,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":22,"author":{"gitId":"XXJJXJ"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Event\u0027s %s field is missing!\";","lastModifiedDate":"2021-09-18"},{"lineNumber":23,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":24,"author":{"gitId":"XXJJXJ"},"content":"    private final String name;","lastModifiedDate":"2021-09-18"},{"lineNumber":25,"author":{"gitId":"XXJJXJ"},"content":"    private String isDone;","lastModifiedDate":"2021-09-18"},{"lineNumber":26,"author":{"gitId":"XXJJXJ"},"content":"    private String date;","lastModifiedDate":"2021-09-18"},{"lineNumber":27,"author":{"gitId":"XXJJXJ"},"content":"    private String time;","lastModifiedDate":"2021-09-18"},{"lineNumber":28,"author":{"gitId":"XXJJXJ"},"content":"    private final List\u003cJsonAdaptedParticipant\u003e participants \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-09-18"},{"lineNumber":29,"author":{"gitId":"XXJJXJ"},"content":"    //Change to JsonAdaptedParticipants","lastModifiedDate":"2021-09-18"},{"lineNumber":30,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":31,"author":{"gitId":"XXJJXJ"},"content":"    /**","lastModifiedDate":"2021-09-18"},{"lineNumber":32,"author":{"gitId":"XXJJXJ"},"content":"     * Constructs a {@code JsonAdaptedEvent} with the given Event details.","lastModifiedDate":"2021-09-18"},{"lineNumber":33,"author":{"gitId":"XXJJXJ"},"content":"     */","lastModifiedDate":"2021-09-18"},{"lineNumber":34,"author":{"gitId":"XXJJXJ"},"content":"    @JsonCreator","lastModifiedDate":"2021-09-18"},{"lineNumber":35,"author":{"gitId":"XXJJXJ"},"content":"    public JsonAdaptedEvent(@JsonProperty(\"name\") String name, @JsonProperty(\"isDone\") String isDone,","lastModifiedDate":"2021-09-18"},{"lineNumber":36,"author":{"gitId":"XXJJXJ"},"content":"                             @JsonProperty(\"date\") String date, @JsonProperty(\"time\") String time,","lastModifiedDate":"2021-09-18"},{"lineNumber":37,"author":{"gitId":"XXJJXJ"},"content":"                             @JsonProperty(\"participants\") List\u003cJsonAdaptedParticipant\u003e participants) {","lastModifiedDate":"2021-09-18"},{"lineNumber":38,"author":{"gitId":"XXJJXJ"},"content":"        this.name \u003d name;","lastModifiedDate":"2021-09-18"},{"lineNumber":39,"author":{"gitId":"XXJJXJ"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2021-09-18"},{"lineNumber":40,"author":{"gitId":"XXJJXJ"},"content":"        this.date \u003d date;","lastModifiedDate":"2021-09-18"},{"lineNumber":41,"author":{"gitId":"XXJJXJ"},"content":"        this.time \u003d time;","lastModifiedDate":"2021-09-18"},{"lineNumber":42,"author":{"gitId":"XXJJXJ"},"content":"        if (participants !\u003d null) {","lastModifiedDate":"2021-09-18"},{"lineNumber":43,"author":{"gitId":"XXJJXJ"},"content":"            this.participants.addAll(participants);","lastModifiedDate":"2021-09-18"},{"lineNumber":44,"author":{"gitId":"XXJJXJ"},"content":"        }","lastModifiedDate":"2021-09-18"},{"lineNumber":45,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":46,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":47,"author":{"gitId":"XXJJXJ"},"content":"    /**","lastModifiedDate":"2021-09-18"},{"lineNumber":48,"author":{"gitId":"XXJJXJ"},"content":"     * Converts a given {@code Event} into this class for Jackson use.","lastModifiedDate":"2021-09-18"},{"lineNumber":49,"author":{"gitId":"XXJJXJ"},"content":"     */","lastModifiedDate":"2021-09-18"},{"lineNumber":50,"author":{"gitId":"XXJJXJ"},"content":"    public JsonAdaptedEvent(Event source) {","lastModifiedDate":"2021-09-18"},{"lineNumber":51,"author":{"gitId":"XXJJXJ"},"content":"        name \u003d source.getName().eventName;","lastModifiedDate":"2021-09-18"},{"lineNumber":52,"author":{"gitId":"XXJJXJ"},"content":"        date \u003d source.getDate().toString();","lastModifiedDate":"2021-09-18"},{"lineNumber":53,"author":{"gitId":"XXJJXJ"},"content":"        time \u003d source.getTime().toString();","lastModifiedDate":"2021-09-18"},{"lineNumber":54,"author":{"gitId":"XXJJXJ"},"content":"        isDone \u003d source.getIsDone() ? \"Completed\" : \"Uncompleted\";","lastModifiedDate":"2021-09-18"},{"lineNumber":55,"author":{"gitId":"XXJJXJ"},"content":"        participants.addAll(source.getParticipants().stream()","lastModifiedDate":"2021-09-18"},{"lineNumber":56,"author":{"gitId":"XXJJXJ"},"content":"                .map(JsonAdaptedParticipant::new)","lastModifiedDate":"2021-09-18"},{"lineNumber":57,"author":{"gitId":"XXJJXJ"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2021-09-18"},{"lineNumber":58,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":59,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":60,"author":{"gitId":"XXJJXJ"},"content":"    /**","lastModifiedDate":"2021-09-18"},{"lineNumber":61,"author":{"gitId":"XXJJXJ"},"content":"     * Converts this Json-friendly adapted person object into the model\u0027s {@code Event} object.","lastModifiedDate":"2021-09-18"},{"lineNumber":62,"author":{"gitId":"XXJJXJ"},"content":"     *","lastModifiedDate":"2021-09-18"},{"lineNumber":63,"author":{"gitId":"XXJJXJ"},"content":"     * @return an Event instance representing the JsonAdaptedEvent.","lastModifiedDate":"2021-09-18"},{"lineNumber":64,"author":{"gitId":"XXJJXJ"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted event.","lastModifiedDate":"2021-09-18"},{"lineNumber":65,"author":{"gitId":"XXJJXJ"},"content":"     */","lastModifiedDate":"2021-09-18"},{"lineNumber":66,"author":{"gitId":"XXJJXJ"},"content":"    public Event toModelType() throws IllegalValueException {","lastModifiedDate":"2021-09-18"},{"lineNumber":67,"author":{"gitId":"XXJJXJ"},"content":"        final List\u003cParticipant\u003e participants \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-09-18"},{"lineNumber":68,"author":{"gitId":"XXJJXJ"},"content":"        for (JsonAdaptedParticipant p : this.participants) {","lastModifiedDate":"2021-09-18"},{"lineNumber":69,"author":{"gitId":"XXJJXJ"},"content":"            participants.add(p.toModelType());","lastModifiedDate":"2021-09-18"},{"lineNumber":70,"author":{"gitId":"XXJJXJ"},"content":"        }","lastModifiedDate":"2021-09-18"},{"lineNumber":71,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":72,"author":{"gitId":"XXJJXJ"},"content":"        if (this.name \u003d\u003d null) {","lastModifiedDate":"2021-09-18"},{"lineNumber":73,"author":{"gitId":"XXJJXJ"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2021-09-18"},{"lineNumber":74,"author":{"gitId":"XXJJXJ"},"content":"                    EventName.class.getSimpleName()));","lastModifiedDate":"2021-09-18"},{"lineNumber":75,"author":{"gitId":"XXJJXJ"},"content":"        }","lastModifiedDate":"2021-09-18"},{"lineNumber":76,"author":{"gitId":"XXJJXJ"},"content":"        if (!EventName.isValidEventName(this.name)) {","lastModifiedDate":"2021-09-18"},{"lineNumber":77,"author":{"gitId":"XXJJXJ"},"content":"            throw new IllegalValueException(EventName.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-09-18"},{"lineNumber":78,"author":{"gitId":"XXJJXJ"},"content":"        }","lastModifiedDate":"2021-09-18"},{"lineNumber":79,"author":{"gitId":"XXJJXJ"},"content":"        final EventName eventName \u003d new EventName(this.name);","lastModifiedDate":"2021-09-18"},{"lineNumber":80,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":81,"author":{"gitId":"XXJJXJ"},"content":"        // Implementation might need improvements","lastModifiedDate":"2021-09-18"},{"lineNumber":82,"author":{"gitId":"XXJJXJ"},"content":"        if (this.date \u003d\u003d null) {","lastModifiedDate":"2021-09-18"},{"lineNumber":83,"author":{"gitId":"XXJJXJ"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2021-09-18"},{"lineNumber":84,"author":{"gitId":"XXJJXJ"},"content":"                    EventDate.class.getSimpleName()));","lastModifiedDate":"2021-09-18"},{"lineNumber":85,"author":{"gitId":"XXJJXJ"},"content":"        }","lastModifiedDate":"2021-09-18"},{"lineNumber":86,"author":{"gitId":"XXJJXJ"},"content":"        if (!EventDate.isValidDate(this.date)) {","lastModifiedDate":"2021-09-18"},{"lineNumber":87,"author":{"gitId":"XXJJXJ"},"content":"            throw new IllegalValueException(EventDate.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-09-18"},{"lineNumber":88,"author":{"gitId":"XXJJXJ"},"content":"        }","lastModifiedDate":"2021-09-18"},{"lineNumber":89,"author":{"gitId":"XXJJXJ"},"content":"        final EventDate eventDate \u003d new EventDate(this.date);","lastModifiedDate":"2021-09-18"},{"lineNumber":90,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":91,"author":{"gitId":"XXJJXJ"},"content":"        EventTime eventTime;","lastModifiedDate":"2021-09-18"},{"lineNumber":92,"author":{"gitId":"XXJJXJ"},"content":"        if (this.time \u003d\u003d null) {","lastModifiedDate":"2021-09-18"},{"lineNumber":93,"author":{"gitId":"XXJJXJ"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2021-09-18"},{"lineNumber":94,"author":{"gitId":"XXJJXJ"},"content":"                    EventTime.class.getSimpleName()));","lastModifiedDate":"2021-09-18"},{"lineNumber":95,"author":{"gitId":"XXJJXJ"},"content":"        }","lastModifiedDate":"2021-09-18"},{"lineNumber":96,"author":{"gitId":"XXJJXJ"},"content":"        if (EventTime.isValidTime(this.time)) {","lastModifiedDate":"2021-09-18"},{"lineNumber":97,"author":{"gitId":"XXJJXJ"},"content":"            eventTime \u003d new EventTime(this.time);","lastModifiedDate":"2021-09-18"},{"lineNumber":98,"author":{"gitId":"XXJJXJ"},"content":"        } else if (this.time.equals(\"\")) {","lastModifiedDate":"2021-09-18"},{"lineNumber":99,"author":{"gitId":"XXJJXJ"},"content":"            eventTime \u003d new EventTime(); //No time given","lastModifiedDate":"2021-09-18"},{"lineNumber":100,"author":{"gitId":"XXJJXJ"},"content":"        } else {","lastModifiedDate":"2021-09-18"},{"lineNumber":101,"author":{"gitId":"XXJJXJ"},"content":"            throw new IllegalValueException(EventTime.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-09-18"},{"lineNumber":102,"author":{"gitId":"XXJJXJ"},"content":"        }","lastModifiedDate":"2021-09-18"},{"lineNumber":103,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":104,"author":{"gitId":"XXJJXJ"},"content":"        Event event \u003d new Event(eventName, eventDate, eventTime);","lastModifiedDate":"2021-09-18"},{"lineNumber":105,"author":{"gitId":"XXJJXJ"},"content":"        if (this.isDone.equals(\"Completed\")) {","lastModifiedDate":"2021-09-18"},{"lineNumber":106,"author":{"gitId":"XXJJXJ"},"content":"            event.markAsDone();","lastModifiedDate":"2021-09-18"},{"lineNumber":107,"author":{"gitId":"XXJJXJ"},"content":"        }","lastModifiedDate":"2021-09-18"},{"lineNumber":108,"author":{"gitId":"XXJJXJ"},"content":"        return event;","lastModifiedDate":"2021-09-18"},{"lineNumber":109,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":110,"author":{"gitId":"XXJJXJ"},"content":"}","lastModifiedDate":"2021-09-18"}],"authorContributionMap":{"XXJJXJ":110}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedParticipant.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"XXJJXJ"},"content":"package seedu.address.storage;","lastModifiedDate":"2021-09-18"},{"lineNumber":2,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":3,"author":{"gitId":"XXJJXJ"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-09-18"},{"lineNumber":4,"author":{"gitId":"XXJJXJ"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-09-18"},{"lineNumber":5,"author":{"gitId":"XXJJXJ"},"content":"import java.util.HashSet;","lastModifiedDate":"2021-09-18"},{"lineNumber":6,"author":{"gitId":"XXJJXJ"},"content":"import java.util.List;","lastModifiedDate":"2021-09-18"},{"lineNumber":7,"author":{"gitId":"XXJJXJ"},"content":"import java.util.Set;","lastModifiedDate":"2021-09-18"},{"lineNumber":8,"author":{"gitId":"XXJJXJ"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2021-09-18"},{"lineNumber":9,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":10,"author":{"gitId":"XXJJXJ"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2021-09-18"},{"lineNumber":11,"author":{"gitId":"XXJJXJ"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2021-09-18"},{"lineNumber":12,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":13,"author":{"gitId":"XXJJXJ"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2021-09-18"},{"lineNumber":14,"author":{"gitId":"XXJJXJ"},"content":"import seedu.address.model.particpant.BirthDate;","lastModifiedDate":"2021-09-18"},{"lineNumber":15,"author":{"gitId":"XXJJXJ"},"content":"import seedu.address.model.particpant.Note;","lastModifiedDate":"2021-09-18"},{"lineNumber":16,"author":{"gitId":"XXJJXJ"},"content":"import seedu.address.model.particpant.Participant;","lastModifiedDate":"2021-09-18"},{"lineNumber":17,"author":{"gitId":"XXJJXJ"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2021-09-18"},{"lineNumber":18,"author":{"gitId":"XXJJXJ"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2021-09-18"},{"lineNumber":19,"author":{"gitId":"XXJJXJ"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2021-09-18"},{"lineNumber":20,"author":{"gitId":"XXJJXJ"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2021-09-18"},{"lineNumber":21,"author":{"gitId":"XXJJXJ"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2021-09-18"},{"lineNumber":22,"author":{"gitId":"XXJJXJ"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2021-09-18"},{"lineNumber":23,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":24,"author":{"gitId":"XXJJXJ"},"content":"public class JsonAdaptedParticipant {","lastModifiedDate":"2021-09-18"},{"lineNumber":25,"author":{"gitId":"XXJJXJ"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Participant\u0027s %s field is missing!\";","lastModifiedDate":"2021-09-18"},{"lineNumber":26,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":27,"author":{"gitId":"XXJJXJ"},"content":"    private final String name;","lastModifiedDate":"2021-09-18"},{"lineNumber":28,"author":{"gitId":"XXJJXJ"},"content":"    private final String phone;","lastModifiedDate":"2021-09-18"},{"lineNumber":29,"author":{"gitId":"XXJJXJ"},"content":"    private final String email;","lastModifiedDate":"2021-09-18"},{"lineNumber":30,"author":{"gitId":"XXJJXJ"},"content":"    private final String address;","lastModifiedDate":"2021-09-18"},{"lineNumber":31,"author":{"gitId":"XXJJXJ"},"content":"    private final List\u003cJsonAdaptedTag\u003e tagged \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-09-18"},{"lineNumber":32,"author":{"gitId":"XXJJXJ"},"content":"    //Add on for Managera Participants","lastModifiedDate":"2021-09-18"},{"lineNumber":33,"author":{"gitId":"XXJJXJ"},"content":"    private final String birthDate;","lastModifiedDate":"2021-09-18"},{"lineNumber":34,"author":{"gitId":"XXJJXJ"},"content":"    private final List\u003cJsonAdaptedPerson\u003e nextOfKins \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-09-18"},{"lineNumber":35,"author":{"gitId":"XXJJXJ"},"content":"    // TODO: JsonAdaptedNotes (To be implemented)","lastModifiedDate":"2021-09-18"},{"lineNumber":36,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":37,"author":{"gitId":"XXJJXJ"},"content":"    /**","lastModifiedDate":"2021-09-18"},{"lineNumber":38,"author":{"gitId":"XXJJXJ"},"content":"     * Constructs a {@code JsonAdaptedParticipant} with the given participant details.","lastModifiedDate":"2021-09-18"},{"lineNumber":39,"author":{"gitId":"XXJJXJ"},"content":"     */","lastModifiedDate":"2021-09-18"},{"lineNumber":40,"author":{"gitId":"XXJJXJ"},"content":"    @JsonCreator","lastModifiedDate":"2021-09-18"},{"lineNumber":41,"author":{"gitId":"XXJJXJ"},"content":"    public JsonAdaptedParticipant(@JsonProperty(\"name\") String name, @JsonProperty(\"phone\") String phone,","lastModifiedDate":"2021-09-18"},{"lineNumber":42,"author":{"gitId":"XXJJXJ"},"content":"                             @JsonProperty(\"email\") String email, @JsonProperty(\"address\") String address,","lastModifiedDate":"2021-09-18"},{"lineNumber":43,"author":{"gitId":"XXJJXJ"},"content":"                             @JsonProperty(\"tagged\") List\u003cJsonAdaptedTag\u003e tagged,","lastModifiedDate":"2021-09-18"},{"lineNumber":44,"author":{"gitId":"XXJJXJ"},"content":"                             @JsonProperty(\"birthDate\") String birthDate,","lastModifiedDate":"2021-09-18"},{"lineNumber":45,"author":{"gitId":"XXJJXJ"},"content":"                             @JsonProperty(\"nextOfKins\") List\u003cJsonAdaptedPerson\u003e nextOfKins) {","lastModifiedDate":"2021-09-18"},{"lineNumber":46,"author":{"gitId":"XXJJXJ"},"content":"        this.name \u003d name;","lastModifiedDate":"2021-09-18"},{"lineNumber":47,"author":{"gitId":"XXJJXJ"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2021-09-18"},{"lineNumber":48,"author":{"gitId":"XXJJXJ"},"content":"        this.email \u003d email;","lastModifiedDate":"2021-09-18"},{"lineNumber":49,"author":{"gitId":"XXJJXJ"},"content":"        this.address \u003d address;","lastModifiedDate":"2021-09-18"},{"lineNumber":50,"author":{"gitId":"XXJJXJ"},"content":"        if (tagged !\u003d null) {","lastModifiedDate":"2021-09-18"},{"lineNumber":51,"author":{"gitId":"XXJJXJ"},"content":"            this.tagged.addAll(tagged);","lastModifiedDate":"2021-09-18"},{"lineNumber":52,"author":{"gitId":"XXJJXJ"},"content":"        }","lastModifiedDate":"2021-09-18"},{"lineNumber":53,"author":{"gitId":"XXJJXJ"},"content":"        this.birthDate \u003d birthDate;","lastModifiedDate":"2021-09-18"},{"lineNumber":54,"author":{"gitId":"XXJJXJ"},"content":"        if (nextOfKins !\u003d null) {","lastModifiedDate":"2021-09-18"},{"lineNumber":55,"author":{"gitId":"XXJJXJ"},"content":"            this.nextOfKins.addAll(nextOfKins);","lastModifiedDate":"2021-09-18"},{"lineNumber":56,"author":{"gitId":"XXJJXJ"},"content":"        }","lastModifiedDate":"2021-09-18"},{"lineNumber":57,"author":{"gitId":"XXJJXJ"},"content":"        // TODO: Notes to be implemented","lastModifiedDate":"2021-09-18"},{"lineNumber":58,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":59,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":60,"author":{"gitId":"XXJJXJ"},"content":"    /**","lastModifiedDate":"2021-09-18"},{"lineNumber":61,"author":{"gitId":"XXJJXJ"},"content":"     * Converts a given {@code Participant} into this class for Json use.","lastModifiedDate":"2021-09-18"},{"lineNumber":62,"author":{"gitId":"XXJJXJ"},"content":"     */","lastModifiedDate":"2021-09-18"},{"lineNumber":63,"author":{"gitId":"XXJJXJ"},"content":"    public JsonAdaptedParticipant(Participant source) {","lastModifiedDate":"2021-09-18"},{"lineNumber":64,"author":{"gitId":"XXJJXJ"},"content":"        name \u003d source.getName().fullName;","lastModifiedDate":"2021-09-18"},{"lineNumber":65,"author":{"gitId":"XXJJXJ"},"content":"        phone \u003d source.getPhone().value;","lastModifiedDate":"2021-09-18"},{"lineNumber":66,"author":{"gitId":"XXJJXJ"},"content":"        email \u003d source.getEmail().value;","lastModifiedDate":"2021-09-18"},{"lineNumber":67,"author":{"gitId":"XXJJXJ"},"content":"        address \u003d source.getAddress().value;","lastModifiedDate":"2021-09-18"},{"lineNumber":68,"author":{"gitId":"XXJJXJ"},"content":"        tagged.addAll(source.getTags().stream()","lastModifiedDate":"2021-09-18"},{"lineNumber":69,"author":{"gitId":"XXJJXJ"},"content":"                .map(JsonAdaptedTag::new)","lastModifiedDate":"2021-09-18"},{"lineNumber":70,"author":{"gitId":"XXJJXJ"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2021-09-18"},{"lineNumber":71,"author":{"gitId":"XXJJXJ"},"content":"        birthDate \u003d source.getBirthDate().toString();","lastModifiedDate":"2021-09-18"},{"lineNumber":72,"author":{"gitId":"XXJJXJ"},"content":"        nextOfKins.addAll(source.getNextOfKins().stream()","lastModifiedDate":"2021-09-18"},{"lineNumber":73,"author":{"gitId":"XXJJXJ"},"content":"                .map(JsonAdaptedPerson::new)","lastModifiedDate":"2021-09-18"},{"lineNumber":74,"author":{"gitId":"XXJJXJ"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2021-09-18"},{"lineNumber":75,"author":{"gitId":"XXJJXJ"},"content":"        // TODO: Notes to be implemented","lastModifiedDate":"2021-09-18"},{"lineNumber":76,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":77,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":78,"author":{"gitId":"XXJJXJ"},"content":"    /**","lastModifiedDate":"2021-09-18"},{"lineNumber":79,"author":{"gitId":"XXJJXJ"},"content":"     * Converts this Jackson-friendly adapted participant object into the model\u0027s {@code Participant} object.","lastModifiedDate":"2021-09-18"},{"lineNumber":80,"author":{"gitId":"XXJJXJ"},"content":"     *","lastModifiedDate":"2021-09-18"},{"lineNumber":81,"author":{"gitId":"XXJJXJ"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted participant.","lastModifiedDate":"2021-09-18"},{"lineNumber":82,"author":{"gitId":"XXJJXJ"},"content":"     */","lastModifiedDate":"2021-09-18"},{"lineNumber":83,"author":{"gitId":"XXJJXJ"},"content":"    public Participant toModelType() throws IllegalValueException {","lastModifiedDate":"2021-09-18"},{"lineNumber":84,"author":{"gitId":"XXJJXJ"},"content":"        final List\u003cTag\u003e personTags \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-09-18"},{"lineNumber":85,"author":{"gitId":"XXJJXJ"},"content":"        for (JsonAdaptedTag tag : tagged) {","lastModifiedDate":"2021-09-18"},{"lineNumber":86,"author":{"gitId":"XXJJXJ"},"content":"            personTags.add(tag.toModelType());","lastModifiedDate":"2021-09-18"},{"lineNumber":87,"author":{"gitId":"XXJJXJ"},"content":"        }","lastModifiedDate":"2021-09-18"},{"lineNumber":88,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":89,"author":{"gitId":"XXJJXJ"},"content":"        if (name \u003d\u003d null) {","lastModifiedDate":"2021-09-18"},{"lineNumber":90,"author":{"gitId":"XXJJXJ"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName()));","lastModifiedDate":"2021-09-18"},{"lineNumber":91,"author":{"gitId":"XXJJXJ"},"content":"        }","lastModifiedDate":"2021-09-18"},{"lineNumber":92,"author":{"gitId":"XXJJXJ"},"content":"        if (!Name.isValidName(name)) {","lastModifiedDate":"2021-09-18"},{"lineNumber":93,"author":{"gitId":"XXJJXJ"},"content":"            throw new IllegalValueException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-09-18"},{"lineNumber":94,"author":{"gitId":"XXJJXJ"},"content":"        }","lastModifiedDate":"2021-09-18"},{"lineNumber":95,"author":{"gitId":"XXJJXJ"},"content":"        final Name modelName \u003d new Name(name);","lastModifiedDate":"2021-09-18"},{"lineNumber":96,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":97,"author":{"gitId":"XXJJXJ"},"content":"        if (phone \u003d\u003d null) {","lastModifiedDate":"2021-09-18"},{"lineNumber":98,"author":{"gitId":"XXJJXJ"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName()));","lastModifiedDate":"2021-09-18"},{"lineNumber":99,"author":{"gitId":"XXJJXJ"},"content":"        }","lastModifiedDate":"2021-09-18"},{"lineNumber":100,"author":{"gitId":"XXJJXJ"},"content":"        if (!Phone.isValidPhone(phone)) {","lastModifiedDate":"2021-09-18"},{"lineNumber":101,"author":{"gitId":"XXJJXJ"},"content":"            throw new IllegalValueException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-09-18"},{"lineNumber":102,"author":{"gitId":"XXJJXJ"},"content":"        }","lastModifiedDate":"2021-09-18"},{"lineNumber":103,"author":{"gitId":"XXJJXJ"},"content":"        final Phone modelPhone \u003d new Phone(phone);","lastModifiedDate":"2021-09-18"},{"lineNumber":104,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":105,"author":{"gitId":"XXJJXJ"},"content":"        if (email \u003d\u003d null) {","lastModifiedDate":"2021-09-18"},{"lineNumber":106,"author":{"gitId":"XXJJXJ"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName()));","lastModifiedDate":"2021-09-18"},{"lineNumber":107,"author":{"gitId":"XXJJXJ"},"content":"        }","lastModifiedDate":"2021-09-18"},{"lineNumber":108,"author":{"gitId":"XXJJXJ"},"content":"        if (!Email.isValidEmail(email)) {","lastModifiedDate":"2021-09-18"},{"lineNumber":109,"author":{"gitId":"XXJJXJ"},"content":"            throw new IllegalValueException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-09-18"},{"lineNumber":110,"author":{"gitId":"XXJJXJ"},"content":"        }","lastModifiedDate":"2021-09-18"},{"lineNumber":111,"author":{"gitId":"XXJJXJ"},"content":"        final Email modelEmail \u003d new Email(email);","lastModifiedDate":"2021-09-18"},{"lineNumber":112,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":113,"author":{"gitId":"XXJJXJ"},"content":"        if (address \u003d\u003d null) {","lastModifiedDate":"2021-09-18"},{"lineNumber":114,"author":{"gitId":"XXJJXJ"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Address.class.getSimpleName()));","lastModifiedDate":"2021-09-18"},{"lineNumber":115,"author":{"gitId":"XXJJXJ"},"content":"        }","lastModifiedDate":"2021-09-18"},{"lineNumber":116,"author":{"gitId":"XXJJXJ"},"content":"        if (!Address.isValidAddress(address)) {","lastModifiedDate":"2021-09-18"},{"lineNumber":117,"author":{"gitId":"XXJJXJ"},"content":"            throw new IllegalValueException(Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-09-18"},{"lineNumber":118,"author":{"gitId":"XXJJXJ"},"content":"        }","lastModifiedDate":"2021-09-18"},{"lineNumber":119,"author":{"gitId":"XXJJXJ"},"content":"        final Address modelAddress \u003d new Address(address);","lastModifiedDate":"2021-09-18"},{"lineNumber":120,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":121,"author":{"gitId":"XXJJXJ"},"content":"        final Set\u003cTag\u003e modelTags \u003d new HashSet\u003c\u003e(personTags);","lastModifiedDate":"2021-09-18"},{"lineNumber":122,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":123,"author":{"gitId":"XXJJXJ"},"content":"        BirthDate birthDate;","lastModifiedDate":"2021-09-18"},{"lineNumber":124,"author":{"gitId":"XXJJXJ"},"content":"        if (!BirthDate.isValidBirthDate(this.birthDate)) {","lastModifiedDate":"2021-09-18"},{"lineNumber":125,"author":{"gitId":"XXJJXJ"},"content":"            // throw new IllegalValueException(BirthDate.MESSAGE_DATE_CONSTRAINTS);","lastModifiedDate":"2021-09-18"},{"lineNumber":126,"author":{"gitId":"XXJJXJ"},"content":"            // Can\u0027t do this due to BirthDate implementation","lastModifiedDate":"2021-09-18"},{"lineNumber":127,"author":{"gitId":"XXJJXJ"},"content":"            birthDate \u003d BirthDate.notSpecified();","lastModifiedDate":"2021-09-18"},{"lineNumber":128,"author":{"gitId":"XXJJXJ"},"content":"        } else {","lastModifiedDate":"2021-09-18"},{"lineNumber":129,"author":{"gitId":"XXJJXJ"},"content":"            birthDate \u003d BirthDate.of(LocalDate.parse(this.birthDate));","lastModifiedDate":"2021-09-18"},{"lineNumber":130,"author":{"gitId":"XXJJXJ"},"content":"        }","lastModifiedDate":"2021-09-18"},{"lineNumber":131,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":132,"author":{"gitId":"XXJJXJ"},"content":"        // TODO: set Notes","lastModifiedDate":"2021-09-18"},{"lineNumber":133,"author":{"gitId":"XXJJXJ"},"content":"        Set\u003cNote\u003e notes \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2021-09-18"},{"lineNumber":134,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":135,"author":{"gitId":"XXJJXJ"},"content":"        final ArrayList\u003cPerson\u003e nextOfKins \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-09-18"},{"lineNumber":136,"author":{"gitId":"XXJJXJ"},"content":"        for (JsonAdaptedPerson p : this.nextOfKins) {","lastModifiedDate":"2021-09-18"},{"lineNumber":137,"author":{"gitId":"XXJJXJ"},"content":"            nextOfKins.add(p.toModelType());","lastModifiedDate":"2021-09-18"},{"lineNumber":138,"author":{"gitId":"XXJJXJ"},"content":"        }","lastModifiedDate":"2021-09-18"},{"lineNumber":139,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":140,"author":{"gitId":"XXJJXJ"},"content":"        return new Participant(modelName, modelPhone, modelEmail, modelAddress, modelTags,","lastModifiedDate":"2021-09-18"},{"lineNumber":141,"author":{"gitId":"XXJJXJ"},"content":"                birthDate, notes, nextOfKins);","lastModifiedDate":"2021-09-18"},{"lineNumber":142,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":143,"author":{"gitId":"XXJJXJ"},"content":"}","lastModifiedDate":"2021-09-18"}],"authorContributionMap":{"XXJJXJ":143}},{"path":"src/main/java/seedu/address/storage/JsonSerializableAddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonRootName;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"XXJJXJ"},"content":"import seedu.address.model.event.Event;","lastModifiedDate":"2021-09-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * An Immutable AddressBook that is serializable to JSON format.","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"@JsonRootName(value \u003d \"addressbook\")","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"class JsonSerializableAddressBook {","lastModifiedDate":"2018-12-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"Persons list contains duplicate person(s).\";","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"XXJJXJ"},"content":"    //Add on for Managera","lastModifiedDate":"2021-09-18"},{"lineNumber":25,"author":{"gitId":"XXJJXJ"},"content":"    public static final String MESSAGE_DUPLICATE_EVENT \u003d \"Events list contains duplicate event(s).\";","lastModifiedDate":"2021-09-18"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final List\u003cJsonAdaptedPerson\u003e persons \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"XXJJXJ"},"content":"    //Add on for Managera","lastModifiedDate":"2021-09-18"},{"lineNumber":29,"author":{"gitId":"XXJJXJ"},"content":"    private final List\u003cJsonAdaptedEvent\u003e events \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-09-18"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"XXJJXJ"},"content":"     * Constructs a {@code JsonSerializableAddressBook} with the given persons and events.","lastModifiedDate":"2021-09-18"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"XXJJXJ"},"content":"    public JsonSerializableAddressBook(@JsonProperty(\"persons\") List\u003cJsonAdaptedPerson\u003e persons,","lastModifiedDate":"2021-09-18"},{"lineNumber":36,"author":{"gitId":"XXJJXJ"},"content":"                                       @JsonProperty(\"events\") List\u003cJsonAdaptedEvent\u003e events) {","lastModifiedDate":"2021-09-18"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        this.persons.addAll(persons);","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"XXJJXJ"},"content":"        //Add on for Managera","lastModifiedDate":"2021-09-18"},{"lineNumber":39,"author":{"gitId":"XXJJXJ"},"content":"        this.events.addAll(events);","lastModifiedDate":"2021-09-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * Converts a given {@code ReadOnlyAddressBook} into this class for Jackson use.","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * @param source future changes to this will not affect the created {@code JsonSerializableAddressBook}.","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public JsonSerializableAddressBook(ReadOnlyAddressBook source) {","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        persons.addAll(source.getPersonList().stream().map(JsonAdaptedPerson::new).collect(Collectors.toList()));","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"XXJJXJ"},"content":"        //Add on for Managera","lastModifiedDate":"2021-09-18"},{"lineNumber":50,"author":{"gitId":"XXJJXJ"},"content":"        events.addAll(source.getEventList().stream().map(JsonAdaptedEvent::new).collect(Collectors.toList()));","lastModifiedDate":"2021-09-18"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * Converts this address book into the model\u0027s {@code AddressBook} object.","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated.","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public AddressBook toModelType() throws IllegalValueException {","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        AddressBook addressBook \u003d new AddressBook();","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        for (JsonAdaptedPerson jsonAdaptedPerson : persons) {","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"            Person person \u003d jsonAdaptedPerson.toModelType();","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            if (addressBook.hasPerson(person)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"                throw new IllegalValueException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            addressBook.addPerson(person);","lastModifiedDate":"2018-08-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"XXJJXJ"},"content":"        //Add on for Managera","lastModifiedDate":"2021-09-18"},{"lineNumber":68,"author":{"gitId":"XXJJXJ"},"content":"        for (JsonAdaptedEvent jsonAdaptedEvent : events) {","lastModifiedDate":"2021-09-18"},{"lineNumber":69,"author":{"gitId":"XXJJXJ"},"content":"            Event event \u003d jsonAdaptedEvent.toModelType();","lastModifiedDate":"2021-09-18"},{"lineNumber":70,"author":{"gitId":"XXJJXJ"},"content":"            if (addressBook.hasEvent(event)) {","lastModifiedDate":"2021-09-18"},{"lineNumber":71,"author":{"gitId":"XXJJXJ"},"content":"                throw new IllegalValueException(MESSAGE_DUPLICATE_EVENT);","lastModifiedDate":"2021-09-18"},{"lineNumber":72,"author":{"gitId":"XXJJXJ"},"content":"            }","lastModifiedDate":"2021-09-18"},{"lineNumber":73,"author":{"gitId":"XXJJXJ"},"content":"            addressBook.addEvent(event);","lastModifiedDate":"2021-09-18"},{"lineNumber":74,"author":{"gitId":"XXJJXJ"},"content":"        }","lastModifiedDate":"2021-09-18"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        return addressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"XXJJXJ":20,"-":58}},{"path":"src/main/java/seedu/address/ui/EventCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"XXJJXJ"},"content":"package seedu.address.ui;","lastModifiedDate":"2021-09-18"},{"lineNumber":2,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":3,"author":{"gitId":"XXJJXJ"},"content":"import java.util.Comparator;","lastModifiedDate":"2021-09-18"},{"lineNumber":4,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":5,"author":{"gitId":"XXJJXJ"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-09-18"},{"lineNumber":6,"author":{"gitId":"XXJJXJ"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2021-09-18"},{"lineNumber":7,"author":{"gitId":"XXJJXJ"},"content":"import javafx.scene.layout.FlowPane;","lastModifiedDate":"2021-09-18"},{"lineNumber":8,"author":{"gitId":"XXJJXJ"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2021-09-18"},{"lineNumber":9,"author":{"gitId":"XXJJXJ"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2021-09-18"},{"lineNumber":10,"author":{"gitId":"XXJJXJ"},"content":"import seedu.address.model.event.Event;","lastModifiedDate":"2021-09-18"},{"lineNumber":11,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":12,"author":{"gitId":"XXJJXJ"},"content":"public class EventCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2021-09-18"},{"lineNumber":13,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":14,"author":{"gitId":"XXJJXJ"},"content":"    private static final String FXML \u003d \"EventListCard.fxml\";","lastModifiedDate":"2021-09-18"},{"lineNumber":15,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":16,"author":{"gitId":"XXJJXJ"},"content":"    public final Event event;","lastModifiedDate":"2021-09-18"},{"lineNumber":17,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":18,"author":{"gitId":"XXJJXJ"},"content":"    @FXML","lastModifiedDate":"2021-09-18"},{"lineNumber":19,"author":{"gitId":"XXJJXJ"},"content":"    private HBox cardPane;","lastModifiedDate":"2021-09-18"},{"lineNumber":20,"author":{"gitId":"XXJJXJ"},"content":"    @FXML","lastModifiedDate":"2021-09-18"},{"lineNumber":21,"author":{"gitId":"XXJJXJ"},"content":"    private Label id;","lastModifiedDate":"2021-09-18"},{"lineNumber":22,"author":{"gitId":"XXJJXJ"},"content":"    @FXML","lastModifiedDate":"2021-09-18"},{"lineNumber":23,"author":{"gitId":"XXJJXJ"},"content":"    private Label name;","lastModifiedDate":"2021-09-18"},{"lineNumber":24,"author":{"gitId":"XXJJXJ"},"content":"    @FXML","lastModifiedDate":"2021-09-18"},{"lineNumber":25,"author":{"gitId":"XXJJXJ"},"content":"    private Label isDone;","lastModifiedDate":"2021-09-18"},{"lineNumber":26,"author":{"gitId":"XXJJXJ"},"content":"    @FXML","lastModifiedDate":"2021-09-18"},{"lineNumber":27,"author":{"gitId":"XXJJXJ"},"content":"    private Label date;","lastModifiedDate":"2021-09-18"},{"lineNumber":28,"author":{"gitId":"XXJJXJ"},"content":"    @FXML","lastModifiedDate":"2021-09-18"},{"lineNumber":29,"author":{"gitId":"XXJJXJ"},"content":"    private Label time;","lastModifiedDate":"2021-09-18"},{"lineNumber":30,"author":{"gitId":"XXJJXJ"},"content":"    @FXML","lastModifiedDate":"2021-09-18"},{"lineNumber":31,"author":{"gitId":"XXJJXJ"},"content":"    private FlowPane participants;","lastModifiedDate":"2021-09-18"},{"lineNumber":32,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":33,"author":{"gitId":"XXJJXJ"},"content":"    /**","lastModifiedDate":"2021-09-18"},{"lineNumber":34,"author":{"gitId":"XXJJXJ"},"content":"     * Creates a {@code EventCard} with the given {@code Event} and index to display.","lastModifiedDate":"2021-09-18"},{"lineNumber":35,"author":{"gitId":"XXJJXJ"},"content":"     */","lastModifiedDate":"2021-09-18"},{"lineNumber":36,"author":{"gitId":"XXJJXJ"},"content":"    public EventCard(Event event, int displayedIndex) {","lastModifiedDate":"2021-09-18"},{"lineNumber":37,"author":{"gitId":"XXJJXJ"},"content":"        super(FXML);","lastModifiedDate":"2021-09-18"},{"lineNumber":38,"author":{"gitId":"XXJJXJ"},"content":"        this.event \u003d event;","lastModifiedDate":"2021-09-18"},{"lineNumber":39,"author":{"gitId":"XXJJXJ"},"content":"        id.setText(displayedIndex + \". \");","lastModifiedDate":"2021-09-18"},{"lineNumber":40,"author":{"gitId":"XXJJXJ"},"content":"        name.setText(event.getName().eventName);","lastModifiedDate":"2021-09-18"},{"lineNumber":41,"author":{"gitId":"XXJJXJ"},"content":"        isDone.setText(event.getIsDone() ? \"Completed\" : \"Uncompleted\");","lastModifiedDate":"2021-09-18"},{"lineNumber":42,"author":{"gitId":"XXJJXJ"},"content":"        date.setText(event.getDate().toString());","lastModifiedDate":"2021-09-18"},{"lineNumber":43,"author":{"gitId":"XXJJXJ"},"content":"        time.setText(event.getTime().toString());","lastModifiedDate":"2021-09-18"},{"lineNumber":44,"author":{"gitId":"XXJJXJ"},"content":"        event.getParticipants().stream()","lastModifiedDate":"2021-09-18"},{"lineNumber":45,"author":{"gitId":"XXJJXJ"},"content":"                .sorted(Comparator.comparing(participant -\u003e participant.getName().fullName))","lastModifiedDate":"2021-09-18"},{"lineNumber":46,"author":{"gitId":"XXJJXJ"},"content":"                .forEach(participant -\u003e participants.getChildren().add(new Label(participant.getName().fullName)));","lastModifiedDate":"2021-09-18"},{"lineNumber":47,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":48,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":49,"author":{"gitId":"XXJJXJ"},"content":"    @Override","lastModifiedDate":"2021-09-18"},{"lineNumber":50,"author":{"gitId":"XXJJXJ"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-09-18"},{"lineNumber":51,"author":{"gitId":"XXJJXJ"},"content":"        // short circuit if same object","lastModifiedDate":"2021-09-18"},{"lineNumber":52,"author":{"gitId":"XXJJXJ"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2021-09-18"},{"lineNumber":53,"author":{"gitId":"XXJJXJ"},"content":"            return true;","lastModifiedDate":"2021-09-18"},{"lineNumber":54,"author":{"gitId":"XXJJXJ"},"content":"        }","lastModifiedDate":"2021-09-18"},{"lineNumber":55,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":56,"author":{"gitId":"XXJJXJ"},"content":"        // instanceof handles nulls","lastModifiedDate":"2021-09-18"},{"lineNumber":57,"author":{"gitId":"XXJJXJ"},"content":"        if (!(other instanceof EventCard)) {","lastModifiedDate":"2021-09-18"},{"lineNumber":58,"author":{"gitId":"XXJJXJ"},"content":"            return false;","lastModifiedDate":"2021-09-18"},{"lineNumber":59,"author":{"gitId":"XXJJXJ"},"content":"        }","lastModifiedDate":"2021-09-18"},{"lineNumber":60,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":61,"author":{"gitId":"XXJJXJ"},"content":"        // state check","lastModifiedDate":"2021-09-18"},{"lineNumber":62,"author":{"gitId":"XXJJXJ"},"content":"        EventCard card \u003d (EventCard) other;","lastModifiedDate":"2021-09-18"},{"lineNumber":63,"author":{"gitId":"XXJJXJ"},"content":"        return id.getText().equals(card.id.getText())","lastModifiedDate":"2021-09-18"},{"lineNumber":64,"author":{"gitId":"XXJJXJ"},"content":"                \u0026\u0026 event.equals(card.event);","lastModifiedDate":"2021-09-18"},{"lineNumber":65,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":66,"author":{"gitId":"XXJJXJ"},"content":"}","lastModifiedDate":"2021-09-18"}],"authorContributionMap":{"XXJJXJ":66}},{"path":"src/main/java/seedu/address/ui/EventListPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"XXJJXJ"},"content":"package seedu.address.ui;","lastModifiedDate":"2021-09-18"},{"lineNumber":2,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":3,"author":{"gitId":"XXJJXJ"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-09-18"},{"lineNumber":4,"author":{"gitId":"XXJJXJ"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-09-18"},{"lineNumber":5,"author":{"gitId":"XXJJXJ"},"content":"import javafx.scene.control.ListCell;","lastModifiedDate":"2021-09-18"},{"lineNumber":6,"author":{"gitId":"XXJJXJ"},"content":"import javafx.scene.control.ListView;","lastModifiedDate":"2021-09-18"},{"lineNumber":7,"author":{"gitId":"XXJJXJ"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2021-09-18"},{"lineNumber":8,"author":{"gitId":"XXJJXJ"},"content":"import seedu.address.model.event.Event;","lastModifiedDate":"2021-09-18"},{"lineNumber":9,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":10,"author":{"gitId":"XXJJXJ"},"content":"public class EventListPanel extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2021-09-18"},{"lineNumber":11,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":12,"author":{"gitId":"XXJJXJ"},"content":"    private static final String FXML \u003d \"EventListPanel.fxml\";","lastModifiedDate":"2021-09-18"},{"lineNumber":13,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":14,"author":{"gitId":"XXJJXJ"},"content":"    @FXML","lastModifiedDate":"2021-09-18"},{"lineNumber":15,"author":{"gitId":"XXJJXJ"},"content":"    private ListView\u003cEvent\u003e eventListView;","lastModifiedDate":"2021-09-18"},{"lineNumber":16,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":17,"author":{"gitId":"XXJJXJ"},"content":"    /**","lastModifiedDate":"2021-09-18"},{"lineNumber":18,"author":{"gitId":"XXJJXJ"},"content":"     * Creates a {@code EventListPanel} with the given {@code ObservableList}.","lastModifiedDate":"2021-09-18"},{"lineNumber":19,"author":{"gitId":"XXJJXJ"},"content":"     */","lastModifiedDate":"2021-09-18"},{"lineNumber":20,"author":{"gitId":"XXJJXJ"},"content":"    public EventListPanel(ObservableList\u003cEvent\u003e eventList) {","lastModifiedDate":"2021-09-18"},{"lineNumber":21,"author":{"gitId":"XXJJXJ"},"content":"        super(FXML);","lastModifiedDate":"2021-09-18"},{"lineNumber":22,"author":{"gitId":"XXJJXJ"},"content":"        eventListView.setItems(eventList);","lastModifiedDate":"2021-09-18"},{"lineNumber":23,"author":{"gitId":"XXJJXJ"},"content":"        eventListView.setCellFactory(listView -\u003e new EventListViewCell());","lastModifiedDate":"2021-09-18"},{"lineNumber":24,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":25,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":26,"author":{"gitId":"XXJJXJ"},"content":"    /**","lastModifiedDate":"2021-09-18"},{"lineNumber":27,"author":{"gitId":"XXJJXJ"},"content":"     * Custom {@code ListCell} that displays the graphics of a {@code Event} using a {@code EventCard}.","lastModifiedDate":"2021-09-18"},{"lineNumber":28,"author":{"gitId":"XXJJXJ"},"content":"     */","lastModifiedDate":"2021-09-18"},{"lineNumber":29,"author":{"gitId":"XXJJXJ"},"content":"    class EventListViewCell extends ListCell\u003cEvent\u003e {","lastModifiedDate":"2021-09-18"},{"lineNumber":30,"author":{"gitId":"XXJJXJ"},"content":"        @Override","lastModifiedDate":"2021-09-18"},{"lineNumber":31,"author":{"gitId":"XXJJXJ"},"content":"        protected void updateItem(Event event, boolean empty) {","lastModifiedDate":"2021-09-18"},{"lineNumber":32,"author":{"gitId":"XXJJXJ"},"content":"            super.updateItem(event, empty);","lastModifiedDate":"2021-09-18"},{"lineNumber":33,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":34,"author":{"gitId":"XXJJXJ"},"content":"            if (empty || event \u003d\u003d null) {","lastModifiedDate":"2021-09-18"},{"lineNumber":35,"author":{"gitId":"XXJJXJ"},"content":"                setGraphic(null);","lastModifiedDate":"2021-09-18"},{"lineNumber":36,"author":{"gitId":"XXJJXJ"},"content":"                setText(null);","lastModifiedDate":"2021-09-18"},{"lineNumber":37,"author":{"gitId":"XXJJXJ"},"content":"            } else {","lastModifiedDate":"2021-09-18"},{"lineNumber":38,"author":{"gitId":"XXJJXJ"},"content":"                setGraphic(new EventCard(event, getIndex() + 1).getRoot());","lastModifiedDate":"2021-09-18"},{"lineNumber":39,"author":{"gitId":"XXJJXJ"},"content":"            }","lastModifiedDate":"2021-09-18"},{"lineNumber":40,"author":{"gitId":"XXJJXJ"},"content":"        }","lastModifiedDate":"2021-09-18"},{"lineNumber":41,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":42,"author":{"gitId":"XXJJXJ"},"content":"}","lastModifiedDate":"2021-09-18"}],"authorContributionMap":{"XXJJXJ":42}},{"path":"src/main/java/seedu/address/ui/HelpWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-12-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2019-08-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2019-08-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.input.Clipboard;","lastModifiedDate":"2019-08-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.input.ClipboardContent;","lastModifiedDate":"2019-08-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Controller for a help page","lastModifiedDate":"2016-08-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class HelpWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-12-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":18,"author":{"gitId":"XXJJXJ"},"content":"    public static final String USERGUIDE_URL \u003d \"https://ay2122s1-cs2103t-t10-2.github.io/tp/UserGuide.html\";","lastModifiedDate":"2021-09-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String HELP_MESSAGE \u003d \"Refer to the user guide: \" + USERGUIDE_URL;","lastModifiedDate":"2019-08-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(HelpWindow.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"HelpWindow.fxml\";","lastModifiedDate":"2016-09-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-12-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private Button copyButton;","lastModifiedDate":"2019-08-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-08-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2019-08-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private Label helpMessage;","lastModifiedDate":"2019-08-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-12-01"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Creates a new HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-12-01"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * @param root Stage to use as the root of the HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-12-01"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public HelpWindow(Stage root) {","lastModifiedDate":"2017-12-01"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        super(FXML, root);","lastModifiedDate":"2017-12-01"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        helpMessage.setText(HELP_MESSAGE);","lastModifiedDate":"2019-08-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-12-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * Creates a new HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-12-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public HelpWindow() {","lastModifiedDate":"2017-12-01"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        this(new Stage());","lastModifiedDate":"2017-12-01"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-01"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-01"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Shows the help window.","lastModifiedDate":"2017-08-16"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * @throws IllegalStateException","lastModifiedDate":"2017-08-16"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * \u003cul\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     *     \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     *         if this method is called on a thread other than the JavaFX Application Thread.","lastModifiedDate":"2017-08-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     *     \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     *     \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     *         if this method is called during animation or layout processing.","lastModifiedDate":"2017-08-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     *     \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     *     \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     *         if this method is called on the primary stage.","lastModifiedDate":"2017-08-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     *     \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     *     \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     *         if {@code dialogStage} is already showing.","lastModifiedDate":"2017-08-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     *     \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * \u003c/ul\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void show() {","lastModifiedDate":"2016-08-18"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        logger.fine(\"Showing help page about the application.\");","lastModifiedDate":"2016-12-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        getRoot().show();","lastModifiedDate":"2018-02-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        getRoot().centerOnScreen();","lastModifiedDate":"2019-08-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-15"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * Returns true if the help window is currently being shown.","lastModifiedDate":"2018-03-15"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-15"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public boolean isShowing() {","lastModifiedDate":"2018-03-15"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        return getRoot().isShowing();","lastModifiedDate":"2018-03-15"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-15"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Hides the help window.","lastModifiedDate":"2018-12-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void hide() {","lastModifiedDate":"2018-12-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        getRoot().hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * Focuses on the help window.","lastModifiedDate":"2018-03-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public void focus() {","lastModifiedDate":"2018-03-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        getRoot().requestFocus();","lastModifiedDate":"2018-03-15"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-15"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-08-19"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2019-08-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * Copies the URL to the user guide to the clipboard.","lastModifiedDate":"2019-08-19"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2019-08-19"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2019-08-19"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    private void copyUrl() {","lastModifiedDate":"2019-08-19"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        final Clipboard clipboard \u003d Clipboard.getSystemClipboard();","lastModifiedDate":"2019-08-19"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        final ClipboardContent url \u003d new ClipboardContent();","lastModifiedDate":"2019-08-19"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        url.putString(USERGUIDE_URL);","lastModifiedDate":"2019-08-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        clipboard.setContent(url);","lastModifiedDate":"2019-08-19"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-08-19"},{"lineNumber":102,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"XXJJXJ":1,"-":101}},{"path":"src/main/java/seedu/address/ui/MainWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-06-16"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.event.ActionEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-08-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.MenuItem;","lastModifiedDate":"2016-08-26"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextInputControl;","lastModifiedDate":"2016-12-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyCombination;","lastModifiedDate":"2016-08-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.scene.layout.StackPane;","lastModifiedDate":"2017-05-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2016-09-28"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2017-06-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.Logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * The Main Window. Provides the basic application layout containing","lastModifiedDate":"2016-08-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * a menu bar and space where other JavaFX elements can be placed.","lastModifiedDate":"2016-08-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class MainWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-11-29"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"MainWindow.fxml\";","lastModifiedDate":"2016-08-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(getClass());","lastModifiedDate":"2018-08-14"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private Stage primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    // Independent Ui parts residing in this Ui container","lastModifiedDate":"2016-08-18"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private PersonListPanel personListPanel;","lastModifiedDate":"2016-08-18"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private ResultDisplay resultDisplay;","lastModifiedDate":"2018-12-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private HelpWindow helpWindow;","lastModifiedDate":"2018-03-15"},{"lineNumber":37,"author":{"gitId":"XXJJXJ"},"content":"    //add-on for Managera","lastModifiedDate":"2021-09-18"},{"lineNumber":38,"author":{"gitId":"XXJJXJ"},"content":"    private EventListPanel eventListPanel;","lastModifiedDate":"2021-09-18"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private StackPane commandBoxPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    private MenuItem helpMenuItem;","lastModifiedDate":"2016-08-18"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    private StackPane personListPanelPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":49,"author":{"gitId":"XXJJXJ"},"content":"    //Add on for Mangera","lastModifiedDate":"2021-09-18"},{"lineNumber":50,"author":{"gitId":"XXJJXJ"},"content":"    @FXML","lastModifiedDate":"2021-09-18"},{"lineNumber":51,"author":{"gitId":"XXJJXJ"},"content":"    private StackPane eventListPanelPlaceholder;","lastModifiedDate":"2021-09-18"},{"lineNumber":52,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    private StackPane resultDisplayPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    private StackPane statusbarPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * Creates a {@code MainWindow} with the given {@code Stage} and {@code Logic}.","lastModifiedDate":"2020-05-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public MainWindow(Stage primaryStage, Logic logic) {","lastModifiedDate":"2018-12-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        super(FXML, primaryStage);","lastModifiedDate":"2017-11-29"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        // Set dependencies","lastModifiedDate":"2016-09-21"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        this.primaryStage \u003d primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        // Configure the UI","lastModifiedDate":"2016-09-21"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        setWindowDefaultSize(logic.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        setAccelerators();","lastModifiedDate":"2016-09-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        helpWindow \u003d new HelpWindow();","lastModifiedDate":"2018-03-15"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public Stage getPrimaryStage() {","lastModifiedDate":"2016-12-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        return primaryStage;","lastModifiedDate":"2016-12-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    private void setAccelerators() {","lastModifiedDate":"2016-09-21"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        setAccelerator(helpMenuItem, KeyCombination.valueOf(\"F1\"));","lastModifiedDate":"2016-12-18"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-18"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * Sets the accelerator of a MenuItem.","lastModifiedDate":"2016-12-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * @param keyCombination the KeyCombination value of the accelerator","lastModifiedDate":"2016-12-18"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-18"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    private void setAccelerator(MenuItem menuItem, KeyCombination keyCombination) {","lastModifiedDate":"2016-12-18"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        menuItem.setAccelerator(keyCombination);","lastModifiedDate":"2016-12-18"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-12-18"},{"lineNumber":93,"author":{"gitId":"-"},"content":"         * TODO: the code below can be removed once the bug reported here","lastModifiedDate":"2016-12-18"},{"lineNumber":94,"author":{"gitId":"-"},"content":"         * https://bugs.openjdk.java.net/browse/JDK-8131666","lastModifiedDate":"2016-12-18"},{"lineNumber":95,"author":{"gitId":"-"},"content":"         * is fixed in later version of SDK.","lastModifiedDate":"2016-12-18"},{"lineNumber":96,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":97,"author":{"gitId":"-"},"content":"         * According to the bug report, TextInputControl (TextField, TextArea) will","lastModifiedDate":"2016-12-18"},{"lineNumber":98,"author":{"gitId":"-"},"content":"         * consume function-key events. Because CommandBox contains a TextField, and","lastModifiedDate":"2016-12-18"},{"lineNumber":99,"author":{"gitId":"-"},"content":"         * ResultDisplay contains a TextArea, thus some accelerators (e.g F1) will","lastModifiedDate":"2016-12-18"},{"lineNumber":100,"author":{"gitId":"-"},"content":"         * not work when the focus is in them because the key event is consumed by","lastModifiedDate":"2016-12-18"},{"lineNumber":101,"author":{"gitId":"-"},"content":"         * the TextInputControl(s).","lastModifiedDate":"2016-12-18"},{"lineNumber":102,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":103,"author":{"gitId":"-"},"content":"         * For now, we add following event filter to capture such key events and open","lastModifiedDate":"2016-12-18"},{"lineNumber":104,"author":{"gitId":"-"},"content":"         * help window purposely so to support accelerators even when focus is","lastModifiedDate":"2016-12-18"},{"lineNumber":105,"author":{"gitId":"-"},"content":"         * in CommandBox or ResultDisplay.","lastModifiedDate":"2016-12-18"},{"lineNumber":106,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-18"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        getRoot().addEventFilter(KeyEvent.KEY_PRESSED, event -\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":108,"author":{"gitId":"-"},"content":"            if (event.getTarget() instanceof TextInputControl \u0026\u0026 keyCombination.match(event)) {","lastModifiedDate":"2016-12-18"},{"lineNumber":109,"author":{"gitId":"-"},"content":"                menuItem.getOnAction().handle(new ActionEvent());","lastModifiedDate":"2016-12-18"},{"lineNumber":110,"author":{"gitId":"-"},"content":"                event.consume();","lastModifiedDate":"2016-12-18"},{"lineNumber":111,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-12-18"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        });","lastModifiedDate":"2016-12-18"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":116,"author":{"gitId":"-"},"content":"     * Fills up all the placeholders of this window.","lastModifiedDate":"2017-08-16"},{"lineNumber":117,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    void fillInnerParts() {","lastModifiedDate":"2016-09-21"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        personListPanel \u003d new PersonListPanel(logic.getFilteredPersonList());","lastModifiedDate":"2019-01-25"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        personListPanelPlaceholder.getChildren().add(personListPanel.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":122,"author":{"gitId":"XXJJXJ"},"content":"        //Add-on for Managera","lastModifiedDate":"2021-09-18"},{"lineNumber":123,"author":{"gitId":"XXJJXJ"},"content":"        eventListPanel \u003d new EventListPanel(logic.getEventList());","lastModifiedDate":"2021-09-18"},{"lineNumber":124,"author":{"gitId":"XXJJXJ"},"content":"        eventListPanelPlaceholder.getChildren().add(eventListPanel.getRoot());","lastModifiedDate":"2021-09-18"},{"lineNumber":125,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        resultDisplay \u003d new ResultDisplay();","lastModifiedDate":"2018-12-09"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        resultDisplayPlaceholder.getChildren().add(resultDisplay.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        StatusBarFooter statusBarFooter \u003d new StatusBarFooter(logic.getAddressBookFilePath());","lastModifiedDate":"2019-01-25"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        statusbarPlaceholder.getChildren().add(statusBarFooter.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        CommandBox commandBox \u003d new CommandBox(this::executeCommand);","lastModifiedDate":"2019-01-25"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        commandBoxPlaceholder.getChildren().add(commandBox.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":137,"author":{"gitId":"-"},"content":"     * Sets the default size based on {@code guiSettings}.","lastModifiedDate":"2018-11-27"},{"lineNumber":138,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    private void setWindowDefaultSize(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        primaryStage.setHeight(guiSettings.getWindowHeight());","lastModifiedDate":"2018-11-27"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        primaryStage.setWidth(guiSettings.getWindowWidth());","lastModifiedDate":"2018-11-27"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        if (guiSettings.getWindowCoordinates() !\u003d null) {","lastModifiedDate":"2018-11-27"},{"lineNumber":143,"author":{"gitId":"-"},"content":"            primaryStage.setX(guiSettings.getWindowCoordinates().getX());","lastModifiedDate":"2018-11-27"},{"lineNumber":144,"author":{"gitId":"-"},"content":"            primaryStage.setY(guiSettings.getWindowCoordinates().getY());","lastModifiedDate":"2018-11-27"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-18"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":149,"author":{"gitId":"-"},"content":"     * Opens the help window or focuses on it if it\u0027s already opened.","lastModifiedDate":"2018-03-15"},{"lineNumber":150,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    public void handleHelp() {","lastModifiedDate":"2016-08-31"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        if (!helpWindow.isShowing()) {","lastModifiedDate":"2018-03-15"},{"lineNumber":154,"author":{"gitId":"-"},"content":"            helpWindow.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        } else {","lastModifiedDate":"2018-03-15"},{"lineNumber":156,"author":{"gitId":"-"},"content":"            helpWindow.focus();","lastModifiedDate":"2018-03-15"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-03-15"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    void show() {","lastModifiedDate":"2016-10-15"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        primaryStage.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":165,"author":{"gitId":"-"},"content":"     * Closes the application.","lastModifiedDate":"2016-08-18"},{"lineNumber":166,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    private void handleExit() {","lastModifiedDate":"2016-08-18"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(primaryStage.getWidth(), primaryStage.getHeight(),","lastModifiedDate":"2018-12-08"},{"lineNumber":170,"author":{"gitId":"-"},"content":"                (int) primaryStage.getX(), (int) primaryStage.getY());","lastModifiedDate":"2018-12-08"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        logic.setGuiSettings(guiSettings);","lastModifiedDate":"2018-12-08"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        helpWindow.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        primaryStage.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-25"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    public PersonListPanel getPersonListPanel() {","lastModifiedDate":"2016-08-25"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        return personListPanel;","lastModifiedDate":"2018-08-14"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-25"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":181,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2018-12-09"},{"lineNumber":182,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-09"},{"lineNumber":183,"author":{"gitId":"-"},"content":"     * @see seedu.address.logic.Logic#execute(String)","lastModifiedDate":"2018-12-09"},{"lineNumber":184,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    private CommandResult executeCommand(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2018-12-09"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":187,"author":{"gitId":"-"},"content":"            CommandResult commandResult \u003d logic.execute(commandText);","lastModifiedDate":"2018-12-09"},{"lineNumber":188,"author":{"gitId":"-"},"content":"            logger.info(\"Result: \" + commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":189,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":191,"author":{"gitId":"-"},"content":"            if (commandResult.isShowHelp()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":192,"author":{"gitId":"-"},"content":"                handleHelp();","lastModifiedDate":"2018-12-09"},{"lineNumber":193,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":195,"author":{"gitId":"-"},"content":"            if (commandResult.isExit()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":196,"author":{"gitId":"-"},"content":"                handleExit();","lastModifiedDate":"2018-12-09"},{"lineNumber":197,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":198,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":199,"author":{"gitId":"-"},"content":"            return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":200,"author":{"gitId":"-"},"content":"        } catch (CommandException | ParseException e) {","lastModifiedDate":"2018-12-09"},{"lineNumber":201,"author":{"gitId":"-"},"content":"            logger.info(\"Invalid command: \" + commandText);","lastModifiedDate":"2018-12-09"},{"lineNumber":202,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(e.getMessage());","lastModifiedDate":"2018-12-09"},{"lineNumber":203,"author":{"gitId":"-"},"content":"            throw e;","lastModifiedDate":"2018-12-09"},{"lineNumber":204,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":205,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":206,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"XXJJXJ":10,"-":196}},{"path":"src/main/java/seedu/address/ui/UiManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.application.Platform;","lastModifiedDate":"2016-08-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Alert;","lastModifiedDate":"2016-08-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Alert.AlertType;","lastModifiedDate":"2016-08-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2016-08-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.MainApp;","lastModifiedDate":"2016-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.Logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * The manager of the UI component.","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class UiManager implements Ui {","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String ALERT_DIALOG_PANE_FIELD_ID \u003d \"alertDialogPane\";","lastModifiedDate":"2017-04-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(UiManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":23,"author":{"gitId":"XXJJXJ"},"content":"    private static final String ICON_APPLICATION \u003d \"/images/ManageraIcon.png\";","lastModifiedDate":"2021-09-17"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private MainWindow mainWindow;","lastModifiedDate":"2016-08-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Creates a {@code UiManager} with the given {@code Logic}.","lastModifiedDate":"2020-05-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public UiManager(Logic logic) {","lastModifiedDate":"2018-12-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        super();","lastModifiedDate":"2016-08-18"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void start(Stage primaryStage) {","lastModifiedDate":"2016-09-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        logger.info(\"Starting UI...\");","lastModifiedDate":"2016-09-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        //Set the application icon.","lastModifiedDate":"2016-08-18"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        primaryStage.getIcons().add(getImage(ICON_APPLICATION));","lastModifiedDate":"2016-08-18"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-08-18"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            mainWindow \u003d new MainWindow(primaryStage, logic);","lastModifiedDate":"2018-12-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            mainWindow.show(); //This should be called before creating other UI parts","lastModifiedDate":"2016-08-18"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            mainWindow.fillInnerParts();","lastModifiedDate":"2016-08-18"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        } catch (Throwable e) {","lastModifiedDate":"2016-08-18"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            logger.severe(StringUtil.getDetails(e));","lastModifiedDate":"2016-09-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            showFatalErrorDialogAndShutdown(\"Fatal error during initializing\", e);","lastModifiedDate":"2016-08-18"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-18"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    private Image getImage(String imagePath) {","lastModifiedDate":"2016-08-18"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        return new Image(MainApp.class.getResourceAsStream(imagePath));","lastModifiedDate":"2016-08-18"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    void showAlertDialogAndWait(Alert.AlertType type, String title, String headerText, String contentText) {","lastModifiedDate":"2016-09-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        showAlertDialogAndWait(mainWindow.getPrimaryStage(), type, title, headerText, contentText);","lastModifiedDate":"2016-08-18"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * Shows an alert dialog on {@code owner} with the given parameters.","lastModifiedDate":"2017-08-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * This method only returns after the user has closed the alert dialog.","lastModifiedDate":"2017-08-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    private static void showAlertDialogAndWait(Stage owner, AlertType type, String title, String headerText,","lastModifiedDate":"2016-09-21"},{"lineNumber":67,"author":{"gitId":"-"},"content":"                                               String contentText) {","lastModifiedDate":"2016-08-18"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        final Alert alert \u003d new Alert(type);","lastModifiedDate":"2016-08-18"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        alert.getDialogPane().getStylesheets().add(\"view/DarkTheme.css\");","lastModifiedDate":"2016-08-20"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        alert.initOwner(owner);","lastModifiedDate":"2016-08-18"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        alert.setTitle(title);","lastModifiedDate":"2016-08-18"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        alert.setHeaderText(headerText);","lastModifiedDate":"2016-08-18"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        alert.setContentText(contentText);","lastModifiedDate":"2016-08-18"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        alert.getDialogPane().setId(ALERT_DIALOG_PANE_FIELD_ID);","lastModifiedDate":"2016-10-12"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        alert.showAndWait();","lastModifiedDate":"2016-08-18"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Shows an error alert dialog with {@code title} and error message, {@code e},","lastModifiedDate":"2017-08-16"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * and exits the application after the user has closed the alert dialog.","lastModifiedDate":"2017-08-16"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    private void showFatalErrorDialogAndShutdown(String title, Throwable e) {","lastModifiedDate":"2016-09-21"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        logger.severe(title + \" \" + e.getMessage() + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-21"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        showAlertDialogAndWait(Alert.AlertType.ERROR, title, e.getMessage(), e.toString());","lastModifiedDate":"2016-08-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        Platform.exit();","lastModifiedDate":"2016-08-18"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        System.exit(1);","lastModifiedDate":"2016-08-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-25"},{"lineNumber":89,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"XXJJXJ":1,"-":88}},{"path":"src/main/resources/view/EventListCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"XXJJXJ"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-09-18"},{"lineNumber":2,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":3,"author":{"gitId":"XXJJXJ"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2021-09-18"},{"lineNumber":4,"author":{"gitId":"XXJJXJ"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2021-09-18"},{"lineNumber":5,"author":{"gitId":"XXJJXJ"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2021-09-18"},{"lineNumber":6,"author":{"gitId":"XXJJXJ"},"content":"\u003c?import javafx.scene.layout.FlowPane?\u003e","lastModifiedDate":"2021-09-18"},{"lineNumber":7,"author":{"gitId":"XXJJXJ"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2021-09-18"},{"lineNumber":8,"author":{"gitId":"XXJJXJ"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2021-09-18"},{"lineNumber":9,"author":{"gitId":"XXJJXJ"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2021-09-18"},{"lineNumber":10,"author":{"gitId":"XXJJXJ"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2021-09-18"},{"lineNumber":11,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":12,"author":{"gitId":"XXJJXJ"},"content":"\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-09-18"},{"lineNumber":13,"author":{"gitId":"XXJJXJ"},"content":"    \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2021-09-18"},{"lineNumber":14,"author":{"gitId":"XXJJXJ"},"content":"        \u003ccolumnConstraints\u003e","lastModifiedDate":"2021-09-18"},{"lineNumber":15,"author":{"gitId":"XXJJXJ"},"content":"            \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\" /\u003e","lastModifiedDate":"2021-09-18"},{"lineNumber":16,"author":{"gitId":"XXJJXJ"},"content":"        \u003c/columnConstraints\u003e","lastModifiedDate":"2021-09-18"},{"lineNumber":17,"author":{"gitId":"XXJJXJ"},"content":"        \u003cVBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"105\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2021-09-18"},{"lineNumber":18,"author":{"gitId":"XXJJXJ"},"content":"            \u003cpadding\u003e","lastModifiedDate":"2021-09-18"},{"lineNumber":19,"author":{"gitId":"XXJJXJ"},"content":"                \u003cInsets top\u003d\"5\" right\u003d\"5\" bottom\u003d\"5\" left\u003d\"15\" /\u003e","lastModifiedDate":"2021-09-18"},{"lineNumber":20,"author":{"gitId":"XXJJXJ"},"content":"            \u003c/padding\u003e","lastModifiedDate":"2021-09-18"},{"lineNumber":21,"author":{"gitId":"XXJJXJ"},"content":"            \u003cHBox spacing\u003d\"5\" alignment\u003d\"CENTER_LEFT\"\u003e","lastModifiedDate":"2021-09-18"},{"lineNumber":22,"author":{"gitId":"XXJJXJ"},"content":"                \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"cell_big_label\"\u003e","lastModifiedDate":"2021-09-18"},{"lineNumber":23,"author":{"gitId":"XXJJXJ"},"content":"                    \u003cminWidth\u003e","lastModifiedDate":"2021-09-18"},{"lineNumber":24,"author":{"gitId":"XXJJXJ"},"content":"                        \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2021-09-18"},{"lineNumber":25,"author":{"gitId":"XXJJXJ"},"content":"                        \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2021-09-18"},{"lineNumber":26,"author":{"gitId":"XXJJXJ"},"content":"                    \u003c/minWidth\u003e","lastModifiedDate":"2021-09-18"},{"lineNumber":27,"author":{"gitId":"XXJJXJ"},"content":"                \u003c/Label\u003e","lastModifiedDate":"2021-09-18"},{"lineNumber":28,"author":{"gitId":"XXJJXJ"},"content":"                \u003cLabel fx:id\u003d\"name\" text\u003d\"\\$first\" styleClass\u003d\"cell_big_label\" /\u003e","lastModifiedDate":"2021-09-18"},{"lineNumber":29,"author":{"gitId":"XXJJXJ"},"content":"            \u003c/HBox\u003e","lastModifiedDate":"2021-09-18"},{"lineNumber":30,"author":{"gitId":"XXJJXJ"},"content":"            \u003cLabel fx:id\u003d\"date\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$date\" /\u003e","lastModifiedDate":"2021-09-18"},{"lineNumber":31,"author":{"gitId":"XXJJXJ"},"content":"            \u003cLabel fx:id\u003d\"time\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$time\" /\u003e","lastModifiedDate":"2021-09-18"},{"lineNumber":32,"author":{"gitId":"XXJJXJ"},"content":"            \u003cLabel fx:id\u003d\"isDone\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$isDone\" /\u003e","lastModifiedDate":"2021-09-18"},{"lineNumber":33,"author":{"gitId":"XXJJXJ"},"content":"            \u003cFlowPane fx:id\u003d\"participants\" /\u003e","lastModifiedDate":"2021-09-18"},{"lineNumber":34,"author":{"gitId":"XXJJXJ"},"content":"        \u003c/VBox\u003e","lastModifiedDate":"2021-09-18"},{"lineNumber":35,"author":{"gitId":"XXJJXJ"},"content":"    \u003c/GridPane\u003e","lastModifiedDate":"2021-09-18"},{"lineNumber":36,"author":{"gitId":"XXJJXJ"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2021-09-18"}],"authorContributionMap":{"XXJJXJ":36}},{"path":"src/main/resources/view/EventListPanel.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"XXJJXJ"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-09-18"},{"lineNumber":2,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":3,"author":{"gitId":"XXJJXJ"},"content":"\u003c?import javafx.scene.control.ListView?\u003e","lastModifiedDate":"2021-09-18"},{"lineNumber":4,"author":{"gitId":"XXJJXJ"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2021-09-18"},{"lineNumber":5,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":6,"author":{"gitId":"XXJJXJ"},"content":"\u003cVBox xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-09-18"},{"lineNumber":7,"author":{"gitId":"XXJJXJ"},"content":"    \u003cListView fx:id\u003d\"eventListView\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2021-09-18"},{"lineNumber":8,"author":{"gitId":"XXJJXJ"},"content":"\u003c/VBox\u003e","lastModifiedDate":"2021-09-18"}],"authorContributionMap":{"XXJJXJ":8}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import java.net.URL?\u003e","lastModifiedDate":"2016-08-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.Scene?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Menu?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuBar?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuItem?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.SplitPane?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.image.Image?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"\u003cfx:root type\u003d\"javafx.stage.Stage\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"","lastModifiedDate":"2017-11-29"},{"lineNumber":15,"author":{"gitId":"XXJJXJ"},"content":"         title\u003d\"Managera\" minWidth\u003d\"450\" minHeight\u003d\"600\" onCloseRequest\u003d\"#handleExit\"\u003e","lastModifiedDate":"2021-09-17"},{"lineNumber":16,"author":{"gitId":"-"},"content":"  \u003cicons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":17,"author":{"gitId":"XXJJXJ"},"content":"    \u003cImage url\u003d\"@/images/ManageraIcon.png\" /\u003e","lastModifiedDate":"2021-09-17"},{"lineNumber":18,"author":{"gitId":"-"},"content":"  \u003c/icons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"  \u003cscene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    \u003cScene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"      \u003cstylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@Fonts.css\"/\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@DarkTheme.css\" /\u003e","lastModifiedDate":"2016-08-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@Extensions.css\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"      \u003c/stylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"      \u003cVBox\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        \u003cMenuBar fx:id\u003d\"menuBar\" VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2017-06-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"          \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"File\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            \u003cMenuItem mnemonicParsing\u003d\"false\" onAction\u003d\"#handleExit\" text\u003d\"Exit\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"          \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"          \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"Help\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            \u003cMenuItem fx:id\u003d\"helpMenuItem\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleHelp\" text\u003d\"Help\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"          \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        \u003c/MenuBar\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        \u003cStackPane VBox.vgrow\u003d\"NEVER\" fx:id\u003d\"commandBoxPlaceholder\" styleClass\u003d\"pane-with-border\"\u003e","lastModifiedDate":"2017-05-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            \u003cInsets top\u003d\"5\" right\u003d\"10\" bottom\u003d\"5\" left\u003d\"10\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        \u003c/StackPane\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        \u003cStackPane VBox.vgrow\u003d\"NEVER\" fx:id\u003d\"resultDisplayPlaceholder\" styleClass\u003d\"pane-with-border\"","lastModifiedDate":"2017-05-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"                   minHeight\u003d\"100\" prefHeight\u003d\"100\" maxHeight\u003d\"100\"\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            \u003cInsets top\u003d\"5\" right\u003d\"10\" bottom\u003d\"5\" left\u003d\"10\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        \u003c/StackPane\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        \u003cVBox fx:id\u003d\"personList\" styleClass\u003d\"pane-with-border\" minWidth\u003d\"340\" prefWidth\u003d\"340\" VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2019-01-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            \u003cInsets top\u003d\"10\" right\u003d\"10\" bottom\u003d\"10\" left\u003d\"10\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":54,"author":{"gitId":"-"},"content":"          \u003cStackPane fx:id\u003d\"personListPanelPlaceholder\" VBox.vgrow\u003d\"ALWAYS\"/\u003e","lastModifiedDate":"2017-06-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        \u003c/VBox\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":56,"author":{"gitId":"XXJJXJ"},"content":"        \u003cVBox fx:id\u003d\"eventList\" styleClass\u003d\"pane-with-border\" minWidth\u003d\"340\" prefWidth\u003d\"340\" VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2021-09-18"},{"lineNumber":57,"author":{"gitId":"XXJJXJ"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2021-09-18"},{"lineNumber":58,"author":{"gitId":"XXJJXJ"},"content":"            \u003cInsets top\u003d\"10\" right\u003d\"10\" bottom\u003d\"10\" left\u003d\"10\" /\u003e","lastModifiedDate":"2021-09-18"},{"lineNumber":59,"author":{"gitId":"XXJJXJ"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2021-09-18"},{"lineNumber":60,"author":{"gitId":"XXJJXJ"},"content":"          \u003cStackPane fx:id\u003d\"eventListPanelPlaceholder\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2021-09-18"},{"lineNumber":61,"author":{"gitId":"XXJJXJ"},"content":"        \u003c/VBox\u003e","lastModifiedDate":"2021-09-18"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        \u003cStackPane fx:id\u003d\"statusbarPlaceholder\" VBox.vgrow\u003d\"NEVER\" /\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":64,"author":{"gitId":"-"},"content":"      \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    \u003c/Scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":66,"author":{"gitId":"-"},"content":"  \u003c/scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":67,"author":{"gitId":"-"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2017-11-29"}],"authorContributionMap":{"XXJJXJ":8,"-":59}},{"path":"src/test/data/JsonSerializableAddressBookTest/duplicateEventAddressBook.json","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"XXJJXJ"},"content":"{","lastModifiedDate":"2021-09-18"},{"lineNumber":2,"author":{"gitId":"XXJJXJ"},"content":"  \"persons\" : [ ],","lastModifiedDate":"2021-09-18"},{"lineNumber":3,"author":{"gitId":"XXJJXJ"},"content":"  \"events\" : [","lastModifiedDate":"2021-09-18"},{"lineNumber":4,"author":{"gitId":"XXJJXJ"},"content":"    {","lastModifiedDate":"2021-09-18"},{"lineNumber":5,"author":{"gitId":"XXJJXJ"},"content":"      \"name\" : \"Sleep\",","lastModifiedDate":"2021-09-18"},{"lineNumber":6,"author":{"gitId":"XXJJXJ"},"content":"      \"isDone\" : \"Uncompleted\",","lastModifiedDate":"2021-09-18"},{"lineNumber":7,"author":{"gitId":"XXJJXJ"},"content":"      \"date\" : \"2021-09-18\",","lastModifiedDate":"2021-09-18"},{"lineNumber":8,"author":{"gitId":"XXJJXJ"},"content":"      \"time\" : \"1000\",","lastModifiedDate":"2021-09-18"},{"lineNumber":9,"author":{"gitId":"XXJJXJ"},"content":"      \"participants\" : [ ]","lastModifiedDate":"2021-09-18"},{"lineNumber":10,"author":{"gitId":"XXJJXJ"},"content":"    }, {","lastModifiedDate":"2021-09-18"},{"lineNumber":11,"author":{"gitId":"XXJJXJ"},"content":"      \"name\" : \"Sleep\",","lastModifiedDate":"2021-09-18"},{"lineNumber":12,"author":{"gitId":"XXJJXJ"},"content":"      \"isDone\" : \"Uncompleted\",","lastModifiedDate":"2021-09-18"},{"lineNumber":13,"author":{"gitId":"XXJJXJ"},"content":"      \"date\" : \"2021-09-18\",","lastModifiedDate":"2021-09-18"},{"lineNumber":14,"author":{"gitId":"XXJJXJ"},"content":"      \"time\" : \"1000\",","lastModifiedDate":"2021-09-18"},{"lineNumber":15,"author":{"gitId":"XXJJXJ"},"content":"      \"participants\" : [ ]","lastModifiedDate":"2021-09-18"},{"lineNumber":16,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":17,"author":{"gitId":"XXJJXJ"},"content":"  ]","lastModifiedDate":"2021-09-18"},{"lineNumber":18,"author":{"gitId":"XXJJXJ"},"content":"}","lastModifiedDate":"2021-09-18"}],"authorContributionMap":{"XXJJXJ":18}},{"path":"src/test/data/JsonSerializableAddressBookTest/duplicatePersonAddressBook.json","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"{","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  \"persons\": [ {","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    \"name\": \"Alice Pauline\",","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    \"phone\": \"94351253\",","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    \"email\": \"alice@example.com\",","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    \"address\": \"123, Jurong West Ave 6, #08-111\",","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    \"tagged\": [ \"friends\" ]","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"  }, {","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    \"name\": \"Alice Pauline\",","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    \"phone\": \"94351253\",","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    \"email\": \"pauline@example.com\",","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    \"address\": \"4th street\"","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"XXJJXJ"},"content":"  } ],","lastModifiedDate":"2021-09-18"},{"lineNumber":14,"author":{"gitId":"XXJJXJ"},"content":"  \"events\" : []","lastModifiedDate":"2021-09-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"XXJJXJ":2,"-":13}},{"path":"src/test/data/JsonSerializableAddressBookTest/invalidEventAddressBook.json","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"XXJJXJ"},"content":"{","lastModifiedDate":"2021-09-18"},{"lineNumber":2,"author":{"gitId":"XXJJXJ"},"content":"  \"persons\": [ ],","lastModifiedDate":"2021-09-18"},{"lineNumber":3,"author":{"gitId":"XXJJXJ"},"content":"  \"events\" : [","lastModifiedDate":"2021-09-18"},{"lineNumber":4,"author":{"gitId":"XXJJXJ"},"content":"     {","lastModifiedDate":"2021-09-18"},{"lineNumber":5,"author":{"gitId":"XXJJXJ"},"content":"       \"name\" : \"^^^asda\",","lastModifiedDate":"2021-09-18"},{"lineNumber":6,"author":{"gitId":"XXJJXJ"},"content":"       \"isDone\" : \"Uncompleted\",","lastModifiedDate":"2021-09-18"},{"lineNumber":7,"author":{"gitId":"XXJJXJ"},"content":"       \"date\" : \"2021-09-18\",","lastModifiedDate":"2021-09-18"},{"lineNumber":8,"author":{"gitId":"XXJJXJ"},"content":"       \"time\" : \"1000\",","lastModifiedDate":"2021-09-18"},{"lineNumber":9,"author":{"gitId":"XXJJXJ"},"content":"       \"participants\" : [ ]","lastModifiedDate":"2021-09-18"},{"lineNumber":10,"author":{"gitId":"XXJJXJ"},"content":"     }","lastModifiedDate":"2021-09-18"},{"lineNumber":11,"author":{"gitId":"XXJJXJ"},"content":"   ]","lastModifiedDate":"2021-09-18"},{"lineNumber":12,"author":{"gitId":"XXJJXJ"},"content":"}","lastModifiedDate":"2021-09-18"}],"authorContributionMap":{"XXJJXJ":12}},{"path":"src/test/data/JsonSerializableAddressBookTest/invalidPersonAddressBook.json","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"{","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  \"persons\": [ {","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    \"name\": \"Hans Muster\",","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    \"phone\": \"9482424\",","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    \"email\": \"invalid@email!3e\",","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    \"address\": \"4th street\"","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"XXJJXJ"},"content":"  } ],","lastModifiedDate":"2021-09-18"},{"lineNumber":8,"author":{"gitId":"XXJJXJ"},"content":"  \"events\" : []","lastModifiedDate":"2021-09-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"XXJJXJ":2,"-":7}},{"path":"src/test/data/JsonSerializableAddressBookTest/typicalEventsAddressBook.json","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"XXJJXJ"},"content":"{","lastModifiedDate":"2021-09-18"},{"lineNumber":2,"author":{"gitId":"XXJJXJ"},"content":"  \"_comment\": \"AddressBook save file which contains the same Event values as in TypicalEvents#getTypicalAddressBook()\",","lastModifiedDate":"2021-09-18"},{"lineNumber":3,"author":{"gitId":"XXJJXJ"},"content":"  \"persons\" : [ ],","lastModifiedDate":"2021-09-18"},{"lineNumber":4,"author":{"gitId":"XXJJXJ"},"content":"  \"events\" : [","lastModifiedDate":"2021-09-18"},{"lineNumber":5,"author":{"gitId":"XXJJXJ"},"content":"    {","lastModifiedDate":"2021-09-18"},{"lineNumber":6,"author":{"gitId":"XXJJXJ"},"content":"      \"name\" : \"Sleep\",","lastModifiedDate":"2021-09-18"},{"lineNumber":7,"author":{"gitId":"XXJJXJ"},"content":"      \"isDone\" : \"Uncompleted\",","lastModifiedDate":"2021-09-18"},{"lineNumber":8,"author":{"gitId":"XXJJXJ"},"content":"      \"date\" : \"2021-09-18\",","lastModifiedDate":"2021-09-18"},{"lineNumber":9,"author":{"gitId":"XXJJXJ"},"content":"      \"time\" : \"1000\",","lastModifiedDate":"2021-09-18"},{"lineNumber":10,"author":{"gitId":"XXJJXJ"},"content":"      \"participants\" : [ ]","lastModifiedDate":"2021-09-18"},{"lineNumber":11,"author":{"gitId":"XXJJXJ"},"content":"    }, {","lastModifiedDate":"2021-09-18"},{"lineNumber":12,"author":{"gitId":"XXJJXJ"},"content":"      \"name\" : \"Sleep2\",","lastModifiedDate":"2021-09-18"},{"lineNumber":13,"author":{"gitId":"XXJJXJ"},"content":"      \"isDone\" : \"Uncompleted\",","lastModifiedDate":"2021-09-18"},{"lineNumber":14,"author":{"gitId":"XXJJXJ"},"content":"      \"date\" : \"2021-09-18\",","lastModifiedDate":"2021-09-18"},{"lineNumber":15,"author":{"gitId":"XXJJXJ"},"content":"      \"time\" : \"1001\",","lastModifiedDate":"2021-09-18"},{"lineNumber":16,"author":{"gitId":"XXJJXJ"},"content":"      \"participants\" : [ ]","lastModifiedDate":"2021-09-18"},{"lineNumber":17,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":18,"author":{"gitId":"XXJJXJ"},"content":"  ]","lastModifiedDate":"2021-09-18"},{"lineNumber":19,"author":{"gitId":"XXJJXJ"},"content":"}","lastModifiedDate":"2021-09-18"}],"authorContributionMap":{"XXJJXJ":19}},{"path":"src/test/data/JsonSerializableAddressBookTest/typicalPersonsAddressBook.json","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"{","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  \"_comment\": \"AddressBook save file which contains the same Person values as in TypicalPersons#getTypicalAddressBook()\",","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"  \"persons\" : [ {","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    \"name\" : \"Alice Pauline\",","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    \"phone\" : \"94351253\",","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    \"email\" : \"alice@example.com\",","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    \"address\" : \"123, Jurong West Ave 6, #08-111\",","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    \"tagged\" : [ \"friends\" ]","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"  }, {","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    \"name\" : \"Benson Meier\",","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    \"phone\" : \"98765432\",","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    \"email\" : \"johnd@example.com\",","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    \"address\" : \"311, Clementi Ave 2, #02-25\",","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    \"tagged\" : [ \"owesMoney\", \"friends\" ]","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"  }, {","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    \"name\" : \"Carl Kurz\",","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    \"phone\" : \"95352563\",","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    \"email\" : \"heinz@example.com\",","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    \"address\" : \"wall street\",","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    \"tagged\" : [ ]","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"  }, {","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    \"name\" : \"Daniel Meier\",","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    \"phone\" : \"87652533\",","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    \"email\" : \"cornelia@example.com\",","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    \"address\" : \"10th street\",","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    \"tagged\" : [ \"friends\" ]","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"  }, {","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    \"name\" : \"Elle Meyer\",","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    \"phone\" : \"9482224\",","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    \"email\" : \"werner@example.com\",","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    \"address\" : \"michegan ave\",","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    \"tagged\" : [ ]","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"  }, {","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    \"name\" : \"Fiona Kunz\",","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    \"phone\" : \"9482427\",","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    \"email\" : \"lydia@example.com\",","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    \"address\" : \"little tokyo\",","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    \"tagged\" : [ ]","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"  }, {","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    \"name\" : \"George Best\",","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    \"phone\" : \"9482442\",","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    \"email\" : \"anna@example.com\",","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    \"address\" : \"4th street\",","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    \"tagged\" : [ ]","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"XXJJXJ"},"content":"  } ],","lastModifiedDate":"2021-09-18"},{"lineNumber":46,"author":{"gitId":"XXJJXJ"},"content":"  \"events\": []","lastModifiedDate":"2021-09-18"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"XXJJXJ":2,"-":45}},{"path":"src/test/java/seedu/address/logic/LogicManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX;","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-12-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2018-12-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2017-01-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2017-06-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2016-09-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2016-09-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-12-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-05-31"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonAddressBookStorage;","lastModifiedDate":"2018-12-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonUserPrefsStorage;","lastModifiedDate":"2018-12-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.storage.StorageManager;","lastModifiedDate":"2018-12-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2018-12-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"public class LogicManagerTest {","lastModifiedDate":"2016-09-22"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private static final IOException DUMMY_IO_EXCEPTION \u003d new IOException(\"dummy exception\");","lastModifiedDate":"2018-12-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public Path temporaryFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2017-06-20"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2018-12-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2019-04-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d","lastModifiedDate":"2019-04-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"                new JsonAddressBookStorage(temporaryFolder.resolve(\"addressBook.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(temporaryFolder.resolve(\"userPrefs.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        StorageManager storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2018-12-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-20"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void execute_invalidCommandFormat_throwsParseException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        String invalidCommand \u003d \"uicfhmowqewca\";","lastModifiedDate":"2017-06-20"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertParseException(invalidCommand, MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-06-20"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-14"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void execute_commandExecutionError_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        String deleteCommand \u003d \"delete 9\";","lastModifiedDate":"2017-06-14"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertCommandException(deleteCommand, MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2017-06-14"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public void execute_validCommand_success() throws Exception {","lastModifiedDate":"2019-03-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        String listCommand \u003d ListCommand.COMMAND_WORD;","lastModifiedDate":"2017-06-19"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertCommandSuccess(listCommand, ListCommand.MESSAGE_SUCCESS, model);","lastModifiedDate":"2017-06-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public void execute_storageThrowsIoException_throwsCommandException() {","lastModifiedDate":"2019-04-25"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        // Setup LogicManager with JsonAddressBookIoExceptionThrowingStub","lastModifiedDate":"2018-12-09"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d","lastModifiedDate":"2018-12-09"},{"lineNumber":75,"author":{"gitId":"-"},"content":"                new JsonAddressBookIoExceptionThrowingStub(temporaryFolder.resolve(\"ioExceptionAddressBook.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d","lastModifiedDate":"2019-04-25"},{"lineNumber":77,"author":{"gitId":"-"},"content":"                new JsonUserPrefsStorage(temporaryFolder.resolve(\"ioExceptionUserPrefs.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        StorageManager storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2018-12-09"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        // Execute add command","lastModifiedDate":"2018-12-09"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        String addCommand \u003d AddCommand.COMMAND_WORD + NAME_DESC_AMY + PHONE_DESC_AMY + EMAIL_DESC_AMY","lastModifiedDate":"2018-12-09"},{"lineNumber":83,"author":{"gitId":"-"},"content":"                + ADDRESS_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        Person expectedPerson \u003d new PersonBuilder(AMY).withTags().build();","lastModifiedDate":"2018-12-09"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        ModelManager expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-12-09"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        expectedModel.addPerson(expectedPerson);","lastModifiedDate":"2018-12-09"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d LogicManager.FILE_OPS_ERROR_MESSAGE + DUMMY_IO_EXCEPTION;","lastModifiedDate":"2018-12-09"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertCommandFailure(addCommand, CommandException.class, expectedMessage, expectedModel);","lastModifiedDate":"2019-03-14"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public void getFilteredPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e logic.getFilteredPersonList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":94,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":95,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":96,"author":{"gitId":"XXJJXJ"},"content":"    @Test","lastModifiedDate":"2021-09-18"},{"lineNumber":97,"author":{"gitId":"XXJJXJ"},"content":"    public void getEventList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2021-09-18"},{"lineNumber":98,"author":{"gitId":"XXJJXJ"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e logic.getEventList().remove(0));","lastModifiedDate":"2021-09-18"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * - no exceptions are thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * - the feedback message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    private void assertCommandSuccess(String inputCommand, String expectedMessage,","lastModifiedDate":"2019-03-14"},{"lineNumber":109,"author":{"gitId":"-"},"content":"            Model expectedModel) throws CommandException, ParseException {","lastModifiedDate":"2019-03-14"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        CommandResult result \u003d logic.execute(inputCommand);","lastModifiedDate":"2019-03-14"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        assertEquals(expectedMessage, result.getFeedbackToUser());","lastModifiedDate":"2019-03-14"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2019-03-14"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":116,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a ParseException is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":117,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":118,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    private void assertParseException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-03-11"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, ParseException.class, expectedMessage);","lastModifiedDate":"2017-03-11"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-14"},{"lineNumber":124,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a CommandException is thrown and that the result message is correct.","lastModifiedDate":"2017-06-14"},{"lineNumber":125,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":126,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-14"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    private void assertCommandException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-06-14"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, CommandException.class, expectedMessage);","lastModifiedDate":"2017-06-14"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":132,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that the exception is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":133,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":134,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":136,"author":{"gitId":"-"},"content":"            String expectedMessage) {","lastModifiedDate":"2019-03-14"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-05-31"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, expectedException, expectedMessage, expectedModel);","lastModifiedDate":"2019-03-14"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":142,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":143,"author":{"gitId":"-"},"content":"     * - the {@code expectedException} is thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":144,"author":{"gitId":"-"},"content":"     * - the resulting error message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":145,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":146,"author":{"gitId":"-"},"content":"     * @see #assertCommandSuccess(String, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":147,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":149,"author":{"gitId":"-"},"content":"            String expectedMessage, Model expectedModel) {","lastModifiedDate":"2017-05-31"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        assertThrows(expectedException, expectedMessage, () -\u003e logic.execute(inputCommand));","lastModifiedDate":"2019-03-14"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2017-05-31"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-19"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":155,"author":{"gitId":"-"},"content":"     * A stub class to throw an {@code IOException} when the save method is called.","lastModifiedDate":"2018-12-09"},{"lineNumber":156,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    private static class JsonAddressBookIoExceptionThrowingStub extends JsonAddressBookStorage {","lastModifiedDate":"2018-12-09"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        private JsonAddressBookIoExceptionThrowingStub(Path filePath) {","lastModifiedDate":"2018-12-09"},{"lineNumber":159,"author":{"gitId":"-"},"content":"            super(filePath);","lastModifiedDate":"2018-12-09"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        public void saveAddressBook(ReadOnlyAddressBook addressBook, Path filePath) throws IOException {","lastModifiedDate":"2018-12-09"},{"lineNumber":164,"author":{"gitId":"-"},"content":"            throw DUMMY_IO_EXCEPTION;","lastModifiedDate":"2018-12-09"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":167,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"XXJJXJ":5,"-":162}},{"path":"src/test/java/seedu/address/logic/commands/AddCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-05-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-01-10"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-05-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-05-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-05-04"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-05-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2017-05-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":23,"author":{"gitId":"XXJJXJ"},"content":"import seedu.address.model.event.Event;","lastModifiedDate":"2021-09-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-05-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-05-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"public class AddCommandTest {","lastModifiedDate":"2017-05-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void constructor_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AddCommand(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public void execute_personAcceptedByModel_addSuccessful() throws Exception {","lastModifiedDate":"2017-05-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        ModelStubAcceptingPersonAdded modelStub \u003d new ModelStubAcceptingPersonAdded();","lastModifiedDate":"2017-05-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-05-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        CommandResult commandResult \u003d new AddCommand(validPerson).execute(modelStub);","lastModifiedDate":"2019-01-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertEquals(String.format(AddCommand.MESSAGE_SUCCESS, validPerson), commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertEquals(Arrays.asList(validPerson), modelStub.personsAdded);","lastModifiedDate":"2017-05-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public void execute_duplicatePerson_throwsCommandException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-05-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        AddCommand addCommand \u003d new AddCommand(validPerson);","lastModifiedDate":"2018-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        ModelStub modelStub \u003d new ModelStubWithPerson(validPerson);","lastModifiedDate":"2018-08-07"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertThrows(CommandException.class, AddCommand.MESSAGE_DUPLICATE_PERSON, () -\u003e addCommand.execute(modelStub));","lastModifiedDate":"2019-05-03"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-22"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        Person alice \u003d new PersonBuilder().withName(\"Alice\").build();","lastModifiedDate":"2017-06-22"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        Person bob \u003d new PersonBuilder().withName(\"Bob\").build();","lastModifiedDate":"2017-06-22"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        AddCommand addAliceCommand \u003d new AddCommand(alice);","lastModifiedDate":"2017-06-22"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        AddCommand addBobCommand \u003d new AddCommand(bob);","lastModifiedDate":"2017-06-22"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        AddCommand addAliceCommandCopy \u003d new AddCommand(alice);","lastModifiedDate":"2017-06-22"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommandCopy));","lastModifiedDate":"2017-06-22"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(1));","lastModifiedDate":"2017-06-22"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(null));","lastModifiedDate":"2017-06-22"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(addBobCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * A default model stub that have all of the methods failing.","lastModifiedDate":"2017-05-12"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    private class ModelStub implements Model {","lastModifiedDate":"2017-05-12"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":84,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":104,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-11-27"},{"lineNumber":109,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        public void addPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":114,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        public void setAddressBook(ReadOnlyAddressBook newData) {","lastModifiedDate":"2018-11-27"},{"lineNumber":119,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2017-05-12"},{"lineNumber":124,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-06"},{"lineNumber":129,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-06"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        public void deletePerson(Person target) {","lastModifiedDate":"2018-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":139,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":144,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2018-01-10"},{"lineNumber":149,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":151,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":152,"author":{"gitId":"XXJJXJ"},"content":"        @Override","lastModifiedDate":"2021-09-18"},{"lineNumber":153,"author":{"gitId":"XXJJXJ"},"content":"        public ObservableList\u003cEvent\u003e getEventList() {","lastModifiedDate":"2021-09-18"},{"lineNumber":154,"author":{"gitId":"XXJJXJ"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-09-18"},{"lineNumber":155,"author":{"gitId":"XXJJXJ"},"content":"        }","lastModifiedDate":"2021-09-18"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":159,"author":{"gitId":"-"},"content":"     * A Model stub that contains a single person.","lastModifiedDate":"2018-08-07"},{"lineNumber":160,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    private class ModelStubWithPerson extends ModelStub {","lastModifiedDate":"2018-08-07"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        private final Person person;","lastModifiedDate":"2018-08-07"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        ModelStubWithPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":165,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":166,"author":{"gitId":"-"},"content":"            this.person \u003d person;","lastModifiedDate":"2018-08-07"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":171,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":172,"author":{"gitId":"-"},"content":"            return this.person.isSamePerson(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":177,"author":{"gitId":"-"},"content":"     * A Model stub that always accept the person being added.","lastModifiedDate":"2017-05-12"},{"lineNumber":178,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    private class ModelStubAcceptingPersonAdded extends ModelStub {","lastModifiedDate":"2017-05-12"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        final ArrayList\u003cPerson\u003e personsAdded \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2017-05-12"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-07"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":184,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":185,"author":{"gitId":"-"},"content":"            return personsAdded.stream().anyMatch(person::isSamePerson);","lastModifiedDate":"2018-08-07"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":188,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":189,"author":{"gitId":"-"},"content":"        public void addPerson(Person person) {","lastModifiedDate":"2018-08-08"},{"lineNumber":190,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":191,"author":{"gitId":"-"},"content":"            personsAdded.add(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":195,"author":{"gitId":"-"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2017-05-04"},{"lineNumber":196,"author":{"gitId":"-"},"content":"            return new AddressBook();","lastModifiedDate":"2017-05-04"},{"lineNumber":197,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":198,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":200,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-12"}],"authorContributionMap":{"XXJJXJ":6,"-":194}},{"path":"src/test/java/seedu/address/model/AddressBookTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-12-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2018-04-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":9,"author":{"gitId":"XXJJXJ"},"content":"import static seedu.address.testutil.TypicalEvents.SAMPLE_EVENT;","lastModifiedDate":"2021-09-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2017-07-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2016-12-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2016-12-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2016-12-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2016-12-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-12-24"},{"lineNumber":22,"author":{"gitId":"XXJJXJ"},"content":"import seedu.address.model.event.Event;","lastModifiedDate":"2021-09-18"},{"lineNumber":23,"author":{"gitId":"XXJJXJ"},"content":"import seedu.address.model.event.exceptions.DuplicateEventException;","lastModifiedDate":"2021-09-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-12-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.DuplicatePersonException;","lastModifiedDate":"2018-08-07"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2018-04-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"public class AddressBookTest {","lastModifiedDate":"2016-12-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private final AddressBook addressBook \u003d new AddressBook();","lastModifiedDate":"2016-12-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public void constructor() {","lastModifiedDate":"2016-12-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertEquals(Collections.emptyList(), addressBook.getPersonList());","lastModifiedDate":"2016-12-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public void resetData_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e addressBook.resetData(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void resetData_withValidReadOnlyAddressBook_replacesData() {","lastModifiedDate":"2016-12-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        AddressBook newData \u003d getTypicalAddressBook();","lastModifiedDate":"2017-07-19"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        addressBook.resetData(newData);","lastModifiedDate":"2016-12-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertEquals(newData, addressBook);","lastModifiedDate":"2016-12-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void resetData_withDuplicatePersons_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-07"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // Two persons with the same identity fields","lastModifiedDate":"2018-04-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2018-04-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-04-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e newPersons \u003d Arrays.asList(ALICE, editedAlice);","lastModifiedDate":"2018-04-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        AddressBookStub newData \u003d new AddressBookStub(newPersons);","lastModifiedDate":"2018-03-29"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e addressBook.resetData(newData));","lastModifiedDate":"2019-03-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public void hasPerson_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-06"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e addressBook.hasPerson(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public void hasPerson_personNotInAddressBook_returnsFalse() {","lastModifiedDate":"2018-08-06"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertFalse(addressBook.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public void hasPerson_personInAddressBook_returnsTrue() {","lastModifiedDate":"2018-08-07"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        addressBook.addPerson(ALICE);","lastModifiedDate":"2018-08-06"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertTrue(addressBook.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void hasPerson_personWithSameIdentityFieldsInAddressBook_returnsTrue() {","lastModifiedDate":"2018-08-07"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        addressBook.addPerson(ALICE);","lastModifiedDate":"2018-08-06"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2018-08-06"},{"lineNumber":80,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-08-06"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertTrue(addressBook.hasPerson(editedAlice));","lastModifiedDate":"2018-08-06"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public void getPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e addressBook.getPersonList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":89,"author":{"gitId":"XXJJXJ"},"content":"    @Test","lastModifiedDate":"2021-09-18"},{"lineNumber":90,"author":{"gitId":"XXJJXJ"},"content":"    public void hasEvent_nullEvent_throwsNullPointerException() {","lastModifiedDate":"2021-09-18"},{"lineNumber":91,"author":{"gitId":"XXJJXJ"},"content":"        assertThrows(NullPointerException.class, () -\u003e addressBook.hasEvent(null));","lastModifiedDate":"2021-09-18"},{"lineNumber":92,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":93,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":94,"author":{"gitId":"XXJJXJ"},"content":"    @Test","lastModifiedDate":"2021-09-18"},{"lineNumber":95,"author":{"gitId":"XXJJXJ"},"content":"    public void hasEvent_eventNotInAddressBook_returnFalse() {","lastModifiedDate":"2021-09-18"},{"lineNumber":96,"author":{"gitId":"XXJJXJ"},"content":"        assertFalse(addressBook.hasEvent(SAMPLE_EVENT));","lastModifiedDate":"2021-09-19"},{"lineNumber":97,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":98,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":99,"author":{"gitId":"XXJJXJ"},"content":"    @Test","lastModifiedDate":"2021-09-18"},{"lineNumber":100,"author":{"gitId":"XXJJXJ"},"content":"    public void hasEvent_eventInAddressBook_returnsTrue() {","lastModifiedDate":"2021-09-18"},{"lineNumber":101,"author":{"gitId":"XXJJXJ"},"content":"        addressBook.addEvent(SAMPLE_EVENT);","lastModifiedDate":"2021-09-19"},{"lineNumber":102,"author":{"gitId":"XXJJXJ"},"content":"        assertTrue(addressBook.hasEvent(SAMPLE_EVENT));","lastModifiedDate":"2021-09-19"},{"lineNumber":103,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":104,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":105,"author":{"gitId":"XXJJXJ"},"content":"    @Test","lastModifiedDate":"2021-09-18"},{"lineNumber":106,"author":{"gitId":"XXJJXJ"},"content":"    public void getEventList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2021-09-18"},{"lineNumber":107,"author":{"gitId":"XXJJXJ"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e addressBook.getEventList().remove(0));","lastModifiedDate":"2021-09-18"},{"lineNumber":108,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":109,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":110,"author":{"gitId":"XXJJXJ"},"content":"    @Test","lastModifiedDate":"2021-09-18"},{"lineNumber":111,"author":{"gitId":"XXJJXJ"},"content":"    public void removeEvent_eventInAddressBook_returnFalse() {","lastModifiedDate":"2021-09-18"},{"lineNumber":112,"author":{"gitId":"XXJJXJ"},"content":"        addressBook.addEvent(SAMPLE_EVENT);","lastModifiedDate":"2021-09-19"},{"lineNumber":113,"author":{"gitId":"XXJJXJ"},"content":"        assertTrue(addressBook.getEventList().contains(SAMPLE_EVENT));","lastModifiedDate":"2021-09-19"},{"lineNumber":114,"author":{"gitId":"XXJJXJ"},"content":"        addressBook.removeEvent(SAMPLE_EVENT);","lastModifiedDate":"2021-09-19"},{"lineNumber":115,"author":{"gitId":"XXJJXJ"},"content":"        assertFalse(addressBook.hasEvent(SAMPLE_EVENT));","lastModifiedDate":"2021-09-19"},{"lineNumber":116,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":117,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":118,"author":{"gitId":"XXJJXJ"},"content":"    @Test","lastModifiedDate":"2021-09-18"},{"lineNumber":119,"author":{"gitId":"XXJJXJ"},"content":"    public void addEvent_eventNotInAddressBook_returnTrue() {","lastModifiedDate":"2021-09-18"},{"lineNumber":120,"author":{"gitId":"XXJJXJ"},"content":"        addressBook.addEvent(SAMPLE_EVENT);","lastModifiedDate":"2021-09-19"},{"lineNumber":121,"author":{"gitId":"XXJJXJ"},"content":"        assertTrue(addressBook.hasEvent(SAMPLE_EVENT));","lastModifiedDate":"2021-09-19"},{"lineNumber":122,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":123,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":124,"author":{"gitId":"XXJJXJ"},"content":"    @Test","lastModifiedDate":"2021-09-18"},{"lineNumber":125,"author":{"gitId":"XXJJXJ"},"content":"    public void addEvent_eventInAddressBook_throwsDuplicateEventException() {","lastModifiedDate":"2021-09-18"},{"lineNumber":126,"author":{"gitId":"XXJJXJ"},"content":"        addressBook.addEvent(SAMPLE_EVENT);","lastModifiedDate":"2021-09-19"},{"lineNumber":127,"author":{"gitId":"XXJJXJ"},"content":"        assertThrows(DuplicateEventException.class, () -\u003e addressBook.addEvent(SAMPLE_EVENT));","lastModifiedDate":"2021-09-19"},{"lineNumber":128,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":129,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-24"},{"lineNumber":131,"author":{"gitId":"-"},"content":"     * A stub ReadOnlyAddressBook whose persons list can violate interface constraints.","lastModifiedDate":"2018-03-29"},{"lineNumber":132,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-24"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    private static class AddressBookStub implements ReadOnlyAddressBook {","lastModifiedDate":"2016-12-24"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        private final ObservableList\u003cPerson\u003e persons \u003d FXCollections.observableArrayList();","lastModifiedDate":"2018-01-10"},{"lineNumber":135,"author":{"gitId":"XXJJXJ"},"content":"        private final ObservableList\u003cEvent\u003e events \u003d FXCollections.observableArrayList();","lastModifiedDate":"2021-09-18"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        AddressBookStub(Collection\u003cPerson\u003e persons) {","lastModifiedDate":"2018-03-29"},{"lineNumber":138,"author":{"gitId":"-"},"content":"            this.persons.setAll(persons);","lastModifiedDate":"2016-12-24"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-12-24"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        public ObservableList\u003cPerson\u003e getPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":143,"author":{"gitId":"-"},"content":"            return persons;","lastModifiedDate":"2016-12-24"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":145,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":146,"author":{"gitId":"XXJJXJ"},"content":"        @Override","lastModifiedDate":"2021-09-18"},{"lineNumber":147,"author":{"gitId":"XXJJXJ"},"content":"        public ObservableList\u003cEvent\u003e getEventList() {","lastModifiedDate":"2021-09-18"},{"lineNumber":148,"author":{"gitId":"XXJJXJ"},"content":"            return events;","lastModifiedDate":"2021-09-18"},{"lineNumber":149,"author":{"gitId":"XXJJXJ"},"content":"        }","lastModifiedDate":"2021-09-18"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":152,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-24"}],"authorContributionMap":{"XXJJXJ":50,"-":102}},{"path":"src/test/java/seedu/address/model/ModelManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2017-05-31"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2017-08-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2017-07-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BENSON;","lastModifiedDate":"2017-07-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-31"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.testutil.AddressBookBuilder;","lastModifiedDate":"2017-05-31"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class ModelManagerTest {","lastModifiedDate":"2017-05-31"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private ModelManager modelManager \u003d new ModelManager();","lastModifiedDate":"2018-08-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public void constructor() {","lastModifiedDate":"2018-11-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertEquals(new UserPrefs(), modelManager.getUserPrefs());","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertEquals(new GuiSettings(), modelManager.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertEquals(new AddressBook(), new AddressBook(modelManager.getAddressBook()));","lastModifiedDate":"2018-11-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public void setUserPrefs_nullUserPrefs_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setUserPrefs(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public void setUserPrefs_validUserPrefs_copiesUserPrefs() {","lastModifiedDate":"2018-12-06"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(Paths.get(\"address/book/file/path\"));","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(new GuiSettings(1, 2, 3, 4));","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        modelManager.setUserPrefs(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertEquals(userPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        // Modifying userPrefs should not modify modelManager\u0027s userPrefs","lastModifiedDate":"2018-12-06"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        UserPrefs oldUserPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(Paths.get(\"new/address/book/file/path\"));","lastModifiedDate":"2018-12-06"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertEquals(oldUserPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2018-12-06"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public void setGuiSettings_nullGuiSettings_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setGuiSettings(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void setGuiSettings_validGuiSettings_setsGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(1, 2, 3, 4);","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        modelManager.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertEquals(guiSettings, modelManager.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath_nullPath_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setAddressBookFilePath(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath_validPath_setsAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        Path path \u003d Paths.get(\"address/book/file/path\");","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        modelManager.setAddressBookFilePath(path);","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertEquals(path, modelManager.getAddressBookFilePath());","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public void hasPerson_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-06"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.hasPerson(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void hasPerson_personNotInAddressBook_returnsFalse() {","lastModifiedDate":"2018-08-06"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void hasPerson_personInAddressBook_returnsTrue() {","lastModifiedDate":"2018-08-07"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        modelManager.addPerson(ALICE);","lastModifiedDate":"2018-08-06"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public void getFilteredPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e modelManager.getFilteredPersonList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":96,"author":{"gitId":"XXJJXJ"},"content":"    @Test","lastModifiedDate":"2021-09-18"},{"lineNumber":97,"author":{"gitId":"XXJJXJ"},"content":"    public void getEventList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2021-09-18"},{"lineNumber":98,"author":{"gitId":"XXJJXJ"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e modelManager.getEventList().remove(0));","lastModifiedDate":"2021-09-18"},{"lineNumber":99,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":100,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":101,"author":{"gitId":"XXJJXJ"},"content":"    // TODO: Implement hasEvent tests after adding addEvent and removeEvent features.","lastModifiedDate":"2021-09-18"},{"lineNumber":102,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-31"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        AddressBook addressBook \u003d new AddressBookBuilder().withPerson(ALICE).withPerson(BENSON).build();","lastModifiedDate":"2017-07-19"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        AddressBook differentAddressBook \u003d new AddressBook();","lastModifiedDate":"2017-05-31"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-05-31"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-31"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        modelManager \u003d new ModelManager(addressBook, userPrefs);","lastModifiedDate":"2018-08-06"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        ModelManager modelManagerCopy \u003d new ModelManager(addressBook, userPrefs);","lastModifiedDate":"2017-05-31"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.equals(modelManagerCopy));","lastModifiedDate":"2017-05-31"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-31"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.equals(modelManager));","lastModifiedDate":"2017-05-31"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(null));","lastModifiedDate":"2017-05-31"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(5));","lastModifiedDate":"2017-05-31"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        // different addressBook -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(new ModelManager(differentAddressBook, userPrefs)));","lastModifiedDate":"2017-05-31"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        // different filteredList -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        String[] keywords \u003d ALICE.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2017-07-19"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        modelManager.updateFilteredPersonList(new NameContainsKeywordsPredicate(Arrays.asList(keywords)));","lastModifiedDate":"2017-06-12"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(new ModelManager(addressBook, userPrefs)));","lastModifiedDate":"2017-05-31"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        // resets modelManager to initial state for upcoming tests","lastModifiedDate":"2017-08-05"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        modelManager.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        // different userPrefs -\u003e returns false","lastModifiedDate":"2018-11-27"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        UserPrefs differentUserPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-05-31"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        differentUserPrefs.setAddressBookFilePath(Paths.get(\"differentFilePath\"));","lastModifiedDate":"2018-08-09"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(new ModelManager(addressBook, differentUserPrefs)));","lastModifiedDate":"2018-11-27"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":139,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-31"}],"authorContributionMap":{"XXJJXJ":7,"-":132}},{"path":"src/test/java/seedu/address/model/event/EventDateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"XXJJXJ"},"content":"package seedu.address.model.event;","lastModifiedDate":"2021-09-18"},{"lineNumber":2,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":3,"author":{"gitId":"XXJJXJ"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-09-18"},{"lineNumber":4,"author":{"gitId":"XXJJXJ"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-09-18"},{"lineNumber":5,"author":{"gitId":"XXJJXJ"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2021-09-18"},{"lineNumber":6,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":7,"author":{"gitId":"XXJJXJ"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-09-18"},{"lineNumber":8,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":9,"author":{"gitId":"XXJJXJ"},"content":"public class EventDateTest {","lastModifiedDate":"2021-09-18"},{"lineNumber":10,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":11,"author":{"gitId":"XXJJXJ"},"content":"    @Test","lastModifiedDate":"2021-09-18"},{"lineNumber":12,"author":{"gitId":"XXJJXJ"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2021-09-18"},{"lineNumber":13,"author":{"gitId":"XXJJXJ"},"content":"        assertThrows(NullPointerException.class, () -\u003e new EventDate(null));","lastModifiedDate":"2021-09-18"},{"lineNumber":14,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":15,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":16,"author":{"gitId":"XXJJXJ"},"content":"    @Test","lastModifiedDate":"2021-09-18"},{"lineNumber":17,"author":{"gitId":"XXJJXJ"},"content":"    public void constructor_invalidName_throwsIllegalArgumentException() {","lastModifiedDate":"2021-09-18"},{"lineNumber":18,"author":{"gitId":"XXJJXJ"},"content":"        String invalidDate \u003d \"\";","lastModifiedDate":"2021-09-18"},{"lineNumber":19,"author":{"gitId":"XXJJXJ"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new EventDate(invalidDate));","lastModifiedDate":"2021-09-18"},{"lineNumber":20,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":21,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":22,"author":{"gitId":"XXJJXJ"},"content":"    @Test","lastModifiedDate":"2021-09-18"},{"lineNumber":23,"author":{"gitId":"XXJJXJ"},"content":"    public void isValidDate() {","lastModifiedDate":"2021-09-18"},{"lineNumber":24,"author":{"gitId":"XXJJXJ"},"content":"        // null date","lastModifiedDate":"2021-09-18"},{"lineNumber":25,"author":{"gitId":"XXJJXJ"},"content":"        assertThrows(NullPointerException.class, () -\u003e EventDate.isValidDate(null));","lastModifiedDate":"2021-09-18"},{"lineNumber":26,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":27,"author":{"gitId":"XXJJXJ"},"content":"        // invalid dates","lastModifiedDate":"2021-09-18"},{"lineNumber":28,"author":{"gitId":"XXJJXJ"},"content":"        assertFalse(EventDate.isValidDate(\"\")); // empty string","lastModifiedDate":"2021-09-18"},{"lineNumber":29,"author":{"gitId":"XXJJXJ"},"content":"        assertFalse(EventDate.isValidDate(\"123\")); // wrong format","lastModifiedDate":"2021-09-18"},{"lineNumber":30,"author":{"gitId":"XXJJXJ"},"content":"        assertFalse(EventDate.isValidDate(\"123-10\")); // wrong format","lastModifiedDate":"2021-09-20"},{"lineNumber":31,"author":{"gitId":"XXJJXJ"},"content":"        assertFalse(EventDate.isValidDate(\"2021 August 20\")); // wrong format","lastModifiedDate":"2021-09-18"},{"lineNumber":32,"author":{"gitId":"XXJJXJ"},"content":"        assertFalse(EventDate.isValidDate(\"123-1-32\")); // invalid day","lastModifiedDate":"2021-09-20"},{"lineNumber":33,"author":{"gitId":"XXJJXJ"},"content":"        assertFalse(EventDate.isValidDate(\"0-13-1\")); // invalid month","lastModifiedDate":"2021-09-20"},{"lineNumber":34,"author":{"gitId":"XXJJXJ"},"content":"        assertFalse(EventDate.isValidDate(\"0-1-1\")); // invalid year","lastModifiedDate":"2021-09-20"},{"lineNumber":35,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":36,"author":{"gitId":"XXJJXJ"},"content":"        // valid dates","lastModifiedDate":"2021-09-18"},{"lineNumber":37,"author":{"gitId":"XXJJXJ"},"content":"        assertTrue(EventDate.isValidDate(\"2021-08-31\"));","lastModifiedDate":"2021-09-20"},{"lineNumber":38,"author":{"gitId":"XXJJXJ"},"content":"        assertTrue(EventDate.isValidDate(\"2021-9-1\"));","lastModifiedDate":"2021-09-20"},{"lineNumber":39,"author":{"gitId":"XXJJXJ"},"content":"        assertTrue(EventDate.isValidDate(\"0001-9-1\"));","lastModifiedDate":"2021-09-20"},{"lineNumber":40,"author":{"gitId":"XXJJXJ"},"content":"        assertTrue(EventDate.isValidDate(\"1-9-1\"));","lastModifiedDate":"2021-09-20"},{"lineNumber":41,"author":{"gitId":"XXJJXJ"},"content":"        assertTrue(EventDate.isValidDate(\"21-9-1\"));","lastModifiedDate":"2021-09-20"},{"lineNumber":42,"author":{"gitId":"XXJJXJ"},"content":"        assertTrue(EventDate.isValidDate(\"121-9-1\"));","lastModifiedDate":"2021-09-20"},{"lineNumber":43,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":44,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":45,"author":{"gitId":"XXJJXJ"},"content":"}","lastModifiedDate":"2021-09-18"}],"authorContributionMap":{"XXJJXJ":45}},{"path":"src/test/java/seedu/address/model/event/EventNameTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"XXJJXJ"},"content":"package seedu.address.model.event;","lastModifiedDate":"2021-09-18"},{"lineNumber":2,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":3,"author":{"gitId":"XXJJXJ"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-09-18"},{"lineNumber":4,"author":{"gitId":"XXJJXJ"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-09-18"},{"lineNumber":5,"author":{"gitId":"XXJJXJ"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2021-09-18"},{"lineNumber":6,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":7,"author":{"gitId":"XXJJXJ"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-09-18"},{"lineNumber":8,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":9,"author":{"gitId":"XXJJXJ"},"content":"public class EventNameTest {","lastModifiedDate":"2021-09-18"},{"lineNumber":10,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":11,"author":{"gitId":"XXJJXJ"},"content":"    @Test","lastModifiedDate":"2021-09-18"},{"lineNumber":12,"author":{"gitId":"XXJJXJ"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2021-09-18"},{"lineNumber":13,"author":{"gitId":"XXJJXJ"},"content":"        assertThrows(NullPointerException.class, () -\u003e new EventName(null));","lastModifiedDate":"2021-09-18"},{"lineNumber":14,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":15,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":16,"author":{"gitId":"XXJJXJ"},"content":"    @Test","lastModifiedDate":"2021-09-18"},{"lineNumber":17,"author":{"gitId":"XXJJXJ"},"content":"    public void constructor_invalidName_throwsIllegalArgumentException() {","lastModifiedDate":"2021-09-18"},{"lineNumber":18,"author":{"gitId":"XXJJXJ"},"content":"        String invalidName \u003d \"\";","lastModifiedDate":"2021-09-18"},{"lineNumber":19,"author":{"gitId":"XXJJXJ"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new EventName(invalidName));","lastModifiedDate":"2021-09-18"},{"lineNumber":20,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":21,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":22,"author":{"gitId":"XXJJXJ"},"content":"    @Test","lastModifiedDate":"2021-09-18"},{"lineNumber":23,"author":{"gitId":"XXJJXJ"},"content":"    public void isValidEventName() {","lastModifiedDate":"2021-09-18"},{"lineNumber":24,"author":{"gitId":"XXJJXJ"},"content":"        // null name","lastModifiedDate":"2021-09-18"},{"lineNumber":25,"author":{"gitId":"XXJJXJ"},"content":"        assertThrows(NullPointerException.class, () -\u003e EventName.isValidEventName(null));","lastModifiedDate":"2021-09-18"},{"lineNumber":26,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":27,"author":{"gitId":"XXJJXJ"},"content":"        // invalid name","lastModifiedDate":"2021-09-18"},{"lineNumber":28,"author":{"gitId":"XXJJXJ"},"content":"        assertFalse(EventName.isValidEventName(\"\")); // empty string","lastModifiedDate":"2021-09-18"},{"lineNumber":29,"author":{"gitId":"XXJJXJ"},"content":"        assertFalse(EventName.isValidEventName(\" \")); // spaces only","lastModifiedDate":"2021-09-18"},{"lineNumber":30,"author":{"gitId":"XXJJXJ"},"content":"        assertFalse(EventName.isValidEventName(\"^\")); // only non-alphanumeric characters","lastModifiedDate":"2021-09-18"},{"lineNumber":31,"author":{"gitId":"XXJJXJ"},"content":"        assertFalse(EventName.isValidEventName(\"sleep*\")); // contains non-alphanumeric characters","lastModifiedDate":"2021-09-18"},{"lineNumber":32,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":33,"author":{"gitId":"XXJJXJ"},"content":"        // valid name","lastModifiedDate":"2021-09-18"},{"lineNumber":34,"author":{"gitId":"XXJJXJ"},"content":"        assertTrue(EventName.isValidEventName(\"sleep and wake up\")); // alphabets only","lastModifiedDate":"2021-09-18"},{"lineNumber":35,"author":{"gitId":"XXJJXJ"},"content":"        assertTrue(EventName.isValidEventName(\"12345\")); // numbers only","lastModifiedDate":"2021-09-18"},{"lineNumber":36,"author":{"gitId":"XXJJXJ"},"content":"        assertTrue(EventName.isValidEventName(\"2nd time sleeping\")); // alphanumeric characters","lastModifiedDate":"2021-09-18"},{"lineNumber":37,"author":{"gitId":"XXJJXJ"},"content":"        assertTrue(EventName.isValidEventName(\"gO hOmE aH bOi\")); // with capital letters","lastModifiedDate":"2021-09-18"},{"lineNumber":38,"author":{"gitId":"XXJJXJ"},"content":"        // long names","lastModifiedDate":"2021-09-18"},{"lineNumber":39,"author":{"gitId":"XXJJXJ"},"content":"        assertTrue(EventName.isValidEventName(\"Run for Charity sponsored by NUS CS2103T AY2122S1 T10 group 2\"));","lastModifiedDate":"2021-09-18"},{"lineNumber":40,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":41,"author":{"gitId":"XXJJXJ"},"content":"}","lastModifiedDate":"2021-09-18"}],"authorContributionMap":{"XXJJXJ":41}},{"path":"src/test/java/seedu/address/model/event/EventTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"XXJJXJ"},"content":"package seedu.address.model.event;","lastModifiedDate":"2021-09-18"},{"lineNumber":2,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":3,"author":{"gitId":"XXJJXJ"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-09-18"},{"lineNumber":4,"author":{"gitId":"XXJJXJ"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-09-18"},{"lineNumber":5,"author":{"gitId":"XXJJXJ"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-09-18"},{"lineNumber":6,"author":{"gitId":"XXJJXJ"},"content":"import static seedu.address.testutil.TypicalEvents.ANOTHER_EVENT;","lastModifiedDate":"2021-09-19"},{"lineNumber":7,"author":{"gitId":"XXJJXJ"},"content":"import static seedu.address.testutil.TypicalEvents.SAMPLE_EVENT;","lastModifiedDate":"2021-09-19"},{"lineNumber":8,"author":{"gitId":"XXJJXJ"},"content":"import static seedu.address.testutil.TypicalEvents.SAMPLE_EVENT_COPY_DIFFERENT_TIME;","lastModifiedDate":"2021-09-19"},{"lineNumber":9,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":10,"author":{"gitId":"XXJJXJ"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-09-18"},{"lineNumber":11,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":12,"author":{"gitId":"XXJJXJ"},"content":"public class EventTest {","lastModifiedDate":"2021-09-18"},{"lineNumber":13,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":14,"author":{"gitId":"XXJJXJ"},"content":"    @Test","lastModifiedDate":"2021-09-18"},{"lineNumber":15,"author":{"gitId":"XXJJXJ"},"content":"    public void getParticipants() {","lastModifiedDate":"2021-09-18"},{"lineNumber":16,"author":{"gitId":"XXJJXJ"},"content":"        // TODO: Modify and update as we can add participants into events","lastModifiedDate":"2021-09-18"},{"lineNumber":17,"author":{"gitId":"XXJJXJ"},"content":"        assertEquals(SAMPLE_EVENT.getParticipants().size(), 0);","lastModifiedDate":"2021-09-19"},{"lineNumber":18,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":19,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":20,"author":{"gitId":"XXJJXJ"},"content":"    @Test","lastModifiedDate":"2021-09-18"},{"lineNumber":21,"author":{"gitId":"XXJJXJ"},"content":"    public void markAsDone() {","lastModifiedDate":"2021-09-18"},{"lineNumber":22,"author":{"gitId":"XXJJXJ"},"content":"        assertFalse(SAMPLE_EVENT.getIsDone());","lastModifiedDate":"2021-09-19"},{"lineNumber":23,"author":{"gitId":"XXJJXJ"},"content":"        SAMPLE_EVENT.markAsDone();","lastModifiedDate":"2021-09-19"},{"lineNumber":24,"author":{"gitId":"XXJJXJ"},"content":"        assertTrue(SAMPLE_EVENT.getIsDone());","lastModifiedDate":"2021-09-19"},{"lineNumber":25,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":26,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":27,"author":{"gitId":"XXJJXJ"},"content":"    @Test","lastModifiedDate":"2021-09-18"},{"lineNumber":28,"author":{"gitId":"XXJJXJ"},"content":"    public void isSameEvent() {","lastModifiedDate":"2021-09-18"},{"lineNumber":29,"author":{"gitId":"XXJJXJ"},"content":"        // same name","lastModifiedDate":"2021-09-18"},{"lineNumber":30,"author":{"gitId":"XXJJXJ"},"content":"        assertTrue(SAMPLE_EVENT.isSameEvent(SAMPLE_EVENT_COPY_DIFFERENT_TIME));","lastModifiedDate":"2021-09-19"},{"lineNumber":31,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":32,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":33,"author":{"gitId":"XXJJXJ"},"content":"    @Test","lastModifiedDate":"2021-09-18"},{"lineNumber":34,"author":{"gitId":"XXJJXJ"},"content":"    void testEquals() {","lastModifiedDate":"2021-09-18"},{"lineNumber":35,"author":{"gitId":"XXJJXJ"},"content":"        // same name but different other fields","lastModifiedDate":"2021-09-18"},{"lineNumber":36,"author":{"gitId":"XXJJXJ"},"content":"        assertFalse(SAMPLE_EVENT.equals(ANOTHER_EVENT));","lastModifiedDate":"2021-09-19"},{"lineNumber":37,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":38,"author":{"gitId":"XXJJXJ"},"content":"        // same Event","lastModifiedDate":"2021-09-18"},{"lineNumber":39,"author":{"gitId":"XXJJXJ"},"content":"        assertTrue(SAMPLE_EVENT.equals(SAMPLE_EVENT));","lastModifiedDate":"2021-09-19"},{"lineNumber":40,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":41,"author":{"gitId":"XXJJXJ"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-09-18"},{"lineNumber":42,"author":{"gitId":"XXJJXJ"},"content":"        assertFalse(SAMPLE_EVENT.equals(null));","lastModifiedDate":"2021-09-19"},{"lineNumber":43,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":44,"author":{"gitId":"XXJJXJ"},"content":"        // TODO: If implementing edit Event, can add more testcases.","lastModifiedDate":"2021-09-18"},{"lineNumber":45,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":46,"author":{"gitId":"XXJJXJ"},"content":"}","lastModifiedDate":"2021-09-18"}],"authorContributionMap":{"XXJJXJ":46}},{"path":"src/test/java/seedu/address/model/event/EventTimeTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"XXJJXJ"},"content":"package seedu.address.model.event;","lastModifiedDate":"2021-09-18"},{"lineNumber":2,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":3,"author":{"gitId":"XXJJXJ"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-09-18"},{"lineNumber":4,"author":{"gitId":"XXJJXJ"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-09-18"},{"lineNumber":5,"author":{"gitId":"XXJJXJ"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2021-09-18"},{"lineNumber":6,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":7,"author":{"gitId":"XXJJXJ"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-09-18"},{"lineNumber":8,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":9,"author":{"gitId":"XXJJXJ"},"content":"public class EventTimeTest {","lastModifiedDate":"2021-09-18"},{"lineNumber":10,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":11,"author":{"gitId":"XXJJXJ"},"content":"    @Test","lastModifiedDate":"2021-09-18"},{"lineNumber":12,"author":{"gitId":"XXJJXJ"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2021-09-18"},{"lineNumber":13,"author":{"gitId":"XXJJXJ"},"content":"        assertThrows(NullPointerException.class, () -\u003e new EventTime(null));","lastModifiedDate":"2021-09-18"},{"lineNumber":14,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":15,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":16,"author":{"gitId":"XXJJXJ"},"content":"    @Test","lastModifiedDate":"2021-09-18"},{"lineNumber":17,"author":{"gitId":"XXJJXJ"},"content":"    public void constructor_invalidName_throwsIllegalArgumentException() {","lastModifiedDate":"2021-09-18"},{"lineNumber":18,"author":{"gitId":"XXJJXJ"},"content":"        String invalidTime \u003d \"\";","lastModifiedDate":"2021-09-18"},{"lineNumber":19,"author":{"gitId":"XXJJXJ"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new EventTime(invalidTime));","lastModifiedDate":"2021-09-18"},{"lineNumber":20,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":21,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":22,"author":{"gitId":"XXJJXJ"},"content":"    @Test","lastModifiedDate":"2021-09-18"},{"lineNumber":23,"author":{"gitId":"XXJJXJ"},"content":"    public void isValidTime() {","lastModifiedDate":"2021-09-18"},{"lineNumber":24,"author":{"gitId":"XXJJXJ"},"content":"        // null time","lastModifiedDate":"2021-09-18"},{"lineNumber":25,"author":{"gitId":"XXJJXJ"},"content":"        assertThrows(NullPointerException.class, () -\u003e EventTime.isValidTime(null));","lastModifiedDate":"2021-09-18"},{"lineNumber":26,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":27,"author":{"gitId":"XXJJXJ"},"content":"        // invalid time","lastModifiedDate":"2021-09-18"},{"lineNumber":28,"author":{"gitId":"XXJJXJ"},"content":"        assertFalse(EventTime.isValidTime(\"\")); // empty string","lastModifiedDate":"2021-09-18"},{"lineNumber":29,"author":{"gitId":"XXJJXJ"},"content":"        assertFalse(EventTime.isValidTime(\"9\")); // wrong format","lastModifiedDate":"2021-09-20"},{"lineNumber":30,"author":{"gitId":"XXJJXJ"},"content":"        assertFalse(EventTime.isValidTime(\"90\")); // wrong format","lastModifiedDate":"2021-09-20"},{"lineNumber":31,"author":{"gitId":"XXJJXJ"},"content":"        assertFalse(EventTime.isValidTime(\"900\")); // wrong format","lastModifiedDate":"2021-09-18"},{"lineNumber":32,"author":{"gitId":"XXJJXJ"},"content":"        assertFalse(EventTime.isValidTime(\"8pm\")); // wrong format","lastModifiedDate":"2021-09-18"},{"lineNumber":33,"author":{"gitId":"XXJJXJ"},"content":"        assertFalse(EventTime.isValidTime(\"00:00\")); // wrong format","lastModifiedDate":"2021-09-18"},{"lineNumber":34,"author":{"gitId":"XXJJXJ"},"content":"        assertFalse(EventTime.isValidTime(\"2500\")); // no such time","lastModifiedDate":"2021-09-20"},{"lineNumber":35,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":36,"author":{"gitId":"XXJJXJ"},"content":"        // valid time","lastModifiedDate":"2021-09-18"},{"lineNumber":37,"author":{"gitId":"XXJJXJ"},"content":"        assertTrue(EventTime.isValidTime(\"0000\"));","lastModifiedDate":"2021-09-18"},{"lineNumber":38,"author":{"gitId":"XXJJXJ"},"content":"        assertTrue(EventTime.isValidTime(\"2359\"));","lastModifiedDate":"2021-09-18"},{"lineNumber":39,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":40,"author":{"gitId":"XXJJXJ"},"content":"}","lastModifiedDate":"2021-09-18"}],"authorContributionMap":{"XXJJXJ":40}},{"path":"src/test/java/seedu/address/model/event/UniqueEventListTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"XXJJXJ"},"content":"package seedu.address.model.event;","lastModifiedDate":"2021-09-18"},{"lineNumber":2,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":3,"author":{"gitId":"XXJJXJ"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-09-18"},{"lineNumber":4,"author":{"gitId":"XXJJXJ"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-09-18"},{"lineNumber":5,"author":{"gitId":"XXJJXJ"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-09-18"},{"lineNumber":6,"author":{"gitId":"XXJJXJ"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2021-09-18"},{"lineNumber":7,"author":{"gitId":"XXJJXJ"},"content":"import static seedu.address.testutil.TypicalEvents.ANOTHER_EVENT;","lastModifiedDate":"2021-09-19"},{"lineNumber":8,"author":{"gitId":"XXJJXJ"},"content":"import static seedu.address.testutil.TypicalEvents.SAMPLE_EVENT;","lastModifiedDate":"2021-09-19"},{"lineNumber":9,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":10,"author":{"gitId":"XXJJXJ"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-09-18"},{"lineNumber":11,"author":{"gitId":"XXJJXJ"},"content":"import java.util.Collections;","lastModifiedDate":"2021-09-18"},{"lineNumber":12,"author":{"gitId":"XXJJXJ"},"content":"import java.util.List;","lastModifiedDate":"2021-09-18"},{"lineNumber":13,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":14,"author":{"gitId":"XXJJXJ"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-09-18"},{"lineNumber":15,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":16,"author":{"gitId":"XXJJXJ"},"content":"import seedu.address.model.event.exceptions.DuplicateEventException;","lastModifiedDate":"2021-09-18"},{"lineNumber":17,"author":{"gitId":"XXJJXJ"},"content":"import seedu.address.model.event.exceptions.EventNotFoundException;","lastModifiedDate":"2021-09-18"},{"lineNumber":18,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":19,"author":{"gitId":"XXJJXJ"},"content":"class UniqueEventListTest {","lastModifiedDate":"2021-09-18"},{"lineNumber":20,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":21,"author":{"gitId":"XXJJXJ"},"content":"    private final UniqueEventList uniqueEventList \u003d new UniqueEventList();","lastModifiedDate":"2021-09-18"},{"lineNumber":22,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":23,"author":{"gitId":"XXJJXJ"},"content":"    @Test","lastModifiedDate":"2021-09-18"},{"lineNumber":24,"author":{"gitId":"XXJJXJ"},"content":"    public void contains_nullEvent_throwsNullPointerException() {","lastModifiedDate":"2021-09-18"},{"lineNumber":25,"author":{"gitId":"XXJJXJ"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueEventList.contains(null));","lastModifiedDate":"2021-09-18"},{"lineNumber":26,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":27,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":28,"author":{"gitId":"XXJJXJ"},"content":"    @Test","lastModifiedDate":"2021-09-18"},{"lineNumber":29,"author":{"gitId":"XXJJXJ"},"content":"    public void contains_eventNotInList_returnsFalse() {","lastModifiedDate":"2021-09-18"},{"lineNumber":30,"author":{"gitId":"XXJJXJ"},"content":"        assertFalse(uniqueEventList.contains(SAMPLE_EVENT));","lastModifiedDate":"2021-09-19"},{"lineNumber":31,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":32,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":33,"author":{"gitId":"XXJJXJ"},"content":"    @Test","lastModifiedDate":"2021-09-18"},{"lineNumber":34,"author":{"gitId":"XXJJXJ"},"content":"    public void contains_eventInList_returnsTrue() {","lastModifiedDate":"2021-09-18"},{"lineNumber":35,"author":{"gitId":"XXJJXJ"},"content":"        uniqueEventList.add(SAMPLE_EVENT);","lastModifiedDate":"2021-09-19"},{"lineNumber":36,"author":{"gitId":"XXJJXJ"},"content":"        assertTrue(uniqueEventList.contains(SAMPLE_EVENT));","lastModifiedDate":"2021-09-19"},{"lineNumber":37,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":38,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":39,"author":{"gitId":"XXJJXJ"},"content":"    @Test","lastModifiedDate":"2021-09-18"},{"lineNumber":40,"author":{"gitId":"XXJJXJ"},"content":"    public void add_nullEvent_throwsNullPointerException() {","lastModifiedDate":"2021-09-18"},{"lineNumber":41,"author":{"gitId":"XXJJXJ"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueEventList.add(null));","lastModifiedDate":"2021-09-18"},{"lineNumber":42,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":43,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":44,"author":{"gitId":"XXJJXJ"},"content":"    @Test","lastModifiedDate":"2021-09-18"},{"lineNumber":45,"author":{"gitId":"XXJJXJ"},"content":"    public void add_duplicateEvent_throwsDuplicateEventException() {","lastModifiedDate":"2021-09-18"},{"lineNumber":46,"author":{"gitId":"XXJJXJ"},"content":"        uniqueEventList.add(SAMPLE_EVENT);","lastModifiedDate":"2021-09-19"},{"lineNumber":47,"author":{"gitId":"XXJJXJ"},"content":"        assertThrows(DuplicateEventException.class, () -\u003e uniqueEventList.add(SAMPLE_EVENT));","lastModifiedDate":"2021-09-19"},{"lineNumber":48,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":49,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":50,"author":{"gitId":"XXJJXJ"},"content":"    @Test","lastModifiedDate":"2021-09-18"},{"lineNumber":51,"author":{"gitId":"XXJJXJ"},"content":"    public void remove_nullEvent_throwsNullPointerException() {","lastModifiedDate":"2021-09-18"},{"lineNumber":52,"author":{"gitId":"XXJJXJ"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueEventList.remove(null));","lastModifiedDate":"2021-09-18"},{"lineNumber":53,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":54,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":55,"author":{"gitId":"XXJJXJ"},"content":"    @Test","lastModifiedDate":"2021-09-18"},{"lineNumber":56,"author":{"gitId":"XXJJXJ"},"content":"    public void remove_eventDoesNotExist_throwsEventNotFoundException() {","lastModifiedDate":"2021-09-18"},{"lineNumber":57,"author":{"gitId":"XXJJXJ"},"content":"        assertThrows(EventNotFoundException.class, () -\u003e uniqueEventList.remove(ANOTHER_EVENT));","lastModifiedDate":"2021-09-19"},{"lineNumber":58,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":59,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":60,"author":{"gitId":"XXJJXJ"},"content":"    @Test","lastModifiedDate":"2021-09-18"},{"lineNumber":61,"author":{"gitId":"XXJJXJ"},"content":"    public void remove_existingEvent_removesEvent() {","lastModifiedDate":"2021-09-18"},{"lineNumber":62,"author":{"gitId":"XXJJXJ"},"content":"        uniqueEventList.add(SAMPLE_EVENT);","lastModifiedDate":"2021-09-19"},{"lineNumber":63,"author":{"gitId":"XXJJXJ"},"content":"        uniqueEventList.remove(SAMPLE_EVENT);","lastModifiedDate":"2021-09-19"},{"lineNumber":64,"author":{"gitId":"XXJJXJ"},"content":"        UniqueEventList expectedUniqueEventList \u003d new UniqueEventList();","lastModifiedDate":"2021-09-18"},{"lineNumber":65,"author":{"gitId":"XXJJXJ"},"content":"        assertEquals(expectedUniqueEventList, uniqueEventList);","lastModifiedDate":"2021-09-18"},{"lineNumber":66,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":67,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":68,"author":{"gitId":"XXJJXJ"},"content":"    @Test","lastModifiedDate":"2021-09-18"},{"lineNumber":69,"author":{"gitId":"XXJJXJ"},"content":"    public void setEvents_nullUniqueEventList_throwsNullPointerException() {","lastModifiedDate":"2021-09-18"},{"lineNumber":70,"author":{"gitId":"XXJJXJ"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueEventList.setEvents((UniqueEventList) null));","lastModifiedDate":"2021-09-18"},{"lineNumber":71,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":72,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":73,"author":{"gitId":"XXJJXJ"},"content":"    @Test","lastModifiedDate":"2021-09-18"},{"lineNumber":74,"author":{"gitId":"XXJJXJ"},"content":"    public void setEvents_uniqueEventList_replacesOwnListWithProvidedUniqueEventList() {","lastModifiedDate":"2021-09-18"},{"lineNumber":75,"author":{"gitId":"XXJJXJ"},"content":"        uniqueEventList.add(SAMPLE_EVENT);","lastModifiedDate":"2021-09-19"},{"lineNumber":76,"author":{"gitId":"XXJJXJ"},"content":"        UniqueEventList expectedUniqueEventList \u003d new UniqueEventList();","lastModifiedDate":"2021-09-18"},{"lineNumber":77,"author":{"gitId":"XXJJXJ"},"content":"        expectedUniqueEventList.add(ANOTHER_EVENT);","lastModifiedDate":"2021-09-19"},{"lineNumber":78,"author":{"gitId":"XXJJXJ"},"content":"        uniqueEventList.setEvents(expectedUniqueEventList);","lastModifiedDate":"2021-09-18"},{"lineNumber":79,"author":{"gitId":"XXJJXJ"},"content":"        assertEquals(expectedUniqueEventList, uniqueEventList);","lastModifiedDate":"2021-09-18"},{"lineNumber":80,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":81,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":82,"author":{"gitId":"XXJJXJ"},"content":"    @Test","lastModifiedDate":"2021-09-18"},{"lineNumber":83,"author":{"gitId":"XXJJXJ"},"content":"    public void setEvents_nullList_throwsNullPointerException() {","lastModifiedDate":"2021-09-18"},{"lineNumber":84,"author":{"gitId":"XXJJXJ"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueEventList.setEvents((List\u003cEvent\u003e) null));","lastModifiedDate":"2021-09-18"},{"lineNumber":85,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":86,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":87,"author":{"gitId":"XXJJXJ"},"content":"    @Test","lastModifiedDate":"2021-09-18"},{"lineNumber":88,"author":{"gitId":"XXJJXJ"},"content":"    public void setEvents_list_replacesOwnListWithProvidedList() {","lastModifiedDate":"2021-09-18"},{"lineNumber":89,"author":{"gitId":"XXJJXJ"},"content":"        uniqueEventList.add(SAMPLE_EVENT);","lastModifiedDate":"2021-09-19"},{"lineNumber":90,"author":{"gitId":"XXJJXJ"},"content":"        List\u003cEvent\u003e eventList \u003d Collections.singletonList(ANOTHER_EVENT);","lastModifiedDate":"2021-09-19"},{"lineNumber":91,"author":{"gitId":"XXJJXJ"},"content":"        uniqueEventList.setEvents(eventList);","lastModifiedDate":"2021-09-18"},{"lineNumber":92,"author":{"gitId":"XXJJXJ"},"content":"        UniqueEventList expectedUniqueEventList \u003d new UniqueEventList();","lastModifiedDate":"2021-09-18"},{"lineNumber":93,"author":{"gitId":"XXJJXJ"},"content":"        expectedUniqueEventList.add(ANOTHER_EVENT);","lastModifiedDate":"2021-09-19"},{"lineNumber":94,"author":{"gitId":"XXJJXJ"},"content":"        assertEquals(expectedUniqueEventList, uniqueEventList);","lastModifiedDate":"2021-09-18"},{"lineNumber":95,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":96,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":97,"author":{"gitId":"XXJJXJ"},"content":"    @Test","lastModifiedDate":"2021-09-18"},{"lineNumber":98,"author":{"gitId":"XXJJXJ"},"content":"    public void setEvents_listWithDuplicateEvents_throwsDuplicateEventException() {","lastModifiedDate":"2021-09-18"},{"lineNumber":99,"author":{"gitId":"XXJJXJ"},"content":"        List\u003cEvent\u003e listWithDuplicateEvents \u003d Arrays.asList(SAMPLE_EVENT, SAMPLE_EVENT);","lastModifiedDate":"2021-09-19"},{"lineNumber":100,"author":{"gitId":"XXJJXJ"},"content":"        assertThrows(DuplicateEventException.class, () -\u003e uniqueEventList.setEvents(listWithDuplicateEvents));","lastModifiedDate":"2021-09-18"},{"lineNumber":101,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":102,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":103,"author":{"gitId":"XXJJXJ"},"content":"    @Test","lastModifiedDate":"2021-09-18"},{"lineNumber":104,"author":{"gitId":"XXJJXJ"},"content":"    public void asUnmodifiableObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2021-09-18"},{"lineNumber":105,"author":{"gitId":"XXJJXJ"},"content":"        assertThrows(UnsupportedOperationException.class, ()","lastModifiedDate":"2021-09-18"},{"lineNumber":106,"author":{"gitId":"XXJJXJ"},"content":"            -\u003e uniqueEventList.asUnmodifiableObservableList().remove(0));","lastModifiedDate":"2021-09-18"},{"lineNumber":107,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":108,"author":{"gitId":"XXJJXJ"},"content":"}","lastModifiedDate":"2021-09-18"}],"authorContributionMap":{"XXJJXJ":108}},{"path":"src/test/java/seedu/address/model/participant/BirthDateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.participant;","lastModifiedDate":"2021-09-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-09-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-09-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-09-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-09-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.time.Period;","lastModifiedDate":"2021-09-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-09-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.particpant.BirthDate;","lastModifiedDate":"2021-09-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class BirthDateTest {","lastModifiedDate":"2021-09-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-09-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void getAgeTest() {","lastModifiedDate":"2021-09-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        LocalDate date \u003d LocalDate.of(2000, 8, 4);","lastModifiedDate":"2021-09-11"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        BirthDate birthDate \u003d BirthDate.of(2000, 8, 4);","lastModifiedDate":"2021-09-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertEquals(Period.between(date, LocalDate.now()).getYears(), birthDate.getAge());","lastModifiedDate":"2021-09-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-11"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-09-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void notSpecifiedBirthDateTest() {","lastModifiedDate":"2021-09-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        BirthDate birthDate \u003d BirthDate.notSpecified();","lastModifiedDate":"2021-09-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        assertEquals(\"N/A\", birthDate.toString());","lastModifiedDate":"2021-09-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-11"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-09-11"},{"lineNumber":30,"author":{"gitId":"XXJJXJ"},"content":"    public void ofFactoryMethod_integerParam_stringRepresentationTest() {","lastModifiedDate":"2021-09-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        BirthDate birthDate \u003d BirthDate.of(2020, 8, 4);","lastModifiedDate":"2021-09-11"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertEquals(\"2020-08-04\", birthDate.toString());","lastModifiedDate":"2021-09-11"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-11"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":35,"author":{"gitId":"XXJJXJ"},"content":"    @Test","lastModifiedDate":"2021-09-18"},{"lineNumber":36,"author":{"gitId":"XXJJXJ"},"content":"    public void ofFactoryMethod_localDateParam_stringRepresentationTest() {","lastModifiedDate":"2021-09-19"},{"lineNumber":37,"author":{"gitId":"XXJJXJ"},"content":"        BirthDate birthDate \u003d BirthDate.of(LocalDate.parse(\"2021-09-18\"));","lastModifiedDate":"2021-09-18"},{"lineNumber":38,"author":{"gitId":"XXJJXJ"},"content":"        assertEquals(\"2021-09-18\", birthDate.toString());","lastModifiedDate":"2021-09-18"},{"lineNumber":39,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":40,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-09-11"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void isPresentOrPastTest() {","lastModifiedDate":"2021-09-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertFalse(BirthDate.isPresentOrPast(LocalDate.MAX));","lastModifiedDate":"2021-09-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertFalse(BirthDate.isPresentOrPast(LocalDate.now().plusYears(20)));","lastModifiedDate":"2021-09-12"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertTrue(BirthDate.isPresentOrPast(LocalDate.now()));","lastModifiedDate":"2021-09-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        // for other use cases not strictly to participants","lastModifiedDate":"2021-09-11"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        // BirthDate is strictly what can be born now and in the past and not in the future only","lastModifiedDate":"2021-09-11"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertTrue(BirthDate.isPresentOrPast(LocalDate.now().minusYears(200)));","lastModifiedDate":"2021-09-12"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertTrue(BirthDate.isPresentOrPast(LocalDate.now().minusYears(50)));","lastModifiedDate":"2021-09-12"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-11"},{"lineNumber":55,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-09-11"}],"authorContributionMap":{"XXJJXJ":7,"-":48}},{"path":"src/test/java/seedu/address/storage/JsonAdaptedEventTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"XXJJXJ"},"content":"package seedu.address.storage;","lastModifiedDate":"2021-09-18"},{"lineNumber":2,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":3,"author":{"gitId":"XXJJXJ"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-09-18"},{"lineNumber":4,"author":{"gitId":"XXJJXJ"},"content":"import static seedu.address.storage.JsonAdaptedEvent.MISSING_FIELD_MESSAGE_FORMAT;","lastModifiedDate":"2021-09-18"},{"lineNumber":5,"author":{"gitId":"XXJJXJ"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2021-09-18"},{"lineNumber":6,"author":{"gitId":"XXJJXJ"},"content":"import static seedu.address.testutil.TypicalEvents.SAMPLE_EVENT;","lastModifiedDate":"2021-09-19"},{"lineNumber":7,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":8,"author":{"gitId":"XXJJXJ"},"content":"import java.util.List;","lastModifiedDate":"2021-09-18"},{"lineNumber":9,"author":{"gitId":"XXJJXJ"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2021-09-18"},{"lineNumber":10,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":11,"author":{"gitId":"XXJJXJ"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-09-18"},{"lineNumber":12,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":13,"author":{"gitId":"XXJJXJ"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2021-09-18"},{"lineNumber":14,"author":{"gitId":"XXJJXJ"},"content":"import seedu.address.model.event.EventDate;","lastModifiedDate":"2021-09-18"},{"lineNumber":15,"author":{"gitId":"XXJJXJ"},"content":"import seedu.address.model.event.EventName;","lastModifiedDate":"2021-09-18"},{"lineNumber":16,"author":{"gitId":"XXJJXJ"},"content":"import seedu.address.model.event.EventTime;","lastModifiedDate":"2021-09-18"},{"lineNumber":17,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":18,"author":{"gitId":"XXJJXJ"},"content":"public class JsonAdaptedEventTest {","lastModifiedDate":"2021-09-18"},{"lineNumber":19,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":20,"author":{"gitId":"XXJJXJ"},"content":"    private static final String INVALID_NAME \u003d \"R@ce for Hum@nity\";","lastModifiedDate":"2021-09-18"},{"lineNumber":21,"author":{"gitId":"XXJJXJ"},"content":"    private static final String INVALID_DATE \u003d \"201-13-1\";","lastModifiedDate":"2021-09-20"},{"lineNumber":22,"author":{"gitId":"XXJJXJ"},"content":"    private static final String INVALID_TIME \u003d \"999\";","lastModifiedDate":"2021-09-18"},{"lineNumber":23,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":24,"author":{"gitId":"XXJJXJ"},"content":"    private static final String VALID_NAME \u003d \"Race for Humanity\";","lastModifiedDate":"2021-09-18"},{"lineNumber":25,"author":{"gitId":"XXJJXJ"},"content":"    private static final String VALID_IS_DONE \u003d \"Completed\";","lastModifiedDate":"2021-09-18"},{"lineNumber":26,"author":{"gitId":"XXJJXJ"},"content":"    private static final String VALID_DATE \u003d \"2021-09-18\";","lastModifiedDate":"2021-09-18"},{"lineNumber":27,"author":{"gitId":"XXJJXJ"},"content":"    private static final String VALID_TIME \u003d \"2359\";","lastModifiedDate":"2021-09-18"},{"lineNumber":28,"author":{"gitId":"XXJJXJ"},"content":"    // TODO: To be updated once addParticipants are implemented","lastModifiedDate":"2021-09-18"},{"lineNumber":29,"author":{"gitId":"XXJJXJ"},"content":"    private static final List\u003cJsonAdaptedParticipant\u003e VALID_PARTICIPANTS \u003d SAMPLE_EVENT.getParticipants().stream()","lastModifiedDate":"2021-09-19"},{"lineNumber":30,"author":{"gitId":"XXJJXJ"},"content":"            .map(JsonAdaptedParticipant::new)","lastModifiedDate":"2021-09-18"},{"lineNumber":31,"author":{"gitId":"XXJJXJ"},"content":"            .collect(Collectors.toList());","lastModifiedDate":"2021-09-18"},{"lineNumber":32,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":33,"author":{"gitId":"XXJJXJ"},"content":"    @Test","lastModifiedDate":"2021-09-18"},{"lineNumber":34,"author":{"gitId":"XXJJXJ"},"content":"    public void toModelType_validEventDetails_returnsEvent() throws Exception {","lastModifiedDate":"2021-09-18"},{"lineNumber":35,"author":{"gitId":"XXJJXJ"},"content":"        JsonAdaptedEvent event \u003d new JsonAdaptedEvent(SAMPLE_EVENT);","lastModifiedDate":"2021-09-19"},{"lineNumber":36,"author":{"gitId":"XXJJXJ"},"content":"        assertEquals(SAMPLE_EVENT, event.toModelType());","lastModifiedDate":"2021-09-19"},{"lineNumber":37,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":38,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":39,"author":{"gitId":"XXJJXJ"},"content":"    @Test","lastModifiedDate":"2021-09-18"},{"lineNumber":40,"author":{"gitId":"XXJJXJ"},"content":"    public void toModelType_invalidName_throwsIllegalValueException() {","lastModifiedDate":"2021-09-18"},{"lineNumber":41,"author":{"gitId":"XXJJXJ"},"content":"        JsonAdaptedEvent event \u003d","lastModifiedDate":"2021-09-18"},{"lineNumber":42,"author":{"gitId":"XXJJXJ"},"content":"                new JsonAdaptedEvent(INVALID_NAME, VALID_IS_DONE, VALID_DATE, VALID_TIME, VALID_PARTICIPANTS);","lastModifiedDate":"2021-09-18"},{"lineNumber":43,"author":{"gitId":"XXJJXJ"},"content":"        String expectedMessage \u003d EventName.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2021-09-18"},{"lineNumber":44,"author":{"gitId":"XXJJXJ"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, event::toModelType);","lastModifiedDate":"2021-09-18"},{"lineNumber":45,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":46,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":47,"author":{"gitId":"XXJJXJ"},"content":"    @Test","lastModifiedDate":"2021-09-18"},{"lineNumber":48,"author":{"gitId":"XXJJXJ"},"content":"    public void toModelType_nullName_throwsIllegalValueException() {","lastModifiedDate":"2021-09-18"},{"lineNumber":49,"author":{"gitId":"XXJJXJ"},"content":"        JsonAdaptedEvent event \u003d","lastModifiedDate":"2021-09-18"},{"lineNumber":50,"author":{"gitId":"XXJJXJ"},"content":"                new JsonAdaptedEvent(null, VALID_IS_DONE, VALID_DATE, VALID_TIME, VALID_PARTICIPANTS);","lastModifiedDate":"2021-09-18"},{"lineNumber":51,"author":{"gitId":"XXJJXJ"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, EventName.class.getSimpleName());","lastModifiedDate":"2021-09-18"},{"lineNumber":52,"author":{"gitId":"XXJJXJ"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, event::toModelType);","lastModifiedDate":"2021-09-18"},{"lineNumber":53,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":54,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":55,"author":{"gitId":"XXJJXJ"},"content":"    @Test","lastModifiedDate":"2021-09-18"},{"lineNumber":56,"author":{"gitId":"XXJJXJ"},"content":"    public void toModelType_invalidDate_throwsIllegalValueException() {","lastModifiedDate":"2021-09-18"},{"lineNumber":57,"author":{"gitId":"XXJJXJ"},"content":"        JsonAdaptedEvent event \u003d","lastModifiedDate":"2021-09-18"},{"lineNumber":58,"author":{"gitId":"XXJJXJ"},"content":"                new JsonAdaptedEvent(VALID_NAME, VALID_IS_DONE, INVALID_DATE, VALID_TIME, VALID_PARTICIPANTS);","lastModifiedDate":"2021-09-18"},{"lineNumber":59,"author":{"gitId":"XXJJXJ"},"content":"        String expectedMessage \u003d EventDate.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2021-09-18"},{"lineNumber":60,"author":{"gitId":"XXJJXJ"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, event::toModelType);","lastModifiedDate":"2021-09-18"},{"lineNumber":61,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":62,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":63,"author":{"gitId":"XXJJXJ"},"content":"    @Test","lastModifiedDate":"2021-09-18"},{"lineNumber":64,"author":{"gitId":"XXJJXJ"},"content":"    public void toModelType_nullDate_throwsIllegalValueException() {","lastModifiedDate":"2021-09-18"},{"lineNumber":65,"author":{"gitId":"XXJJXJ"},"content":"        JsonAdaptedEvent event \u003d","lastModifiedDate":"2021-09-18"},{"lineNumber":66,"author":{"gitId":"XXJJXJ"},"content":"                new JsonAdaptedEvent(VALID_NAME, VALID_IS_DONE, null, VALID_TIME, VALID_PARTICIPANTS);","lastModifiedDate":"2021-09-18"},{"lineNumber":67,"author":{"gitId":"XXJJXJ"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, EventDate.class.getSimpleName());","lastModifiedDate":"2021-09-18"},{"lineNumber":68,"author":{"gitId":"XXJJXJ"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, event::toModelType);","lastModifiedDate":"2021-09-18"},{"lineNumber":69,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":70,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":71,"author":{"gitId":"XXJJXJ"},"content":"    @Test","lastModifiedDate":"2021-09-18"},{"lineNumber":72,"author":{"gitId":"XXJJXJ"},"content":"    public void toModelType_invalidTime_throwsIllegalValueException() {","lastModifiedDate":"2021-09-18"},{"lineNumber":73,"author":{"gitId":"XXJJXJ"},"content":"        JsonAdaptedEvent event \u003d","lastModifiedDate":"2021-09-18"},{"lineNumber":74,"author":{"gitId":"XXJJXJ"},"content":"                new JsonAdaptedEvent(VALID_NAME, VALID_IS_DONE, VALID_DATE, INVALID_TIME, VALID_PARTICIPANTS);","lastModifiedDate":"2021-09-18"},{"lineNumber":75,"author":{"gitId":"XXJJXJ"},"content":"        String expectedMessage \u003d EventTime.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2021-09-18"},{"lineNumber":76,"author":{"gitId":"XXJJXJ"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, event::toModelType);","lastModifiedDate":"2021-09-18"},{"lineNumber":77,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":78,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":79,"author":{"gitId":"XXJJXJ"},"content":"    @Test","lastModifiedDate":"2021-09-18"},{"lineNumber":80,"author":{"gitId":"XXJJXJ"},"content":"    public void toModelType_nullTime_throwsIllegalValueException() {","lastModifiedDate":"2021-09-18"},{"lineNumber":81,"author":{"gitId":"XXJJXJ"},"content":"        JsonAdaptedEvent event \u003d","lastModifiedDate":"2021-09-18"},{"lineNumber":82,"author":{"gitId":"XXJJXJ"},"content":"                new JsonAdaptedEvent(VALID_NAME, VALID_IS_DONE, VALID_DATE, null, VALID_PARTICIPANTS);","lastModifiedDate":"2021-09-18"},{"lineNumber":83,"author":{"gitId":"XXJJXJ"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, EventTime.class.getSimpleName());","lastModifiedDate":"2021-09-18"},{"lineNumber":84,"author":{"gitId":"XXJJXJ"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, event::toModelType);","lastModifiedDate":"2021-09-18"},{"lineNumber":85,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":86,"author":{"gitId":"XXJJXJ"},"content":"}","lastModifiedDate":"2021-09-18"}],"authorContributionMap":{"XXJJXJ":86}},{"path":"src/test/java/seedu/address/storage/JsonSerializableAddressBookTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.JsonUtil;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"XXJJXJ"},"content":"import seedu.address.testutil.TypicalEvents;","lastModifiedDate":"2021-09-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.testutil.TypicalPersons;","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class JsonSerializableAddressBookTest {","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonSerializableAddressBookTest\");","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final Path TYPICAL_PERSONS_FILE \u003d TEST_DATA_FOLDER.resolve(\"typicalPersonsAddressBook.json\");","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Path INVALID_PERSON_FILE \u003d TEST_DATA_FOLDER.resolve(\"invalidPersonAddressBook.json\");","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final Path DUPLICATE_PERSON_FILE \u003d TEST_DATA_FOLDER.resolve(\"duplicatePersonAddressBook.json\");","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"XXJJXJ"},"content":"    private static final Path TYPICAL_EVENTS_FILE \u003d TEST_DATA_FOLDER.resolve(\"typicalEventsAddressBook.json\");","lastModifiedDate":"2021-09-18"},{"lineNumber":24,"author":{"gitId":"XXJJXJ"},"content":"    private static final Path INVALID_EVENT_FILE \u003d TEST_DATA_FOLDER.resolve(\"invalidEventAddressBook.json\");","lastModifiedDate":"2021-09-18"},{"lineNumber":25,"author":{"gitId":"XXJJXJ"},"content":"    private static final Path DUPLICATE_EVENT_FILE \u003d TEST_DATA_FOLDER.resolve(\"duplicateEventAddressBook.json\");","lastModifiedDate":"2021-09-18"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public void toModelType_typicalPersonsFile_success() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        JsonSerializableAddressBook dataFromFile \u003d JsonUtil.readJsonFile(TYPICAL_PERSONS_FILE,","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"                JsonSerializableAddressBook.class).get();","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        AddressBook addressBookFromFile \u003d dataFromFile.toModelType();","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        AddressBook typicalPersonsAddressBook \u003d TypicalPersons.getTypicalAddressBook();","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertEquals(addressBookFromFile, typicalPersonsAddressBook);","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void toModelType_invalidPersonFile_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        JsonSerializableAddressBook dataFromFile \u003d JsonUtil.readJsonFile(INVALID_PERSON_FILE,","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                JsonSerializableAddressBook.class).get();","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, dataFromFile::toModelType);","lastModifiedDate":"2019-03-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public void toModelType_duplicatePersons_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        JsonSerializableAddressBook dataFromFile \u003d JsonUtil.readJsonFile(DUPLICATE_PERSON_FILE,","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"                JsonSerializableAddressBook.class).get();","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, JsonSerializableAddressBook.MESSAGE_DUPLICATE_PERSON,","lastModifiedDate":"2019-03-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"                dataFromFile::toModelType);","lastModifiedDate":"2019-03-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"XXJJXJ"},"content":"    @Test","lastModifiedDate":"2021-09-18"},{"lineNumber":52,"author":{"gitId":"XXJJXJ"},"content":"    public void toModelType_typicalEventFile_success() throws Exception {","lastModifiedDate":"2021-09-18"},{"lineNumber":53,"author":{"gitId":"XXJJXJ"},"content":"        JsonSerializableAddressBook dataFromFile \u003d JsonUtil.readJsonFile(TYPICAL_EVENTS_FILE,","lastModifiedDate":"2021-09-18"},{"lineNumber":54,"author":{"gitId":"XXJJXJ"},"content":"                JsonSerializableAddressBook.class).get();","lastModifiedDate":"2021-09-18"},{"lineNumber":55,"author":{"gitId":"XXJJXJ"},"content":"        AddressBook addressBookFromFile \u003d dataFromFile.toModelType();","lastModifiedDate":"2021-09-18"},{"lineNumber":56,"author":{"gitId":"XXJJXJ"},"content":"        AddressBook typicalPersonsAddressBook \u003d TypicalEvents.getTypicalAddressBook();","lastModifiedDate":"2021-09-18"},{"lineNumber":57,"author":{"gitId":"XXJJXJ"},"content":"        assertEquals(addressBookFromFile, typicalPersonsAddressBook);","lastModifiedDate":"2021-09-18"},{"lineNumber":58,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":59,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":60,"author":{"gitId":"XXJJXJ"},"content":"    @Test","lastModifiedDate":"2021-09-18"},{"lineNumber":61,"author":{"gitId":"XXJJXJ"},"content":"    public void toModelType_invalidEventFile_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2021-09-18"},{"lineNumber":62,"author":{"gitId":"XXJJXJ"},"content":"        JsonSerializableAddressBook dataFromFile \u003d JsonUtil.readJsonFile(INVALID_EVENT_FILE,","lastModifiedDate":"2021-09-18"},{"lineNumber":63,"author":{"gitId":"XXJJXJ"},"content":"                JsonSerializableAddressBook.class).get();","lastModifiedDate":"2021-09-18"},{"lineNumber":64,"author":{"gitId":"XXJJXJ"},"content":"        assertThrows(IllegalValueException.class, dataFromFile::toModelType);","lastModifiedDate":"2021-09-18"},{"lineNumber":65,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":66,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":67,"author":{"gitId":"XXJJXJ"},"content":"    @Test","lastModifiedDate":"2021-09-18"},{"lineNumber":68,"author":{"gitId":"XXJJXJ"},"content":"    public void toModelType_duplicateEvents_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2021-09-18"},{"lineNumber":69,"author":{"gitId":"XXJJXJ"},"content":"        JsonSerializableAddressBook dataFromFile \u003d JsonUtil.readJsonFile(DUPLICATE_EVENT_FILE,","lastModifiedDate":"2021-09-18"},{"lineNumber":70,"author":{"gitId":"XXJJXJ"},"content":"                JsonSerializableAddressBook.class).get();","lastModifiedDate":"2021-09-18"},{"lineNumber":71,"author":{"gitId":"XXJJXJ"},"content":"        assertThrows(IllegalValueException.class, JsonSerializableAddressBook.MESSAGE_DUPLICATE_EVENT,","lastModifiedDate":"2021-09-18"},{"lineNumber":72,"author":{"gitId":"XXJJXJ"},"content":"                dataFromFile::toModelType);","lastModifiedDate":"2021-09-18"},{"lineNumber":73,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":74,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"XXJJXJ":27,"-":47}},{"path":"src/test/java/seedu/address/testutil/TypicalEvents.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"XXJJXJ"},"content":"package seedu.address.testutil;","lastModifiedDate":"2021-09-18"},{"lineNumber":2,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":3,"author":{"gitId":"XXJJXJ"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-09-18"},{"lineNumber":4,"author":{"gitId":"XXJJXJ"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-09-18"},{"lineNumber":5,"author":{"gitId":"XXJJXJ"},"content":"import java.util.List;","lastModifiedDate":"2021-09-18"},{"lineNumber":6,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":7,"author":{"gitId":"XXJJXJ"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2021-09-18"},{"lineNumber":8,"author":{"gitId":"XXJJXJ"},"content":"import seedu.address.model.event.Event;","lastModifiedDate":"2021-09-18"},{"lineNumber":9,"author":{"gitId":"XXJJXJ"},"content":"import seedu.address.model.event.EventDate;","lastModifiedDate":"2021-09-18"},{"lineNumber":10,"author":{"gitId":"XXJJXJ"},"content":"import seedu.address.model.event.EventName;","lastModifiedDate":"2021-09-18"},{"lineNumber":11,"author":{"gitId":"XXJJXJ"},"content":"import seedu.address.model.event.EventTime;","lastModifiedDate":"2021-09-18"},{"lineNumber":12,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":13,"author":{"gitId":"XXJJXJ"},"content":"/**","lastModifiedDate":"2021-09-18"},{"lineNumber":14,"author":{"gitId":"XXJJXJ"},"content":" * An utility class containing a list of {@code Event} objects to be used in tests.","lastModifiedDate":"2021-09-18"},{"lineNumber":15,"author":{"gitId":"XXJJXJ"},"content":" */","lastModifiedDate":"2021-09-18"},{"lineNumber":16,"author":{"gitId":"XXJJXJ"},"content":"public class TypicalEvents {","lastModifiedDate":"2021-09-18"},{"lineNumber":17,"author":{"gitId":"XXJJXJ"},"content":"    public static final Event SAMPLE_EVENT \u003d new Event(new EventName(\"Sleep\"), new EventDate(\"2021-09-18\"),","lastModifiedDate":"2021-09-19"},{"lineNumber":18,"author":{"gitId":"XXJJXJ"},"content":"            new EventTime(\"1000\"));","lastModifiedDate":"2021-09-18"},{"lineNumber":19,"author":{"gitId":"XXJJXJ"},"content":"    public static final Event ANOTHER_EVENT \u003d new Event(new EventName(\"Sleep2\"), new EventDate(\"2021-09-18\"),","lastModifiedDate":"2021-09-19"},{"lineNumber":20,"author":{"gitId":"XXJJXJ"},"content":"            new EventTime(\"1001\"));","lastModifiedDate":"2021-09-19"},{"lineNumber":21,"author":{"gitId":"XXJJXJ"},"content":"    public static final Event SAMPLE_EVENT_COPY_DIFFERENT_TIME \u003d new Event(new EventName(\"Sleep\"),","lastModifiedDate":"2021-09-19"},{"lineNumber":22,"author":{"gitId":"XXJJXJ"},"content":"            new EventDate(\"2021-09-18\"), new EventTime(\"1001\"));","lastModifiedDate":"2021-09-19"},{"lineNumber":23,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":24,"author":{"gitId":"XXJJXJ"},"content":"    private TypicalEvents() {}","lastModifiedDate":"2021-09-18"},{"lineNumber":25,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":26,"author":{"gitId":"XXJJXJ"},"content":"    /**","lastModifiedDate":"2021-09-18"},{"lineNumber":27,"author":{"gitId":"XXJJXJ"},"content":"     * Returns an {@code AddressBook} with all the typical persons.","lastModifiedDate":"2021-09-18"},{"lineNumber":28,"author":{"gitId":"XXJJXJ"},"content":"     */","lastModifiedDate":"2021-09-18"},{"lineNumber":29,"author":{"gitId":"XXJJXJ"},"content":"    public static AddressBook getTypicalAddressBook() {","lastModifiedDate":"2021-09-18"},{"lineNumber":30,"author":{"gitId":"XXJJXJ"},"content":"        AddressBook ab \u003d new AddressBook();","lastModifiedDate":"2021-09-18"},{"lineNumber":31,"author":{"gitId":"XXJJXJ"},"content":"        for (Event event : getTypicalEvents()) {","lastModifiedDate":"2021-09-18"},{"lineNumber":32,"author":{"gitId":"XXJJXJ"},"content":"            ab.addEvent(event);","lastModifiedDate":"2021-09-18"},{"lineNumber":33,"author":{"gitId":"XXJJXJ"},"content":"        }","lastModifiedDate":"2021-09-18"},{"lineNumber":34,"author":{"gitId":"XXJJXJ"},"content":"        return ab;","lastModifiedDate":"2021-09-18"},{"lineNumber":35,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":36,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":37,"author":{"gitId":"XXJJXJ"},"content":"    public static List\u003cEvent\u003e getTypicalEvents() {","lastModifiedDate":"2021-09-18"},{"lineNumber":38,"author":{"gitId":"XXJJXJ"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(SAMPLE_EVENT, ANOTHER_EVENT));","lastModifiedDate":"2021-09-19"},{"lineNumber":39,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":40,"author":{"gitId":"XXJJXJ"},"content":"}","lastModifiedDate":"2021-09-18"}],"authorContributionMap":{"XXJJXJ":40}}]
