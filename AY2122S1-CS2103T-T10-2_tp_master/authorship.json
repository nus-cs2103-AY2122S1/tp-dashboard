[{"path":"README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"XXJJXJ"},"content":"[![CI Status](https://github.com/AY2122S1-CS2103T-T10-2/tp/workflows/Java%20CI/badge.svg)](https://github.com/AY2122S1-CS2103T-T10-2/tp/actions)","lastModifiedDate":"2021-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"![Ui](docs/images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"XXJJXJ"},"content":"**Managera is a desktop application for managing your event details and its corresponding participant credentials.** While it has a GUI, most of the user interactions happen using a CLI (Command Line Interface).","lastModifiedDate":"2021-09-22"},{"lineNumber":6,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":7,"author":{"gitId":"XXJJXJ"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-09-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":"Example usages:","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":10,"author":{"gitId":"XXJJXJ"},"content":"* Add and Delete Events","lastModifiedDate":"2021-09-22"},{"lineNumber":11,"author":{"gitId":"XXJJXJ"},"content":"* Add Participants to Events","lastModifiedDate":"2021-09-22"},{"lineNumber":12,"author":{"gitId":"XXJJXJ"},"content":"* Remove Participants from Events","lastModifiedDate":"2021-09-22"},{"lineNumber":13,"author":{"gitId":"XXJJXJ"},"content":"* List Participants of an Event","lastModifiedDate":"2021-09-22"},{"lineNumber":14,"author":{"gitId":"XXJJXJ"},"content":"* View details of an Event","lastModifiedDate":"2021-09-22"},{"lineNumber":15,"author":{"gitId":"XXJJXJ"},"content":"* Sort Events by Date and Time","lastModifiedDate":"2021-09-22"},{"lineNumber":16,"author":{"gitId":"XXJJXJ"},"content":"* Filter Events by Date and Time","lastModifiedDate":"2021-09-22"},{"lineNumber":17,"author":{"gitId":"XXJJXJ"},"content":"* Find a Participant and view his details","lastModifiedDate":"2021-09-22"},{"lineNumber":18,"author":{"gitId":"XXJJXJ"},"content":"* Mark Event as Done","lastModifiedDate":"2021-09-22"},{"lineNumber":19,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":20,"author":{"gitId":"XXJJXJ"},"content":"* For the detailed documentation of this project, see the **[Managera Product Website](https://ay2122s1-cs2103t-t10-2.github.io/tp/UserGuide.html)**.","lastModifiedDate":"2021-09-25"},{"lineNumber":21,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":22,"author":{"gitId":"XXJJXJ"},"content":"**Acknowledgements**","lastModifiedDate":"2021-09-22"},{"lineNumber":23,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":24,"author":{"gitId":"XXJJXJ"},"content":"* This project is based on the AddressBook-Level3 project created by the [SE-EDU initiative](https://se-education.org).","lastModifiedDate":"2021-09-22"}],"authorContributionMap":{"XXJJXJ":20,"-":4}},{"path":"build.gradle","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2016-08-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00274.0.4\u0027","lastModifiedDate":"2019-02-28"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2016-12-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    id \u0027jacoco\u0027","lastModifiedDate":"2020-08-07"},{"lineNumber":7,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":9,"author":{"gitId":"-"},"content":"mainClassName \u003d \u0027seedu.address.Main\u0027","lastModifiedDate":"2019-02-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"sourceCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":12,"author":{"gitId":"-"},"content":"targetCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    maven { url \u0027https://oss.sonatype.org/content/repositories/snapshots/\u0027 }","lastModifiedDate":"2018-04-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2016-10-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.29\u0027","lastModifiedDate":"2020-05-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-10-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2018-03-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2018-03-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    finalizedBy jacocoTestReport","lastModifiedDate":"2020-08-07"},{"lineNumber":26,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-08-07"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-08-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"task coverage(type: JacocoReport) {","lastModifiedDate":"2020-08-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    sourceDirectories.from files(sourceSets.main.allSource.srcDirs)","lastModifiedDate":"2020-08-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    classDirectories.from files(sourceSets.main.output)","lastModifiedDate":"2020-08-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    executionData.from files(jacocoTestReport.executionData)","lastModifiedDate":"2020-08-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    afterEvaluate {","lastModifiedDate":"2020-08-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        classDirectories.from files(classDirectories.files.collect {","lastModifiedDate":"2020-08-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            fileTree(dir: it, exclude: [\u0027**/*.jar\u0027])","lastModifiedDate":"2020-08-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        })","lastModifiedDate":"2020-08-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    reports {","lastModifiedDate":"2020-08-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        html.enabled \u003d true","lastModifiedDate":"2020-08-07"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        xml.enabled \u003d true","lastModifiedDate":"2020-08-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-03-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    String jUnitVersion \u003d \u00275.4.0\u0027","lastModifiedDate":"2019-02-10"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2019-02-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.core\u0027, name: \u0027jackson-databind\u0027, version: \u00272.7.0\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.datatype\u0027, name: \u0027jackson-datatype-jsr310\u0027, version: \u00272.7.4\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":68,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2016-08-29"},{"lineNumber":69,"author":{"gitId":"lowkangn"},"content":"    archiveName \u003d \u0027managera.jar\u0027","lastModifiedDate":"2021-09-25"},{"lineNumber":70,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"defaultTasks \u0027clean\u0027, \u0027test\u0027","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"-":71,"lowkangn":1}},{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: About Us","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"We are a team based in the [School of Computing, National University of Singapore](http://www.comp.nus.edu.sg).","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"You can reach us at the email `seer[at]comp.nus.edu.sg`","lastModifiedDate":"2020-06-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"## Project team","lastModifiedDate":"2020-06-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"kanjitp"},"content":"### Kan Jitpakdi","lastModifiedDate":"2021-09-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"kanjitp"},"content":"\u003cimg src\u003d\"images/kanjitp.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2021-09-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"kanjitp"},"content":"[[github](https://github.com/kanjitp)]","lastModifiedDate":"2021-09-18"},{"lineNumber":17,"author":{"gitId":"kanjitp"},"content":"[[portfolio](team/kanjitp.md)]","lastModifiedDate":"2021-09-18"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"* Role: Project Advisor","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"kanjitp"},"content":"* Responsibilities: Full Stack","lastModifiedDate":"2021-09-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"lowkangn"},"content":"### Low Kang Ngee","lastModifiedDate":"2021-09-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"lowkangn"},"content":"\u003cimg src\u003d\"images/lowkangn.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2021-09-18"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"lowkangn"},"content":"[[github](http://github.com/lowkangn)]","lastModifiedDate":"2021-09-18"},{"lineNumber":27,"author":{"gitId":"lowkangn"},"content":"[[portfolio](team/lowkangn.md)]","lastModifiedDate":"2021-09-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"lowkangn"},"content":"- Role: Developer","lastModifiedDate":"2021-09-18"},{"lineNumber":30,"author":{"gitId":"lowkangn"},"content":"- Responsibilities: Testing + Deliverables and deadlines","lastModifiedDate":"2021-09-18"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"XXJJXJ"},"content":"### Ye Xinjian","lastModifiedDate":"2021-09-18"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"XXJJXJ"},"content":"\u003cimg src\u003d\"images/xxjjxj.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2021-09-18"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"XXJJXJ"},"content":"[[github](http://github.com/XXJJXJ)] [[portfolio](team/xxjjxj.md)]","lastModifiedDate":"2021-09-18"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":39,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"XXJJXJ"},"content":"* Responsibilities: Documentation + Code Quality","lastModifiedDate":"2021-09-18"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"ntwbruce"},"content":"### Ng Tze Wei Bruce Mitchell","lastModifiedDate":"2021-09-18"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"ntwbruce"},"content":"\u003cimg src\u003d\"images/ntwbruce.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2021-09-18"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"ntwbruce"},"content":"[[github](http://github.com/ntwbruce)]","lastModifiedDate":"2021-09-18"},{"lineNumber":48,"author":{"gitId":"ntwbruce"},"content":"[[portfolio](team/ntwbruce.md)]","lastModifiedDate":"2021-09-18"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"davelowqx"},"content":"- Role: Developer","lastModifiedDate":"2021-09-18"},{"lineNumber":51,"author":{"gitId":"davelowqx"},"content":"- Responsibilities: Dev Ops + Threading","lastModifiedDate":"2021-09-18"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"davelowqx"},"content":"### Dave Low","lastModifiedDate":"2021-09-18"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"davelowqx"},"content":"\u003cimg src\u003d\"images/davelowqx.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2021-09-18"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"davelowqx"},"content":"[[github](http://github.com/davelowqx)]","lastModifiedDate":"2021-09-18"},{"lineNumber":58,"author":{"gitId":"davelowqx"},"content":"[[portfolio](team/davelowqx.md)]","lastModifiedDate":"2021-09-18"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"davelowqx"},"content":"- Role: Businessman","lastModifiedDate":"2021-09-18"},{"lineNumber":61,"author":{"gitId":"davelowqx"},"content":"- Responsibilities: Playing Golf","lastModifiedDate":"2021-09-18"}],"authorContributionMap":{"XXJJXJ":4,"kanjitp":5,"davelowqx":8,"ntwbruce":4,"-":34,"lowkangn":6}},{"path":"docs/DeveloperGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: Developer Guide","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"ntwbruce"},"content":"## Table of Contents","lastModifiedDate":"2021-09-22"},{"lineNumber":6,"author":{"gitId":"ntwbruce"},"content":"- [**Acknowledgements**](#acknowledgements)","lastModifiedDate":"2021-09-22"},{"lineNumber":7,"author":{"gitId":"XXJJXJ"},"content":"- [**Introduction**](#introduction)","lastModifiedDate":"2021-10-02"},{"lineNumber":8,"author":{"gitId":"ntwbruce"},"content":"- [**Setting up, getting started**](#setting-up-getting-started)","lastModifiedDate":"2021-09-22"},{"lineNumber":9,"author":{"gitId":"ntwbruce"},"content":"- [**Design**](#design)","lastModifiedDate":"2021-09-22"},{"lineNumber":10,"author":{"gitId":"ntwbruce"},"content":"    * [Architecture](#architecture)","lastModifiedDate":"2021-09-22"},{"lineNumber":11,"author":{"gitId":"ntwbruce"},"content":"    * [UI component](#ui-component)","lastModifiedDate":"2021-09-22"},{"lineNumber":12,"author":{"gitId":"ntwbruce"},"content":"    * [Logic component](#logic-component)","lastModifiedDate":"2021-09-22"},{"lineNumber":13,"author":{"gitId":"ntwbruce"},"content":"    * [Model component](#model-component)","lastModifiedDate":"2021-09-22"},{"lineNumber":14,"author":{"gitId":"ntwbruce"},"content":"    * [Storage component](#storage-component)","lastModifiedDate":"2021-09-22"},{"lineNumber":15,"author":{"gitId":"ntwbruce"},"content":"    * [Common classes](#common-classes)","lastModifiedDate":"2021-09-22"},{"lineNumber":16,"author":{"gitId":"ntwbruce"},"content":"- [**Implementation**](#implementation)","lastModifiedDate":"2021-09-22"},{"lineNumber":17,"author":{"gitId":"ntwbruce"},"content":"    * [Undo/redo feature](#proposed-undoredo-feature)","lastModifiedDate":"2021-09-22"},{"lineNumber":18,"author":{"gitId":"ntwbruce"},"content":"        + [Proposed implementation](#proposed-implementation)","lastModifiedDate":"2021-09-22"},{"lineNumber":19,"author":{"gitId":"ntwbruce"},"content":"        + [Design considerations](#design-considerations)","lastModifiedDate":"2021-09-22"},{"lineNumber":20,"author":{"gitId":"ntwbruce"},"content":"    * [Data archiving](#proposed-data-archiving)","lastModifiedDate":"2021-09-22"},{"lineNumber":21,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":22,"author":{"gitId":"ntwbruce"},"content":"- [**Documentation, logging, testing, configuration, dev-ops**](#documentation-logging-testing-configuration-dev-ops)","lastModifiedDate":"2021-09-22"},{"lineNumber":23,"author":{"gitId":"ntwbruce"},"content":"- [**Appendix: Requirements**](#appendix-requirements)","lastModifiedDate":"2021-09-22"},{"lineNumber":24,"author":{"gitId":"ntwbruce"},"content":"    * [Product scope](#product-scope)","lastModifiedDate":"2021-09-22"},{"lineNumber":25,"author":{"gitId":"ntwbruce"},"content":"    * [User stories](#user-stories)","lastModifiedDate":"2021-09-22"},{"lineNumber":26,"author":{"gitId":"ntwbruce"},"content":"    * [Use cases](#use-cases)","lastModifiedDate":"2021-09-22"},{"lineNumber":27,"author":{"gitId":"ntwbruce"},"content":"    * [Non-Functional Requirements](#non-functional-requirements)","lastModifiedDate":"2021-09-22"},{"lineNumber":28,"author":{"gitId":"ntwbruce"},"content":"    * [Glossary](#glossary)","lastModifiedDate":"2021-09-22"},{"lineNumber":29,"author":{"gitId":"ntwbruce"},"content":"- [**Appendix: Instructions for manual testing**](#appendix-instructions-for-manual-testing)","lastModifiedDate":"2021-09-22"},{"lineNumber":30,"author":{"gitId":"ntwbruce"},"content":"    * [Launch and shutdown](#launch-and-shutdown)","lastModifiedDate":"2021-09-22"},{"lineNumber":31,"author":{"gitId":"ntwbruce"},"content":"    * [Deleting a person](#deleting-a-person)","lastModifiedDate":"2021-09-22"},{"lineNumber":32,"author":{"gitId":"ntwbruce"},"content":"    * [Saving data](#saving-data)","lastModifiedDate":"2021-09-22"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":36,"author":{"gitId":"-"},"content":"## **Acknowledgements**","lastModifiedDate":"2021-07-30"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":38,"author":{"gitId":"-"},"content":"* {list here sources of all reused/adapted ideas, code, documentation, and third-party libraries -- include links to the original source as well}","lastModifiedDate":"2021-07-30"},{"lineNumber":39,"author":{"gitId":"XXJJXJ"},"content":"* This project is based on the AddressBook-Level3 project created by the [SE-EDU initiative](https://se-education.org).","lastModifiedDate":"2021-10-02"},{"lineNumber":40,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":41,"author":{"gitId":"XXJJXJ"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-10-02"},{"lineNumber":42,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":43,"author":{"gitId":"XXJJXJ"},"content":"## **Introduction**","lastModifiedDate":"2021-10-02"},{"lineNumber":44,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":45,"author":{"gitId":"XXJJXJ"},"content":"Managera is a desktop application for managing your event details and its corresponding participant credentials. While it has a GUI, most of the user interactions happen using a CLI (Command Line Interface).","lastModifiedDate":"2021-10-02"},{"lineNumber":46,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":47,"author":{"gitId":"XXJJXJ"},"content":"* For the detailed documentation of this project, see the **[Managera Product Website](https://ay2122s1-cs2103t-t10-2.github.io/tp/UserGuide.html)**.","lastModifiedDate":"2021-10-02"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":49,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-07-30"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"## **Setting up, getting started**","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"Refer to the guide [_Setting up and getting started_](SettingUp.md).","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"## **Design**","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":":bulb: **Tip:** The `.puml` files used to create diagrams in this document can be found in the [diagrams](https://github.com/se-edu/addressbook-level3/tree/master/docs/diagrams/) folder. Refer to the [_PlantUML Tutorial_ at se-edu/guides](https://se-education.org/guides/tutorials/plantUml.html) to learn how to create and edit diagrams.","lastModifiedDate":"2021-07-31"},{"lineNumber":62,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"### Architecture","lastModifiedDate":"2021-07-31"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureDiagram.png\" width\u003d\"280\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"The ***Architecture Diagram*** given above explains the high-level design of the App.","lastModifiedDate":"2021-07-31"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"Given below is a quick overview of main components and how they interact with each other.","lastModifiedDate":"2021-07-31"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":72,"author":{"gitId":"-"},"content":"**Main components of the architecture**","lastModifiedDate":"2021-07-31"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"**`Main`** has two classes called [`Main`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/Main.java) and [`MainApp`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/MainApp.java). It is responsible for,","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"* At app launch: Initializes the components in the correct sequence, and connects them up with each other.","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"* At shut down: Shuts down the components and invokes cleanup methods where necessary.","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"[**`Commons`**](#common-classes) represents a collection of classes used by multiple other components.","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"The rest of the App consists of four components.","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"* [**`UI`**](#ui-component): The UI of the App.","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"* [**`Logic`**](#logic-component): The command executor.","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"* [**`Model`**](#model-component): Holds the data of the App in memory.","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"* [**`Storage`**](#storage-component): Reads data from, and writes data to, the hard disk.","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"**How the architecture components interact with each other**","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"The *Sequence Diagram* below shows how the components interact with each other for the scenario where the user issues the command `delete 1`.","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureSequenceDiagram.png\" width\u003d\"574\" /\u003e","lastModifiedDate":"2020-06-07"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"Each of the four main components (also shown in the diagram above),","lastModifiedDate":"2021-07-31"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":96,"author":{"gitId":"-"},"content":"* defines its *API* in an `interface` with the same name as the Component.","lastModifiedDate":"2021-07-31"},{"lineNumber":97,"author":{"gitId":"-"},"content":"* implements its functionality using a concrete `{Component Name}Manager` class (which follows the corresponding API `interface` mentioned in the previous point.","lastModifiedDate":"2021-07-31"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":99,"author":{"gitId":"-"},"content":"For example, the `Logic` component defines its API in the `Logic.java` interface and implements its functionality using the `LogicManager.java` class which follows the `Logic` interface. Other components interact with a given component through its interface rather than the concrete class (reason: to prevent outside component\u0027s being coupled to the implementation of a component), as illustrated in the (partial) class diagram below.","lastModifiedDate":"2021-07-31"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":101,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ComponentManagers.png\" width\u003d\"300\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":103,"author":{"gitId":"-"},"content":"The sections below give more details of each component.","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"### UI component","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"The **API** of this component is specified in [`Ui.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/Ui.java)","lastModifiedDate":"2021-07-31"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"![Structure of the UI Component](images/UiClassDiagram.png)","lastModifiedDate":"2021-07-31"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"The UI consists of a `MainWindow` that is made up of parts e.g.`CommandBox`, `ResultDisplay`, `PersonListPanel`, `StatusBarFooter` etc. All these, including the `MainWindow`, inherit from the abstract `UiPart` class which captures the commonalities between classes that represent parts of the visible GUI.","lastModifiedDate":"2021-07-31"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":"The `UI` component uses the JavaFx UI framework. The layout of these UI parts are defined in matching `.fxml` files that are in the `src/main/resources/view` folder. For example, the layout of the [`MainWindow`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/MainWindow.java) is specified in [`MainWindow.fxml`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/resources/view/MainWindow.fxml)","lastModifiedDate":"2021-07-31"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"The `UI` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"* executes user commands using the `Logic` component.","lastModifiedDate":"2021-07-31"},{"lineNumber":118,"author":{"gitId":"-"},"content":"* listens for changes to `Model` data so that the UI can be updated with the modified data.","lastModifiedDate":"2021-07-31"},{"lineNumber":119,"author":{"gitId":"-"},"content":"* keeps a reference to the `Logic` component, because the `UI` relies on the `Logic` to execute commands.","lastModifiedDate":"2021-07-31"},{"lineNumber":120,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component, as it displays `Person` object residing in the `Model`.","lastModifiedDate":"2021-07-31"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"### Logic component","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"**API** : [`Logic.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/logic/Logic.java)","lastModifiedDate":"2021-07-31"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"Here\u0027s a (partial) class diagram of the `Logic` component:","lastModifiedDate":"2021-07-31"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/LogicClassDiagram.png\" width\u003d\"550\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"How the `Logic` component works:","lastModifiedDate":"2021-07-31"},{"lineNumber":131,"author":{"gitId":"-"},"content":"1. When `Logic` is called upon to execute a command, it uses the `AddressBookParser` class to parse the user command.","lastModifiedDate":"2021-07-31"},{"lineNumber":132,"author":{"gitId":"-"},"content":"1. This results in a `Command` object (more precisely, an object of one of its subclasses e.g., `AddCommand`) which is executed by the `LogicManager`.","lastModifiedDate":"2021-07-31"},{"lineNumber":133,"author":{"gitId":"-"},"content":"1. The command can communicate with the `Model` when it is executed (e.g. to add a person).","lastModifiedDate":"2021-07-31"},{"lineNumber":134,"author":{"gitId":"-"},"content":"1. The result of the command execution is encapsulated as a `CommandResult` object which is returned back from `Logic`.","lastModifiedDate":"2021-07-31"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":136,"author":{"gitId":"-"},"content":"The Sequence Diagram below illustrates the interactions within the `Logic` component for the `execute(\"delete 1\")` API call.","lastModifiedDate":"2021-07-31"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":"![Interactions Inside the Logic Component for the `delete 1` Command](images/DeleteSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `DeleteCommandParser` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"Here are the other classes in `Logic` (omitted from the class diagram above) that are used for parsing a user command:","lastModifiedDate":"2021-07-31"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":145,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ParserClasses.png\" width\u003d\"600\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"How the parsing works:","lastModifiedDate":"2021-07-31"},{"lineNumber":148,"author":{"gitId":"-"},"content":"* When called upon to parse a user command, the `AddressBookParser` class creates an `XYZCommandParser` (`XYZ` is a placeholder for the specific command name e.g., `AddCommandParser`) which uses the other classes shown above to parse the user command and create a `XYZCommand` object (e.g., `AddCommand`) which the `AddressBookParser` returns back as a `Command` object.","lastModifiedDate":"2021-07-31"},{"lineNumber":149,"author":{"gitId":"-"},"content":"* All `XYZCommandParser` classes (e.g., `AddCommandParser`, `DeleteCommandParser`, ...) inherit from the `Parser` interface so that they can be treated similarly where possible e.g, during testing.","lastModifiedDate":"2021-07-31"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"### Model component","lastModifiedDate":"2021-07-31"},{"lineNumber":152,"author":{"gitId":"-"},"content":"**API** : [`Model.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/model/Model.java)","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ModelClassDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"The `Model` component,","lastModifiedDate":"2021-07-31"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":"* stores the address book data i.e., all `Person` objects (which are contained in a `UniquePersonList` object).","lastModifiedDate":"2021-07-31"},{"lineNumber":160,"author":{"gitId":"-"},"content":"* stores the currently \u0027selected\u0027 `Person` objects (e.g., results of a search query) as a separate _filtered_ list which is exposed to outsiders as an unmodifiable `ObservableList\u003cPerson\u003e` that can be \u0027observed\u0027 e.g. the UI can be bound to this list so that the UI automatically updates when the data in the list change.","lastModifiedDate":"2021-07-31"},{"lineNumber":161,"author":{"gitId":"-"},"content":"* stores a `UserPref` object that represents the user’s preferences. This is exposed to the outside as a `ReadOnlyUserPref` objects.","lastModifiedDate":"2021-07-31"},{"lineNumber":162,"author":{"gitId":"-"},"content":"* does not depend on any of the other three components (as the `Model` represents data entities of the domain, they should make sense on their own without depending on other components)","lastModifiedDate":"2021-07-31"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":164,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** An alternative (arguably, a more OOP) model is given below. It has a `Tag` list in the `AddressBook`, which `Person` references. This allows `AddressBook` to only require one `Tag` object per unique tag, instead of each `Person` needing their own `Tag` objects.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":166,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/BetterModelClassDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"### Storage component","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"**API** : [`Storage.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/storage/Storage.java)","lastModifiedDate":"2020-05-23"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":175,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/StorageClassDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":177,"author":{"gitId":"-"},"content":"The `Storage` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":178,"author":{"gitId":"-"},"content":"* can save both address book data and user preference data in json format, and read them back into corresponding objects.","lastModifiedDate":"2021-07-31"},{"lineNumber":179,"author":{"gitId":"-"},"content":"* inherits from both `AddressBookStorage` and `UserPrefStorage`, which means it can be treated as either one (if only the functionality of only one is needed).","lastModifiedDate":"2021-07-31"},{"lineNumber":180,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component (because the `Storage` component\u0027s job is to save/retrieve objects that belong to the `Model`)","lastModifiedDate":"2021-07-21"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"### Common classes","lastModifiedDate":"2020-05-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"Classes used by multiple components are in the `seedu.addressbook.commons` package.","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":186,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":188,"author":{"gitId":"-"},"content":"## **Implementation**","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"This section describes some noteworthy details on how certain features are implemented.","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Undo/redo feature","lastModifiedDate":"2020-06-07"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"#### Proposed Implementation","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"The proposed undo/redo mechanism is facilitated by `VersionedAddressBook`. It extends `AddressBook` with an undo/redo history, stored internally as an `addressBookStateList` and `currentStatePointer`. Additionally, it implements the following operations:","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#commit()` — Saves the current address book state in its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#undo()` — Restores the previous address book state from its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#redo()` — Restores a previously undone address book state from its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"These operations are exposed in the `Model` interface as `Model#commitAddressBook()`, `Model#undoAddressBook()` and `Model#redoAddressBook()` respectively.","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":204,"author":{"gitId":"-"},"content":"Given below is an example usage scenario and how the undo/redo mechanism behaves at each step.","lastModifiedDate":"2020-05-23"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":206,"author":{"gitId":"-"},"content":"Step 1. The user launches the application for the first time. The `VersionedAddressBook` will be initialized with the initial address book state, and the `currentStatePointer` pointing to that single address book state.","lastModifiedDate":"2020-05-23"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":208,"author":{"gitId":"-"},"content":"![UndoRedoState0](images/UndoRedoState0.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":210,"author":{"gitId":"-"},"content":"Step 2. The user executes `delete 5` command to delete the 5th person in the address book. The `delete` command calls `Model#commitAddressBook()`, causing the modified state of the address book after the `delete 5` command executes to be saved in the `addressBookStateList`, and the `currentStatePointer` is shifted to the newly inserted address book state.","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":212,"author":{"gitId":"-"},"content":"![UndoRedoState1](images/UndoRedoState1.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"Step 3. The user executes `add n/David …​` to add a new person. The `add` command also calls `Model#commitAddressBook()`, causing another modified address book state to be saved into the `addressBookStateList`.","lastModifiedDate":"2020-05-23"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":216,"author":{"gitId":"-"},"content":"![UndoRedoState2](images/UndoRedoState2.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If a command fails its execution, it will not call `Model#commitAddressBook()`, so the address book state will not be saved into the `addressBookStateList`.","lastModifiedDate":"2020-05-23"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":220,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":221,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":222,"author":{"gitId":"-"},"content":"Step 4. The user now decides that adding the person was a mistake, and decides to undo that action by executing the `undo` command. The `undo` command will call `Model#undoAddressBook()`, which will shift the `currentStatePointer` once to the left, pointing it to the previous address book state, and restores the address book to that state.","lastModifiedDate":"2020-05-23"},{"lineNumber":223,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":224,"author":{"gitId":"-"},"content":"![UndoRedoState3](images/UndoRedoState3.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":226,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currentStatePointer` is at index 0, pointing to the initial AddressBook state, then there are no previous AddressBook states to restore. The `undo` command uses `Model#canUndoAddressBook()` to check if this is the case. If so, it will return an error to the user rather","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"than attempting to perform the undo.","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":229,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"The following sequence diagram shows how the undo operation works:","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"-"},"content":"![UndoSequenceDiagram](images/UndoSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":235,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `UndoCommand` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":238,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"The `redo` command does the opposite — it calls `Model#redoAddressBook()`, which shifts the `currentStatePointer` once to the right, pointing to the previously undone state, and restores the address book to that state.","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currentStatePointer` is at index `addressBookStateList.size() - 1`, pointing to the latest address book state, then there are no undone AddressBook states to restore. The `redo` command uses `Model#canRedoAddressBook()` to check if this is the case. If so, it will return an error to the user rather than attempting to perform the redo.","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":244,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":245,"author":{"gitId":"-"},"content":"Step 5. The user then decides to execute the command `list`. Commands that do not modify the address book, such as `list`, will usually not call `Model#commitAddressBook()`, `Model#undoAddressBook()` or `Model#redoAddressBook()`. Thus, the `addressBookStateList` remains unchanged.","lastModifiedDate":"2020-05-23"},{"lineNumber":246,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":247,"author":{"gitId":"-"},"content":"![UndoRedoState4](images/UndoRedoState4.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":248,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":249,"author":{"gitId":"-"},"content":"Step 6. The user executes `clear`, which calls `Model#commitAddressBook()`. Since the `currentStatePointer` is not pointing at the end of the `addressBookStateList`, all address book states after the `currentStatePointer` will be purged. Reason: It no longer makes sense to redo the `add n/David …​` command. This is the behavior that most modern desktop applications follow.","lastModifiedDate":"2020-05-23"},{"lineNumber":250,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":251,"author":{"gitId":"-"},"content":"![UndoRedoState5](images/UndoRedoState5.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":252,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":253,"author":{"gitId":"-"},"content":"The following activity diagram summarizes what happens when a user executes a new command:","lastModifiedDate":"2020-05-23"},{"lineNumber":254,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":255,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/CommitActivityDiagram.png\" width\u003d\"250\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":256,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":257,"author":{"gitId":"-"},"content":"#### Design considerations:","lastModifiedDate":"2021-07-31"},{"lineNumber":258,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":259,"author":{"gitId":"-"},"content":"**Aspect: How undo \u0026 redo executes:**","lastModifiedDate":"2021-07-31"},{"lineNumber":260,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":261,"author":{"gitId":"-"},"content":"* **Alternative 1 (current choice):** Saves the entire address book.","lastModifiedDate":"2020-05-23"},{"lineNumber":262,"author":{"gitId":"-"},"content":"  * Pros: Easy to implement.","lastModifiedDate":"2020-05-23"},{"lineNumber":263,"author":{"gitId":"-"},"content":"  * Cons: May have performance issues in terms of memory usage.","lastModifiedDate":"2020-05-23"},{"lineNumber":264,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":265,"author":{"gitId":"-"},"content":"* **Alternative 2:** Individual command knows how to undo/redo by","lastModifiedDate":"2020-05-23"},{"lineNumber":266,"author":{"gitId":"-"},"content":"  itself.","lastModifiedDate":"2020-05-23"},{"lineNumber":267,"author":{"gitId":"-"},"content":"  * Pros: Will use less memory (e.g. for `delete`, just save the person being deleted).","lastModifiedDate":"2020-05-23"},{"lineNumber":268,"author":{"gitId":"-"},"content":"  * Cons: We must ensure that the implementation of each individual command are correct.","lastModifiedDate":"2020-05-23"},{"lineNumber":269,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":270,"author":{"gitId":"-"},"content":"_{more aspects and alternatives to be added}_","lastModifiedDate":"2020-05-23"},{"lineNumber":271,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":272,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Data archiving","lastModifiedDate":"2020-05-23"},{"lineNumber":273,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":274,"author":{"gitId":"-"},"content":"_{Explain here how the data archiving feature will be implemented}_","lastModifiedDate":"2020-05-23"},{"lineNumber":275,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":276,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":277,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":278,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":279,"author":{"gitId":"-"},"content":"## **Documentation, logging, testing, configuration, dev-ops**","lastModifiedDate":"2020-06-07"},{"lineNumber":280,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":281,"author":{"gitId":"-"},"content":"* [Documentation guide](Documentation.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":282,"author":{"gitId":"-"},"content":"* [Testing guide](Testing.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":283,"author":{"gitId":"-"},"content":"* [Logging guide](Logging.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":284,"author":{"gitId":"-"},"content":"* [Configuration guide](Configuration.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":285,"author":{"gitId":"-"},"content":"* [DevOps guide](DevOps.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":286,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":287,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":288,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":289,"author":{"gitId":"-"},"content":"## **Appendix: Requirements**","lastModifiedDate":"2020-05-23"},{"lineNumber":290,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":291,"author":{"gitId":"-"},"content":"### Product scope","lastModifiedDate":"2020-05-23"},{"lineNumber":292,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":293,"author":{"gitId":"-"},"content":"**Target user profile**:","lastModifiedDate":"2020-05-23"},{"lineNumber":294,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":295,"author":{"gitId":"lowkangn"},"content":"* has a need to manage a significant number of events and contacts","lastModifiedDate":"2021-09-18"},{"lineNumber":296,"author":{"gitId":"-"},"content":"* prefer desktop apps over other types","lastModifiedDate":"2020-05-23"},{"lineNumber":297,"author":{"gitId":"-"},"content":"* can type fast","lastModifiedDate":"2020-05-23"},{"lineNumber":298,"author":{"gitId":"-"},"content":"* prefers typing to mouse interactions","lastModifiedDate":"2020-05-26"},{"lineNumber":299,"author":{"gitId":"-"},"content":"* is reasonably comfortable using CLI apps","lastModifiedDate":"2020-05-23"},{"lineNumber":300,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":301,"author":{"gitId":"lowkangn"},"content":"**Value proposition**: manage events and event participants faster than a typical mouse/GUI driven app","lastModifiedDate":"2021-09-18"},{"lineNumber":302,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":303,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":304,"author":{"gitId":"-"},"content":"### User stories","lastModifiedDate":"2020-06-07"},{"lineNumber":305,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":306,"author":{"gitId":"-"},"content":"Priorities: High (must have) - `* * *`, Medium (nice to have) - `* *`, Low (unlikely to have) - `*`","lastModifiedDate":"2020-05-23"},{"lineNumber":307,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":308,"author":{"gitId":"-"},"content":"| Priority | As a …​                                    | I want to …​                     | So that I can…​                                                          |","lastModifiedDate":"2020-05-23"},{"lineNumber":309,"author":{"gitId":"lowkangn"},"content":"| -------- | ------------------------------------------- | ---------------------------------- | ------------------------------------------------------------------------------ |","lastModifiedDate":"2021-09-18"},{"lineNumber":310,"author":{"gitId":"lowkangn"},"content":"| `* * *`  | Event organiser                             | add an upcoming event to my list   | keep track of the details of all events I will be organising                   |","lastModifiedDate":"2021-09-18"},{"lineNumber":311,"author":{"gitId":"lowkangn"},"content":"| `* * *`  | Event organiser                             | add a participant to an event      | keep track of the participants for an event                                    |","lastModifiedDate":"2021-09-18"},{"lineNumber":312,"author":{"gitId":"lowkangn"},"content":"| `* * *`  | Event organiser with many concluded events  | delete events from my list         | keep my list of events tidy                                                    |","lastModifiedDate":"2021-09-18"},{"lineNumber":313,"author":{"gitId":"lowkangn"},"content":"| `* * *`  | Event organiser                             | remove a participant from an event | maintain an accurate list of participants attending the event                  |","lastModifiedDate":"2021-09-18"},{"lineNumber":314,"author":{"gitId":"lowkangn"},"content":"| `* * *`  | Event organiser that has concluded an event | mark the event as done             | safely ignore events in my list that have already passed                       |","lastModifiedDate":"2021-09-18"},{"lineNumber":315,"author":{"gitId":"lowkangn"},"content":"| `* *`    | Event organiser with many events            | sort events by date and time       | keep track of which events occur when and prepare accordingly                  |","lastModifiedDate":"2021-09-18"},{"lineNumber":316,"author":{"gitId":"lowkangn"},"content":"| `*`      | Event organiser with many participants      | find a participant by name         | I can contact the participant to inform him of updates or changes to the event |","lastModifiedDate":"2021-09-22"},{"lineNumber":317,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":318,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":319,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":320,"author":{"gitId":"-"},"content":"### Use cases","lastModifiedDate":"2020-06-07"},{"lineNumber":321,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":322,"author":{"gitId":"ntwbruce"},"content":"(For all use cases below, the **System** is `Managera` and the **Actor** is an `Event Organiser`, unless specified otherwise)","lastModifiedDate":"2021-09-20"},{"lineNumber":323,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":324,"author":{"gitId":"ntwbruce"},"content":"**Use case: UC01 - Add an Event**","lastModifiedDate":"2021-09-20"},{"lineNumber":325,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":326,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2020-05-23"},{"lineNumber":327,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":328,"author":{"gitId":"XXJJXJ"},"content":"1.  Event Organiser requests to add an Event.","lastModifiedDate":"2021-10-02"},{"lineNumber":329,"author":{"gitId":"ntwbruce"},"content":"2.  Managera adds the new Event with the given name and date to its Event list.","lastModifiedDate":"2021-09-20"},{"lineNumber":330,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":331,"author":{"gitId":"-"},"content":"    Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":332,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":333,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2020-05-23"},{"lineNumber":334,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":335,"author":{"gitId":"XXJJXJ"},"content":"* 1a. Managera detects missing details required for adding an Event.","lastModifiedDate":"2021-10-02"},{"lineNumber":336,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":337,"author":{"gitId":"ntwbruce"},"content":"    * 1a1. Managera shows an error message citing missing parameters.","lastModifiedDate":"2021-09-20"},{"lineNumber":338,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":339,"author":{"gitId":"ntwbruce"},"content":"      Use case resumes at step 1.","lastModifiedDate":"2021-09-20"},{"lineNumber":340,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":341,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":342,"author":{"gitId":"ntwbruce"},"content":"**Use case: UC02 - Add Participant to Event**","lastModifiedDate":"2021-09-22"},{"lineNumber":343,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":344,"author":{"gitId":"ntwbruce"},"content":"Preconditions: At least one Event and one Participant have been added to Managera.","lastModifiedDate":"2021-09-22"},{"lineNumber":345,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":346,"author":{"gitId":"ntwbruce"},"content":"**MSS**","lastModifiedDate":"2021-09-22"},{"lineNumber":347,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":348,"author":{"gitId":"XXJJXJ"},"content":"1.  Event Organiser requests to add a Participant to an Event.","lastModifiedDate":"2021-10-02"},{"lineNumber":349,"author":{"gitId":"XXJJXJ"},"content":"2.  Managera adds the Participant to the specified Event.","lastModifiedDate":"2021-10-02"},{"lineNumber":350,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":351,"author":{"gitId":"ntwbruce"},"content":"    Use case ends.","lastModifiedDate":"2021-09-22"},{"lineNumber":352,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":353,"author":{"gitId":"ntwbruce"},"content":"**Extensions**","lastModifiedDate":"2021-09-22"},{"lineNumber":354,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":355,"author":{"gitId":"XXJJXJ"},"content":"* 1a. Managera detects missing details required for adding a Participant to an Event.","lastModifiedDate":"2021-10-02"},{"lineNumber":356,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":357,"author":{"gitId":"ntwbruce"},"content":"    * 1a1. Managera shows an error message citing missing parameters.","lastModifiedDate":"2021-09-22"},{"lineNumber":358,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":359,"author":{"gitId":"ntwbruce"},"content":"      Use case resumes at step 1.","lastModifiedDate":"2021-09-22"},{"lineNumber":360,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":361,"author":{"gitId":"XXJJXJ"},"content":"* 1b. Managera cannot find the Participant.","lastModifiedDate":"2021-10-02"},{"lineNumber":362,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":363,"author":{"gitId":"ntwbruce"},"content":"    * 1b1. Managera shows an error message stating that the given ID does not correspond to an existing Participant.","lastModifiedDate":"2021-09-22"},{"lineNumber":364,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":365,"author":{"gitId":"ntwbruce"},"content":"      Use case resumes at step 1.","lastModifiedDate":"2021-09-22"},{"lineNumber":366,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":367,"author":{"gitId":"XXJJXJ"},"content":"* 1c. Managera could not find the Event.","lastModifiedDate":"2021-10-02"},{"lineNumber":368,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":369,"author":{"gitId":"ntwbruce"},"content":"    * 1c1. Managera shows an error message stating that the given name does not correspond to an existing Event.","lastModifiedDate":"2021-09-22"},{"lineNumber":370,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":371,"author":{"gitId":"ntwbruce"},"content":"      Use case resumes at step 1.","lastModifiedDate":"2021-09-22"},{"lineNumber":372,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":373,"author":{"gitId":"ntwbruce"},"content":"**Use case: UC03 - Remove an Event**","lastModifiedDate":"2021-09-22"},{"lineNumber":374,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":375,"author":{"gitId":"ntwbruce"},"content":"Preconditions: At least one Event has been added to Managera.","lastModifiedDate":"2021-09-22"},{"lineNumber":376,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":377,"author":{"gitId":"ntwbruce"},"content":"**MSS**","lastModifiedDate":"2021-09-20"},{"lineNumber":378,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":379,"author":{"gitId":"XXJJXJ"},"content":"1.  Event Organiser requests to remove an Event.","lastModifiedDate":"2021-10-02"},{"lineNumber":380,"author":{"gitId":"XXJJXJ"},"content":"2.  Managera removes the Event from its Event list.","lastModifiedDate":"2021-10-02"},{"lineNumber":381,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":382,"author":{"gitId":"ntwbruce"},"content":"    Use case ends.","lastModifiedDate":"2021-09-20"},{"lineNumber":383,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":384,"author":{"gitId":"ntwbruce"},"content":"**Extensions**","lastModifiedDate":"2021-09-20"},{"lineNumber":385,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":386,"author":{"gitId":"XXJJXJ"},"content":"* 1a. Managera could not find the specified Event.","lastModifiedDate":"2021-10-02"},{"lineNumber":387,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":388,"author":{"gitId":"XXJJXJ"},"content":"    * 1a1. Managera shows an error message.","lastModifiedDate":"2021-10-02"},{"lineNumber":389,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":390,"author":{"gitId":"ntwbruce"},"content":"      Use case resumes at step 1.","lastModifiedDate":"2021-09-20"},{"lineNumber":391,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":392,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":393,"author":{"gitId":"ntwbruce"},"content":"**Use case: UC04 - Remove Participant from Event**","lastModifiedDate":"2021-09-22"},{"lineNumber":394,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":395,"author":{"gitId":"ntwbruce"},"content":"Preconditions: At least one Event and one Participant have been added to Managera. ","lastModifiedDate":"2021-09-22"},{"lineNumber":396,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":397,"author":{"gitId":"ntwbruce"},"content":"**MSS**","lastModifiedDate":"2021-09-22"},{"lineNumber":398,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":399,"author":{"gitId":"XXJJXJ"},"content":"1.  Event Organiser requests to remove a Participant from an Event.","lastModifiedDate":"2021-10-02"},{"lineNumber":400,"author":{"gitId":"XXJJXJ"},"content":"2.  Managera removes the Participant from the specified Event.","lastModifiedDate":"2021-10-02"},{"lineNumber":401,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":402,"author":{"gitId":"ntwbruce"},"content":"    Use case ends.","lastModifiedDate":"2021-09-20"},{"lineNumber":403,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":404,"author":{"gitId":"ntwbruce"},"content":"**Extensions**","lastModifiedDate":"2021-09-22"},{"lineNumber":405,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":406,"author":{"gitId":"XXJJXJ"},"content":"* 1a. Managera could not find the Participant.","lastModifiedDate":"2021-10-02"},{"lineNumber":407,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":408,"author":{"gitId":"XXJJXJ"},"content":"    * 1a1. Managera shows an error message stating that the Participant does not exist.","lastModifiedDate":"2021-10-02"},{"lineNumber":409,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":410,"author":{"gitId":"ntwbruce"},"content":"      Use case resumes at step 1.","lastModifiedDate":"2021-09-22"},{"lineNumber":411,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":412,"author":{"gitId":"XXJJXJ"},"content":"* 1b. Managera could not find the Event.","lastModifiedDate":"2021-10-02"},{"lineNumber":413,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":414,"author":{"gitId":"ntwbruce"},"content":"    * 1b1. Managera shows an error message stating that the given name does not correspond to an existing Event.","lastModifiedDate":"2021-09-22"},{"lineNumber":415,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":416,"author":{"gitId":"ntwbruce"},"content":"      Use case resumes at step 1.","lastModifiedDate":"2021-09-22"},{"lineNumber":417,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":418,"author":{"gitId":"XXJJXJ"},"content":"* 1c. Managera could not find the Participant in the specified Event.","lastModifiedDate":"2021-10-02"},{"lineNumber":419,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":420,"author":{"gitId":"ntwbruce"},"content":"    * 1c1. Managera shows an error message stating that the Participant is not taking part in the given Event.","lastModifiedDate":"2021-09-22"},{"lineNumber":421,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":422,"author":{"gitId":"ntwbruce"},"content":"      Use case resumes at step 1.","lastModifiedDate":"2021-09-22"},{"lineNumber":423,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":424,"author":{"gitId":"ntwbruce"},"content":"**Use case: UC05 - Mark Event as done**","lastModifiedDate":"2021-09-22"},{"lineNumber":425,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":426,"author":{"gitId":"ntwbruce"},"content":"Preconditions: At least one Event has been added to Managera.","lastModifiedDate":"2021-09-22"},{"lineNumber":427,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":428,"author":{"gitId":"ntwbruce"},"content":"**MSS**","lastModifiedDate":"2021-09-20"},{"lineNumber":429,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":430,"author":{"gitId":"XXJJXJ"},"content":"1.  Event Organiser requests to mark an Event as done.","lastModifiedDate":"2021-10-02"},{"lineNumber":431,"author":{"gitId":"XXJJXJ"},"content":"2.  Managera marks the Event in its Event list as done.","lastModifiedDate":"2021-10-02"},{"lineNumber":432,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":433,"author":{"gitId":"ntwbruce"},"content":"    Use case ends.","lastModifiedDate":"2021-09-20"},{"lineNumber":434,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":435,"author":{"gitId":"ntwbruce"},"content":"**Extensions**","lastModifiedDate":"2021-09-20"},{"lineNumber":436,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":437,"author":{"gitId":"XXJJXJ"},"content":"* 1a. Managera detects missing details required to mark event as done.","lastModifiedDate":"2021-10-02"},{"lineNumber":438,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":439,"author":{"gitId":"ntwbruce"},"content":"    * 1a1. Managera shows an error message citing missing parameter.","lastModifiedDate":"2021-09-20"},{"lineNumber":440,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":441,"author":{"gitId":"ntwbruce"},"content":"      Use case resumes at step 1.","lastModifiedDate":"2021-09-20"},{"lineNumber":442,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":443,"author":{"gitId":"XXJJXJ"},"content":"* 1b. Managera could not find the Event.","lastModifiedDate":"2021-10-02"},{"lineNumber":444,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":445,"author":{"gitId":"ntwbruce"},"content":"    * 1b1. Managera shows an error message stating that the given name does not correspond to an existing Event.","lastModifiedDate":"2021-09-20"},{"lineNumber":446,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":447,"author":{"gitId":"ntwbruce"},"content":"      Use case resumes at step 1.","lastModifiedDate":"2021-09-20"},{"lineNumber":448,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":449,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":450,"author":{"gitId":"ntwbruce"},"content":"**Use case: UC06 - Sort Events by time**","lastModifiedDate":"2021-09-22"},{"lineNumber":451,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":452,"author":{"gitId":"ntwbruce"},"content":"Preconditions: At least one Event has been added to Managera.","lastModifiedDate":"2021-09-22"},{"lineNumber":453,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":454,"author":{"gitId":"ntwbruce"},"content":"**MSS**","lastModifiedDate":"2021-09-20"},{"lineNumber":455,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":456,"author":{"gitId":"XXJJXJ"},"content":"1.  Event Organiser requests to sort the current list of Events by time.","lastModifiedDate":"2021-10-02"},{"lineNumber":457,"author":{"gitId":"ntwbruce"},"content":"2.  Managera sorts the list of Events in chronological order and displays the list.","lastModifiedDate":"2021-09-20"},{"lineNumber":458,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":459,"author":{"gitId":"ntwbruce"},"content":"    Use case ends.","lastModifiedDate":"2021-09-20"},{"lineNumber":460,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":461,"author":{"gitId":"ntwbruce"},"content":"**Use case: UC07 - Find Participant and access details**","lastModifiedDate":"2021-09-22"},{"lineNumber":462,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":463,"author":{"gitId":"ntwbruce"},"content":"**Preconditions: At least one Participant has been added to Managera.**","lastModifiedDate":"2021-09-22"},{"lineNumber":464,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":465,"author":{"gitId":"ntwbruce"},"content":"**MSS**","lastModifiedDate":"2021-09-20"},{"lineNumber":466,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":467,"author":{"gitId":"XXJJXJ"},"content":"1. Event Organiser requests Participant details.","lastModifiedDate":"2021-10-02"},{"lineNumber":468,"author":{"gitId":"ntwbruce"},"content":"2. Managera displays the details of all Participants with the given name.","lastModifiedDate":"2021-09-22"},{"lineNumber":469,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":470,"author":{"gitId":"ntwbruce"},"content":"    Use case ends.","lastModifiedDate":"2021-09-20"},{"lineNumber":471,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":472,"author":{"gitId":"XXJJXJ"},"content":"**Extensions**","lastModifiedDate":"2021-10-02"},{"lineNumber":473,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":474,"author":{"gitId":"XXJJXJ"},"content":"* 1a. Managera detects missing details for access to Participant\u0027s details.","lastModifiedDate":"2021-10-02"},{"lineNumber":475,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":476,"author":{"gitId":"XXJJXJ"},"content":"    * 1a1. Managera shows an error message citing missing parameters.","lastModifiedDate":"2021-10-02"},{"lineNumber":477,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":478,"author":{"gitId":"XXJJXJ"},"content":"      Use case resumes at step 1.","lastModifiedDate":"2021-10-02"},{"lineNumber":479,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":480,"author":{"gitId":"XXJJXJ"},"content":"* 1b. Managera could not find the Participant.","lastModifiedDate":"2021-10-02"},{"lineNumber":481,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":482,"author":{"gitId":"XXJJXJ"},"content":"    * 1b1. Managera shows an error message stating that the Participant does not exist.","lastModifiedDate":"2021-10-02"},{"lineNumber":483,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":484,"author":{"gitId":"XXJJXJ"},"content":"      Use case resumes at step 1.","lastModifiedDate":"2021-10-02"},{"lineNumber":485,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":486,"author":{"gitId":"ntwbruce"},"content":"**Use case: UC08 - Filter Events by date**","lastModifiedDate":"2021-09-22"},{"lineNumber":487,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":488,"author":{"gitId":"ntwbruce"},"content":"Preconditions: At least one Event has been added to Managera.","lastModifiedDate":"2021-09-22"},{"lineNumber":489,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":490,"author":{"gitId":"ntwbruce"},"content":"**MSS**","lastModifiedDate":"2021-09-20"},{"lineNumber":491,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":492,"author":{"gitId":"ntwbruce"},"content":"1.  Event Organiser requests to filter Events from the current list of Events that take place on a specified date.","lastModifiedDate":"2021-09-22"},{"lineNumber":493,"author":{"gitId":"ntwbruce"},"content":"2.  Managera finds the Events that take place on the given date and displays them in a list.","lastModifiedDate":"2021-09-22"},{"lineNumber":494,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":495,"author":{"gitId":"ntwbruce"},"content":"    Use case ends.","lastModifiedDate":"2021-09-20"},{"lineNumber":496,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":497,"author":{"gitId":"ntwbruce"},"content":"**Extensions**","lastModifiedDate":"2021-09-20"},{"lineNumber":498,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":499,"author":{"gitId":"ntwbruce"},"content":"* 1a. Event Organiser omits date parameter required for filtering Events.","lastModifiedDate":"2021-09-22"},{"lineNumber":500,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":501,"author":{"gitId":"ntwbruce"},"content":"    * 1a1. Managera shows an error message citing missing parameter.","lastModifiedDate":"2021-09-22"},{"lineNumber":502,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":503,"author":{"gitId":"ntwbruce"},"content":"      Use case resumes at step 1.","lastModifiedDate":"2021-09-22"},{"lineNumber":504,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":505,"author":{"gitId":"ntwbruce"},"content":"**Use case: UC09 - Show Event details**","lastModifiedDate":"2021-09-22"},{"lineNumber":506,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":507,"author":{"gitId":"ntwbruce"},"content":"Preconditions: At least one Event has been added to Managera.","lastModifiedDate":"2021-09-22"},{"lineNumber":508,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":509,"author":{"gitId":"ntwbruce"},"content":"**MSS**","lastModifiedDate":"2021-09-20"},{"lineNumber":510,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":511,"author":{"gitId":"ntwbruce"},"content":"1.  Event Organiser requests Event details, specifying an Event name.","lastModifiedDate":"2021-09-22"},{"lineNumber":512,"author":{"gitId":"ntwbruce"},"content":"2.  Managera displays the details of the Event with the given name.","lastModifiedDate":"2021-09-22"},{"lineNumber":513,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":514,"author":{"gitId":"ntwbruce"},"content":"    Use case ends.","lastModifiedDate":"2021-09-20"},{"lineNumber":515,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":516,"author":{"gitId":"ntwbruce"},"content":"**Extensions**","lastModifiedDate":"2021-09-20"},{"lineNumber":517,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":518,"author":{"gitId":"XXJJXJ"},"content":"* 1a. Managera detects missing details for showing Event details.","lastModifiedDate":"2021-10-02"},{"lineNumber":519,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":520,"author":{"gitId":"ntwbruce"},"content":"    * 1a1. Managera shows an error message citing missing parameter.","lastModifiedDate":"2021-09-22"},{"lineNumber":521,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":522,"author":{"gitId":"ntwbruce"},"content":"      Use case resumes at step 1.","lastModifiedDate":"2021-09-22"},{"lineNumber":523,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":524,"author":{"gitId":"XXJJXJ"},"content":"* 1b. Managera could not find the Event.","lastModifiedDate":"2021-10-02"},{"lineNumber":525,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":526,"author":{"gitId":"ntwbruce"},"content":"    * 1b1. Managera shows an error message stating that the given name does not correspond to an existing Event.","lastModifiedDate":"2021-09-20"},{"lineNumber":527,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":528,"author":{"gitId":"ntwbruce"},"content":"      Use case resumes at step 1.","lastModifiedDate":"2021-09-22"},{"lineNumber":529,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":530,"author":{"gitId":"ntwbruce"},"content":"**Use case: UC10 - Show Event Participants**","lastModifiedDate":"2021-09-22"},{"lineNumber":531,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":532,"author":{"gitId":"ntwbruce"},"content":"Preconditions: At least one Event has been added to Managera.","lastModifiedDate":"2021-09-22"},{"lineNumber":533,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":534,"author":{"gitId":"ntwbruce"},"content":"**MSS**","lastModifiedDate":"2021-09-20"},{"lineNumber":535,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":536,"author":{"gitId":"XXJJXJ"},"content":"1.  Event Organiser requests a list of Event Participants of a specific event.","lastModifiedDate":"2021-10-02"},{"lineNumber":537,"author":{"gitId":"XXJJXJ"},"content":"2.  Managera displays the list of Participants of the Event.","lastModifiedDate":"2021-10-02"},{"lineNumber":538,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":539,"author":{"gitId":"ntwbruce"},"content":"    Use case ends.","lastModifiedDate":"2021-09-20"},{"lineNumber":540,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":541,"author":{"gitId":"ntwbruce"},"content":"**Extensions**","lastModifiedDate":"2021-09-22"},{"lineNumber":542,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":543,"author":{"gitId":"XXJJXJ"},"content":"* 1a. Managera detects missing details to show Event participants.","lastModifiedDate":"2021-10-02"},{"lineNumber":544,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":545,"author":{"gitId":"ntwbruce"},"content":"    * 1a1. Managera shows an error message citing missing parameter.","lastModifiedDate":"2021-09-22"},{"lineNumber":546,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":547,"author":{"gitId":"ntwbruce"},"content":"      Use case resumes at step 1.","lastModifiedDate":"2021-09-22"},{"lineNumber":548,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":549,"author":{"gitId":"XXJJXJ"},"content":"* 1b. Managera could not find the Event.","lastModifiedDate":"2021-10-02"},{"lineNumber":550,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":551,"author":{"gitId":"ntwbruce"},"content":"    * 1b1. Managera shows an error message stating that the given name does not correspond to an existing Event.","lastModifiedDate":"2021-09-22"},{"lineNumber":552,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":553,"author":{"gitId":"ntwbruce"},"content":"      Use case resumes at step 1.","lastModifiedDate":"2021-09-22"},{"lineNumber":554,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":555,"author":{"gitId":"-"},"content":"### Non-Functional Requirements","lastModifiedDate":"2020-05-23"},{"lineNumber":556,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":557,"author":{"gitId":"-"},"content":"1.  Should work on any _mainstream OS_ as long as it has Java `11` or above installed.","lastModifiedDate":"2020-05-23"},{"lineNumber":558,"author":{"gitId":"-"},"content":"2.  Should be able to hold up to 1000 persons without a noticeable sluggishness in performance for typical usage. ","lastModifiedDate":"2020-05-23"},{"lineNumber":559,"author":{"gitId":"lowkangn"},"content":"3.  Should be able to hold up to 100 events without a noticeable sluggishness in performance for typical usage.","lastModifiedDate":"2021-09-22"},{"lineNumber":560,"author":{"gitId":"lowkangn"},"content":"4.  A user with above average typing speed for regular English text (i.e. not code, not system admin commands) should be able to accomplish most of the tasks faster using commands than using the mouse.","lastModifiedDate":"2021-09-22"},{"lineNumber":561,"author":{"gitId":"lowkangn"},"content":"5.  Should work without having to use an installer or compiler.","lastModifiedDate":"2021-09-22"},{"lineNumber":562,"author":{"gitId":"lowkangn"},"content":"6.  Should work without requiring an internet connection.","lastModifiedDate":"2021-09-22"},{"lineNumber":563,"author":{"gitId":"lowkangn"},"content":"7.  Saved data should be kept in a single file to allow for easy transfer to a different device.","lastModifiedDate":"2021-09-22"},{"lineNumber":564,"author":{"gitId":"lowkangn"},"content":"8.  The system should respond within two seconds.","lastModifiedDate":"2021-09-22"},{"lineNumber":565,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":566,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":567,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":568,"author":{"gitId":"-"},"content":"### Glossary","lastModifiedDate":"2020-05-23"},{"lineNumber":569,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":570,"author":{"gitId":"-"},"content":"* **Mainstream OS**: Windows, Linux, Unix, OS-X","lastModifiedDate":"2020-05-23"},{"lineNumber":571,"author":{"gitId":"lowkangn"},"content":"* **Command Line Interface (CLI)**: A CLI is a text-based interface that processes commands to a computer program in the form of lines of text.","lastModifiedDate":"2021-09-22"},{"lineNumber":572,"author":{"gitId":"lowkangn"},"content":"* **Graphical User Interface (GUI)**: A GUI is a form of user interface through which users interact with electronic devices via visual indicator representations.","lastModifiedDate":"2021-09-22"},{"lineNumber":573,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":574,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":575,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":576,"author":{"gitId":"-"},"content":"## **Appendix: Instructions for manual testing**","lastModifiedDate":"2020-05-23"},{"lineNumber":577,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":578,"author":{"gitId":"-"},"content":"Given below are instructions to test the app manually.","lastModifiedDate":"2020-05-23"},{"lineNumber":579,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":580,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** These instructions only provide a starting point for testers to work on;","lastModifiedDate":"2020-05-23"},{"lineNumber":581,"author":{"gitId":"-"},"content":"testers are expected to do more *exploratory* testing.","lastModifiedDate":"2020-05-23"},{"lineNumber":582,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":583,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":584,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":585,"author":{"gitId":"-"},"content":"### Launch and shutdown","lastModifiedDate":"2020-05-23"},{"lineNumber":586,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":587,"author":{"gitId":"-"},"content":"1. Initial launch","lastModifiedDate":"2020-05-23"},{"lineNumber":588,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":589,"author":{"gitId":"-"},"content":"   1. Download the jar file and copy into an empty folder","lastModifiedDate":"2020-05-23"},{"lineNumber":590,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":591,"author":{"gitId":"-"},"content":"   1. Double-click the jar file Expected: Shows the GUI with a set of sample contacts. The window size may not be optimum.","lastModifiedDate":"2020-05-23"},{"lineNumber":592,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":593,"author":{"gitId":"-"},"content":"1. Saving window preferences","lastModifiedDate":"2020-05-23"},{"lineNumber":594,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":595,"author":{"gitId":"-"},"content":"   1. Resize the window to an optimum size. Move the window to a different location. Close the window.","lastModifiedDate":"2020-05-23"},{"lineNumber":596,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":597,"author":{"gitId":"-"},"content":"   1. Re-launch the app by double-clicking the jar file.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":598,"author":{"gitId":"-"},"content":"       Expected: The most recent window size and location is retained.","lastModifiedDate":"2020-05-23"},{"lineNumber":599,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":600,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":601,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":602,"author":{"gitId":"-"},"content":"### Deleting a person","lastModifiedDate":"2020-05-23"},{"lineNumber":603,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":604,"author":{"gitId":"-"},"content":"1. Deleting a person while all persons are being shown","lastModifiedDate":"2020-05-23"},{"lineNumber":605,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":606,"author":{"gitId":"-"},"content":"   1. Prerequisites: List all persons using the `list` command. Multiple persons in the list.","lastModifiedDate":"2020-05-23"},{"lineNumber":607,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":608,"author":{"gitId":"-"},"content":"   1. Test case: `delete 1`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":609,"author":{"gitId":"-"},"content":"      Expected: First contact is deleted from the list. Details of the deleted contact shown in the status message. Timestamp in the status bar is updated.","lastModifiedDate":"2020-05-23"},{"lineNumber":610,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":611,"author":{"gitId":"-"},"content":"   1. Test case: `delete 0`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":612,"author":{"gitId":"-"},"content":"      Expected: No person is deleted. Error details shown in the status message. Status bar remains the same.","lastModifiedDate":"2020-05-23"},{"lineNumber":613,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":614,"author":{"gitId":"-"},"content":"   1. Other incorrect delete commands to try: `delete`, `delete x`, `...` (where x is larger than the list size)\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":615,"author":{"gitId":"-"},"content":"      Expected: Similar to previous.","lastModifiedDate":"2020-05-23"},{"lineNumber":616,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":617,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":618,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":619,"author":{"gitId":"-"},"content":"### Saving data","lastModifiedDate":"2020-05-23"},{"lineNumber":620,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":621,"author":{"gitId":"-"},"content":"1. Dealing with missing/corrupted data files","lastModifiedDate":"2020-05-23"},{"lineNumber":622,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":623,"author":{"gitId":"-"},"content":"   1. _{explain how to simulate a missing/corrupted file, and the expected behavior}_","lastModifiedDate":"2020-05-23"},{"lineNumber":624,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":625,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"XXJJXJ":53,"ntwbruce":198,"-":356,"lowkangn":18}},{"path":"docs/UserGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: User Guide","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"ntwbruce"},"content":"Managera is a **desktop app that provides event organisers with a convenient method of keeping track of upcoming events and the details of their participants and collaborators**. It does not handle communication between the event organiser and the participants or collaborators.","lastModifiedDate":"2021-09-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"ntwbruce"},"content":"## Table of Contents","lastModifiedDate":"2021-09-22"},{"lineNumber":9,"author":{"gitId":"ntwbruce"},"content":"- [**Quick start**](#quick-start)","lastModifiedDate":"2021-09-22"},{"lineNumber":10,"author":{"gitId":"ntwbruce"},"content":"- [**Features**](#features)","lastModifiedDate":"2021-09-22"},{"lineNumber":11,"author":{"gitId":"ntwbruce"},"content":"    * [Viewing help : `help`](#viewing-help--help)","lastModifiedDate":"2021-09-22"},{"lineNumber":12,"author":{"gitId":"ntwbruce"},"content":"    * [Adding a Participant: `add`](#adding-a-participant-add)","lastModifiedDate":"2021-09-24"},{"lineNumber":13,"author":{"gitId":"ntwbruce"},"content":"    * [Listing all Participants: `list`](#listing-all-participants--list)","lastModifiedDate":"2021-09-24"},{"lineNumber":14,"author":{"gitId":"ntwbruce"},"content":"    * [Editing a Participant: `edit`](#editing-a-participant--edit)","lastModifiedDate":"2021-09-24"},{"lineNumber":15,"author":{"gitId":"ntwbruce"},"content":"    * [Locating Participants by name: `find`](#locating-participants-by-name-find)","lastModifiedDate":"2021-09-24"},{"lineNumber":16,"author":{"gitId":"ntwbruce"},"content":"    * [Deleting a Participant: `delete`](#deleting-a-participant--delete)","lastModifiedDate":"2021-09-24"},{"lineNumber":17,"author":{"gitId":"ntwbruce"},"content":"    * [Clearing all Participants: `clear`](#clearing-all-participants--clear)","lastModifiedDate":"2021-09-24"},{"lineNumber":18,"author":{"gitId":"ntwbruce"},"content":"    * [Adding an event: `addEvent`](#adding-an-event-addevent)","lastModifiedDate":"2021-09-22"},{"lineNumber":19,"author":{"gitId":"ntwbruce"},"content":"    * [Removing an event: `removeEvent`](#removing-an-event--removeevent)","lastModifiedDate":"2021-09-22"},{"lineNumber":20,"author":{"gitId":"ntwbruce"},"content":"    * [Mark an Event as done: `doneEvent`](#mark-an-event-as-done-doneevent)","lastModifiedDate":"2021-09-22"},{"lineNumber":21,"author":{"gitId":"ntwbruce"},"content":"    * [Sort Events: `sortEvents`](#sort-events-sortevents)","lastModifiedDate":"2021-09-22"},{"lineNumber":22,"author":{"gitId":"ntwbruce"},"content":"    * [Filter Events: `filterEvents`](#filter-events-filterevents)","lastModifiedDate":"2021-09-22"},{"lineNumber":23,"author":{"gitId":"XXJJXJ"},"content":"    * [Listing all Events: `listEvents`](#list-events-listevent)","lastModifiedDate":"2021-09-30"},{"lineNumber":24,"author":{"gitId":"ntwbruce"},"content":"    * [Add Participant to Event: `addParticipant`](#add-participant-to-event-addparticipant)","lastModifiedDate":"2021-09-22"},{"lineNumber":25,"author":{"gitId":"ntwbruce"},"content":"    * [Remove Participant from Event: `removeParticipant`](#remove-participant-from-event-removeparticipant)","lastModifiedDate":"2021-09-22"},{"lineNumber":26,"author":{"gitId":"ntwbruce"},"content":"    * [Show Event details: `showDetails`](#show-event-details-showdetails)","lastModifiedDate":"2021-09-22"},{"lineNumber":27,"author":{"gitId":"ntwbruce"},"content":"    * [Show Event Participants: `showParticipants`](#show-event-participants-showparticipants)","lastModifiedDate":"2021-09-22"},{"lineNumber":28,"author":{"gitId":"ntwbruce"},"content":"    * [Find Participant and access details: `findParticipant`](#find-participant-and-access-details-findparticipant)","lastModifiedDate":"2021-09-22"},{"lineNumber":29,"author":{"gitId":"ntwbruce"},"content":"    * [Exiting the program: `exit`](#exiting-the-program--exit)","lastModifiedDate":"2021-09-24"},{"lineNumber":30,"author":{"gitId":"ntwbruce"},"content":"    * [Saving the data](#saving-the-data)","lastModifiedDate":"2021-09-24"},{"lineNumber":31,"author":{"gitId":"ntwbruce"},"content":"    * [Editing the data file](#editing-the-data-file)","lastModifiedDate":"2021-09-24"},{"lineNumber":32,"author":{"gitId":"ntwbruce"},"content":"    * [Archiving data files `[coming in v2.0]`](#archiving-data-files-coming-in-v20)","lastModifiedDate":"2021-09-24"},{"lineNumber":33,"author":{"gitId":"ntwbruce"},"content":"- [**FAQ**](#faq)","lastModifiedDate":"2021-09-22"},{"lineNumber":34,"author":{"gitId":"ntwbruce"},"content":"- [**Command summary**](#command-summary)","lastModifiedDate":"2021-09-22"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"## Quick start","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"1. Ensure you have Java `11` or above installed in your Computer.","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"ntwbruce"},"content":"1. Download the latest `managera.jar` from [here](https://github.com/AY2122S1-CS2103T-T10-2/tp/releases).","lastModifiedDate":"2021-09-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"ntwbruce"},"content":"1. Copy the file to the folder you want to use as the _home folder_ for Managera.","lastModifiedDate":"2021-09-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"1. Double-click the file to start the app. The GUI similar to the below should appear in a few seconds. Note how the app contains some sample data.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"   ![Ui](images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"1. Type the command in the command box and press Enter to execute it. e.g. typing **`help`** and pressing Enter will open the help window. \u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"   Some example commands you can try:","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"ntwbruce"},"content":"   * **`list`** : Lists all Participants.","lastModifiedDate":"2021-09-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"ntwbruce"},"content":"   * **`add`**`n/John Doe p/98765432 e/johnd@example.com a/John street, block 123, #01-01` : Adds a Participant named `John Doe` to Managera.","lastModifiedDate":"2021-09-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"ntwbruce"},"content":"   * **`delete`**`3` : Deletes the 3rd Participant shown in the current list.","lastModifiedDate":"2021-09-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"ntwbruce"},"content":"   * **`clear`** : Deletes all Participants.","lastModifiedDate":"2021-09-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"   * **`exit`** : Exits the app.","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     ","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"ntwbruce"},"content":"   * **`addEvent n/My First Event d/2021-01-01`** : Adds a new Event to the list called \u0027My First Event\u0027.","lastModifiedDate":"2021-09-24"},{"lineNumber":63,"author":{"gitId":"ntwbruce"},"content":"     ","lastModifiedDate":"2021-09-24"},{"lineNumber":64,"author":{"gitId":"ntwbruce"},"content":"   * **`findParticipant Arnold`** : Returns the details of Participants whose names include \u0027Arnold\u0027.","lastModifiedDate":"2021-09-24"},{"lineNumber":65,"author":{"gitId":"ntwbruce"},"content":"     ","lastModifiedDate":"2021-09-24"},{"lineNumber":66,"author":{"gitId":"ntwbruce"},"content":"   * **`sortEvents`** : Sorts the current list of Events in chronological order.","lastModifiedDate":"2021-09-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"1. Refer to the [Features](#features) below for details of each command.","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"## Features","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"**:information_source: Notes about the command format:**\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"* Words in `UPPER_CASE` are the parameters to be supplied by the user.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"ntwbruce"},"content":"  e.g. in `addEvent n/NAME d/DATE`, `n/NAME` and `d/DATE` are parameters which can be used as `addEvent n/CS2103T Final d/2021-11-23`.","lastModifiedDate":"2021-09-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"* Items in square brackets are optional.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"ntwbruce"},"content":"  e.g. `addEvent n/NAME d/DATE [t/TIME]` can be used as `addEvent n/CS2103T Final d/2021-11-23 t/1700` or as `addEvent n/CS2103T Final d/2021-11-23`.","lastModifiedDate":"2021-09-24"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"* Items with `…`​ after them can be used multiple times including zero times.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"* Parameters can be in any order.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"ntwbruce"},"content":"  e.g. if the command specifies `n/NAME d/DATE`, `d/DATE n/NAME` is also acceptable.","lastModifiedDate":"2021-09-24"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"ntwbruce"},"content":"* If a parameter is expected only once in the command, but you specified it multiple times, only the last occurrence of the parameter will be taken.\u003cbr\u003e","lastModifiedDate":"2021-09-24"},{"lineNumber":90,"author":{"gitId":"ntwbruce"},"content":"  e.g. if you specify `t/1700 t/1800`, only `t/1800` will be taken.","lastModifiedDate":"2021-09-24"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":92,"author":{"gitId":"ntwbruce"},"content":"* Extraneous parameters for commands that do not take in parameters (namely `help`, `list`, `clear`, `sortEvents` and `exit`) will be ignored.\u003cbr\u003e","lastModifiedDate":"2021-09-24"},{"lineNumber":93,"author":{"gitId":"ntwbruce"},"content":"  e.g. if the command specifies `sortEvents 123`, it will be interpreted as `sortEvents`.","lastModifiedDate":"2021-09-24"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-03"},{"lineNumber":95,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"### Viewing help : `help`","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"ntwbruce"},"content":"Shows a message explaining how to access the help page.","lastModifiedDate":"2021-09-24"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"![help message](images/helpMessage.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"Format: `help`","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"ntwbruce"},"content":"### Adding a Participant: `add`","lastModifiedDate":"2021-09-24"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"ntwbruce"},"content":"Adds a Participant to Managera.","lastModifiedDate":"2021-09-24"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"Format: `add n/NAME p/PHONE_NUMBER e/EMAIL a/ADDRESS [t/TAG]…​`","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Tip:**","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"ntwbruce"},"content":"A Participant can have any number of tags (including 0)","lastModifiedDate":"2021-09-24"},{"lineNumber":114,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"* `add n/John Doe p/98765432 e/johnd@example.com a/John street, block 123, #01-01`","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"* `add n/Betsy Crowe t/friend e/betsycrowe@example.com a/Newgate Prison p/1234567 t/criminal`","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"ntwbruce"},"content":"### Listing all Participants : `list`","lastModifiedDate":"2021-09-24"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"ntwbruce"},"content":"Shows a list of all Participants in Managera.","lastModifiedDate":"2021-09-24"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"Format: `list`","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"ntwbruce"},"content":"### Editing a Participant : `edit`","lastModifiedDate":"2021-09-24"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":128,"author":{"gitId":"ntwbruce"},"content":"Edits an existing Participant in Managera.","lastModifiedDate":"2021-09-24"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"Format: `edit INDEX [n/NAME] [p/PHONE] [e/EMAIL] [a/ADDRESS] [t/TAG]…​`","lastModifiedDate":"2020-05-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":132,"author":{"gitId":"ntwbruce"},"content":"* Edits the Participant at the specified `INDEX`. The index refers to the index number shown in the displayed Participant list. The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2021-09-24"},{"lineNumber":133,"author":{"gitId":"-"},"content":"* At least one of the optional fields must be provided.","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"* Existing values will be updated to the input values.","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"lowkangn"},"content":"* When editing tags, the existing tags of the Participant will be removed i.e. adding of tags is not cumulative.","lastModifiedDate":"2021-10-03"},{"lineNumber":136,"author":{"gitId":"ntwbruce"},"content":"* You can remove all the Participant’s tags by typing `t/` without","lastModifiedDate":"2021-09-24"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    specifying any tags after it.","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"ntwbruce"},"content":"*  `edit 1 p/91234567 e/johndoe@example.com` Edits the phone number and email address of the 1st Participant to be `91234567` and `johndoe@example.com` respectively.","lastModifiedDate":"2021-09-24"},{"lineNumber":141,"author":{"gitId":"ntwbruce"},"content":"*  `edit 2 n/Betsy Crower t/` Edits the name of the 2nd Participant to be `Betsy Crower` and clears all existing tags.","lastModifiedDate":"2021-09-24"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"ntwbruce"},"content":"### Locating Participants by name: `find`","lastModifiedDate":"2021-09-24"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":145,"author":{"gitId":"ntwbruce"},"content":"Finds Participant whose names contain any of the given keywords.","lastModifiedDate":"2021-09-24"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"Format: `find KEYWORD [MORE_KEYWORDS]`","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"lowkangn"},"content":"* The search is case-insensitive. e.g. `hans` will match `Hans`","lastModifiedDate":"2021-10-03"},{"lineNumber":150,"author":{"gitId":"-"},"content":"* The order of the keywords does not matter. e.g. `Hans Bo` will match `Bo Hans`","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"* Only the name is searched.","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"* Only full words will be matched e.g. `Han` will not match `Hans`","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"ntwbruce"},"content":"* Participants matching at least one keyword will be returned (i.e. `OR` search).","lastModifiedDate":"2021-09-24"},{"lineNumber":154,"author":{"gitId":"-"},"content":"  e.g. `Hans Bo` will return `Hans Gruber`, `Bo Yang`","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"* `find John` returns `john` and `John Doe`","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"* `find alex david` returns `Alex Yeoh`, `David Li`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":"  ![result for \u0027find alex david\u0027](images/findAlexDavidResult.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"ntwbruce"},"content":"### Deleting a Participant : `delete`","lastModifiedDate":"2021-09-24"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"ntwbruce"},"content":"Deletes the specified Participant from Managera.","lastModifiedDate":"2021-09-24"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"Format: `delete INDEX`","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"ntwbruce"},"content":"* Deletes the Participant at the specified `INDEX`.","lastModifiedDate":"2021-09-24"},{"lineNumber":168,"author":{"gitId":"ntwbruce"},"content":"* The index refers to the index number shown in the displayed Participant list.","lastModifiedDate":"2021-09-24"},{"lineNumber":169,"author":{"gitId":"-"},"content":"* The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2020-05-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"ntwbruce"},"content":"* `list` followed by `delete 2` deletes the 2nd Participant on the current list.","lastModifiedDate":"2021-09-24"},{"lineNumber":173,"author":{"gitId":"ntwbruce"},"content":"* `find Betsy` followed by `delete 1` deletes the 1st Participant in the results of the `find` command. ","lastModifiedDate":"2021-09-24"},{"lineNumber":174,"author":{"gitId":"-"},"content":" ","lastModifiedDate":"2020-05-23"},{"lineNumber":175,"author":{"gitId":"ntwbruce"},"content":"### Clearing all Participants : `clear`","lastModifiedDate":"2021-09-24"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"ntwbruce"},"content":"Clears all Participants from Managera.","lastModifiedDate":"2021-09-24"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":179,"author":{"gitId":"-"},"content":"Format: `clear`","lastModifiedDate":"2020-05-23"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"davelowqx"},"content":"### Adding an event: `addEvent`","lastModifiedDate":"2021-09-18"},{"lineNumber":182,"author":{"gitId":"davelowqx"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":183,"author":{"gitId":"lowkangn"},"content":"Creates an Event at the specified date and time and adds it to Managera.","lastModifiedDate":"2021-10-03"},{"lineNumber":184,"author":{"gitId":"davelowqx"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":185,"author":{"gitId":"davelowqx"},"content":"Format: `addEvent n/NAME d/DATE [t/TIME]` ","lastModifiedDate":"2021-09-18"},{"lineNumber":186,"author":{"gitId":"davelowqx"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":187,"author":{"gitId":"lowkangn"},"content":"Example Usage:","lastModifiedDate":"2021-09-22"},{"lineNumber":188,"author":{"gitId":"lowkangn"},"content":"* `addEvent n/CS2100 Finals d/2021-11-20 t/0900` - Creates an Event \"CS2100 Finals\" on 20th November 2021 9:00am.","lastModifiedDate":"2021-09-18"},{"lineNumber":189,"author":{"gitId":"lowkangn"},"content":"* `addEvent n/240Km Marathon d/2022-08-20` - Creates a full day Event \"240 km Marathon\" on 20th August 2022.","lastModifiedDate":"2021-09-18"},{"lineNumber":190,"author":{"gitId":"davelowqx"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":191,"author":{"gitId":"lowkangn"},"content":"### Deleting an event : `removeEvent`","lastModifiedDate":"2021-10-03"},{"lineNumber":192,"author":{"gitId":"davelowqx"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":193,"author":{"gitId":"lowkangn"},"content":"Deletes the specified Event from Managera.","lastModifiedDate":"2021-10-03"},{"lineNumber":194,"author":{"gitId":"davelowqx"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":195,"author":{"gitId":"lowkangn"},"content":"Format: `removeEvent INDEX`","lastModifiedDate":"2021-10-03"},{"lineNumber":196,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":197,"author":{"gitId":"lowkangn"},"content":"* Deletes the Event at the specified `INDEX`.","lastModifiedDate":"2021-10-03"},{"lineNumber":198,"author":{"gitId":"lowkangn"},"content":"* The index refers to the index number shown in the displayed Events list.","lastModifiedDate":"2021-10-03"},{"lineNumber":199,"author":{"gitId":"lowkangn"},"content":"* The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2021-10-03"},{"lineNumber":200,"author":{"gitId":"davelowqx"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":201,"author":{"gitId":"lowkangn"},"content":"Example Usage:","lastModifiedDate":"2021-09-22"},{"lineNumber":202,"author":{"gitId":"lowkangn"},"content":"* `listEvents` followed by `removeEvent 2` deletes the 2nd Event on the current list.","lastModifiedDate":"2021-10-03"},{"lineNumber":203,"author":{"gitId":"lowkangn"},"content":"* `filterEvents d/2021-09-18` followed by `delete 1` deletes the 1st Event in the results of the `filterEvents` command.","lastModifiedDate":"2021-10-03"},{"lineNumber":204,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":205,"author":{"gitId":"lowkangn"},"content":"### Mark an Event as done: `doneEvent`","lastModifiedDate":"2021-09-18"},{"lineNumber":206,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":207,"author":{"gitId":"lowkangn"},"content":"Marks the specified Event in Managera as done.","lastModifiedDate":"2021-10-03"},{"lineNumber":208,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":209,"author":{"gitId":"lowkangn"},"content":"Format: `doneEvent INDEX`","lastModifiedDate":"2021-10-03"},{"lineNumber":210,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":211,"author":{"gitId":"lowkangn"},"content":"* Marks the Event at the specified `INDEX` as done.","lastModifiedDate":"2021-10-03"},{"lineNumber":212,"author":{"gitId":"lowkangn"},"content":"* The index refers to the index number shown in the displayed Events list.","lastModifiedDate":"2021-10-03"},{"lineNumber":213,"author":{"gitId":"lowkangn"},"content":"* The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2021-10-03"},{"lineNumber":214,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":215,"author":{"gitId":"lowkangn"},"content":"Example Usage:","lastModifiedDate":"2021-09-18"},{"lineNumber":216,"author":{"gitId":"lowkangn"},"content":"* `listEvents` followed by `doneEvent 2` marks the 2nd Event on the current list as done.","lastModifiedDate":"2021-10-03"},{"lineNumber":217,"author":{"gitId":"lowkangn"},"content":"* `filterEvents d/2021-09-18` followed by `done 1` marks the 1st Event in the results of the `filterEvents` command as done.","lastModifiedDate":"2021-10-03"},{"lineNumber":218,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":219,"author":{"gitId":"davelowqx"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":220,"author":{"gitId":"XXJJXJ"},"content":"### Sort Events: `sortEvents`","lastModifiedDate":"2021-09-20"},{"lineNumber":221,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":222,"author":{"gitId":"lowkangn"},"content":"Sorts the current list of events in chronological order with the earlier events at the top and later events at the bottom.","lastModifiedDate":"2021-10-03"},{"lineNumber":223,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":224,"author":{"gitId":"XXJJXJ"},"content":"Format: `sortEvents`","lastModifiedDate":"2021-09-22"},{"lineNumber":225,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":226,"author":{"gitId":"XXJJXJ"},"content":"### Filter Events: `filterEvents`","lastModifiedDate":"2021-09-20"},{"lineNumber":227,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":228,"author":{"gitId":"XXJJXJ"},"content":"Filters the list of events for events occurring on a specific date and optionally by time too.","lastModifiedDate":"2021-09-22"},{"lineNumber":229,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":230,"author":{"gitId":"XXJJXJ"},"content":"Format: `filterEvents d/DATE [t/TIME]`","lastModifiedDate":"2021-09-25"},{"lineNumber":231,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":232,"author":{"gitId":"XXJJXJ"},"content":"Example Usage:","lastModifiedDate":"2021-09-20"},{"lineNumber":233,"author":{"gitId":"XXJJXJ"},"content":"* `filterEvents d/2021-09-18` - Filters the list of events to show only events occurring on 18th September 2021.","lastModifiedDate":"2021-09-25"},{"lineNumber":234,"author":{"gitId":"XXJJXJ"},"content":"* `filterEvents d/2021-09-18 t/0900` - Filters the list of events to show only events occurring on 18th September 2021 9am.","lastModifiedDate":"2021-09-25"},{"lineNumber":235,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":236,"author":{"gitId":"XXJJXJ"},"content":"### List Events: `listEvent`","lastModifiedDate":"2021-09-22"},{"lineNumber":237,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":238,"author":{"gitId":"XXJJXJ"},"content":"Show a list of all events in Managera.","lastModifiedDate":"2021-09-22"},{"lineNumber":239,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":240,"author":{"gitId":"XXJJXJ"},"content":"Format: `listEvent`","lastModifiedDate":"2021-09-22"},{"lineNumber":241,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":242,"author":{"gitId":"kanjitp"},"content":"### Add Participant to Event: `addParticipant`","lastModifiedDate":"2021-09-22"},{"lineNumber":243,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":244,"author":{"gitId":"lowkangn"},"content":"Adds a Participant with matching participantID to Event.","lastModifiedDate":"2021-10-03"},{"lineNumber":245,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":246,"author":{"gitId":"kanjitp"},"content":"Format: ","lastModifiedDate":"2021-09-22"},{"lineNumber":247,"author":{"gitId":"lowkangn"},"content":"`addParticipant e/EVENT_NAME p/PARTICIPANT_ID`","lastModifiedDate":"2021-10-03"},{"lineNumber":248,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":249,"author":{"gitId":"kanjitp"},"content":"Example Usage:","lastModifiedDate":"2021-09-22"},{"lineNumber":250,"author":{"gitId":"kanjitp"},"content":"* `addParticipant e/CS2103T Finals p/mikerowe1` - Adds Mike Rowe whose participantID is mikerowe1 to Event CS2103T Finals.","lastModifiedDate":"2021-09-22"},{"lineNumber":251,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":252,"author":{"gitId":"kanjitp"},"content":"### Remove Participant from Event: `removeParticipant`","lastModifiedDate":"2021-09-22"},{"lineNumber":253,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":254,"author":{"gitId":"lowkangn"},"content":"Removes a Participant with matching participantID from an Event.","lastModifiedDate":"2021-10-03"},{"lineNumber":255,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":256,"author":{"gitId":"lowkangn"},"content":"Format: `removeParticipant e/EVENT_NAME p/PARTICIPANT_ID` ","lastModifiedDate":"2021-10-03"},{"lineNumber":257,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":258,"author":{"gitId":"kanjitp"},"content":"Example Usage:","lastModifiedDate":"2021-09-22"},{"lineNumber":259,"author":{"gitId":"lowkangn"},"content":"* `removeParticipant e/CS2103T Finals p/mikerowe1` - Removes Mike Rowe whose participantID is mikerowe1 from Event CS2103T Finals.","lastModifiedDate":"2021-10-03"},{"lineNumber":260,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":261,"author":{"gitId":"ntwbruce"},"content":"### Show Event details: `showDetails`","lastModifiedDate":"2021-09-18"},{"lineNumber":262,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":263,"author":{"gitId":"lowkangn"},"content":"Displays the details of the Event matching the given name.","lastModifiedDate":"2021-10-03"},{"lineNumber":264,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":265,"author":{"gitId":"lowkangn"},"content":"Format: `showDetails EVENT_NAME`","lastModifiedDate":"2021-10-03"},{"lineNumber":266,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":267,"author":{"gitId":"ntwbruce"},"content":"Example Usage:","lastModifiedDate":"2021-09-18"},{"lineNumber":268,"author":{"gitId":"XXJJXJ"},"content":"* `showDetails CS2103T Finals` - Displays the date and time of the ‘CS2103T Finals’ Event.","lastModifiedDate":"2021-09-20"},{"lineNumber":269,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":270,"author":{"gitId":"ntwbruce"},"content":"### Show Event Participants: `showParticipants`","lastModifiedDate":"2021-09-18"},{"lineNumber":271,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":272,"author":{"gitId":"lowkangn"},"content":"Displays the list of participants of the Event matching the given name.","lastModifiedDate":"2021-10-03"},{"lineNumber":273,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":274,"author":{"gitId":"lowkangn"},"content":"Format: `showParticipants EVENT_NAME`","lastModifiedDate":"2021-10-03"},{"lineNumber":275,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":276,"author":{"gitId":"ntwbruce"},"content":"Example Usage:","lastModifiedDate":"2021-09-18"},{"lineNumber":277,"author":{"gitId":"XXJJXJ"},"content":"* `showParticipants CS2103T Finals` - Displays the list of participants of the ‘CS2103T Finals’ Event.","lastModifiedDate":"2021-09-20"},{"lineNumber":278,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":279,"author":{"gitId":"lowkangn"},"content":"### Find Participant and access details: `findParticipant`","lastModifiedDate":"2021-09-18"},{"lineNumber":280,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":281,"author":{"gitId":"lowkangn"},"content":"Finds the Participant whose name contains the given KEYWORD and returns the details about the Participant.","lastModifiedDate":"2021-10-03"},{"lineNumber":282,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":283,"author":{"gitId":"lowkangn"},"content":"Format: `findParticipant KEYWORD`","lastModifiedDate":"2021-10-03"},{"lineNumber":284,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":285,"author":{"gitId":"lowkangn"},"content":"Example Usage:","lastModifiedDate":"2021-09-18"},{"lineNumber":286,"author":{"gitId":"XXJJXJ"},"content":"* `findParticipant Mike` - Filters the list of Participants for Participants who have names containing “Mike”.","lastModifiedDate":"2021-09-20"},{"lineNumber":287,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":288,"author":{"gitId":"-"},"content":"### Exiting the program : `exit`","lastModifiedDate":"2021-09-24"},{"lineNumber":289,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":290,"author":{"gitId":"-"},"content":"Exits the program.","lastModifiedDate":"2021-09-24"},{"lineNumber":291,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":292,"author":{"gitId":"-"},"content":"Format: `exit`","lastModifiedDate":"2021-09-24"},{"lineNumber":293,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":294,"author":{"gitId":"-"},"content":"### Saving the data","lastModifiedDate":"2021-09-24"},{"lineNumber":295,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":296,"author":{"gitId":"ntwbruce"},"content":"Managera data are saved in the hard disk automatically after any command that changes the data. There is no need to save manually.","lastModifiedDate":"2021-09-24"},{"lineNumber":297,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":298,"author":{"gitId":"-"},"content":"### Editing the data file","lastModifiedDate":"2021-09-24"},{"lineNumber":299,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":300,"author":{"gitId":"ntwbruce"},"content":"Managera data are saved as a JSON file `[JAR file location]/data/addressbook.json`. Advanced users are welcome to update data directly by editing that data file.","lastModifiedDate":"2021-09-24"},{"lineNumber":301,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":302,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e:exclamation: **Caution:**","lastModifiedDate":"2021-09-24"},{"lineNumber":303,"author":{"gitId":"ntwbruce"},"content":"If your changes to the data file makes its format invalid, Managera will discard all data and start with an empty data file at the next run.","lastModifiedDate":"2021-09-24"},{"lineNumber":304,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-09-24"},{"lineNumber":305,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":306,"author":{"gitId":"-"},"content":"### Archiving data files `[coming in v2.0]`","lastModifiedDate":"2021-09-24"},{"lineNumber":307,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":308,"author":{"gitId":"-"},"content":"_Details coming soon ..._","lastModifiedDate":"2021-09-24"},{"lineNumber":309,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":310,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":311,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":312,"author":{"gitId":"-"},"content":"## FAQ","lastModifiedDate":"2020-05-23"},{"lineNumber":313,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":314,"author":{"gitId":"-"},"content":"**Q**: How do I transfer my data to another Computer?\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":315,"author":{"gitId":"ntwbruce"},"content":"**A**: Install the app in the other computer and overwrite the empty data file it creates with the file that contains the data of your previous Managera home folder.","lastModifiedDate":"2021-09-24"},{"lineNumber":316,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":317,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":318,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":319,"author":{"gitId":"-"},"content":"## Command summary","lastModifiedDate":"2020-05-23"},{"lineNumber":320,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":321,"author":{"gitId":"-"},"content":"Action | Format, Examples","lastModifiedDate":"2020-05-23"},{"lineNumber":322,"author":{"gitId":"-"},"content":"--------|------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":323,"author":{"gitId":"ntwbruce"},"content":"**Help** | `help`","lastModifiedDate":"2021-09-24"},{"lineNumber":324,"author":{"gitId":"-"},"content":"**Add** | `add n/NAME p/PHONE_NUMBER e/EMAIL a/ADDRESS [t/TAG]…​` \u003cbr\u003e e.g., `add n/James Ho p/22224444 e/jamesho@example.com a/123, Clementi Rd, 1234665 t/friend t/colleague`","lastModifiedDate":"2020-05-23"},{"lineNumber":325,"author":{"gitId":"ntwbruce"},"content":"**List** | `list`","lastModifiedDate":"2021-09-24"},{"lineNumber":326,"author":{"gitId":"-"},"content":"**Edit** | `edit INDEX [n/NAME] [p/PHONE_NUMBER] [e/EMAIL] [a/ADDRESS] [t/TAG]…​`\u003cbr\u003e e.g.,`edit 2 n/James Lee e/jameslee@example.com`","lastModifiedDate":"2020-05-23"},{"lineNumber":327,"author":{"gitId":"-"},"content":"**Find** | `find KEYWORD [MORE_KEYWORDS]`\u003cbr\u003e e.g., `find James Jake`","lastModifiedDate":"2020-05-23"},{"lineNumber":328,"author":{"gitId":"ntwbruce"},"content":"**Delete** | `delete INDEX`\u003cbr\u003e e.g., `delete 3`","lastModifiedDate":"2021-09-24"},{"lineNumber":329,"author":{"gitId":"ntwbruce"},"content":"**Clear** | `clear`","lastModifiedDate":"2021-09-24"},{"lineNumber":330,"author":{"gitId":"davelowqx"},"content":"**Add Event** | `addEvent n/NAME d/DATE [t/TIME]` \u003cbr\u003e e.g., `addEvent n/CS2100 Finals d/2021-11-20 t/0900`","lastModifiedDate":"2021-09-18"},{"lineNumber":331,"author":{"gitId":"davelowqx"},"content":"**Remove Event** | `removeEvent n/NAME [d/DATE] [t/TIME]`  \u003cbr\u003e e.g., `removeEvent n/CS2100 Finals d/2021-11-20  t/0900`","lastModifiedDate":"2021-09-18"},{"lineNumber":332,"author":{"gitId":"XXJJXJ"},"content":"**Mark an Event as done** | `doneEvent n/NAME [d/DATE] [t/TIME]` \u003cbr\u003e e.g., `doneEvent n/240km Marathon d/2022-08-20`","lastModifiedDate":"2021-09-22"},{"lineNumber":333,"author":{"gitId":"XXJJXJ"},"content":"**Sort Events** | `sortEvents`","lastModifiedDate":"2021-09-20"},{"lineNumber":334,"author":{"gitId":"XXJJXJ"},"content":"**Filter Events** | `filterEvents d/DATE [t/TIME]` \u003cbr\u003e e.g., `filterEvents d/2021-09-18`","lastModifiedDate":"2021-09-25"},{"lineNumber":335,"author":{"gitId":"XXJJXJ"},"content":"**List Events** | `listEvents`","lastModifiedDate":"2021-09-30"},{"lineNumber":336,"author":{"gitId":"kanjitp"},"content":"**add Participant to Event** | `addParticipant e/EVENT_NAME p/PARTICIPANT_ID` \u003cbr\u003e e.g. `addParticipant e/2103T Finals p/mikerowe1`","lastModifiedDate":"2021-09-22"},{"lineNumber":337,"author":{"gitId":"kanjitp"},"content":"**remove Participant from Event** | `removeParticipant e/EVENT_NAME p/PARTICIPANT_ID` \u003cbr\u003e e.g. `removeParticipant e/CS2103T Finals p/mikerowe1`","lastModifiedDate":"2021-09-22"},{"lineNumber":338,"author":{"gitId":"ntwbruce"},"content":"**Show Event Details** | `showDetails EVENT_NAME` \u003cbr\u003e e.g., `showDetails CS2103T Finals`","lastModifiedDate":"2021-09-18"},{"lineNumber":339,"author":{"gitId":"ntwbruce"},"content":"**Show Event Participants** | `showParticipants EVENT_NAME` \u003cbr\u003e e.g., `showParticipants CS2103T Finals`","lastModifiedDate":"2021-09-18"},{"lineNumber":340,"author":{"gitId":"XXJJXJ"},"content":"**Find Participants** | `findParticipant KEYWORD` \u003cbr\u003e e.g., `findParticipant Mike`","lastModifiedDate":"2021-09-22"},{"lineNumber":341,"author":{"gitId":"ntwbruce"},"content":"**exit** | `exit`","lastModifiedDate":"2021-09-24"}],"authorContributionMap":{"XXJJXJ":28,"davelowqx":12,"kanjitp":14,"ntwbruce":91,"-":143,"lowkangn":53}},{"path":"docs/_sass/minima/_base.scss","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"html {","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  font-size: $base-font-size;","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Reset some basic elements","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"body, h1, h2, h3, h4, h5, h6,","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"p, blockquote, pre, hr,","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"dl, dd, ol, ul, figure {","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"  margin: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"  padding: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * Basic styling","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"body {","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"  font: $base-font-weight #{$base-font-size}/#{$base-line-height} $base-font-family;","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"  color: $text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"  background-color: $background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"  -webkit-text-size-adjust: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"  -webkit-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     -moz-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"       -o-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"          font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"  font-kerning: normal;","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"  display: flex;","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"  min-height: 100vh;","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"  flex-direction: column;","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"  overflow-wrap: break-word;","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":" * Set `margin-bottom` to maintain vertical rhythm","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"h1, h2, h3, h4, h5, h6,","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"p, blockquote, pre,","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"ul, ol, dl, figure,","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"%vertical-rhythm {","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"hr {","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"  margin-top: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":" * `main` element","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"main {","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"  display: block; /* Default value of `display` of `main` element is \u0027inline\u0027 in IE 11. */","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":" * Images","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"img {","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"  max-width: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"  vertical-align: middle;","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":" * Figures","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"figure \u003e img {","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"  display: block;","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"figcaption {","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"  font-size: $small-font-size;","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":" * Lists","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"ul, ol {","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"  margin-left: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"li {","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"  \u003e ul,","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"  \u003e ol {","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    margin-bottom: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":" * Headings","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"h1, h2, h3, h4, h5, h6 {","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"  font-weight: $base-font-weight;","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":" * Links","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"a {","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"  color: $link-base-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"  text-decoration: none;","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"  \u0026:visited {","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    color: $link-visited-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"  \u0026:hover {","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    color: $text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    text-decoration: underline;","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"  .social-media-list \u0026:hover {","lastModifiedDate":"2020-05-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    text-decoration: none;","lastModifiedDate":"2020-05-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    .username {","lastModifiedDate":"2020-05-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"      text-decoration: underline;","lastModifiedDate":"2020-05-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":" * Blockquotes","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"blockquote {","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"  color: $brand-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":142,"author":{"gitId":"-"},"content":"  border-left: 4px solid $brand-color-light;","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"  padding-left: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"-"},"content":"  @include relative-font-size(1.125);","lastModifiedDate":"2020-05-23"},{"lineNumber":145,"author":{"gitId":"-"},"content":"  font-style: italic;","lastModifiedDate":"2020-05-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"  \u003e :last-child {","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    margin-bottom: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"  i, em {","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    font-style: normal;","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":" * Code formatting","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"pre,","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"code {","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"  font-family: $code-font-family;","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"  font-size: 0.9375em;","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"  border: 1px solid $brand-color-light;","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"  border-radius: 3px;","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"  background-color: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"code {","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"  padding: 1px 5px;","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":174,"author":{"gitId":"-"},"content":"pre {","lastModifiedDate":"2020-05-23"},{"lineNumber":175,"author":{"gitId":"-"},"content":"  padding: 8px 12px;","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"  overflow-x: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":178,"author":{"gitId":"-"},"content":"  \u003e code {","lastModifiedDate":"2020-05-23"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    border: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    padding-right: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    padding-left: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":".highlight {","lastModifiedDate":"2020-05-23"},{"lineNumber":186,"author":{"gitId":"-"},"content":"  border-radius: 3px;","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"  background: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":188,"author":{"gitId":"-"},"content":"  @extend %vertical-rhythm;","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"  .highlighter-rouge \u0026 {","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    background: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":" * Wrapper","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"-"},"content":".wrapper {","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"  max-width: calc(#{$content-width} - (#{$spacing-unit}));","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"  margin-right: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"  margin-left: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":204,"author":{"gitId":"-"},"content":"  padding-right: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":205,"author":{"gitId":"-"},"content":"  padding-left: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":206,"author":{"gitId":"-"},"content":"  @extend %clearfix;","lastModifiedDate":"2020-05-23"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":208,"author":{"gitId":"-"},"content":"  @media screen and (min-width: $on-large) {","lastModifiedDate":"2020-05-23"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    max-width: calc(#{$content-width} - (#{$spacing-unit} * 2));","lastModifiedDate":"2020-05-23"},{"lineNumber":210,"author":{"gitId":"-"},"content":"    padding-right: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    padding-left: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":212,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":213,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":217,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":" * Clearfix","lastModifiedDate":"2020-05-23"},{"lineNumber":219,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":220,"author":{"gitId":"-"},"content":"%clearfix:after {","lastModifiedDate":"2020-05-23"},{"lineNumber":221,"author":{"gitId":"-"},"content":"  content: \"\";","lastModifiedDate":"2020-05-23"},{"lineNumber":222,"author":{"gitId":"-"},"content":"  display: table;","lastModifiedDate":"2020-05-23"},{"lineNumber":223,"author":{"gitId":"-"},"content":"  clear: both;","lastModifiedDate":"2020-05-23"},{"lineNumber":224,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":229,"author":{"gitId":"-"},"content":" * Icons","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":".orange {","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"-"},"content":"  color: #f66a0a;","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":".grey {","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":"  color: #828282;","lastModifiedDate":"2020-05-23"},{"lineNumber":238,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":" * Tables","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"-"},"content":"table {","lastModifiedDate":"2020-05-23"},{"lineNumber":244,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":245,"author":{"gitId":"-"},"content":"  width: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":246,"author":{"gitId":"-"},"content":"  text-align: $table-text-align;","lastModifiedDate":"2020-05-23"},{"lineNumber":247,"author":{"gitId":"-"},"content":"  color: $table-text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":248,"author":{"gitId":"-"},"content":"  border-collapse: collapse;","lastModifiedDate":"2020-05-23"},{"lineNumber":249,"author":{"gitId":"-"},"content":"  border: 1px solid $table-border-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":250,"author":{"gitId":"-"},"content":"  tr {","lastModifiedDate":"2020-05-23"},{"lineNumber":251,"author":{"gitId":"-"},"content":"    \u0026:nth-child(even) {","lastModifiedDate":"2020-05-23"},{"lineNumber":252,"author":{"gitId":"-"},"content":"      background-color: $table-zebra-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":253,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":254,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":255,"author":{"gitId":"-"},"content":"  th, td {","lastModifiedDate":"2020-05-23"},{"lineNumber":256,"author":{"gitId":"-"},"content":"    padding: ($spacing-unit / 3) ($spacing-unit / 2);","lastModifiedDate":"2020-05-23"},{"lineNumber":257,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":258,"author":{"gitId":"-"},"content":"  th {","lastModifiedDate":"2020-05-23"},{"lineNumber":259,"author":{"gitId":"-"},"content":"    background-color: $table-header-bg-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":260,"author":{"gitId":"-"},"content":"    border: 1px solid $table-header-border;","lastModifiedDate":"2020-05-23"},{"lineNumber":261,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":262,"author":{"gitId":"-"},"content":"  td {","lastModifiedDate":"2020-05-23"},{"lineNumber":263,"author":{"gitId":"-"},"content":"    border: 1px solid $table-border-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":264,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":265,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":266,"author":{"gitId":"-"},"content":"  @include media-query($on-laptop) {","lastModifiedDate":"2020-05-23"},{"lineNumber":267,"author":{"gitId":"-"},"content":"    display: block;","lastModifiedDate":"2020-05-23"},{"lineNumber":268,"author":{"gitId":"-"},"content":"    overflow-x: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":269,"author":{"gitId":"-"},"content":"    -webkit-overflow-scrolling: touch;","lastModifiedDate":"2020-05-23"},{"lineNumber":270,"author":{"gitId":"-"},"content":"            -ms-overflow-style: -ms-autohiding-scrollbar;","lastModifiedDate":"2020-05-23"},{"lineNumber":271,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":272,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":273,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-01-11"},{"lineNumber":274,"author":{"gitId":"-"},"content":"@media print {","lastModifiedDate":"2021-01-12"},{"lineNumber":275,"author":{"gitId":"-"},"content":"  /**","lastModifiedDate":"2021-01-11"},{"lineNumber":276,"author":{"gitId":"-"},"content":"  * Prevents page break from cutting through content when printing","lastModifiedDate":"2021-01-12"},{"lineNumber":277,"author":{"gitId":"-"},"content":"  */","lastModifiedDate":"2021-01-11"},{"lineNumber":278,"author":{"gitId":"-"},"content":"  body {","lastModifiedDate":"2021-01-11"},{"lineNumber":279,"author":{"gitId":"-"},"content":"    display: block;","lastModifiedDate":"2021-01-11"},{"lineNumber":280,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-11"},{"lineNumber":281,"author":{"gitId":"-"},"content":"  /**","lastModifiedDate":"2021-01-12"},{"lineNumber":282,"author":{"gitId":"-"},"content":"  * Replaces the top navigation menu with the project name when printing","lastModifiedDate":"2021-01-12"},{"lineNumber":283,"author":{"gitId":"-"},"content":"  */","lastModifiedDate":"2021-01-12"},{"lineNumber":284,"author":{"gitId":"-"},"content":"  .site-header .wrapper {","lastModifiedDate":"2021-01-12"},{"lineNumber":285,"author":{"gitId":"-"},"content":"    display: none;","lastModifiedDate":"2021-01-12"},{"lineNumber":286,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-12"},{"lineNumber":287,"author":{"gitId":"-"},"content":"  .site-header {","lastModifiedDate":"2021-01-12"},{"lineNumber":288,"author":{"gitId":"-"},"content":"    text-align: center;","lastModifiedDate":"2021-01-12"},{"lineNumber":289,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-12"},{"lineNumber":290,"author":{"gitId":"-"},"content":"  .site-header:before {","lastModifiedDate":"2021-01-12"},{"lineNumber":291,"author":{"gitId":"XXJJXJ"},"content":"    content: \"Managera\";","lastModifiedDate":"2021-09-18"},{"lineNumber":292,"author":{"gitId":"-"},"content":"    font-size: 32px;","lastModifiedDate":"2021-01-12"},{"lineNumber":293,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-11"},{"lineNumber":294,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-01-12"},{"lineNumber":295,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-01-12"}],"authorContributionMap":{"XXJJXJ":1,"-":294}},{"path":"docs/index.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"XXJJXJ"},"content":"title: Managera","lastModifiedDate":"2021-09-22"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"XXJJXJ"},"content":"[![CI Status](https://github.com/AY2122S1-CS2103T-T10-2/tp/workflows/Java%20CI/badge.svg)](https://github.com/AY2122S1-CS2103T-T10-2/tp/actions)","lastModifiedDate":"2021-09-22"},{"lineNumber":7,"author":{"gitId":"-"},"content":"[![codecov](https://codecov.io/gh/AY2122S1-CS2103T-T10-2/tp/branch/master/graph/badge.svg?token\u003dSVE776T4OX)](https://codecov.io/gh/AY2122S1-CS2103T-T10-2/tp)","lastModifiedDate":"2021-09-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"![Ui](images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"XXJJXJ"},"content":"**Managera is a desktop application for managing your event details and its corresponding participant credentials.** While it has a GUI, most of the user interactions happen using a CLI (Command Line Interface).","lastModifiedDate":"2021-09-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"XXJJXJ"},"content":"* If you are interested in using Managera, head over to the [_Quick Start_ section of the **User Guide**](UserGuide.html#quick-start).","lastModifiedDate":"2021-09-22"},{"lineNumber":14,"author":{"gitId":"XXJJXJ"},"content":"* If you are interested about developing Managera, the [**Developer Guide**](DeveloperGuide.html) is a good place to start.","lastModifiedDate":"2021-09-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"**Acknowledgements**","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"XXJJXJ"},"content":"* This project is based on the AddressBook-Level3 project created by the [SE-EDU initiative](https://se-education.org).","lastModifiedDate":"2021-09-22"},{"lineNumber":20,"author":{"gitId":"-"},"content":"* Libraries used: [JavaFX](https://openjfx.io/), [Jackson](https://github.com/FasterXML/jackson), [JUnit5](https://github.com/junit-team/junit5)","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"XXJJXJ":6,"-":14}},{"path":"docs/team/davelowqx.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"davelowqx"},"content":"---","lastModifiedDate":"2021-09-18"},{"lineNumber":2,"author":{"gitId":"davelowqx"},"content":"layout: page","lastModifiedDate":"2021-09-18"},{"lineNumber":3,"author":{"gitId":"davelowqx"},"content":"title: Dave Low\u0027s Project Portfolio Page","lastModifiedDate":"2021-09-18"},{"lineNumber":4,"author":{"gitId":"davelowqx"},"content":"---","lastModifiedDate":"2021-09-18"},{"lineNumber":5,"author":{"gitId":"davelowqx"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":6,"author":{"gitId":"davelowqx"},"content":"### Project: AddressBook Level 3","lastModifiedDate":"2021-09-18"},{"lineNumber":7,"author":{"gitId":"davelowqx"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":8,"author":{"gitId":"davelowqx"},"content":"AddressBook - Level 3 is a desktop address book application used for teaching Software Engineering principles. The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java, and has about 10 kLoC.","lastModifiedDate":"2021-09-18"},{"lineNumber":9,"author":{"gitId":"davelowqx"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":10,"author":{"gitId":"davelowqx"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2021-09-18"},{"lineNumber":11,"author":{"gitId":"davelowqx"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":12,"author":{"gitId":"davelowqx"},"content":"- **New Feature**: Added the ability to undo/redo previous commands.","lastModifiedDate":"2021-09-18"},{"lineNumber":13,"author":{"gitId":"davelowqx"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":14,"author":{"gitId":"davelowqx"},"content":"  - What it does: allows the user to undo all previous commands one at a time. Preceding undo commands can be reversed by using the redo command.","lastModifiedDate":"2021-09-18"},{"lineNumber":15,"author":{"gitId":"davelowqx"},"content":"  - Justification: This feature improves the product significantly because a user can make mistakes in commands and the app should provide a convenient way to rectify them.","lastModifiedDate":"2021-09-18"},{"lineNumber":16,"author":{"gitId":"davelowqx"},"content":"  - Highlights: This enhancement affects existing commands and commands to be added in future. It required an in-depth analysis of design alternatives. The implementation too was challenging as it required changes to existing commands.","lastModifiedDate":"2021-09-18"},{"lineNumber":17,"author":{"gitId":"davelowqx"},"content":"  - Credits: _{mention here if you reused any code/ideas from elsewhere or if a third-party library is heavily used in the feature so that a reader can make a more accurate judgement of how much effort went into the feature}_","lastModifiedDate":"2021-09-18"},{"lineNumber":18,"author":{"gitId":"davelowqx"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":19,"author":{"gitId":"davelowqx"},"content":"- **New Feature**: Added a history command that allows the user to navigate to previous commands using up/down keys.","lastModifiedDate":"2021-09-18"},{"lineNumber":20,"author":{"gitId":"davelowqx"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":21,"author":{"gitId":"davelowqx"},"content":"- **Code contributed**: [RepoSense link]()","lastModifiedDate":"2021-09-18"},{"lineNumber":22,"author":{"gitId":"davelowqx"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":23,"author":{"gitId":"davelowqx"},"content":"- **Project management**:","lastModifiedDate":"2021-09-18"},{"lineNumber":24,"author":{"gitId":"davelowqx"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":25,"author":{"gitId":"davelowqx"},"content":"  - Managed releases `v1.3` - `v1.5rc` (3 releases) on GitHub","lastModifiedDate":"2021-09-18"},{"lineNumber":26,"author":{"gitId":"davelowqx"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":27,"author":{"gitId":"davelowqx"},"content":"- **Enhancements to existing features**:","lastModifiedDate":"2021-09-18"},{"lineNumber":28,"author":{"gitId":"davelowqx"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":29,"author":{"gitId":"davelowqx"},"content":"  - Updated the GUI color scheme (Pull requests [\\#33](), [\\#34]())","lastModifiedDate":"2021-09-18"},{"lineNumber":30,"author":{"gitId":"davelowqx"},"content":"  - Wrote additional tests for existing features to increase coverage from 88% to 92% (Pull requests [\\#36](), [\\#38]())","lastModifiedDate":"2021-09-18"},{"lineNumber":31,"author":{"gitId":"davelowqx"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":32,"author":{"gitId":"davelowqx"},"content":"- **Documentation**:","lastModifiedDate":"2021-09-18"},{"lineNumber":33,"author":{"gitId":"davelowqx"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":34,"author":{"gitId":"davelowqx"},"content":"  - User Guide:","lastModifiedDate":"2021-09-18"},{"lineNumber":35,"author":{"gitId":"davelowqx"},"content":"    - Added documentation for the features `delete` and `find` [\\#72]()","lastModifiedDate":"2021-09-18"},{"lineNumber":36,"author":{"gitId":"davelowqx"},"content":"    - Did cosmetic tweaks to existing documentation of features `clear`, `exit`: [\\#74]()","lastModifiedDate":"2021-09-18"},{"lineNumber":37,"author":{"gitId":"davelowqx"},"content":"  - Developer Guide:","lastModifiedDate":"2021-09-18"},{"lineNumber":38,"author":{"gitId":"davelowqx"},"content":"    - Added implementation details of the `delete` feature.","lastModifiedDate":"2021-09-18"},{"lineNumber":39,"author":{"gitId":"davelowqx"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":40,"author":{"gitId":"davelowqx"},"content":"- **Community**:","lastModifiedDate":"2021-09-18"},{"lineNumber":41,"author":{"gitId":"davelowqx"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":42,"author":{"gitId":"davelowqx"},"content":"  - PRs reviewed (with non-trivial review comments): [\\#12](), [\\#32](), [\\#19](), [\\#42]()","lastModifiedDate":"2021-09-18"},{"lineNumber":43,"author":{"gitId":"davelowqx"},"content":"  - Contributed to forum discussions (examples: [1](), [2](), [3](), [4]())","lastModifiedDate":"2021-09-18"},{"lineNumber":44,"author":{"gitId":"davelowqx"},"content":"  - Reported bugs and suggestions for other teams in the class (examples: [1](), [2](), [3]())","lastModifiedDate":"2021-09-18"},{"lineNumber":45,"author":{"gitId":"davelowqx"},"content":"  - Some parts of the history feature I added was adopted by several other class mates ([1](), [2]())","lastModifiedDate":"2021-09-18"},{"lineNumber":46,"author":{"gitId":"davelowqx"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":47,"author":{"gitId":"davelowqx"},"content":"- **Tools**:","lastModifiedDate":"2021-09-18"},{"lineNumber":48,"author":{"gitId":"davelowqx"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":49,"author":{"gitId":"davelowqx"},"content":"  - Integrated a third party library (Natty) to the project ([\\#42]())","lastModifiedDate":"2021-09-18"},{"lineNumber":50,"author":{"gitId":"davelowqx"},"content":"  - Integrated a new Github plugin (CircleCI) to the team repo","lastModifiedDate":"2021-09-18"},{"lineNumber":51,"author":{"gitId":"davelowqx"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":52,"author":{"gitId":"davelowqx"},"content":"- _{you can add/remove categories in the list above}_","lastModifiedDate":"2021-09-18"}],"authorContributionMap":{"davelowqx":52}},{"path":"docs/team/kanjitp.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"kanjitp"},"content":"---","lastModifiedDate":"2021-09-18"},{"lineNumber":2,"author":{"gitId":"kanjitp"},"content":"layout: page","lastModifiedDate":"2021-09-18"},{"lineNumber":3,"author":{"gitId":"kanjitp"},"content":"title: Kan Jitpakdi\u0027s Project Portfolio Page","lastModifiedDate":"2021-09-18"},{"lineNumber":4,"author":{"gitId":"kanjitp"},"content":"---","lastModifiedDate":"2021-09-18"},{"lineNumber":5,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":6,"author":{"gitId":"kanjitp"},"content":"### Project: Managera","lastModifiedDate":"2021-09-18"},{"lineNumber":7,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":8,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":9,"author":{"gitId":"kanjitp"},"content":"Managera is a desktop app that provides event organisers with a convenient method of keeping track of upcoming events and the details of their participants and collaborators. It does not handle communication between the event organiser and the participants or collaborators.","lastModifiedDate":"2021-09-18"},{"lineNumber":10,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":11,"author":{"gitId":"kanjitp"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2021-09-18"},{"lineNumber":12,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":13,"author":{"gitId":"kanjitp"},"content":"* **New Feature**: `Add Participants to Event`","lastModifiedDate":"2021-09-18"},{"lineNumber":14,"author":{"gitId":"kanjitp"},"content":"  * Added Participant class extending from Person class","lastModifiedDate":"2021-09-18"},{"lineNumber":15,"author":{"gitId":"kanjitp"},"content":"  * Added BirthDate, Note classes to be used as fields in Participant","lastModifiedDate":"2021-09-18"},{"lineNumber":16,"author":{"gitId":"kanjitp"},"content":"  * Highlights: (To be added)","lastModifiedDate":"2021-09-18"},{"lineNumber":17,"author":{"gitId":"kanjitp"},"content":"  * Credits: (To be added if any)","lastModifiedDate":"2021-09-18"},{"lineNumber":18,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":19,"author":{"gitId":"kanjitp"},"content":"* **New Feature**: `Remove Participants from Event`","lastModifiedDate":"2021-09-18"},{"lineNumber":20,"author":{"gitId":"kanjitp"},"content":"  * Created Classes the same as `Add Participant to Event`","lastModifiedDate":"2021-09-18"},{"lineNumber":21,"author":{"gitId":"kanjitp"},"content":"  * Highlights: (To be added)","lastModifiedDate":"2021-09-18"},{"lineNumber":22,"author":{"gitId":"kanjitp"},"content":"  * Credits: (To be added if any)","lastModifiedDate":"2021-09-18"},{"lineNumber":23,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":24,"author":{"gitId":"kanjitp"},"content":"* **Code contributed**: [RepoSense link]()","lastModifiedDate":"2021-09-18"},{"lineNumber":25,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":26,"author":{"gitId":"kanjitp"},"content":"* **Project management**:","lastModifiedDate":"2021-09-18"},{"lineNumber":27,"author":{"gitId":"kanjitp"},"content":"  * (To be added)","lastModifiedDate":"2021-09-18"},{"lineNumber":28,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":29,"author":{"gitId":"kanjitp"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2021-09-18"},{"lineNumber":30,"author":{"gitId":"kanjitp"},"content":"  * (To be added)","lastModifiedDate":"2021-09-18"},{"lineNumber":31,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":32,"author":{"gitId":"kanjitp"},"content":"* **Documentation**:","lastModifiedDate":"2021-09-18"},{"lineNumber":33,"author":{"gitId":"kanjitp"},"content":"  * User Guide:","lastModifiedDate":"2021-09-18"},{"lineNumber":34,"author":{"gitId":"kanjitp"},"content":"    * Added documentation for the features `addParticipant` and `removeParticipant` [\\#72]()","lastModifiedDate":"2021-09-18"},{"lineNumber":35,"author":{"gitId":"kanjitp"},"content":"    * Added FAQ for Managera inspiration and the origin of the name   ","lastModifiedDate":"2021-09-18"},{"lineNumber":36,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":37,"author":{"gitId":"kanjitp"},"content":"* **Community**:","lastModifiedDate":"2021-09-18"},{"lineNumber":38,"author":{"gitId":"kanjitp"},"content":"  ","lastModifiedDate":"2021-09-18"},{"lineNumber":39,"author":{"gitId":"kanjitp"},"content":"* **Tools**:","lastModifiedDate":"2021-09-18"},{"lineNumber":40,"author":{"gitId":"kanjitp"},"content":"  ","lastModifiedDate":"2021-09-18"},{"lineNumber":41,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-18"}],"authorContributionMap":{"kanjitp":41}},{"path":"docs/team/lowkangn.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"lowkangn"},"content":"---","lastModifiedDate":"2021-09-18"},{"lineNumber":2,"author":{"gitId":"lowkangn"},"content":"layout: page","lastModifiedDate":"2021-09-18"},{"lineNumber":3,"author":{"gitId":"lowkangn"},"content":"title: Low Kang Ngee\u0027s Project Portfolio Page","lastModifiedDate":"2021-09-18"},{"lineNumber":4,"author":{"gitId":"lowkangn"},"content":"---","lastModifiedDate":"2021-09-18"},{"lineNumber":5,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":6,"author":{"gitId":"lowkangn"},"content":"### Project: AddressBook Level 3","lastModifiedDate":"2021-09-18"},{"lineNumber":7,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":8,"author":{"gitId":"lowkangn"},"content":"Managera is a desktop app that provides event organisers with a convenient method of keeping track of upcoming events and the details of their participants and collaborators. It does not handle communication between the event organiser and the participants or collaborators.","lastModifiedDate":"2021-09-18"},{"lineNumber":9,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":10,"author":{"gitId":"lowkangn"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2021-09-18"},{"lineNumber":11,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":12,"author":{"gitId":"lowkangn"},"content":"* **New Feature**: `Mark an Event as Done`","lastModifiedDate":"2021-10-03"},{"lineNumber":13,"author":{"gitId":"lowkangn"},"content":"    * What it does: Allow users to mark a specific event as done, implying that it has concluded or passed.","lastModifiedDate":"2021-10-03"},{"lineNumber":14,"author":{"gitId":"lowkangn"},"content":"    * Justification: After an event has passed, users may want to mark it as done so that they can be certain that the event was conducted and concluded.","lastModifiedDate":"2021-10-03"},{"lineNumber":15,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":16,"author":{"gitId":"lowkangn"},"content":"* **Code contributed**: [RepoSense link]()","lastModifiedDate":"2021-10-03"},{"lineNumber":17,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":18,"author":{"gitId":"lowkangn"},"content":"* **Project management**:","lastModifiedDate":"2021-10-03"},{"lineNumber":19,"author":{"gitId":"lowkangn"},"content":"    * (To be added)","lastModifiedDate":"2021-10-03"},{"lineNumber":20,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":21,"author":{"gitId":"lowkangn"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2021-10-03"},{"lineNumber":22,"author":{"gitId":"lowkangn"},"content":"    * (To be added)","lastModifiedDate":"2021-10-03"},{"lineNumber":23,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":24,"author":{"gitId":"lowkangn"},"content":"* **Documentation**:","lastModifiedDate":"2021-10-03"},{"lineNumber":25,"author":{"gitId":"lowkangn"},"content":"    * Developer Guide:","lastModifiedDate":"2021-10-03"},{"lineNumber":26,"author":{"gitId":"lowkangn"},"content":"        * Added user stories","lastModifiedDate":"2021-10-03"},{"lineNumber":27,"author":{"gitId":"lowkangn"},"content":"    * User Guide","lastModifiedDate":"2021-10-03"},{"lineNumber":28,"author":{"gitId":"lowkangn"},"content":"        * Added documentation for the features `doneEvent` and `findParticipant`","lastModifiedDate":"2021-10-03"},{"lineNumber":29,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":30,"author":{"gitId":"lowkangn"},"content":"* **Community**:","lastModifiedDate":"2021-10-03"},{"lineNumber":31,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":32,"author":{"gitId":"lowkangn"},"content":"* **Tools**:","lastModifiedDate":"2021-10-03"}],"authorContributionMap":{"lowkangn":32}},{"path":"docs/team/ntwbruce.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"ntwbruce"},"content":"---","lastModifiedDate":"2021-09-18"},{"lineNumber":2,"author":{"gitId":"ntwbruce"},"content":"layout: page","lastModifiedDate":"2021-09-18"},{"lineNumber":3,"author":{"gitId":"ntwbruce"},"content":"title: Bruce Ng\u0027s Project Portfolio Page","lastModifiedDate":"2021-09-18"},{"lineNumber":4,"author":{"gitId":"ntwbruce"},"content":"---","lastModifiedDate":"2021-09-18"},{"lineNumber":5,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":6,"author":{"gitId":"ntwbruce"},"content":"### Project: Managera","lastModifiedDate":"2021-09-18"},{"lineNumber":7,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":8,"author":{"gitId":"ntwbruce"},"content":"Managera - a desktop app that provides event organisers with a convenient method of keeping track of upcoming events and ","lastModifiedDate":"2021-09-18"},{"lineNumber":9,"author":{"gitId":"ntwbruce"},"content":"the details of their participants and collaborators. It does not handle communication between the event organiser and ","lastModifiedDate":"2021-09-18"},{"lineNumber":10,"author":{"gitId":"ntwbruce"},"content":"the participants or collaborators.","lastModifiedDate":"2021-09-18"},{"lineNumber":11,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":12,"author":{"gitId":"ntwbruce"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2021-09-18"},{"lineNumber":13,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":14,"author":{"gitId":"ntwbruce"},"content":"* **Code contributed**: [RepoSense link]()","lastModifiedDate":"2021-09-18"},{"lineNumber":15,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":16,"author":{"gitId":"ntwbruce"},"content":"* **Project management**:","lastModifiedDate":"2021-09-18"},{"lineNumber":17,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":18,"author":{"gitId":"ntwbruce"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2021-09-18"},{"lineNumber":19,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":20,"author":{"gitId":"ntwbruce"},"content":"* **Documentation**:","lastModifiedDate":"2021-09-18"},{"lineNumber":21,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":22,"author":{"gitId":"ntwbruce"},"content":"* **Community**:","lastModifiedDate":"2021-09-18"},{"lineNumber":23,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":24,"author":{"gitId":"ntwbruce"},"content":"* **Tools**:","lastModifiedDate":"2021-09-18"}],"authorContributionMap":{"ntwbruce":24}},{"path":"docs/team/xxjjxj.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"XXJJXJ"},"content":"---","lastModifiedDate":"2021-09-18"},{"lineNumber":2,"author":{"gitId":"XXJJXJ"},"content":"layout: page","lastModifiedDate":"2021-09-18"},{"lineNumber":3,"author":{"gitId":"XXJJXJ"},"content":"title: Ye Xinjian\u0027s Project Portfolio Page","lastModifiedDate":"2021-09-18"},{"lineNumber":4,"author":{"gitId":"XXJJXJ"},"content":"---","lastModifiedDate":"2021-09-18"},{"lineNumber":5,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":6,"author":{"gitId":"XXJJXJ"},"content":"### Project: Managera","lastModifiedDate":"2021-09-28"},{"lineNumber":7,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":8,"author":{"gitId":"XXJJXJ"},"content":"Managera is a desktop event organizing application adapted from AddressBook - Level 3. The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java, and has about 10 kLoC.","lastModifiedDate":"2021-09-28"},{"lineNumber":9,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":10,"author":{"gitId":"XXJJXJ"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2021-09-18"},{"lineNumber":11,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":12,"author":{"gitId":"XXJJXJ"},"content":"* **New Feature**: Added ability to filter events by date and optionally time.","lastModifiedDate":"2021-09-28"},{"lineNumber":13,"author":{"gitId":"XXJJXJ"},"content":"    * What it does: Allow users to filter for events occurring on a specific date and optionally time.","lastModifiedDate":"2021-09-28"},{"lineNumber":14,"author":{"gitId":"XXJJXJ"},"content":"    * Justification: When there are many events on Managera, it is hard to eyeball for events that occurs on a specific day.","lastModifiedDate":"2021-09-28"},{"lineNumber":15,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":16,"author":{"gitId":"XXJJXJ"},"content":"* **New Feature**: Added ability to sort events in chronological order.","lastModifiedDate":"2021-09-28"},{"lineNumber":17,"author":{"gitId":"XXJJXJ"},"content":"    * What it does: Allow users to rearrange all existing events in chronological order.","lastModifiedDate":"2021-09-28"},{"lineNumber":18,"author":{"gitId":"XXJJXJ"},"content":"    * Justification: After adding multiple events or ad hoc events, the timeline of events may become too messy for users to keep track of.","lastModifiedDate":"2021-09-28"},{"lineNumber":19,"author":{"gitId":"XXJJXJ"},"content":"  ","lastModifiedDate":"2021-09-28"},{"lineNumber":20,"author":{"gitId":"XXJJXJ"},"content":"* **Code contributed**: [RepoSense link]()","lastModifiedDate":"2021-09-28"},{"lineNumber":21,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":22,"author":{"gitId":"XXJJXJ"},"content":"* **Documentation**:","lastModifiedDate":"2021-09-28"},{"lineNumber":23,"author":{"gitId":"XXJJXJ"},"content":"  * User Guide:","lastModifiedDate":"2021-09-28"},{"lineNumber":24,"author":{"gitId":"XXJJXJ"},"content":"    * Added documentation for the features `sortEvents`.","lastModifiedDate":"2021-09-28"},{"lineNumber":25,"author":{"gitId":"XXJJXJ"},"content":"  * Developer Guide:","lastModifiedDate":"2021-09-28"},{"lineNumber":26,"author":{"gitId":"XXJJXJ"},"content":"    * Added implementation details of the `sortEvents` feature.","lastModifiedDate":"2021-09-28"},{"lineNumber":27,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":28,"author":{"gitId":"XXJJXJ"},"content":"* **Community**:","lastModifiedDate":"2021-09-28"},{"lineNumber":29,"author":{"gitId":"XXJJXJ"},"content":"  * PRs reviewed (with non-trivial review comments: - To be filled in future -","lastModifiedDate":"2021-09-28"}],"authorContributionMap":{"XXJJXJ":29}},{"path":"src/main/java/seedu/address/commons/core/LogsCenter.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.core;","lastModifiedDate":"2016-09-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-09-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.logging.ConsoleHandler;","lastModifiedDate":"2017-01-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.FileHandler;","lastModifiedDate":"2017-01-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.logging.Level;","lastModifiedDate":"2017-01-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.logging.SimpleFormatter;","lastModifiedDate":"2017-01-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Configures and manages loggers and handlers, including their logging level","lastModifiedDate":"2016-09-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * Named {@link Logger}s can be obtained from this class\u003cbr\u003e","lastModifiedDate":"2016-09-29"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * These loggers have been configured to output messages to the console and a {@code .log} file by default,","lastModifiedDate":"2016-09-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":" *   at the {@code INFO} level. A new {@code .log} file with a new numbering will be created after the log","lastModifiedDate":"2016-09-29"},{"lineNumber":16,"author":{"gitId":"-"},"content":" *   file reaches 5MB big, up to a maximum of 5 files.\u003cbr\u003e","lastModifiedDate":"2016-09-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class LogsCenter {","lastModifiedDate":"2016-09-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private static final int MAX_FILE_COUNT \u003d 5;","lastModifiedDate":"2016-09-28"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final int MAX_FILE_SIZE_IN_BYTES \u003d (int) (Math.pow(2, 20) * 5); // 5MB","lastModifiedDate":"2016-09-28"},{"lineNumber":21,"author":{"gitId":"lowkangn"},"content":"    private static final String LOG_FILE \u003d \"managera.log\";","lastModifiedDate":"2021-09-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static Level currentLogLevel \u003d Level.INFO;","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(LogsCenter.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static FileHandler fileHandler;","lastModifiedDate":"2016-09-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static ConsoleHandler consoleHandler;","lastModifiedDate":"2016-09-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Initializes with a custom log level (specified in the {@code config} object)","lastModifiedDate":"2016-09-29"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Loggers obtained *AFTER* this initialization will have their logging level changed\u003cbr\u003e","lastModifiedDate":"2016-09-29"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Logging levels for existing loggers will only be updated if the logger with the same name","lastModifiedDate":"2016-10-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * is requested again from the LogsCenter.","lastModifiedDate":"2016-10-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-29"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public static void init(Config config) {","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        currentLogLevel \u003d config.getLogLevel();","lastModifiedDate":"2016-09-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        logger.info(\"currentLogLevel: \" + currentLogLevel);","lastModifiedDate":"2016-09-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * Creates a logger with the given name.","lastModifiedDate":"2017-03-20"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public static Logger getLogger(String name) {","lastModifiedDate":"2016-09-28"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        Logger logger \u003d Logger.getLogger(name);","lastModifiedDate":"2016-09-28"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        logger.setUseParentHandlers(false);","lastModifiedDate":"2016-09-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        removeHandlers(logger);","lastModifiedDate":"2016-09-28"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        addConsoleHandler(logger);","lastModifiedDate":"2016-09-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        addFileHandler(logger);","lastModifiedDate":"2016-09-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return Logger.getLogger(name);","lastModifiedDate":"2016-09-28"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Creates a Logger for the given class name.","lastModifiedDate":"2017-01-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e Logger getLogger(Class\u003cT\u003e clazz) {","lastModifiedDate":"2017-01-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        if (clazz \u003d\u003d null) {","lastModifiedDate":"2017-04-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            return Logger.getLogger(\"\");","lastModifiedDate":"2017-04-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-04-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        return getLogger(clazz.getSimpleName());","lastModifiedDate":"2017-01-16"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * Adds the {@code consoleHandler} to the {@code logger}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * Creates the {@code consoleHandler} if it is null.","lastModifiedDate":"2017-08-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    private static void addConsoleHandler(Logger logger) {","lastModifiedDate":"2016-09-09"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        if (consoleHandler \u003d\u003d null) {","lastModifiedDate":"2017-04-05"},{"lineNumber":68,"author":{"gitId":"-"},"content":"            consoleHandler \u003d createConsoleHandler();","lastModifiedDate":"2017-04-05"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-04-05"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        logger.addHandler(consoleHandler);","lastModifiedDate":"2016-09-09"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * Remove all the handlers from {@code logger}.","lastModifiedDate":"2017-08-16"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    private static void removeHandlers(Logger logger) {","lastModifiedDate":"2016-09-28"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        Arrays.stream(logger.getHandlers())","lastModifiedDate":"2018-01-21"},{"lineNumber":78,"author":{"gitId":"-"},"content":"                .forEach(logger::removeHandler);","lastModifiedDate":"2018-01-21"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-28"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * Adds the {@code fileHandler} to the {@code logger}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * Creates {@code fileHandler} if it is null.","lastModifiedDate":"2017-08-16"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    private static void addFileHandler(Logger logger) {","lastModifiedDate":"2016-09-09"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-09"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            if (fileHandler \u003d\u003d null) {","lastModifiedDate":"2017-04-05"},{"lineNumber":88,"author":{"gitId":"-"},"content":"                fileHandler \u003d createFileHandler();","lastModifiedDate":"2017-04-05"},{"lineNumber":89,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-04-05"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            logger.addHandler(fileHandler);","lastModifiedDate":"2016-09-09"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-09"},{"lineNumber":92,"author":{"gitId":"-"},"content":"            logger.warning(\"Error adding file handler for logger.\");","lastModifiedDate":"2016-09-09"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * Creates a {@code FileHandler} for the log file.","lastModifiedDate":"2017-08-16"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     * @throws IOException if there are problems opening the file.","lastModifiedDate":"2017-08-16"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    private static FileHandler createFileHandler() throws IOException {","lastModifiedDate":"2016-09-09"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        FileHandler fileHandler \u003d new FileHandler(LOG_FILE, MAX_FILE_SIZE_IN_BYTES, MAX_FILE_COUNT, true);","lastModifiedDate":"2016-09-28"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        fileHandler.setFormatter(new SimpleFormatter());","lastModifiedDate":"2016-09-09"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        fileHandler.setLevel(currentLogLevel);","lastModifiedDate":"2016-09-09"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        return fileHandler;","lastModifiedDate":"2016-09-09"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    private static ConsoleHandler createConsoleHandler() {","lastModifiedDate":"2016-09-09"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        ConsoleHandler consoleHandler \u003d new ConsoleHandler();","lastModifiedDate":"2016-09-09"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        consoleHandler.setLevel(currentLogLevel);","lastModifiedDate":"2016-09-09"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        return consoleHandler;","lastModifiedDate":"2016-09-09"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"-":111,"lowkangn":1}},{"path":"src/main/java/seedu/address/commons/core/Messages.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.core;","lastModifiedDate":"2016-09-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Container for user visible messages.","lastModifiedDate":"2016-08-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class Messages {","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_UNKNOWN_COMMAND \u003d \"Unknown command\";","lastModifiedDate":"2016-09-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_COMMAND_FORMAT \u003d \"Invalid command format! \\n%1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"XXJJXJ"},"content":"    public static final String MESSAGE_EVENTS_LISTED_OVERVIEW \u003d \"%1$d events listed!\";","lastModifiedDate":"2021-09-21"},{"lineNumber":11,"author":{"gitId":"ntwbruce"},"content":"    public static final String MESSAGE_EVENT_NOT_FOUND \u003d \"The Event you are looking for does not exist!\";","lastModifiedDate":"2021-09-29"},{"lineNumber":12,"author":{"gitId":"kanjitp"},"content":"    public static final String MESSAGE_INVALID_PARTICIPANT_DISPLAYED_INDEX \u003d","lastModifiedDate":"2021-09-28"},{"lineNumber":13,"author":{"gitId":"kanjitp"},"content":"            \"The participant index provided is invalid\";","lastModifiedDate":"2021-09-28"},{"lineNumber":14,"author":{"gitId":"lowkangn"},"content":"    public static final String MESSAGE_INVALID_EVENT_DISPLAYED_INDEX \u003d","lastModifiedDate":"2021-10-03"},{"lineNumber":15,"author":{"gitId":"lowkangn"},"content":"            \"The event index provided is invalid\";","lastModifiedDate":"2021-10-03"},{"lineNumber":16,"author":{"gitId":"kanjitp"},"content":"    public static final String MESSAGE_PARTICIPANTS_LISTED_OVERVIEW \u003d \"%1$d participants listed!\";","lastModifiedDate":"2021-09-28"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":18,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"XXJJXJ":1,"kanjitp":3,"ntwbruce":1,"-":11,"lowkangn":2}},{"path":"src/main/java/seedu/address/logic/Logic.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2016-09-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-12-03"},{"lineNumber":11,"author":{"gitId":"XXJJXJ"},"content":"import seedu.address.model.event.Event;","lastModifiedDate":"2021-09-18"},{"lineNumber":12,"author":{"gitId":"kanjitp"},"content":"import seedu.address.model.participant.Participant;","lastModifiedDate":"2021-09-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * API of the Logic component","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public interface Logic {","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2016-09-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * @param commandText The command as entered by the user.","lastModifiedDate":"2016-09-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * @return the result of the command execution.","lastModifiedDate":"2016-09-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @throws ParseException If an error occurs during parsing.","lastModifiedDate":"2017-03-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    CommandResult execute(String commandText) throws CommandException, ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Returns the AddressBook.","lastModifiedDate":"2018-12-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * @see seedu.address.model.Model#getAddressBook()","lastModifiedDate":"2018-12-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    ReadOnlyAddressBook getAddressBook();","lastModifiedDate":"2018-12-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":34,"author":{"gitId":"kanjitp"},"content":"    /** Returns an unmodifiable view of the filtered list of participants */","lastModifiedDate":"2021-09-26"},{"lineNumber":35,"author":{"gitId":"kanjitp"},"content":"    ObservableList\u003cParticipant\u003e getFilteredParticipantList();","lastModifiedDate":"2021-09-26"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-26"},{"lineNumber":37,"author":{"gitId":"XXJJXJ"},"content":"    /** Returns an unmodifiable view of list of Events */","lastModifiedDate":"2021-09-18"},{"lineNumber":38,"author":{"gitId":"XXJJXJ"},"content":"    ObservableList\u003cEvent\u003e getFilteredEventList();","lastModifiedDate":"2021-09-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     * Set the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"XXJJXJ":3,"kanjitp":3,"-":48}},{"path":"src/main/java/seedu/address/logic/LogicManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-29"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2016-09-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2016-09-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.AddressBookParser;","lastModifiedDate":"2017-07-07"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-12-03"},{"lineNumber":17,"author":{"gitId":"XXJJXJ"},"content":"import seedu.address.model.event.Event;","lastModifiedDate":"2021-09-18"},{"lineNumber":18,"author":{"gitId":"kanjitp"},"content":"import seedu.address.model.participant.Participant;","lastModifiedDate":"2021-09-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.storage.Storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * The main LogicManager of the app.","lastModifiedDate":"2016-09-22"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class LogicManager implements Logic {","lastModifiedDate":"2018-12-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static final String FILE_OPS_ERROR_MESSAGE \u003d \"Could not save data to file: \";","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(LogicManager.class);","lastModifiedDate":"2016-09-29"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final Model model;","lastModifiedDate":"2016-09-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private final Storage storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private final AddressBookParser addressBookParser;","lastModifiedDate":"2017-07-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Constructs a {@code LogicManager} with the given {@code Model} and {@code Storage}.","lastModifiedDate":"2020-05-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public LogicManager(Model model, Storage storage) {","lastModifiedDate":"2018-12-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        this.model \u003d model;","lastModifiedDate":"2016-09-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        addressBookParser \u003d new AddressBookParser();","lastModifiedDate":"2018-01-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public CommandResult execute(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        logger.info(\"----------------[USER COMMAND][\" + commandText + \"]\");","lastModifiedDate":"2016-09-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        CommandResult commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        Command command \u003d addressBookParser.parseCommand(commandText);","lastModifiedDate":"2017-07-07"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        commandResult \u003d command.execute(model);","lastModifiedDate":"2019-01-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            storage.saveAddressBook(model.getAddressBook());","lastModifiedDate":"2018-12-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2018-12-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            throw new CommandException(FILE_OPS_ERROR_MESSAGE + ioe, ioe);","lastModifiedDate":"2018-12-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-03"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2018-12-03"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        return model.getAddressBook();","lastModifiedDate":"2018-12-03"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-03"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":64,"author":{"gitId":"kanjitp"},"content":"    public ObservableList\u003cParticipant\u003e getFilteredParticipantList() {","lastModifiedDate":"2021-09-26"},{"lineNumber":65,"author":{"gitId":"kanjitp"},"content":"        return model.getFilteredParticipantList();","lastModifiedDate":"2021-09-26"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-29"},{"lineNumber":68,"author":{"gitId":"XXJJXJ"},"content":"    @Override","lastModifiedDate":"2021-09-18"},{"lineNumber":69,"author":{"gitId":"XXJJXJ"},"content":"    public ObservableList\u003cEvent\u003e getFilteredEventList() {","lastModifiedDate":"2021-09-21"},{"lineNumber":70,"author":{"gitId":"XXJJXJ"},"content":"        return model.getFilteredEventList();","lastModifiedDate":"2021-09-21"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        return model.getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        return model.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        model.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"XXJJXJ":4,"kanjitp":3,"-":80}},{"path":"src/main/java/seedu/address/logic/commands/AddCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-05-09"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-05-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-05-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-05-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":10,"author":{"gitId":"kanjitp"},"content":"import java.util.Objects;","lastModifiedDate":"2021-09-26"},{"lineNumber":11,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":14,"author":{"gitId":"kanjitp"},"content":"import seedu.address.model.participant.Participant;","lastModifiedDate":"2021-09-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"kanjitp"},"content":" * Adds a Participant to Managera.","lastModifiedDate":"2021-09-28"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"add\";","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"XXJJXJ"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds a participant to the address book. \"","lastModifiedDate":"2021-09-29"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            + \"Parameters: \"","lastModifiedDate":"2017-06-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"            + PREFIX_NAME + \"NAME \"","lastModifiedDate":"2017-06-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"PHONE \"","lastModifiedDate":"2017-05-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"EMAIL \"","lastModifiedDate":"2017-05-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            + PREFIX_ADDRESS + \"ADDRESS \"","lastModifiedDate":"2017-05-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2017-05-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2017-06-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"            + PREFIX_NAME + \"John Doe \"","lastModifiedDate":"2017-06-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"98765432 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"johnd@example.com \"","lastModifiedDate":"2017-05-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            + PREFIX_ADDRESS + \"311, Clementi Ave 2, #02-25 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            + PREFIX_TAG + \"friends \"","lastModifiedDate":"2017-05-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            + PREFIX_TAG + \"owesMoney\";","lastModifiedDate":"2017-05-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"kanjitp"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New participant added: %1$s\";","lastModifiedDate":"2021-09-28"},{"lineNumber":39,"author":{"gitId":"kanjitp"},"content":"    public static final String MESSAGE_DUPLICATE_PARTICIPANT \u003d \"This participant already exists in the address book\";","lastModifiedDate":"2021-09-28"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"kanjitp"},"content":"    private final Participant toAdd;","lastModifiedDate":"2021-09-26"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":44,"author":{"gitId":"kanjitp"},"content":"     * Creates an AddCommand to add the specified {@code Participant}","lastModifiedDate":"2021-09-28"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":46,"author":{"gitId":"kanjitp"},"content":"    public AddCommand(Participant participant) {","lastModifiedDate":"2021-09-26"},{"lineNumber":47,"author":{"gitId":"kanjitp"},"content":"        requireNonNull(participant);","lastModifiedDate":"2021-09-26"},{"lineNumber":48,"author":{"gitId":"kanjitp"},"content":"        toAdd \u003d participant;","lastModifiedDate":"2021-09-26"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2017-05-15"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":55,"author":{"gitId":"kanjitp"},"content":"        if (model.hasParticipant(toAdd)) {","lastModifiedDate":"2021-09-26"},{"lineNumber":56,"author":{"gitId":"kanjitp"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_PARTICIPANT);","lastModifiedDate":"2021-09-28"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":59,"author":{"gitId":"kanjitp"},"content":"        model.addParticipant(toAdd);","lastModifiedDate":"2021-09-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, toAdd));","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-22"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-22"},{"lineNumber":65,"author":{"gitId":"kanjitp"},"content":"        if (this \u003d\u003d other) {","lastModifiedDate":"2021-09-26"},{"lineNumber":66,"author":{"gitId":"kanjitp"},"content":"            return true;","lastModifiedDate":"2021-09-26"},{"lineNumber":67,"author":{"gitId":"kanjitp"},"content":"        } else if (!(other instanceof AddCommand)) {","lastModifiedDate":"2021-09-26"},{"lineNumber":68,"author":{"gitId":"kanjitp"},"content":"            return false;","lastModifiedDate":"2021-09-26"},{"lineNumber":69,"author":{"gitId":"kanjitp"},"content":"        }","lastModifiedDate":"2021-09-26"},{"lineNumber":70,"author":{"gitId":"kanjitp"},"content":"        AddCommand otherAddCommand \u003d (AddCommand) other;","lastModifiedDate":"2021-09-26"},{"lineNumber":71,"author":{"gitId":"kanjitp"},"content":"        return otherAddCommand.toAdd.equals(toAdd);","lastModifiedDate":"2021-09-26"},{"lineNumber":72,"author":{"gitId":"kanjitp"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":73,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":74,"author":{"gitId":"kanjitp"},"content":"    @Override","lastModifiedDate":"2021-09-26"},{"lineNumber":75,"author":{"gitId":"kanjitp"},"content":"    public int hashCode() {","lastModifiedDate":"2021-09-26"},{"lineNumber":76,"author":{"gitId":"kanjitp"},"content":"        return Objects.hash(toAdd);","lastModifiedDate":"2021-09-26"},{"lineNumber":77,"author":{"gitId":"kanjitp"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":78,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":79,"author":{"gitId":"kanjitp"},"content":"    @Override","lastModifiedDate":"2021-09-26"},{"lineNumber":80,"author":{"gitId":"kanjitp"},"content":"    public String toString() {","lastModifiedDate":"2021-09-26"},{"lineNumber":81,"author":{"gitId":"kanjitp"},"content":"        return \"AddCommand{\"","lastModifiedDate":"2021-09-26"},{"lineNumber":82,"author":{"gitId":"kanjitp"},"content":"            + \"toAdd\u003d\" + toAdd","lastModifiedDate":"2021-09-26"},{"lineNumber":83,"author":{"gitId":"kanjitp"},"content":"            + \u0027}\u0027;","lastModifiedDate":"2021-09-26"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":85,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"XXJJXJ":1,"kanjitp":33,"-":51}},{"path":"src/main/java/seedu/address/logic/commands/AddParticipantToEventCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kanjitp"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-09-26"},{"lineNumber":2,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":3,"author":{"gitId":"kanjitp"},"content":"//import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-09-26"},{"lineNumber":4,"author":{"gitId":"kanjitp"},"content":"//","lastModifiedDate":"2021-09-26"},{"lineNumber":5,"author":{"gitId":"kanjitp"},"content":"//import java.util.List;","lastModifiedDate":"2021-09-26"},{"lineNumber":6,"author":{"gitId":"kanjitp"},"content":"//import seedu.address.commons.core.Messages;","lastModifiedDate":"2021-09-26"},{"lineNumber":7,"author":{"gitId":"kanjitp"},"content":"//import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-09-26"},{"lineNumber":8,"author":{"gitId":"kanjitp"},"content":"//import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-09-26"},{"lineNumber":9,"author":{"gitId":"kanjitp"},"content":"//import seedu.address.model.Model;","lastModifiedDate":"2021-09-26"},{"lineNumber":10,"author":{"gitId":"kanjitp"},"content":"//import seedu.address.model.person.Person;","lastModifiedDate":"2021-09-26"},{"lineNumber":11,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":12,"author":{"gitId":"kanjitp"},"content":"//public class addParticipantCommand extends Command {","lastModifiedDate":"2021-09-26"},{"lineNumber":13,"author":{"gitId":"kanjitp"},"content":"//","lastModifiedDate":"2021-09-26"},{"lineNumber":14,"author":{"gitId":"kanjitp"},"content":"//    public static final String COMMAND_WORD \u003d \"addParticipant\";","lastModifiedDate":"2021-09-26"},{"lineNumber":15,"author":{"gitId":"kanjitp"},"content":"//","lastModifiedDate":"2021-09-26"},{"lineNumber":16,"author":{"gitId":"kanjitp"},"content":"//    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2021-09-26"},{"lineNumber":17,"author":{"gitId":"kanjitp"},"content":"//        + \": add the specified Participant to an Event.\\n\"","lastModifiedDate":"2021-09-26"},{"lineNumber":18,"author":{"gitId":"kanjitp"},"content":"//        + \"Parameters: INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2021-09-26"},{"lineNumber":19,"author":{"gitId":"kanjitp"},"content":"//        + \"Example: \" + COMMAND_WORD + \" 1\";","lastModifiedDate":"2021-09-26"},{"lineNumber":20,"author":{"gitId":"kanjitp"},"content":"//","lastModifiedDate":"2021-09-26"},{"lineNumber":21,"author":{"gitId":"kanjitp"},"content":"//    public static final String MESSAGE_DELETE_PERSON_SUCCESS \u003d \"Deleted Person: %1$s\";","lastModifiedDate":"2021-09-26"},{"lineNumber":22,"author":{"gitId":"kanjitp"},"content":"//","lastModifiedDate":"2021-09-26"},{"lineNumber":23,"author":{"gitId":"kanjitp"},"content":"//    private final Index targetIndex;","lastModifiedDate":"2021-09-26"},{"lineNumber":24,"author":{"gitId":"kanjitp"},"content":"//","lastModifiedDate":"2021-09-26"},{"lineNumber":25,"author":{"gitId":"kanjitp"},"content":"//    public DeleteCommand(Index targetIndex) {","lastModifiedDate":"2021-09-26"},{"lineNumber":26,"author":{"gitId":"kanjitp"},"content":"//        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2021-09-26"},{"lineNumber":27,"author":{"gitId":"kanjitp"},"content":"//    }","lastModifiedDate":"2021-09-26"},{"lineNumber":28,"author":{"gitId":"kanjitp"},"content":"//","lastModifiedDate":"2021-09-26"},{"lineNumber":29,"author":{"gitId":"kanjitp"},"content":"//    @Override","lastModifiedDate":"2021-09-26"},{"lineNumber":30,"author":{"gitId":"kanjitp"},"content":"//    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-09-26"},{"lineNumber":31,"author":{"gitId":"kanjitp"},"content":"//        requireNonNull(model);","lastModifiedDate":"2021-09-26"},{"lineNumber":32,"author":{"gitId":"kanjitp"},"content":"//        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2021-09-26"},{"lineNumber":33,"author":{"gitId":"kanjitp"},"content":"//","lastModifiedDate":"2021-09-26"},{"lineNumber":34,"author":{"gitId":"kanjitp"},"content":"//        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2021-09-26"},{"lineNumber":35,"author":{"gitId":"kanjitp"},"content":"//            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2021-09-26"},{"lineNumber":36,"author":{"gitId":"kanjitp"},"content":"//        }","lastModifiedDate":"2021-09-26"},{"lineNumber":37,"author":{"gitId":"kanjitp"},"content":"//","lastModifiedDate":"2021-09-26"},{"lineNumber":38,"author":{"gitId":"kanjitp"},"content":"//        Person personToDelete \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2021-09-26"},{"lineNumber":39,"author":{"gitId":"kanjitp"},"content":"//        model.deletePerson(personToDelete);","lastModifiedDate":"2021-09-26"},{"lineNumber":40,"author":{"gitId":"kanjitp"},"content":"//        return new CommandResult(String.format(MESSAGE_DELETE_PERSON_SUCCESS, personToDelete));","lastModifiedDate":"2021-09-26"},{"lineNumber":41,"author":{"gitId":"kanjitp"},"content":"//    }","lastModifiedDate":"2021-09-26"},{"lineNumber":42,"author":{"gitId":"kanjitp"},"content":"//","lastModifiedDate":"2021-09-26"},{"lineNumber":43,"author":{"gitId":"kanjitp"},"content":"//    @Override","lastModifiedDate":"2021-09-26"},{"lineNumber":44,"author":{"gitId":"kanjitp"},"content":"//    public boolean equals(Object other) {","lastModifiedDate":"2021-09-26"},{"lineNumber":45,"author":{"gitId":"kanjitp"},"content":"//        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-09-26"},{"lineNumber":46,"author":{"gitId":"kanjitp"},"content":"//            || (other instanceof addParticipantCommand // instanceof handles nulls","lastModifiedDate":"2021-09-26"},{"lineNumber":47,"author":{"gitId":"kanjitp"},"content":"//            \u0026\u0026 targetIndex.equals(((DeleteCommand) other).targetIndex)); // state check","lastModifiedDate":"2021-09-26"},{"lineNumber":48,"author":{"gitId":"kanjitp"},"content":"//    }","lastModifiedDate":"2021-09-26"},{"lineNumber":49,"author":{"gitId":"kanjitp"},"content":"//}","lastModifiedDate":"2021-09-26"}],"authorContributionMap":{"kanjitp":49}},{"path":"src/main/java/seedu/address/logic/commands/DeleteCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-09-01"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2016-09-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":11,"author":{"gitId":"kanjitp"},"content":"import seedu.address.model.participant.Participant;","lastModifiedDate":"2021-09-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"XXJJXJ"},"content":" * Deletes a participant identified using it\u0027s displayed index from the address book.","lastModifiedDate":"2021-09-28"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"delete\";","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"lowkangn"},"content":"            + \": Deletes the participant identified by the index number used in the displayed participant list.\\n\"","lastModifiedDate":"2021-10-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2016-09-29"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1\";","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"kanjitp"},"content":"    public static final String MESSAGE_DELETE_PARTICIPANT_SUCCESS \u003d \"Deleted Participant: %1$s\";","lastModifiedDate":"2021-09-28"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final Index targetIndex;","lastModifiedDate":"2017-06-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public DeleteCommand(Index targetIndex) {","lastModifiedDate":"2017-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2016-09-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":36,"author":{"gitId":"kanjitp"},"content":"        List\u003cParticipant\u003e lastShownList \u003d model.getFilteredParticipantList();","lastModifiedDate":"2021-09-26"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2018-04-19"},{"lineNumber":39,"author":{"gitId":"kanjitp"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PARTICIPANT_DISPLAYED_INDEX);","lastModifiedDate":"2021-09-28"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":42,"author":{"gitId":"kanjitp"},"content":"        Participant participantToDelete \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2021-09-26"},{"lineNumber":43,"author":{"gitId":"kanjitp"},"content":"        model.deleteParticipant(participantToDelete);","lastModifiedDate":"2021-09-26"},{"lineNumber":44,"author":{"gitId":"kanjitp"},"content":"        return new CommandResult(String.format(MESSAGE_DELETE_PARTICIPANT_SUCCESS, participantToDelete));","lastModifiedDate":"2021-09-28"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"                || (other instanceof DeleteCommand // instanceof handles nulls","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"                \u0026\u0026 targetIndex.equals(((DeleteCommand) other).targetIndex)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"XXJJXJ":1,"kanjitp":7,"-":44,"lowkangn":1}},{"path":"src/main/java/seedu/address/logic/commands/DoneEventCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"lowkangn"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-10-03"},{"lineNumber":2,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":3,"author":{"gitId":"lowkangn"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-03"},{"lineNumber":4,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":5,"author":{"gitId":"lowkangn"},"content":"import java.util.List;","lastModifiedDate":"2021-10-03"},{"lineNumber":6,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":7,"author":{"gitId":"lowkangn"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2021-10-03"},{"lineNumber":8,"author":{"gitId":"lowkangn"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-10-03"},{"lineNumber":9,"author":{"gitId":"lowkangn"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-03"},{"lineNumber":10,"author":{"gitId":"lowkangn"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-10-03"},{"lineNumber":11,"author":{"gitId":"lowkangn"},"content":"import seedu.address.model.event.Event;","lastModifiedDate":"2021-10-03"},{"lineNumber":12,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":13,"author":{"gitId":"lowkangn"},"content":"/**","lastModifiedDate":"2021-10-03"},{"lineNumber":14,"author":{"gitId":"lowkangn"},"content":" * Marks an Event identified using its displayed index as done.","lastModifiedDate":"2021-10-03"},{"lineNumber":15,"author":{"gitId":"lowkangn"},"content":" */","lastModifiedDate":"2021-10-03"},{"lineNumber":16,"author":{"gitId":"lowkangn"},"content":"public class DoneEventCommand extends Command {","lastModifiedDate":"2021-10-03"},{"lineNumber":17,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":18,"author":{"gitId":"lowkangn"},"content":"    public static final String COMMAND_WORD \u003d \"doneEvent\";","lastModifiedDate":"2021-10-03"},{"lineNumber":19,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":20,"author":{"gitId":"lowkangn"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Marks the event identified by the \"","lastModifiedDate":"2021-10-03"},{"lineNumber":21,"author":{"gitId":"lowkangn"},"content":"            + \"index number used in the displayed event list as done.\\n\"","lastModifiedDate":"2021-10-03"},{"lineNumber":22,"author":{"gitId":"lowkangn"},"content":"            + \"Parameters: INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2021-10-03"},{"lineNumber":23,"author":{"gitId":"lowkangn"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1\";","lastModifiedDate":"2021-10-03"},{"lineNumber":24,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":25,"author":{"gitId":"lowkangn"},"content":"    public static final String MESSAGE_DONE_EVENT_SUCCESS \u003d \"Marked event as done: %1$s\";","lastModifiedDate":"2021-10-03"},{"lineNumber":26,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":27,"author":{"gitId":"lowkangn"},"content":"    private final Index targetIndex;","lastModifiedDate":"2021-10-03"},{"lineNumber":28,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":29,"author":{"gitId":"lowkangn"},"content":"    /**","lastModifiedDate":"2021-10-03"},{"lineNumber":30,"author":{"gitId":"lowkangn"},"content":"     * This is a constructor for DoneEventCommand.","lastModifiedDate":"2021-10-03"},{"lineNumber":31,"author":{"gitId":"lowkangn"},"content":"     *","lastModifiedDate":"2021-10-03"},{"lineNumber":32,"author":{"gitId":"lowkangn"},"content":"     * @param targetIndex The index of the event to be marked as done, as seen in the displayed event list.","lastModifiedDate":"2021-10-03"},{"lineNumber":33,"author":{"gitId":"lowkangn"},"content":"     */","lastModifiedDate":"2021-10-03"},{"lineNumber":34,"author":{"gitId":"lowkangn"},"content":"    public DoneEventCommand(Index targetIndex) {","lastModifiedDate":"2021-10-03"},{"lineNumber":35,"author":{"gitId":"lowkangn"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2021-10-03"},{"lineNumber":36,"author":{"gitId":"lowkangn"},"content":"    }","lastModifiedDate":"2021-10-03"},{"lineNumber":37,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":38,"author":{"gitId":"lowkangn"},"content":"    @Override","lastModifiedDate":"2021-10-03"},{"lineNumber":39,"author":{"gitId":"lowkangn"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-10-03"},{"lineNumber":40,"author":{"gitId":"lowkangn"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-10-03"},{"lineNumber":41,"author":{"gitId":"lowkangn"},"content":"        List\u003cEvent\u003e lastShownList \u003d model.getFilteredEventList();","lastModifiedDate":"2021-10-03"},{"lineNumber":42,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":43,"author":{"gitId":"lowkangn"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2021-10-03"},{"lineNumber":44,"author":{"gitId":"lowkangn"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_EVENT_DISPLAYED_INDEX);","lastModifiedDate":"2021-10-03"},{"lineNumber":45,"author":{"gitId":"lowkangn"},"content":"        }","lastModifiedDate":"2021-10-03"},{"lineNumber":46,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":47,"author":{"gitId":"lowkangn"},"content":"        Event eventToMarkDone \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2021-10-03"},{"lineNumber":48,"author":{"gitId":"lowkangn"},"content":"        model.markEventAsDone(eventToMarkDone);","lastModifiedDate":"2021-10-03"},{"lineNumber":49,"author":{"gitId":"lowkangn"},"content":"        return new CommandResult(String.format(MESSAGE_DONE_EVENT_SUCCESS, eventToMarkDone.markAsDone()));","lastModifiedDate":"2021-10-03"},{"lineNumber":50,"author":{"gitId":"lowkangn"},"content":"    }","lastModifiedDate":"2021-10-03"},{"lineNumber":51,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":52,"author":{"gitId":"lowkangn"},"content":"    @Override","lastModifiedDate":"2021-10-03"},{"lineNumber":53,"author":{"gitId":"lowkangn"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-03"},{"lineNumber":54,"author":{"gitId":"lowkangn"},"content":"        return other \u003d\u003d this","lastModifiedDate":"2021-10-03"},{"lineNumber":55,"author":{"gitId":"lowkangn"},"content":"                || (other instanceof DoneEventCommand","lastModifiedDate":"2021-10-03"},{"lineNumber":56,"author":{"gitId":"lowkangn"},"content":"                \u0026\u0026 targetIndex.equals(((DoneEventCommand) other).targetIndex));","lastModifiedDate":"2021-10-03"},{"lineNumber":57,"author":{"gitId":"lowkangn"},"content":"    }","lastModifiedDate":"2021-10-03"},{"lineNumber":58,"author":{"gitId":"lowkangn"},"content":"}","lastModifiedDate":"2021-10-03"}],"authorContributionMap":{"lowkangn":58}},{"path":"src/main/java/seedu/address/logic/commands/EditCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-12-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-05-09"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-05-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-05-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-05-09"},{"lineNumber":9,"author":{"gitId":"kanjitp"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PARTICIPANTS;","lastModifiedDate":"2021-09-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":11,"author":{"gitId":"kanjitp"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-09-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2018-01-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-01-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-12-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2016-12-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.CollectionUtil;","lastModifiedDate":"2016-12-26"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":23,"author":{"gitId":"kanjitp"},"content":"import seedu.address.model.nextofkin.NextOfKin;","lastModifiedDate":"2021-09-26"},{"lineNumber":24,"author":{"gitId":"kanjitp"},"content":"import seedu.address.model.participant.BirthDate;","lastModifiedDate":"2021-09-26"},{"lineNumber":25,"author":{"gitId":"kanjitp"},"content":"import seedu.address.model.participant.Note;","lastModifiedDate":"2021-09-26"},{"lineNumber":26,"author":{"gitId":"kanjitp"},"content":"import seedu.address.model.participant.Participant;","lastModifiedDate":"2021-09-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2016-12-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2016-12-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2016-12-26"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2016-12-26"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":33,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-12-26"},{"lineNumber":34,"author":{"gitId":"kanjitp"},"content":" * Edits the details of an existing Participant in the address book.","lastModifiedDate":"2021-09-29"},{"lineNumber":35,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-12-26"},{"lineNumber":36,"author":{"gitId":"-"},"content":"public class EditCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"edit\";","lastModifiedDate":"2016-12-26"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":40,"author":{"gitId":"kanjitp"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Edits the details of the participant identified \"","lastModifiedDate":"2021-09-28"},{"lineNumber":41,"author":{"gitId":"kanjitp"},"content":"            + \"by the index number used in the displayed Participant list. \"","lastModifiedDate":"2021-09-28"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            + \"Existing values will be overwritten by the input values.\\n\"","lastModifiedDate":"2016-12-26"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2017-06-06"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_NAME + \"NAME] \"","lastModifiedDate":"2017-06-06"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_PHONE + \"PHONE] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_EMAIL + \"EMAIL] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_ADDRESS + \"ADDRESS] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2017-05-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"91234567 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"johndoe@example.com\";","lastModifiedDate":"2017-05-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":53,"author":{"gitId":"kanjitp"},"content":"    public static final String MESSAGE_EDIT_PARTICIPANT_SUCCESS \u003d \"Edited Participant: %1$s\";","lastModifiedDate":"2021-09-28"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_NOT_EDITED \u003d \"At least one field to edit must be provided.\";","lastModifiedDate":"2016-12-26"},{"lineNumber":55,"author":{"gitId":"kanjitp"},"content":"    public static final String MESSAGE_DUPLICATE_PARTICIPANT \u003d \"This participant already exists in Managera.\";","lastModifiedDate":"2021-09-28"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    private final Index index;","lastModifiedDate":"2017-05-25"},{"lineNumber":58,"author":{"gitId":"kanjitp"},"content":"    private final EditParticipantDescriptor editParticipantDescriptor;","lastModifiedDate":"2021-09-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":61,"author":{"gitId":"XXJJXJ"},"content":"     * @param index                     of the Participant in the filtered Participant list to edit","lastModifiedDate":"2021-09-28"},{"lineNumber":62,"author":{"gitId":"XXJJXJ"},"content":"     * @param editParticipantDescriptor details to edit the Participant with","lastModifiedDate":"2021-09-28"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":64,"author":{"gitId":"kanjitp"},"content":"    public EditCommand(Index index, EditParticipantDescriptor editParticipantDescriptor) {","lastModifiedDate":"2021-09-26"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        requireNonNull(index);","lastModifiedDate":"2017-05-25"},{"lineNumber":66,"author":{"gitId":"kanjitp"},"content":"        requireNonNull(editParticipantDescriptor);","lastModifiedDate":"2021-09-26"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        this.index \u003d index;","lastModifiedDate":"2017-05-25"},{"lineNumber":69,"author":{"gitId":"kanjitp"},"content":"        this.editParticipantDescriptor \u003d new EditParticipantDescriptor(editParticipantDescriptor);","lastModifiedDate":"2021-09-26"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-26"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":75,"author":{"gitId":"kanjitp"},"content":"        List\u003cParticipant\u003e lastShownList \u003d model.getFilteredParticipantList();","lastModifiedDate":"2021-09-26"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2018-04-19"},{"lineNumber":78,"author":{"gitId":"kanjitp"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PARTICIPANT_DISPLAYED_INDEX);","lastModifiedDate":"2021-09-28"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":81,"author":{"gitId":"kanjitp"},"content":"        Participant participantToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2021-09-26"},{"lineNumber":82,"author":{"gitId":"kanjitp"},"content":"        Participant editedParticipant \u003d createEditedParticipant(participantToEdit, editParticipantDescriptor);","lastModifiedDate":"2021-09-26"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":84,"author":{"gitId":"kanjitp"},"content":"        if (!participantToEdit.isSameParticipant(editedParticipant) \u0026\u0026 model.hasParticipant(editedParticipant)) {","lastModifiedDate":"2021-09-28"},{"lineNumber":85,"author":{"gitId":"kanjitp"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_PARTICIPANT);","lastModifiedDate":"2021-09-28"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":88,"author":{"gitId":"kanjitp"},"content":"        model.setParticipant(participantToEdit, editedParticipant);","lastModifiedDate":"2021-09-26"},{"lineNumber":89,"author":{"gitId":"kanjitp"},"content":"        model.updateFilteredParticipantList(PREDICATE_SHOW_ALL_PARTICIPANTS);","lastModifiedDate":"2021-09-26"},{"lineNumber":90,"author":{"gitId":"kanjitp"},"content":"        return new CommandResult(String.format(MESSAGE_EDIT_PARTICIPANT_SUCCESS, editedParticipant));","lastModifiedDate":"2021-09-28"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":94,"author":{"gitId":"XXJJXJ"},"content":"     * Creates and returns a {@code Participant} with the details of {@code participantToEdit}","lastModifiedDate":"2021-09-28"},{"lineNumber":95,"author":{"gitId":"XXJJXJ"},"content":"     * edited with {@code editParticipantDescriptor}.","lastModifiedDate":"2021-09-28"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":97,"author":{"gitId":"kanjitp"},"content":"    private static Participant createEditedParticipant(Participant participantToEdit,","lastModifiedDate":"2021-09-26"},{"lineNumber":98,"author":{"gitId":"kanjitp"},"content":"                                                       EditParticipantDescriptor editParticipantDescriptor) {","lastModifiedDate":"2021-09-26"},{"lineNumber":99,"author":{"gitId":"kanjitp"},"content":"        assert participantToEdit !\u003d null;","lastModifiedDate":"2021-09-26"},{"lineNumber":100,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":101,"author":{"gitId":"kanjitp"},"content":"        Name updatedName \u003d editParticipantDescriptor.getName().orElse(participantToEdit.getName());","lastModifiedDate":"2021-09-26"},{"lineNumber":102,"author":{"gitId":"kanjitp"},"content":"        Phone updatedPhone \u003d editParticipantDescriptor.getPhone().orElse(participantToEdit.getPhone());","lastModifiedDate":"2021-09-26"},{"lineNumber":103,"author":{"gitId":"kanjitp"},"content":"        Email updatedEmail \u003d editParticipantDescriptor.getEmail().orElse(participantToEdit.getEmail());","lastModifiedDate":"2021-09-26"},{"lineNumber":104,"author":{"gitId":"kanjitp"},"content":"        Address updatedAddress \u003d editParticipantDescriptor.getAddress().orElse(participantToEdit.getAddress());","lastModifiedDate":"2021-09-26"},{"lineNumber":105,"author":{"gitId":"kanjitp"},"content":"        Set\u003cTag\u003e updatedTags \u003d editParticipantDescriptor.getTags().orElse(participantToEdit.getTags());","lastModifiedDate":"2021-09-26"},{"lineNumber":106,"author":{"gitId":"kanjitp"},"content":"        BirthDate updatedBirthDate \u003d editParticipantDescriptor.getBirthDate().orElse(participantToEdit.getBirthDate());","lastModifiedDate":"2021-09-26"},{"lineNumber":107,"author":{"gitId":"kanjitp"},"content":"        Set\u003cNote\u003e updatedNotes \u003d editParticipantDescriptor.getNotes().orElse(participantToEdit.getNotes());","lastModifiedDate":"2021-09-26"},{"lineNumber":108,"author":{"gitId":"kanjitp"},"content":"        ArrayList\u003cNextOfKin\u003e updatedNextOfKins \u003d","lastModifiedDate":"2021-09-26"},{"lineNumber":109,"author":{"gitId":"kanjitp"},"content":"            editParticipantDescriptor.getNextOfKins().orElse(participantToEdit.getNextOfKins());","lastModifiedDate":"2021-09-26"},{"lineNumber":110,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":111,"author":{"gitId":"kanjitp"},"content":"        return new Participant(updatedName, updatedPhone, updatedEmail, updatedAddress, updatedTags, updatedBirthDate,","lastModifiedDate":"2021-09-26"},{"lineNumber":112,"author":{"gitId":"kanjitp"},"content":"                updatedNotes, updatedNextOfKins);","lastModifiedDate":"2021-09-26"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-05-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-05-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-08"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        if (!(other instanceof EditCommand)) {","lastModifiedDate":"2017-05-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-05-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        EditCommand e \u003d (EditCommand) other;","lastModifiedDate":"2017-05-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        return index.equals(e.index)","lastModifiedDate":"2017-05-25"},{"lineNumber":130,"author":{"gitId":"kanjitp"},"content":"            \u0026\u0026 editParticipantDescriptor.equals(e.editParticipantDescriptor);","lastModifiedDate":"2021-09-26"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":134,"author":{"gitId":"-"},"content":"     * Stores the details to edit the person with. Each non-empty field value will replace the","lastModifiedDate":"2016-12-26"},{"lineNumber":135,"author":{"gitId":"-"},"content":"     * corresponding field value of the person.","lastModifiedDate":"2016-12-26"},{"lineNumber":136,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    public static class EditPersonDescriptor {","lastModifiedDate":"2016-12-26"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        private Name name;","lastModifiedDate":"2017-06-21"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        private Phone phone;","lastModifiedDate":"2017-06-21"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        private Email email;","lastModifiedDate":"2017-06-21"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        private Address address;","lastModifiedDate":"2017-06-21"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        private Set\u003cTag\u003e tags;","lastModifiedDate":"2017-06-21"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":144,"author":{"gitId":"kanjitp"},"content":"        public EditPersonDescriptor() {","lastModifiedDate":"2021-09-26"},{"lineNumber":145,"author":{"gitId":"kanjitp"},"content":"        }","lastModifiedDate":"2021-09-26"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":148,"author":{"gitId":"-"},"content":"         * Copy constructor.","lastModifiedDate":"2018-01-11"},{"lineNumber":149,"author":{"gitId":"-"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2018-01-11"},{"lineNumber":150,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        public EditPersonDescriptor(EditPersonDescriptor toCopy) {","lastModifiedDate":"2016-12-26"},{"lineNumber":152,"author":{"gitId":"-"},"content":"            setName(toCopy.name);","lastModifiedDate":"2018-01-15"},{"lineNumber":153,"author":{"gitId":"-"},"content":"            setPhone(toCopy.phone);","lastModifiedDate":"2018-01-15"},{"lineNumber":154,"author":{"gitId":"-"},"content":"            setEmail(toCopy.email);","lastModifiedDate":"2018-01-15"},{"lineNumber":155,"author":{"gitId":"-"},"content":"            setAddress(toCopy.address);","lastModifiedDate":"2018-01-15"},{"lineNumber":156,"author":{"gitId":"-"},"content":"            setTags(toCopy.tags);","lastModifiedDate":"2018-01-11"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2016-12-26"},{"lineNumber":160,"author":{"gitId":"-"},"content":"         * Returns true if at least one field is edited.","lastModifiedDate":"2016-12-26"},{"lineNumber":161,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-26"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        public boolean isAnyFieldEdited() {","lastModifiedDate":"2016-12-26"},{"lineNumber":163,"author":{"gitId":"-"},"content":"            return CollectionUtil.isAnyNonNull(name, phone, email, address, tags);","lastModifiedDate":"2018-08-14"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        public void setName(Name name) {","lastModifiedDate":"2017-06-21"},{"lineNumber":167,"author":{"gitId":"-"},"content":"            this.name \u003d name;","lastModifiedDate":"2017-06-21"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        public Optional\u003cName\u003e getName() {","lastModifiedDate":"2016-12-26"},{"lineNumber":171,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(name);","lastModifiedDate":"2017-06-21"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        public void setPhone(Phone phone) {","lastModifiedDate":"2017-06-21"},{"lineNumber":175,"author":{"gitId":"-"},"content":"            this.phone \u003d phone;","lastModifiedDate":"2017-06-21"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        public Optional\u003cPhone\u003e getPhone() {","lastModifiedDate":"2016-12-26"},{"lineNumber":179,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(phone);","lastModifiedDate":"2017-06-21"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        public void setEmail(Email email) {","lastModifiedDate":"2017-06-21"},{"lineNumber":183,"author":{"gitId":"-"},"content":"            this.email \u003d email;","lastModifiedDate":"2017-06-21"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        public Optional\u003cEmail\u003e getEmail() {","lastModifiedDate":"2016-12-26"},{"lineNumber":187,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(email);","lastModifiedDate":"2017-06-21"},{"lineNumber":188,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":190,"author":{"gitId":"-"},"content":"        public void setAddress(Address address) {","lastModifiedDate":"2017-06-21"},{"lineNumber":191,"author":{"gitId":"-"},"content":"            this.address \u003d address;","lastModifiedDate":"2017-06-21"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        public Optional\u003cAddress\u003e getAddress() {","lastModifiedDate":"2016-12-26"},{"lineNumber":195,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(address);","lastModifiedDate":"2017-06-21"},{"lineNumber":196,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":198,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":199,"author":{"gitId":"-"},"content":"         * Sets {@code tags} to this object\u0027s {@code tags}.","lastModifiedDate":"2018-01-11"},{"lineNumber":200,"author":{"gitId":"-"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2018-01-11"},{"lineNumber":201,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":202,"author":{"gitId":"-"},"content":"        public void setTags(Set\u003cTag\u003e tags) {","lastModifiedDate":"2017-06-21"},{"lineNumber":203,"author":{"gitId":"-"},"content":"            this.tags \u003d (tags !\u003d null) ? new HashSet\u003c\u003e(tags) : null;","lastModifiedDate":"2018-01-11"},{"lineNumber":204,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":206,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":207,"author":{"gitId":"-"},"content":"         * Returns an unmodifiable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2018-01-11"},{"lineNumber":208,"author":{"gitId":"-"},"content":"         * if modification is attempted.","lastModifiedDate":"2018-01-11"},{"lineNumber":209,"author":{"gitId":"-"},"content":"         * Returns {@code Optional#empty()} if {@code tags} is null.","lastModifiedDate":"2018-01-11"},{"lineNumber":210,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":211,"author":{"gitId":"-"},"content":"        public Optional\u003cSet\u003cTag\u003e\u003e getTags() {","lastModifiedDate":"2017-03-07"},{"lineNumber":212,"author":{"gitId":"-"},"content":"            return (tags !\u003d null) ? Optional.of(Collections.unmodifiableSet(tags)) : Optional.empty();","lastModifiedDate":"2018-01-11"},{"lineNumber":213,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":215,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-05"},{"lineNumber":216,"author":{"gitId":"-"},"content":"        public boolean equals(Object other) {","lastModifiedDate":"2017-05-05"},{"lineNumber":217,"author":{"gitId":"-"},"content":"            // short circuit if same object","lastModifiedDate":"2017-05-05"},{"lineNumber":218,"author":{"gitId":"-"},"content":"            if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-05"},{"lineNumber":219,"author":{"gitId":"-"},"content":"                return true;","lastModifiedDate":"2017-05-05"},{"lineNumber":220,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":221,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":222,"author":{"gitId":"-"},"content":"            // instanceof handles nulls","lastModifiedDate":"2017-05-05"},{"lineNumber":223,"author":{"gitId":"-"},"content":"            if (!(other instanceof EditPersonDescriptor)) {","lastModifiedDate":"2017-05-05"},{"lineNumber":224,"author":{"gitId":"-"},"content":"                return false;","lastModifiedDate":"2017-05-05"},{"lineNumber":225,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":227,"author":{"gitId":"-"},"content":"            // state check","lastModifiedDate":"2017-05-05"},{"lineNumber":228,"author":{"gitId":"-"},"content":"            EditPersonDescriptor e \u003d (EditPersonDescriptor) other;","lastModifiedDate":"2017-05-05"},{"lineNumber":229,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-21"},{"lineNumber":230,"author":{"gitId":"-"},"content":"            return getName().equals(e.getName())","lastModifiedDate":"2017-06-21"},{"lineNumber":231,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getPhone().equals(e.getPhone())","lastModifiedDate":"2017-06-21"},{"lineNumber":232,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getEmail().equals(e.getEmail())","lastModifiedDate":"2017-06-21"},{"lineNumber":233,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getAddress().equals(e.getAddress())","lastModifiedDate":"2017-06-21"},{"lineNumber":234,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getTags().equals(e.getTags());","lastModifiedDate":"2017-06-21"},{"lineNumber":235,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-05"},{"lineNumber":236,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":237,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":238,"author":{"gitId":"kanjitp"},"content":"    /**","lastModifiedDate":"2021-09-26"},{"lineNumber":239,"author":{"gitId":"XXJJXJ"},"content":"     * Stores the details to edit the Participant with. Each non-empty field value will replace the","lastModifiedDate":"2021-09-28"},{"lineNumber":240,"author":{"gitId":"XXJJXJ"},"content":"     * corresponding field value of the Participant.","lastModifiedDate":"2021-09-28"},{"lineNumber":241,"author":{"gitId":"kanjitp"},"content":"     */","lastModifiedDate":"2021-09-26"},{"lineNumber":242,"author":{"gitId":"kanjitp"},"content":"    public static class EditParticipantDescriptor {","lastModifiedDate":"2021-09-26"},{"lineNumber":243,"author":{"gitId":"kanjitp"},"content":"        private Name name;","lastModifiedDate":"2021-09-26"},{"lineNumber":244,"author":{"gitId":"kanjitp"},"content":"        private Phone phone;","lastModifiedDate":"2021-09-26"},{"lineNumber":245,"author":{"gitId":"kanjitp"},"content":"        private Email email;","lastModifiedDate":"2021-09-26"},{"lineNumber":246,"author":{"gitId":"kanjitp"},"content":"        private Address address;","lastModifiedDate":"2021-09-26"},{"lineNumber":247,"author":{"gitId":"kanjitp"},"content":"        private Set\u003cTag\u003e tags;","lastModifiedDate":"2021-09-26"},{"lineNumber":248,"author":{"gitId":"kanjitp"},"content":"        private BirthDate birthDate;","lastModifiedDate":"2021-09-26"},{"lineNumber":249,"author":{"gitId":"kanjitp"},"content":"        private Set\u003cNote\u003e notes;","lastModifiedDate":"2021-09-26"},{"lineNumber":250,"author":{"gitId":"kanjitp"},"content":"        private ArrayList\u003cNextOfKin\u003e nextOfKins;","lastModifiedDate":"2021-09-26"},{"lineNumber":251,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":252,"author":{"gitId":"kanjitp"},"content":"        public EditParticipantDescriptor() {","lastModifiedDate":"2021-09-26"},{"lineNumber":253,"author":{"gitId":"kanjitp"},"content":"        }","lastModifiedDate":"2021-09-26"},{"lineNumber":254,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":255,"author":{"gitId":"kanjitp"},"content":"        /**","lastModifiedDate":"2021-09-26"},{"lineNumber":256,"author":{"gitId":"kanjitp"},"content":"         * Copy constructor.","lastModifiedDate":"2021-09-26"},{"lineNumber":257,"author":{"gitId":"kanjitp"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2021-09-26"},{"lineNumber":258,"author":{"gitId":"kanjitp"},"content":"         */","lastModifiedDate":"2021-09-26"},{"lineNumber":259,"author":{"gitId":"kanjitp"},"content":"        public EditParticipantDescriptor(EditParticipantDescriptor toCopy) {","lastModifiedDate":"2021-09-26"},{"lineNumber":260,"author":{"gitId":"kanjitp"},"content":"            setName(toCopy.name);","lastModifiedDate":"2021-09-26"},{"lineNumber":261,"author":{"gitId":"kanjitp"},"content":"            setPhone(toCopy.phone);","lastModifiedDate":"2021-09-26"},{"lineNumber":262,"author":{"gitId":"kanjitp"},"content":"            setEmail(toCopy.email);","lastModifiedDate":"2021-09-26"},{"lineNumber":263,"author":{"gitId":"kanjitp"},"content":"            setAddress(toCopy.address);","lastModifiedDate":"2021-09-26"},{"lineNumber":264,"author":{"gitId":"kanjitp"},"content":"            setTags(toCopy.tags);","lastModifiedDate":"2021-09-26"},{"lineNumber":265,"author":{"gitId":"kanjitp"},"content":"            setBirthDate(toCopy.birthDate);","lastModifiedDate":"2021-09-26"},{"lineNumber":266,"author":{"gitId":"kanjitp"},"content":"            setNotes(toCopy.notes);","lastModifiedDate":"2021-09-26"},{"lineNumber":267,"author":{"gitId":"kanjitp"},"content":"            setNextOfKins(toCopy.nextOfKins);","lastModifiedDate":"2021-09-26"},{"lineNumber":268,"author":{"gitId":"kanjitp"},"content":"        }","lastModifiedDate":"2021-09-26"},{"lineNumber":269,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":270,"author":{"gitId":"kanjitp"},"content":"        /**","lastModifiedDate":"2021-09-26"},{"lineNumber":271,"author":{"gitId":"kanjitp"},"content":"         * Returns true if at least one field is edited.","lastModifiedDate":"2021-09-26"},{"lineNumber":272,"author":{"gitId":"kanjitp"},"content":"         */","lastModifiedDate":"2021-09-26"},{"lineNumber":273,"author":{"gitId":"kanjitp"},"content":"        public boolean isAnyFieldEdited() {","lastModifiedDate":"2021-09-26"},{"lineNumber":274,"author":{"gitId":"kanjitp"},"content":"            return CollectionUtil.isAnyNonNull(name, phone, email, address, tags);","lastModifiedDate":"2021-09-26"},{"lineNumber":275,"author":{"gitId":"kanjitp"},"content":"        }","lastModifiedDate":"2021-09-26"},{"lineNumber":276,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":277,"author":{"gitId":"kanjitp"},"content":"        public void setName(Name name) {","lastModifiedDate":"2021-09-26"},{"lineNumber":278,"author":{"gitId":"kanjitp"},"content":"            this.name \u003d name;","lastModifiedDate":"2021-09-26"},{"lineNumber":279,"author":{"gitId":"kanjitp"},"content":"        }","lastModifiedDate":"2021-09-26"},{"lineNumber":280,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":281,"author":{"gitId":"kanjitp"},"content":"        public Optional\u003cName\u003e getName() {","lastModifiedDate":"2021-09-26"},{"lineNumber":282,"author":{"gitId":"kanjitp"},"content":"            return Optional.ofNullable(name);","lastModifiedDate":"2021-09-26"},{"lineNumber":283,"author":{"gitId":"kanjitp"},"content":"        }","lastModifiedDate":"2021-09-26"},{"lineNumber":284,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":285,"author":{"gitId":"kanjitp"},"content":"        public void setPhone(Phone phone) {","lastModifiedDate":"2021-09-26"},{"lineNumber":286,"author":{"gitId":"kanjitp"},"content":"            this.phone \u003d phone;","lastModifiedDate":"2021-09-26"},{"lineNumber":287,"author":{"gitId":"kanjitp"},"content":"        }","lastModifiedDate":"2021-09-26"},{"lineNumber":288,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":289,"author":{"gitId":"kanjitp"},"content":"        public Optional\u003cPhone\u003e getPhone() {","lastModifiedDate":"2021-09-26"},{"lineNumber":290,"author":{"gitId":"kanjitp"},"content":"            return Optional.ofNullable(phone);","lastModifiedDate":"2021-09-26"},{"lineNumber":291,"author":{"gitId":"kanjitp"},"content":"        }","lastModifiedDate":"2021-09-26"},{"lineNumber":292,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":293,"author":{"gitId":"kanjitp"},"content":"        public void setEmail(Email email) {","lastModifiedDate":"2021-09-26"},{"lineNumber":294,"author":{"gitId":"kanjitp"},"content":"            this.email \u003d email;","lastModifiedDate":"2021-09-26"},{"lineNumber":295,"author":{"gitId":"kanjitp"},"content":"        }","lastModifiedDate":"2021-09-26"},{"lineNumber":296,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":297,"author":{"gitId":"kanjitp"},"content":"        public Optional\u003cEmail\u003e getEmail() {","lastModifiedDate":"2021-09-26"},{"lineNumber":298,"author":{"gitId":"kanjitp"},"content":"            return Optional.ofNullable(email);","lastModifiedDate":"2021-09-26"},{"lineNumber":299,"author":{"gitId":"kanjitp"},"content":"        }","lastModifiedDate":"2021-09-26"},{"lineNumber":300,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":301,"author":{"gitId":"kanjitp"},"content":"        public void setAddress(Address address) {","lastModifiedDate":"2021-09-26"},{"lineNumber":302,"author":{"gitId":"kanjitp"},"content":"            this.address \u003d address;","lastModifiedDate":"2021-09-26"},{"lineNumber":303,"author":{"gitId":"kanjitp"},"content":"        }","lastModifiedDate":"2021-09-26"},{"lineNumber":304,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":305,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":306,"author":{"gitId":"kanjitp"},"content":"        public Optional\u003cAddress\u003e getAddress() {","lastModifiedDate":"2021-09-26"},{"lineNumber":307,"author":{"gitId":"kanjitp"},"content":"            return Optional.ofNullable(address);","lastModifiedDate":"2021-09-26"},{"lineNumber":308,"author":{"gitId":"kanjitp"},"content":"        }","lastModifiedDate":"2021-09-26"},{"lineNumber":309,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":310,"author":{"gitId":"kanjitp"},"content":"        public void setBirthDate(BirthDate birthDate) {","lastModifiedDate":"2021-09-26"},{"lineNumber":311,"author":{"gitId":"kanjitp"},"content":"            this.birthDate \u003d birthDate;","lastModifiedDate":"2021-09-26"},{"lineNumber":312,"author":{"gitId":"kanjitp"},"content":"        }","lastModifiedDate":"2021-09-26"},{"lineNumber":313,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":314,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":315,"author":{"gitId":"kanjitp"},"content":"        public Optional\u003cBirthDate\u003e getBirthDate() {","lastModifiedDate":"2021-09-26"},{"lineNumber":316,"author":{"gitId":"kanjitp"},"content":"            return Optional.ofNullable(birthDate);","lastModifiedDate":"2021-09-26"},{"lineNumber":317,"author":{"gitId":"kanjitp"},"content":"        }","lastModifiedDate":"2021-09-26"},{"lineNumber":318,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":319,"author":{"gitId":"kanjitp"},"content":"        public void setNotes(Set\u003cNote\u003e notes) {","lastModifiedDate":"2021-09-26"},{"lineNumber":320,"author":{"gitId":"kanjitp"},"content":"            this.notes \u003d (notes !\u003d null) ? new HashSet\u003c\u003e(notes) : null;","lastModifiedDate":"2021-09-26"},{"lineNumber":321,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":322,"author":{"gitId":"kanjitp"},"content":"        }","lastModifiedDate":"2021-09-26"},{"lineNumber":323,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":324,"author":{"gitId":"kanjitp"},"content":"        public Optional\u003cSet\u003cNote\u003e\u003e getNotes() {","lastModifiedDate":"2021-09-26"},{"lineNumber":325,"author":{"gitId":"kanjitp"},"content":"            return (notes !\u003d null) ? Optional.of(Collections.unmodifiableSet(notes)) : Optional.empty();","lastModifiedDate":"2021-09-26"},{"lineNumber":326,"author":{"gitId":"kanjitp"},"content":"        }","lastModifiedDate":"2021-09-26"},{"lineNumber":327,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":328,"author":{"gitId":"kanjitp"},"content":"        public void setNextOfKins(ArrayList\u003cNextOfKin\u003e nextOfKins) {","lastModifiedDate":"2021-09-26"},{"lineNumber":329,"author":{"gitId":"kanjitp"},"content":"            this.nextOfKins \u003d (nextOfKins !\u003d null) ? new ArrayList\u003c\u003e(nextOfKins) : null;","lastModifiedDate":"2021-09-26"},{"lineNumber":330,"author":{"gitId":"kanjitp"},"content":"        }","lastModifiedDate":"2021-09-26"},{"lineNumber":331,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":332,"author":{"gitId":"kanjitp"},"content":"        public Optional\u003cArrayList\u003cNextOfKin\u003e\u003e getNextOfKins() {","lastModifiedDate":"2021-09-26"},{"lineNumber":333,"author":{"gitId":"kanjitp"},"content":"            return (nextOfKins !\u003d null) ? Optional.of(new ArrayList\u003c\u003e((nextOfKins))) : Optional.empty();","lastModifiedDate":"2021-09-26"},{"lineNumber":334,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":335,"author":{"gitId":"kanjitp"},"content":"        }","lastModifiedDate":"2021-09-26"},{"lineNumber":336,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":337,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":338,"author":{"gitId":"kanjitp"},"content":"        /**","lastModifiedDate":"2021-09-26"},{"lineNumber":339,"author":{"gitId":"kanjitp"},"content":"         * Sets {@code tags} to this object\u0027s {@code tags}.","lastModifiedDate":"2021-09-26"},{"lineNumber":340,"author":{"gitId":"kanjitp"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2021-09-26"},{"lineNumber":341,"author":{"gitId":"kanjitp"},"content":"         */","lastModifiedDate":"2021-09-26"},{"lineNumber":342,"author":{"gitId":"kanjitp"},"content":"        public void setTags(Set\u003cTag\u003e tags) {","lastModifiedDate":"2021-09-26"},{"lineNumber":343,"author":{"gitId":"kanjitp"},"content":"            this.tags \u003d (tags !\u003d null) ? new HashSet\u003c\u003e(tags) : null;","lastModifiedDate":"2021-09-26"},{"lineNumber":344,"author":{"gitId":"kanjitp"},"content":"        }","lastModifiedDate":"2021-09-26"},{"lineNumber":345,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":346,"author":{"gitId":"kanjitp"},"content":"        /**","lastModifiedDate":"2021-09-26"},{"lineNumber":347,"author":{"gitId":"kanjitp"},"content":"         * Returns an unmodifiable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2021-09-26"},{"lineNumber":348,"author":{"gitId":"kanjitp"},"content":"         * if modification is attempted.","lastModifiedDate":"2021-09-26"},{"lineNumber":349,"author":{"gitId":"kanjitp"},"content":"         * Returns {@code Optional#empty()} if {@code tags} is null.","lastModifiedDate":"2021-09-26"},{"lineNumber":350,"author":{"gitId":"kanjitp"},"content":"         */","lastModifiedDate":"2021-09-26"},{"lineNumber":351,"author":{"gitId":"kanjitp"},"content":"        public Optional\u003cSet\u003cTag\u003e\u003e getTags() {","lastModifiedDate":"2021-09-26"},{"lineNumber":352,"author":{"gitId":"kanjitp"},"content":"            return (tags !\u003d null) ? Optional.of(Collections.unmodifiableSet(tags)) : Optional.empty();","lastModifiedDate":"2021-09-26"},{"lineNumber":353,"author":{"gitId":"kanjitp"},"content":"        }","lastModifiedDate":"2021-09-26"},{"lineNumber":354,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":355,"author":{"gitId":"kanjitp"},"content":"        @Override","lastModifiedDate":"2021-09-26"},{"lineNumber":356,"author":{"gitId":"kanjitp"},"content":"        public boolean equals(Object other) {","lastModifiedDate":"2021-09-26"},{"lineNumber":357,"author":{"gitId":"kanjitp"},"content":"            // short circuit if same object","lastModifiedDate":"2021-09-26"},{"lineNumber":358,"author":{"gitId":"kanjitp"},"content":"            if (other \u003d\u003d this) {","lastModifiedDate":"2021-09-26"},{"lineNumber":359,"author":{"gitId":"kanjitp"},"content":"                return true;","lastModifiedDate":"2021-09-26"},{"lineNumber":360,"author":{"gitId":"kanjitp"},"content":"            }","lastModifiedDate":"2021-09-26"},{"lineNumber":361,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":362,"author":{"gitId":"kanjitp"},"content":"            // instanceof handles nulls","lastModifiedDate":"2021-09-26"},{"lineNumber":363,"author":{"gitId":"kanjitp"},"content":"            if (!(other instanceof EditParticipantDescriptor)) {","lastModifiedDate":"2021-09-26"},{"lineNumber":364,"author":{"gitId":"kanjitp"},"content":"                return false;","lastModifiedDate":"2021-09-26"},{"lineNumber":365,"author":{"gitId":"kanjitp"},"content":"            }","lastModifiedDate":"2021-09-26"},{"lineNumber":366,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":367,"author":{"gitId":"kanjitp"},"content":"            // state check","lastModifiedDate":"2021-09-26"},{"lineNumber":368,"author":{"gitId":"kanjitp"},"content":"            EditParticipantDescriptor e \u003d (EditParticipantDescriptor) other;","lastModifiedDate":"2021-09-26"},{"lineNumber":369,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":370,"author":{"gitId":"kanjitp"},"content":"            return getName().equals(e.getName())","lastModifiedDate":"2021-09-26"},{"lineNumber":371,"author":{"gitId":"kanjitp"},"content":"                \u0026\u0026 getPhone().equals(e.getPhone())","lastModifiedDate":"2021-09-26"},{"lineNumber":372,"author":{"gitId":"kanjitp"},"content":"                \u0026\u0026 getEmail().equals(e.getEmail())","lastModifiedDate":"2021-09-26"},{"lineNumber":373,"author":{"gitId":"kanjitp"},"content":"                \u0026\u0026 getAddress().equals(e.getAddress())","lastModifiedDate":"2021-09-26"},{"lineNumber":374,"author":{"gitId":"kanjitp"},"content":"                \u0026\u0026 getTags().equals(e.getTags());","lastModifiedDate":"2021-09-26"},{"lineNumber":375,"author":{"gitId":"kanjitp"},"content":"        }","lastModifiedDate":"2021-09-26"},{"lineNumber":376,"author":{"gitId":"kanjitp"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":377,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-26"}],"authorContributionMap":{"XXJJXJ":6,"kanjitp":181,"-":190}},{"path":"src/main/java/seedu/address/logic/commands/FilterEventCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"XXJJXJ"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-09-21"},{"lineNumber":2,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":3,"author":{"gitId":"XXJJXJ"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-09-21"},{"lineNumber":4,"author":{"gitId":"XXJJXJ"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DATE;","lastModifiedDate":"2021-09-27"},{"lineNumber":5,"author":{"gitId":"XXJJXJ"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TIME;","lastModifiedDate":"2021-09-27"},{"lineNumber":6,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":7,"author":{"gitId":"XXJJXJ"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2021-09-21"},{"lineNumber":8,"author":{"gitId":"XXJJXJ"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-09-21"},{"lineNumber":9,"author":{"gitId":"XXJJXJ"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-09-21"},{"lineNumber":10,"author":{"gitId":"XXJJXJ"},"content":"import seedu.address.model.event.EventDateTimePredicate;","lastModifiedDate":"2021-09-21"},{"lineNumber":11,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":12,"author":{"gitId":"XXJJXJ"},"content":"/**","lastModifiedDate":"2021-09-21"},{"lineNumber":13,"author":{"gitId":"XXJJXJ"},"content":" * Filters the Event list for Events occurring on a specific date and optionally, time.","lastModifiedDate":"2021-09-21"},{"lineNumber":14,"author":{"gitId":"XXJJXJ"},"content":" */","lastModifiedDate":"2021-09-21"},{"lineNumber":15,"author":{"gitId":"XXJJXJ"},"content":"public class FilterEventCommand extends Command {","lastModifiedDate":"2021-09-21"},{"lineNumber":16,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":17,"author":{"gitId":"XXJJXJ"},"content":"    public static final String COMMAND_WORD \u003d \"filterEvents\";","lastModifiedDate":"2021-09-21"},{"lineNumber":18,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":19,"author":{"gitId":"XXJJXJ"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Filters the event list for events occurring \"","lastModifiedDate":"2021-09-21"},{"lineNumber":20,"author":{"gitId":"lowkangn"},"content":"            + \"on the specified date (in YYYY-MM-DD format) and optionally include time (in 24hr format),\"","lastModifiedDate":"2021-10-03"},{"lineNumber":21,"author":{"gitId":"XXJJXJ"},"content":"            + \" and displays them as a list with index numbers.\\n\"","lastModifiedDate":"2021-09-21"},{"lineNumber":22,"author":{"gitId":"XXJJXJ"},"content":"            + \"Parameters: \"","lastModifiedDate":"2021-09-27"},{"lineNumber":23,"author":{"gitId":"XXJJXJ"},"content":"            + PREFIX_DATE + \"DATE\"","lastModifiedDate":"2021-09-27"},{"lineNumber":24,"author":{"gitId":"XXJJXJ"},"content":"            + \"[\" + PREFIX_TIME + \"TIME]\\n\"","lastModifiedDate":"2021-09-27"},{"lineNumber":25,"author":{"gitId":"XXJJXJ"},"content":"            + \"Example: \" + COMMAND_WORD + \" d/2021-09-20\\n\";","lastModifiedDate":"2021-09-27"},{"lineNumber":26,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":27,"author":{"gitId":"XXJJXJ"},"content":"    private final EventDateTimePredicate predicate;","lastModifiedDate":"2021-09-21"},{"lineNumber":28,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":29,"author":{"gitId":"XXJJXJ"},"content":"    /**","lastModifiedDate":"2021-09-21"},{"lineNumber":30,"author":{"gitId":"XXJJXJ"},"content":"     * This is a constructor for FilterEventCommand.","lastModifiedDate":"2021-09-21"},{"lineNumber":31,"author":{"gitId":"XXJJXJ"},"content":"     *","lastModifiedDate":"2021-09-21"},{"lineNumber":32,"author":{"gitId":"XXJJXJ"},"content":"     * @param predicate that determines if an Event is to be displayed in the list.","lastModifiedDate":"2021-09-21"},{"lineNumber":33,"author":{"gitId":"XXJJXJ"},"content":"     */","lastModifiedDate":"2021-09-21"},{"lineNumber":34,"author":{"gitId":"XXJJXJ"},"content":"    public FilterEventCommand(EventDateTimePredicate predicate) {","lastModifiedDate":"2021-09-21"},{"lineNumber":35,"author":{"gitId":"XXJJXJ"},"content":"        this.predicate \u003d predicate;","lastModifiedDate":"2021-09-21"},{"lineNumber":36,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-09-21"},{"lineNumber":37,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":38,"author":{"gitId":"XXJJXJ"},"content":"    @Override","lastModifiedDate":"2021-09-21"},{"lineNumber":39,"author":{"gitId":"XXJJXJ"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-09-21"},{"lineNumber":40,"author":{"gitId":"XXJJXJ"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-09-21"},{"lineNumber":41,"author":{"gitId":"XXJJXJ"},"content":"        model.updateFilteredEventList(predicate);","lastModifiedDate":"2021-09-21"},{"lineNumber":42,"author":{"gitId":"XXJJXJ"},"content":"        return new CommandResult(","lastModifiedDate":"2021-09-21"},{"lineNumber":43,"author":{"gitId":"XXJJXJ"},"content":"                String.format(Messages.MESSAGE_EVENTS_LISTED_OVERVIEW, model.getFilteredEventList().size()));","lastModifiedDate":"2021-09-21"},{"lineNumber":44,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-09-21"},{"lineNumber":45,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":46,"author":{"gitId":"XXJJXJ"},"content":"    @Override","lastModifiedDate":"2021-09-21"},{"lineNumber":47,"author":{"gitId":"XXJJXJ"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-09-21"},{"lineNumber":48,"author":{"gitId":"XXJJXJ"},"content":"        return other \u003d\u003d this","lastModifiedDate":"2021-09-21"},{"lineNumber":49,"author":{"gitId":"XXJJXJ"},"content":"                || (other instanceof FilterEventCommand","lastModifiedDate":"2021-09-21"},{"lineNumber":50,"author":{"gitId":"XXJJXJ"},"content":"                \u0026\u0026 predicate.equals(((FilterEventCommand) other).predicate));","lastModifiedDate":"2021-09-21"},{"lineNumber":51,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-09-21"},{"lineNumber":52,"author":{"gitId":"XXJJXJ"},"content":"}","lastModifiedDate":"2021-09-21"}],"authorContributionMap":{"XXJJXJ":51,"lowkangn":1}},{"path":"src/main/java/seedu/address/logic/commands/FindCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2018-04-01"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":7,"author":{"gitId":"kanjitp"},"content":"import seedu.address.model.participant.NameContainsKeywordsPredicate;","lastModifiedDate":"2021-09-26"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-22"},{"lineNumber":10,"author":{"gitId":"XXJJXJ"},"content":" * Finds and lists all Participants in Managera whose name contains any of the argument keywords.","lastModifiedDate":"2021-09-28"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Keyword matching is case insensitive.","lastModifiedDate":"2018-04-01"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2016-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"find\";","lastModifiedDate":"2016-09-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":17,"author":{"gitId":"kanjitp"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Finds all Participants whose names contain any of \"","lastModifiedDate":"2021-09-29"},{"lineNumber":18,"author":{"gitId":"-"},"content":"            + \"the specified keywords (case-insensitive) and displays them as a list with index numbers.\\n\"","lastModifiedDate":"2018-04-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":"            + \"Parameters: KEYWORD [MORE_KEYWORDS]...\\n\"","lastModifiedDate":"2016-09-22"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" alice bob charlie\";","lastModifiedDate":"2016-09-22"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private final NameContainsKeywordsPredicate predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public FindCommand(NameContainsKeywordsPredicate predicate) {","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        this.predicate \u003d predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-22"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":31,"author":{"gitId":"kanjitp"},"content":"        model.updateFilteredParticipantList(predicate);","lastModifiedDate":"2021-09-26"},{"lineNumber":32,"author":{"gitId":"kanjitp"},"content":"        return new CommandResult(String.format(Messages.MESSAGE_PARTICIPANTS_LISTED_OVERVIEW,","lastModifiedDate":"2021-09-28"},{"lineNumber":33,"author":{"gitId":"kanjitp"},"content":"                model.getFilteredParticipantList().size()));","lastModifiedDate":"2021-09-28"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                || (other instanceof FindCommand // instanceof handles nulls","lastModifiedDate":"2017-06-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                \u0026\u0026 predicate.equals(((FindCommand) other).predicate)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"XXJJXJ":1,"kanjitp":5,"-":36}},{"path":"src/main/java/seedu/address/logic/commands/ListCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"kanjitp"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PARTICIPANTS;","lastModifiedDate":"2021-09-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"kanjitp"},"content":" * Lists all Participants in the address book to the user.","lastModifiedDate":"2021-09-29"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2016-09-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"list\";","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"kanjitp"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Listed all participants\";","lastModifiedDate":"2021-09-28"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":21,"author":{"gitId":"kanjitp"},"content":"        model.updateFilteredParticipantList(PREDICATE_SHOW_ALL_PARTICIPANTS);","lastModifiedDate":"2021-09-26"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2016-09-22"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"kanjitp":4,"-":20}},{"path":"src/main/java/seedu/address/logic/commands/ListEventCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"XXJJXJ"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-09-22"},{"lineNumber":2,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":3,"author":{"gitId":"XXJJXJ"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-09-22"},{"lineNumber":4,"author":{"gitId":"XXJJXJ"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_EVENTS;","lastModifiedDate":"2021-09-22"},{"lineNumber":5,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":6,"author":{"gitId":"XXJJXJ"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-09-22"},{"lineNumber":7,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":8,"author":{"gitId":"XXJJXJ"},"content":"public class ListEventCommand extends Command {","lastModifiedDate":"2021-09-22"},{"lineNumber":9,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":10,"author":{"gitId":"XXJJXJ"},"content":"    public static final String COMMAND_WORD \u003d \"listEvents\";","lastModifiedDate":"2021-09-30"},{"lineNumber":11,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":12,"author":{"gitId":"XXJJXJ"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Listed all events!\";","lastModifiedDate":"2021-09-22"},{"lineNumber":13,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":14,"author":{"gitId":"XXJJXJ"},"content":"    @Override","lastModifiedDate":"2021-09-22"},{"lineNumber":15,"author":{"gitId":"XXJJXJ"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2021-09-22"},{"lineNumber":16,"author":{"gitId":"XXJJXJ"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-09-22"},{"lineNumber":17,"author":{"gitId":"XXJJXJ"},"content":"        model.updateFilteredEventList(PREDICATE_SHOW_ALL_EVENTS);","lastModifiedDate":"2021-09-22"},{"lineNumber":18,"author":{"gitId":"XXJJXJ"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2021-09-22"},{"lineNumber":19,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":20,"author":{"gitId":"XXJJXJ"},"content":"}","lastModifiedDate":"2021-09-22"}],"authorContributionMap":{"XXJJXJ":20}},{"path":"src/main/java/seedu/address/logic/commands/ShowEventDetailsCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ntwbruce"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-09-25"},{"lineNumber":2,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":3,"author":{"gitId":"ntwbruce"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-09-29"},{"lineNumber":4,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":5,"author":{"gitId":"ntwbruce"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2021-09-29"},{"lineNumber":6,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":7,"author":{"gitId":"ntwbruce"},"content":"import javafx.collections.transformation.FilteredList;","lastModifiedDate":"2021-09-29"},{"lineNumber":8,"author":{"gitId":"ntwbruce"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2021-09-29"},{"lineNumber":9,"author":{"gitId":"ntwbruce"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-09-25"},{"lineNumber":10,"author":{"gitId":"ntwbruce"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-09-25"},{"lineNumber":11,"author":{"gitId":"ntwbruce"},"content":"import seedu.address.model.event.Event;","lastModifiedDate":"2021-09-26"},{"lineNumber":12,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":13,"author":{"gitId":"ntwbruce"},"content":"/**","lastModifiedDate":"2021-09-25"},{"lineNumber":14,"author":{"gitId":"ntwbruce"},"content":" * Shows the details of an existing Event in the Managera Event list.","lastModifiedDate":"2021-09-29"},{"lineNumber":15,"author":{"gitId":"ntwbruce"},"content":" */","lastModifiedDate":"2021-09-25"},{"lineNumber":16,"author":{"gitId":"lowkangn"},"content":"public class ShowEventDetailsCommand extends Command {","lastModifiedDate":"2021-10-03"},{"lineNumber":17,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":18,"author":{"gitId":"ntwbruce"},"content":"    public static final String COMMAND_WORD \u003d \"showDetails\";","lastModifiedDate":"2021-09-25"},{"lineNumber":19,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":20,"author":{"gitId":"ntwbruce"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2021-09-25"},{"lineNumber":21,"author":{"gitId":"ntwbruce"},"content":"            + \": Displays the details of the Event matching the given name.\\n\"","lastModifiedDate":"2021-09-25"},{"lineNumber":22,"author":{"gitId":"ntwbruce"},"content":"            + \"Parameters: EVENT_NAME \\n\"","lastModifiedDate":"2021-09-25"},{"lineNumber":23,"author":{"gitId":"ntwbruce"},"content":"            + \"Example: \" + COMMAND_WORD + \" CS2103T Finals \";","lastModifiedDate":"2021-09-25"},{"lineNumber":24,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":25,"author":{"gitId":"ntwbruce"},"content":"    private final Predicate\u003cEvent\u003e eventName;","lastModifiedDate":"2021-09-26"},{"lineNumber":26,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":27,"author":{"gitId":"ntwbruce"},"content":"    /**","lastModifiedDate":"2021-09-29"},{"lineNumber":28,"author":{"gitId":"ntwbruce"},"content":"     * Creates an ShowDetailsCommand to find Event with the specified {@code eventName}","lastModifiedDate":"2021-09-29"},{"lineNumber":29,"author":{"gitId":"ntwbruce"},"content":"     */","lastModifiedDate":"2021-09-29"},{"lineNumber":30,"author":{"gitId":"lowkangn"},"content":"    public ShowEventDetailsCommand(Predicate\u003cEvent\u003e eventName) {","lastModifiedDate":"2021-10-03"},{"lineNumber":31,"author":{"gitId":"ntwbruce"},"content":"        requireNonNull(eventName);","lastModifiedDate":"2021-09-29"},{"lineNumber":32,"author":{"gitId":"ntwbruce"},"content":"        this.eventName \u003d eventName;","lastModifiedDate":"2021-09-25"},{"lineNumber":33,"author":{"gitId":"ntwbruce"},"content":"    }","lastModifiedDate":"2021-09-25"},{"lineNumber":34,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":35,"author":{"gitId":"ntwbruce"},"content":"    @Override","lastModifiedDate":"2021-09-25"},{"lineNumber":36,"author":{"gitId":"ntwbruce"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-09-25"},{"lineNumber":37,"author":{"gitId":"ntwbruce"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-09-26"},{"lineNumber":38,"author":{"gitId":"XXJJXJ"},"content":"        FilteredList\u003cEvent\u003e filteredEventList \u003d model.getFilteredEventList().filtered(eventName);","lastModifiedDate":"2021-09-30"},{"lineNumber":39,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":40,"author":{"gitId":"ntwbruce"},"content":"        if (filteredEventList.size() \u003d\u003d 0) {","lastModifiedDate":"2021-09-29"},{"lineNumber":41,"author":{"gitId":"ntwbruce"},"content":"            throw new CommandException(Messages.MESSAGE_EVENT_NOT_FOUND);","lastModifiedDate":"2021-09-29"},{"lineNumber":42,"author":{"gitId":"ntwbruce"},"content":"        }","lastModifiedDate":"2021-09-29"},{"lineNumber":43,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":44,"author":{"gitId":"ntwbruce"},"content":"        Event desiredEvent \u003d filteredEventList.get(0);","lastModifiedDate":"2021-09-29"},{"lineNumber":45,"author":{"gitId":"ntwbruce"},"content":"        String displayedMessage \u003d String.format(\"Event Name: %s\\nEvent Date: %s\\nEvent Time: %s\\nCompletion Status: %s\",","lastModifiedDate":"2021-09-29"},{"lineNumber":46,"author":{"gitId":"ntwbruce"},"content":"                desiredEvent.getName(),","lastModifiedDate":"2021-09-29"},{"lineNumber":47,"author":{"gitId":"ntwbruce"},"content":"                desiredEvent.getDate(),","lastModifiedDate":"2021-09-29"},{"lineNumber":48,"author":{"gitId":"ntwbruce"},"content":"                desiredEvent.getTime().toString().equals(\"\") ? \"N/A\" : desiredEvent.getTime(),","lastModifiedDate":"2021-09-29"},{"lineNumber":49,"author":{"gitId":"ntwbruce"},"content":"                desiredEvent.getIsDone() ? \"Completed\" : \"Uncompleted\");","lastModifiedDate":"2021-09-29"},{"lineNumber":50,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":51,"author":{"gitId":"ntwbruce"},"content":"        return new CommandResult(displayedMessage);","lastModifiedDate":"2021-09-29"},{"lineNumber":52,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":53,"author":{"gitId":"ntwbruce"},"content":"    }","lastModifiedDate":"2021-09-25"},{"lineNumber":54,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":55,"author":{"gitId":"ntwbruce"},"content":"    @Override","lastModifiedDate":"2021-09-25"},{"lineNumber":56,"author":{"gitId":"ntwbruce"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-09-25"},{"lineNumber":57,"author":{"gitId":"ntwbruce"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-09-25"},{"lineNumber":58,"author":{"gitId":"lowkangn"},"content":"                || (other instanceof ShowEventDetailsCommand // instanceof handles nulls","lastModifiedDate":"2021-10-03"},{"lineNumber":59,"author":{"gitId":"lowkangn"},"content":"                \u0026\u0026 eventName.equals(((ShowEventDetailsCommand) other).eventName)); // state check","lastModifiedDate":"2021-10-03"},{"lineNumber":60,"author":{"gitId":"ntwbruce"},"content":"    }","lastModifiedDate":"2021-09-25"},{"lineNumber":61,"author":{"gitId":"ntwbruce"},"content":"}","lastModifiedDate":"2021-09-25"}],"authorContributionMap":{"XXJJXJ":1,"ntwbruce":56,"lowkangn":4}},{"path":"src/main/java/seedu/address/logic/commands/SortEventCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"XXJJXJ"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-09-20"},{"lineNumber":2,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":3,"author":{"gitId":"XXJJXJ"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-09-20"},{"lineNumber":4,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":5,"author":{"gitId":"XXJJXJ"},"content":"/**","lastModifiedDate":"2021-09-20"},{"lineNumber":6,"author":{"gitId":"XXJJXJ"},"content":" * This is a SortEventCommand class that handles sorting of events in Chronological order.","lastModifiedDate":"2021-09-20"},{"lineNumber":7,"author":{"gitId":"XXJJXJ"},"content":" */","lastModifiedDate":"2021-09-20"},{"lineNumber":8,"author":{"gitId":"XXJJXJ"},"content":"public class SortEventCommand extends Command {","lastModifiedDate":"2021-09-20"},{"lineNumber":9,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":10,"author":{"gitId":"XXJJXJ"},"content":"    public static final String COMMAND_WORD \u003d \"sortEvents\";","lastModifiedDate":"2021-09-20"},{"lineNumber":11,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":12,"author":{"gitId":"XXJJXJ"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Events sorted chronologically\";","lastModifiedDate":"2021-09-20"},{"lineNumber":13,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":14,"author":{"gitId":"XXJJXJ"},"content":"    @Override","lastModifiedDate":"2021-09-20"},{"lineNumber":15,"author":{"gitId":"XXJJXJ"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2021-09-20"},{"lineNumber":16,"author":{"gitId":"XXJJXJ"},"content":"        model.sortEvents();","lastModifiedDate":"2021-09-20"},{"lineNumber":17,"author":{"gitId":"XXJJXJ"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2021-09-20"},{"lineNumber":18,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-09-20"},{"lineNumber":19,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":20,"author":{"gitId":"XXJJXJ"},"content":"    @Override","lastModifiedDate":"2021-09-20"},{"lineNumber":21,"author":{"gitId":"XXJJXJ"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-09-20"},{"lineNumber":22,"author":{"gitId":"XXJJXJ"},"content":"        return other \u003d\u003d this","lastModifiedDate":"2021-09-20"},{"lineNumber":23,"author":{"gitId":"XXJJXJ"},"content":"                || other instanceof SortEventCommand;","lastModifiedDate":"2021-09-20"},{"lineNumber":24,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-09-20"},{"lineNumber":25,"author":{"gitId":"XXJJXJ"},"content":"}","lastModifiedDate":"2021-09-20"}],"authorContributionMap":{"XXJJXJ":25}},{"path":"src/main/java/seedu/address/logic/parser/AddCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-02-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2021-09-26"},{"lineNumber":5,"author":{"gitId":"kanjitp"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DATE;","lastModifiedDate":"2021-09-26"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2021-09-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2021-09-26"},{"lineNumber":8,"author":{"gitId":"kanjitp"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NEXT_OF_KIN;","lastModifiedDate":"2021-09-26"},{"lineNumber":9,"author":{"gitId":"kanjitp"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NOTE;","lastModifiedDate":"2021-09-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2021-09-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2021-09-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":13,"author":{"gitId":"kanjitp"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-09-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-17"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2017-03-17"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-02-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":19,"author":{"gitId":"kanjitp"},"content":"import seedu.address.model.nextofkin.NextOfKin;","lastModifiedDate":"2021-09-26"},{"lineNumber":20,"author":{"gitId":"kanjitp"},"content":"import seedu.address.model.participant.BirthDate;","lastModifiedDate":"2021-09-26"},{"lineNumber":21,"author":{"gitId":"kanjitp"},"content":"import seedu.address.model.participant.Note;","lastModifiedDate":"2021-09-26"},{"lineNumber":22,"author":{"gitId":"kanjitp"},"content":"import seedu.address.model.participant.Participant;","lastModifiedDate":"2021-09-26"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-03-17"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-03-17"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-03-17"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-03-17"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-17"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new AddCommand object","lastModifiedDate":"2017-02-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"public class AddCommandParser implements Parser\u003cAddCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the AddCommand","lastModifiedDate":"2017-02-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * and returns an AddCommand object for execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public AddCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2017-03-20"},{"lineNumber":41,"author":{"gitId":"-"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ADDRESS, PREFIX_TAG);","lastModifiedDate":"2017-06-06"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_NAME, PREFIX_ADDRESS, PREFIX_PHONE, PREFIX_EMAIL)","lastModifiedDate":"2017-12-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2017-12-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-03-11"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-17"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":48,"author":{"gitId":"kanjitp"},"content":"        // REQUIRED","lastModifiedDate":"2021-09-26"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        Name name \u003d ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        Phone phone \u003d ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        Email email \u003d ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        Address address \u003d ParserUtil.parseAddress(argMultimap.getValue(PREFIX_ADDRESS).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e tagList \u003d ParserUtil.parseTags(argMultimap.getAllValues(PREFIX_TAG));","lastModifiedDate":"2017-03-17"},{"lineNumber":54,"author":{"gitId":"kanjitp"},"content":"        // NOT REQUIRED","lastModifiedDate":"2021-09-26"},{"lineNumber":55,"author":{"gitId":"kanjitp"},"content":"        BirthDate birthDate \u003d ParserUtil.parseBirthDate(argMultimap.getValue(PREFIX_DATE).orElse(\"NA\"));","lastModifiedDate":"2021-09-26"},{"lineNumber":56,"author":{"gitId":"kanjitp"},"content":"        Set\u003cNote\u003e noteList \u003d ParserUtil.parseNotes(argMultimap.getAllValues(PREFIX_NOTE));","lastModifiedDate":"2021-09-26"},{"lineNumber":57,"author":{"gitId":"kanjitp"},"content":"        ArrayList\u003cNextOfKin\u003e nextOfKins \u003d ParserUtil.parseNextOfKins(argMultimap.getAllValues(PREFIX_NEXT_OF_KIN));","lastModifiedDate":"2021-09-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":59,"author":{"gitId":"kanjitp"},"content":"        Participant participant \u003d new Participant(name, phone, email, address, tagList, birthDate, noteList,","lastModifiedDate":"2021-09-26"},{"lineNumber":60,"author":{"gitId":"kanjitp"},"content":"            nextOfKins);","lastModifiedDate":"2021-09-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":62,"author":{"gitId":"kanjitp"},"content":"        return new AddCommand(participant);","lastModifiedDate":"2021-09-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-17"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2017-03-17"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2017-03-17"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-17"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2017-03-17"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2017-03-17"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-17"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":73,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-05"}],"authorContributionMap":{"kanjitp":16,"-":57}},{"path":"src/main/java/seedu/address/logic/parser/AddressBookParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ClearCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2017-01-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":13,"author":{"gitId":"lowkangn"},"content":"import seedu.address.logic.commands.DoneEventCommand;","lastModifiedDate":"2021-10-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ExitCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":16,"author":{"gitId":"XXJJXJ"},"content":"import seedu.address.logic.commands.FilterEventCommand;","lastModifiedDate":"2021-09-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.HelpCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":20,"author":{"gitId":"XXJJXJ"},"content":"import seedu.address.logic.commands.ListEventCommand;","lastModifiedDate":"2021-09-22"},{"lineNumber":21,"author":{"gitId":"lowkangn"},"content":"import seedu.address.logic.commands.ShowEventDetailsCommand;","lastModifiedDate":"2021-10-03"},{"lineNumber":22,"author":{"gitId":"XXJJXJ"},"content":"import seedu.address.logic.commands.SortEventCommand;","lastModifiedDate":"2021-09-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":" * Parses user input.","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"public class AddressBookParser {","lastModifiedDate":"2017-07-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Used for initial separation of command word and args.","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private static final Pattern BASIC_COMMAND_FORMAT \u003d Pattern.compile(\"(?\u003ccommandWord\u003e\\\\S+)(?\u003carguments\u003e.*)\");","lastModifiedDate":"2016-09-22"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * Parses user input into command for execution.","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * @param userInput full user input string","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * @return the command based on the user input","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public Command parseCommand(String userInput) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        final Matcher matcher \u003d BASIC_COMMAND_FORMAT.matcher(userInput.trim());","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-03-11"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        final String commandWord \u003d matcher.group(\"commandWord\");","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        switch (commandWord) {","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        case AddCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            return new AddCommandParser().parse(arguments);","lastModifiedDate":"2017-02-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        case EditCommand.COMMAND_WORD:","lastModifiedDate":"2016-12-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            return new EditCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        case DeleteCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"            return new DeleteCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        case ClearCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            return new ClearCommand();","lastModifiedDate":"2016-09-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        case FindCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            return new FindCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        case ListCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":68,"author":{"gitId":"-"},"content":"            return new ListCommand();","lastModifiedDate":"2016-09-21"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        case ExitCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            return new ExitCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        case HelpCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-26"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            return new HelpCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":76,"author":{"gitId":"lowkangn"},"content":"        case ShowEventDetailsCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-03"},{"lineNumber":77,"author":{"gitId":"lowkangn"},"content":"            return new ShowEventDetailsCommandParser().parse(arguments);","lastModifiedDate":"2021-10-03"},{"lineNumber":78,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":79,"author":{"gitId":"XXJJXJ"},"content":"        //Add new Commands and cases here:","lastModifiedDate":"2021-09-18"},{"lineNumber":80,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":81,"author":{"gitId":"XXJJXJ"},"content":"        // TODO: addEvent (Use Parser):","lastModifiedDate":"2021-09-18"},{"lineNumber":82,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":83,"author":{"gitId":"XXJJXJ"},"content":"        // TODO: removeEvent (Use Parser):","lastModifiedDate":"2021-09-18"},{"lineNumber":84,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":85,"author":{"gitId":"XXJJXJ"},"content":"        // TODO: doneEvent (Use Parser):","lastModifiedDate":"2021-09-19"},{"lineNumber":86,"author":{"gitId":"lowkangn"},"content":"        case DoneEventCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-03"},{"lineNumber":87,"author":{"gitId":"lowkangn"},"content":"            return new DoneEventCommandParser().parse(arguments);","lastModifiedDate":"2021-10-03"},{"lineNumber":88,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":89,"author":{"gitId":"XXJJXJ"},"content":"        // TODO: sortEvents:","lastModifiedDate":"2021-09-18"},{"lineNumber":90,"author":{"gitId":"XXJJXJ"},"content":"        case SortEventCommand.COMMAND_WORD:","lastModifiedDate":"2021-09-20"},{"lineNumber":91,"author":{"gitId":"XXJJXJ"},"content":"            return new SortEventCommand();","lastModifiedDate":"2021-09-20"},{"lineNumber":92,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":93,"author":{"gitId":"XXJJXJ"},"content":"        // TODO: filterEvents (Use Parser):","lastModifiedDate":"2021-09-18"},{"lineNumber":94,"author":{"gitId":"XXJJXJ"},"content":"        case FilterEventCommand.COMMAND_WORD:","lastModifiedDate":"2021-09-21"},{"lineNumber":95,"author":{"gitId":"XXJJXJ"},"content":"            return new FilterEventCommandParser().parse(arguments);","lastModifiedDate":"2021-09-21"},{"lineNumber":96,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":97,"author":{"gitId":"XXJJXJ"},"content":"        case ListEventCommand.COMMAND_WORD:","lastModifiedDate":"2021-09-22"},{"lineNumber":98,"author":{"gitId":"XXJJXJ"},"content":"            return new ListEventCommand();","lastModifiedDate":"2021-09-22"},{"lineNumber":99,"author":{"gitId":"XXJJXJ"},"content":"        // TODO: addParticipant (Use Parser):","lastModifiedDate":"2021-09-18"},{"lineNumber":100,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":101,"author":{"gitId":"XXJJXJ"},"content":"        // TODO: removeParticipant (Use Parser):","lastModifiedDate":"2021-09-18"},{"lineNumber":102,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":103,"author":{"gitId":"XXJJXJ"},"content":"        // TODO: findParticipant (Use Parser):","lastModifiedDate":"2021-09-18"},{"lineNumber":104,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":105,"author":{"gitId":"XXJJXJ"},"content":"        // TODO: showDetails (Use Parser):","lastModifiedDate":"2021-09-18"},{"lineNumber":106,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":107,"author":{"gitId":"XXJJXJ"},"content":"        // TODO: showParticipants (Use Parser):","lastModifiedDate":"2021-09-18"},{"lineNumber":108,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        default:","lastModifiedDate":"2016-08-26"},{"lineNumber":110,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-03-11"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":114,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"XXJJXJ":31,"ntwbruce":1,"-":76,"lowkangn":6}},{"path":"src/main/java/seedu/address/logic/parser/CliSyntax.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Contains Command Line Interface (CLI) syntax definitions common to multiple commands","lastModifiedDate":"2017-02-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class CliSyntax {","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    /* Prefix definitions */","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"kanjitp"},"content":"    public static final Prefix PREFIX_PARTICIPANT_ID \u003d new Prefix(\"id/\");","lastModifiedDate":"2021-09-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_NAME \u003d new Prefix(\"n/\");","lastModifiedDate":"2017-06-06"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_PHONE \u003d new Prefix(\"p/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_EMAIL \u003d new Prefix(\"e/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_ADDRESS \u003d new Prefix(\"a/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":14,"author":{"gitId":"kanjitp"},"content":"    public static final Prefix PREFIX_TAG \u003d new Prefix(\"tag/\");","lastModifiedDate":"2021-09-26"},{"lineNumber":15,"author":{"gitId":"kanjitp"},"content":"    public static final Prefix PREFIX_TIME \u003d new Prefix(\"t/\");","lastModifiedDate":"2021-09-26"},{"lineNumber":16,"author":{"gitId":"kanjitp"},"content":"    public static final Prefix PREFIX_EVENT \u003d new Prefix(\"ev/\");","lastModifiedDate":"2021-09-26"},{"lineNumber":17,"author":{"gitId":"kanjitp"},"content":"    public static final Prefix PREFIX_DATE \u003d new Prefix(\"d/\");","lastModifiedDate":"2021-09-26"},{"lineNumber":18,"author":{"gitId":"kanjitp"},"content":"    public static final Prefix PREFIX_NOTE \u003d new Prefix(\"note/\");","lastModifiedDate":"2021-09-26"},{"lineNumber":19,"author":{"gitId":"kanjitp"},"content":"    public static final Prefix PREFIX_NEXT_OF_KIN \u003d new Prefix(\"nok/\");","lastModifiedDate":"2021-09-26"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"kanjitp":7,"-":14}},{"path":"src/main/java/seedu/address/logic/parser/DoneEventCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"lowkangn"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-10-03"},{"lineNumber":2,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":3,"author":{"gitId":"lowkangn"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-03"},{"lineNumber":4,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":5,"author":{"gitId":"lowkangn"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-10-03"},{"lineNumber":6,"author":{"gitId":"lowkangn"},"content":"import seedu.address.logic.commands.DoneEventCommand;","lastModifiedDate":"2021-10-03"},{"lineNumber":7,"author":{"gitId":"lowkangn"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-03"},{"lineNumber":8,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":9,"author":{"gitId":"lowkangn"},"content":"/**","lastModifiedDate":"2021-10-03"},{"lineNumber":10,"author":{"gitId":"lowkangn"},"content":" * Parses input arguments and creates a new DoneEventCommand object","lastModifiedDate":"2021-10-03"},{"lineNumber":11,"author":{"gitId":"lowkangn"},"content":" */","lastModifiedDate":"2021-10-03"},{"lineNumber":12,"author":{"gitId":"lowkangn"},"content":"public class DoneEventCommandParser implements Parser\u003cDoneEventCommand\u003e {","lastModifiedDate":"2021-10-03"},{"lineNumber":13,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":14,"author":{"gitId":"lowkangn"},"content":"    /**","lastModifiedDate":"2021-10-03"},{"lineNumber":15,"author":{"gitId":"lowkangn"},"content":"     * Parses the given {@code String} of arguments in the context of the DoneEventCommand","lastModifiedDate":"2021-10-03"},{"lineNumber":16,"author":{"gitId":"lowkangn"},"content":"     * and returns a DoneEventCommand object for execution.","lastModifiedDate":"2021-10-03"},{"lineNumber":17,"author":{"gitId":"lowkangn"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2021-10-03"},{"lineNumber":18,"author":{"gitId":"lowkangn"},"content":"     */","lastModifiedDate":"2021-10-03"},{"lineNumber":19,"author":{"gitId":"lowkangn"},"content":"    public DoneEventCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-10-03"},{"lineNumber":20,"author":{"gitId":"lowkangn"},"content":"        try {","lastModifiedDate":"2021-10-03"},{"lineNumber":21,"author":{"gitId":"lowkangn"},"content":"            Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2021-10-03"},{"lineNumber":22,"author":{"gitId":"lowkangn"},"content":"            return new DoneEventCommand(index);","lastModifiedDate":"2021-10-03"},{"lineNumber":23,"author":{"gitId":"lowkangn"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2021-10-03"},{"lineNumber":24,"author":{"gitId":"lowkangn"},"content":"            throw new ParseException(","lastModifiedDate":"2021-10-03"},{"lineNumber":25,"author":{"gitId":"lowkangn"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, DoneEventCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2021-10-03"},{"lineNumber":26,"author":{"gitId":"lowkangn"},"content":"        }","lastModifiedDate":"2021-10-03"},{"lineNumber":27,"author":{"gitId":"lowkangn"},"content":"    }","lastModifiedDate":"2021-10-03"},{"lineNumber":28,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":29,"author":{"gitId":"lowkangn"},"content":"}","lastModifiedDate":"2021-10-03"}],"authorContributionMap":{"lowkangn":29}},{"path":"src/main/java/seedu/address/logic/parser/EditCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-01-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-01-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-01-26"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-01-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-01-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-01-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-01-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-01-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-01-26"},{"lineNumber":18,"author":{"gitId":"kanjitp"},"content":"import seedu.address.logic.commands.EditCommand.EditParticipantDescriptor;","lastModifiedDate":"2021-09-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":22,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new EditCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class EditCommandParser implements Parser\u003cEditCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the EditCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * and returns an EditCommand object for execution.","lastModifiedDate":"2017-01-26"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public EditCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        requireNonNull(args);","lastModifiedDate":"2017-05-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2017-03-20"},{"lineNumber":35,"author":{"gitId":"-"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ADDRESS, PREFIX_TAG);","lastModifiedDate":"2017-06-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        Index index;","lastModifiedDate":"2017-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-05-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2017-06-06"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2018-07-10"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2018-08-06"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":45,"author":{"gitId":"kanjitp"},"content":"        EditParticipantDescriptor editParticipantDescriptor \u003d new EditParticipantDescriptor();","lastModifiedDate":"2021-09-28"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_NAME).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":47,"author":{"gitId":"kanjitp"},"content":"            editParticipantDescriptor.setName(ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get()));","lastModifiedDate":"2021-09-28"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_PHONE).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":50,"author":{"gitId":"kanjitp"},"content":"            editParticipantDescriptor.setPhone(ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get()));","lastModifiedDate":"2021-09-28"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_EMAIL).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":53,"author":{"gitId":"kanjitp"},"content":"            editParticipantDescriptor.setEmail(ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get()));","lastModifiedDate":"2021-09-28"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_ADDRESS).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":56,"author":{"gitId":"kanjitp"},"content":"            editParticipantDescriptor.setAddress(ParserUtil.parseAddress(argMultimap.getValue(PREFIX_ADDRESS).get()));","lastModifiedDate":"2021-09-28"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":58,"author":{"gitId":"kanjitp"},"content":"        parseTagsForEdit(argMultimap.getAllValues(PREFIX_TAG)).ifPresent(editParticipantDescriptor::setTags);","lastModifiedDate":"2021-09-28"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":60,"author":{"gitId":"kanjitp"},"content":"        if (!editParticipantDescriptor.isAnyFieldEdited()) {","lastModifiedDate":"2021-09-28"},{"lineNumber":61,"author":{"gitId":"-"},"content":"            throw new ParseException(EditCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2017-03-11"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":64,"author":{"gitId":"kanjitp"},"content":"        return new EditCommand(index, editParticipantDescriptor);","lastModifiedDate":"2021-09-28"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e} if {@code tags} is non-empty.","lastModifiedDate":"2017-03-07"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * If {@code tags} contain only one element which is an empty string, it will be parsed into a","lastModifiedDate":"2017-01-26"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * {@code Set\u003cTag\u003e} containing zero tags.","lastModifiedDate":"2017-03-07"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    private Optional\u003cSet\u003cTag\u003e\u003e parseTagsForEdit(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assert tags !\u003d null;","lastModifiedDate":"2017-01-26"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        if (tags.isEmpty()) {","lastModifiedDate":"2017-01-26"},{"lineNumber":76,"author":{"gitId":"-"},"content":"            return Optional.empty();","lastModifiedDate":"2017-01-26"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        Collection\u003cString\u003e tagSet \u003d tags.size() \u003d\u003d 1 \u0026\u0026 tags.contains(\"\") ? Collections.emptySet() : tags;","lastModifiedDate":"2017-01-26"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        return Optional.of(ParserUtil.parseTags(tagSet));","lastModifiedDate":"2017-01-26"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":82,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"kanjitp":9,"-":73}},{"path":"src/main/java/seedu/address/logic/parser/FilterEventCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"XXJJXJ"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-09-21"},{"lineNumber":2,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":3,"author":{"gitId":"XXJJXJ"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-09-21"},{"lineNumber":4,"author":{"gitId":"XXJJXJ"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DATE;","lastModifiedDate":"2021-09-27"},{"lineNumber":5,"author":{"gitId":"XXJJXJ"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TIME;","lastModifiedDate":"2021-09-27"},{"lineNumber":6,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":7,"author":{"gitId":"XXJJXJ"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-09-27"},{"lineNumber":8,"author":{"gitId":"XXJJXJ"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2021-09-21"},{"lineNumber":9,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":10,"author":{"gitId":"XXJJXJ"},"content":"import seedu.address.logic.commands.FilterEventCommand;","lastModifiedDate":"2021-09-21"},{"lineNumber":11,"author":{"gitId":"XXJJXJ"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-09-21"},{"lineNumber":12,"author":{"gitId":"XXJJXJ"},"content":"import seedu.address.model.event.EventDate;","lastModifiedDate":"2021-09-30"},{"lineNumber":13,"author":{"gitId":"XXJJXJ"},"content":"import seedu.address.model.event.EventDateTimePredicate;","lastModifiedDate":"2021-09-21"},{"lineNumber":14,"author":{"gitId":"XXJJXJ"},"content":"import seedu.address.model.event.EventTime;","lastModifiedDate":"2021-09-30"},{"lineNumber":15,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":16,"author":{"gitId":"XXJJXJ"},"content":"public class FilterEventCommandParser implements Parser\u003cFilterEventCommand\u003e {","lastModifiedDate":"2021-09-21"},{"lineNumber":17,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":18,"author":{"gitId":"XXJJXJ"},"content":"    /**","lastModifiedDate":"2021-09-21"},{"lineNumber":19,"author":{"gitId":"XXJJXJ"},"content":"     * Parses the given {@code String} of arguments in the context of the FilterEventCommand","lastModifiedDate":"2021-09-21"},{"lineNumber":20,"author":{"gitId":"XXJJXJ"},"content":"     * and returns a FilterCommand object for execution.","lastModifiedDate":"2021-09-21"},{"lineNumber":21,"author":{"gitId":"XXJJXJ"},"content":"     * @throws ParseException if the user input does not conform to the expected format","lastModifiedDate":"2021-10-02"},{"lineNumber":22,"author":{"gitId":"XXJJXJ"},"content":"     */","lastModifiedDate":"2021-09-21"},{"lineNumber":23,"author":{"gitId":"XXJJXJ"},"content":"    @Override","lastModifiedDate":"2021-09-21"},{"lineNumber":24,"author":{"gitId":"XXJJXJ"},"content":"    public FilterEventCommand parse(String userInput) throws ParseException {","lastModifiedDate":"2021-09-21"},{"lineNumber":25,"author":{"gitId":"XXJJXJ"},"content":"        ArgumentMultimap argMultiMap \u003d","lastModifiedDate":"2021-09-27"},{"lineNumber":26,"author":{"gitId":"XXJJXJ"},"content":"                ArgumentTokenizer.tokenize(userInput, PREFIX_DATE, PREFIX_TIME);","lastModifiedDate":"2021-09-27"},{"lineNumber":27,"author":{"gitId":"XXJJXJ"},"content":"        if (!arePrefixesPresent(argMultiMap, PREFIX_DATE) || !argMultiMap.getPreamble().isEmpty()) {","lastModifiedDate":"2021-09-27"},{"lineNumber":28,"author":{"gitId":"XXJJXJ"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, FilterEventCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-09-21"},{"lineNumber":29,"author":{"gitId":"XXJJXJ"},"content":"        }","lastModifiedDate":"2021-09-21"},{"lineNumber":30,"author":{"gitId":"XXJJXJ"},"content":"        String eventDate \u003d argMultiMap.getValue(PREFIX_DATE).get();","lastModifiedDate":"2021-09-30"},{"lineNumber":31,"author":{"gitId":"XXJJXJ"},"content":"        String eventTime \u003d argMultiMap.getValue(PREFIX_TIME).orElse(\"\");","lastModifiedDate":"2021-09-30"},{"lineNumber":32,"author":{"gitId":"XXJJXJ"},"content":"        ArrayList\u003cString\u003e eventDateTime \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-09-27"},{"lineNumber":33,"author":{"gitId":"XXJJXJ"},"content":"        if (eventDate \u003d\u003d null || !EventDate.isValidDate(eventDate)) {","lastModifiedDate":"2021-09-30"},{"lineNumber":34,"author":{"gitId":"XXJJXJ"},"content":"            throw new ParseException(EventDate.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-09-30"},{"lineNumber":35,"author":{"gitId":"XXJJXJ"},"content":"        } else {","lastModifiedDate":"2021-09-30"},{"lineNumber":36,"author":{"gitId":"XXJJXJ"},"content":"            eventDateTime.add(eventDate);","lastModifiedDate":"2021-09-27"},{"lineNumber":37,"author":{"gitId":"XXJJXJ"},"content":"        }","lastModifiedDate":"2021-09-21"},{"lineNumber":38,"author":{"gitId":"XXJJXJ"},"content":"        if (eventTime \u003d\u003d null || (!eventTime.equals(\"\") \u0026\u0026 !EventTime.isValidTime(eventTime))) {","lastModifiedDate":"2021-09-30"},{"lineNumber":39,"author":{"gitId":"XXJJXJ"},"content":"            throw new ParseException(EventTime.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-09-30"},{"lineNumber":40,"author":{"gitId":"XXJJXJ"},"content":"        }","lastModifiedDate":"2021-09-30"},{"lineNumber":41,"author":{"gitId":"XXJJXJ"},"content":"        if (!eventTime.equals(\"\") \u0026\u0026 EventTime.isValidTime(eventTime)) {","lastModifiedDate":"2021-09-30"},{"lineNumber":42,"author":{"gitId":"XXJJXJ"},"content":"            eventDateTime.add(eventTime);","lastModifiedDate":"2021-09-27"},{"lineNumber":43,"author":{"gitId":"XXJJXJ"},"content":"        }","lastModifiedDate":"2021-09-21"},{"lineNumber":44,"author":{"gitId":"XXJJXJ"},"content":"        EventDateTimePredicate predicate \u003d new EventDateTimePredicate(eventDateTime);","lastModifiedDate":"2021-09-27"},{"lineNumber":45,"author":{"gitId":"XXJJXJ"},"content":"        return new FilterEventCommand(predicate);","lastModifiedDate":"2021-09-27"},{"lineNumber":46,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-09-21"},{"lineNumber":47,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":48,"author":{"gitId":"XXJJXJ"},"content":"    /**","lastModifiedDate":"2021-09-21"},{"lineNumber":49,"author":{"gitId":"XXJJXJ"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2021-09-21"},{"lineNumber":50,"author":{"gitId":"XXJJXJ"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2021-09-21"},{"lineNumber":51,"author":{"gitId":"XXJJXJ"},"content":"     */","lastModifiedDate":"2021-09-21"},{"lineNumber":52,"author":{"gitId":"XXJJXJ"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2021-09-21"},{"lineNumber":53,"author":{"gitId":"XXJJXJ"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2021-09-21"},{"lineNumber":54,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-09-21"},{"lineNumber":55,"author":{"gitId":"XXJJXJ"},"content":"}","lastModifiedDate":"2021-09-21"}],"authorContributionMap":{"XXJJXJ":55}},{"path":"src/main/java/seedu/address/logic/parser/FindCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-01-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-01-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-01-26"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2017-01-26"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":9,"author":{"gitId":"kanjitp"},"content":"import seedu.address.model.participant.NameContainsKeywordsPredicate;","lastModifiedDate":"2021-09-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new FindCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class FindCommandParser implements Parser\u003cFindCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the FindCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * and returns a FindCommand object for execution.","lastModifiedDate":"2019-05-11"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public FindCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        String trimmedArgs \u003d args.trim();","lastModifiedDate":"2017-02-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        if (trimmedArgs.isEmpty()) {","lastModifiedDate":"2017-02-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            throw new ParseException(","lastModifiedDate":"2017-03-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-01-26"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        String[] nameKeywords \u003d trimmedArgs.split(\"\\\\s+\");","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        return new FindCommand(new NameContainsKeywordsPredicate(Arrays.asList(nameKeywords)));","lastModifiedDate":"2017-06-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"kanjitp":1,"-":32}},{"path":"src/main/java/seedu/address/logic/parser/ParserUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"kanjitp"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-09-26"},{"lineNumber":6,"author":{"gitId":"kanjitp"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-09-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-02-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2017-02-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-07-10"},{"lineNumber":14,"author":{"gitId":"kanjitp"},"content":"import seedu.address.model.nextofkin.NextOfKin;","lastModifiedDate":"2021-09-26"},{"lineNumber":15,"author":{"gitId":"kanjitp"},"content":"import seedu.address.model.participant.BirthDate;","lastModifiedDate":"2021-09-26"},{"lineNumber":16,"author":{"gitId":"kanjitp"},"content":"import seedu.address.model.participant.Note;","lastModifiedDate":"2021-09-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-02-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-02-11"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-02-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-02-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-02-11"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * Contains utility methods used for parsing strings in the various *Parser classes.","lastModifiedDate":"2017-07-18"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class ParserUtil {","lastModifiedDate":"2017-02-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_INDEX \u003d \"Index is not a non-zero unsigned integer.\";","lastModifiedDate":"2017-06-02"},{"lineNumber":29,"author":{"gitId":"kanjitp"},"content":"    public static final String MESSAGE_INVALID_IMPORTANCE \u003d \"Illegal Importance parsed\";","lastModifiedDate":"2021-09-26"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Parses {@code oneBasedIndex} into an {@code Index} and returns it. Leading and trailing whitespaces will be","lastModifiedDate":"2017-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * trimmed.","lastModifiedDate":"2017-05-25"},{"lineNumber":34,"author":{"gitId":"kanjitp"},"content":"     *","lastModifiedDate":"2021-09-26"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * @throws ParseException if the specified index is invalid (not non-zero unsigned integer).","lastModifiedDate":"2018-07-10"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static Index parseIndex(String oneBasedIndex) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        String trimmedIndex \u003d oneBasedIndex.trim();","lastModifiedDate":"2017-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        if (!StringUtil.isNonZeroUnsignedInteger(trimmedIndex)) {","lastModifiedDate":"2017-06-02"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_INVALID_INDEX);","lastModifiedDate":"2018-07-10"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return Index.fromOneBased(Integer.parseInt(trimmedIndex));","lastModifiedDate":"2017-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-29"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * Parses a {@code String name} into a {@code Name}.","lastModifiedDate":"2017-05-29"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-29"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code name} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-29"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public static Name parseName(String name) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-29"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        String trimmedName \u003d name.trim();","lastModifiedDate":"2017-05-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(trimmedName)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            throw new ParseException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return new Name(trimmedName);","lastModifiedDate":"2017-05-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * Parses a {@code String phone} into a {@code Phone}.","lastModifiedDate":"2017-05-30"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code phone} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public static Phone parsePhone(String phone) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        requireNonNull(phone);","lastModifiedDate":"2017-05-30"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        String trimmedPhone \u003d phone.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(trimmedPhone)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            throw new ParseException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        return new Phone(trimmedPhone);","lastModifiedDate":"2017-05-30"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * Parses a {@code String address} into an {@code Address}.","lastModifiedDate":"2017-05-30"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code address} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public static Address parseAddress(String address) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        requireNonNull(address);","lastModifiedDate":"2017-05-30"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        String trimmedAddress \u003d address.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        if (!Address.isValidAddress(trimmedAddress)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":85,"author":{"gitId":"-"},"content":"            throw new ParseException(Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        return new Address(trimmedAddress);","lastModifiedDate":"2017-05-30"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * Parses a {@code String email} into an {@code Email}.","lastModifiedDate":"2017-05-30"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code email} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    public static Email parseEmail(String email) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        requireNonNull(email);","lastModifiedDate":"2017-05-30"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        String trimmedEmail \u003d email.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        if (!Email.isValidEmail(trimmedEmail)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":100,"author":{"gitId":"-"},"content":"            throw new ParseException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        return new Email(trimmedEmail);","lastModifiedDate":"2017-05-30"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     * Parses a {@code String tag} into a {@code Tag}.","lastModifiedDate":"2017-05-30"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":108,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":109,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code tag} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":110,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    public static Tag parseTag(String tag) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        requireNonNull(tag);","lastModifiedDate":"2017-05-30"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        String trimmedTag \u003d tag.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        if (!Tag.isValidTagName(trimmedTag)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":115,"author":{"gitId":"-"},"content":"            throw new ParseException(Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        return new Tag(trimmedTag);","lastModifiedDate":"2017-05-30"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":121,"author":{"gitId":"-"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e}.","lastModifiedDate":"2017-03-07"},{"lineNumber":122,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e parseTags(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        requireNonNull(tags);","lastModifiedDate":"2017-05-15"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        final Set\u003cTag\u003e tagSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2017-02-11"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        for (String tagName : tags) {","lastModifiedDate":"2017-02-11"},{"lineNumber":127,"author":{"gitId":"-"},"content":"            tagSet.add(parseTag(tagName));","lastModifiedDate":"2017-05-30"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        return tagSet;","lastModifiedDate":"2017-03-07"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":131,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":132,"author":{"gitId":"kanjitp"},"content":"    /**","lastModifiedDate":"2021-09-26"},{"lineNumber":133,"author":{"gitId":"kanjitp"},"content":"     * Parses {@code String birthDate} into a {@code BirthDate}.","lastModifiedDate":"2021-09-26"},{"lineNumber":134,"author":{"gitId":"kanjitp"},"content":"     */","lastModifiedDate":"2021-09-26"},{"lineNumber":135,"author":{"gitId":"kanjitp"},"content":"    public static BirthDate parseBirthDate(String birthDate) throws ParseException {","lastModifiedDate":"2021-09-26"},{"lineNumber":136,"author":{"gitId":"kanjitp"},"content":"        requireNonNull(birthDate);","lastModifiedDate":"2021-09-26"},{"lineNumber":137,"author":{"gitId":"kanjitp"},"content":"        String trimmedBirthDate \u003d birthDate.trim();","lastModifiedDate":"2021-09-26"},{"lineNumber":138,"author":{"gitId":"kanjitp"},"content":"        if (trimmedBirthDate.equals(\"NA\")) {","lastModifiedDate":"2021-09-26"},{"lineNumber":139,"author":{"gitId":"kanjitp"},"content":"            return BirthDate.notSpecified();","lastModifiedDate":"2021-09-26"},{"lineNumber":140,"author":{"gitId":"kanjitp"},"content":"        } else if (!BirthDate.isValidBirthDate(trimmedBirthDate)) {","lastModifiedDate":"2021-09-26"},{"lineNumber":141,"author":{"gitId":"kanjitp"},"content":"            throw new ParseException(BirthDate.MESSAGE_DATE_CONSTRAINTS);","lastModifiedDate":"2021-09-26"},{"lineNumber":142,"author":{"gitId":"kanjitp"},"content":"        }","lastModifiedDate":"2021-09-26"},{"lineNumber":143,"author":{"gitId":"kanjitp"},"content":"        LocalDate localDate \u003d LocalDate.parse(trimmedBirthDate);","lastModifiedDate":"2021-09-26"},{"lineNumber":144,"author":{"gitId":"kanjitp"},"content":"        return BirthDate.of(localDate);","lastModifiedDate":"2021-09-26"},{"lineNumber":145,"author":{"gitId":"kanjitp"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":146,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":147,"author":{"gitId":"kanjitp"},"content":"    /**","lastModifiedDate":"2021-09-26"},{"lineNumber":148,"author":{"gitId":"kanjitp"},"content":"     * Parses {@code String note} into a {@code Note}.","lastModifiedDate":"2021-09-26"},{"lineNumber":149,"author":{"gitId":"kanjitp"},"content":"     */","lastModifiedDate":"2021-09-26"},{"lineNumber":150,"author":{"gitId":"kanjitp"},"content":"    public static Note parseNote(String note) throws ParseException {","lastModifiedDate":"2021-09-26"},{"lineNumber":151,"author":{"gitId":"kanjitp"},"content":"        requireNonNull(note);","lastModifiedDate":"2021-09-26"},{"lineNumber":152,"author":{"gitId":"kanjitp"},"content":"        String trimmedNote \u003d note.trim();","lastModifiedDate":"2021-09-26"},{"lineNumber":153,"author":{"gitId":"kanjitp"},"content":"        // format: Importance: \u003ccontent\u003e","lastModifiedDate":"2021-09-26"},{"lineNumber":154,"author":{"gitId":"kanjitp"},"content":"        String[] parts \u003d trimmedNote.split(\":\");","lastModifiedDate":"2021-09-26"},{"lineNumber":155,"author":{"gitId":"kanjitp"},"content":"        if (parts.length !\u003d 2) {","lastModifiedDate":"2021-09-26"},{"lineNumber":156,"author":{"gitId":"kanjitp"},"content":"            throw new ParseException(Note.MESSAGE_INVALID_NOTE_FORMAT);","lastModifiedDate":"2021-09-26"},{"lineNumber":157,"author":{"gitId":"kanjitp"},"content":"        }","lastModifiedDate":"2021-09-26"},{"lineNumber":158,"author":{"gitId":"kanjitp"},"content":"        Note.Importance importance \u003d parseImportance(parts[0]);","lastModifiedDate":"2021-09-26"},{"lineNumber":159,"author":{"gitId":"kanjitp"},"content":"        return new Note(parts[1].trim(), importance);","lastModifiedDate":"2021-09-26"},{"lineNumber":160,"author":{"gitId":"kanjitp"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":161,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":162,"author":{"gitId":"kanjitp"},"content":"    /**","lastModifiedDate":"2021-09-26"},{"lineNumber":163,"author":{"gitId":"kanjitp"},"content":"     * Parses {@code Collection\u003cString\u003e notes} into a {@code Set\u003cNote\u003e}.","lastModifiedDate":"2021-09-26"},{"lineNumber":164,"author":{"gitId":"kanjitp"},"content":"     */","lastModifiedDate":"2021-09-26"},{"lineNumber":165,"author":{"gitId":"kanjitp"},"content":"    public static Set\u003cNote\u003e parseNotes(Collection\u003cString\u003e notes) throws ParseException {","lastModifiedDate":"2021-09-26"},{"lineNumber":166,"author":{"gitId":"kanjitp"},"content":"        requireNonNull(notes);","lastModifiedDate":"2021-09-26"},{"lineNumber":167,"author":{"gitId":"kanjitp"},"content":"        final Set\u003cNote\u003e tagNotes \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2021-09-26"},{"lineNumber":168,"author":{"gitId":"kanjitp"},"content":"        for (String noteDescription : notes) {","lastModifiedDate":"2021-09-26"},{"lineNumber":169,"author":{"gitId":"kanjitp"},"content":"            tagNotes.add(parseNote(noteDescription));","lastModifiedDate":"2021-09-26"},{"lineNumber":170,"author":{"gitId":"kanjitp"},"content":"        }","lastModifiedDate":"2021-09-26"},{"lineNumber":171,"author":{"gitId":"kanjitp"},"content":"        return tagNotes;","lastModifiedDate":"2021-09-26"},{"lineNumber":172,"author":{"gitId":"kanjitp"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":173,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":174,"author":{"gitId":"kanjitp"},"content":"    /**","lastModifiedDate":"2021-09-26"},{"lineNumber":175,"author":{"gitId":"kanjitp"},"content":"     * Parses {@code String nextOfKin} into a {@code NextOfKin}.","lastModifiedDate":"2021-09-26"},{"lineNumber":176,"author":{"gitId":"kanjitp"},"content":"     */","lastModifiedDate":"2021-09-26"},{"lineNumber":177,"author":{"gitId":"kanjitp"},"content":"    public static NextOfKin parseNextOfKin(String nextOfKin) throws ParseException {","lastModifiedDate":"2021-09-26"},{"lineNumber":178,"author":{"gitId":"kanjitp"},"content":"        requireNonNull(nextOfKin);","lastModifiedDate":"2021-09-26"},{"lineNumber":179,"author":{"gitId":"kanjitp"},"content":"        // TODO: IMPLEMENT THIS","lastModifiedDate":"2021-09-26"},{"lineNumber":180,"author":{"gitId":"kanjitp"},"content":"        return new NextOfKin(new Name(\"Test\"), new Phone(\"12345678\"), new Tag(\"Test\"));","lastModifiedDate":"2021-09-26"},{"lineNumber":181,"author":{"gitId":"kanjitp"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":182,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":183,"author":{"gitId":"kanjitp"},"content":"    /**","lastModifiedDate":"2021-09-26"},{"lineNumber":184,"author":{"gitId":"kanjitp"},"content":"     * Parses {@code Collection\u003cString\u003e nextOfKins} into a {@code ArrayList\u003cNextOfKin\u003e}.","lastModifiedDate":"2021-09-26"},{"lineNumber":185,"author":{"gitId":"kanjitp"},"content":"     */","lastModifiedDate":"2021-09-26"},{"lineNumber":186,"author":{"gitId":"kanjitp"},"content":"    public static ArrayList\u003cNextOfKin\u003e parseNextOfKins(Collection\u003cString\u003e noks) throws ParseException {","lastModifiedDate":"2021-09-26"},{"lineNumber":187,"author":{"gitId":"kanjitp"},"content":"        requireNonNull(noks);","lastModifiedDate":"2021-09-26"},{"lineNumber":188,"author":{"gitId":"kanjitp"},"content":"        final ArrayList\u003cNextOfKin\u003e nextOfKins \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-09-26"},{"lineNumber":189,"author":{"gitId":"kanjitp"},"content":"        for (String nextOfKin : noks) {","lastModifiedDate":"2021-09-26"},{"lineNumber":190,"author":{"gitId":"kanjitp"},"content":"            nextOfKins.add(parseNextOfKin(nextOfKin));","lastModifiedDate":"2021-09-26"},{"lineNumber":191,"author":{"gitId":"kanjitp"},"content":"        }","lastModifiedDate":"2021-09-26"},{"lineNumber":192,"author":{"gitId":"kanjitp"},"content":"        return nextOfKins;","lastModifiedDate":"2021-09-26"},{"lineNumber":193,"author":{"gitId":"kanjitp"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":194,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":195,"author":{"gitId":"kanjitp"},"content":"    /**","lastModifiedDate":"2021-09-26"},{"lineNumber":196,"author":{"gitId":"kanjitp"},"content":"     * Parses {@code String importance} into a {@code Importance in Note}.","lastModifiedDate":"2021-09-26"},{"lineNumber":197,"author":{"gitId":"kanjitp"},"content":"     */","lastModifiedDate":"2021-09-26"},{"lineNumber":198,"author":{"gitId":"kanjitp"},"content":"    public static Note.Importance parseImportance(String importance) throws ParseException {","lastModifiedDate":"2021-09-26"},{"lineNumber":199,"author":{"gitId":"kanjitp"},"content":"        requireNonNull(importance);","lastModifiedDate":"2021-09-26"},{"lineNumber":200,"author":{"gitId":"kanjitp"},"content":"        switch (importance) {","lastModifiedDate":"2021-09-26"},{"lineNumber":201,"author":{"gitId":"kanjitp"},"content":"        case \"VERY_HIGH\":","lastModifiedDate":"2021-09-26"},{"lineNumber":202,"author":{"gitId":"kanjitp"},"content":"            return Note.Importance.VERY_HIGH;","lastModifiedDate":"2021-09-26"},{"lineNumber":203,"author":{"gitId":"kanjitp"},"content":"        case \"HIGH\":","lastModifiedDate":"2021-09-26"},{"lineNumber":204,"author":{"gitId":"kanjitp"},"content":"            return Note.Importance.HIGH;","lastModifiedDate":"2021-09-26"},{"lineNumber":205,"author":{"gitId":"kanjitp"},"content":"        case \"MEDIUM\":","lastModifiedDate":"2021-09-26"},{"lineNumber":206,"author":{"gitId":"kanjitp"},"content":"            return Note.Importance.MEDIUM;","lastModifiedDate":"2021-09-26"},{"lineNumber":207,"author":{"gitId":"kanjitp"},"content":"        case \"LOW\":","lastModifiedDate":"2021-09-26"},{"lineNumber":208,"author":{"gitId":"kanjitp"},"content":"            return Note.Importance.LOW;","lastModifiedDate":"2021-09-26"},{"lineNumber":209,"author":{"gitId":"kanjitp"},"content":"        case \"VERY_LOW\":","lastModifiedDate":"2021-09-26"},{"lineNumber":210,"author":{"gitId":"kanjitp"},"content":"            return Note.Importance.VERY_LOW;","lastModifiedDate":"2021-09-26"},{"lineNumber":211,"author":{"gitId":"kanjitp"},"content":"        default:","lastModifiedDate":"2021-09-26"},{"lineNumber":212,"author":{"gitId":"kanjitp"},"content":"            throw new ParseException(MESSAGE_INVALID_IMPORTANCE + \" \" + importance);","lastModifiedDate":"2021-09-26"},{"lineNumber":213,"author":{"gitId":"kanjitp"},"content":"        }","lastModifiedDate":"2021-09-26"},{"lineNumber":214,"author":{"gitId":"kanjitp"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":215,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":216,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":217,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"kanjitp":93,"-":124}},{"path":"src/main/java/seedu/address/logic/parser/ShowEventDetailsCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ntwbruce"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-09-25"},{"lineNumber":2,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":3,"author":{"gitId":"ntwbruce"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-09-29"},{"lineNumber":4,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":5,"author":{"gitId":"lowkangn"},"content":"import seedu.address.logic.commands.ShowEventDetailsCommand;","lastModifiedDate":"2021-10-03"},{"lineNumber":6,"author":{"gitId":"ntwbruce"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-09-25"},{"lineNumber":7,"author":{"gitId":"ntwbruce"},"content":"import seedu.address.model.event.EventNamePredicate;","lastModifiedDate":"2021-09-26"},{"lineNumber":8,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":9,"author":{"gitId":"lowkangn"},"content":"public class ShowEventDetailsCommandParser implements Parser\u003cShowEventDetailsCommand\u003e {","lastModifiedDate":"2021-10-03"},{"lineNumber":10,"author":{"gitId":"ntwbruce"},"content":"    @Override","lastModifiedDate":"2021-09-25"},{"lineNumber":11,"author":{"gitId":"lowkangn"},"content":"    public ShowEventDetailsCommand parse(String userInput) throws ParseException {","lastModifiedDate":"2021-10-03"},{"lineNumber":12,"author":{"gitId":"ntwbruce"},"content":"        String trimmedArg \u003d userInput.trim().replaceAll(\"\\\\s+\", \" \");","lastModifiedDate":"2021-09-29"},{"lineNumber":13,"author":{"gitId":"ntwbruce"},"content":"        if (trimmedArg.isEmpty()) {","lastModifiedDate":"2021-09-25"},{"lineNumber":14,"author":{"gitId":"ntwbruce"},"content":"            throw new ParseException(","lastModifiedDate":"2021-09-25"},{"lineNumber":15,"author":{"gitId":"lowkangn"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, ShowEventDetailsCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-03"},{"lineNumber":16,"author":{"gitId":"ntwbruce"},"content":"        }","lastModifiedDate":"2021-09-25"},{"lineNumber":17,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":18,"author":{"gitId":"lowkangn"},"content":"        return new ShowEventDetailsCommand(new EventNamePredicate(trimmedArg));","lastModifiedDate":"2021-10-03"},{"lineNumber":19,"author":{"gitId":"ntwbruce"},"content":"    }","lastModifiedDate":"2021-09-25"},{"lineNumber":20,"author":{"gitId":"ntwbruce"},"content":"}","lastModifiedDate":"2021-09-25"}],"authorContributionMap":{"ntwbruce":15,"lowkangn":5}},{"path":"src/main/java/seedu/address/model/AddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"XXJJXJ"},"content":"import seedu.address.model.event.Event;","lastModifiedDate":"2021-09-18"},{"lineNumber":9,"author":{"gitId":"XXJJXJ"},"content":"import seedu.address.model.event.UniqueEventList;","lastModifiedDate":"2021-09-18"},{"lineNumber":10,"author":{"gitId":"kanjitp"},"content":"import seedu.address.model.participant.Participant;","lastModifiedDate":"2021-09-26"},{"lineNumber":11,"author":{"gitId":"kanjitp"},"content":"import seedu.address.model.participant.UniqueParticipantList;","lastModifiedDate":"2021-09-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Wraps all data at the address-book level","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"XXJJXJ"},"content":" * Duplicates are not allowed (by .isSameParticipant comparison)","lastModifiedDate":"2021-09-28"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class AddressBook implements ReadOnlyAddressBook {","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"kanjitp"},"content":"    private final UniqueParticipantList participants;","lastModifiedDate":"2021-09-26"},{"lineNumber":20,"author":{"gitId":"XXJJXJ"},"content":"    private final UniqueEventList events;","lastModifiedDate":"2021-09-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * The \u0027unusual\u0027 code block below is a non-static initialization block, sometimes used to avoid duplication","lastModifiedDate":"2019-05-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * between constructors. See https://docs.oracle.com/javase/tutorial/java/javaOO/initial.html","lastModifiedDate":"2016-10-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * Note that non-static init blocks are not recommended to use. There are other ways to avoid duplication","lastModifiedDate":"2016-10-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     *   among constructors.","lastModifiedDate":"2016-10-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    {","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"kanjitp"},"content":"        participants \u003d new UniqueParticipantList();","lastModifiedDate":"2021-09-26"},{"lineNumber":31,"author":{"gitId":"XXJJXJ"},"content":"        //Add on for Managera","lastModifiedDate":"2021-09-18"},{"lineNumber":32,"author":{"gitId":"XXJJXJ"},"content":"        events \u003d new UniqueEventList();","lastModifiedDate":"2021-09-18"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public AddressBook() {}","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"kanjitp"},"content":"     * Creates an AddressBook using the Participants in the {@code toBeCopied}","lastModifiedDate":"2021-09-28"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public AddressBook(ReadOnlyAddressBook toBeCopied) {","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        this();","lastModifiedDate":"2016-12-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        resetData(toBeCopied);","lastModifiedDate":"2016-12-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    //// list overwrite operations","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":48,"author":{"gitId":"kanjitp"},"content":"     * Replaces the contents of the participant list with {@code participant}.","lastModifiedDate":"2021-09-28"},{"lineNumber":49,"author":{"gitId":"kanjitp"},"content":"     * {@code participant} must not contain duplicate participants.","lastModifiedDate":"2021-09-28"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":51,"author":{"gitId":"kanjitp"},"content":"    public void setParticipants(List\u003cParticipant\u003e participants) {","lastModifiedDate":"2021-09-26"},{"lineNumber":52,"author":{"gitId":"kanjitp"},"content":"        this.participants.setParticipants(participants);","lastModifiedDate":"2021-09-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * Resets the existing data of this {@code AddressBook} with {@code newData}.","lastModifiedDate":"2017-08-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void resetData(ReadOnlyAddressBook newData) {","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        requireNonNull(newData);","lastModifiedDate":"2017-05-15"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-20"},{"lineNumber":61,"author":{"gitId":"kanjitp"},"content":"        setParticipants(newData.getParticipantList());","lastModifiedDate":"2021-09-26"},{"lineNumber":62,"author":{"gitId":"XXJJXJ"},"content":"        setEvents(newData.getEventList());","lastModifiedDate":"2021-09-18"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    //// person-level operations","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":68,"author":{"gitId":"XXJJXJ"},"content":"     * Returns true if a participant with the same identity as {@code participant} exists in the address book.","lastModifiedDate":"2021-09-28"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":70,"author":{"gitId":"kanjitp"},"content":"    public boolean hasParticipant(Participant participant) {","lastModifiedDate":"2021-09-26"},{"lineNumber":71,"author":{"gitId":"kanjitp"},"content":"        requireNonNull(participant);","lastModifiedDate":"2021-09-26"},{"lineNumber":72,"author":{"gitId":"kanjitp"},"content":"        return participants.contains(participant);","lastModifiedDate":"2021-09-26"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":76,"author":{"gitId":"XXJJXJ"},"content":"     * Adds a Particpant to the Managera.","lastModifiedDate":"2021-09-28"},{"lineNumber":77,"author":{"gitId":"XXJJXJ"},"content":"     * The Participant must not already exist in Managera.","lastModifiedDate":"2021-09-28"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":79,"author":{"gitId":"kanjitp"},"content":"    public void addParticipant(Participant p) {","lastModifiedDate":"2021-09-26"},{"lineNumber":80,"author":{"gitId":"kanjitp"},"content":"        participants.add(p);","lastModifiedDate":"2021-09-26"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":84,"author":{"gitId":"XXJJXJ"},"content":"     * Replaces the given Participant {@code target} in the list with {@code editedParticipant}.","lastModifiedDate":"2021-09-28"},{"lineNumber":85,"author":{"gitId":"XXJJXJ"},"content":"     * {@code target} must exist in Managera.","lastModifiedDate":"2021-09-28"},{"lineNumber":86,"author":{"gitId":"kanjitp"},"content":"     * The person identity of {@code editedParticipant} must not be the same as another","lastModifiedDate":"2021-09-28"},{"lineNumber":87,"author":{"gitId":"kanjitp"},"content":"     * existing Participant in Managera.","lastModifiedDate":"2021-09-28"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":89,"author":{"gitId":"kanjitp"},"content":"    public void setParticipant(Participant target, Participant editedParticipant) {","lastModifiedDate":"2021-09-26"},{"lineNumber":90,"author":{"gitId":"kanjitp"},"content":"        requireNonNull(editedParticipant);","lastModifiedDate":"2021-09-26"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":92,"author":{"gitId":"kanjitp"},"content":"        participants.setParticipant(target, editedParticipant);","lastModifiedDate":"2021-09-26"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     * Removes {@code key} from this {@code AddressBook}.","lastModifiedDate":"2017-08-16"},{"lineNumber":97,"author":{"gitId":"XXJJXJ"},"content":"     * {@code key} must exist in Managera.","lastModifiedDate":"2021-09-28"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":99,"author":{"gitId":"kanjitp"},"content":"    public void removeParticipant(Participant key) {","lastModifiedDate":"2021-09-26"},{"lineNumber":100,"author":{"gitId":"kanjitp"},"content":"        participants.remove(key);","lastModifiedDate":"2021-09-26"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":103,"author":{"gitId":"XXJJXJ"},"content":"    //Add on for Managera","lastModifiedDate":"2021-09-18"},{"lineNumber":104,"author":{"gitId":"XXJJXJ"},"content":"    /**","lastModifiedDate":"2021-09-18"},{"lineNumber":105,"author":{"gitId":"XXJJXJ"},"content":"     * Replaces the contents of the event list with {@code events}.","lastModifiedDate":"2021-09-18"},{"lineNumber":106,"author":{"gitId":"XXJJXJ"},"content":"     * {@code events} must not contain duplicate events.","lastModifiedDate":"2021-09-18"},{"lineNumber":107,"author":{"gitId":"XXJJXJ"},"content":"     */","lastModifiedDate":"2021-09-18"},{"lineNumber":108,"author":{"gitId":"XXJJXJ"},"content":"    public void setEvents(List\u003cEvent\u003e events) {","lastModifiedDate":"2021-09-18"},{"lineNumber":109,"author":{"gitId":"XXJJXJ"},"content":"        this.events.setEvents(events);","lastModifiedDate":"2021-09-18"},{"lineNumber":110,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":111,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":112,"author":{"gitId":"XXJJXJ"},"content":"    /**","lastModifiedDate":"2021-09-18"},{"lineNumber":113,"author":{"gitId":"XXJJXJ"},"content":"     * Returns true if an event with the same identity as {@code event} exists in the address book.","lastModifiedDate":"2021-09-18"},{"lineNumber":114,"author":{"gitId":"XXJJXJ"},"content":"     */","lastModifiedDate":"2021-09-18"},{"lineNumber":115,"author":{"gitId":"XXJJXJ"},"content":"    public boolean hasEvent(Event event) {","lastModifiedDate":"2021-09-18"},{"lineNumber":116,"author":{"gitId":"XXJJXJ"},"content":"        requireNonNull(event);","lastModifiedDate":"2021-09-18"},{"lineNumber":117,"author":{"gitId":"XXJJXJ"},"content":"        return events.contains(event);","lastModifiedDate":"2021-09-18"},{"lineNumber":118,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":119,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":120,"author":{"gitId":"XXJJXJ"},"content":"    /**","lastModifiedDate":"2021-09-18"},{"lineNumber":121,"author":{"gitId":"kanjitp"},"content":"     * Adds a participant to the Managera.","lastModifiedDate":"2021-09-28"},{"lineNumber":122,"author":{"gitId":"kanjitp"},"content":"     * The participant must not already exist in the Managera.","lastModifiedDate":"2021-09-28"},{"lineNumber":123,"author":{"gitId":"XXJJXJ"},"content":"     */","lastModifiedDate":"2021-09-18"},{"lineNumber":124,"author":{"gitId":"XXJJXJ"},"content":"    public void addEvent(Event e) {","lastModifiedDate":"2021-09-18"},{"lineNumber":125,"author":{"gitId":"XXJJXJ"},"content":"        events.add(e);","lastModifiedDate":"2021-09-18"},{"lineNumber":126,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":127,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":128,"author":{"gitId":"XXJJXJ"},"content":"    //setEvent omitted for future implementation","lastModifiedDate":"2021-09-18"},{"lineNumber":129,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":130,"author":{"gitId":"XXJJXJ"},"content":"    /**","lastModifiedDate":"2021-09-18"},{"lineNumber":131,"author":{"gitId":"XXJJXJ"},"content":"     * Removes {@code key} from this {@code AddressBook}.","lastModifiedDate":"2021-09-18"},{"lineNumber":132,"author":{"gitId":"kanjitp"},"content":"     * {@code key} must exist in Managera.","lastModifiedDate":"2021-09-28"},{"lineNumber":133,"author":{"gitId":"XXJJXJ"},"content":"     */","lastModifiedDate":"2021-09-18"},{"lineNumber":134,"author":{"gitId":"XXJJXJ"},"content":"    public void removeEvent(Event key) {","lastModifiedDate":"2021-09-18"},{"lineNumber":135,"author":{"gitId":"XXJJXJ"},"content":"        events.remove(key);","lastModifiedDate":"2021-09-18"},{"lineNumber":136,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":137,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":138,"author":{"gitId":"lowkangn"},"content":"    /**","lastModifiedDate":"2021-10-03"},{"lineNumber":139,"author":{"gitId":"lowkangn"},"content":"     * Marks {@code key} from this {@code AddressBook} as done.","lastModifiedDate":"2021-10-03"},{"lineNumber":140,"author":{"gitId":"lowkangn"},"content":"     * {@code key} must exist in Managera.","lastModifiedDate":"2021-10-03"},{"lineNumber":141,"author":{"gitId":"lowkangn"},"content":"     */","lastModifiedDate":"2021-10-03"},{"lineNumber":142,"author":{"gitId":"lowkangn"},"content":"    public void markEventAsDone(Event key) {","lastModifiedDate":"2021-10-03"},{"lineNumber":143,"author":{"gitId":"lowkangn"},"content":"        events.setEvent(key, key.markAsDone());","lastModifiedDate":"2021-10-03"},{"lineNumber":144,"author":{"gitId":"lowkangn"},"content":"    }","lastModifiedDate":"2021-10-03"},{"lineNumber":145,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":146,"author":{"gitId":"XXJJXJ"},"content":"    @Override","lastModifiedDate":"2021-09-20"},{"lineNumber":147,"author":{"gitId":"XXJJXJ"},"content":"    public void sortEvents() {","lastModifiedDate":"2021-09-20"},{"lineNumber":148,"author":{"gitId":"XXJJXJ"},"content":"        events.sort();","lastModifiedDate":"2021-09-20"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-20"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    //// util methods","lastModifiedDate":"2016-08-08"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-08"},{"lineNumber":155,"author":{"gitId":"kanjitp"},"content":"        return participants.asUnmodifiableObservableList().size() + \" participants\";","lastModifiedDate":"2021-09-26"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        // TODO: refine later","lastModifiedDate":"2016-08-08"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":160,"author":{"gitId":"kanjitp"},"content":"    public ObservableList\u003cParticipant\u003e getParticipantList() {","lastModifiedDate":"2021-09-26"},{"lineNumber":161,"author":{"gitId":"kanjitp"},"content":"        return participants.asUnmodifiableObservableList();","lastModifiedDate":"2021-09-26"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-01"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-01"},{"lineNumber":164,"author":{"gitId":"XXJJXJ"},"content":"    @Override","lastModifiedDate":"2021-09-18"},{"lineNumber":165,"author":{"gitId":"XXJJXJ"},"content":"    public ObservableList\u003cEvent\u003e getEventList() {","lastModifiedDate":"2021-09-18"},{"lineNumber":166,"author":{"gitId":"XXJJXJ"},"content":"        return events.asUnmodifiableObservableList();","lastModifiedDate":"2021-09-18"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-21"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-09-21"},{"lineNumber":172,"author":{"gitId":"-"},"content":"                || (other instanceof AddressBook // instanceof handles nulls","lastModifiedDate":"2016-09-21"},{"lineNumber":173,"author":{"gitId":"kanjitp"},"content":"                \u0026\u0026 participants.equals(((AddressBook) other).participants));","lastModifiedDate":"2021-09-26"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-21"},{"lineNumber":178,"author":{"gitId":"kanjitp"},"content":"        return participants.hashCode();","lastModifiedDate":"2021-09-26"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":180,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"XXJJXJ":51,"kanjitp":30,"-":91,"lowkangn":8}},{"path":"src/main/java/seedu/address/model/Model.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":8,"author":{"gitId":"XXJJXJ"},"content":"import seedu.address.model.event.Event;","lastModifiedDate":"2021-09-18"},{"lineNumber":9,"author":{"gitId":"kanjitp"},"content":"import seedu.address.model.participant.Participant;","lastModifiedDate":"2021-09-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * The API of the Model component.","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public interface Model {","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /** {@code Predicate} that always evaluate to true */","lastModifiedDate":"2017-08-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    Predicate\u003cPerson\u003e PREDICATE_SHOW_ALL_PERSONS \u003d unused -\u003e true;","lastModifiedDate":"2018-01-10"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":19,"author":{"gitId":"XXJJXJ"},"content":"    /** {@code Predicate} that always evaluate to true */","lastModifiedDate":"2021-09-22"},{"lineNumber":20,"author":{"gitId":"XXJJXJ"},"content":"    Predicate\u003cEvent\u003e PREDICATE_SHOW_ALL_EVENTS \u003d unused -\u003e true;","lastModifiedDate":"2021-09-22"},{"lineNumber":21,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":22,"author":{"gitId":"XXJJXJ"},"content":"    Predicate\u003cParticipant\u003e PREDICATE_SHOW_ALL_PARTICIPANTS \u003d unused -\u003e true;","lastModifiedDate":"2021-09-30"},{"lineNumber":23,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Replaces user prefs data with the data in {@code userPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    void setUserPrefs(ReadOnlyUserPrefs userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Returns the user prefs.","lastModifiedDate":"2018-11-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    ReadOnlyUserPrefs getUserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    void setAddressBookFilePath(Path addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * Replaces address book data with the data in {@code addressBook}.","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    void setAddressBook(ReadOnlyAddressBook addressBook);","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    /** Returns the AddressBook */","lastModifiedDate":"2016-09-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    ReadOnlyAddressBook getAddressBook();","lastModifiedDate":"2016-09-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":63,"author":{"gitId":"XXJJXJ"},"content":"     * Returns true if a Participant with the same identity as {@code participant} exists in Managera.","lastModifiedDate":"2021-09-28"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":65,"author":{"gitId":"kanjitp"},"content":"    boolean hasParticipant(Participant participant);","lastModifiedDate":"2021-09-26"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":68,"author":{"gitId":"XXJJXJ"},"content":"     * Deletes the given Participant.","lastModifiedDate":"2021-09-28"},{"lineNumber":69,"author":{"gitId":"XXJJXJ"},"content":"     * The Participant must exist in Managera.","lastModifiedDate":"2021-09-28"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":71,"author":{"gitId":"kanjitp"},"content":"    void deleteParticipant(Participant target);","lastModifiedDate":"2021-09-26"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":74,"author":{"gitId":"XXJJXJ"},"content":"     * Adds the given Participant.","lastModifiedDate":"2021-09-28"},{"lineNumber":75,"author":{"gitId":"XXJJXJ"},"content":"     * {@code participant} must not already exist in Managera.","lastModifiedDate":"2021-09-28"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":77,"author":{"gitId":"kanjitp"},"content":"    void addParticipant(Participant participant);","lastModifiedDate":"2021-09-28"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":80,"author":{"gitId":"XXJJXJ"},"content":"     * Replaces the given Participant {@code target} with {@code editedParticipant}.","lastModifiedDate":"2021-09-28"},{"lineNumber":81,"author":{"gitId":"XXJJXJ"},"content":"     * {@code target} must exist in Managera.","lastModifiedDate":"2021-09-28"},{"lineNumber":82,"author":{"gitId":"kanjitp"},"content":"     * The Participant identity of {@code editedParticipant} must not be the same","lastModifiedDate":"2021-09-28"},{"lineNumber":83,"author":{"gitId":"kanjitp"},"content":"     * as another existing Participant in Managera.","lastModifiedDate":"2021-09-28"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":85,"author":{"gitId":"kanjitp"},"content":"    void setParticipant(Participant target, Participant editedParticipant);","lastModifiedDate":"2021-09-28"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":87,"author":{"gitId":"XXJJXJ"},"content":"    /** Returns an unmodifiable view of the filtered Participant list */","lastModifiedDate":"2021-09-28"},{"lineNumber":88,"author":{"gitId":"kanjitp"},"content":"    ObservableList\u003cParticipant\u003e getFilteredParticipantList();","lastModifiedDate":"2021-09-26"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-05"},{"lineNumber":91,"author":{"gitId":"XXJJXJ"},"content":"     * Updates the filter of the filtered Participant list to filter by the given {@code predicate}.","lastModifiedDate":"2021-09-28"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2017-08-05"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-05"},{"lineNumber":94,"author":{"gitId":"kanjitp"},"content":"    void updateFilteredParticipantList(Predicate\u003cParticipant\u003e predicate);","lastModifiedDate":"2021-09-26"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-10-03"},{"lineNumber":97,"author":{"gitId":"lowkangn"},"content":"     * MArks the given Event {@code target} as done.","lastModifiedDate":"2021-10-03"},{"lineNumber":98,"author":{"gitId":"lowkangn"},"content":"     * {@code target} must exist in Managera.","lastModifiedDate":"2021-10-03"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-10-03"},{"lineNumber":100,"author":{"gitId":"lowkangn"},"content":"    void markEventAsDone(Event target);","lastModifiedDate":"2021-10-03"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":102,"author":{"gitId":"XXJJXJ"},"content":"    /** Returns an unmodifiable view of list of Events *///getFilteredEventList","lastModifiedDate":"2021-09-30"},{"lineNumber":103,"author":{"gitId":"XXJJXJ"},"content":"    ObservableList\u003cEvent\u003e getFilteredEventList();","lastModifiedDate":"2021-09-21"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-09-21"},{"lineNumber":106,"author":{"gitId":"XXJJXJ"},"content":"     * Updates the filter of the filtered event list to filter by the given {@code predicate}.","lastModifiedDate":"2021-09-21"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2021-09-21"},{"lineNumber":108,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-09-21"},{"lineNumber":109,"author":{"gitId":"XXJJXJ"},"content":"    void updateFilteredEventList(Predicate\u003cEvent\u003e predicate);","lastModifiedDate":"2021-09-21"},{"lineNumber":110,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":111,"author":{"gitId":"XXJJXJ"},"content":"    /** Sorts the event lists chronologically */","lastModifiedDate":"2021-09-20"},{"lineNumber":112,"author":{"gitId":"XXJJXJ"},"content":"    void sortEvents();","lastModifiedDate":"2021-09-20"},{"lineNumber":113,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"XXJJXJ":21,"kanjitp":10,"-":79,"lowkangn":3}},{"path":"src/main/java/seedu/address/model/ModelManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-08-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2017-05-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.collections.transformation.FilteredList;","lastModifiedDate":"2016-08-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":14,"author":{"gitId":"XXJJXJ"},"content":"import seedu.address.model.event.Event;","lastModifiedDate":"2021-09-18"},{"lineNumber":15,"author":{"gitId":"kanjitp"},"content":"import seedu.address.model.participant.Participant;","lastModifiedDate":"2021-09-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"kanjitp"},"content":" * Represents the in-memory model of the Managera data.","lastModifiedDate":"2021-09-28"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class ModelManager implements Model {","lastModifiedDate":"2018-12-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(ModelManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private final AddressBook addressBook;","lastModifiedDate":"2019-01-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private final UserPrefs userPrefs;","lastModifiedDate":"2018-12-06"},{"lineNumber":25,"author":{"gitId":"kanjitp"},"content":"    private final FilteredList\u003cParticipant\u003e filteredParticipants;","lastModifiedDate":"2021-09-26"},{"lineNumber":26,"author":{"gitId":"XXJJXJ"},"content":"    //Add-ons for Managera","lastModifiedDate":"2021-09-18"},{"lineNumber":27,"author":{"gitId":"XXJJXJ"},"content":"    private final FilteredList\u003cEvent\u003e filteredEvents;","lastModifiedDate":"2021-09-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Initializes a ModelManager with the given addressBook and userPrefs.","lastModifiedDate":"2016-12-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public ModelManager(ReadOnlyAddressBook addressBook, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        super();","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        requireAllNonNull(addressBook, userPrefs);","lastModifiedDate":"2017-05-19"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        logger.fine(\"Initializing with address book: \" + addressBook + \" and user prefs \" + userPrefs);","lastModifiedDate":"2016-12-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        this.addressBook \u003d new AddressBook(addressBook);","lastModifiedDate":"2019-01-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        this.userPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":40,"author":{"gitId":"kanjitp"},"content":"        filteredParticipants \u003d new FilteredList\u003c\u003e(this.addressBook.getParticipantList());","lastModifiedDate":"2021-09-26"},{"lineNumber":41,"author":{"gitId":"XXJJXJ"},"content":"        //Add-ons for Managera","lastModifiedDate":"2021-09-18"},{"lineNumber":42,"author":{"gitId":"XXJJXJ"},"content":"        filteredEvents \u003d new FilteredList\u003c\u003e(this.addressBook.getEventList());","lastModifiedDate":"2021-09-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public ModelManager() {","lastModifiedDate":"2016-09-22"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        this(new AddressBook(), new UserPrefs());","lastModifiedDate":"2016-09-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        requireNonNull(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        this.userPrefs.resetData(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        return userPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        return userPrefs.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        return userPrefs.getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-11-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        requireNonNull(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d AddressBook \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public void setAddressBook(ReadOnlyAddressBook addressBook) {","lastModifiedDate":"2018-11-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        this.addressBook.resetData(addressBook);","lastModifiedDate":"2019-01-25"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2016-09-21"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        return addressBook;","lastModifiedDate":"2019-01-25"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":97,"author":{"gitId":"kanjitp"},"content":"    public boolean hasParticipant(Participant participant) {","lastModifiedDate":"2021-09-26"},{"lineNumber":98,"author":{"gitId":"kanjitp"},"content":"        requireNonNull(participant);","lastModifiedDate":"2021-09-26"},{"lineNumber":99,"author":{"gitId":"kanjitp"},"content":"        return addressBook.hasParticipant(participant);","lastModifiedDate":"2021-09-26"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":103,"author":{"gitId":"kanjitp"},"content":"    public void deleteParticipant(Participant target) {","lastModifiedDate":"2021-09-26"},{"lineNumber":104,"author":{"gitId":"kanjitp"},"content":"        addressBook.removeParticipant(target);","lastModifiedDate":"2021-09-26"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":108,"author":{"gitId":"kanjitp"},"content":"    public void addParticipant(Participant participant) {","lastModifiedDate":"2021-09-26"},{"lineNumber":109,"author":{"gitId":"kanjitp"},"content":"        addressBook.addParticipant(participant);","lastModifiedDate":"2021-09-26"},{"lineNumber":110,"author":{"gitId":"kanjitp"},"content":"        updateFilteredParticipantList(PREDICATE_SHOW_ALL_PARTICIPANTS);","lastModifiedDate":"2021-09-26"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-26"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-13"},{"lineNumber":114,"author":{"gitId":"kanjitp"},"content":"    public void setParticipant(Participant target, Participant editedParticipant) {","lastModifiedDate":"2021-09-26"},{"lineNumber":115,"author":{"gitId":"kanjitp"},"content":"        requireAllNonNull(target, editedParticipant);","lastModifiedDate":"2021-09-26"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":117,"author":{"gitId":"kanjitp"},"content":"        addressBook.setParticipant(target, editedParticipant);","lastModifiedDate":"2021-09-26"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":120,"author":{"gitId":"XXJJXJ"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Filtered Participant List Accessors \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-09-28"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-19"},{"lineNumber":123,"author":{"gitId":"-"},"content":"     * Returns an unmodifiable view of the list of {@code Person} backed by the internal list of","lastModifiedDate":"2018-01-10"},{"lineNumber":124,"author":{"gitId":"-"},"content":"     * {@code versionedAddressBook}","lastModifiedDate":"2018-06-11"},{"lineNumber":125,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-19"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":127,"author":{"gitId":"kanjitp"},"content":"    public ObservableList\u003cParticipant\u003e getFilteredParticipantList() {","lastModifiedDate":"2021-09-26"},{"lineNumber":128,"author":{"gitId":"kanjitp"},"content":"        return filteredParticipants;","lastModifiedDate":"2021-09-26"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":132,"author":{"gitId":"kanjitp"},"content":"    public void updateFilteredParticipantList(Predicate\u003cParticipant\u003e predicate) {","lastModifiedDate":"2021-09-26"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2017-08-05"},{"lineNumber":134,"author":{"gitId":"kanjitp"},"content":"        filteredParticipants.setPredicate(predicate);","lastModifiedDate":"2021-09-26"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":137,"author":{"gitId":"ntwbruce"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Event List Accessor \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-09-29"},{"lineNumber":138,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":139,"author":{"gitId":"XXJJXJ"},"content":"    /**","lastModifiedDate":"2021-09-18"},{"lineNumber":140,"author":{"gitId":"XXJJXJ"},"content":"     * Returns an unmodifiable view of the list of {@code Event} backed by the internal list of","lastModifiedDate":"2021-09-18"},{"lineNumber":141,"author":{"gitId":"XXJJXJ"},"content":"     * {@code versionedAddressBook}","lastModifiedDate":"2021-09-18"},{"lineNumber":142,"author":{"gitId":"XXJJXJ"},"content":"     */","lastModifiedDate":"2021-09-18"},{"lineNumber":143,"author":{"gitId":"XXJJXJ"},"content":"    @Override","lastModifiedDate":"2021-09-18"},{"lineNumber":144,"author":{"gitId":"XXJJXJ"},"content":"    public ObservableList\u003cEvent\u003e getFilteredEventList() {","lastModifiedDate":"2021-09-21"},{"lineNumber":145,"author":{"gitId":"XXJJXJ"},"content":"        return filteredEvents;","lastModifiedDate":"2021-09-21"},{"lineNumber":146,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-09-21"},{"lineNumber":147,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":148,"author":{"gitId":"XXJJXJ"},"content":"    @Override","lastModifiedDate":"2021-09-21"},{"lineNumber":149,"author":{"gitId":"XXJJXJ"},"content":"    public void updateFilteredEventList(Predicate\u003cEvent\u003e predicate) {","lastModifiedDate":"2021-09-21"},{"lineNumber":150,"author":{"gitId":"XXJJXJ"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2021-09-21"},{"lineNumber":151,"author":{"gitId":"XXJJXJ"},"content":"        filteredEvents.setPredicate(predicate);","lastModifiedDate":"2021-09-21"},{"lineNumber":152,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":153,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":154,"author":{"gitId":"XXJJXJ"},"content":"    /**","lastModifiedDate":"2021-09-29"},{"lineNumber":155,"author":{"gitId":"XXJJXJ"},"content":"     * Sorts the events in the addressBook.","lastModifiedDate":"2021-09-29"},{"lineNumber":156,"author":{"gitId":"XXJJXJ"},"content":"     */","lastModifiedDate":"2021-09-29"},{"lineNumber":157,"author":{"gitId":"XXJJXJ"},"content":"    public void sortEvents() {","lastModifiedDate":"2021-09-29"},{"lineNumber":158,"author":{"gitId":"XXJJXJ"},"content":"        addressBook.sortEvents();","lastModifiedDate":"2021-09-29"},{"lineNumber":159,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-09-29"},{"lineNumber":160,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":161,"author":{"gitId":"lowkangn"},"content":"    @Override","lastModifiedDate":"2021-10-03"},{"lineNumber":162,"author":{"gitId":"lowkangn"},"content":"    public void markEventAsDone(Event target) {","lastModifiedDate":"2021-10-03"},{"lineNumber":163,"author":{"gitId":"lowkangn"},"content":"        requireNonNull(target);","lastModifiedDate":"2021-10-03"},{"lineNumber":164,"author":{"gitId":"lowkangn"},"content":"        addressBook.markEventAsDone(target);","lastModifiedDate":"2021-10-03"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-03"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-31"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2017-05-31"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-05-31"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        if (obj \u003d\u003d this) {","lastModifiedDate":"2017-05-31"},{"lineNumber":171,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-31"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-31"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        if (!(obj instanceof ModelManager)) {","lastModifiedDate":"2017-05-31"},{"lineNumber":176,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-31"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-05-31"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        ModelManager other \u003d (ModelManager) obj;","lastModifiedDate":"2017-05-31"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        return addressBook.equals(other.addressBook)","lastModifiedDate":"2019-01-25"},{"lineNumber":182,"author":{"gitId":"-"},"content":"                \u0026\u0026 userPrefs.equals(other.userPrefs)","lastModifiedDate":"2018-11-27"},{"lineNumber":183,"author":{"gitId":"kanjitp"},"content":"                \u0026\u0026 filteredParticipants.equals(other.filteredParticipants);","lastModifiedDate":"2021-09-26"},{"lineNumber":184,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":186,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"XXJJXJ":28,"kanjitp":20,"ntwbruce":2,"-":132,"lowkangn":4}},{"path":"src/main/java/seedu/address/model/ReadOnlyAddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"XXJJXJ"},"content":"import seedu.address.model.event.Event;","lastModifiedDate":"2021-09-18"},{"lineNumber":5,"author":{"gitId":"kanjitp"},"content":"import seedu.address.model.participant.Participant;","lastModifiedDate":"2021-09-26"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Unmodifiable view of an address book","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public interface ReadOnlyAddressBook {","lastModifiedDate":"2019-01-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"XXJJXJ"},"content":"     * Returns an unmodifiable view of the Participants list.","lastModifiedDate":"2021-09-28"},{"lineNumber":14,"author":{"gitId":"XXJJXJ"},"content":"     * This list will not contain any duplicate Participants.","lastModifiedDate":"2021-09-28"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"kanjitp"},"content":"    ObservableList\u003cParticipant\u003e getParticipantList();","lastModifiedDate":"2021-09-26"},{"lineNumber":17,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":18,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"XXJJXJ"},"content":"    /**","lastModifiedDate":"2021-09-18"},{"lineNumber":21,"author":{"gitId":"XXJJXJ"},"content":"     * Returns an unmodifiable view of the events list.","lastModifiedDate":"2021-09-18"},{"lineNumber":22,"author":{"gitId":"XXJJXJ"},"content":"     * This list will not contain any duplicate events.","lastModifiedDate":"2021-09-18"},{"lineNumber":23,"author":{"gitId":"XXJJXJ"},"content":"     */","lastModifiedDate":"2021-09-18"},{"lineNumber":24,"author":{"gitId":"XXJJXJ"},"content":"    ObservableList\u003cEvent\u003e getEventList();","lastModifiedDate":"2021-09-18"},{"lineNumber":25,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":26,"author":{"gitId":"XXJJXJ"},"content":"    /**","lastModifiedDate":"2021-09-20"},{"lineNumber":27,"author":{"gitId":"XXJJXJ"},"content":"     * Sorts the event list chronologically.","lastModifiedDate":"2021-09-20"},{"lineNumber":28,"author":{"gitId":"XXJJXJ"},"content":"     */","lastModifiedDate":"2021-09-20"},{"lineNumber":29,"author":{"gitId":"XXJJXJ"},"content":"    void sortEvents();","lastModifiedDate":"2021-09-20"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":31,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"XXJJXJ":13,"kanjitp":4,"-":14}},{"path":"src/main/java/seedu/address/model/event/Event.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"XXJJXJ"},"content":"package seedu.address.model.event;","lastModifiedDate":"2021-09-17"},{"lineNumber":2,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":3,"author":{"gitId":"XXJJXJ"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-09-17"},{"lineNumber":4,"author":{"gitId":"XXJJXJ"},"content":"import java.util.Collections;","lastModifiedDate":"2021-09-17"},{"lineNumber":5,"author":{"gitId":"XXJJXJ"},"content":"import java.util.List;","lastModifiedDate":"2021-09-17"},{"lineNumber":6,"author":{"gitId":"XXJJXJ"},"content":"import java.util.Objects;","lastModifiedDate":"2021-09-18"},{"lineNumber":7,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":8,"author":{"gitId":"kanjitp"},"content":"import seedu.address.model.participant.Participant;","lastModifiedDate":"2021-09-26"},{"lineNumber":9,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":10,"author":{"gitId":"XXJJXJ"},"content":"/**","lastModifiedDate":"2021-09-17"},{"lineNumber":11,"author":{"gitId":"XXJJXJ"},"content":" * This is an Event class.","lastModifiedDate":"2021-09-17"},{"lineNumber":12,"author":{"gitId":"XXJJXJ"},"content":" */","lastModifiedDate":"2021-09-17"},{"lineNumber":13,"author":{"gitId":"XXJJXJ"},"content":"public class Event implements Comparable\u003cEvent\u003e {","lastModifiedDate":"2021-09-18"},{"lineNumber":14,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":15,"author":{"gitId":"XXJJXJ"},"content":"    private boolean isDone \u003d false;","lastModifiedDate":"2021-09-17"},{"lineNumber":16,"author":{"gitId":"XXJJXJ"},"content":"    private ArrayList\u003cParticipant\u003e participants \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-09-17"},{"lineNumber":17,"author":{"gitId":"XXJJXJ"},"content":"    private EventName eventName;","lastModifiedDate":"2021-09-18"},{"lineNumber":18,"author":{"gitId":"XXJJXJ"},"content":"    private EventDate eventDate;","lastModifiedDate":"2021-09-18"},{"lineNumber":19,"author":{"gitId":"XXJJXJ"},"content":"    private EventTime eventTime;","lastModifiedDate":"2021-09-18"},{"lineNumber":20,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":21,"author":{"gitId":"XXJJXJ"},"content":"    /**","lastModifiedDate":"2021-09-17"},{"lineNumber":22,"author":{"gitId":"XXJJXJ"},"content":"     * This is the constructor of an Event.","lastModifiedDate":"2021-09-18"},{"lineNumber":23,"author":{"gitId":"XXJJXJ"},"content":"     *","lastModifiedDate":"2021-09-17"},{"lineNumber":24,"author":{"gitId":"XXJJXJ"},"content":"     * @param name of the Event.","lastModifiedDate":"2021-09-17"},{"lineNumber":25,"author":{"gitId":"XXJJXJ"},"content":"     * @param date at which the Event occurs.","lastModifiedDate":"2021-09-17"},{"lineNumber":26,"author":{"gitId":"XXJJXJ"},"content":"     * @param time of the Event.","lastModifiedDate":"2021-09-17"},{"lineNumber":27,"author":{"gitId":"XXJJXJ"},"content":"     */","lastModifiedDate":"2021-09-17"},{"lineNumber":28,"author":{"gitId":"XXJJXJ"},"content":"    public Event(EventName name, EventDate date, EventTime time) {","lastModifiedDate":"2021-09-18"},{"lineNumber":29,"author":{"gitId":"XXJJXJ"},"content":"        this.eventName \u003d name;","lastModifiedDate":"2021-09-18"},{"lineNumber":30,"author":{"gitId":"XXJJXJ"},"content":"        this.eventDate \u003d date;","lastModifiedDate":"2021-09-18"},{"lineNumber":31,"author":{"gitId":"XXJJXJ"},"content":"        this.eventTime \u003d time;","lastModifiedDate":"2021-09-18"},{"lineNumber":32,"author":{"gitId":"lowkangn"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2021-10-03"},{"lineNumber":33,"author":{"gitId":"lowkangn"},"content":"    }","lastModifiedDate":"2021-10-03"},{"lineNumber":34,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":35,"author":{"gitId":"lowkangn"},"content":"    /**","lastModifiedDate":"2021-10-03"},{"lineNumber":36,"author":{"gitId":"lowkangn"},"content":"     * This is an overloaded constructor of an Event.","lastModifiedDate":"2021-10-03"},{"lineNumber":37,"author":{"gitId":"lowkangn"},"content":"     *","lastModifiedDate":"2021-10-03"},{"lineNumber":38,"author":{"gitId":"lowkangn"},"content":"     * @param name of the Event.","lastModifiedDate":"2021-10-03"},{"lineNumber":39,"author":{"gitId":"lowkangn"},"content":"     * @param date at which the Event occurs.","lastModifiedDate":"2021-10-03"},{"lineNumber":40,"author":{"gitId":"lowkangn"},"content":"     * @param time of the Event.","lastModifiedDate":"2021-10-03"},{"lineNumber":41,"author":{"gitId":"lowkangn"},"content":"     * @param isDone A boolean to indicate is the event is done.","lastModifiedDate":"2021-10-03"},{"lineNumber":42,"author":{"gitId":"lowkangn"},"content":"     */","lastModifiedDate":"2021-10-03"},{"lineNumber":43,"author":{"gitId":"lowkangn"},"content":"    public Event(EventName name, EventDate date, EventTime time, boolean isDone) {","lastModifiedDate":"2021-10-03"},{"lineNumber":44,"author":{"gitId":"lowkangn"},"content":"        this.eventName \u003d name;","lastModifiedDate":"2021-10-03"},{"lineNumber":45,"author":{"gitId":"lowkangn"},"content":"        this.eventDate \u003d date;","lastModifiedDate":"2021-10-03"},{"lineNumber":46,"author":{"gitId":"lowkangn"},"content":"        this.eventTime \u003d time;","lastModifiedDate":"2021-10-03"},{"lineNumber":47,"author":{"gitId":"lowkangn"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2021-10-03"},{"lineNumber":48,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":49,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":50,"author":{"gitId":"XXJJXJ"},"content":"    /**","lastModifiedDate":"2021-09-17"},{"lineNumber":51,"author":{"gitId":"XXJJXJ"},"content":"     * This is an overloaded constructor of Event.","lastModifiedDate":"2021-09-17"},{"lineNumber":52,"author":{"gitId":"XXJJXJ"},"content":"     *","lastModifiedDate":"2021-09-17"},{"lineNumber":53,"author":{"gitId":"XXJJXJ"},"content":"     * @param name of the Event.","lastModifiedDate":"2021-09-17"},{"lineNumber":54,"author":{"gitId":"XXJJXJ"},"content":"     * @param date at which the Event occurs.","lastModifiedDate":"2021-09-17"},{"lineNumber":55,"author":{"gitId":"XXJJXJ"},"content":"     */","lastModifiedDate":"2021-09-17"},{"lineNumber":56,"author":{"gitId":"XXJJXJ"},"content":"    public Event(EventName name, EventDate date) {","lastModifiedDate":"2021-09-18"},{"lineNumber":57,"author":{"gitId":"XXJJXJ"},"content":"        this(name, date, new EventTime());","lastModifiedDate":"2021-09-18"},{"lineNumber":58,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":59,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":60,"author":{"gitId":"XXJJXJ"},"content":"    public EventName getName() {","lastModifiedDate":"2021-09-18"},{"lineNumber":61,"author":{"gitId":"XXJJXJ"},"content":"        return this.eventName;","lastModifiedDate":"2021-09-18"},{"lineNumber":62,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":63,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":64,"author":{"gitId":"XXJJXJ"},"content":"    public EventDate getDate() {","lastModifiedDate":"2021-09-18"},{"lineNumber":65,"author":{"gitId":"XXJJXJ"},"content":"        return this.eventDate;","lastModifiedDate":"2021-09-18"},{"lineNumber":66,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":67,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":68,"author":{"gitId":"XXJJXJ"},"content":"    public EventTime getTime() {","lastModifiedDate":"2021-09-18"},{"lineNumber":69,"author":{"gitId":"XXJJXJ"},"content":"        return this.eventTime;","lastModifiedDate":"2021-09-18"},{"lineNumber":70,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":71,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":72,"author":{"gitId":"XXJJXJ"},"content":"    public boolean getIsDone() {","lastModifiedDate":"2021-09-17"},{"lineNumber":73,"author":{"gitId":"XXJJXJ"},"content":"        return this.isDone;","lastModifiedDate":"2021-09-17"},{"lineNumber":74,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":75,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":76,"author":{"gitId":"XXJJXJ"},"content":"    public List\u003cParticipant\u003e getParticipants() {","lastModifiedDate":"2021-09-17"},{"lineNumber":77,"author":{"gitId":"XXJJXJ"},"content":"        return Collections.unmodifiableList(this.participants);","lastModifiedDate":"2021-09-17"},{"lineNumber":78,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":79,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":80,"author":{"gitId":"XXJJXJ"},"content":"    /**","lastModifiedDate":"2021-09-17"},{"lineNumber":81,"author":{"gitId":"lowkangn"},"content":"     * Returns a copy of the Event that is marked done.","lastModifiedDate":"2021-10-03"},{"lineNumber":82,"author":{"gitId":"lowkangn"},"content":"     *","lastModifiedDate":"2021-10-03"},{"lineNumber":83,"author":{"gitId":"lowkangn"},"content":"     * @return An Event that is marked done.","lastModifiedDate":"2021-10-03"},{"lineNumber":84,"author":{"gitId":"XXJJXJ"},"content":"     */","lastModifiedDate":"2021-09-17"},{"lineNumber":85,"author":{"gitId":"lowkangn"},"content":"    public Event markAsDone() {","lastModifiedDate":"2021-10-03"},{"lineNumber":86,"author":{"gitId":"lowkangn"},"content":"        return new Event(this.eventName, this.eventDate, this.eventTime, true);","lastModifiedDate":"2021-10-03"},{"lineNumber":87,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":88,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":89,"author":{"gitId":"XXJJXJ"},"content":"    /**","lastModifiedDate":"2021-09-18"},{"lineNumber":90,"author":{"gitId":"XXJJXJ"},"content":"     * Returns true if both events have the same name.","lastModifiedDate":"2021-09-18"},{"lineNumber":91,"author":{"gitId":"XXJJXJ"},"content":"     * This defines a weaker notion of equality between two events.","lastModifiedDate":"2021-09-18"},{"lineNumber":92,"author":{"gitId":"XXJJXJ"},"content":"     *","lastModifiedDate":"2021-09-18"},{"lineNumber":93,"author":{"gitId":"XXJJXJ"},"content":"     * @param otherEvent to be compared to this event.","lastModifiedDate":"2021-09-18"},{"lineNumber":94,"author":{"gitId":"XXJJXJ"},"content":"     * @return A boolean to indicate if the events are the same or has the same name.","lastModifiedDate":"2021-09-18"},{"lineNumber":95,"author":{"gitId":"XXJJXJ"},"content":"     */","lastModifiedDate":"2021-09-18"},{"lineNumber":96,"author":{"gitId":"XXJJXJ"},"content":"    public boolean isSameEvent(Event otherEvent) {","lastModifiedDate":"2021-09-18"},{"lineNumber":97,"author":{"gitId":"XXJJXJ"},"content":"        if (otherEvent \u003d\u003d this) {","lastModifiedDate":"2021-09-18"},{"lineNumber":98,"author":{"gitId":"XXJJXJ"},"content":"            return true;","lastModifiedDate":"2021-09-18"},{"lineNumber":99,"author":{"gitId":"XXJJXJ"},"content":"        }","lastModifiedDate":"2021-09-18"},{"lineNumber":100,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":101,"author":{"gitId":"XXJJXJ"},"content":"        return otherEvent !\u003d null","lastModifiedDate":"2021-09-18"},{"lineNumber":102,"author":{"gitId":"XXJJXJ"},"content":"                \u0026\u0026 otherEvent.getName().equals(getName());","lastModifiedDate":"2021-09-18"},{"lineNumber":103,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":104,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":105,"author":{"gitId":"XXJJXJ"},"content":"    /**","lastModifiedDate":"2021-09-18"},{"lineNumber":106,"author":{"gitId":"XXJJXJ"},"content":"     * Returns true if both events have the same identity and data fields.","lastModifiedDate":"2021-09-18"},{"lineNumber":107,"author":{"gitId":"XXJJXJ"},"content":"     * This defines a stronger notion of equality between two events.","lastModifiedDate":"2021-09-18"},{"lineNumber":108,"author":{"gitId":"XXJJXJ"},"content":"     */","lastModifiedDate":"2021-09-18"},{"lineNumber":109,"author":{"gitId":"XXJJXJ"},"content":"    @Override","lastModifiedDate":"2021-09-18"},{"lineNumber":110,"author":{"gitId":"XXJJXJ"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-09-18"},{"lineNumber":111,"author":{"gitId":"XXJJXJ"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2021-09-18"},{"lineNumber":112,"author":{"gitId":"XXJJXJ"},"content":"            return true;","lastModifiedDate":"2021-09-18"},{"lineNumber":113,"author":{"gitId":"XXJJXJ"},"content":"        }","lastModifiedDate":"2021-09-18"},{"lineNumber":114,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":115,"author":{"gitId":"XXJJXJ"},"content":"        if (!(other instanceof Event)) {","lastModifiedDate":"2021-09-18"},{"lineNumber":116,"author":{"gitId":"XXJJXJ"},"content":"            return false;","lastModifiedDate":"2021-09-18"},{"lineNumber":117,"author":{"gitId":"XXJJXJ"},"content":"        }","lastModifiedDate":"2021-09-18"},{"lineNumber":118,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":119,"author":{"gitId":"XXJJXJ"},"content":"        Event otherEvent \u003d (Event) other;","lastModifiedDate":"2021-09-18"},{"lineNumber":120,"author":{"gitId":"XXJJXJ"},"content":"        return otherEvent.getName().equals(getName())","lastModifiedDate":"2021-09-18"},{"lineNumber":121,"author":{"gitId":"XXJJXJ"},"content":"                \u0026\u0026 otherEvent.getDate().equals(getDate())","lastModifiedDate":"2021-09-18"},{"lineNumber":122,"author":{"gitId":"XXJJXJ"},"content":"                \u0026\u0026 otherEvent.getTime().equals(getTime())","lastModifiedDate":"2021-09-18"},{"lineNumber":123,"author":{"gitId":"XXJJXJ"},"content":"                \u0026\u0026 otherEvent.getIsDone() \u003d\u003d (getIsDone())","lastModifiedDate":"2021-09-18"},{"lineNumber":124,"author":{"gitId":"XXJJXJ"},"content":"                \u0026\u0026 otherEvent.getParticipants().equals(getParticipants());","lastModifiedDate":"2021-09-18"},{"lineNumber":125,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":126,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":127,"author":{"gitId":"XXJJXJ"},"content":"    @Override","lastModifiedDate":"2021-09-18"},{"lineNumber":128,"author":{"gitId":"XXJJXJ"},"content":"    public int hashCode() {","lastModifiedDate":"2021-09-18"},{"lineNumber":129,"author":{"gitId":"XXJJXJ"},"content":"        // use this method for custom fields hashing instead of implementing your own","lastModifiedDate":"2021-09-18"},{"lineNumber":130,"author":{"gitId":"XXJJXJ"},"content":"        return Objects.hash(eventName, isDone, eventDate, eventTime, participants);","lastModifiedDate":"2021-09-18"},{"lineNumber":131,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":132,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":133,"author":{"gitId":"XXJJXJ"},"content":"    @Override","lastModifiedDate":"2021-09-17"},{"lineNumber":134,"author":{"gitId":"XXJJXJ"},"content":"    public String toString() {","lastModifiedDate":"2021-09-17"},{"lineNumber":135,"author":{"gitId":"XXJJXJ"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2021-09-18"},{"lineNumber":136,"author":{"gitId":"XXJJXJ"},"content":"        builder.append(\"[\").append((isDone ? \"X\" : \" \")).append(\"] \")","lastModifiedDate":"2021-09-18"},{"lineNumber":137,"author":{"gitId":"XXJJXJ"},"content":"                .append(eventName.toString()).append(\" (at: \")","lastModifiedDate":"2021-09-18"},{"lineNumber":138,"author":{"gitId":"XXJJXJ"},"content":"                .append(eventDate.toString()).append(\" \")","lastModifiedDate":"2021-09-18"},{"lineNumber":139,"author":{"gitId":"XXJJXJ"},"content":"                .append(eventTime.toString())","lastModifiedDate":"2021-09-18"},{"lineNumber":140,"author":{"gitId":"XXJJXJ"},"content":"                .append(\") \")","lastModifiedDate":"2021-09-18"},{"lineNumber":141,"author":{"gitId":"XXJJXJ"},"content":"                .append(\"Total Participants: \").append(this.participants.size());","lastModifiedDate":"2021-09-18"},{"lineNumber":142,"author":{"gitId":"XXJJXJ"},"content":"        return builder.toString();","lastModifiedDate":"2021-09-18"},{"lineNumber":143,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":144,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":145,"author":{"gitId":"XXJJXJ"},"content":"    @Override","lastModifiedDate":"2021-09-18"},{"lineNumber":146,"author":{"gitId":"XXJJXJ"},"content":"    public int compareTo(Event o) {","lastModifiedDate":"2021-09-18"},{"lineNumber":147,"author":{"gitId":"XXJJXJ"},"content":"        int compareDateResult \u003d this.eventDate.date.compareTo(o.eventDate.date);","lastModifiedDate":"2021-09-18"},{"lineNumber":148,"author":{"gitId":"XXJJXJ"},"content":"        if (compareDateResult \u003d\u003d 0) { // same date","lastModifiedDate":"2021-09-18"},{"lineNumber":149,"author":{"gitId":"XXJJXJ"},"content":"            int compareTimeResult \u003d this.eventTime.time.compareTo(o.eventTime.time);","lastModifiedDate":"2021-09-18"},{"lineNumber":150,"author":{"gitId":"XXJJXJ"},"content":"            if (compareTimeResult \u003d\u003d 0) { // same time","lastModifiedDate":"2021-09-18"},{"lineNumber":151,"author":{"gitId":"XXJJXJ"},"content":"                return this.eventName.eventName.compareTo(o.eventName.eventName);","lastModifiedDate":"2021-09-18"},{"lineNumber":152,"author":{"gitId":"XXJJXJ"},"content":"            } else {","lastModifiedDate":"2021-09-18"},{"lineNumber":153,"author":{"gitId":"XXJJXJ"},"content":"                return compareTimeResult;","lastModifiedDate":"2021-09-18"},{"lineNumber":154,"author":{"gitId":"XXJJXJ"},"content":"            }","lastModifiedDate":"2021-09-18"},{"lineNumber":155,"author":{"gitId":"XXJJXJ"},"content":"        } else {","lastModifiedDate":"2021-09-18"},{"lineNumber":156,"author":{"gitId":"XXJJXJ"},"content":"            return compareDateResult;","lastModifiedDate":"2021-09-18"},{"lineNumber":157,"author":{"gitId":"XXJJXJ"},"content":"        }","lastModifiedDate":"2021-09-18"},{"lineNumber":158,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":159,"author":{"gitId":"XXJJXJ"},"content":"}","lastModifiedDate":"2021-09-17"}],"authorContributionMap":{"XXJJXJ":137,"kanjitp":1,"lowkangn":21}},{"path":"src/main/java/seedu/address/model/event/EventDate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"XXJJXJ"},"content":"package seedu.address.model.event;","lastModifiedDate":"2021-09-18"},{"lineNumber":2,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":3,"author":{"gitId":"XXJJXJ"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-09-18"},{"lineNumber":4,"author":{"gitId":"XXJJXJ"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2021-09-18"},{"lineNumber":5,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":6,"author":{"gitId":"XXJJXJ"},"content":"import java.text.DateFormat;","lastModifiedDate":"2021-09-20"},{"lineNumber":7,"author":{"gitId":"XXJJXJ"},"content":"import java.text.ParseException;","lastModifiedDate":"2021-09-20"},{"lineNumber":8,"author":{"gitId":"XXJJXJ"},"content":"import java.text.SimpleDateFormat;","lastModifiedDate":"2021-09-20"},{"lineNumber":9,"author":{"gitId":"XXJJXJ"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-09-18"},{"lineNumber":10,"author":{"gitId":"XXJJXJ"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-09-20"},{"lineNumber":11,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":12,"author":{"gitId":"XXJJXJ"},"content":"/**","lastModifiedDate":"2021-09-18"},{"lineNumber":13,"author":{"gitId":"XXJJXJ"},"content":" * This is an EventDate class representing the Date of an Event.","lastModifiedDate":"2021-09-18"},{"lineNumber":14,"author":{"gitId":"XXJJXJ"},"content":" */","lastModifiedDate":"2021-09-18"},{"lineNumber":15,"author":{"gitId":"XXJJXJ"},"content":"public class EventDate {","lastModifiedDate":"2021-09-18"},{"lineNumber":16,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":17,"author":{"gitId":"XXJJXJ"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Dates should be in YYYY-MM-DD format!\";","lastModifiedDate":"2021-09-18"},{"lineNumber":18,"author":{"gitId":"XXJJXJ"},"content":"    public static final String DATE_FORMAT \u003d \"y-M-d\";","lastModifiedDate":"2021-09-20"},{"lineNumber":19,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":20,"author":{"gitId":"XXJJXJ"},"content":"    public final LocalDate date;","lastModifiedDate":"2021-09-18"},{"lineNumber":21,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":22,"author":{"gitId":"XXJJXJ"},"content":"    /**","lastModifiedDate":"2021-09-18"},{"lineNumber":23,"author":{"gitId":"XXJJXJ"},"content":"     * Constructs an {@code EventDate}","lastModifiedDate":"2021-09-18"},{"lineNumber":24,"author":{"gitId":"XXJJXJ"},"content":"     *","lastModifiedDate":"2021-09-18"},{"lineNumber":25,"author":{"gitId":"XXJJXJ"},"content":"     * @param date of the Event.","lastModifiedDate":"2021-09-18"},{"lineNumber":26,"author":{"gitId":"XXJJXJ"},"content":"     */","lastModifiedDate":"2021-09-18"},{"lineNumber":27,"author":{"gitId":"XXJJXJ"},"content":"    public EventDate(String date) {","lastModifiedDate":"2021-09-18"},{"lineNumber":28,"author":{"gitId":"XXJJXJ"},"content":"        requireNonNull(date);","lastModifiedDate":"2021-09-18"},{"lineNumber":29,"author":{"gitId":"XXJJXJ"},"content":"        checkArgument(isValidDate(date), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-09-18"},{"lineNumber":30,"author":{"gitId":"XXJJXJ"},"content":"        this.date \u003d LocalDate.parse(date, DateTimeFormatter.ofPattern(DATE_FORMAT));","lastModifiedDate":"2021-09-20"},{"lineNumber":31,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":32,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":33,"author":{"gitId":"XXJJXJ"},"content":"    /**","lastModifiedDate":"2021-09-18"},{"lineNumber":34,"author":{"gitId":"XXJJXJ"},"content":"     * Returns true if a given string is a valid date.","lastModifiedDate":"2021-09-18"},{"lineNumber":35,"author":{"gitId":"XXJJXJ"},"content":"     *","lastModifiedDate":"2021-09-18"},{"lineNumber":36,"author":{"gitId":"XXJJXJ"},"content":"     * @param test A String representing a date to be tested.","lastModifiedDate":"2021-09-18"},{"lineNumber":37,"author":{"gitId":"XXJJXJ"},"content":"     * @return A boolean to indicate if a string is a valid date.","lastModifiedDate":"2021-09-18"},{"lineNumber":38,"author":{"gitId":"XXJJXJ"},"content":"     */","lastModifiedDate":"2021-09-18"},{"lineNumber":39,"author":{"gitId":"XXJJXJ"},"content":"    public static boolean isValidDate(String test) {","lastModifiedDate":"2021-09-18"},{"lineNumber":40,"author":{"gitId":"XXJJXJ"},"content":"        DateFormat sdf \u003d new SimpleDateFormat(DATE_FORMAT);","lastModifiedDate":"2021-09-20"},{"lineNumber":41,"author":{"gitId":"XXJJXJ"},"content":"        sdf.setLenient(false);","lastModifiedDate":"2021-09-20"},{"lineNumber":42,"author":{"gitId":"XXJJXJ"},"content":"        try {","lastModifiedDate":"2021-09-18"},{"lineNumber":43,"author":{"gitId":"XXJJXJ"},"content":"            sdf.parse(test);","lastModifiedDate":"2021-09-20"},{"lineNumber":44,"author":{"gitId":"XXJJXJ"},"content":"        } catch (ParseException e) {","lastModifiedDate":"2021-09-20"},{"lineNumber":45,"author":{"gitId":"XXJJXJ"},"content":"            return false;","lastModifiedDate":"2021-09-20"},{"lineNumber":46,"author":{"gitId":"XXJJXJ"},"content":"        }","lastModifiedDate":"2021-09-18"},{"lineNumber":47,"author":{"gitId":"XXJJXJ"},"content":"        return true;","lastModifiedDate":"2021-09-20"},{"lineNumber":48,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":49,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":50,"author":{"gitId":"XXJJXJ"},"content":"    @Override","lastModifiedDate":"2021-09-18"},{"lineNumber":51,"author":{"gitId":"XXJJXJ"},"content":"    public String toString() {","lastModifiedDate":"2021-09-18"},{"lineNumber":52,"author":{"gitId":"XXJJXJ"},"content":"        return date.toString();","lastModifiedDate":"2021-09-18"},{"lineNumber":53,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":54,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":55,"author":{"gitId":"XXJJXJ"},"content":"    @Override","lastModifiedDate":"2021-09-18"},{"lineNumber":56,"author":{"gitId":"XXJJXJ"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-09-18"},{"lineNumber":57,"author":{"gitId":"XXJJXJ"},"content":"        return other \u003d\u003d this","lastModifiedDate":"2021-09-18"},{"lineNumber":58,"author":{"gitId":"XXJJXJ"},"content":"                || (other instanceof EventDate","lastModifiedDate":"2021-09-18"},{"lineNumber":59,"author":{"gitId":"XXJJXJ"},"content":"                \u0026\u0026 date.equals(((EventDate) other).date));","lastModifiedDate":"2021-09-18"},{"lineNumber":60,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":61,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":62,"author":{"gitId":"XXJJXJ"},"content":"    @Override","lastModifiedDate":"2021-09-18"},{"lineNumber":63,"author":{"gitId":"XXJJXJ"},"content":"    public int hashCode() {","lastModifiedDate":"2021-09-18"},{"lineNumber":64,"author":{"gitId":"XXJJXJ"},"content":"        return date.hashCode();","lastModifiedDate":"2021-09-18"},{"lineNumber":65,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":66,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":67,"author":{"gitId":"XXJJXJ"},"content":"}","lastModifiedDate":"2021-09-18"}],"authorContributionMap":{"XXJJXJ":67}},{"path":"src/main/java/seedu/address/model/event/EventDateTimePredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"XXJJXJ"},"content":"package seedu.address.model.event;","lastModifiedDate":"2021-09-21"},{"lineNumber":2,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":3,"author":{"gitId":"XXJJXJ"},"content":"import java.util.List;","lastModifiedDate":"2021-09-21"},{"lineNumber":4,"author":{"gitId":"XXJJXJ"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2021-09-21"},{"lineNumber":5,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":6,"author":{"gitId":"XXJJXJ"},"content":"public class EventDateTimePredicate implements Predicate\u003cEvent\u003e {","lastModifiedDate":"2021-09-21"},{"lineNumber":7,"author":{"gitId":"XXJJXJ"},"content":"    private final List\u003cString\u003e dateTime;","lastModifiedDate":"2021-09-21"},{"lineNumber":8,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":9,"author":{"gitId":"XXJJXJ"},"content":"    public EventDateTimePredicate(List\u003cString\u003e dateTime) {","lastModifiedDate":"2021-09-21"},{"lineNumber":10,"author":{"gitId":"XXJJXJ"},"content":"        this.dateTime \u003d dateTime;","lastModifiedDate":"2021-09-21"},{"lineNumber":11,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-09-21"},{"lineNumber":12,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":13,"author":{"gitId":"XXJJXJ"},"content":"    @Override","lastModifiedDate":"2021-09-21"},{"lineNumber":14,"author":{"gitId":"XXJJXJ"},"content":"    public boolean test(Event event) {","lastModifiedDate":"2021-09-21"},{"lineNumber":15,"author":{"gitId":"XXJJXJ"},"content":"        EventDate eventDate \u003d new EventDate(dateTime.get(0));","lastModifiedDate":"2021-09-21"},{"lineNumber":16,"author":{"gitId":"XXJJXJ"},"content":"        if (dateTime.size() \u003d\u003d 2) { // has date and time","lastModifiedDate":"2021-09-21"},{"lineNumber":17,"author":{"gitId":"XXJJXJ"},"content":"            EventTime eventTime \u003d new EventTime(dateTime.get(1));","lastModifiedDate":"2021-09-21"},{"lineNumber":18,"author":{"gitId":"XXJJXJ"},"content":"            return event.getDate().equals(eventDate) \u0026\u0026 event.getTime().equals(eventTime);","lastModifiedDate":"2021-09-21"},{"lineNumber":19,"author":{"gitId":"XXJJXJ"},"content":"        } else { // date only","lastModifiedDate":"2021-09-21"},{"lineNumber":20,"author":{"gitId":"XXJJXJ"},"content":"            return event.getDate().equals(eventDate);","lastModifiedDate":"2021-09-21"},{"lineNumber":21,"author":{"gitId":"XXJJXJ"},"content":"        }","lastModifiedDate":"2021-09-21"},{"lineNumber":22,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-09-21"},{"lineNumber":23,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":24,"author":{"gitId":"XXJJXJ"},"content":"    @Override","lastModifiedDate":"2021-09-21"},{"lineNumber":25,"author":{"gitId":"XXJJXJ"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-09-21"},{"lineNumber":26,"author":{"gitId":"XXJJXJ"},"content":"        return other \u003d\u003d this","lastModifiedDate":"2021-09-21"},{"lineNumber":27,"author":{"gitId":"XXJJXJ"},"content":"                || (other instanceof EventDateTimePredicate","lastModifiedDate":"2021-09-21"},{"lineNumber":28,"author":{"gitId":"XXJJXJ"},"content":"                \u0026\u0026 dateTime.equals(((EventDateTimePredicate) other).dateTime));","lastModifiedDate":"2021-09-21"},{"lineNumber":29,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-09-21"},{"lineNumber":30,"author":{"gitId":"XXJJXJ"},"content":"}","lastModifiedDate":"2021-09-21"}],"authorContributionMap":{"XXJJXJ":30}},{"path":"src/main/java/seedu/address/model/event/EventName.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"XXJJXJ"},"content":"package seedu.address.model.event;","lastModifiedDate":"2021-09-18"},{"lineNumber":2,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":3,"author":{"gitId":"XXJJXJ"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-09-18"},{"lineNumber":4,"author":{"gitId":"XXJJXJ"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2021-09-18"},{"lineNumber":5,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":6,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":7,"author":{"gitId":"XXJJXJ"},"content":"/**","lastModifiedDate":"2021-09-18"},{"lineNumber":8,"author":{"gitId":"XXJJXJ"},"content":" * Represents an Event\u0027s name in the address book.","lastModifiedDate":"2021-09-18"},{"lineNumber":9,"author":{"gitId":"XXJJXJ"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidEventName(String)}","lastModifiedDate":"2021-09-18"},{"lineNumber":10,"author":{"gitId":"XXJJXJ"},"content":" */","lastModifiedDate":"2021-09-18"},{"lineNumber":11,"author":{"gitId":"XXJJXJ"},"content":"public class EventName {","lastModifiedDate":"2021-09-18"},{"lineNumber":12,"author":{"gitId":"XXJJXJ"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2021-09-18"},{"lineNumber":13,"author":{"gitId":"XXJJXJ"},"content":"            \"EventNames should only contain alphanumeric characters and spaces, and it should not be blank\";","lastModifiedDate":"2021-09-18"},{"lineNumber":14,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":15,"author":{"gitId":"XXJJXJ"},"content":"    /*","lastModifiedDate":"2021-09-18"},{"lineNumber":16,"author":{"gitId":"XXJJXJ"},"content":"     * The first character of the address must not be a whitespace,","lastModifiedDate":"2021-09-18"},{"lineNumber":17,"author":{"gitId":"XXJJXJ"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2021-09-18"},{"lineNumber":18,"author":{"gitId":"XXJJXJ"},"content":"     */","lastModifiedDate":"2021-09-18"},{"lineNumber":19,"author":{"gitId":"XXJJXJ"},"content":"    public static final String VALIDATION_REGEX \u003d \"[\\\\p{Alnum}][\\\\p{Alnum} ]*\";","lastModifiedDate":"2021-09-18"},{"lineNumber":20,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":21,"author":{"gitId":"XXJJXJ"},"content":"    public final String eventName;","lastModifiedDate":"2021-09-18"},{"lineNumber":22,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":23,"author":{"gitId":"XXJJXJ"},"content":"    /**","lastModifiedDate":"2021-09-18"},{"lineNumber":24,"author":{"gitId":"XXJJXJ"},"content":"     * Constructs an {@code EventName}.","lastModifiedDate":"2021-09-18"},{"lineNumber":25,"author":{"gitId":"XXJJXJ"},"content":"     *","lastModifiedDate":"2021-09-18"},{"lineNumber":26,"author":{"gitId":"XXJJXJ"},"content":"     * @param name A valid name.","lastModifiedDate":"2021-09-18"},{"lineNumber":27,"author":{"gitId":"XXJJXJ"},"content":"     */","lastModifiedDate":"2021-09-18"},{"lineNumber":28,"author":{"gitId":"XXJJXJ"},"content":"    public EventName(String name) {","lastModifiedDate":"2021-09-18"},{"lineNumber":29,"author":{"gitId":"XXJJXJ"},"content":"        requireNonNull(name);","lastModifiedDate":"2021-09-18"},{"lineNumber":30,"author":{"gitId":"XXJJXJ"},"content":"        checkArgument(isValidEventName(name), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-09-18"},{"lineNumber":31,"author":{"gitId":"XXJJXJ"},"content":"        eventName \u003d name;","lastModifiedDate":"2021-09-18"},{"lineNumber":32,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":33,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":34,"author":{"gitId":"XXJJXJ"},"content":"    /**","lastModifiedDate":"2021-09-18"},{"lineNumber":35,"author":{"gitId":"XXJJXJ"},"content":"     * Returns true if a given string is a valid name.","lastModifiedDate":"2021-09-18"},{"lineNumber":36,"author":{"gitId":"XXJJXJ"},"content":"     *","lastModifiedDate":"2021-09-18"},{"lineNumber":37,"author":{"gitId":"XXJJXJ"},"content":"     * @param test A String that represents a name to be tested.","lastModifiedDate":"2021-09-18"},{"lineNumber":38,"author":{"gitId":"XXJJXJ"},"content":"     * @return A boolean indicating if the String is a valid name.","lastModifiedDate":"2021-09-18"},{"lineNumber":39,"author":{"gitId":"XXJJXJ"},"content":"     */","lastModifiedDate":"2021-09-18"},{"lineNumber":40,"author":{"gitId":"XXJJXJ"},"content":"    public static boolean isValidEventName(String test) {","lastModifiedDate":"2021-09-18"},{"lineNumber":41,"author":{"gitId":"XXJJXJ"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2021-09-18"},{"lineNumber":42,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":43,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":44,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":45,"author":{"gitId":"XXJJXJ"},"content":"    @Override","lastModifiedDate":"2021-09-18"},{"lineNumber":46,"author":{"gitId":"XXJJXJ"},"content":"    public String toString() {","lastModifiedDate":"2021-09-18"},{"lineNumber":47,"author":{"gitId":"XXJJXJ"},"content":"        return eventName;","lastModifiedDate":"2021-09-18"},{"lineNumber":48,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":49,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":50,"author":{"gitId":"XXJJXJ"},"content":"    @Override","lastModifiedDate":"2021-09-18"},{"lineNumber":51,"author":{"gitId":"XXJJXJ"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-09-18"},{"lineNumber":52,"author":{"gitId":"XXJJXJ"},"content":"        return other \u003d\u003d this","lastModifiedDate":"2021-09-18"},{"lineNumber":53,"author":{"gitId":"XXJJXJ"},"content":"                || (other instanceof EventName","lastModifiedDate":"2021-09-18"},{"lineNumber":54,"author":{"gitId":"XXJJXJ"},"content":"                \u0026\u0026 eventName.equals(((EventName) other).eventName));","lastModifiedDate":"2021-09-18"},{"lineNumber":55,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":56,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":57,"author":{"gitId":"XXJJXJ"},"content":"    @Override","lastModifiedDate":"2021-09-18"},{"lineNumber":58,"author":{"gitId":"XXJJXJ"},"content":"    public int hashCode() {","lastModifiedDate":"2021-09-18"},{"lineNumber":59,"author":{"gitId":"XXJJXJ"},"content":"        return eventName.hashCode();","lastModifiedDate":"2021-09-18"},{"lineNumber":60,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":61,"author":{"gitId":"XXJJXJ"},"content":"}","lastModifiedDate":"2021-09-18"}],"authorContributionMap":{"XXJJXJ":61}},{"path":"src/main/java/seedu/address/model/event/EventNamePredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ntwbruce"},"content":"package seedu.address.model.event;","lastModifiedDate":"2021-09-26"},{"lineNumber":2,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":3,"author":{"gitId":"ntwbruce"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2021-09-26"},{"lineNumber":4,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":5,"author":{"gitId":"ntwbruce"},"content":"/**","lastModifiedDate":"2021-09-26"},{"lineNumber":6,"author":{"gitId":"ntwbruce"},"content":" * Tests that a {@code Event}\u0027s {@code Name} matches a given name.","lastModifiedDate":"2021-09-26"},{"lineNumber":7,"author":{"gitId":"ntwbruce"},"content":" */","lastModifiedDate":"2021-09-26"},{"lineNumber":8,"author":{"gitId":"ntwbruce"},"content":"public class EventNamePredicate implements Predicate\u003cEvent\u003e {","lastModifiedDate":"2021-09-26"},{"lineNumber":9,"author":{"gitId":"ntwbruce"},"content":"    private final String eventName;","lastModifiedDate":"2021-09-26"},{"lineNumber":10,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":11,"author":{"gitId":"ntwbruce"},"content":"    public EventNamePredicate(String eventName) {","lastModifiedDate":"2021-09-26"},{"lineNumber":12,"author":{"gitId":"ntwbruce"},"content":"        this.eventName \u003d eventName;","lastModifiedDate":"2021-09-26"},{"lineNumber":13,"author":{"gitId":"ntwbruce"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":14,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":15,"author":{"gitId":"ntwbruce"},"content":"    @Override","lastModifiedDate":"2021-09-26"},{"lineNumber":16,"author":{"gitId":"ntwbruce"},"content":"    public boolean test(Event event) {","lastModifiedDate":"2021-09-26"},{"lineNumber":17,"author":{"gitId":"ntwbruce"},"content":"        return eventName.equals(event.getName().eventName);","lastModifiedDate":"2021-09-26"},{"lineNumber":18,"author":{"gitId":"ntwbruce"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":19,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":20,"author":{"gitId":"ntwbruce"},"content":"    @Override","lastModifiedDate":"2021-09-26"},{"lineNumber":21,"author":{"gitId":"ntwbruce"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-09-26"},{"lineNumber":22,"author":{"gitId":"ntwbruce"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-09-26"},{"lineNumber":23,"author":{"gitId":"ntwbruce"},"content":"                || (other instanceof seedu.address.model.event.EventNamePredicate // instanceof handles nulls","lastModifiedDate":"2021-09-26"},{"lineNumber":24,"author":{"gitId":"ntwbruce"},"content":"                \u0026\u0026 eventName.equals(((seedu.address.model.event.EventNamePredicate) other).eventName)); // state check","lastModifiedDate":"2021-09-26"},{"lineNumber":25,"author":{"gitId":"ntwbruce"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":26,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":27,"author":{"gitId":"ntwbruce"},"content":"}","lastModifiedDate":"2021-09-26"}],"authorContributionMap":{"ntwbruce":27}},{"path":"src/main/java/seedu/address/model/event/EventTime.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"XXJJXJ"},"content":"package seedu.address.model.event;","lastModifiedDate":"2021-09-18"},{"lineNumber":2,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":3,"author":{"gitId":"XXJJXJ"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-09-18"},{"lineNumber":4,"author":{"gitId":"XXJJXJ"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2021-09-18"},{"lineNumber":5,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":6,"author":{"gitId":"XXJJXJ"},"content":"import java.text.DateFormat;","lastModifiedDate":"2021-09-20"},{"lineNumber":7,"author":{"gitId":"XXJJXJ"},"content":"import java.text.ParseException;","lastModifiedDate":"2021-09-20"},{"lineNumber":8,"author":{"gitId":"XXJJXJ"},"content":"import java.text.SimpleDateFormat;","lastModifiedDate":"2021-09-20"},{"lineNumber":9,"author":{"gitId":"XXJJXJ"},"content":"import java.time.LocalTime;","lastModifiedDate":"2021-09-18"},{"lineNumber":10,"author":{"gitId":"XXJJXJ"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-09-18"},{"lineNumber":11,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":12,"author":{"gitId":"XXJJXJ"},"content":"/**","lastModifiedDate":"2021-09-18"},{"lineNumber":13,"author":{"gitId":"XXJJXJ"},"content":" * This is an EventTime class that represents the Time of an Event.","lastModifiedDate":"2021-09-18"},{"lineNumber":14,"author":{"gitId":"XXJJXJ"},"content":" */","lastModifiedDate":"2021-09-18"},{"lineNumber":15,"author":{"gitId":"XXJJXJ"},"content":"public class EventTime {","lastModifiedDate":"2021-09-18"},{"lineNumber":16,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":17,"author":{"gitId":"XXJJXJ"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Time should be in 2359 format.\";","lastModifiedDate":"2021-09-18"},{"lineNumber":18,"author":{"gitId":"XXJJXJ"},"content":"    public static final String TIME_FORMAT \u003d \"HHmm\";","lastModifiedDate":"2021-09-20"},{"lineNumber":19,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":20,"author":{"gitId":"XXJJXJ"},"content":"    public final LocalTime time;","lastModifiedDate":"2021-09-18"},{"lineNumber":21,"author":{"gitId":"XXJJXJ"},"content":"    private boolean hasTime;","lastModifiedDate":"2021-09-21"},{"lineNumber":22,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":23,"author":{"gitId":"XXJJXJ"},"content":"    /**","lastModifiedDate":"2021-09-18"},{"lineNumber":24,"author":{"gitId":"XXJJXJ"},"content":"     * Constructors an {@code EventTime}","lastModifiedDate":"2021-09-18"},{"lineNumber":25,"author":{"gitId":"XXJJXJ"},"content":"     *","lastModifiedDate":"2021-09-18"},{"lineNumber":26,"author":{"gitId":"XXJJXJ"},"content":"     * @param time    A valid time.","lastModifiedDate":"2021-09-18"},{"lineNumber":27,"author":{"gitId":"XXJJXJ"},"content":"     */","lastModifiedDate":"2021-09-18"},{"lineNumber":28,"author":{"gitId":"XXJJXJ"},"content":"    public EventTime(String time) {","lastModifiedDate":"2021-09-18"},{"lineNumber":29,"author":{"gitId":"XXJJXJ"},"content":"        requireNonNull(time);","lastModifiedDate":"2021-09-18"},{"lineNumber":30,"author":{"gitId":"XXJJXJ"},"content":"        checkArgument(isValidTime(time), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-09-18"},{"lineNumber":31,"author":{"gitId":"XXJJXJ"},"content":"        this.time \u003d LocalTime.parse(time, DateTimeFormatter.ofPattern(TIME_FORMAT));","lastModifiedDate":"2021-09-20"},{"lineNumber":32,"author":{"gitId":"XXJJXJ"},"content":"        this.hasTime \u003d true;","lastModifiedDate":"2021-09-21"},{"lineNumber":33,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":34,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":35,"author":{"gitId":"XXJJXJ"},"content":"    /**","lastModifiedDate":"2021-09-21"},{"lineNumber":36,"author":{"gitId":"XXJJXJ"},"content":"     * This is an overloaded Constructor for Event Time with no time.","lastModifiedDate":"2021-09-21"},{"lineNumber":37,"author":{"gitId":"XXJJXJ"},"content":"     */","lastModifiedDate":"2021-09-21"},{"lineNumber":38,"author":{"gitId":"XXJJXJ"},"content":"    public EventTime() {","lastModifiedDate":"2021-09-18"},{"lineNumber":39,"author":{"gitId":"XXJJXJ"},"content":"        this.time \u003d LocalTime.MIN;","lastModifiedDate":"2021-09-18"},{"lineNumber":40,"author":{"gitId":"XXJJXJ"},"content":"        this.hasTime \u003d false;","lastModifiedDate":"2021-09-21"},{"lineNumber":41,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":42,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":43,"author":{"gitId":"XXJJXJ"},"content":"    /**","lastModifiedDate":"2021-09-18"},{"lineNumber":44,"author":{"gitId":"XXJJXJ"},"content":"     * Returns true if a given string is a valid time.","lastModifiedDate":"2021-09-18"},{"lineNumber":45,"author":{"gitId":"XXJJXJ"},"content":"     *","lastModifiedDate":"2021-09-18"},{"lineNumber":46,"author":{"gitId":"XXJJXJ"},"content":"     * @param test A String to be tested if it is a valid time.","lastModifiedDate":"2021-09-18"},{"lineNumber":47,"author":{"gitId":"XXJJXJ"},"content":"     * @return A boolean indicating if the string is a valid time.","lastModifiedDate":"2021-09-18"},{"lineNumber":48,"author":{"gitId":"XXJJXJ"},"content":"     */","lastModifiedDate":"2021-09-18"},{"lineNumber":49,"author":{"gitId":"XXJJXJ"},"content":"    public static boolean isValidTime(String test) {","lastModifiedDate":"2021-09-18"},{"lineNumber":50,"author":{"gitId":"XXJJXJ"},"content":"        if (test.length() !\u003d 4) {","lastModifiedDate":"2021-09-25"},{"lineNumber":51,"author":{"gitId":"XXJJXJ"},"content":"            return false;","lastModifiedDate":"2021-09-25"},{"lineNumber":52,"author":{"gitId":"XXJJXJ"},"content":"        }","lastModifiedDate":"2021-09-25"},{"lineNumber":53,"author":{"gitId":"XXJJXJ"},"content":"        DateFormat sdf \u003d new SimpleDateFormat(TIME_FORMAT);","lastModifiedDate":"2021-09-20"},{"lineNumber":54,"author":{"gitId":"XXJJXJ"},"content":"        sdf.setLenient(false);","lastModifiedDate":"2021-09-20"},{"lineNumber":55,"author":{"gitId":"XXJJXJ"},"content":"        try {","lastModifiedDate":"2021-09-18"},{"lineNumber":56,"author":{"gitId":"XXJJXJ"},"content":"            sdf.parse(test);","lastModifiedDate":"2021-09-20"},{"lineNumber":57,"author":{"gitId":"XXJJXJ"},"content":"        } catch (ParseException e) {","lastModifiedDate":"2021-09-20"},{"lineNumber":58,"author":{"gitId":"XXJJXJ"},"content":"            return false;","lastModifiedDate":"2021-09-20"},{"lineNumber":59,"author":{"gitId":"XXJJXJ"},"content":"        }","lastModifiedDate":"2021-09-18"},{"lineNumber":60,"author":{"gitId":"XXJJXJ"},"content":"        return true;","lastModifiedDate":"2021-09-20"},{"lineNumber":61,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":62,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":63,"author":{"gitId":"XXJJXJ"},"content":"    @Override","lastModifiedDate":"2021-09-18"},{"lineNumber":64,"author":{"gitId":"XXJJXJ"},"content":"    public String toString() {","lastModifiedDate":"2021-09-18"},{"lineNumber":65,"author":{"gitId":"XXJJXJ"},"content":"        return this.hasTime ? this.time.format(DateTimeFormatter.ofPattern(TIME_FORMAT)) : \"\";","lastModifiedDate":"2021-09-25"},{"lineNumber":66,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":67,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":68,"author":{"gitId":"XXJJXJ"},"content":"    @Override","lastModifiedDate":"2021-09-18"},{"lineNumber":69,"author":{"gitId":"XXJJXJ"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-09-18"},{"lineNumber":70,"author":{"gitId":"XXJJXJ"},"content":"        return other \u003d\u003d this","lastModifiedDate":"2021-09-18"},{"lineNumber":71,"author":{"gitId":"XXJJXJ"},"content":"                || (other instanceof EventTime","lastModifiedDate":"2021-09-18"},{"lineNumber":72,"author":{"gitId":"XXJJXJ"},"content":"                \u0026\u0026 time.equals(((EventTime) other).time) \u0026\u0026 hasTime \u003d\u003d ((EventTime) other).hasTime);","lastModifiedDate":"2021-09-21"},{"lineNumber":73,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":74,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":75,"author":{"gitId":"XXJJXJ"},"content":"    @Override","lastModifiedDate":"2021-09-18"},{"lineNumber":76,"author":{"gitId":"XXJJXJ"},"content":"    public int hashCode() {","lastModifiedDate":"2021-09-18"},{"lineNumber":77,"author":{"gitId":"XXJJXJ"},"content":"        return time.hashCode();","lastModifiedDate":"2021-09-18"},{"lineNumber":78,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":79,"author":{"gitId":"XXJJXJ"},"content":"}","lastModifiedDate":"2021-09-18"}],"authorContributionMap":{"XXJJXJ":79}},{"path":"src/main/java/seedu/address/model/event/UniqueEventList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"XXJJXJ"},"content":"package seedu.address.model.event;","lastModifiedDate":"2021-09-18"},{"lineNumber":2,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":3,"author":{"gitId":"XXJJXJ"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-09-18"},{"lineNumber":4,"author":{"gitId":"XXJJXJ"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2021-09-18"},{"lineNumber":5,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":6,"author":{"gitId":"XXJJXJ"},"content":"import java.util.Comparator;","lastModifiedDate":"2021-09-20"},{"lineNumber":7,"author":{"gitId":"XXJJXJ"},"content":"import java.util.Iterator;","lastModifiedDate":"2021-09-18"},{"lineNumber":8,"author":{"gitId":"XXJJXJ"},"content":"import java.util.List;","lastModifiedDate":"2021-09-18"},{"lineNumber":9,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":10,"author":{"gitId":"XXJJXJ"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2021-09-18"},{"lineNumber":11,"author":{"gitId":"XXJJXJ"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-09-18"},{"lineNumber":12,"author":{"gitId":"XXJJXJ"},"content":"import seedu.address.model.event.exceptions.DuplicateEventException;","lastModifiedDate":"2021-09-18"},{"lineNumber":13,"author":{"gitId":"XXJJXJ"},"content":"import seedu.address.model.event.exceptions.EventNotFoundException;","lastModifiedDate":"2021-09-18"},{"lineNumber":14,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":15,"author":{"gitId":"XXJJXJ"},"content":"/**","lastModifiedDate":"2021-09-18"},{"lineNumber":16,"author":{"gitId":"XXJJXJ"},"content":" * A list of events that enforces uniqueness between its elements and does not allow nulls.","lastModifiedDate":"2021-09-18"},{"lineNumber":17,"author":{"gitId":"XXJJXJ"},"content":" * An event is considered unique by comparing using {@code Event#isSameEvent(Event)}. As such, adding and updating of","lastModifiedDate":"2021-09-18"},{"lineNumber":18,"author":{"gitId":"XXJJXJ"},"content":" * events uses Event#isSameEvent(Event) for equality so as to ensure that the event being added or updated is","lastModifiedDate":"2021-09-18"},{"lineNumber":19,"author":{"gitId":"XXJJXJ"},"content":" * unique in terms of identity in the UniqueEventList. However, the removal of a event uses Event#equals(Object) so","lastModifiedDate":"2021-09-18"},{"lineNumber":20,"author":{"gitId":"XXJJXJ"},"content":" * as to ensure that the event with exactly the same fields will be removed.","lastModifiedDate":"2021-09-18"},{"lineNumber":21,"author":{"gitId":"XXJJXJ"},"content":" *","lastModifiedDate":"2021-09-18"},{"lineNumber":22,"author":{"gitId":"XXJJXJ"},"content":" * Supports a minimal set of list operations.","lastModifiedDate":"2021-09-18"},{"lineNumber":23,"author":{"gitId":"XXJJXJ"},"content":" *","lastModifiedDate":"2021-09-18"},{"lineNumber":24,"author":{"gitId":"XXJJXJ"},"content":" * @see Event#isSameEvent(Event)","lastModifiedDate":"2021-09-18"},{"lineNumber":25,"author":{"gitId":"XXJJXJ"},"content":" */","lastModifiedDate":"2021-09-18"},{"lineNumber":26,"author":{"gitId":"XXJJXJ"},"content":"public class UniqueEventList implements Iterable\u003cEvent\u003e {","lastModifiedDate":"2021-09-18"},{"lineNumber":27,"author":{"gitId":"XXJJXJ"},"content":"    private final ObservableList\u003cEvent\u003e internalList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2021-09-18"},{"lineNumber":28,"author":{"gitId":"XXJJXJ"},"content":"    private final ObservableList\u003cEvent\u003e internalUnmodifiableList \u003d","lastModifiedDate":"2021-09-18"},{"lineNumber":29,"author":{"gitId":"XXJJXJ"},"content":"            FXCollections.unmodifiableObservableList(internalList);","lastModifiedDate":"2021-09-18"},{"lineNumber":30,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":31,"author":{"gitId":"XXJJXJ"},"content":"    /**","lastModifiedDate":"2021-09-18"},{"lineNumber":32,"author":{"gitId":"XXJJXJ"},"content":"     * Returns true if the list contains an equivalent event as the given argument.","lastModifiedDate":"2021-09-18"},{"lineNumber":33,"author":{"gitId":"XXJJXJ"},"content":"     */","lastModifiedDate":"2021-09-18"},{"lineNumber":34,"author":{"gitId":"XXJJXJ"},"content":"    public boolean contains(Event toCheck) {","lastModifiedDate":"2021-09-18"},{"lineNumber":35,"author":{"gitId":"XXJJXJ"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2021-09-18"},{"lineNumber":36,"author":{"gitId":"XXJJXJ"},"content":"        return internalList.stream().anyMatch(toCheck::isSameEvent);","lastModifiedDate":"2021-09-18"},{"lineNumber":37,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":38,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":39,"author":{"gitId":"XXJJXJ"},"content":"    /**","lastModifiedDate":"2021-09-18"},{"lineNumber":40,"author":{"gitId":"XXJJXJ"},"content":"     * Adds an event to the list.","lastModifiedDate":"2021-09-18"},{"lineNumber":41,"author":{"gitId":"XXJJXJ"},"content":"     * The event must not already exist in the list.","lastModifiedDate":"2021-09-18"},{"lineNumber":42,"author":{"gitId":"XXJJXJ"},"content":"     *","lastModifiedDate":"2021-09-18"},{"lineNumber":43,"author":{"gitId":"XXJJXJ"},"content":"     * @param toAdd An Event instance to be added to the list.","lastModifiedDate":"2021-09-18"},{"lineNumber":44,"author":{"gitId":"XXJJXJ"},"content":"     */","lastModifiedDate":"2021-09-18"},{"lineNumber":45,"author":{"gitId":"XXJJXJ"},"content":"    public void add(Event toAdd) {","lastModifiedDate":"2021-09-18"},{"lineNumber":46,"author":{"gitId":"XXJJXJ"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2021-09-18"},{"lineNumber":47,"author":{"gitId":"XXJJXJ"},"content":"        if (contains(toAdd)) {","lastModifiedDate":"2021-09-18"},{"lineNumber":48,"author":{"gitId":"XXJJXJ"},"content":"            throw new DuplicateEventException();","lastModifiedDate":"2021-09-18"},{"lineNumber":49,"author":{"gitId":"XXJJXJ"},"content":"        }","lastModifiedDate":"2021-09-18"},{"lineNumber":50,"author":{"gitId":"XXJJXJ"},"content":"        internalList.add(toAdd);","lastModifiedDate":"2021-09-18"},{"lineNumber":51,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":52,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":53,"author":{"gitId":"XXJJXJ"},"content":"    //Edit function setEvent temporarily omitted.","lastModifiedDate":"2021-09-18"},{"lineNumber":54,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":55,"author":{"gitId":"XXJJXJ"},"content":"    /**","lastModifiedDate":"2021-09-18"},{"lineNumber":56,"author":{"gitId":"XXJJXJ"},"content":"     * Removes the equivalent event from the list.","lastModifiedDate":"2021-09-18"},{"lineNumber":57,"author":{"gitId":"XXJJXJ"},"content":"     * The event must exist in the list.","lastModifiedDate":"2021-09-18"},{"lineNumber":58,"author":{"gitId":"XXJJXJ"},"content":"     *","lastModifiedDate":"2021-09-18"},{"lineNumber":59,"author":{"gitId":"XXJJXJ"},"content":"     * @param toRemove An Event instance to be removed from the list.","lastModifiedDate":"2021-09-18"},{"lineNumber":60,"author":{"gitId":"XXJJXJ"},"content":"     */","lastModifiedDate":"2021-09-18"},{"lineNumber":61,"author":{"gitId":"XXJJXJ"},"content":"    public void remove(Event toRemove) {","lastModifiedDate":"2021-09-18"},{"lineNumber":62,"author":{"gitId":"XXJJXJ"},"content":"        requireNonNull(toRemove);","lastModifiedDate":"2021-09-18"},{"lineNumber":63,"author":{"gitId":"XXJJXJ"},"content":"        if (!internalList.remove(toRemove)) {","lastModifiedDate":"2021-09-18"},{"lineNumber":64,"author":{"gitId":"XXJJXJ"},"content":"            throw new EventNotFoundException();","lastModifiedDate":"2021-09-18"},{"lineNumber":65,"author":{"gitId":"XXJJXJ"},"content":"        }","lastModifiedDate":"2021-09-18"},{"lineNumber":66,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":67,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":68,"author":{"gitId":"lowkangn"},"content":"    /**","lastModifiedDate":"2021-10-03"},{"lineNumber":69,"author":{"gitId":"lowkangn"},"content":"     * Replaces the event {@code target} in the list with {@code editedEvent}.","lastModifiedDate":"2021-10-03"},{"lineNumber":70,"author":{"gitId":"lowkangn"},"content":"     * {@code target} must exist in the list.","lastModifiedDate":"2021-10-03"},{"lineNumber":71,"author":{"gitId":"lowkangn"},"content":"     * The event identity of {@code editedEvent} must not be the same as another existing event in the list.","lastModifiedDate":"2021-10-03"},{"lineNumber":72,"author":{"gitId":"lowkangn"},"content":"     */","lastModifiedDate":"2021-10-03"},{"lineNumber":73,"author":{"gitId":"lowkangn"},"content":"    public void setEvent(Event target, Event editedEvent) {","lastModifiedDate":"2021-10-03"},{"lineNumber":74,"author":{"gitId":"lowkangn"},"content":"        requireAllNonNull(target, editedEvent);","lastModifiedDate":"2021-10-03"},{"lineNumber":75,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":76,"author":{"gitId":"lowkangn"},"content":"        if (!target.isSameEvent(editedEvent) \u0026\u0026 contains(editedEvent)) {","lastModifiedDate":"2021-10-03"},{"lineNumber":77,"author":{"gitId":"lowkangn"},"content":"            throw new DuplicateEventException();","lastModifiedDate":"2021-10-03"},{"lineNumber":78,"author":{"gitId":"lowkangn"},"content":"        }","lastModifiedDate":"2021-10-03"},{"lineNumber":79,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":80,"author":{"gitId":"lowkangn"},"content":"        int index \u003d internalList.indexOf(target);","lastModifiedDate":"2021-10-03"},{"lineNumber":81,"author":{"gitId":"lowkangn"},"content":"        if (index \u003d\u003d -1) {","lastModifiedDate":"2021-10-03"},{"lineNumber":82,"author":{"gitId":"lowkangn"},"content":"            throw new EventNotFoundException();","lastModifiedDate":"2021-10-03"},{"lineNumber":83,"author":{"gitId":"lowkangn"},"content":"        }","lastModifiedDate":"2021-10-03"},{"lineNumber":84,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":85,"author":{"gitId":"lowkangn"},"content":"        internalList.set(index, editedEvent);","lastModifiedDate":"2021-10-03"},{"lineNumber":86,"author":{"gitId":"lowkangn"},"content":"    }","lastModifiedDate":"2021-10-03"},{"lineNumber":87,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":88,"author":{"gitId":"XXJJXJ"},"content":"    /**","lastModifiedDate":"2021-09-18"},{"lineNumber":89,"author":{"gitId":"XXJJXJ"},"content":"     * Sets the list of Events.","lastModifiedDate":"2021-09-18"},{"lineNumber":90,"author":{"gitId":"XXJJXJ"},"content":"     *","lastModifiedDate":"2021-09-18"},{"lineNumber":91,"author":{"gitId":"XXJJXJ"},"content":"     * @param replacement A UniqueEventList that replaces the current list of events.","lastModifiedDate":"2021-09-18"},{"lineNumber":92,"author":{"gitId":"XXJJXJ"},"content":"     */","lastModifiedDate":"2021-09-18"},{"lineNumber":93,"author":{"gitId":"XXJJXJ"},"content":"    public void setEvents(UniqueEventList replacement) {","lastModifiedDate":"2021-09-18"},{"lineNumber":94,"author":{"gitId":"XXJJXJ"},"content":"        requireNonNull(replacement);","lastModifiedDate":"2021-09-18"},{"lineNumber":95,"author":{"gitId":"XXJJXJ"},"content":"        internalList.setAll(replacement.internalList);","lastModifiedDate":"2021-09-18"},{"lineNumber":96,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":97,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":98,"author":{"gitId":"XXJJXJ"},"content":"    /**","lastModifiedDate":"2021-09-18"},{"lineNumber":99,"author":{"gitId":"XXJJXJ"},"content":"     * Replaces the contents of this list with {@code events}.","lastModifiedDate":"2021-09-18"},{"lineNumber":100,"author":{"gitId":"XXJJXJ"},"content":"     * {@code events} must not contain duplicate events.","lastModifiedDate":"2021-09-18"},{"lineNumber":101,"author":{"gitId":"XXJJXJ"},"content":"     *","lastModifiedDate":"2021-09-18"},{"lineNumber":102,"author":{"gitId":"XXJJXJ"},"content":"     * @param events A List of Events.","lastModifiedDate":"2021-09-18"},{"lineNumber":103,"author":{"gitId":"XXJJXJ"},"content":"     */","lastModifiedDate":"2021-09-18"},{"lineNumber":104,"author":{"gitId":"XXJJXJ"},"content":"    public void setEvents(List\u003cEvent\u003e events) {","lastModifiedDate":"2021-09-18"},{"lineNumber":105,"author":{"gitId":"XXJJXJ"},"content":"        requireAllNonNull(events);","lastModifiedDate":"2021-09-18"},{"lineNumber":106,"author":{"gitId":"XXJJXJ"},"content":"        if (!eventsAreUnique(events)) {","lastModifiedDate":"2021-09-18"},{"lineNumber":107,"author":{"gitId":"XXJJXJ"},"content":"            throw new DuplicateEventException();","lastModifiedDate":"2021-09-18"},{"lineNumber":108,"author":{"gitId":"XXJJXJ"},"content":"        }","lastModifiedDate":"2021-09-18"},{"lineNumber":109,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":110,"author":{"gitId":"XXJJXJ"},"content":"        internalList.setAll(events);","lastModifiedDate":"2021-09-18"},{"lineNumber":111,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":112,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":113,"author":{"gitId":"XXJJXJ"},"content":"    public void sort() {","lastModifiedDate":"2021-09-20"},{"lineNumber":114,"author":{"gitId":"XXJJXJ"},"content":"        internalList.sort(Comparator.naturalOrder());","lastModifiedDate":"2021-09-20"},{"lineNumber":115,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-09-20"},{"lineNumber":116,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":117,"author":{"gitId":"XXJJXJ"},"content":"    /**","lastModifiedDate":"2021-09-18"},{"lineNumber":118,"author":{"gitId":"XXJJXJ"},"content":"     * Returns the backing list as an unmodifiable {@code ObservableList}.","lastModifiedDate":"2021-09-18"},{"lineNumber":119,"author":{"gitId":"XXJJXJ"},"content":"     */","lastModifiedDate":"2021-09-18"},{"lineNumber":120,"author":{"gitId":"XXJJXJ"},"content":"    public ObservableList\u003cEvent\u003e asUnmodifiableObservableList() {","lastModifiedDate":"2021-09-18"},{"lineNumber":121,"author":{"gitId":"XXJJXJ"},"content":"        return internalUnmodifiableList;","lastModifiedDate":"2021-09-18"},{"lineNumber":122,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":123,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":124,"author":{"gitId":"XXJJXJ"},"content":"    @Override","lastModifiedDate":"2021-09-18"},{"lineNumber":125,"author":{"gitId":"XXJJXJ"},"content":"    public Iterator\u003cEvent\u003e iterator() {","lastModifiedDate":"2021-09-18"},{"lineNumber":126,"author":{"gitId":"XXJJXJ"},"content":"        return internalList.iterator();","lastModifiedDate":"2021-09-18"},{"lineNumber":127,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":128,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":129,"author":{"gitId":"XXJJXJ"},"content":"    @Override","lastModifiedDate":"2021-09-18"},{"lineNumber":130,"author":{"gitId":"XXJJXJ"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-09-18"},{"lineNumber":131,"author":{"gitId":"XXJJXJ"},"content":"        return other \u003d\u003d this","lastModifiedDate":"2021-09-18"},{"lineNumber":132,"author":{"gitId":"XXJJXJ"},"content":"                || (other instanceof UniqueEventList","lastModifiedDate":"2021-09-18"},{"lineNumber":133,"author":{"gitId":"XXJJXJ"},"content":"                \u0026\u0026 internalList.equals(((UniqueEventList) other).internalList));","lastModifiedDate":"2021-09-18"},{"lineNumber":134,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":135,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":136,"author":{"gitId":"XXJJXJ"},"content":"    /**","lastModifiedDate":"2021-09-18"},{"lineNumber":137,"author":{"gitId":"XXJJXJ"},"content":"     * Returns true if {@code events} contains only unique events.","lastModifiedDate":"2021-09-18"},{"lineNumber":138,"author":{"gitId":"XXJJXJ"},"content":"     */","lastModifiedDate":"2021-09-18"},{"lineNumber":139,"author":{"gitId":"XXJJXJ"},"content":"    private boolean eventsAreUnique(List\u003cEvent\u003e events) {","lastModifiedDate":"2021-09-18"},{"lineNumber":140,"author":{"gitId":"XXJJXJ"},"content":"        for (int i \u003d 0; i \u003c events.size() - 1; i++) {","lastModifiedDate":"2021-09-18"},{"lineNumber":141,"author":{"gitId":"XXJJXJ"},"content":"            for (int j \u003d i + 1; j \u003c events.size(); j++) {","lastModifiedDate":"2021-09-18"},{"lineNumber":142,"author":{"gitId":"XXJJXJ"},"content":"                if (events.get(i).isSameEvent(events.get(j))) {","lastModifiedDate":"2021-09-18"},{"lineNumber":143,"author":{"gitId":"XXJJXJ"},"content":"                    return false;","lastModifiedDate":"2021-09-18"},{"lineNumber":144,"author":{"gitId":"XXJJXJ"},"content":"                }","lastModifiedDate":"2021-09-18"},{"lineNumber":145,"author":{"gitId":"XXJJXJ"},"content":"            }","lastModifiedDate":"2021-09-18"},{"lineNumber":146,"author":{"gitId":"XXJJXJ"},"content":"        }","lastModifiedDate":"2021-09-18"},{"lineNumber":147,"author":{"gitId":"XXJJXJ"},"content":"        return true;","lastModifiedDate":"2021-09-18"},{"lineNumber":148,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":149,"author":{"gitId":"XXJJXJ"},"content":"}","lastModifiedDate":"2021-09-18"}],"authorContributionMap":{"XXJJXJ":129,"lowkangn":20}},{"path":"src/main/java/seedu/address/model/event/exceptions/DuplicateEventException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"XXJJXJ"},"content":"package seedu.address.model.event.exceptions;","lastModifiedDate":"2021-09-18"},{"lineNumber":2,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":3,"author":{"gitId":"XXJJXJ"},"content":"/**","lastModifiedDate":"2021-09-18"},{"lineNumber":4,"author":{"gitId":"XXJJXJ"},"content":" * Signals that the operation will result in duplicate Events (Events are considered duplicates if they have the same","lastModifiedDate":"2021-09-18"},{"lineNumber":5,"author":{"gitId":"XXJJXJ"},"content":" * identity).","lastModifiedDate":"2021-09-18"},{"lineNumber":6,"author":{"gitId":"XXJJXJ"},"content":" */","lastModifiedDate":"2021-09-18"},{"lineNumber":7,"author":{"gitId":"XXJJXJ"},"content":"public class DuplicateEventException extends RuntimeException {","lastModifiedDate":"2021-09-18"},{"lineNumber":8,"author":{"gitId":"XXJJXJ"},"content":"    public DuplicateEventException() {","lastModifiedDate":"2021-09-18"},{"lineNumber":9,"author":{"gitId":"XXJJXJ"},"content":"        super(\"Operation will result in Duplicate Events!\");","lastModifiedDate":"2021-09-18"},{"lineNumber":10,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":11,"author":{"gitId":"XXJJXJ"},"content":"}","lastModifiedDate":"2021-09-18"}],"authorContributionMap":{"XXJJXJ":11}},{"path":"src/main/java/seedu/address/model/event/exceptions/EventNotFoundException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"XXJJXJ"},"content":"package seedu.address.model.event.exceptions;","lastModifiedDate":"2021-09-18"},{"lineNumber":2,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":3,"author":{"gitId":"XXJJXJ"},"content":"/**","lastModifiedDate":"2021-09-18"},{"lineNumber":4,"author":{"gitId":"XXJJXJ"},"content":" * Signals that the operation is unable to find the specified event.","lastModifiedDate":"2021-09-18"},{"lineNumber":5,"author":{"gitId":"XXJJXJ"},"content":" */","lastModifiedDate":"2021-09-18"},{"lineNumber":6,"author":{"gitId":"XXJJXJ"},"content":"public class EventNotFoundException extends RuntimeException {","lastModifiedDate":"2021-09-18"},{"lineNumber":7,"author":{"gitId":"XXJJXJ"},"content":"}","lastModifiedDate":"2021-09-18"}],"authorContributionMap":{"XXJJXJ":7}},{"path":"src/main/java/seedu/address/model/nextofkin/NextOfKin.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kanjitp"},"content":"package seedu.address.model.nextofkin;","lastModifiedDate":"2021-09-26"},{"lineNumber":2,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":3,"author":{"gitId":"kanjitp"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2021-09-26"},{"lineNumber":4,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":5,"author":{"gitId":"kanjitp"},"content":"import java.util.Objects;","lastModifiedDate":"2021-09-26"},{"lineNumber":6,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":7,"author":{"gitId":"kanjitp"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2021-09-26"},{"lineNumber":8,"author":{"gitId":"kanjitp"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2021-09-26"},{"lineNumber":9,"author":{"gitId":"kanjitp"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2021-09-26"},{"lineNumber":10,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":11,"author":{"gitId":"kanjitp"},"content":"public class NextOfKin {","lastModifiedDate":"2021-09-26"},{"lineNumber":12,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":13,"author":{"gitId":"kanjitp"},"content":"    // Identity fields","lastModifiedDate":"2021-09-26"},{"lineNumber":14,"author":{"gitId":"kanjitp"},"content":"    private final Name name;","lastModifiedDate":"2021-09-26"},{"lineNumber":15,"author":{"gitId":"kanjitp"},"content":"    private final Phone phone;","lastModifiedDate":"2021-09-26"},{"lineNumber":16,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":17,"author":{"gitId":"kanjitp"},"content":"    private final Tag tag;","lastModifiedDate":"2021-09-26"},{"lineNumber":18,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":19,"author":{"gitId":"kanjitp"},"content":"    /**","lastModifiedDate":"2021-09-26"},{"lineNumber":20,"author":{"gitId":"kanjitp"},"content":"     * Constructor for NextOfKin.","lastModifiedDate":"2021-09-26"},{"lineNumber":21,"author":{"gitId":"kanjitp"},"content":"     *","lastModifiedDate":"2021-09-26"},{"lineNumber":22,"author":{"gitId":"kanjitp"},"content":"     * @param name  name of next of kin.","lastModifiedDate":"2021-09-26"},{"lineNumber":23,"author":{"gitId":"kanjitp"},"content":"     * @param phone phone of next of kin.","lastModifiedDate":"2021-09-26"},{"lineNumber":24,"author":{"gitId":"kanjitp"},"content":"     * @param tag   tag to describe relation of the next of kin.","lastModifiedDate":"2021-09-26"},{"lineNumber":25,"author":{"gitId":"kanjitp"},"content":"     */","lastModifiedDate":"2021-09-26"},{"lineNumber":26,"author":{"gitId":"kanjitp"},"content":"    public NextOfKin(Name name, Phone phone, Tag tag) {","lastModifiedDate":"2021-09-26"},{"lineNumber":27,"author":{"gitId":"kanjitp"},"content":"        requireAllNonNull(name, phone, tag);","lastModifiedDate":"2021-09-26"},{"lineNumber":28,"author":{"gitId":"kanjitp"},"content":"        this.name \u003d name;","lastModifiedDate":"2021-09-26"},{"lineNumber":29,"author":{"gitId":"kanjitp"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2021-09-26"},{"lineNumber":30,"author":{"gitId":"kanjitp"},"content":"        this.tag \u003d tag;","lastModifiedDate":"2021-09-26"},{"lineNumber":31,"author":{"gitId":"kanjitp"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":32,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":33,"author":{"gitId":"kanjitp"},"content":"    public Name getName() {","lastModifiedDate":"2021-09-26"},{"lineNumber":34,"author":{"gitId":"kanjitp"},"content":"        return name;","lastModifiedDate":"2021-09-26"},{"lineNumber":35,"author":{"gitId":"kanjitp"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":36,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":37,"author":{"gitId":"ntwbruce"},"content":"    public String getFullName() {","lastModifiedDate":"2021-10-03"},{"lineNumber":38,"author":{"gitId":"ntwbruce"},"content":"        return name.toString();","lastModifiedDate":"2021-10-03"},{"lineNumber":39,"author":{"gitId":"ntwbruce"},"content":"    }","lastModifiedDate":"2021-10-03"},{"lineNumber":40,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":41,"author":{"gitId":"kanjitp"},"content":"    public Phone getPhone() {","lastModifiedDate":"2021-09-26"},{"lineNumber":42,"author":{"gitId":"kanjitp"},"content":"        return phone;","lastModifiedDate":"2021-09-26"},{"lineNumber":43,"author":{"gitId":"kanjitp"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":44,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":45,"author":{"gitId":"ntwbruce"},"content":"    public String getPhoneValue() {","lastModifiedDate":"2021-10-03"},{"lineNumber":46,"author":{"gitId":"ntwbruce"},"content":"        return phone.toString();","lastModifiedDate":"2021-10-03"},{"lineNumber":47,"author":{"gitId":"ntwbruce"},"content":"    }","lastModifiedDate":"2021-10-03"},{"lineNumber":48,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":49,"author":{"gitId":"kanjitp"},"content":"    /**","lastModifiedDate":"2021-09-26"},{"lineNumber":50,"author":{"gitId":"kanjitp"},"content":"     * Returns an immutable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2021-09-26"},{"lineNumber":51,"author":{"gitId":"kanjitp"},"content":"     * if modification is attempted.","lastModifiedDate":"2021-09-26"},{"lineNumber":52,"author":{"gitId":"kanjitp"},"content":"     */","lastModifiedDate":"2021-09-26"},{"lineNumber":53,"author":{"gitId":"kanjitp"},"content":"    public Tag getTag() {","lastModifiedDate":"2021-09-26"},{"lineNumber":54,"author":{"gitId":"kanjitp"},"content":"        return tag;","lastModifiedDate":"2021-09-26"},{"lineNumber":55,"author":{"gitId":"kanjitp"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":56,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":57,"author":{"gitId":"kanjitp"},"content":"    /**","lastModifiedDate":"2021-09-26"},{"lineNumber":58,"author":{"gitId":"kanjitp"},"content":"     * Returns true if both persons have the same identity and data fields.","lastModifiedDate":"2021-09-26"},{"lineNumber":59,"author":{"gitId":"kanjitp"},"content":"     * This defines a stronger notion of equality between two persons.","lastModifiedDate":"2021-09-26"},{"lineNumber":60,"author":{"gitId":"kanjitp"},"content":"     */","lastModifiedDate":"2021-09-26"},{"lineNumber":61,"author":{"gitId":"kanjitp"},"content":"    @Override","lastModifiedDate":"2021-09-26"},{"lineNumber":62,"author":{"gitId":"kanjitp"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-09-26"},{"lineNumber":63,"author":{"gitId":"kanjitp"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2021-09-26"},{"lineNumber":64,"author":{"gitId":"kanjitp"},"content":"            return true;","lastModifiedDate":"2021-09-26"},{"lineNumber":65,"author":{"gitId":"kanjitp"},"content":"        }","lastModifiedDate":"2021-09-26"},{"lineNumber":66,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":67,"author":{"gitId":"kanjitp"},"content":"        if (!(other instanceof NextOfKin)) {","lastModifiedDate":"2021-09-26"},{"lineNumber":68,"author":{"gitId":"kanjitp"},"content":"            return false;","lastModifiedDate":"2021-09-26"},{"lineNumber":69,"author":{"gitId":"kanjitp"},"content":"        }","lastModifiedDate":"2021-09-26"},{"lineNumber":70,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":71,"author":{"gitId":"kanjitp"},"content":"        NextOfKin otherNextOfKin \u003d (NextOfKin) other;","lastModifiedDate":"2021-09-26"},{"lineNumber":72,"author":{"gitId":"kanjitp"},"content":"        return otherNextOfKin.getName().equals(getName())","lastModifiedDate":"2021-09-26"},{"lineNumber":73,"author":{"gitId":"kanjitp"},"content":"            \u0026\u0026 otherNextOfKin.getPhone().equals(getPhone())","lastModifiedDate":"2021-09-26"},{"lineNumber":74,"author":{"gitId":"kanjitp"},"content":"            \u0026\u0026 otherNextOfKin.getTag().equals(getTag());","lastModifiedDate":"2021-09-26"},{"lineNumber":75,"author":{"gitId":"kanjitp"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":76,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":77,"author":{"gitId":"kanjitp"},"content":"    @Override","lastModifiedDate":"2021-09-26"},{"lineNumber":78,"author":{"gitId":"kanjitp"},"content":"    public int hashCode() {","lastModifiedDate":"2021-09-26"},{"lineNumber":79,"author":{"gitId":"kanjitp"},"content":"        // use this method for custom fields hashing instead of implementing your own","lastModifiedDate":"2021-09-26"},{"lineNumber":80,"author":{"gitId":"kanjitp"},"content":"        return Objects.hash(name, phone, tag);","lastModifiedDate":"2021-09-26"},{"lineNumber":81,"author":{"gitId":"kanjitp"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":82,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":83,"author":{"gitId":"kanjitp"},"content":"    @Override","lastModifiedDate":"2021-09-26"},{"lineNumber":84,"author":{"gitId":"kanjitp"},"content":"    public String toString() {","lastModifiedDate":"2021-09-26"},{"lineNumber":85,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":86,"author":{"gitId":"kanjitp"},"content":"        return getName() + \"; Phone: \" + getPhone() + \"; Relationship: \" + getTag();","lastModifiedDate":"2021-09-28"},{"lineNumber":87,"author":{"gitId":"kanjitp"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":88,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":89,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":90,"author":{"gitId":"kanjitp"},"content":"}","lastModifiedDate":"2021-09-26"}],"authorContributionMap":{"kanjitp":83,"ntwbruce":7}},{"path":"src/main/java/seedu/address/model/participant/BirthDate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kanjitp"},"content":"package seedu.address.model.participant;","lastModifiedDate":"2021-09-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2021-09-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-09-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.time.Period;","lastModifiedDate":"2021-09-11"},{"lineNumber":7,"author":{"gitId":"XXJJXJ"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2021-09-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2021-09-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Represents a Participant\u0027s date of birth in the event.","lastModifiedDate":"2021-09-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidBirthDate(LocalDate)}}","lastModifiedDate":"2021-09-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2021-09-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class BirthDate {","lastModifiedDate":"2021-09-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DATE_CONSTRAINTS \u003d \"Date of birth cannot be in the future or invalid\";","lastModifiedDate":"2021-09-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private final LocalDate date;","lastModifiedDate":"2021-09-11"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private BirthDate(LocalDate date) {","lastModifiedDate":"2021-09-11"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        this.date \u003d date;","lastModifiedDate":"2021-09-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-09-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * Factory method for birthdate starting from dayOfMonth, then month, then year.","lastModifiedDate":"2021-09-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2021-09-11"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * @param dayOfMonth day of the month.","lastModifiedDate":"2021-09-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * @param month      month from 1-12.","lastModifiedDate":"2021-09-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * @param year       year to be this year or before, year in the future is invalid in this case.","lastModifiedDate":"2021-09-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * @return Birthdate object with specified date.","lastModifiedDate":"2021-09-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-09-11"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public static BirthDate of(int year, int month, int dayOfMonth) {","lastModifiedDate":"2021-09-11"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        LocalDate date \u003d LocalDate.of(year, month, dayOfMonth);","lastModifiedDate":"2021-09-11"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        checkArgument(isPresentOrPast(date), MESSAGE_DATE_CONSTRAINTS);","lastModifiedDate":"2021-09-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        return new BirthDate(date);","lastModifiedDate":"2021-09-11"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-11"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":39,"author":{"gitId":"XXJJXJ"},"content":"    /**","lastModifiedDate":"2021-09-18"},{"lineNumber":40,"author":{"gitId":"XXJJXJ"},"content":"     * Factory method for birthdate using LocalDate instance.","lastModifiedDate":"2021-09-18"},{"lineNumber":41,"author":{"gitId":"XXJJXJ"},"content":"     *","lastModifiedDate":"2021-09-18"},{"lineNumber":42,"author":{"gitId":"XXJJXJ"},"content":"     * @param date    A LocalDate instance.","lastModifiedDate":"2021-09-18"},{"lineNumber":43,"author":{"gitId":"XXJJXJ"},"content":"     * @return        A BirthDate instance.","lastModifiedDate":"2021-09-18"},{"lineNumber":44,"author":{"gitId":"XXJJXJ"},"content":"     */","lastModifiedDate":"2021-09-18"},{"lineNumber":45,"author":{"gitId":"XXJJXJ"},"content":"    public static BirthDate of(LocalDate date) {","lastModifiedDate":"2021-09-18"},{"lineNumber":46,"author":{"gitId":"XXJJXJ"},"content":"        return new BirthDate(date);","lastModifiedDate":"2021-09-18"},{"lineNumber":47,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":48,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-09-11"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * Factory method for birthdate which might not have been initialised yet.","lastModifiedDate":"2021-09-12"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2021-09-11"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * @return Birthdate with \"N/A\" String representation.","lastModifiedDate":"2021-09-12"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-09-11"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public static BirthDate notSpecified() {","lastModifiedDate":"2021-09-11"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        return new BirthDate(null);","lastModifiedDate":"2021-09-11"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-11"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-09-11"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     * Getter for date of this BirthDate.","lastModifiedDate":"2021-09-12"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2021-09-11"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * @return date of the BirthDate.","lastModifiedDate":"2021-09-12"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-09-11"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public LocalDate getDate() {","lastModifiedDate":"2021-09-11"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        return this.date;","lastModifiedDate":"2021-09-11"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-11"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-09-11"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     * Returns the age from the BirthDate.","lastModifiedDate":"2021-09-12"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2021-09-11"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * @return age","lastModifiedDate":"2021-09-11"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-09-11"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public int getAge() {","lastModifiedDate":"2021-09-11"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        return Period.between(this.date, LocalDate.now()).getYears();","lastModifiedDate":"2021-09-11"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-11"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-09-11"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     * Returns true if a given LocalDate instance is in the past or present.","lastModifiedDate":"2021-09-12"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * This is used to ensure no one\u0027s BirthDate is in the future.","lastModifiedDate":"2021-09-12"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2021-09-12"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * @param date     A LocalDate instance.","lastModifiedDate":"2021-09-12"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * @return         A boolean representing if a date is in the past or present.","lastModifiedDate":"2021-09-12"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-09-11"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public static boolean isPresentOrPast(LocalDate date) {","lastModifiedDate":"2021-09-12"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        return (LocalDate.now().isEqual(date) || LocalDate.now().isAfter(date));","lastModifiedDate":"2021-09-11"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-11"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":87,"author":{"gitId":"XXJJXJ"},"content":"    //Add on for Json Conversion in JsonAdaptedParticipants","lastModifiedDate":"2021-09-18"},{"lineNumber":88,"author":{"gitId":"XXJJXJ"},"content":"    /**","lastModifiedDate":"2021-09-18"},{"lineNumber":89,"author":{"gitId":"XXJJXJ"},"content":"     * Returns true if a given String form of birthDate is valid.","lastModifiedDate":"2021-09-18"},{"lineNumber":90,"author":{"gitId":"XXJJXJ"},"content":"     *","lastModifiedDate":"2021-09-18"},{"lineNumber":91,"author":{"gitId":"XXJJXJ"},"content":"     * @param birthDate   A String representing a date.","lastModifiedDate":"2021-09-18"},{"lineNumber":92,"author":{"gitId":"XXJJXJ"},"content":"     * @return            A boolean representing if the String form birthDate is valid.","lastModifiedDate":"2021-09-18"},{"lineNumber":93,"author":{"gitId":"XXJJXJ"},"content":"     */","lastModifiedDate":"2021-09-18"},{"lineNumber":94,"author":{"gitId":"XXJJXJ"},"content":"    public static boolean isValidBirthDate(String birthDate) {","lastModifiedDate":"2021-09-18"},{"lineNumber":95,"author":{"gitId":"XXJJXJ"},"content":"        boolean isValid;","lastModifiedDate":"2021-09-20"},{"lineNumber":96,"author":{"gitId":"XXJJXJ"},"content":"        try {","lastModifiedDate":"2021-09-18"},{"lineNumber":97,"author":{"gitId":"XXJJXJ"},"content":"            LocalDate date \u003d LocalDate.parse(birthDate);","lastModifiedDate":"2021-09-18"},{"lineNumber":98,"author":{"gitId":"XXJJXJ"},"content":"            isValid \u003d isPresentOrPast(date);","lastModifiedDate":"2021-09-20"},{"lineNumber":99,"author":{"gitId":"XXJJXJ"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2021-09-18"},{"lineNumber":100,"author":{"gitId":"XXJJXJ"},"content":"            isValid \u003d false;","lastModifiedDate":"2021-09-20"},{"lineNumber":101,"author":{"gitId":"XXJJXJ"},"content":"        }","lastModifiedDate":"2021-09-18"},{"lineNumber":102,"author":{"gitId":"XXJJXJ"},"content":"        return isValid;","lastModifiedDate":"2021-09-20"},{"lineNumber":103,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":104,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2021-09-11"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-09-11"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2021-09-11"},{"lineNumber":108,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2021-09-11"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-09-11"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        if (!(other instanceof BirthDate)) {","lastModifiedDate":"2021-09-11"},{"lineNumber":112,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2021-09-11"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-09-11"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        BirthDate otherBirthDate \u003d (BirthDate) other;","lastModifiedDate":"2021-09-11"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        if (this.getDate() \u003d\u003d null || otherBirthDate.getDate() \u003d\u003d null) {","lastModifiedDate":"2021-09-11"},{"lineNumber":117,"author":{"gitId":"-"},"content":"            return this.getDate() \u003d\u003d otherBirthDate.getDate();","lastModifiedDate":"2021-09-11"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        } else {","lastModifiedDate":"2021-09-11"},{"lineNumber":119,"author":{"gitId":"-"},"content":"            return otherBirthDate.getDate().equals(getDate());","lastModifiedDate":"2021-09-11"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-09-11"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-11"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2021-09-11"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2021-09-11"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        if (this.date \u003d\u003d null) {","lastModifiedDate":"2021-09-11"},{"lineNumber":127,"author":{"gitId":"-"},"content":"            return \"N/A\";","lastModifiedDate":"2021-09-11"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-09-11"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        return date.toString();","lastModifiedDate":"2021-09-11"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-11"},{"lineNumber":131,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-09-11"}],"authorContributionMap":{"XXJJXJ":29,"kanjitp":1,"-":101}},{"path":"src/main/java/seedu/address/model/participant/NameContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kanjitp"},"content":"package seedu.address.model.participant;","lastModifiedDate":"2021-09-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2017-06-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":9,"author":{"gitId":"XXJJXJ"},"content":" * Tests that a {@code Participant}\u0027s {@code Name} matches any of the keywords given.","lastModifiedDate":"2021-09-28"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":11,"author":{"gitId":"kanjitp"},"content":"public class NameContainsKeywordsPredicate implements Predicate\u003cParticipant\u003e {","lastModifiedDate":"2021-09-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private final List\u003cString\u003e keywords;","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public NameContainsKeywordsPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"kanjitp"},"content":"    public boolean test(Participant participant) {","lastModifiedDate":"2021-09-26"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        return keywords.stream()","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"ntwbruce"},"content":"                .anyMatch(keyword -\u003e StringUtil.containsWordIgnoreCase(participant.getFullName(), keyword));","lastModifiedDate":"2021-10-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"                || (other instanceof NameContainsKeywordsPredicate // instanceof handles nulls","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"                \u0026\u0026 keywords.equals(((NameContainsKeywordsPredicate) other).keywords)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"XXJJXJ":1,"kanjitp":3,"ntwbruce":1,"-":26}},{"path":"src/main/java/seedu/address/model/participant/Note.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kanjitp"},"content":"package seedu.address.model.participant;","lastModifiedDate":"2021-09-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-09-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2021-09-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2021-09-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Represents a note with different level of importance.","lastModifiedDate":"2021-09-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Unlike tags, the aim of the note is for the client/event organizer to be able to add and remove the note.","lastModifiedDate":"2021-09-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2021-09-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class Note {","lastModifiedDate":"2021-09-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":14,"author":{"gitId":"kanjitp"},"content":"    public static final String MESSAGE_INVALID_NOTE_FORMAT \u003d \"Note format should be \\\"IMPORTANCE: CONTENT\\\"\";","lastModifiedDate":"2021-09-26"},{"lineNumber":15,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":16,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /** Importance of the note */","lastModifiedDate":"2021-09-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public enum Importance {","lastModifiedDate":"2021-09-11"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        VERY_HIGH, HIGH, MEDIUM, LOW, VERY_LOW","lastModifiedDate":"2021-09-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private final String content;","lastModifiedDate":"2021-09-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private final Importance importance;","lastModifiedDate":"2021-09-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-09-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * Constructor for note.","lastModifiedDate":"2021-09-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2021-09-11"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * @param content    content of the note.","lastModifiedDate":"2021-09-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * @param importance importance of the note.","lastModifiedDate":"2021-09-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-09-11"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public Note(String content, Importance importance) {","lastModifiedDate":"2021-09-11"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        requireNonNull(content);","lastModifiedDate":"2021-09-11"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        this.content \u003d content;","lastModifiedDate":"2021-09-11"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        this.importance \u003d importance;","lastModifiedDate":"2021-09-11"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-11"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-09-11"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * Getter for content.","lastModifiedDate":"2021-09-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2021-09-11"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * @return content of this note.","lastModifiedDate":"2021-09-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-09-11"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public String getContent() {","lastModifiedDate":"2021-09-11"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        return this.content;","lastModifiedDate":"2021-09-11"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-11"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-09-11"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * Getter for importance.","lastModifiedDate":"2021-09-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2021-09-11"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * @return importance of this note.","lastModifiedDate":"2021-09-12"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-09-11"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public Importance getImportance() {","lastModifiedDate":"2021-09-11"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        return this.importance;","lastModifiedDate":"2021-09-11"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-11"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-09-11"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * Returns true if both notes have the same identity and data fields.","lastModifiedDate":"2021-09-11"},{"lineNumber":57,"author":{"gitId":"kanjitp"},"content":"     * This defines a stronger notion of equality between two notes.","lastModifiedDate":"2021-09-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-09-11"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2021-09-11"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-09-11"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2021-09-11"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2021-09-11"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-09-11"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        if (!(other instanceof Note)) {","lastModifiedDate":"2021-09-11"},{"lineNumber":66,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2021-09-11"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-09-11"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        Note otherNote \u003d (Note) other;","lastModifiedDate":"2021-09-11"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        return otherNote.content.equals(content)","lastModifiedDate":"2021-09-11"},{"lineNumber":71,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherNote.importance.equals(importance);","lastModifiedDate":"2021-09-11"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-11"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2021-09-11"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2021-09-11"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        // use this method for custom fields hashing instead of implementing your own","lastModifiedDate":"2021-09-11"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        return Objects.hash(content, importance);","lastModifiedDate":"2021-09-11"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-11"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-09-11"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * Template: \"[IMPORTANCE] \u0027content\u0027\".","lastModifiedDate":"2021-09-12"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2021-09-11"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * @return string representation according to the template","lastModifiedDate":"2021-09-11"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-09-11"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2021-09-11"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2021-09-11"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        return \"Importance[\" + this.importance + \"] \" + this.content;","lastModifiedDate":"2021-09-11"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-11"},{"lineNumber":89,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-09-11"}],"authorContributionMap":{"kanjitp":5,"-":84}},{"path":"src/main/java/seedu/address/model/participant/Participant.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kanjitp"},"content":"package seedu.address.model.participant;","lastModifiedDate":"2021-09-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2021-09-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-09-11"},{"lineNumber":6,"author":{"gitId":"kanjitp"},"content":"import java.util.Collection;","lastModifiedDate":"2021-09-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2021-09-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2021-09-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2021-09-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2021-09-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":12,"author":{"gitId":"kanjitp"},"content":"import seedu.address.model.nextofkin.NextOfKin;","lastModifiedDate":"2021-09-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2021-09-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2021-09-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2021-09-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2021-09-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2021-09-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2021-09-11"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2021-09-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * Represents a Participant in an event.","lastModifiedDate":"2021-09-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * Guarantees: name, phone, email, address, tags, birthDate, notes, nextOfKins are present and not null, field values","lastModifiedDate":"2021-09-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * are validated, immutable.","lastModifiedDate":"2021-09-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2021-09-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class Participant extends Person {","lastModifiedDate":"2021-09-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":27,"author":{"gitId":"kanjitp"},"content":"    private final ParticipantId id;","lastModifiedDate":"2021-09-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final BirthDate birthDate;","lastModifiedDate":"2021-09-11"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private final Set\u003cNote\u003e notes \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2021-09-11"},{"lineNumber":30,"author":{"gitId":"kanjitp"},"content":"    private final ArrayList\u003cNextOfKin\u003e nextOfKins \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-09-26"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-09-11"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2021-09-11"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2021-09-11"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * @param name       Name object of the person.","lastModifiedDate":"2021-09-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * @param phone      Phone object of the person.","lastModifiedDate":"2021-09-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * @param email      Email object of the person.","lastModifiedDate":"2021-09-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * @param address    Address object of the person.","lastModifiedDate":"2021-09-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * @param tags       tags of the person.","lastModifiedDate":"2021-09-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * @param birthDate  birthdate of the person.","lastModifiedDate":"2021-09-12"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * @param notes      notes attached by the manager.","lastModifiedDate":"2021-09-12"},{"lineNumber":43,"author":{"gitId":"kanjitp"},"content":"     * @param nextOfKin nextOfKin of the person.","lastModifiedDate":"2021-09-26"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-09-11"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public Participant(Name name, Phone phone, Email email, Address address, Set\u003cTag\u003e tags, BirthDate birthDate,","lastModifiedDate":"2021-09-11"},{"lineNumber":46,"author":{"gitId":"kanjitp"},"content":"                       Set\u003cNote\u003e notes, Collection\u003cNextOfKin\u003e nextOfKin) {","lastModifiedDate":"2021-09-26"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        super(name, phone, email, address, tags);","lastModifiedDate":"2021-09-11"},{"lineNumber":48,"author":{"gitId":"kanjitp"},"content":"        requireAllNonNull(birthDate, notes);","lastModifiedDate":"2021-09-26"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        this.birthDate \u003d birthDate;","lastModifiedDate":"2021-09-11"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        this.notes.addAll(notes);","lastModifiedDate":"2021-09-11"},{"lineNumber":51,"author":{"gitId":"kanjitp"},"content":"        this.nextOfKins.addAll(nextOfKin);","lastModifiedDate":"2021-09-26"},{"lineNumber":52,"author":{"gitId":"kanjitp"},"content":"        this.id \u003d ParticipantId.of(this);","lastModifiedDate":"2021-09-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-11"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-09-11"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * @return this object\u0027s birthDate.","lastModifiedDate":"2021-09-12"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-09-11"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public BirthDate getBirthDate() {","lastModifiedDate":"2021-09-11"},{"lineNumber":60,"author":{"gitId":"ntwbruce"},"content":"        return birthDate;","lastModifiedDate":"2021-10-03"},{"lineNumber":61,"author":{"gitId":"ntwbruce"},"content":"    }","lastModifiedDate":"2021-10-03"},{"lineNumber":62,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":63,"author":{"gitId":"ntwbruce"},"content":"    public String getBirthDateString() {","lastModifiedDate":"2021-10-03"},{"lineNumber":64,"author":{"gitId":"ntwbruce"},"content":"        return birthDate.toString();","lastModifiedDate":"2021-10-03"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-11"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-09-11"},{"lineNumber":68,"author":{"gitId":"kanjitp"},"content":"     * Returns an Arraylist of next of kin that represents the participant\u0027s next of kins.","lastModifiedDate":"2021-09-28"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2021-09-12"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * @return this object\u0027s nextOfKins.","lastModifiedDate":"2021-09-12"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-09-11"},{"lineNumber":72,"author":{"gitId":"kanjitp"},"content":"    public ArrayList\u003cNextOfKin\u003e getNextOfKins() {","lastModifiedDate":"2021-09-26"},{"lineNumber":73,"author":{"gitId":"ntwbruce"},"content":"        return nextOfKins;","lastModifiedDate":"2021-10-03"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-11"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":76,"author":{"gitId":"kanjitp"},"content":"    public ParticipantId getParticipantId() {","lastModifiedDate":"2021-09-26"},{"lineNumber":77,"author":{"gitId":"ntwbruce"},"content":"        return id;","lastModifiedDate":"2021-10-03"},{"lineNumber":78,"author":{"gitId":"kanjitp"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":79,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":80,"author":{"gitId":"ntwbruce"},"content":"    public String getParticipantIdValue() {","lastModifiedDate":"2021-10-03"},{"lineNumber":81,"author":{"gitId":"ntwbruce"},"content":"        return id.toString();","lastModifiedDate":"2021-10-03"},{"lineNumber":82,"author":{"gitId":"ntwbruce"},"content":"    }","lastModifiedDate":"2021-10-03"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-09-11"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * Adds a note to set of notes.","lastModifiedDate":"2021-09-12"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2021-09-11"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * @param note note to be added.","lastModifiedDate":"2021-09-12"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-09-11"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    public void addNote(Note note) {","lastModifiedDate":"2021-09-11"},{"lineNumber":90,"author":{"gitId":"ntwbruce"},"content":"        notes.add(note);","lastModifiedDate":"2021-10-03"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-11"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-09-11"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     * Removes a specific Note from the set.","lastModifiedDate":"2021-09-12"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2021-09-11"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     * @param note    A Note to be removed.","lastModifiedDate":"2021-09-12"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-09-11"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    public void removeNote(Note note) {","lastModifiedDate":"2021-09-11"},{"lineNumber":99,"author":{"gitId":"ntwbruce"},"content":"        notes.remove(note);","lastModifiedDate":"2021-10-03"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-11"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-09-11"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * Returns an immutable note set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2021-09-11"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * if modification is attempted.","lastModifiedDate":"2021-09-11"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-09-11"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    public Set\u003cNote\u003e getNotes() {","lastModifiedDate":"2021-09-11"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        return Collections.unmodifiableSet(notes);","lastModifiedDate":"2021-09-11"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-11"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-09-11"},{"lineNumber":111,"author":{"gitId":"-"},"content":"     * Returns true if both participants have the same name.","lastModifiedDate":"2021-09-11"},{"lineNumber":112,"author":{"gitId":"-"},"content":"     * This defines a weaker notion of equality between two persons.","lastModifiedDate":"2021-09-11"},{"lineNumber":113,"author":{"gitId":"-"},"content":"     * This allow Participant to both pass in Person and Participant objects.","lastModifiedDate":"2021-09-11"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-09-11"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    public boolean isSameParticipant(Participant otherParticipant) {","lastModifiedDate":"2021-09-12"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        if (otherParticipant \u003d\u003d this) {","lastModifiedDate":"2021-09-11"},{"lineNumber":117,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2021-09-11"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-09-11"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        return otherParticipant !\u003d null","lastModifiedDate":"2021-09-11"},{"lineNumber":121,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherParticipant.getName().equals(getName())","lastModifiedDate":"2021-09-12"},{"lineNumber":122,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherParticipant.getBirthDate().equals(getBirthDate());","lastModifiedDate":"2021-09-12"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-11"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-09-11"},{"lineNumber":126,"author":{"gitId":"-"},"content":"     * Returns true if both participants have the same identity and data fields.","lastModifiedDate":"2021-09-11"},{"lineNumber":127,"author":{"gitId":"-"},"content":"     * This defines a stronger notion of equality between two participants.","lastModifiedDate":"2021-09-11"},{"lineNumber":128,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-09-11"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2021-09-11"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-09-11"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2021-09-11"},{"lineNumber":132,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2021-09-11"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-09-11"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        if (!(other instanceof Participant)) {","lastModifiedDate":"2021-09-11"},{"lineNumber":136,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2021-09-11"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-09-11"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        Participant otherParticipant \u003d (Participant) other;","lastModifiedDate":"2021-09-11"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        return otherParticipant.getName().equals(getName())","lastModifiedDate":"2021-09-11"},{"lineNumber":141,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherParticipant.getPhone().equals(getPhone())","lastModifiedDate":"2021-09-11"},{"lineNumber":142,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherParticipant.getEmail().equals(getEmail())","lastModifiedDate":"2021-09-11"},{"lineNumber":143,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherParticipant.getAddress().equals(getAddress())","lastModifiedDate":"2021-09-11"},{"lineNumber":144,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherParticipant.getTags().equals(getTags())","lastModifiedDate":"2021-09-11"},{"lineNumber":145,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherParticipant.getBirthDate().equals(getBirthDate())","lastModifiedDate":"2021-09-11"},{"lineNumber":146,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherParticipant.getNotes().equals(getNotes())","lastModifiedDate":"2021-09-11"},{"lineNumber":147,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherParticipant.getNextOfKins().equals(getNextOfKins());","lastModifiedDate":"2021-09-11"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-11"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2021-09-11"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2021-09-11"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        // use this method for custom fields hashing instead of implementing your own","lastModifiedDate":"2021-09-11"},{"lineNumber":153,"author":{"gitId":"ntwbruce"},"content":"        return Objects.hash(getName(), getPhone(), getEmail(), getAddress(), getTags(), birthDate, notes, nextOfKins);","lastModifiedDate":"2021-10-03"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-11"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2021-09-11"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2021-09-11"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2021-09-11"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        builder.append(getName())","lastModifiedDate":"2021-09-11"},{"lineNumber":160,"author":{"gitId":"-"},"content":"                .append(\"; Phone: \")","lastModifiedDate":"2021-09-11"},{"lineNumber":161,"author":{"gitId":"-"},"content":"                .append(getPhone())","lastModifiedDate":"2021-09-11"},{"lineNumber":162,"author":{"gitId":"-"},"content":"                .append(\"; Email: \")","lastModifiedDate":"2021-09-11"},{"lineNumber":163,"author":{"gitId":"-"},"content":"                .append(getEmail())","lastModifiedDate":"2021-09-11"},{"lineNumber":164,"author":{"gitId":"-"},"content":"                .append(\"; Address: \")","lastModifiedDate":"2021-09-11"},{"lineNumber":165,"author":{"gitId":"-"},"content":"                .append(getAddress());","lastModifiedDate":"2021-09-11"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":167,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e tags \u003d getTags();","lastModifiedDate":"2021-09-11"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        if (!tags.isEmpty()) {","lastModifiedDate":"2021-09-11"},{"lineNumber":170,"author":{"gitId":"-"},"content":"            builder.append(\"; Tags: \");","lastModifiedDate":"2021-09-11"},{"lineNumber":171,"author":{"gitId":"-"},"content":"            tags.forEach(builder::append);","lastModifiedDate":"2021-09-11"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-09-11"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        Set\u003cNote\u003e notes \u003d getNotes();","lastModifiedDate":"2021-09-11"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        if (!notes.isEmpty()) {","lastModifiedDate":"2021-09-11"},{"lineNumber":176,"author":{"gitId":"-"},"content":"            builder.append(\"; Notes: \");","lastModifiedDate":"2021-09-11"},{"lineNumber":177,"author":{"gitId":"-"},"content":"            notes.forEach(builder::append);","lastModifiedDate":"2021-09-11"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-09-11"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":180,"author":{"gitId":"kanjitp"},"content":"        ArrayList\u003cNextOfKin\u003e nextOfKins \u003d getNextOfKins();","lastModifiedDate":"2021-09-26"},{"lineNumber":181,"author":{"gitId":"kanjitp"},"content":"        if (!nextOfKins.isEmpty()) {","lastModifiedDate":"2021-09-26"},{"lineNumber":182,"author":{"gitId":"kanjitp"},"content":"            builder.append(\"; Next Of Kins: \");","lastModifiedDate":"2021-09-26"},{"lineNumber":183,"author":{"gitId":"kanjitp"},"content":"            nextOfKins.forEach(builder::append);","lastModifiedDate":"2021-09-26"},{"lineNumber":184,"author":{"gitId":"kanjitp"},"content":"        }","lastModifiedDate":"2021-09-26"},{"lineNumber":185,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        return builder.toString();","lastModifiedDate":"2021-09-11"},{"lineNumber":187,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-11"},{"lineNumber":188,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-09-11"}],"authorContributionMap":{"kanjitp":21,"ntwbruce":14,"-":153}},{"path":"src/main/java/seedu/address/model/participant/ParticipantId.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kanjitp"},"content":"package seedu.address.model.participant;","lastModifiedDate":"2021-09-26"},{"lineNumber":2,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":3,"author":{"gitId":"kanjitp"},"content":"public class ParticipantId {","lastModifiedDate":"2021-09-26"},{"lineNumber":4,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":5,"author":{"gitId":"kanjitp"},"content":"    private String id;","lastModifiedDate":"2021-09-26"},{"lineNumber":6,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":7,"author":{"gitId":"kanjitp"},"content":"    private ParticipantId(Participant p) {","lastModifiedDate":"2021-09-26"},{"lineNumber":8,"author":{"gitId":"kanjitp"},"content":"        this.id \u003d encode(p);","lastModifiedDate":"2021-09-26"},{"lineNumber":9,"author":{"gitId":"kanjitp"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":10,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":11,"author":{"gitId":"kanjitp"},"content":"    /**","lastModifiedDate":"2021-09-26"},{"lineNumber":12,"author":{"gitId":"kanjitp"},"content":"     * Factory method for id.","lastModifiedDate":"2021-09-26"},{"lineNumber":13,"author":{"gitId":"kanjitp"},"content":"     *","lastModifiedDate":"2021-09-26"},{"lineNumber":14,"author":{"gitId":"kanjitp"},"content":"     * @param p participant to encode the id.","lastModifiedDate":"2021-09-26"},{"lineNumber":15,"author":{"gitId":"kanjitp"},"content":"     * @return the ParticipantId for given participant.","lastModifiedDate":"2021-09-26"},{"lineNumber":16,"author":{"gitId":"kanjitp"},"content":"     */","lastModifiedDate":"2021-09-26"},{"lineNumber":17,"author":{"gitId":"kanjitp"},"content":"    public static ParticipantId of(Participant p) {","lastModifiedDate":"2021-09-26"},{"lineNumber":18,"author":{"gitId":"kanjitp"},"content":"        return new ParticipantId(p);","lastModifiedDate":"2021-09-26"},{"lineNumber":19,"author":{"gitId":"kanjitp"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":20,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":21,"author":{"gitId":"kanjitp"},"content":"    /**","lastModifiedDate":"2021-09-26"},{"lineNumber":22,"author":{"gitId":"kanjitp"},"content":"     * Encode the given participant to give id.","lastModifiedDate":"2021-09-26"},{"lineNumber":23,"author":{"gitId":"kanjitp"},"content":"     *","lastModifiedDate":"2021-09-26"},{"lineNumber":24,"author":{"gitId":"kanjitp"},"content":"     * @param p participant to encode the id.","lastModifiedDate":"2021-09-26"},{"lineNumber":25,"author":{"gitId":"kanjitp"},"content":"     * @return the id for given participant.","lastModifiedDate":"2021-09-26"},{"lineNumber":26,"author":{"gitId":"kanjitp"},"content":"     */","lastModifiedDate":"2021-09-26"},{"lineNumber":27,"author":{"gitId":"kanjitp"},"content":"    public static String encode(Participant p) {","lastModifiedDate":"2021-09-26"},{"lineNumber":28,"author":{"gitId":"kanjitp"},"content":"        // may change in the future","lastModifiedDate":"2021-09-26"},{"lineNumber":29,"author":{"gitId":"ntwbruce"},"content":"        String[] sections \u003d p.getFullName().trim().split(\" \");","lastModifiedDate":"2021-10-03"},{"lineNumber":30,"author":{"gitId":"kanjitp"},"content":"        if (sections.length \u003d\u003d 1) {","lastModifiedDate":"2021-09-26"},{"lineNumber":31,"author":{"gitId":"kanjitp"},"content":"            String name \u003d sections[0];","lastModifiedDate":"2021-09-26"},{"lineNumber":32,"author":{"gitId":"kanjitp"},"content":"            return name.length() \u003c 6 ? name.toLowerCase() : name.substring(0, 6).toLowerCase();","lastModifiedDate":"2021-09-26"},{"lineNumber":33,"author":{"gitId":"kanjitp"},"content":"        } else {","lastModifiedDate":"2021-09-26"},{"lineNumber":34,"author":{"gitId":"kanjitp"},"content":"            String first \u003d sections[0];","lastModifiedDate":"2021-09-26"},{"lineNumber":35,"author":{"gitId":"kanjitp"},"content":"            String last \u003d sections[sections.length - 1];","lastModifiedDate":"2021-09-26"},{"lineNumber":36,"author":{"gitId":"kanjitp"},"content":"            String firstPart \u003d first.length() \u003c 3 ? first : first.substring(0, 3);","lastModifiedDate":"2021-09-26"},{"lineNumber":37,"author":{"gitId":"kanjitp"},"content":"            String lastPart \u003d last.length() \u003c 3 ? last : last.substring(0, 3);","lastModifiedDate":"2021-09-26"},{"lineNumber":38,"author":{"gitId":"kanjitp"},"content":"            return firstPart.toLowerCase() + lastPart.toLowerCase();","lastModifiedDate":"2021-09-26"},{"lineNumber":39,"author":{"gitId":"kanjitp"},"content":"        }","lastModifiedDate":"2021-09-26"},{"lineNumber":40,"author":{"gitId":"kanjitp"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":41,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":42,"author":{"gitId":"kanjitp"},"content":"    @Override","lastModifiedDate":"2021-09-26"},{"lineNumber":43,"author":{"gitId":"kanjitp"},"content":"    public String toString() {","lastModifiedDate":"2021-09-26"},{"lineNumber":44,"author":{"gitId":"kanjitp"},"content":"        return this.id;","lastModifiedDate":"2021-09-26"},{"lineNumber":45,"author":{"gitId":"kanjitp"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":46,"author":{"gitId":"kanjitp"},"content":"}","lastModifiedDate":"2021-09-26"},{"lineNumber":47,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-26"}],"authorContributionMap":{"kanjitp":46,"ntwbruce":1}},{"path":"src/main/java/seedu/address/model/participant/UniqueParticipantList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kanjitp"},"content":"package seedu.address.model.participant;","lastModifiedDate":"2021-09-26"},{"lineNumber":2,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":3,"author":{"gitId":"kanjitp"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-09-26"},{"lineNumber":4,"author":{"gitId":"kanjitp"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2021-09-26"},{"lineNumber":5,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":6,"author":{"gitId":"kanjitp"},"content":"import java.util.Iterator;","lastModifiedDate":"2021-09-26"},{"lineNumber":7,"author":{"gitId":"kanjitp"},"content":"import java.util.List;","lastModifiedDate":"2021-09-26"},{"lineNumber":8,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":9,"author":{"gitId":"kanjitp"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2021-09-26"},{"lineNumber":10,"author":{"gitId":"kanjitp"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-09-26"},{"lineNumber":11,"author":{"gitId":"kanjitp"},"content":"import seedu.address.model.participant.exceptions.DuplicateParticipantException;","lastModifiedDate":"2021-09-28"},{"lineNumber":12,"author":{"gitId":"kanjitp"},"content":"import seedu.address.model.participant.exceptions.ParticipantNotFoundException;","lastModifiedDate":"2021-09-28"},{"lineNumber":13,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":14,"author":{"gitId":"kanjitp"},"content":"/**","lastModifiedDate":"2021-09-26"},{"lineNumber":15,"author":{"gitId":"XXJJXJ"},"content":" * A list of participants that enforces uniqueness between its elements and does not allow nulls.","lastModifiedDate":"2021-09-28"},{"lineNumber":16,"author":{"gitId":"kanjitp"},"content":" * A participant is considered unique by comparing using {@code Participant#isSameParticipant(Participant)}.","lastModifiedDate":"2021-09-28"},{"lineNumber":17,"author":{"gitId":"kanjitp"},"content":" * As such, adding and updating of participants uses Participant#isSameParticipant(Participant) for equality so","lastModifiedDate":"2021-09-28"},{"lineNumber":18,"author":{"gitId":"kanjitp"},"content":" * as to ensure that the participant being added or updated is unique in terms of identity in the","lastModifiedDate":"2021-09-28"},{"lineNumber":19,"author":{"gitId":"kanjitp"},"content":" * UniqueParticipantList. However, the removal of a participant uses Participant#equals(Object) so","lastModifiedDate":"2021-09-28"},{"lineNumber":20,"author":{"gitId":"XXJJXJ"},"content":" * as to ensure that the participant with exactly the same fields will be removed.","lastModifiedDate":"2021-09-28"},{"lineNumber":21,"author":{"gitId":"kanjitp"},"content":" *","lastModifiedDate":"2021-09-26"},{"lineNumber":22,"author":{"gitId":"kanjitp"},"content":" * Supports a minimal set of list operations.","lastModifiedDate":"2021-09-26"},{"lineNumber":23,"author":{"gitId":"kanjitp"},"content":" *","lastModifiedDate":"2021-09-26"},{"lineNumber":24,"author":{"gitId":"kanjitp"},"content":" * @see Participant#isSameParticipant(Participant)","lastModifiedDate":"2021-09-26"},{"lineNumber":25,"author":{"gitId":"kanjitp"},"content":" */","lastModifiedDate":"2021-09-26"},{"lineNumber":26,"author":{"gitId":"kanjitp"},"content":"public class UniqueParticipantList implements Iterable\u003cParticipant\u003e {","lastModifiedDate":"2021-09-26"},{"lineNumber":27,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":28,"author":{"gitId":"kanjitp"},"content":"    private final ObservableList\u003cParticipant\u003e internalList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2021-09-26"},{"lineNumber":29,"author":{"gitId":"kanjitp"},"content":"    private final ObservableList\u003cParticipant\u003e internalUnmodifiableList \u003d","lastModifiedDate":"2021-09-26"},{"lineNumber":30,"author":{"gitId":"kanjitp"},"content":"            FXCollections.unmodifiableObservableList(internalList);","lastModifiedDate":"2021-09-26"},{"lineNumber":31,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":32,"author":{"gitId":"kanjitp"},"content":"    /**","lastModifiedDate":"2021-09-26"},{"lineNumber":33,"author":{"gitId":"XXJJXJ"},"content":"     * Returns true if the list contains an equivalent participant as the given argument.","lastModifiedDate":"2021-09-28"},{"lineNumber":34,"author":{"gitId":"kanjitp"},"content":"     */","lastModifiedDate":"2021-09-26"},{"lineNumber":35,"author":{"gitId":"kanjitp"},"content":"    public boolean contains(Participant toCheck) {","lastModifiedDate":"2021-09-26"},{"lineNumber":36,"author":{"gitId":"kanjitp"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2021-09-26"},{"lineNumber":37,"author":{"gitId":"kanjitp"},"content":"        return internalList.stream().anyMatch(toCheck::isSameParticipant);","lastModifiedDate":"2021-09-26"},{"lineNumber":38,"author":{"gitId":"kanjitp"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":39,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":40,"author":{"gitId":"kanjitp"},"content":"    /**","lastModifiedDate":"2021-09-26"},{"lineNumber":41,"author":{"gitId":"XXJJXJ"},"content":"     * Adds a participant to the list.","lastModifiedDate":"2021-09-28"},{"lineNumber":42,"author":{"gitId":"XXJJXJ"},"content":"     * The participant must not already exist in the list.","lastModifiedDate":"2021-09-28"},{"lineNumber":43,"author":{"gitId":"kanjitp"},"content":"     */","lastModifiedDate":"2021-09-26"},{"lineNumber":44,"author":{"gitId":"kanjitp"},"content":"    public void add(Participant toAdd) {","lastModifiedDate":"2021-09-26"},{"lineNumber":45,"author":{"gitId":"kanjitp"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2021-09-26"},{"lineNumber":46,"author":{"gitId":"kanjitp"},"content":"        if (contains(toAdd)) {","lastModifiedDate":"2021-09-26"},{"lineNumber":47,"author":{"gitId":"kanjitp"},"content":"            throw new DuplicateParticipantException();","lastModifiedDate":"2021-09-28"},{"lineNumber":48,"author":{"gitId":"kanjitp"},"content":"        }","lastModifiedDate":"2021-09-26"},{"lineNumber":49,"author":{"gitId":"kanjitp"},"content":"        internalList.add(toAdd);","lastModifiedDate":"2021-09-26"},{"lineNumber":50,"author":{"gitId":"kanjitp"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":51,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":52,"author":{"gitId":"kanjitp"},"content":"    /**","lastModifiedDate":"2021-09-26"},{"lineNumber":53,"author":{"gitId":"XXJJXJ"},"content":"     * Replaces the participant {@code target} in the list with {@code editedParticipant}.","lastModifiedDate":"2021-09-28"},{"lineNumber":54,"author":{"gitId":"kanjitp"},"content":"     * {@code target} must exist in the list.","lastModifiedDate":"2021-09-26"},{"lineNumber":55,"author":{"gitId":"kanjitp"},"content":"     * The participant identity of {@code editedParticipant} must not be the same","lastModifiedDate":"2021-09-28"},{"lineNumber":56,"author":{"gitId":"kanjitp"},"content":"     * as another existing participant in the list.","lastModifiedDate":"2021-09-28"},{"lineNumber":57,"author":{"gitId":"kanjitp"},"content":"     */","lastModifiedDate":"2021-09-26"},{"lineNumber":58,"author":{"gitId":"kanjitp"},"content":"    public void setParticipant(Participant target, Participant editedParticipant) {","lastModifiedDate":"2021-09-26"},{"lineNumber":59,"author":{"gitId":"kanjitp"},"content":"        requireAllNonNull(target, editedParticipant);","lastModifiedDate":"2021-09-26"},{"lineNumber":60,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":61,"author":{"gitId":"kanjitp"},"content":"        int index \u003d internalList.indexOf(target);","lastModifiedDate":"2021-09-26"},{"lineNumber":62,"author":{"gitId":"kanjitp"},"content":"        if (index \u003d\u003d -1) {","lastModifiedDate":"2021-09-26"},{"lineNumber":63,"author":{"gitId":"kanjitp"},"content":"            throw new ParticipantNotFoundException();","lastModifiedDate":"2021-09-28"},{"lineNumber":64,"author":{"gitId":"kanjitp"},"content":"        }","lastModifiedDate":"2021-09-26"},{"lineNumber":65,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":66,"author":{"gitId":"kanjitp"},"content":"        if (!target.isSameParticipant(editedParticipant) \u0026\u0026 contains(editedParticipant)) {","lastModifiedDate":"2021-09-26"},{"lineNumber":67,"author":{"gitId":"kanjitp"},"content":"            throw new DuplicateParticipantException();","lastModifiedDate":"2021-09-28"},{"lineNumber":68,"author":{"gitId":"kanjitp"},"content":"        }","lastModifiedDate":"2021-09-26"},{"lineNumber":69,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":70,"author":{"gitId":"kanjitp"},"content":"        internalList.set(index, editedParticipant);","lastModifiedDate":"2021-09-26"},{"lineNumber":71,"author":{"gitId":"kanjitp"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":72,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":73,"author":{"gitId":"kanjitp"},"content":"    /**","lastModifiedDate":"2021-09-26"},{"lineNumber":74,"author":{"gitId":"XXJJXJ"},"content":"     * Removes the equivalent participant from the list.","lastModifiedDate":"2021-09-28"},{"lineNumber":75,"author":{"gitId":"XXJJXJ"},"content":"     * The participant must exist in the list.","lastModifiedDate":"2021-09-28"},{"lineNumber":76,"author":{"gitId":"kanjitp"},"content":"     */","lastModifiedDate":"2021-09-26"},{"lineNumber":77,"author":{"gitId":"kanjitp"},"content":"    public void remove(Participant toRemove) {","lastModifiedDate":"2021-09-26"},{"lineNumber":78,"author":{"gitId":"kanjitp"},"content":"        requireNonNull(toRemove);","lastModifiedDate":"2021-09-26"},{"lineNumber":79,"author":{"gitId":"kanjitp"},"content":"        if (!internalList.remove(toRemove)) {","lastModifiedDate":"2021-09-26"},{"lineNumber":80,"author":{"gitId":"kanjitp"},"content":"            throw new ParticipantNotFoundException();","lastModifiedDate":"2021-09-28"},{"lineNumber":81,"author":{"gitId":"kanjitp"},"content":"        }","lastModifiedDate":"2021-09-26"},{"lineNumber":82,"author":{"gitId":"kanjitp"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":83,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":84,"author":{"gitId":"kanjitp"},"content":"    public void setParticipants(UniqueParticipantList replacement) {","lastModifiedDate":"2021-09-26"},{"lineNumber":85,"author":{"gitId":"kanjitp"},"content":"        requireNonNull(replacement);","lastModifiedDate":"2021-09-26"},{"lineNumber":86,"author":{"gitId":"kanjitp"},"content":"        internalList.setAll(replacement.internalList);","lastModifiedDate":"2021-09-26"},{"lineNumber":87,"author":{"gitId":"kanjitp"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":88,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":89,"author":{"gitId":"kanjitp"},"content":"    /**","lastModifiedDate":"2021-09-26"},{"lineNumber":90,"author":{"gitId":"XXJJXJ"},"content":"     * Replaces the contents of this list with {@code participants}.","lastModifiedDate":"2021-09-28"},{"lineNumber":91,"author":{"gitId":"XXJJXJ"},"content":"     * {@code participants} must not contain duplicate participants.","lastModifiedDate":"2021-09-28"},{"lineNumber":92,"author":{"gitId":"kanjitp"},"content":"     */","lastModifiedDate":"2021-09-26"},{"lineNumber":93,"author":{"gitId":"kanjitp"},"content":"    public void setParticipants(List\u003cParticipant\u003e participants) {","lastModifiedDate":"2021-09-26"},{"lineNumber":94,"author":{"gitId":"kanjitp"},"content":"        requireAllNonNull(participants);","lastModifiedDate":"2021-09-26"},{"lineNumber":95,"author":{"gitId":"kanjitp"},"content":"        if (!participantsAreUnique(participants)) {","lastModifiedDate":"2021-09-26"},{"lineNumber":96,"author":{"gitId":"kanjitp"},"content":"            throw new DuplicateParticipantException();","lastModifiedDate":"2021-09-28"},{"lineNumber":97,"author":{"gitId":"kanjitp"},"content":"        }","lastModifiedDate":"2021-09-26"},{"lineNumber":98,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":99,"author":{"gitId":"kanjitp"},"content":"        internalList.setAll(participants);","lastModifiedDate":"2021-09-26"},{"lineNumber":100,"author":{"gitId":"kanjitp"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":101,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":102,"author":{"gitId":"kanjitp"},"content":"    /**","lastModifiedDate":"2021-09-26"},{"lineNumber":103,"author":{"gitId":"kanjitp"},"content":"     * Returns the backing list as an unmodifiable {@code ObservableList}.","lastModifiedDate":"2021-09-26"},{"lineNumber":104,"author":{"gitId":"kanjitp"},"content":"     */","lastModifiedDate":"2021-09-26"},{"lineNumber":105,"author":{"gitId":"kanjitp"},"content":"    public ObservableList\u003cParticipant\u003e asUnmodifiableObservableList() {","lastModifiedDate":"2021-09-26"},{"lineNumber":106,"author":{"gitId":"kanjitp"},"content":"        return internalUnmodifiableList;","lastModifiedDate":"2021-09-26"},{"lineNumber":107,"author":{"gitId":"kanjitp"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":108,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":109,"author":{"gitId":"kanjitp"},"content":"    @Override","lastModifiedDate":"2021-09-26"},{"lineNumber":110,"author":{"gitId":"kanjitp"},"content":"    public Iterator\u003cParticipant\u003e iterator() {","lastModifiedDate":"2021-09-26"},{"lineNumber":111,"author":{"gitId":"kanjitp"},"content":"        return internalList.iterator();","lastModifiedDate":"2021-09-26"},{"lineNumber":112,"author":{"gitId":"kanjitp"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":113,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":114,"author":{"gitId":"kanjitp"},"content":"    @Override","lastModifiedDate":"2021-09-26"},{"lineNumber":115,"author":{"gitId":"kanjitp"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-09-26"},{"lineNumber":116,"author":{"gitId":"kanjitp"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-09-26"},{"lineNumber":117,"author":{"gitId":"kanjitp"},"content":"            || (other instanceof UniqueParticipantList// instanceof handles nulls","lastModifiedDate":"2021-09-26"},{"lineNumber":118,"author":{"gitId":"kanjitp"},"content":"            \u0026\u0026 internalList.equals(((UniqueParticipantList) other).internalList));","lastModifiedDate":"2021-09-26"},{"lineNumber":119,"author":{"gitId":"kanjitp"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":120,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":121,"author":{"gitId":"kanjitp"},"content":"    @Override","lastModifiedDate":"2021-09-26"},{"lineNumber":122,"author":{"gitId":"kanjitp"},"content":"    public int hashCode() {","lastModifiedDate":"2021-09-26"},{"lineNumber":123,"author":{"gitId":"kanjitp"},"content":"        return internalList.hashCode();","lastModifiedDate":"2021-09-26"},{"lineNumber":124,"author":{"gitId":"kanjitp"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":125,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":126,"author":{"gitId":"kanjitp"},"content":"    /**","lastModifiedDate":"2021-09-26"},{"lineNumber":127,"author":{"gitId":"XXJJXJ"},"content":"     * Returns true if {@code participants} contains only unique participants.","lastModifiedDate":"2021-09-28"},{"lineNumber":128,"author":{"gitId":"kanjitp"},"content":"     */","lastModifiedDate":"2021-09-26"},{"lineNumber":129,"author":{"gitId":"kanjitp"},"content":"    private boolean participantsAreUnique(List\u003cParticipant\u003e participants) {","lastModifiedDate":"2021-09-26"},{"lineNumber":130,"author":{"gitId":"kanjitp"},"content":"        for (int i \u003d 0; i \u003c participants.size() - 1; i++) {","lastModifiedDate":"2021-09-26"},{"lineNumber":131,"author":{"gitId":"kanjitp"},"content":"            for (int j \u003d i + 1; j \u003c participants.size(); j++) {","lastModifiedDate":"2021-09-26"},{"lineNumber":132,"author":{"gitId":"kanjitp"},"content":"                if (participants.get(i).isSameParticipant(participants.get(j))) {","lastModifiedDate":"2021-09-26"},{"lineNumber":133,"author":{"gitId":"kanjitp"},"content":"                    return false;","lastModifiedDate":"2021-09-26"},{"lineNumber":134,"author":{"gitId":"kanjitp"},"content":"                }","lastModifiedDate":"2021-09-26"},{"lineNumber":135,"author":{"gitId":"kanjitp"},"content":"            }","lastModifiedDate":"2021-09-26"},{"lineNumber":136,"author":{"gitId":"kanjitp"},"content":"        }","lastModifiedDate":"2021-09-26"},{"lineNumber":137,"author":{"gitId":"kanjitp"},"content":"        return true;","lastModifiedDate":"2021-09-26"},{"lineNumber":138,"author":{"gitId":"kanjitp"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":139,"author":{"gitId":"kanjitp"},"content":"}","lastModifiedDate":"2021-09-26"}],"authorContributionMap":{"XXJJXJ":11,"kanjitp":128}},{"path":"src/main/java/seedu/address/model/participant/exceptions/DuplicateParticipantException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kanjitp"},"content":"package seedu.address.model.participant.exceptions;","lastModifiedDate":"2021-09-28"},{"lineNumber":2,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":3,"author":{"gitId":"kanjitp"},"content":"/**","lastModifiedDate":"2021-09-28"},{"lineNumber":4,"author":{"gitId":"kanjitp"},"content":" * Signals that the operation will result in duplicate Participants (Participants are considered duplicates if they","lastModifiedDate":"2021-09-28"},{"lineNumber":5,"author":{"gitId":"kanjitp"},"content":" * have the same identity).","lastModifiedDate":"2021-09-28"},{"lineNumber":6,"author":{"gitId":"kanjitp"},"content":" */","lastModifiedDate":"2021-09-28"},{"lineNumber":7,"author":{"gitId":"kanjitp"},"content":"public class DuplicateParticipantException extends RuntimeException {","lastModifiedDate":"2021-09-28"},{"lineNumber":8,"author":{"gitId":"kanjitp"},"content":"    public DuplicateParticipantException() {","lastModifiedDate":"2021-09-28"},{"lineNumber":9,"author":{"gitId":"kanjitp"},"content":"        super(\"Operation would result in duplicate participants\");","lastModifiedDate":"2021-09-28"},{"lineNumber":10,"author":{"gitId":"kanjitp"},"content":"    }","lastModifiedDate":"2021-09-28"},{"lineNumber":11,"author":{"gitId":"kanjitp"},"content":"}","lastModifiedDate":"2021-09-28"}],"authorContributionMap":{"kanjitp":11}},{"path":"src/main/java/seedu/address/model/participant/exceptions/ParticipantNotFoundException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kanjitp"},"content":"package seedu.address.model.participant.exceptions;","lastModifiedDate":"2021-09-28"},{"lineNumber":2,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":3,"author":{"gitId":"kanjitp"},"content":"/**","lastModifiedDate":"2021-09-28"},{"lineNumber":4,"author":{"gitId":"kanjitp"},"content":" * Signals that the operation is unable to find the specified Participant.","lastModifiedDate":"2021-09-29"},{"lineNumber":5,"author":{"gitId":"kanjitp"},"content":" */","lastModifiedDate":"2021-09-28"},{"lineNumber":6,"author":{"gitId":"kanjitp"},"content":"public class ParticipantNotFoundException extends RuntimeException {}","lastModifiedDate":"2021-09-28"}],"authorContributionMap":{"kanjitp":6}},{"path":"src/main/java/seedu/address/model/person/Address.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2016-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a Person\u0027s address in the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidAddress(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Address {","lastModifiedDate":"2016-09-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Addresses can take any values, and it should not be blank\";","lastModifiedDate":"2018-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2017-01-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * The first character of the address must not be a whitespace,","lastModifiedDate":"2017-01-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2017-01-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"[^\\\\s].*\";","lastModifiedDate":"2018-09-22"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"ntwbruce"},"content":"    private final String value;","lastModifiedDate":"2021-10-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Constructs an {@code Address}.","lastModifiedDate":"2017-05-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * @param address A valid address.","lastModifiedDate":"2017-05-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public Address(String address) {","lastModifiedDate":"2017-05-30"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        requireNonNull(address);","lastModifiedDate":"2017-05-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        checkArgument(isValidAddress(address), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        value \u003d address;","lastModifiedDate":"2018-08-14"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid email.","lastModifiedDate":"2018-04-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public static boolean isValidAddress(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return value;","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"                || (other instanceof Address // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"                \u0026\u0026 value.equals(((Address) other).value)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        return value.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"ntwbruce":1,"-":56}},{"path":"src/main/java/seedu/address/model/person/Email.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2016-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a Person\u0027s email in the address book.","lastModifiedDate":"2018-02-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidEmail(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Email {","lastModifiedDate":"2016-09-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private static final String SPECIAL_CHARACTERS \u003d \"+_.-\";","lastModifiedDate":"2021-07-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Emails should be of the format local-part@domain \"","lastModifiedDate":"2018-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"            + \"and adhere to the following constraints:\\n\"","lastModifiedDate":"2018-02-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"            + \"1. The local-part should only contain alphanumeric characters and these special characters, excluding \"","lastModifiedDate":"2018-02-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"            + \"the parentheses, (\" + SPECIAL_CHARACTERS + \"). The local-part may not start or end with any special \"","lastModifiedDate":"2021-07-20"},{"lineNumber":17,"author":{"gitId":"-"},"content":"            + \"characters.\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":18,"author":{"gitId":"-"},"content":"            + \"2. This is followed by a \u0027@\u0027 and then a domain name. The domain name is made up of domain labels \"","lastModifiedDate":"2021-07-20"},{"lineNumber":19,"author":{"gitId":"-"},"content":"            + \"separated by periods.\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            + \"The domain name must:\\n\"","lastModifiedDate":"2018-02-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            + \"    - end with a domain label at least 2 characters long\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            + \"    - have each domain label start and end with alphanumeric characters\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            + \"    - have each domain label consist of alphanumeric characters, separated only by hyphens, if any.\";","lastModifiedDate":"2021-07-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    // alphanumeric and special characters","lastModifiedDate":"2018-02-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static final String ALPHANUMERIC_NO_UNDERSCORE \u003d \"[^\\\\W_]+\"; // alphanumeric characters except underscore","lastModifiedDate":"2021-07-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String LOCAL_PART_REGEX \u003d \"^\" + ALPHANUMERIC_NO_UNDERSCORE + \"([\" + SPECIAL_CHARACTERS + \"]\"","lastModifiedDate":"2021-07-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            + ALPHANUMERIC_NO_UNDERSCORE + \")*\";","lastModifiedDate":"2021-07-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final String DOMAIN_PART_REGEX \u003d ALPHANUMERIC_NO_UNDERSCORE","lastModifiedDate":"2021-07-20"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            + \"(-\" + ALPHANUMERIC_NO_UNDERSCORE + \")*\";","lastModifiedDate":"2021-07-20"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private static final String DOMAIN_LAST_PART_REGEX \u003d \"(\" + DOMAIN_PART_REGEX + \"){2,}$\"; // At least two chars","lastModifiedDate":"2021-07-20"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final String DOMAIN_REGEX \u003d \"(\" + DOMAIN_PART_REGEX + \"\\\\.)*\" + DOMAIN_LAST_PART_REGEX;","lastModifiedDate":"2021-07-20"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d LOCAL_PART_REGEX + \"@\" + DOMAIN_REGEX;","lastModifiedDate":"2021-07-20"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"ntwbruce"},"content":"    private final String value;","lastModifiedDate":"2021-10-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Constructs an {@code Email}.","lastModifiedDate":"2017-05-30"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * @param email A valid email address.","lastModifiedDate":"2017-05-30"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public Email(String email) {","lastModifiedDate":"2017-05-30"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        requireNonNull(email);","lastModifiedDate":"2017-05-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        checkArgument(isValidEmail(email), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        value \u003d email;","lastModifiedDate":"2018-08-14"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Returns if a given string is a valid email.","lastModifiedDate":"2018-04-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public static boolean isValidEmail(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        return value;","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"                || (other instanceof Email // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"                \u0026\u0026 value.equals(((Email) other).value)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return value.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"ntwbruce":1,"-":70}},{"path":"src/main/java/seedu/address/model/person/Name.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2016-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a Person\u0027s name in the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidName(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Name {","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2018-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"            \"Names should only contain alphanumeric characters and spaces, and it should not be blank\";","lastModifiedDate":"2018-04-04"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2017-01-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * The first character of the address must not be a whitespace,","lastModifiedDate":"2017-01-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2017-01-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"[\\\\p{Alnum}][\\\\p{Alnum} ]*\";","lastModifiedDate":"2018-09-22"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"ntwbruce"},"content":"    private final String fullName;","lastModifiedDate":"2021-10-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Constructs a {@code Name}.","lastModifiedDate":"2017-05-30"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * @param name A valid name.","lastModifiedDate":"2017-05-30"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public Name(String name) {","lastModifiedDate":"2017-05-30"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        checkArgument(isValidName(name), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        fullName \u003d name;","lastModifiedDate":"2018-08-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid name.","lastModifiedDate":"2018-04-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static boolean isValidName(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return fullName;","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"                || (other instanceof Name // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"                \u0026\u0026 fullName.equals(((Name) other).fullName)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        return fullName.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"ntwbruce":1,"-":58}},{"path":"src/main/java/seedu/address/model/person/Person.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2016-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2017-05-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-03-07"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-03-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * Represents a Person in the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Guarantees: details are present and not null, field values are validated, immutable.","lastModifiedDate":"2017-12-20"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class Person {","lastModifiedDate":"2018-01-10"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    // Identity fields","lastModifiedDate":"2018-04-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private final Name name;","lastModifiedDate":"2017-12-20"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private final Phone phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private final Email email;","lastModifiedDate":"2017-12-20"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    // Data fields","lastModifiedDate":"2018-04-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private final Address address;","lastModifiedDate":"2018-04-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private final Set\u003cTag\u003e tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2018-03-26"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public Person(Name name, Phone phone, Email email, Address address, Set\u003cTag\u003e tags) {","lastModifiedDate":"2017-03-14"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        requireAllNonNull(name, phone, email, address, tags);","lastModifiedDate":"2017-05-19"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2017-12-20"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        this.email \u003d email;","lastModifiedDate":"2017-12-20"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        this.address \u003d address;","lastModifiedDate":"2017-12-20"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        this.tags.addAll(tags);","lastModifiedDate":"2018-03-26"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public Name getName() {","lastModifiedDate":"2017-07-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        return name;","lastModifiedDate":"2017-12-20"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"ntwbruce"},"content":"    public String getFullName() {","lastModifiedDate":"2021-10-03"},{"lineNumber":44,"author":{"gitId":"ntwbruce"},"content":"        return name.toString();","lastModifiedDate":"2021-10-03"},{"lineNumber":45,"author":{"gitId":"ntwbruce"},"content":"    }","lastModifiedDate":"2021-10-03"},{"lineNumber":46,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public Phone getPhone() {","lastModifiedDate":"2017-07-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        return phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"ntwbruce"},"content":"    public String getPhoneValue() {","lastModifiedDate":"2021-10-03"},{"lineNumber":52,"author":{"gitId":"ntwbruce"},"content":"        return phone.toString();","lastModifiedDate":"2021-10-03"},{"lineNumber":53,"author":{"gitId":"ntwbruce"},"content":"    }","lastModifiedDate":"2021-10-03"},{"lineNumber":54,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public Email getEmail() {","lastModifiedDate":"2017-07-12"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        return email;","lastModifiedDate":"2017-12-20"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"ntwbruce"},"content":"    public String getEmailValue() {","lastModifiedDate":"2021-10-03"},{"lineNumber":60,"author":{"gitId":"ntwbruce"},"content":"        return email.toString();","lastModifiedDate":"2021-10-03"},{"lineNumber":61,"author":{"gitId":"ntwbruce"},"content":"    }","lastModifiedDate":"2021-10-03"},{"lineNumber":62,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public Address getAddress() {","lastModifiedDate":"2017-07-12"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        return address;","lastModifiedDate":"2017-12-20"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-12"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12"},{"lineNumber":67,"author":{"gitId":"ntwbruce"},"content":"    public String getAddressValue() {","lastModifiedDate":"2021-10-03"},{"lineNumber":68,"author":{"gitId":"ntwbruce"},"content":"        return address.toString();","lastModifiedDate":"2021-10-03"},{"lineNumber":69,"author":{"gitId":"ntwbruce"},"content":"    }","lastModifiedDate":"2021-10-03"},{"lineNumber":70,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-07"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * Returns an immutable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2017-03-07"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * if modification is attempted.","lastModifiedDate":"2017-03-07"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-07"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public Set\u003cTag\u003e getTags() {","lastModifiedDate":"2017-03-07"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        return Collections.unmodifiableSet(tags);","lastModifiedDate":"2018-03-26"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * Returns true if both persons have the same name.","lastModifiedDate":"2020-12-18"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * This defines a weaker notion of equality between two persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public boolean isSamePerson(Person otherPerson) {","lastModifiedDate":"2018-04-19"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        if (otherPerson \u003d\u003d this) {","lastModifiedDate":"2018-04-19"},{"lineNumber":85,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-04-19"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        return otherPerson !\u003d null","lastModifiedDate":"2018-04-19"},{"lineNumber":89,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherPerson.getName().equals(getName());","lastModifiedDate":"2020-12-18"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * Returns true if both persons have the same identity and data fields.","lastModifiedDate":"2018-04-19"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     * This defines a stronger notion of equality between two persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-01-10"},{"lineNumber":99,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-01-10"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        if (!(other instanceof Person)) {","lastModifiedDate":"2018-01-10"},{"lineNumber":103,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-01-10"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        Person otherPerson \u003d (Person) other;","lastModifiedDate":"2018-01-10"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        return otherPerson.getName().equals(getName())","lastModifiedDate":"2018-08-14"},{"lineNumber":108,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherPerson.getPhone().equals(getPhone())","lastModifiedDate":"2018-08-14"},{"lineNumber":109,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherPerson.getEmail().equals(getEmail())","lastModifiedDate":"2018-08-14"},{"lineNumber":110,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherPerson.getAddress().equals(getAddress())","lastModifiedDate":"2018-08-14"},{"lineNumber":111,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherPerson.getTags().equals(getTags());","lastModifiedDate":"2018-08-14"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        // use this method for custom fields hashing instead of implementing your own","lastModifiedDate":"2016-08-24"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        return Objects.hash(name, phone, email, address, tags);","lastModifiedDate":"2016-08-24"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2018-01-10"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        builder.append(getName())","lastModifiedDate":"2018-01-10"},{"lineNumber":124,"author":{"gitId":"-"},"content":"                .append(\"; Phone: \")","lastModifiedDate":"2020-12-11"},{"lineNumber":125,"author":{"gitId":"-"},"content":"                .append(getPhone())","lastModifiedDate":"2018-01-10"},{"lineNumber":126,"author":{"gitId":"-"},"content":"                .append(\"; Email: \")","lastModifiedDate":"2020-12-11"},{"lineNumber":127,"author":{"gitId":"-"},"content":"                .append(getEmail())","lastModifiedDate":"2018-01-10"},{"lineNumber":128,"author":{"gitId":"-"},"content":"                .append(\"; Address: \")","lastModifiedDate":"2020-12-11"},{"lineNumber":129,"author":{"gitId":"-"},"content":"                .append(getAddress());","lastModifiedDate":"2020-12-11"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-12-11"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e tags \u003d getTags();","lastModifiedDate":"2020-12-11"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        if (!tags.isEmpty()) {","lastModifiedDate":"2020-12-11"},{"lineNumber":133,"author":{"gitId":"-"},"content":"            builder.append(\"; Tags: \");","lastModifiedDate":"2020-12-11"},{"lineNumber":134,"author":{"gitId":"-"},"content":"            tags.forEach(builder::append);","lastModifiedDate":"2020-12-11"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-12-11"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        return builder.toString();","lastModifiedDate":"2018-01-10"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":139,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"ntwbruce":16,"-":123}},{"path":"src/main/java/seedu/address/model/person/Phone.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2016-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a Person\u0027s phone number in the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidPhone(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Phone {","lastModifiedDate":"2016-09-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2018-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"            \"Phone numbers should only contain numbers, and it should be at least 3 digits long\";","lastModifiedDate":"2018-04-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"\\\\d{3,}\";","lastModifiedDate":"2018-09-22"},{"lineNumber":16,"author":{"gitId":"ntwbruce"},"content":"    private final String value;","lastModifiedDate":"2021-10-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * Constructs a {@code Phone}.","lastModifiedDate":"2017-05-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * @param phone A valid phone number.","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public Phone(String phone) {","lastModifiedDate":"2017-05-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        requireNonNull(phone);","lastModifiedDate":"2017-05-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        checkArgument(isValidPhone(phone), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        value \u003d phone;","lastModifiedDate":"2018-08-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid phone number.","lastModifiedDate":"2018-04-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static boolean isValidPhone(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return value;","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"                || (other instanceof Phone // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"                \u0026\u0026 value.equals(((Phone) other).value)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        return value.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"ntwbruce":1,"-":52}},{"path":"src/main/java/seedu/address/model/tag/Tag.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.tag;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a Tag in the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; name is valid as declared in {@link #isValidTagName(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Tag {","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Tags names should be alphanumeric\";","lastModifiedDate":"2018-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"\\\\p{Alnum}+\";","lastModifiedDate":"2018-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"ntwbruce"},"content":"    private final String tagName;","lastModifiedDate":"2021-10-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * Constructs a {@code Tag}.","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * @param tagName A valid tag name.","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public Tag(String tagName) {","lastModifiedDate":"2017-05-30"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        requireNonNull(tagName);","lastModifiedDate":"2017-05-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        checkArgument(isValidTagName(tagName), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        this.tagName \u003d tagName;","lastModifiedDate":"2017-05-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid tag name.","lastModifiedDate":"2016-09-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static boolean isValidTagName(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"ntwbruce"},"content":"    public String getTagName() {","lastModifiedDate":"2021-10-03"},{"lineNumber":36,"author":{"gitId":"ntwbruce"},"content":"        return tagName;","lastModifiedDate":"2021-10-03"},{"lineNumber":37,"author":{"gitId":"ntwbruce"},"content":"    }","lastModifiedDate":"2021-10-03"},{"lineNumber":38,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"                || (other instanceof Tag // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"                \u0026\u0026 tagName.equals(((Tag) other).tagName)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        return tagName.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Format state as text for viewing.","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        return \u0027[\u0027 + tagName + \u0027]\u0027;","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"ntwbruce":5,"-":53}},{"path":"src/main/java/seedu/address/model/util/SampleDataUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.util;","lastModifiedDate":"2016-12-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":4,"author":{"gitId":"kanjitp"},"content":"import java.util.List;","lastModifiedDate":"2021-09-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-01-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-12-20"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2016-12-20"},{"lineNumber":10,"author":{"gitId":"XXJJXJ"},"content":"import seedu.address.model.event.Event;","lastModifiedDate":"2021-09-18"},{"lineNumber":11,"author":{"gitId":"XXJJXJ"},"content":"import seedu.address.model.event.EventDate;","lastModifiedDate":"2021-09-18"},{"lineNumber":12,"author":{"gitId":"XXJJXJ"},"content":"import seedu.address.model.event.EventName;","lastModifiedDate":"2021-09-18"},{"lineNumber":13,"author":{"gitId":"XXJJXJ"},"content":"import seedu.address.model.event.EventTime;","lastModifiedDate":"2021-09-18"},{"lineNumber":14,"author":{"gitId":"kanjitp"},"content":"import seedu.address.model.nextofkin.NextOfKin;","lastModifiedDate":"2021-09-26"},{"lineNumber":15,"author":{"gitId":"kanjitp"},"content":"import seedu.address.model.participant.BirthDate;","lastModifiedDate":"2021-09-26"},{"lineNumber":16,"author":{"gitId":"kanjitp"},"content":"import seedu.address.model.participant.Note;","lastModifiedDate":"2021-09-26"},{"lineNumber":17,"author":{"gitId":"kanjitp"},"content":"import seedu.address.model.participant.Participant;","lastModifiedDate":"2021-09-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2016-12-20"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2016-12-20"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2016-12-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2016-12-20"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-14"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":25,"author":{"gitId":"-"},"content":" * Contains utility methods for populating {@code AddressBook} with sample data.","lastModifiedDate":"2017-08-16"},{"lineNumber":26,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":27,"author":{"gitId":"-"},"content":"public class SampleDataUtil {","lastModifiedDate":"2016-12-20"},{"lineNumber":28,"author":{"gitId":"kanjitp"},"content":"    public static Participant[] getSampleParticipants() {","lastModifiedDate":"2021-09-26"},{"lineNumber":29,"author":{"gitId":"kanjitp"},"content":"        return new Participant[]{","lastModifiedDate":"2021-09-26"},{"lineNumber":30,"author":{"gitId":"kanjitp"},"content":"            new Participant(new Name(\"Alex Yeoh\"), new Phone(\"87438807\"), new Email(\"alexyeoh@example.com\"),","lastModifiedDate":"2021-09-26"},{"lineNumber":31,"author":{"gitId":"-"},"content":"                new Address(\"Blk 30 Geylang Street 29, #06-40\"),","lastModifiedDate":"2016-12-20"},{"lineNumber":32,"author":{"gitId":"kanjitp"},"content":"                getTagSet(\"friends\"), BirthDate.of(2000, 8, 2),","lastModifiedDate":"2021-09-26"},{"lineNumber":33,"author":{"gitId":"kanjitp"},"content":"                getNoteSet(new Note(\"Vegetarian\", Note.Importance.VERY_HIGH)),","lastModifiedDate":"2021-09-26"},{"lineNumber":34,"author":{"gitId":"kanjitp"},"content":"                List.of(new NextOfKin(new Name(\"Janette Yeoh\"), new Phone(\"93822312\"), new Tag(\"Spouse\")))),","lastModifiedDate":"2021-09-26"},{"lineNumber":35,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":36,"author":{"gitId":"kanjitp"},"content":"            new Participant(new Name(\"Bernice Yu\"), new Phone(\"99272758\"), new Email(\"berniceyu@example.com\"),","lastModifiedDate":"2021-09-26"},{"lineNumber":37,"author":{"gitId":"-"},"content":"                new Address(\"Blk 30 Lorong 3 Serangoon Gardens, #07-18\"),","lastModifiedDate":"2016-12-20"},{"lineNumber":38,"author":{"gitId":"kanjitp"},"content":"                getTagSet(\"colleagues\", \"friends\"), BirthDate.of(1970, 4, 2),","lastModifiedDate":"2021-09-26"},{"lineNumber":39,"author":{"gitId":"kanjitp"},"content":"                getNoteSet(new Note(\"Allergic to Alcohol\", Note.Importance.VERY_HIGH)),","lastModifiedDate":"2021-09-26"},{"lineNumber":40,"author":{"gitId":"kanjitp"},"content":"                List.of(new NextOfKin(new Name(\"Bennett Yu\"), new Phone(\"83612412\"), new Tag(\"Parent\")))),","lastModifiedDate":"2021-09-26"},{"lineNumber":41,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":42,"author":{"gitId":"kanjitp"},"content":"            new Participant(new Name(\"Charlotte Oliveiro\"), new Phone(\"93210283\"), new Email(\"charlotte@example.com\"),","lastModifiedDate":"2021-09-26"},{"lineNumber":43,"author":{"gitId":"-"},"content":"                new Address(\"Blk 11 Ang Mo Kio Street 74, #11-04\"),","lastModifiedDate":"2016-12-20"},{"lineNumber":44,"author":{"gitId":"kanjitp"},"content":"                getTagSet(\"neighbours\"), BirthDate.of(1982, 5, 13),","lastModifiedDate":"2021-09-26"},{"lineNumber":45,"author":{"gitId":"kanjitp"},"content":"                getNoteSet(new Note(\"Dislike pepper\", Note.Importance.MEDIUM)),","lastModifiedDate":"2021-09-26"},{"lineNumber":46,"author":{"gitId":"kanjitp"},"content":"                List.of(new NextOfKin(new Name(\"Daniel Pruvos\"), new Phone(\"83460328\"), new Tag(\"Brother\")))),","lastModifiedDate":"2021-09-26"},{"lineNumber":47,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":48,"author":{"gitId":"kanjitp"},"content":"            new Participant(new Name(\"David Li\"), new Phone(\"91031282\"), new Email(\"lidavid@example.com\"),","lastModifiedDate":"2021-09-26"},{"lineNumber":49,"author":{"gitId":"-"},"content":"                new Address(\"Blk 436 Serangoon Gardens Street 26, #16-43\"),","lastModifiedDate":"2016-12-20"},{"lineNumber":50,"author":{"gitId":"kanjitp"},"content":"                getTagSet(\"family\"), BirthDate.of(1999, 2, 2), getNoteSet(new Note(\"Vegetarian\",","lastModifiedDate":"2021-09-26"},{"lineNumber":51,"author":{"gitId":"kanjitp"},"content":"                Note.Importance.VERY_HIGH)),","lastModifiedDate":"2021-09-26"},{"lineNumber":52,"author":{"gitId":"kanjitp"},"content":"                List.of(new NextOfKin(new Name(\"Maria Li\"), new Phone(\"84459923\"), new Tag(\"Girlfriend\")))),","lastModifiedDate":"2021-09-26"},{"lineNumber":53,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":54,"author":{"gitId":"kanjitp"},"content":"            new Participant(new Name(\"Irfan Ibrahim\"), new Phone(\"92492021\"), new Email(\"irfan@example.com\"),","lastModifiedDate":"2021-09-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"                new Address(\"Blk 47 Tampines Street 20, #17-35\"),","lastModifiedDate":"2016-12-20"},{"lineNumber":56,"author":{"gitId":"kanjitp"},"content":"                getTagSet(\"classmates\"), BirthDate.of(2000, 5, 23), getNoteSet(new Note(\"Dislike ill-mannered Person\",","lastModifiedDate":"2021-09-26"},{"lineNumber":57,"author":{"gitId":"kanjitp"},"content":"                Note.Importance.MEDIUM)),","lastModifiedDate":"2021-09-26"},{"lineNumber":58,"author":{"gitId":"kanjitp"},"content":"                List.of(new NextOfKin(new Name(\"Juliet Ibrahim\"), new Phone(\"89345342\"), new Tag(\"Grandparent\")))),","lastModifiedDate":"2021-09-26"},{"lineNumber":59,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":60,"author":{"gitId":"kanjitp"},"content":"            new Participant(new Name(\"Roy Balakrishnan\"), new Phone(\"92624417\"), new Email(\"royb@example.com\"),","lastModifiedDate":"2021-09-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"                new Address(\"Blk 45 Aljunied Street 85, #11-31\"),","lastModifiedDate":"2016-12-20"},{"lineNumber":62,"author":{"gitId":"kanjitp"},"content":"                getTagSet(\"colleagues\"), BirthDate.of(1999, 2, 8),","lastModifiedDate":"2021-09-26"},{"lineNumber":63,"author":{"gitId":"kanjitp"},"content":"                getNoteSet(new Note(\"Excessive attraction to \" + \"Alcohol\",","lastModifiedDate":"2021-09-26"},{"lineNumber":64,"author":{"gitId":"kanjitp"},"content":"                Note.Importance.HIGH)),","lastModifiedDate":"2021-09-26"},{"lineNumber":65,"author":{"gitId":"kanjitp"},"content":"                List.of(new NextOfKin(new Name(\"Rouse Balakrishnan\"), new Phone(\"93822312\"), new Tag(\"Brother\"))))","lastModifiedDate":"2021-09-26"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        };","lastModifiedDate":"2016-12-20"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":69,"author":{"gitId":"XXJJXJ"},"content":"    public static Event[] getSampleEvents() {","lastModifiedDate":"2021-09-18"},{"lineNumber":70,"author":{"gitId":"XXJJXJ"},"content":"        return new Event[]{","lastModifiedDate":"2021-09-18"},{"lineNumber":71,"author":{"gitId":"XXJJXJ"},"content":"            new Event(new EventName(\"240Km Marathon\"), new EventDate(\"2022-08-20\")),","lastModifiedDate":"2021-09-18"},{"lineNumber":72,"author":{"gitId":"XXJJXJ"},"content":"            new Event(new EventName(\"Marathon Commencement\"), new EventDate(\"2022-08-20\"), new EventTime(\"0000\")),","lastModifiedDate":"2021-09-21"},{"lineNumber":73,"author":{"gitId":"XXJJXJ"},"content":"            new Event(new EventName(\"CS2100 Finals\"), new EventDate(\"2021-11-20\"), new EventTime(\"0900\")),","lastModifiedDate":"2021-09-18"},{"lineNumber":74,"author":{"gitId":"XXJJXJ"},"content":"            new Event(new EventName(\"CS2103T Submission\"), new EventDate(\"2021-09-30\")),","lastModifiedDate":"2021-09-18"},{"lineNumber":75,"author":{"gitId":"XXJJXJ"},"content":"            new Event(new EventName(\"End of Recess Week\"), new EventDate(\"2021-09-26\"), new EventTime(\"2359\")),","lastModifiedDate":"2021-09-18"},{"lineNumber":76,"author":{"gitId":"XXJJXJ"},"content":"            new Event(new EventName(\"Recess Week\"), new EventDate(\"2021-09-20\"), new EventTime(\"0000\")),","lastModifiedDate":"2021-09-18"},{"lineNumber":77,"author":{"gitId":"XXJJXJ"},"content":"            new Event(new EventName(\"Dinner\"), new EventDate(\"2021-09-21\"), new EventTime(\"2100\")),","lastModifiedDate":"2021-09-18"},{"lineNumber":78,"author":{"gitId":"XXJJXJ"},"content":"            new Event(new EventName(\"Lunch\"), new EventDate(\"2021-09-21\"), new EventTime(\"1300\")),","lastModifiedDate":"2021-09-18"},{"lineNumber":79,"author":{"gitId":"XXJJXJ"},"content":"            new Event(new EventName(\"BreakFast\"), new EventDate(\"2021-09-21\"), new EventTime(\"0800\"))","lastModifiedDate":"2021-09-18"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        };","lastModifiedDate":"2021-09-18"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public static ReadOnlyAddressBook getSampleAddressBook() {","lastModifiedDate":"2016-12-20"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        AddressBook sampleAb \u003d new AddressBook();","lastModifiedDate":"2017-04-07"},{"lineNumber":85,"author":{"gitId":"kanjitp"},"content":"        for (Participant sampleParticipant : getSampleParticipants()) {","lastModifiedDate":"2021-09-26"},{"lineNumber":86,"author":{"gitId":"kanjitp"},"content":"            sampleAb.addParticipant(sampleParticipant);","lastModifiedDate":"2021-09-26"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-20"},{"lineNumber":88,"author":{"gitId":"XXJJXJ"},"content":"        for (Event sampleEvent : getSampleEvents()) {","lastModifiedDate":"2021-09-18"},{"lineNumber":89,"author":{"gitId":"XXJJXJ"},"content":"            sampleAb.addEvent(sampleEvent);","lastModifiedDate":"2021-09-18"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-09-18"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        return sampleAb;","lastModifiedDate":"2017-04-07"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-14"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * Returns a tag set containing the list of strings given.","lastModifiedDate":"2017-03-14"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-14"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e getTagSet(String... strings) {","lastModifiedDate":"2017-05-30"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        return Arrays.stream(strings)","lastModifiedDate":"2018-01-21"},{"lineNumber":99,"author":{"gitId":"-"},"content":"            .map(Tag::new)","lastModifiedDate":"2018-01-21"},{"lineNumber":100,"author":{"gitId":"-"},"content":"            .collect(Collectors.toSet());","lastModifiedDate":"2018-01-21"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-14"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-09-11"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * Return a note set containing the list of notes","lastModifiedDate":"2021-09-11"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2021-09-11"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     * @param notes An array of notes.","lastModifiedDate":"2021-09-12"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     * @return Set of Notes.","lastModifiedDate":"2021-09-12"},{"lineNumber":108,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-09-11"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public static Set\u003cNote\u003e getNoteSet(Note... notes) {","lastModifiedDate":"2021-09-11"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        return Arrays.stream(notes).collect(Collectors.toSet());","lastModifiedDate":"2021-09-11"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-11"},{"lineNumber":112,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-20"}],"authorContributionMap":{"XXJJXJ":17,"kanjitp":39,"-":56}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedEvent.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"XXJJXJ"},"content":"package seedu.address.storage;","lastModifiedDate":"2021-09-18"},{"lineNumber":2,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":3,"author":{"gitId":"XXJJXJ"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-09-18"},{"lineNumber":4,"author":{"gitId":"XXJJXJ"},"content":"import java.util.List;","lastModifiedDate":"2021-09-18"},{"lineNumber":5,"author":{"gitId":"XXJJXJ"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2021-09-18"},{"lineNumber":6,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":7,"author":{"gitId":"XXJJXJ"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2021-09-18"},{"lineNumber":8,"author":{"gitId":"XXJJXJ"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2021-09-18"},{"lineNumber":9,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":10,"author":{"gitId":"XXJJXJ"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2021-09-18"},{"lineNumber":11,"author":{"gitId":"XXJJXJ"},"content":"import seedu.address.model.event.Event;","lastModifiedDate":"2021-09-18"},{"lineNumber":12,"author":{"gitId":"XXJJXJ"},"content":"import seedu.address.model.event.EventDate;","lastModifiedDate":"2021-09-18"},{"lineNumber":13,"author":{"gitId":"XXJJXJ"},"content":"import seedu.address.model.event.EventName;","lastModifiedDate":"2021-09-18"},{"lineNumber":14,"author":{"gitId":"XXJJXJ"},"content":"import seedu.address.model.event.EventTime;","lastModifiedDate":"2021-09-18"},{"lineNumber":15,"author":{"gitId":"kanjitp"},"content":"import seedu.address.model.participant.Participant;","lastModifiedDate":"2021-09-26"},{"lineNumber":16,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":17,"author":{"gitId":"XXJJXJ"},"content":"/**","lastModifiedDate":"2021-09-18"},{"lineNumber":18,"author":{"gitId":"XXJJXJ"},"content":" * Json friendly {@link Event}","lastModifiedDate":"2021-09-18"},{"lineNumber":19,"author":{"gitId":"XXJJXJ"},"content":" */","lastModifiedDate":"2021-09-18"},{"lineNumber":20,"author":{"gitId":"XXJJXJ"},"content":"public class JsonAdaptedEvent {","lastModifiedDate":"2021-09-18"},{"lineNumber":21,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":22,"author":{"gitId":"XXJJXJ"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Event\u0027s %s field is missing!\";","lastModifiedDate":"2021-09-18"},{"lineNumber":23,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":24,"author":{"gitId":"XXJJXJ"},"content":"    private final String name;","lastModifiedDate":"2021-09-18"},{"lineNumber":25,"author":{"gitId":"XXJJXJ"},"content":"    private String isDone;","lastModifiedDate":"2021-09-18"},{"lineNumber":26,"author":{"gitId":"XXJJXJ"},"content":"    private String date;","lastModifiedDate":"2021-09-18"},{"lineNumber":27,"author":{"gitId":"XXJJXJ"},"content":"    private String time;","lastModifiedDate":"2021-09-18"},{"lineNumber":28,"author":{"gitId":"XXJJXJ"},"content":"    private final List\u003cJsonAdaptedParticipant\u003e participants \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-09-18"},{"lineNumber":29,"author":{"gitId":"XXJJXJ"},"content":"    //Change to JsonAdaptedParticipants","lastModifiedDate":"2021-09-18"},{"lineNumber":30,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":31,"author":{"gitId":"XXJJXJ"},"content":"    /**","lastModifiedDate":"2021-09-18"},{"lineNumber":32,"author":{"gitId":"XXJJXJ"},"content":"     * Constructs a {@code JsonAdaptedEvent} with the given Event details.","lastModifiedDate":"2021-09-18"},{"lineNumber":33,"author":{"gitId":"XXJJXJ"},"content":"     */","lastModifiedDate":"2021-09-18"},{"lineNumber":34,"author":{"gitId":"XXJJXJ"},"content":"    @JsonCreator","lastModifiedDate":"2021-09-18"},{"lineNumber":35,"author":{"gitId":"XXJJXJ"},"content":"    public JsonAdaptedEvent(@JsonProperty(\"name\") String name, @JsonProperty(\"isDone\") String isDone,","lastModifiedDate":"2021-09-18"},{"lineNumber":36,"author":{"gitId":"XXJJXJ"},"content":"                             @JsonProperty(\"date\") String date, @JsonProperty(\"time\") String time,","lastModifiedDate":"2021-09-18"},{"lineNumber":37,"author":{"gitId":"XXJJXJ"},"content":"                             @JsonProperty(\"participants\") List\u003cJsonAdaptedParticipant\u003e participants) {","lastModifiedDate":"2021-09-18"},{"lineNumber":38,"author":{"gitId":"XXJJXJ"},"content":"        this.name \u003d name;","lastModifiedDate":"2021-09-18"},{"lineNumber":39,"author":{"gitId":"XXJJXJ"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2021-09-18"},{"lineNumber":40,"author":{"gitId":"XXJJXJ"},"content":"        this.date \u003d date;","lastModifiedDate":"2021-09-18"},{"lineNumber":41,"author":{"gitId":"XXJJXJ"},"content":"        this.time \u003d time;","lastModifiedDate":"2021-09-18"},{"lineNumber":42,"author":{"gitId":"XXJJXJ"},"content":"        if (participants !\u003d null) {","lastModifiedDate":"2021-09-18"},{"lineNumber":43,"author":{"gitId":"XXJJXJ"},"content":"            this.participants.addAll(participants);","lastModifiedDate":"2021-09-18"},{"lineNumber":44,"author":{"gitId":"XXJJXJ"},"content":"        }","lastModifiedDate":"2021-09-18"},{"lineNumber":45,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":46,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":47,"author":{"gitId":"XXJJXJ"},"content":"    /**","lastModifiedDate":"2021-09-18"},{"lineNumber":48,"author":{"gitId":"XXJJXJ"},"content":"     * Converts a given {@code Event} into this class for Jackson use.","lastModifiedDate":"2021-09-18"},{"lineNumber":49,"author":{"gitId":"XXJJXJ"},"content":"     */","lastModifiedDate":"2021-09-18"},{"lineNumber":50,"author":{"gitId":"XXJJXJ"},"content":"    public JsonAdaptedEvent(Event source) {","lastModifiedDate":"2021-09-18"},{"lineNumber":51,"author":{"gitId":"XXJJXJ"},"content":"        name \u003d source.getName().eventName;","lastModifiedDate":"2021-09-18"},{"lineNumber":52,"author":{"gitId":"XXJJXJ"},"content":"        date \u003d source.getDate().toString();","lastModifiedDate":"2021-09-18"},{"lineNumber":53,"author":{"gitId":"XXJJXJ"},"content":"        time \u003d source.getTime().toString();","lastModifiedDate":"2021-09-18"},{"lineNumber":54,"author":{"gitId":"XXJJXJ"},"content":"        isDone \u003d source.getIsDone() ? \"Completed\" : \"Uncompleted\";","lastModifiedDate":"2021-09-18"},{"lineNumber":55,"author":{"gitId":"XXJJXJ"},"content":"        participants.addAll(source.getParticipants().stream()","lastModifiedDate":"2021-09-18"},{"lineNumber":56,"author":{"gitId":"XXJJXJ"},"content":"                .map(JsonAdaptedParticipant::new)","lastModifiedDate":"2021-09-18"},{"lineNumber":57,"author":{"gitId":"XXJJXJ"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2021-09-18"},{"lineNumber":58,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":59,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":60,"author":{"gitId":"XXJJXJ"},"content":"    /**","lastModifiedDate":"2021-09-18"},{"lineNumber":61,"author":{"gitId":"XXJJXJ"},"content":"     * Converts this Json-friendly adapted person object into the model\u0027s {@code Event} object.","lastModifiedDate":"2021-09-18"},{"lineNumber":62,"author":{"gitId":"XXJJXJ"},"content":"     *","lastModifiedDate":"2021-09-18"},{"lineNumber":63,"author":{"gitId":"XXJJXJ"},"content":"     * @return an Event instance representing the JsonAdaptedEvent.","lastModifiedDate":"2021-09-18"},{"lineNumber":64,"author":{"gitId":"XXJJXJ"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted event.","lastModifiedDate":"2021-09-18"},{"lineNumber":65,"author":{"gitId":"XXJJXJ"},"content":"     */","lastModifiedDate":"2021-09-18"},{"lineNumber":66,"author":{"gitId":"XXJJXJ"},"content":"    public Event toModelType() throws IllegalValueException {","lastModifiedDate":"2021-09-18"},{"lineNumber":67,"author":{"gitId":"XXJJXJ"},"content":"        final List\u003cParticipant\u003e participants \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-09-18"},{"lineNumber":68,"author":{"gitId":"XXJJXJ"},"content":"        for (JsonAdaptedParticipant p : this.participants) {","lastModifiedDate":"2021-09-18"},{"lineNumber":69,"author":{"gitId":"XXJJXJ"},"content":"            participants.add(p.toModelType());","lastModifiedDate":"2021-09-18"},{"lineNumber":70,"author":{"gitId":"XXJJXJ"},"content":"        }","lastModifiedDate":"2021-09-18"},{"lineNumber":71,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":72,"author":{"gitId":"XXJJXJ"},"content":"        if (this.name \u003d\u003d null) {","lastModifiedDate":"2021-09-18"},{"lineNumber":73,"author":{"gitId":"XXJJXJ"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2021-09-18"},{"lineNumber":74,"author":{"gitId":"XXJJXJ"},"content":"                    EventName.class.getSimpleName()));","lastModifiedDate":"2021-09-18"},{"lineNumber":75,"author":{"gitId":"XXJJXJ"},"content":"        }","lastModifiedDate":"2021-09-18"},{"lineNumber":76,"author":{"gitId":"XXJJXJ"},"content":"        if (!EventName.isValidEventName(this.name)) {","lastModifiedDate":"2021-09-18"},{"lineNumber":77,"author":{"gitId":"XXJJXJ"},"content":"            throw new IllegalValueException(EventName.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-09-18"},{"lineNumber":78,"author":{"gitId":"XXJJXJ"},"content":"        }","lastModifiedDate":"2021-09-18"},{"lineNumber":79,"author":{"gitId":"XXJJXJ"},"content":"        final EventName eventName \u003d new EventName(this.name);","lastModifiedDate":"2021-09-18"},{"lineNumber":80,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":81,"author":{"gitId":"XXJJXJ"},"content":"        // Implementation might need improvements","lastModifiedDate":"2021-09-18"},{"lineNumber":82,"author":{"gitId":"XXJJXJ"},"content":"        if (this.date \u003d\u003d null) {","lastModifiedDate":"2021-09-18"},{"lineNumber":83,"author":{"gitId":"XXJJXJ"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2021-09-18"},{"lineNumber":84,"author":{"gitId":"XXJJXJ"},"content":"                    EventDate.class.getSimpleName()));","lastModifiedDate":"2021-09-18"},{"lineNumber":85,"author":{"gitId":"XXJJXJ"},"content":"        }","lastModifiedDate":"2021-09-18"},{"lineNumber":86,"author":{"gitId":"XXJJXJ"},"content":"        if (!EventDate.isValidDate(this.date)) {","lastModifiedDate":"2021-09-18"},{"lineNumber":87,"author":{"gitId":"XXJJXJ"},"content":"            throw new IllegalValueException(EventDate.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-09-18"},{"lineNumber":88,"author":{"gitId":"XXJJXJ"},"content":"        }","lastModifiedDate":"2021-09-18"},{"lineNumber":89,"author":{"gitId":"XXJJXJ"},"content":"        final EventDate eventDate \u003d new EventDate(this.date);","lastModifiedDate":"2021-09-18"},{"lineNumber":90,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":91,"author":{"gitId":"XXJJXJ"},"content":"        EventTime eventTime;","lastModifiedDate":"2021-09-18"},{"lineNumber":92,"author":{"gitId":"XXJJXJ"},"content":"        if (this.time \u003d\u003d null) {","lastModifiedDate":"2021-09-18"},{"lineNumber":93,"author":{"gitId":"XXJJXJ"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2021-09-18"},{"lineNumber":94,"author":{"gitId":"XXJJXJ"},"content":"                    EventTime.class.getSimpleName()));","lastModifiedDate":"2021-09-18"},{"lineNumber":95,"author":{"gitId":"XXJJXJ"},"content":"        }","lastModifiedDate":"2021-09-18"},{"lineNumber":96,"author":{"gitId":"XXJJXJ"},"content":"        if (EventTime.isValidTime(this.time)) {","lastModifiedDate":"2021-09-18"},{"lineNumber":97,"author":{"gitId":"XXJJXJ"},"content":"            eventTime \u003d new EventTime(this.time);","lastModifiedDate":"2021-09-18"},{"lineNumber":98,"author":{"gitId":"XXJJXJ"},"content":"        } else if (this.time.equals(\"\")) {","lastModifiedDate":"2021-09-18"},{"lineNumber":99,"author":{"gitId":"XXJJXJ"},"content":"            eventTime \u003d new EventTime(); //No time given","lastModifiedDate":"2021-09-18"},{"lineNumber":100,"author":{"gitId":"XXJJXJ"},"content":"        } else {","lastModifiedDate":"2021-09-18"},{"lineNumber":101,"author":{"gitId":"XXJJXJ"},"content":"            throw new IllegalValueException(EventTime.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-09-18"},{"lineNumber":102,"author":{"gitId":"XXJJXJ"},"content":"        }","lastModifiedDate":"2021-09-18"},{"lineNumber":103,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":104,"author":{"gitId":"XXJJXJ"},"content":"        Event event \u003d new Event(eventName, eventDate, eventTime);","lastModifiedDate":"2021-09-18"},{"lineNumber":105,"author":{"gitId":"XXJJXJ"},"content":"        if (this.isDone.equals(\"Completed\")) {","lastModifiedDate":"2021-09-18"},{"lineNumber":106,"author":{"gitId":"XXJJXJ"},"content":"            event.markAsDone();","lastModifiedDate":"2021-09-18"},{"lineNumber":107,"author":{"gitId":"XXJJXJ"},"content":"        }","lastModifiedDate":"2021-09-18"},{"lineNumber":108,"author":{"gitId":"XXJJXJ"},"content":"        return event;","lastModifiedDate":"2021-09-18"},{"lineNumber":109,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":110,"author":{"gitId":"XXJJXJ"},"content":"}","lastModifiedDate":"2021-09-18"}],"authorContributionMap":{"XXJJXJ":109,"kanjitp":1}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedNextOfKin.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kanjitp"},"content":"package seedu.address.storage;","lastModifiedDate":"2021-09-26"},{"lineNumber":2,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":3,"author":{"gitId":"kanjitp"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2021-09-26"},{"lineNumber":4,"author":{"gitId":"kanjitp"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2021-09-26"},{"lineNumber":5,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":6,"author":{"gitId":"kanjitp"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2021-09-26"},{"lineNumber":7,"author":{"gitId":"kanjitp"},"content":"import seedu.address.model.nextofkin.NextOfKin;","lastModifiedDate":"2021-09-26"},{"lineNumber":8,"author":{"gitId":"kanjitp"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2021-09-26"},{"lineNumber":9,"author":{"gitId":"kanjitp"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2021-09-26"},{"lineNumber":10,"author":{"gitId":"kanjitp"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2021-09-26"},{"lineNumber":11,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":12,"author":{"gitId":"kanjitp"},"content":"public class JsonAdaptedNextOfKin {","lastModifiedDate":"2021-09-26"},{"lineNumber":13,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":14,"author":{"gitId":"kanjitp"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Next of Kin\u0027s %s field is missing!\";","lastModifiedDate":"2021-09-26"},{"lineNumber":15,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":16,"author":{"gitId":"kanjitp"},"content":"    private final String name;","lastModifiedDate":"2021-09-26"},{"lineNumber":17,"author":{"gitId":"kanjitp"},"content":"    private final String phone;","lastModifiedDate":"2021-09-26"},{"lineNumber":18,"author":{"gitId":"kanjitp"},"content":"    private final JsonAdaptedTag tag;","lastModifiedDate":"2021-09-26"},{"lineNumber":19,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":20,"author":{"gitId":"kanjitp"},"content":"    /**","lastModifiedDate":"2021-09-26"},{"lineNumber":21,"author":{"gitId":"XXJJXJ"},"content":"     * Constructs a {@code JsonAdaptedNextOfKin} with the given NextOfKin details.","lastModifiedDate":"2021-09-28"},{"lineNumber":22,"author":{"gitId":"kanjitp"},"content":"     */","lastModifiedDate":"2021-09-26"},{"lineNumber":23,"author":{"gitId":"kanjitp"},"content":"    @JsonCreator","lastModifiedDate":"2021-09-26"},{"lineNumber":24,"author":{"gitId":"kanjitp"},"content":"    public JsonAdaptedNextOfKin(@JsonProperty(\"name\") String name, @JsonProperty(\"phone\") String phone,","lastModifiedDate":"2021-09-26"},{"lineNumber":25,"author":{"gitId":"kanjitp"},"content":"                                @JsonProperty(\"tag\") JsonAdaptedTag tag) {","lastModifiedDate":"2021-09-26"},{"lineNumber":26,"author":{"gitId":"kanjitp"},"content":"        this.name \u003d name;","lastModifiedDate":"2021-09-26"},{"lineNumber":27,"author":{"gitId":"kanjitp"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2021-09-26"},{"lineNumber":28,"author":{"gitId":"kanjitp"},"content":"        this.tag \u003d tag;","lastModifiedDate":"2021-09-26"},{"lineNumber":29,"author":{"gitId":"kanjitp"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":30,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":31,"author":{"gitId":"kanjitp"},"content":"    /**","lastModifiedDate":"2021-09-26"},{"lineNumber":32,"author":{"gitId":"XXJJXJ"},"content":"     * Converts a given {@code NextOfKin} into this class for Jackson use.","lastModifiedDate":"2021-09-28"},{"lineNumber":33,"author":{"gitId":"kanjitp"},"content":"     */","lastModifiedDate":"2021-09-26"},{"lineNumber":34,"author":{"gitId":"kanjitp"},"content":"    public JsonAdaptedNextOfKin(NextOfKin source) {","lastModifiedDate":"2021-09-26"},{"lineNumber":35,"author":{"gitId":"ntwbruce"},"content":"        name \u003d source.getFullName();","lastModifiedDate":"2021-10-03"},{"lineNumber":36,"author":{"gitId":"ntwbruce"},"content":"        phone \u003d source.getPhoneValue();","lastModifiedDate":"2021-10-03"},{"lineNumber":37,"author":{"gitId":"kanjitp"},"content":"        tag \u003d new JsonAdaptedTag(source.getTag());","lastModifiedDate":"2021-09-26"},{"lineNumber":38,"author":{"gitId":"kanjitp"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":39,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":40,"author":{"gitId":"kanjitp"},"content":"    /**","lastModifiedDate":"2021-09-26"},{"lineNumber":41,"author":{"gitId":"kanjitp"},"content":"     * Convert this Json representation of NextOfKin to NextOfKin object.","lastModifiedDate":"2021-09-26"},{"lineNumber":42,"author":{"gitId":"kanjitp"},"content":"     * @return  NextOfKin object of this JsonAdaptedNextOfKin","lastModifiedDate":"2021-09-26"},{"lineNumber":43,"author":{"gitId":"kanjitp"},"content":"     * @throws IllegalValueException if the given attributes in json fields is illegal","lastModifiedDate":"2021-09-26"},{"lineNumber":44,"author":{"gitId":"kanjitp"},"content":"     */","lastModifiedDate":"2021-09-26"},{"lineNumber":45,"author":{"gitId":"kanjitp"},"content":"    public NextOfKin toModelType() throws IllegalValueException {","lastModifiedDate":"2021-09-26"},{"lineNumber":46,"author":{"gitId":"kanjitp"},"content":"        final Tag tag \u003d this.tag.toModelType();","lastModifiedDate":"2021-09-26"},{"lineNumber":47,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":48,"author":{"gitId":"kanjitp"},"content":"        if (name \u003d\u003d null) {","lastModifiedDate":"2021-09-26"},{"lineNumber":49,"author":{"gitId":"kanjitp"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName()));","lastModifiedDate":"2021-09-26"},{"lineNumber":50,"author":{"gitId":"kanjitp"},"content":"        }","lastModifiedDate":"2021-09-26"},{"lineNumber":51,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":52,"author":{"gitId":"kanjitp"},"content":"        if (!Name.isValidName(name)) {","lastModifiedDate":"2021-09-26"},{"lineNumber":53,"author":{"gitId":"kanjitp"},"content":"            throw new IllegalValueException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-09-26"},{"lineNumber":54,"author":{"gitId":"kanjitp"},"content":"        }","lastModifiedDate":"2021-09-26"},{"lineNumber":55,"author":{"gitId":"kanjitp"},"content":"        final Name modelName \u003d new Name(name);","lastModifiedDate":"2021-09-26"},{"lineNumber":56,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":57,"author":{"gitId":"kanjitp"},"content":"        if (phone \u003d\u003d null) {","lastModifiedDate":"2021-09-26"},{"lineNumber":58,"author":{"gitId":"kanjitp"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName()));","lastModifiedDate":"2021-09-26"},{"lineNumber":59,"author":{"gitId":"kanjitp"},"content":"        }","lastModifiedDate":"2021-09-26"},{"lineNumber":60,"author":{"gitId":"kanjitp"},"content":"        if (!Phone.isValidPhone(phone)) {","lastModifiedDate":"2021-09-26"},{"lineNumber":61,"author":{"gitId":"kanjitp"},"content":"            throw new IllegalValueException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-09-26"},{"lineNumber":62,"author":{"gitId":"kanjitp"},"content":"        }","lastModifiedDate":"2021-09-26"},{"lineNumber":63,"author":{"gitId":"kanjitp"},"content":"        final Phone modelPhone \u003d new Phone(phone);","lastModifiedDate":"2021-09-26"},{"lineNumber":64,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":65,"author":{"gitId":"kanjitp"},"content":"        return new NextOfKin(modelName, modelPhone, tag);","lastModifiedDate":"2021-09-26"},{"lineNumber":66,"author":{"gitId":"kanjitp"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":67,"author":{"gitId":"kanjitp"},"content":"}","lastModifiedDate":"2021-09-26"}],"authorContributionMap":{"XXJJXJ":2,"kanjitp":63,"ntwbruce":2}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedNote.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kanjitp"},"content":"package seedu.address.storage;","lastModifiedDate":"2021-09-26"},{"lineNumber":2,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":3,"author":{"gitId":"kanjitp"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2021-09-26"},{"lineNumber":4,"author":{"gitId":"kanjitp"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2021-09-26"},{"lineNumber":5,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":6,"author":{"gitId":"kanjitp"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2021-09-26"},{"lineNumber":7,"author":{"gitId":"kanjitp"},"content":"import seedu.address.logic.parser.ParserUtil;","lastModifiedDate":"2021-09-26"},{"lineNumber":8,"author":{"gitId":"kanjitp"},"content":"import seedu.address.model.participant.Note;","lastModifiedDate":"2021-09-26"},{"lineNumber":9,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":10,"author":{"gitId":"kanjitp"},"content":"public class JsonAdaptedNote {","lastModifiedDate":"2021-09-26"},{"lineNumber":11,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":12,"author":{"gitId":"kanjitp"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Next of Kin\u0027s %s field is missing!\";","lastModifiedDate":"2021-09-26"},{"lineNumber":13,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":14,"author":{"gitId":"kanjitp"},"content":"    private final String content;","lastModifiedDate":"2021-09-26"},{"lineNumber":15,"author":{"gitId":"kanjitp"},"content":"    private final String importance;","lastModifiedDate":"2021-09-26"},{"lineNumber":16,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":17,"author":{"gitId":"kanjitp"},"content":"    /**","lastModifiedDate":"2021-09-26"},{"lineNumber":18,"author":{"gitId":"XXJJXJ"},"content":"     * Constructs a {@code JsonAdaptedNote} with the given note details.","lastModifiedDate":"2021-09-28"},{"lineNumber":19,"author":{"gitId":"kanjitp"},"content":"     */","lastModifiedDate":"2021-09-26"},{"lineNumber":20,"author":{"gitId":"kanjitp"},"content":"    @JsonCreator","lastModifiedDate":"2021-09-26"},{"lineNumber":21,"author":{"gitId":"kanjitp"},"content":"    public JsonAdaptedNote(@JsonProperty(\"content\") String content,","lastModifiedDate":"2021-09-26"},{"lineNumber":22,"author":{"gitId":"kanjitp"},"content":"                           @JsonProperty(\"importance\") String importance) {","lastModifiedDate":"2021-09-26"},{"lineNumber":23,"author":{"gitId":"kanjitp"},"content":"        this.content \u003d content;","lastModifiedDate":"2021-09-26"},{"lineNumber":24,"author":{"gitId":"kanjitp"},"content":"        this.importance \u003d importance;","lastModifiedDate":"2021-09-26"},{"lineNumber":25,"author":{"gitId":"kanjitp"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":26,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":27,"author":{"gitId":"kanjitp"},"content":"    /**","lastModifiedDate":"2021-09-26"},{"lineNumber":28,"author":{"gitId":"XXJJXJ"},"content":"     * Converts a given {@code Note} into this class for Jackson use.","lastModifiedDate":"2021-09-28"},{"lineNumber":29,"author":{"gitId":"kanjitp"},"content":"     */","lastModifiedDate":"2021-09-26"},{"lineNumber":30,"author":{"gitId":"kanjitp"},"content":"    public JsonAdaptedNote(Note source) {","lastModifiedDate":"2021-09-26"},{"lineNumber":31,"author":{"gitId":"kanjitp"},"content":"        content \u003d source.getContent();","lastModifiedDate":"2021-09-26"},{"lineNumber":32,"author":{"gitId":"kanjitp"},"content":"        importance \u003d source.getImportance().toString();","lastModifiedDate":"2021-09-26"},{"lineNumber":33,"author":{"gitId":"kanjitp"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":34,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":35,"author":{"gitId":"kanjitp"},"content":"    public Note toModelType() throws IllegalValueException {","lastModifiedDate":"2021-09-26"},{"lineNumber":36,"author":{"gitId":"kanjitp"},"content":"        return new Note(content, ParserUtil.parseImportance(importance));","lastModifiedDate":"2021-09-26"},{"lineNumber":37,"author":{"gitId":"kanjitp"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":38,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":39,"author":{"gitId":"kanjitp"},"content":"}","lastModifiedDate":"2021-09-26"}],"authorContributionMap":{"XXJJXJ":2,"kanjitp":37}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedParticipant.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"XXJJXJ"},"content":"package seedu.address.storage;","lastModifiedDate":"2021-09-18"},{"lineNumber":2,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":3,"author":{"gitId":"XXJJXJ"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-09-18"},{"lineNumber":4,"author":{"gitId":"XXJJXJ"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-09-18"},{"lineNumber":5,"author":{"gitId":"XXJJXJ"},"content":"import java.util.HashSet;","lastModifiedDate":"2021-09-18"},{"lineNumber":6,"author":{"gitId":"XXJJXJ"},"content":"import java.util.List;","lastModifiedDate":"2021-09-18"},{"lineNumber":7,"author":{"gitId":"XXJJXJ"},"content":"import java.util.Set;","lastModifiedDate":"2021-09-18"},{"lineNumber":8,"author":{"gitId":"XXJJXJ"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2021-09-18"},{"lineNumber":9,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":10,"author":{"gitId":"XXJJXJ"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2021-09-18"},{"lineNumber":11,"author":{"gitId":"XXJJXJ"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2021-09-18"},{"lineNumber":12,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":13,"author":{"gitId":"XXJJXJ"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2021-09-18"},{"lineNumber":14,"author":{"gitId":"kanjitp"},"content":"import seedu.address.model.nextofkin.NextOfKin;","lastModifiedDate":"2021-09-26"},{"lineNumber":15,"author":{"gitId":"kanjitp"},"content":"import seedu.address.model.participant.BirthDate;","lastModifiedDate":"2021-09-26"},{"lineNumber":16,"author":{"gitId":"kanjitp"},"content":"import seedu.address.model.participant.Note;","lastModifiedDate":"2021-09-26"},{"lineNumber":17,"author":{"gitId":"kanjitp"},"content":"import seedu.address.model.participant.Participant;","lastModifiedDate":"2021-09-26"},{"lineNumber":18,"author":{"gitId":"XXJJXJ"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2021-09-18"},{"lineNumber":19,"author":{"gitId":"XXJJXJ"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2021-09-18"},{"lineNumber":20,"author":{"gitId":"XXJJXJ"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2021-09-18"},{"lineNumber":21,"author":{"gitId":"XXJJXJ"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2021-09-18"},{"lineNumber":22,"author":{"gitId":"XXJJXJ"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2021-09-18"},{"lineNumber":23,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":24,"author":{"gitId":"XXJJXJ"},"content":"public class JsonAdaptedParticipant {","lastModifiedDate":"2021-09-18"},{"lineNumber":25,"author":{"gitId":"XXJJXJ"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Participant\u0027s %s field is missing!\";","lastModifiedDate":"2021-09-18"},{"lineNumber":26,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":27,"author":{"gitId":"kanjitp"},"content":"    private final String id;","lastModifiedDate":"2021-09-26"},{"lineNumber":28,"author":{"gitId":"XXJJXJ"},"content":"    private final String name;","lastModifiedDate":"2021-09-18"},{"lineNumber":29,"author":{"gitId":"XXJJXJ"},"content":"    private final String phone;","lastModifiedDate":"2021-09-18"},{"lineNumber":30,"author":{"gitId":"XXJJXJ"},"content":"    private final String email;","lastModifiedDate":"2021-09-18"},{"lineNumber":31,"author":{"gitId":"XXJJXJ"},"content":"    private final String address;","lastModifiedDate":"2021-09-18"},{"lineNumber":32,"author":{"gitId":"XXJJXJ"},"content":"    private final List\u003cJsonAdaptedTag\u003e tagged \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-09-18"},{"lineNumber":33,"author":{"gitId":"XXJJXJ"},"content":"    //Add on for Managera Participants","lastModifiedDate":"2021-09-18"},{"lineNumber":34,"author":{"gitId":"XXJJXJ"},"content":"    private final String birthDate;","lastModifiedDate":"2021-09-18"},{"lineNumber":35,"author":{"gitId":"kanjitp"},"content":"    private final List\u003cJsonAdaptedNote\u003e notes \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-09-26"},{"lineNumber":36,"author":{"gitId":"kanjitp"},"content":"    private final List\u003cJsonAdaptedNextOfKin\u003e nextOfKins \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-09-26"},{"lineNumber":37,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":38,"author":{"gitId":"XXJJXJ"},"content":"    /**","lastModifiedDate":"2021-09-18"},{"lineNumber":39,"author":{"gitId":"XXJJXJ"},"content":"     * Constructs a {@code JsonAdaptedParticipant} with the given participant details.","lastModifiedDate":"2021-09-18"},{"lineNumber":40,"author":{"gitId":"XXJJXJ"},"content":"     */","lastModifiedDate":"2021-09-18"},{"lineNumber":41,"author":{"gitId":"XXJJXJ"},"content":"    @JsonCreator","lastModifiedDate":"2021-09-18"},{"lineNumber":42,"author":{"gitId":"kanjitp"},"content":"    public JsonAdaptedParticipant(@JsonProperty(\"id\") String id, @JsonProperty(\"name\") String name,","lastModifiedDate":"2021-09-26"},{"lineNumber":43,"author":{"gitId":"kanjitp"},"content":"                                  @JsonProperty(\"phone\") String phone,","lastModifiedDate":"2021-09-26"},{"lineNumber":44,"author":{"gitId":"XXJJXJ"},"content":"                                  @JsonProperty(\"email\") String email, @JsonProperty(\"address\") String address,","lastModifiedDate":"2021-09-18"},{"lineNumber":45,"author":{"gitId":"XXJJXJ"},"content":"                                  @JsonProperty(\"tagged\") List\u003cJsonAdaptedTag\u003e tagged,","lastModifiedDate":"2021-09-18"},{"lineNumber":46,"author":{"gitId":"XXJJXJ"},"content":"                                  @JsonProperty(\"birthDate\") String birthDate,","lastModifiedDate":"2021-09-18"},{"lineNumber":47,"author":{"gitId":"kanjitp"},"content":"                                  @JsonProperty(\"notes\") List\u003cJsonAdaptedNote\u003e notes,","lastModifiedDate":"2021-09-26"},{"lineNumber":48,"author":{"gitId":"kanjitp"},"content":"                                  @JsonProperty(\"nextOfKin\") List\u003cJsonAdaptedNextOfKin\u003e nextOfKins) {","lastModifiedDate":"2021-09-26"},{"lineNumber":49,"author":{"gitId":"kanjitp"},"content":"        this.id \u003d id;","lastModifiedDate":"2021-09-26"},{"lineNumber":50,"author":{"gitId":"XXJJXJ"},"content":"        this.name \u003d name;","lastModifiedDate":"2021-09-18"},{"lineNumber":51,"author":{"gitId":"XXJJXJ"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2021-09-18"},{"lineNumber":52,"author":{"gitId":"XXJJXJ"},"content":"        this.email \u003d email;","lastModifiedDate":"2021-09-18"},{"lineNumber":53,"author":{"gitId":"XXJJXJ"},"content":"        this.address \u003d address;","lastModifiedDate":"2021-09-18"},{"lineNumber":54,"author":{"gitId":"XXJJXJ"},"content":"        if (tagged !\u003d null) {","lastModifiedDate":"2021-09-18"},{"lineNumber":55,"author":{"gitId":"XXJJXJ"},"content":"            this.tagged.addAll(tagged);","lastModifiedDate":"2021-09-18"},{"lineNumber":56,"author":{"gitId":"XXJJXJ"},"content":"        }","lastModifiedDate":"2021-09-18"},{"lineNumber":57,"author":{"gitId":"XXJJXJ"},"content":"        this.birthDate \u003d birthDate;","lastModifiedDate":"2021-09-18"},{"lineNumber":58,"author":{"gitId":"kanjitp"},"content":"        if (notes !\u003d null) {","lastModifiedDate":"2021-09-26"},{"lineNumber":59,"author":{"gitId":"kanjitp"},"content":"            this.notes.addAll(notes);","lastModifiedDate":"2021-09-26"},{"lineNumber":60,"author":{"gitId":"kanjitp"},"content":"        }","lastModifiedDate":"2021-09-26"},{"lineNumber":61,"author":{"gitId":"XXJJXJ"},"content":"        if (nextOfKins !\u003d null) {","lastModifiedDate":"2021-09-18"},{"lineNumber":62,"author":{"gitId":"XXJJXJ"},"content":"            this.nextOfKins.addAll(nextOfKins);","lastModifiedDate":"2021-09-18"},{"lineNumber":63,"author":{"gitId":"XXJJXJ"},"content":"        }","lastModifiedDate":"2021-09-18"},{"lineNumber":64,"author":{"gitId":"XXJJXJ"},"content":"        // TODO: Notes to be implemented","lastModifiedDate":"2021-09-18"},{"lineNumber":65,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":66,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":67,"author":{"gitId":"XXJJXJ"},"content":"    /**","lastModifiedDate":"2021-09-18"},{"lineNumber":68,"author":{"gitId":"XXJJXJ"},"content":"     * Converts a given {@code Participant} into this class for Json use.","lastModifiedDate":"2021-09-18"},{"lineNumber":69,"author":{"gitId":"XXJJXJ"},"content":"     */","lastModifiedDate":"2021-09-18"},{"lineNumber":70,"author":{"gitId":"XXJJXJ"},"content":"    public JsonAdaptedParticipant(Participant source) {","lastModifiedDate":"2021-09-18"},{"lineNumber":71,"author":{"gitId":"ntwbruce"},"content":"        id \u003d source.getParticipantIdValue();","lastModifiedDate":"2021-10-03"},{"lineNumber":72,"author":{"gitId":"ntwbruce"},"content":"        name \u003d source.getFullName();","lastModifiedDate":"2021-10-03"},{"lineNumber":73,"author":{"gitId":"ntwbruce"},"content":"        phone \u003d source.getPhoneValue();","lastModifiedDate":"2021-10-03"},{"lineNumber":74,"author":{"gitId":"ntwbruce"},"content":"        email \u003d source.getEmailValue();","lastModifiedDate":"2021-10-03"},{"lineNumber":75,"author":{"gitId":"ntwbruce"},"content":"        address \u003d source.getAddressValue();","lastModifiedDate":"2021-10-03"},{"lineNumber":76,"author":{"gitId":"XXJJXJ"},"content":"        tagged.addAll(source.getTags().stream()","lastModifiedDate":"2021-09-18"},{"lineNumber":77,"author":{"gitId":"XXJJXJ"},"content":"            .map(JsonAdaptedTag::new)","lastModifiedDate":"2021-09-18"},{"lineNumber":78,"author":{"gitId":"XXJJXJ"},"content":"            .collect(Collectors.toList()));","lastModifiedDate":"2021-09-18"},{"lineNumber":79,"author":{"gitId":"ntwbruce"},"content":"        birthDate \u003d source.getBirthDateString();","lastModifiedDate":"2021-10-03"},{"lineNumber":80,"author":{"gitId":"kanjitp"},"content":"        notes.addAll(source.getNotes().stream().map(JsonAdaptedNote::new).collect(Collectors.toList()));","lastModifiedDate":"2021-09-26"},{"lineNumber":81,"author":{"gitId":"kanjitp"},"content":"        nextOfKins.addAll(source.getNextOfKins().stream().map(JsonAdaptedNextOfKin::new).collect(Collectors.toList()));","lastModifiedDate":"2021-09-26"},{"lineNumber":82,"author":{"gitId":"XXJJXJ"},"content":"        // TODO: Notes to be implemented","lastModifiedDate":"2021-09-18"},{"lineNumber":83,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":84,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":85,"author":{"gitId":"XXJJXJ"},"content":"    /**","lastModifiedDate":"2021-09-18"},{"lineNumber":86,"author":{"gitId":"XXJJXJ"},"content":"     * Converts this Jackson-friendly adapted participant object into the model\u0027s {@code Participant} object.","lastModifiedDate":"2021-09-18"},{"lineNumber":87,"author":{"gitId":"XXJJXJ"},"content":"     *","lastModifiedDate":"2021-09-18"},{"lineNumber":88,"author":{"gitId":"XXJJXJ"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted participant.","lastModifiedDate":"2021-09-18"},{"lineNumber":89,"author":{"gitId":"XXJJXJ"},"content":"     */","lastModifiedDate":"2021-09-18"},{"lineNumber":90,"author":{"gitId":"XXJJXJ"},"content":"    public Participant toModelType() throws IllegalValueException {","lastModifiedDate":"2021-09-18"},{"lineNumber":91,"author":{"gitId":"XXJJXJ"},"content":"        final List\u003cTag\u003e personTags \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-09-18"},{"lineNumber":92,"author":{"gitId":"XXJJXJ"},"content":"        for (JsonAdaptedTag tag : tagged) {","lastModifiedDate":"2021-09-18"},{"lineNumber":93,"author":{"gitId":"XXJJXJ"},"content":"            personTags.add(tag.toModelType());","lastModifiedDate":"2021-09-18"},{"lineNumber":94,"author":{"gitId":"XXJJXJ"},"content":"        }","lastModifiedDate":"2021-09-18"},{"lineNumber":95,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":96,"author":{"gitId":"XXJJXJ"},"content":"        if (name \u003d\u003d null) {","lastModifiedDate":"2021-09-18"},{"lineNumber":97,"author":{"gitId":"XXJJXJ"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName()));","lastModifiedDate":"2021-09-18"},{"lineNumber":98,"author":{"gitId":"XXJJXJ"},"content":"        }","lastModifiedDate":"2021-09-18"},{"lineNumber":99,"author":{"gitId":"XXJJXJ"},"content":"        if (!Name.isValidName(name)) {","lastModifiedDate":"2021-09-18"},{"lineNumber":100,"author":{"gitId":"XXJJXJ"},"content":"            throw new IllegalValueException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-09-18"},{"lineNumber":101,"author":{"gitId":"XXJJXJ"},"content":"        }","lastModifiedDate":"2021-09-18"},{"lineNumber":102,"author":{"gitId":"XXJJXJ"},"content":"        final Name modelName \u003d new Name(name);","lastModifiedDate":"2021-09-18"},{"lineNumber":103,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":104,"author":{"gitId":"XXJJXJ"},"content":"        if (phone \u003d\u003d null) {","lastModifiedDate":"2021-09-18"},{"lineNumber":105,"author":{"gitId":"XXJJXJ"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName()));","lastModifiedDate":"2021-09-18"},{"lineNumber":106,"author":{"gitId":"XXJJXJ"},"content":"        }","lastModifiedDate":"2021-09-18"},{"lineNumber":107,"author":{"gitId":"XXJJXJ"},"content":"        if (!Phone.isValidPhone(phone)) {","lastModifiedDate":"2021-09-18"},{"lineNumber":108,"author":{"gitId":"XXJJXJ"},"content":"            throw new IllegalValueException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-09-18"},{"lineNumber":109,"author":{"gitId":"XXJJXJ"},"content":"        }","lastModifiedDate":"2021-09-18"},{"lineNumber":110,"author":{"gitId":"XXJJXJ"},"content":"        final Phone modelPhone \u003d new Phone(phone);","lastModifiedDate":"2021-09-18"},{"lineNumber":111,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":112,"author":{"gitId":"XXJJXJ"},"content":"        if (email \u003d\u003d null) {","lastModifiedDate":"2021-09-18"},{"lineNumber":113,"author":{"gitId":"XXJJXJ"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName()));","lastModifiedDate":"2021-09-18"},{"lineNumber":114,"author":{"gitId":"XXJJXJ"},"content":"        }","lastModifiedDate":"2021-09-18"},{"lineNumber":115,"author":{"gitId":"XXJJXJ"},"content":"        if (!Email.isValidEmail(email)) {","lastModifiedDate":"2021-09-18"},{"lineNumber":116,"author":{"gitId":"XXJJXJ"},"content":"            throw new IllegalValueException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-09-18"},{"lineNumber":117,"author":{"gitId":"XXJJXJ"},"content":"        }","lastModifiedDate":"2021-09-18"},{"lineNumber":118,"author":{"gitId":"XXJJXJ"},"content":"        final Email modelEmail \u003d new Email(email);","lastModifiedDate":"2021-09-18"},{"lineNumber":119,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":120,"author":{"gitId":"XXJJXJ"},"content":"        if (address \u003d\u003d null) {","lastModifiedDate":"2021-09-18"},{"lineNumber":121,"author":{"gitId":"XXJJXJ"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Address.class.getSimpleName()));","lastModifiedDate":"2021-09-18"},{"lineNumber":122,"author":{"gitId":"XXJJXJ"},"content":"        }","lastModifiedDate":"2021-09-18"},{"lineNumber":123,"author":{"gitId":"XXJJXJ"},"content":"        if (!Address.isValidAddress(address)) {","lastModifiedDate":"2021-09-18"},{"lineNumber":124,"author":{"gitId":"XXJJXJ"},"content":"            throw new IllegalValueException(Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-09-18"},{"lineNumber":125,"author":{"gitId":"XXJJXJ"},"content":"        }","lastModifiedDate":"2021-09-18"},{"lineNumber":126,"author":{"gitId":"XXJJXJ"},"content":"        final Address modelAddress \u003d new Address(address);","lastModifiedDate":"2021-09-18"},{"lineNumber":127,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":128,"author":{"gitId":"XXJJXJ"},"content":"        final Set\u003cTag\u003e modelTags \u003d new HashSet\u003c\u003e(personTags);","lastModifiedDate":"2021-09-18"},{"lineNumber":129,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":130,"author":{"gitId":"kanjitp"},"content":"        BirthDate modelBirthDate;","lastModifiedDate":"2021-09-26"},{"lineNumber":131,"author":{"gitId":"XXJJXJ"},"content":"        if (!BirthDate.isValidBirthDate(this.birthDate)) {","lastModifiedDate":"2021-09-18"},{"lineNumber":132,"author":{"gitId":"XXJJXJ"},"content":"            // throw new IllegalValueException(BirthDate.MESSAGE_DATE_CONSTRAINTS);","lastModifiedDate":"2021-09-18"},{"lineNumber":133,"author":{"gitId":"XXJJXJ"},"content":"            // Can\u0027t do this due to BirthDate implementation","lastModifiedDate":"2021-09-18"},{"lineNumber":134,"author":{"gitId":"kanjitp"},"content":"            modelBirthDate \u003d BirthDate.notSpecified();","lastModifiedDate":"2021-09-26"},{"lineNumber":135,"author":{"gitId":"XXJJXJ"},"content":"        } else {","lastModifiedDate":"2021-09-18"},{"lineNumber":136,"author":{"gitId":"kanjitp"},"content":"            modelBirthDate \u003d BirthDate.of(LocalDate.parse(this.birthDate));","lastModifiedDate":"2021-09-26"},{"lineNumber":137,"author":{"gitId":"kanjitp"},"content":"        }","lastModifiedDate":"2021-09-26"},{"lineNumber":138,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":139,"author":{"gitId":"kanjitp"},"content":"        final List\u003cNote\u003e personNotes \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-09-26"},{"lineNumber":140,"author":{"gitId":"kanjitp"},"content":"        for (JsonAdaptedNote note : notes) {","lastModifiedDate":"2021-09-26"},{"lineNumber":141,"author":{"gitId":"kanjitp"},"content":"            personNotes.add(note.toModelType());","lastModifiedDate":"2021-09-26"},{"lineNumber":142,"author":{"gitId":"XXJJXJ"},"content":"        }","lastModifiedDate":"2021-09-18"},{"lineNumber":143,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":144,"author":{"gitId":"kanjitp"},"content":"        Set\u003cNote\u003e notes \u003d new HashSet\u003c\u003e(personNotes);","lastModifiedDate":"2021-09-26"},{"lineNumber":145,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":146,"author":{"gitId":"kanjitp"},"content":"        ArrayList\u003cNextOfKin\u003e modelNextOfKins \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-09-26"},{"lineNumber":147,"author":{"gitId":"kanjitp"},"content":"        for (JsonAdaptedNextOfKin nok : nextOfKins) {","lastModifiedDate":"2021-09-26"},{"lineNumber":148,"author":{"gitId":"kanjitp"},"content":"            modelNextOfKins.add(nok.toModelType());","lastModifiedDate":"2021-09-26"},{"lineNumber":149,"author":{"gitId":"XXJJXJ"},"content":"        }","lastModifiedDate":"2021-09-18"},{"lineNumber":150,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":151,"author":{"gitId":"XXJJXJ"},"content":"        return new Participant(modelName, modelPhone, modelEmail, modelAddress, modelTags,","lastModifiedDate":"2021-09-18"},{"lineNumber":152,"author":{"gitId":"kanjitp"},"content":"            modelBirthDate, notes, modelNextOfKins);","lastModifiedDate":"2021-09-26"},{"lineNumber":153,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":154,"author":{"gitId":"XXJJXJ"},"content":"}","lastModifiedDate":"2021-09-18"}],"authorContributionMap":{"XXJJXJ":118,"kanjitp":30,"ntwbruce":6}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedPerson.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * Jackson-friendly version of {@link Person}.","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"class JsonAdaptedPerson {","lastModifiedDate":"2018-12-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Person\u0027s %s field is missing!\";","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final String name;","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final String phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private final String email;","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private final String address;","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private final List\u003cJsonAdaptedTag\u003e tagged \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Constructs a {@code JsonAdaptedPerson} with the given person details.","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public JsonAdaptedPerson(@JsonProperty(\"name\") String name, @JsonProperty(\"phone\") String phone,","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            @JsonProperty(\"email\") String email, @JsonProperty(\"address\") String address,","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            @JsonProperty(\"tagged\") List\u003cJsonAdaptedTag\u003e tagged) {","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        this.email \u003d email;","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        this.address \u003d address;","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        if (tagged !\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            this.tagged.addAll(tagged);","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * Converts a given {@code Person} into this class for Jackson use.","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public JsonAdaptedPerson(Person source) {","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"ntwbruce"},"content":"        name \u003d source.getFullName();","lastModifiedDate":"2021-10-03"},{"lineNumber":54,"author":{"gitId":"ntwbruce"},"content":"        phone \u003d source.getPhoneValue();","lastModifiedDate":"2021-10-03"},{"lineNumber":55,"author":{"gitId":"ntwbruce"},"content":"        email \u003d source.getEmailValue();","lastModifiedDate":"2021-10-03"},{"lineNumber":56,"author":{"gitId":"ntwbruce"},"content":"        address \u003d source.getAddressValue();","lastModifiedDate":"2021-10-03"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        tagged.addAll(source.getTags().stream()","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"                .map(JsonAdaptedTag::new)","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * Converts this Jackson-friendly adapted person object into the model\u0027s {@code Person} object.","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted person.","lastModifiedDate":"2018-08-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public Person toModelType() throws IllegalValueException {","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        final List\u003cTag\u003e personTags \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2018-08-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        for (JsonAdaptedTag tag : tagged) {","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            personTags.add(tag.toModelType());","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        if (name \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(name)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        final Name modelName \u003d new Name(name);","lastModifiedDate":"2018-08-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        if (phone \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(phone)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        final Phone modelPhone \u003d new Phone(phone);","lastModifiedDate":"2018-08-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        if (email \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        if (!Email.isValidEmail(email)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        final Email modelEmail \u003d new Email(email);","lastModifiedDate":"2018-08-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        if (address \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Address.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        if (!Address.isValidAddress(address)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        final Address modelAddress \u003d new Address(address);","lastModifiedDate":"2018-08-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        final Set\u003cTag\u003e modelTags \u003d new HashSet\u003c\u003e(personTags);","lastModifiedDate":"2018-08-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        return new Person(modelName, modelPhone, modelEmail, modelAddress, modelTags);","lastModifiedDate":"2018-08-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":109,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"ntwbruce":4,"-":105}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedTag.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonValue;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Jackson-friendly version of {@link Tag}.","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"class JsonAdaptedTag {","lastModifiedDate":"2018-12-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private final String tagName;","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * Constructs a {@code JsonAdaptedTag} with the given {@code tagName}.","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public JsonAdaptedTag(String tagName) {","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        this.tagName \u003d tagName;","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Converts a given {@code Tag} into this class for Jackson use.","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public JsonAdaptedTag(Tag source) {","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"ntwbruce"},"content":"        tagName \u003d source.getTagName();","lastModifiedDate":"2021-10-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @JsonValue","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public String getTagName() {","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return tagName;","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Converts this Jackson-friendly adapted tag object into the model\u0027s {@code Tag} object.","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted tag.","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public Tag toModelType() throws IllegalValueException {","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        if (!Tag.isValidTagName(tagName)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        return new Tag(tagName);","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"ntwbruce":1,"-":47}},{"path":"src/main/java/seedu/address/storage/JsonSerializableAddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonRootName;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"XXJJXJ"},"content":"import seedu.address.model.event.Event;","lastModifiedDate":"2021-09-18"},{"lineNumber":15,"author":{"gitId":"kanjitp"},"content":"import seedu.address.model.participant.Participant;","lastModifiedDate":"2021-09-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * An Immutable AddressBook that is serializable to JSON format.","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"@JsonRootName(value \u003d \"addressbook\")","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"class JsonSerializableAddressBook {","lastModifiedDate":"2018-12-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"kanjitp"},"content":"    public static final String MESSAGE_DUPLICATE_PARTICIPANT \u003d \"Participants list contains duplicate participant(s).\";","lastModifiedDate":"2021-09-28"},{"lineNumber":24,"author":{"gitId":"XXJJXJ"},"content":"    //Add on for Managera","lastModifiedDate":"2021-09-18"},{"lineNumber":25,"author":{"gitId":"XXJJXJ"},"content":"    public static final String MESSAGE_DUPLICATE_EVENT \u003d \"Events list contains duplicate event(s).\";","lastModifiedDate":"2021-09-18"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"kanjitp"},"content":"    private final List\u003cJsonAdaptedParticipant\u003e participants \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-09-26"},{"lineNumber":28,"author":{"gitId":"XXJJXJ"},"content":"    //Add on for Managera","lastModifiedDate":"2021-09-18"},{"lineNumber":29,"author":{"gitId":"XXJJXJ"},"content":"    private final List\u003cJsonAdaptedEvent\u003e events \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-09-18"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"XXJJXJ"},"content":"     * Constructs a {@code JsonSerializableAddressBook} with the given participants and events.","lastModifiedDate":"2021-09-28"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"kanjitp"},"content":"    public JsonSerializableAddressBook(@JsonProperty(\"participants\") List\u003cJsonAdaptedParticipant\u003e participants,","lastModifiedDate":"2021-09-26"},{"lineNumber":36,"author":{"gitId":"XXJJXJ"},"content":"                                       @JsonProperty(\"events\") List\u003cJsonAdaptedEvent\u003e events) {","lastModifiedDate":"2021-09-18"},{"lineNumber":37,"author":{"gitId":"kanjitp"},"content":"        this.participants.addAll(participants);","lastModifiedDate":"2021-09-26"},{"lineNumber":38,"author":{"gitId":"XXJJXJ"},"content":"        //Add on for Managera","lastModifiedDate":"2021-09-18"},{"lineNumber":39,"author":{"gitId":"XXJJXJ"},"content":"        this.events.addAll(events);","lastModifiedDate":"2021-09-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * Converts a given {@code ReadOnlyAddressBook} into this class for Jackson use.","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * @param source future changes to this will not affect the created {@code JsonSerializableAddressBook}.","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public JsonSerializableAddressBook(ReadOnlyAddressBook source) {","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"kanjitp"},"content":"        participants.addAll(source.getParticipantList().stream()","lastModifiedDate":"2021-09-26"},{"lineNumber":49,"author":{"gitId":"kanjitp"},"content":"                .map(JsonAdaptedParticipant::new).collect(Collectors.toList()));","lastModifiedDate":"2021-09-26"},{"lineNumber":50,"author":{"gitId":"XXJJXJ"},"content":"        //Add on for Managera","lastModifiedDate":"2021-09-18"},{"lineNumber":51,"author":{"gitId":"XXJJXJ"},"content":"        events.addAll(source.getEventList().stream().map(JsonAdaptedEvent::new).collect(Collectors.toList()));","lastModifiedDate":"2021-09-18"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * Converts this address book into the model\u0027s {@code AddressBook} object.","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated.","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public AddressBook toModelType() throws IllegalValueException {","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        AddressBook addressBook \u003d new AddressBook();","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"kanjitp"},"content":"        // Changed for Managera","lastModifiedDate":"2021-09-26"},{"lineNumber":62,"author":{"gitId":"kanjitp"},"content":"        for (JsonAdaptedParticipant jsonAdaptedParticipant : participants) {","lastModifiedDate":"2021-09-26"},{"lineNumber":63,"author":{"gitId":"kanjitp"},"content":"            Participant participant \u003d jsonAdaptedParticipant.toModelType();","lastModifiedDate":"2021-09-26"},{"lineNumber":64,"author":{"gitId":"kanjitp"},"content":"            if (addressBook.hasParticipant(participant)) {","lastModifiedDate":"2021-09-26"},{"lineNumber":65,"author":{"gitId":"kanjitp"},"content":"                throw new IllegalValueException(MESSAGE_DUPLICATE_PARTICIPANT);","lastModifiedDate":"2021-09-28"},{"lineNumber":66,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"kanjitp"},"content":"            addressBook.addParticipant(participant);","lastModifiedDate":"2021-09-26"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":69,"author":{"gitId":"XXJJXJ"},"content":"        //Add on for Managera","lastModifiedDate":"2021-09-18"},{"lineNumber":70,"author":{"gitId":"XXJJXJ"},"content":"        for (JsonAdaptedEvent jsonAdaptedEvent : events) {","lastModifiedDate":"2021-09-18"},{"lineNumber":71,"author":{"gitId":"XXJJXJ"},"content":"            Event event \u003d jsonAdaptedEvent.toModelType();","lastModifiedDate":"2021-09-18"},{"lineNumber":72,"author":{"gitId":"XXJJXJ"},"content":"            if (addressBook.hasEvent(event)) {","lastModifiedDate":"2021-09-18"},{"lineNumber":73,"author":{"gitId":"XXJJXJ"},"content":"                throw new IllegalValueException(MESSAGE_DUPLICATE_EVENT);","lastModifiedDate":"2021-09-18"},{"lineNumber":74,"author":{"gitId":"XXJJXJ"},"content":"            }","lastModifiedDate":"2021-09-18"},{"lineNumber":75,"author":{"gitId":"XXJJXJ"},"content":"            addressBook.addEvent(event);","lastModifiedDate":"2021-09-18"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-09-18"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        return addressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"XXJJXJ":18,"kanjitp":13,"-":49}},{"path":"src/main/java/seedu/address/ui/EventCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"XXJJXJ"},"content":"package seedu.address.ui;","lastModifiedDate":"2021-09-18"},{"lineNumber":2,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":3,"author":{"gitId":"XXJJXJ"},"content":"import java.util.Comparator;","lastModifiedDate":"2021-09-18"},{"lineNumber":4,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":5,"author":{"gitId":"XXJJXJ"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-09-18"},{"lineNumber":6,"author":{"gitId":"XXJJXJ"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2021-09-18"},{"lineNumber":7,"author":{"gitId":"XXJJXJ"},"content":"import javafx.scene.layout.FlowPane;","lastModifiedDate":"2021-09-18"},{"lineNumber":8,"author":{"gitId":"XXJJXJ"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2021-09-18"},{"lineNumber":9,"author":{"gitId":"XXJJXJ"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2021-09-18"},{"lineNumber":10,"author":{"gitId":"XXJJXJ"},"content":"import seedu.address.model.event.Event;","lastModifiedDate":"2021-09-18"},{"lineNumber":11,"author":{"gitId":"ntwbruce"},"content":"import seedu.address.model.participant.Participant;","lastModifiedDate":"2021-10-03"},{"lineNumber":12,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":13,"author":{"gitId":"XXJJXJ"},"content":"public class EventCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2021-09-18"},{"lineNumber":14,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":15,"author":{"gitId":"XXJJXJ"},"content":"    private static final String FXML \u003d \"EventListCard.fxml\";","lastModifiedDate":"2021-09-18"},{"lineNumber":16,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":17,"author":{"gitId":"XXJJXJ"},"content":"    public final Event event;","lastModifiedDate":"2021-09-18"},{"lineNumber":18,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":19,"author":{"gitId":"XXJJXJ"},"content":"    @FXML","lastModifiedDate":"2021-09-18"},{"lineNumber":20,"author":{"gitId":"XXJJXJ"},"content":"    private HBox cardPane;","lastModifiedDate":"2021-09-18"},{"lineNumber":21,"author":{"gitId":"XXJJXJ"},"content":"    @FXML","lastModifiedDate":"2021-09-18"},{"lineNumber":22,"author":{"gitId":"XXJJXJ"},"content":"    private Label id;","lastModifiedDate":"2021-09-18"},{"lineNumber":23,"author":{"gitId":"XXJJXJ"},"content":"    @FXML","lastModifiedDate":"2021-09-18"},{"lineNumber":24,"author":{"gitId":"XXJJXJ"},"content":"    private Label name;","lastModifiedDate":"2021-09-18"},{"lineNumber":25,"author":{"gitId":"XXJJXJ"},"content":"    @FXML","lastModifiedDate":"2021-09-18"},{"lineNumber":26,"author":{"gitId":"XXJJXJ"},"content":"    private Label isDone;","lastModifiedDate":"2021-09-18"},{"lineNumber":27,"author":{"gitId":"XXJJXJ"},"content":"    @FXML","lastModifiedDate":"2021-09-18"},{"lineNumber":28,"author":{"gitId":"XXJJXJ"},"content":"    private Label date;","lastModifiedDate":"2021-09-18"},{"lineNumber":29,"author":{"gitId":"XXJJXJ"},"content":"    @FXML","lastModifiedDate":"2021-09-18"},{"lineNumber":30,"author":{"gitId":"XXJJXJ"},"content":"    private Label time;","lastModifiedDate":"2021-09-18"},{"lineNumber":31,"author":{"gitId":"XXJJXJ"},"content":"    @FXML","lastModifiedDate":"2021-09-18"},{"lineNumber":32,"author":{"gitId":"XXJJXJ"},"content":"    private FlowPane participants;","lastModifiedDate":"2021-09-18"},{"lineNumber":33,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":34,"author":{"gitId":"XXJJXJ"},"content":"    /**","lastModifiedDate":"2021-09-18"},{"lineNumber":35,"author":{"gitId":"XXJJXJ"},"content":"     * Creates a {@code EventCard} with the given {@code Event} and index to display.","lastModifiedDate":"2021-09-18"},{"lineNumber":36,"author":{"gitId":"XXJJXJ"},"content":"     */","lastModifiedDate":"2021-09-18"},{"lineNumber":37,"author":{"gitId":"XXJJXJ"},"content":"    public EventCard(Event event, int displayedIndex) {","lastModifiedDate":"2021-09-18"},{"lineNumber":38,"author":{"gitId":"XXJJXJ"},"content":"        super(FXML);","lastModifiedDate":"2021-09-18"},{"lineNumber":39,"author":{"gitId":"XXJJXJ"},"content":"        this.event \u003d event;","lastModifiedDate":"2021-09-18"},{"lineNumber":40,"author":{"gitId":"XXJJXJ"},"content":"        id.setText(displayedIndex + \". \");","lastModifiedDate":"2021-09-18"},{"lineNumber":41,"author":{"gitId":"XXJJXJ"},"content":"        name.setText(event.getName().eventName);","lastModifiedDate":"2021-09-18"},{"lineNumber":42,"author":{"gitId":"XXJJXJ"},"content":"        isDone.setText(event.getIsDone() ? \"Completed\" : \"Uncompleted\");","lastModifiedDate":"2021-09-18"},{"lineNumber":43,"author":{"gitId":"XXJJXJ"},"content":"        date.setText(event.getDate().toString());","lastModifiedDate":"2021-09-18"},{"lineNumber":44,"author":{"gitId":"XXJJXJ"},"content":"        time.setText(event.getTime().toString());","lastModifiedDate":"2021-09-18"},{"lineNumber":45,"author":{"gitId":"XXJJXJ"},"content":"        event.getParticipants().stream()","lastModifiedDate":"2021-09-18"},{"lineNumber":46,"author":{"gitId":"ntwbruce"},"content":"                .sorted(Comparator.comparing(Participant::getFullName))","lastModifiedDate":"2021-10-03"},{"lineNumber":47,"author":{"gitId":"ntwbruce"},"content":"                .forEach(participant -\u003e participants.getChildren().add(new Label(participant.getFullName())));","lastModifiedDate":"2021-10-03"},{"lineNumber":48,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":49,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":50,"author":{"gitId":"XXJJXJ"},"content":"    @Override","lastModifiedDate":"2021-09-18"},{"lineNumber":51,"author":{"gitId":"XXJJXJ"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-09-18"},{"lineNumber":52,"author":{"gitId":"XXJJXJ"},"content":"        // short circuit if same object","lastModifiedDate":"2021-09-18"},{"lineNumber":53,"author":{"gitId":"XXJJXJ"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2021-09-18"},{"lineNumber":54,"author":{"gitId":"XXJJXJ"},"content":"            return true;","lastModifiedDate":"2021-09-18"},{"lineNumber":55,"author":{"gitId":"XXJJXJ"},"content":"        }","lastModifiedDate":"2021-09-18"},{"lineNumber":56,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":57,"author":{"gitId":"XXJJXJ"},"content":"        // instanceof handles nulls","lastModifiedDate":"2021-09-18"},{"lineNumber":58,"author":{"gitId":"XXJJXJ"},"content":"        if (!(other instanceof EventCard)) {","lastModifiedDate":"2021-09-18"},{"lineNumber":59,"author":{"gitId":"XXJJXJ"},"content":"            return false;","lastModifiedDate":"2021-09-18"},{"lineNumber":60,"author":{"gitId":"XXJJXJ"},"content":"        }","lastModifiedDate":"2021-09-18"},{"lineNumber":61,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":62,"author":{"gitId":"XXJJXJ"},"content":"        // state check","lastModifiedDate":"2021-09-18"},{"lineNumber":63,"author":{"gitId":"XXJJXJ"},"content":"        EventCard card \u003d (EventCard) other;","lastModifiedDate":"2021-09-18"},{"lineNumber":64,"author":{"gitId":"XXJJXJ"},"content":"        return id.getText().equals(card.id.getText())","lastModifiedDate":"2021-09-18"},{"lineNumber":65,"author":{"gitId":"XXJJXJ"},"content":"                \u0026\u0026 event.equals(card.event);","lastModifiedDate":"2021-09-18"},{"lineNumber":66,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":67,"author":{"gitId":"XXJJXJ"},"content":"}","lastModifiedDate":"2021-09-18"}],"authorContributionMap":{"XXJJXJ":64,"ntwbruce":3}},{"path":"src/main/java/seedu/address/ui/EventListPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"XXJJXJ"},"content":"package seedu.address.ui;","lastModifiedDate":"2021-09-18"},{"lineNumber":2,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":3,"author":{"gitId":"XXJJXJ"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-09-18"},{"lineNumber":4,"author":{"gitId":"XXJJXJ"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-09-18"},{"lineNumber":5,"author":{"gitId":"XXJJXJ"},"content":"import javafx.scene.control.ListCell;","lastModifiedDate":"2021-09-18"},{"lineNumber":6,"author":{"gitId":"XXJJXJ"},"content":"import javafx.scene.control.ListView;","lastModifiedDate":"2021-09-18"},{"lineNumber":7,"author":{"gitId":"XXJJXJ"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2021-09-18"},{"lineNumber":8,"author":{"gitId":"XXJJXJ"},"content":"import seedu.address.model.event.Event;","lastModifiedDate":"2021-09-18"},{"lineNumber":9,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":10,"author":{"gitId":"XXJJXJ"},"content":"public class EventListPanel extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2021-09-18"},{"lineNumber":11,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":12,"author":{"gitId":"XXJJXJ"},"content":"    private static final String FXML \u003d \"EventListPanel.fxml\";","lastModifiedDate":"2021-09-18"},{"lineNumber":13,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":14,"author":{"gitId":"XXJJXJ"},"content":"    @FXML","lastModifiedDate":"2021-09-18"},{"lineNumber":15,"author":{"gitId":"XXJJXJ"},"content":"    private ListView\u003cEvent\u003e eventListView;","lastModifiedDate":"2021-09-18"},{"lineNumber":16,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":17,"author":{"gitId":"XXJJXJ"},"content":"    /**","lastModifiedDate":"2021-09-18"},{"lineNumber":18,"author":{"gitId":"XXJJXJ"},"content":"     * Creates a {@code EventListPanel} with the given {@code ObservableList}.","lastModifiedDate":"2021-09-18"},{"lineNumber":19,"author":{"gitId":"XXJJXJ"},"content":"     */","lastModifiedDate":"2021-09-18"},{"lineNumber":20,"author":{"gitId":"XXJJXJ"},"content":"    public EventListPanel(ObservableList\u003cEvent\u003e eventList) {","lastModifiedDate":"2021-09-18"},{"lineNumber":21,"author":{"gitId":"XXJJXJ"},"content":"        super(FXML);","lastModifiedDate":"2021-09-18"},{"lineNumber":22,"author":{"gitId":"XXJJXJ"},"content":"        eventListView.setItems(eventList);","lastModifiedDate":"2021-09-18"},{"lineNumber":23,"author":{"gitId":"XXJJXJ"},"content":"        eventListView.setCellFactory(listView -\u003e new EventListViewCell());","lastModifiedDate":"2021-09-18"},{"lineNumber":24,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":25,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":26,"author":{"gitId":"XXJJXJ"},"content":"    /**","lastModifiedDate":"2021-09-18"},{"lineNumber":27,"author":{"gitId":"XXJJXJ"},"content":"     * Custom {@code ListCell} that displays the graphics of a {@code Event} using a {@code EventCard}.","lastModifiedDate":"2021-09-18"},{"lineNumber":28,"author":{"gitId":"XXJJXJ"},"content":"     */","lastModifiedDate":"2021-09-18"},{"lineNumber":29,"author":{"gitId":"XXJJXJ"},"content":"    class EventListViewCell extends ListCell\u003cEvent\u003e {","lastModifiedDate":"2021-09-18"},{"lineNumber":30,"author":{"gitId":"XXJJXJ"},"content":"        @Override","lastModifiedDate":"2021-09-18"},{"lineNumber":31,"author":{"gitId":"XXJJXJ"},"content":"        protected void updateItem(Event event, boolean empty) {","lastModifiedDate":"2021-09-18"},{"lineNumber":32,"author":{"gitId":"XXJJXJ"},"content":"            super.updateItem(event, empty);","lastModifiedDate":"2021-09-18"},{"lineNumber":33,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":34,"author":{"gitId":"XXJJXJ"},"content":"            if (empty || event \u003d\u003d null) {","lastModifiedDate":"2021-09-18"},{"lineNumber":35,"author":{"gitId":"XXJJXJ"},"content":"                setGraphic(null);","lastModifiedDate":"2021-09-18"},{"lineNumber":36,"author":{"gitId":"XXJJXJ"},"content":"                setText(null);","lastModifiedDate":"2021-09-18"},{"lineNumber":37,"author":{"gitId":"XXJJXJ"},"content":"            } else {","lastModifiedDate":"2021-09-18"},{"lineNumber":38,"author":{"gitId":"XXJJXJ"},"content":"                setGraphic(new EventCard(event, getIndex() + 1).getRoot());","lastModifiedDate":"2021-09-18"},{"lineNumber":39,"author":{"gitId":"XXJJXJ"},"content":"            }","lastModifiedDate":"2021-09-18"},{"lineNumber":40,"author":{"gitId":"XXJJXJ"},"content":"        }","lastModifiedDate":"2021-09-18"},{"lineNumber":41,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":42,"author":{"gitId":"XXJJXJ"},"content":"}","lastModifiedDate":"2021-09-18"}],"authorContributionMap":{"XXJJXJ":42}},{"path":"src/main/java/seedu/address/ui/HelpWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-12-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2019-08-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2019-08-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.input.Clipboard;","lastModifiedDate":"2019-08-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.input.ClipboardContent;","lastModifiedDate":"2019-08-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Controller for a help page","lastModifiedDate":"2016-08-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class HelpWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-12-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":18,"author":{"gitId":"XXJJXJ"},"content":"    public static final String USERGUIDE_URL \u003d \"https://ay2122s1-cs2103t-t10-2.github.io/tp/UserGuide.html\";","lastModifiedDate":"2021-09-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String HELP_MESSAGE \u003d \"Refer to the user guide: \" + USERGUIDE_URL;","lastModifiedDate":"2019-08-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(HelpWindow.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"HelpWindow.fxml\";","lastModifiedDate":"2016-09-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-12-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private Button copyButton;","lastModifiedDate":"2019-08-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-08-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2019-08-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private Label helpMessage;","lastModifiedDate":"2019-08-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-12-01"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Creates a new HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-12-01"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * @param root Stage to use as the root of the HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-12-01"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public HelpWindow(Stage root) {","lastModifiedDate":"2017-12-01"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        super(FXML, root);","lastModifiedDate":"2017-12-01"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        helpMessage.setText(HELP_MESSAGE);","lastModifiedDate":"2019-08-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-12-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * Creates a new HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-12-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public HelpWindow() {","lastModifiedDate":"2017-12-01"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        this(new Stage());","lastModifiedDate":"2017-12-01"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-01"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-01"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Shows the help window.","lastModifiedDate":"2017-08-16"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * @throws IllegalStateException","lastModifiedDate":"2017-08-16"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * \u003cul\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     *     \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     *         if this method is called on a thread other than the JavaFX Application Thread.","lastModifiedDate":"2017-08-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     *     \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     *     \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     *         if this method is called during animation or layout processing.","lastModifiedDate":"2017-08-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     *     \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     *     \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     *         if this method is called on the primary stage.","lastModifiedDate":"2017-08-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     *     \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     *     \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     *         if {@code dialogStage} is already showing.","lastModifiedDate":"2017-08-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     *     \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * \u003c/ul\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void show() {","lastModifiedDate":"2016-08-18"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        logger.fine(\"Showing help page about the application.\");","lastModifiedDate":"2016-12-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        getRoot().show();","lastModifiedDate":"2018-02-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        getRoot().centerOnScreen();","lastModifiedDate":"2019-08-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-15"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * Returns true if the help window is currently being shown.","lastModifiedDate":"2018-03-15"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-15"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public boolean isShowing() {","lastModifiedDate":"2018-03-15"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        return getRoot().isShowing();","lastModifiedDate":"2018-03-15"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-15"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Hides the help window.","lastModifiedDate":"2018-12-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void hide() {","lastModifiedDate":"2018-12-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        getRoot().hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * Focuses on the help window.","lastModifiedDate":"2018-03-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public void focus() {","lastModifiedDate":"2018-03-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        getRoot().requestFocus();","lastModifiedDate":"2018-03-15"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-15"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-08-19"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2019-08-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * Copies the URL to the user guide to the clipboard.","lastModifiedDate":"2019-08-19"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2019-08-19"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2019-08-19"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    private void copyUrl() {","lastModifiedDate":"2019-08-19"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        final Clipboard clipboard \u003d Clipboard.getSystemClipboard();","lastModifiedDate":"2019-08-19"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        final ClipboardContent url \u003d new ClipboardContent();","lastModifiedDate":"2019-08-19"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        url.putString(USERGUIDE_URL);","lastModifiedDate":"2019-08-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        clipboard.setContent(url);","lastModifiedDate":"2019-08-19"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-08-19"},{"lineNumber":102,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"XXJJXJ":1,"-":101}},{"path":"src/main/java/seedu/address/ui/MainWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-06-16"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.event.ActionEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-08-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.MenuItem;","lastModifiedDate":"2016-08-26"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextInputControl;","lastModifiedDate":"2016-12-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyCombination;","lastModifiedDate":"2016-08-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.scene.layout.StackPane;","lastModifiedDate":"2017-05-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2016-09-28"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2017-06-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.Logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * The Main Window. Provides the basic application layout containing","lastModifiedDate":"2016-08-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * a menu bar and space where other JavaFX elements can be placed.","lastModifiedDate":"2016-08-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class MainWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-11-29"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"MainWindow.fxml\";","lastModifiedDate":"2016-08-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(getClass());","lastModifiedDate":"2018-08-14"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private Stage primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    // Independent Ui parts residing in this Ui container","lastModifiedDate":"2016-08-18"},{"lineNumber":34,"author":{"gitId":"kanjitp"},"content":"    private ParticipantListPanel participantListPanel;","lastModifiedDate":"2021-09-26"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private ResultDisplay resultDisplay;","lastModifiedDate":"2018-12-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private HelpWindow helpWindow;","lastModifiedDate":"2018-03-15"},{"lineNumber":37,"author":{"gitId":"XXJJXJ"},"content":"    //add-on for Managera","lastModifiedDate":"2021-09-18"},{"lineNumber":38,"author":{"gitId":"XXJJXJ"},"content":"    private EventListPanel eventListPanel;","lastModifiedDate":"2021-09-18"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private StackPane commandBoxPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    private MenuItem helpMenuItem;","lastModifiedDate":"2016-08-18"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"ntwbruce"},"content":"    private StackPane participantListPanelPlaceholder;","lastModifiedDate":"2021-10-02"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":49,"author":{"gitId":"ntwbruce"},"content":"    //Add on for Managera","lastModifiedDate":"2021-10-02"},{"lineNumber":50,"author":{"gitId":"XXJJXJ"},"content":"    @FXML","lastModifiedDate":"2021-09-18"},{"lineNumber":51,"author":{"gitId":"XXJJXJ"},"content":"    private StackPane eventListPanelPlaceholder;","lastModifiedDate":"2021-09-18"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    private StackPane resultDisplayPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    private StackPane statusbarPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * Creates a {@code MainWindow} with the given {@code Stage} and {@code Logic}.","lastModifiedDate":"2020-05-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public MainWindow(Stage primaryStage, Logic logic) {","lastModifiedDate":"2018-12-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        super(FXML, primaryStage);","lastModifiedDate":"2017-11-29"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        // Set dependencies","lastModifiedDate":"2016-09-21"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        this.primaryStage \u003d primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        // Configure the UI","lastModifiedDate":"2016-09-21"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        setWindowDefaultSize(logic.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        setAccelerators();","lastModifiedDate":"2016-09-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        helpWindow \u003d new HelpWindow();","lastModifiedDate":"2018-03-15"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public Stage getPrimaryStage() {","lastModifiedDate":"2016-12-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        return primaryStage;","lastModifiedDate":"2016-12-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    private void setAccelerators() {","lastModifiedDate":"2016-09-21"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        setAccelerator(helpMenuItem, KeyCombination.valueOf(\"F1\"));","lastModifiedDate":"2016-12-18"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-18"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * Sets the accelerator of a MenuItem.","lastModifiedDate":"2016-12-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * @param keyCombination the KeyCombination value of the accelerator","lastModifiedDate":"2016-12-18"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-18"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    private void setAccelerator(MenuItem menuItem, KeyCombination keyCombination) {","lastModifiedDate":"2016-12-18"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        menuItem.setAccelerator(keyCombination);","lastModifiedDate":"2016-12-18"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-12-18"},{"lineNumber":93,"author":{"gitId":"-"},"content":"         * TODO: the code below can be removed once the bug reported here","lastModifiedDate":"2016-12-18"},{"lineNumber":94,"author":{"gitId":"-"},"content":"         * https://bugs.openjdk.java.net/browse/JDK-8131666","lastModifiedDate":"2016-12-18"},{"lineNumber":95,"author":{"gitId":"-"},"content":"         * is fixed in later version of SDK.","lastModifiedDate":"2016-12-18"},{"lineNumber":96,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":97,"author":{"gitId":"-"},"content":"         * According to the bug report, TextInputControl (TextField, TextArea) will","lastModifiedDate":"2016-12-18"},{"lineNumber":98,"author":{"gitId":"-"},"content":"         * consume function-key events. Because CommandBox contains a TextField, and","lastModifiedDate":"2016-12-18"},{"lineNumber":99,"author":{"gitId":"-"},"content":"         * ResultDisplay contains a TextArea, thus some accelerators (e.g F1) will","lastModifiedDate":"2016-12-18"},{"lineNumber":100,"author":{"gitId":"-"},"content":"         * not work when the focus is in them because the key event is consumed by","lastModifiedDate":"2016-12-18"},{"lineNumber":101,"author":{"gitId":"-"},"content":"         * the TextInputControl(s).","lastModifiedDate":"2016-12-18"},{"lineNumber":102,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":103,"author":{"gitId":"-"},"content":"         * For now, we add following event filter to capture such key events and open","lastModifiedDate":"2016-12-18"},{"lineNumber":104,"author":{"gitId":"-"},"content":"         * help window purposely so to support accelerators even when focus is","lastModifiedDate":"2016-12-18"},{"lineNumber":105,"author":{"gitId":"-"},"content":"         * in CommandBox or ResultDisplay.","lastModifiedDate":"2016-12-18"},{"lineNumber":106,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-18"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        getRoot().addEventFilter(KeyEvent.KEY_PRESSED, event -\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":108,"author":{"gitId":"-"},"content":"            if (event.getTarget() instanceof TextInputControl \u0026\u0026 keyCombination.match(event)) {","lastModifiedDate":"2016-12-18"},{"lineNumber":109,"author":{"gitId":"-"},"content":"                menuItem.getOnAction().handle(new ActionEvent());","lastModifiedDate":"2016-12-18"},{"lineNumber":110,"author":{"gitId":"-"},"content":"                event.consume();","lastModifiedDate":"2016-12-18"},{"lineNumber":111,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-12-18"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        });","lastModifiedDate":"2016-12-18"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":116,"author":{"gitId":"-"},"content":"     * Fills up all the placeholders of this window.","lastModifiedDate":"2017-08-16"},{"lineNumber":117,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    void fillInnerParts() {","lastModifiedDate":"2016-09-21"},{"lineNumber":119,"author":{"gitId":"kanjitp"},"content":"        participantListPanel \u003d new ParticipantListPanel(logic.getFilteredParticipantList());","lastModifiedDate":"2021-09-26"},{"lineNumber":120,"author":{"gitId":"ntwbruce"},"content":"        participantListPanelPlaceholder.getChildren().add(participantListPanel.getRoot());","lastModifiedDate":"2021-10-02"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":122,"author":{"gitId":"XXJJXJ"},"content":"        //Add-on for Managera","lastModifiedDate":"2021-09-18"},{"lineNumber":123,"author":{"gitId":"XXJJXJ"},"content":"        eventListPanel \u003d new EventListPanel(logic.getFilteredEventList());","lastModifiedDate":"2021-09-21"},{"lineNumber":124,"author":{"gitId":"XXJJXJ"},"content":"        eventListPanelPlaceholder.getChildren().add(eventListPanel.getRoot());","lastModifiedDate":"2021-09-18"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        resultDisplay \u003d new ResultDisplay();","lastModifiedDate":"2018-12-09"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        resultDisplayPlaceholder.getChildren().add(resultDisplay.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        StatusBarFooter statusBarFooter \u003d new StatusBarFooter(logic.getAddressBookFilePath());","lastModifiedDate":"2019-01-25"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        statusbarPlaceholder.getChildren().add(statusBarFooter.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        CommandBox commandBox \u003d new CommandBox(this::executeCommand);","lastModifiedDate":"2019-01-25"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        commandBoxPlaceholder.getChildren().add(commandBox.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":137,"author":{"gitId":"-"},"content":"     * Sets the default size based on {@code guiSettings}.","lastModifiedDate":"2018-11-27"},{"lineNumber":138,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    private void setWindowDefaultSize(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        primaryStage.setHeight(guiSettings.getWindowHeight());","lastModifiedDate":"2018-11-27"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        primaryStage.setWidth(guiSettings.getWindowWidth());","lastModifiedDate":"2018-11-27"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        if (guiSettings.getWindowCoordinates() !\u003d null) {","lastModifiedDate":"2018-11-27"},{"lineNumber":143,"author":{"gitId":"-"},"content":"            primaryStage.setX(guiSettings.getWindowCoordinates().getX());","lastModifiedDate":"2018-11-27"},{"lineNumber":144,"author":{"gitId":"-"},"content":"            primaryStage.setY(guiSettings.getWindowCoordinates().getY());","lastModifiedDate":"2018-11-27"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-18"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":149,"author":{"gitId":"-"},"content":"     * Opens the help window or focuses on it if it\u0027s already opened.","lastModifiedDate":"2018-03-15"},{"lineNumber":150,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    public void handleHelp() {","lastModifiedDate":"2016-08-31"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        if (!helpWindow.isShowing()) {","lastModifiedDate":"2018-03-15"},{"lineNumber":154,"author":{"gitId":"-"},"content":"            helpWindow.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        } else {","lastModifiedDate":"2018-03-15"},{"lineNumber":156,"author":{"gitId":"-"},"content":"            helpWindow.focus();","lastModifiedDate":"2018-03-15"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-03-15"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    void show() {","lastModifiedDate":"2016-10-15"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        primaryStage.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":165,"author":{"gitId":"-"},"content":"     * Closes the application.","lastModifiedDate":"2016-08-18"},{"lineNumber":166,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    private void handleExit() {","lastModifiedDate":"2016-08-18"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(primaryStage.getWidth(), primaryStage.getHeight(),","lastModifiedDate":"2018-12-08"},{"lineNumber":170,"author":{"gitId":"-"},"content":"                (int) primaryStage.getX(), (int) primaryStage.getY());","lastModifiedDate":"2018-12-08"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        logic.setGuiSettings(guiSettings);","lastModifiedDate":"2018-12-08"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        helpWindow.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        primaryStage.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-25"},{"lineNumber":176,"author":{"gitId":"kanjitp"},"content":"    public ParticipantListPanel getParticipantListPanel() {","lastModifiedDate":"2021-09-26"},{"lineNumber":177,"author":{"gitId":"kanjitp"},"content":"        return participantListPanel;","lastModifiedDate":"2021-09-26"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-25"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":181,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2018-12-09"},{"lineNumber":182,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-09"},{"lineNumber":183,"author":{"gitId":"-"},"content":"     * @see seedu.address.logic.Logic#execute(String)","lastModifiedDate":"2018-12-09"},{"lineNumber":184,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    private CommandResult executeCommand(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2018-12-09"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":187,"author":{"gitId":"-"},"content":"            CommandResult commandResult \u003d logic.execute(commandText);","lastModifiedDate":"2018-12-09"},{"lineNumber":188,"author":{"gitId":"-"},"content":"            logger.info(\"Result: \" + commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":189,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":191,"author":{"gitId":"-"},"content":"            if (commandResult.isShowHelp()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":192,"author":{"gitId":"-"},"content":"                handleHelp();","lastModifiedDate":"2018-12-09"},{"lineNumber":193,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":195,"author":{"gitId":"-"},"content":"            if (commandResult.isExit()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":196,"author":{"gitId":"-"},"content":"                handleExit();","lastModifiedDate":"2018-12-09"},{"lineNumber":197,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":198,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":199,"author":{"gitId":"-"},"content":"            return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":200,"author":{"gitId":"-"},"content":"        } catch (CommandException | ParseException e) {","lastModifiedDate":"2018-12-09"},{"lineNumber":201,"author":{"gitId":"-"},"content":"            logger.info(\"Invalid command: \" + commandText);","lastModifiedDate":"2018-12-09"},{"lineNumber":202,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(e.getMessage());","lastModifiedDate":"2018-12-09"},{"lineNumber":203,"author":{"gitId":"-"},"content":"            throw e;","lastModifiedDate":"2018-12-09"},{"lineNumber":204,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":205,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":206,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"XXJJXJ":7,"kanjitp":4,"ntwbruce":3,"-":192}},{"path":"src/main/java/seedu/address/ui/ParticipantCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ntwbruce"},"content":"package seedu.address.ui;","lastModifiedDate":"2021-10-02"},{"lineNumber":2,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":3,"author":{"gitId":"ntwbruce"},"content":"import java.util.Comparator;","lastModifiedDate":"2021-10-02"},{"lineNumber":4,"author":{"gitId":"ntwbruce"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2021-10-03"},{"lineNumber":5,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":6,"author":{"gitId":"ntwbruce"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-10-02"},{"lineNumber":7,"author":{"gitId":"ntwbruce"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2021-10-02"},{"lineNumber":8,"author":{"gitId":"ntwbruce"},"content":"import javafx.scene.layout.FlowPane;","lastModifiedDate":"2021-10-02"},{"lineNumber":9,"author":{"gitId":"ntwbruce"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2021-10-02"},{"lineNumber":10,"author":{"gitId":"ntwbruce"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2021-10-02"},{"lineNumber":11,"author":{"gitId":"ntwbruce"},"content":"import seedu.address.model.nextofkin.NextOfKin;","lastModifiedDate":"2021-10-03"},{"lineNumber":12,"author":{"gitId":"ntwbruce"},"content":"import seedu.address.model.participant.Note;","lastModifiedDate":"2021-10-03"},{"lineNumber":13,"author":{"gitId":"ntwbruce"},"content":"import seedu.address.model.participant.Participant;","lastModifiedDate":"2021-10-02"},{"lineNumber":14,"author":{"gitId":"ntwbruce"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2021-10-03"},{"lineNumber":15,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":16,"author":{"gitId":"ntwbruce"},"content":"/**","lastModifiedDate":"2021-10-02"},{"lineNumber":17,"author":{"gitId":"ntwbruce"},"content":" * An UI component that displays information of a {@code Participant}.","lastModifiedDate":"2021-10-02"},{"lineNumber":18,"author":{"gitId":"ntwbruce"},"content":" */","lastModifiedDate":"2021-10-02"},{"lineNumber":19,"author":{"gitId":"ntwbruce"},"content":"public class ParticipantCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2021-10-02"},{"lineNumber":20,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":21,"author":{"gitId":"ntwbruce"},"content":"    private static final String FXML \u003d \"ParticipantListCard.fxml\";","lastModifiedDate":"2021-10-02"},{"lineNumber":22,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":23,"author":{"gitId":"ntwbruce"},"content":"    /**","lastModifiedDate":"2021-10-02"},{"lineNumber":24,"author":{"gitId":"ntwbruce"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX.","lastModifiedDate":"2021-10-02"},{"lineNumber":25,"author":{"gitId":"ntwbruce"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","lastModifiedDate":"2021-10-02"},{"lineNumber":26,"author":{"gitId":"ntwbruce"},"content":"     * or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2021-10-02"},{"lineNumber":27,"author":{"gitId":"ntwbruce"},"content":"     *","lastModifiedDate":"2021-10-02"},{"lineNumber":28,"author":{"gitId":"ntwbruce"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe issue on AddressBook level 4\u003c/a\u003e","lastModifiedDate":"2021-10-02"},{"lineNumber":29,"author":{"gitId":"ntwbruce"},"content":"     */","lastModifiedDate":"2021-10-02"},{"lineNumber":30,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":31,"author":{"gitId":"ntwbruce"},"content":"    public final Participant participant;","lastModifiedDate":"2021-10-02"},{"lineNumber":32,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":33,"author":{"gitId":"ntwbruce"},"content":"    @FXML","lastModifiedDate":"2021-10-02"},{"lineNumber":34,"author":{"gitId":"ntwbruce"},"content":"    private HBox cardPane;","lastModifiedDate":"2021-10-02"},{"lineNumber":35,"author":{"gitId":"ntwbruce"},"content":"    @FXML","lastModifiedDate":"2021-10-02"},{"lineNumber":36,"author":{"gitId":"ntwbruce"},"content":"    private Label name;","lastModifiedDate":"2021-10-02"},{"lineNumber":37,"author":{"gitId":"ntwbruce"},"content":"    @FXML","lastModifiedDate":"2021-10-02"},{"lineNumber":38,"author":{"gitId":"ntwbruce"},"content":"    private Label id;","lastModifiedDate":"2021-10-02"},{"lineNumber":39,"author":{"gitId":"ntwbruce"},"content":"    @FXML","lastModifiedDate":"2021-10-02"},{"lineNumber":40,"author":{"gitId":"ntwbruce"},"content":"    private Label phone;","lastModifiedDate":"2021-10-02"},{"lineNumber":41,"author":{"gitId":"ntwbruce"},"content":"    @FXML","lastModifiedDate":"2021-10-02"},{"lineNumber":42,"author":{"gitId":"ntwbruce"},"content":"    private Label address;","lastModifiedDate":"2021-10-02"},{"lineNumber":43,"author":{"gitId":"ntwbruce"},"content":"    @FXML","lastModifiedDate":"2021-10-02"},{"lineNumber":44,"author":{"gitId":"ntwbruce"},"content":"    private Label email;","lastModifiedDate":"2021-10-02"},{"lineNumber":45,"author":{"gitId":"ntwbruce"},"content":"    @FXML","lastModifiedDate":"2021-10-02"},{"lineNumber":46,"author":{"gitId":"ntwbruce"},"content":"    private FlowPane tags;","lastModifiedDate":"2021-10-02"},{"lineNumber":47,"author":{"gitId":"ntwbruce"},"content":"    @FXML","lastModifiedDate":"2021-10-02"},{"lineNumber":48,"author":{"gitId":"ntwbruce"},"content":"    private Label participantId;","lastModifiedDate":"2021-10-02"},{"lineNumber":49,"author":{"gitId":"ntwbruce"},"content":"    @FXML","lastModifiedDate":"2021-10-02"},{"lineNumber":50,"author":{"gitId":"ntwbruce"},"content":"    private Label birthDate;","lastModifiedDate":"2021-10-02"},{"lineNumber":51,"author":{"gitId":"ntwbruce"},"content":"    @FXML","lastModifiedDate":"2021-10-02"},{"lineNumber":52,"author":{"gitId":"ntwbruce"},"content":"    private FlowPane notes;","lastModifiedDate":"2021-10-02"},{"lineNumber":53,"author":{"gitId":"ntwbruce"},"content":"    @FXML","lastModifiedDate":"2021-10-02"},{"lineNumber":54,"author":{"gitId":"ntwbruce"},"content":"    private Label nextOfKins;","lastModifiedDate":"2021-10-03"},{"lineNumber":55,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":56,"author":{"gitId":"ntwbruce"},"content":"    /**","lastModifiedDate":"2021-10-02"},{"lineNumber":57,"author":{"gitId":"ntwbruce"},"content":"     * Creates a {@code ParticipantCode} with the given {@code Participant} and index to display.","lastModifiedDate":"2021-10-02"},{"lineNumber":58,"author":{"gitId":"ntwbruce"},"content":"     */","lastModifiedDate":"2021-10-02"},{"lineNumber":59,"author":{"gitId":"ntwbruce"},"content":"    public ParticipantCard(Participant participant, int displayedIndex) {","lastModifiedDate":"2021-10-02"},{"lineNumber":60,"author":{"gitId":"ntwbruce"},"content":"        super(FXML);","lastModifiedDate":"2021-10-02"},{"lineNumber":61,"author":{"gitId":"ntwbruce"},"content":"        this.participant \u003d participant;","lastModifiedDate":"2021-10-02"},{"lineNumber":62,"author":{"gitId":"ntwbruce"},"content":"        id.setText(displayedIndex + \". \");","lastModifiedDate":"2021-10-02"},{"lineNumber":63,"author":{"gitId":"ntwbruce"},"content":"        name.setText(participant.getFullName());","lastModifiedDate":"2021-10-03"},{"lineNumber":64,"author":{"gitId":"ntwbruce"},"content":"        phone.setText(participant.getPhoneValue());","lastModifiedDate":"2021-10-03"},{"lineNumber":65,"author":{"gitId":"ntwbruce"},"content":"        address.setText(participant.getAddressValue());","lastModifiedDate":"2021-10-03"},{"lineNumber":66,"author":{"gitId":"ntwbruce"},"content":"        email.setText(participant.getEmailValue());","lastModifiedDate":"2021-10-03"},{"lineNumber":67,"author":{"gitId":"ntwbruce"},"content":"        participant.getTags().stream()","lastModifiedDate":"2021-10-02"},{"lineNumber":68,"author":{"gitId":"ntwbruce"},"content":"                .sorted(Comparator.comparing(Tag::getTagName))","lastModifiedDate":"2021-10-03"},{"lineNumber":69,"author":{"gitId":"ntwbruce"},"content":"                .forEach(tag -\u003e tags.getChildren().add(new Label(tag.getTagName())));","lastModifiedDate":"2021-10-03"},{"lineNumber":70,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":71,"author":{"gitId":"ntwbruce"},"content":"        participantId.setText(participant.getParticipantIdValue());","lastModifiedDate":"2021-10-03"},{"lineNumber":72,"author":{"gitId":"ntwbruce"},"content":"        birthDate.setText(participant.getBirthDateString());","lastModifiedDate":"2021-10-03"},{"lineNumber":73,"author":{"gitId":"ntwbruce"},"content":"        participant.getNotes().stream()","lastModifiedDate":"2021-10-02"},{"lineNumber":74,"author":{"gitId":"ntwbruce"},"content":"                .sorted(Comparator.comparing(Note::toString))","lastModifiedDate":"2021-10-03"},{"lineNumber":75,"author":{"gitId":"ntwbruce"},"content":"                .forEach(note -\u003e notes.getChildren().add(noteLabel(note)));","lastModifiedDate":"2021-10-03"},{"lineNumber":76,"author":{"gitId":"ntwbruce"},"content":"        nextOfKins.setText(participant.getNextOfKins().stream().map(NextOfKin::toString).collect(Collectors.joining()));","lastModifiedDate":"2021-10-03"},{"lineNumber":77,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":78,"author":{"gitId":"ntwbruce"},"content":"    }","lastModifiedDate":"2021-10-02"},{"lineNumber":79,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":80,"author":{"gitId":"ntwbruce"},"content":"    /**","lastModifiedDate":"2021-10-03"},{"lineNumber":81,"author":{"gitId":"ntwbruce"},"content":"     * Creates a custom Label for Notes with colour based on Note Importance.","lastModifiedDate":"2021-10-03"},{"lineNumber":82,"author":{"gitId":"ntwbruce"},"content":"     * @param note note to make a Label for.","lastModifiedDate":"2021-10-03"},{"lineNumber":83,"author":{"gitId":"ntwbruce"},"content":"     * @return a Label representing the Note.","lastModifiedDate":"2021-10-03"},{"lineNumber":84,"author":{"gitId":"ntwbruce"},"content":"     */","lastModifiedDate":"2021-10-03"},{"lineNumber":85,"author":{"gitId":"ntwbruce"},"content":"    public Label noteLabel(Note note) {","lastModifiedDate":"2021-10-03"},{"lineNumber":86,"author":{"gitId":"ntwbruce"},"content":"        Label label \u003d new Label();","lastModifiedDate":"2021-10-03"},{"lineNumber":87,"author":{"gitId":"ntwbruce"},"content":"        label.setText(note.getContent());","lastModifiedDate":"2021-10-03"},{"lineNumber":88,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":89,"author":{"gitId":"ntwbruce"},"content":"        switch(note.getImportance()) {","lastModifiedDate":"2021-10-03"},{"lineNumber":90,"author":{"gitId":"ntwbruce"},"content":"        case VERY_HIGH:","lastModifiedDate":"2021-10-03"},{"lineNumber":91,"author":{"gitId":"ntwbruce"},"content":"            label.setStyle(\"-fx-background-color: #ff0000; -fx-text-fill: white; -fx-padding: 1 3 1 3; \"","lastModifiedDate":"2021-10-03"},{"lineNumber":92,"author":{"gitId":"ntwbruce"},"content":"                    + \"-fx-border-radius: 2; -fx-background-radius: 2; -fx-font-size: 11;\");","lastModifiedDate":"2021-10-03"},{"lineNumber":93,"author":{"gitId":"ntwbruce"},"content":"            break;","lastModifiedDate":"2021-10-03"},{"lineNumber":94,"author":{"gitId":"ntwbruce"},"content":"        case HIGH:","lastModifiedDate":"2021-10-03"},{"lineNumber":95,"author":{"gitId":"ntwbruce"},"content":"            label.setStyle(\"-fx-background-color: #ffa600; -fx-text-fill: black; -fx-padding: 1 3 1 3; \"","lastModifiedDate":"2021-10-03"},{"lineNumber":96,"author":{"gitId":"ntwbruce"},"content":"                    + \"-fx-border-radius: 2; -fx-background-radius: 2; -fx-font-size: 11;\");","lastModifiedDate":"2021-10-03"},{"lineNumber":97,"author":{"gitId":"ntwbruce"},"content":"            break;","lastModifiedDate":"2021-10-03"},{"lineNumber":98,"author":{"gitId":"ntwbruce"},"content":"        case MEDIUM:","lastModifiedDate":"2021-10-03"},{"lineNumber":99,"author":{"gitId":"ntwbruce"},"content":"            label.setStyle(\"-fx-background-color: #ffff00; -fx-text-fill: black; -fx-padding: 1 3 1 3; \"","lastModifiedDate":"2021-10-03"},{"lineNumber":100,"author":{"gitId":"ntwbruce"},"content":"                    + \"-fx-border-radius: 2; -fx-background-radius: 2; -fx-font-size: 11;\");","lastModifiedDate":"2021-10-03"},{"lineNumber":101,"author":{"gitId":"ntwbruce"},"content":"            break;","lastModifiedDate":"2021-10-03"},{"lineNumber":102,"author":{"gitId":"ntwbruce"},"content":"        case LOW:","lastModifiedDate":"2021-10-03"},{"lineNumber":103,"author":{"gitId":"ntwbruce"},"content":"            label.setStyle(\"-fx-background-color: #00ff00; -fx-text-fill: black; -fx-padding: 1 3 1 3; \"","lastModifiedDate":"2021-10-03"},{"lineNumber":104,"author":{"gitId":"ntwbruce"},"content":"                    + \"-fx-border-radius: 2; -fx-background-radius: 2; -fx-font-size: 11;\");","lastModifiedDate":"2021-10-03"},{"lineNumber":105,"author":{"gitId":"ntwbruce"},"content":"            break;","lastModifiedDate":"2021-10-03"},{"lineNumber":106,"author":{"gitId":"ntwbruce"},"content":"        case VERY_LOW:","lastModifiedDate":"2021-10-03"},{"lineNumber":107,"author":{"gitId":"ntwbruce"},"content":"            label.setStyle(\"-fx-background-color: #0000ff; -fx-text-fill: white; -fx-padding: 1 3 1 3; \"","lastModifiedDate":"2021-10-03"},{"lineNumber":108,"author":{"gitId":"ntwbruce"},"content":"                    + \"-fx-border-radius: 2; -fx-background-radius: 2; -fx-font-size: 11;\");","lastModifiedDate":"2021-10-03"},{"lineNumber":109,"author":{"gitId":"ntwbruce"},"content":"            break;","lastModifiedDate":"2021-10-03"},{"lineNumber":110,"author":{"gitId":"ntwbruce"},"content":"        default:","lastModifiedDate":"2021-10-03"},{"lineNumber":111,"author":{"gitId":"ntwbruce"},"content":"        }","lastModifiedDate":"2021-10-03"},{"lineNumber":112,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":113,"author":{"gitId":"ntwbruce"},"content":"        return label;","lastModifiedDate":"2021-10-03"},{"lineNumber":114,"author":{"gitId":"ntwbruce"},"content":"    }","lastModifiedDate":"2021-10-03"},{"lineNumber":115,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":116,"author":{"gitId":"ntwbruce"},"content":"    @Override","lastModifiedDate":"2021-10-02"},{"lineNumber":117,"author":{"gitId":"ntwbruce"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-02"},{"lineNumber":118,"author":{"gitId":"ntwbruce"},"content":"        // short circuit if same object","lastModifiedDate":"2021-10-02"},{"lineNumber":119,"author":{"gitId":"ntwbruce"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2021-10-02"},{"lineNumber":120,"author":{"gitId":"ntwbruce"},"content":"            return true;","lastModifiedDate":"2021-10-02"},{"lineNumber":121,"author":{"gitId":"ntwbruce"},"content":"        }","lastModifiedDate":"2021-10-02"},{"lineNumber":122,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":123,"author":{"gitId":"ntwbruce"},"content":"        // instanceof handles nulls","lastModifiedDate":"2021-10-02"},{"lineNumber":124,"author":{"gitId":"ntwbruce"},"content":"        if (!(other instanceof ParticipantCard)) {","lastModifiedDate":"2021-10-02"},{"lineNumber":125,"author":{"gitId":"ntwbruce"},"content":"            return false;","lastModifiedDate":"2021-10-02"},{"lineNumber":126,"author":{"gitId":"ntwbruce"},"content":"        }","lastModifiedDate":"2021-10-02"},{"lineNumber":127,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":128,"author":{"gitId":"ntwbruce"},"content":"        // state check","lastModifiedDate":"2021-10-02"},{"lineNumber":129,"author":{"gitId":"ntwbruce"},"content":"        ParticipantCard card \u003d (ParticipantCard) other;","lastModifiedDate":"2021-10-02"},{"lineNumber":130,"author":{"gitId":"ntwbruce"},"content":"        return id.getText().equals(card.id.getText())","lastModifiedDate":"2021-10-02"},{"lineNumber":131,"author":{"gitId":"ntwbruce"},"content":"                \u0026\u0026 participant.equals(card.participant);","lastModifiedDate":"2021-10-02"},{"lineNumber":132,"author":{"gitId":"ntwbruce"},"content":"    }","lastModifiedDate":"2021-10-02"},{"lineNumber":133,"author":{"gitId":"ntwbruce"},"content":"}","lastModifiedDate":"2021-10-02"}],"authorContributionMap":{"ntwbruce":133}},{"path":"src/main/java/seedu/address/ui/ParticipantListPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kanjitp"},"content":"package seedu.address.ui;","lastModifiedDate":"2021-09-26"},{"lineNumber":2,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":3,"author":{"gitId":"kanjitp"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2021-09-26"},{"lineNumber":4,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":5,"author":{"gitId":"kanjitp"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-09-26"},{"lineNumber":6,"author":{"gitId":"kanjitp"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-09-26"},{"lineNumber":7,"author":{"gitId":"kanjitp"},"content":"import javafx.scene.control.ListCell;","lastModifiedDate":"2021-09-26"},{"lineNumber":8,"author":{"gitId":"kanjitp"},"content":"import javafx.scene.control.ListView;","lastModifiedDate":"2021-09-26"},{"lineNumber":9,"author":{"gitId":"kanjitp"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2021-09-26"},{"lineNumber":10,"author":{"gitId":"kanjitp"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2021-09-26"},{"lineNumber":11,"author":{"gitId":"kanjitp"},"content":"import seedu.address.model.participant.Participant;","lastModifiedDate":"2021-09-26"},{"lineNumber":12,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":13,"author":{"gitId":"ntwbruce"},"content":"/**","lastModifiedDate":"2021-10-02"},{"lineNumber":14,"author":{"gitId":"ntwbruce"},"content":" * Panel containing the list of participants.","lastModifiedDate":"2021-10-02"},{"lineNumber":15,"author":{"gitId":"ntwbruce"},"content":" */","lastModifiedDate":"2021-10-02"},{"lineNumber":16,"author":{"gitId":"kanjitp"},"content":"public class ParticipantListPanel extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2021-09-26"},{"lineNumber":17,"author":{"gitId":"kanjitp"},"content":"    private static final String FXML \u003d \"ParticipantListPanel.fxml\";","lastModifiedDate":"2021-09-26"},{"lineNumber":18,"author":{"gitId":"ntwbruce"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(ParticipantListPanel.class);","lastModifiedDate":"2021-10-02"},{"lineNumber":19,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":20,"author":{"gitId":"kanjitp"},"content":"    @FXML","lastModifiedDate":"2021-09-26"},{"lineNumber":21,"author":{"gitId":"kanjitp"},"content":"    private ListView\u003cParticipant\u003e participantListView;","lastModifiedDate":"2021-09-26"},{"lineNumber":22,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":23,"author":{"gitId":"kanjitp"},"content":"    /**","lastModifiedDate":"2021-09-26"},{"lineNumber":24,"author":{"gitId":"XXJJXJ"},"content":"     * Creates a {@code ParticipantListPanel} with the given {@code ObservableList}.","lastModifiedDate":"2021-09-28"},{"lineNumber":25,"author":{"gitId":"kanjitp"},"content":"     */","lastModifiedDate":"2021-09-26"},{"lineNumber":26,"author":{"gitId":"kanjitp"},"content":"    public ParticipantListPanel(ObservableList\u003cParticipant\u003e participantList) {","lastModifiedDate":"2021-09-26"},{"lineNumber":27,"author":{"gitId":"kanjitp"},"content":"        super(FXML);","lastModifiedDate":"2021-09-26"},{"lineNumber":28,"author":{"gitId":"kanjitp"},"content":"        participantListView.setItems(participantList);","lastModifiedDate":"2021-09-26"},{"lineNumber":29,"author":{"gitId":"ntwbruce"},"content":"        participantListView.setCellFactory(listView -\u003e new ParticipantListViewCell());","lastModifiedDate":"2021-10-02"},{"lineNumber":30,"author":{"gitId":"kanjitp"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":31,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":32,"author":{"gitId":"kanjitp"},"content":"    /**","lastModifiedDate":"2021-09-26"},{"lineNumber":33,"author":{"gitId":"ntwbruce"},"content":"     * Custom {@code ListCell} that displays the graphics of a {@code Participant} using a {@code ParticipantCard}.","lastModifiedDate":"2021-10-02"},{"lineNumber":34,"author":{"gitId":"kanjitp"},"content":"     */","lastModifiedDate":"2021-09-26"},{"lineNumber":35,"author":{"gitId":"kanjitp"},"content":"    class ParticipantListViewCell extends ListCell\u003cParticipant\u003e {","lastModifiedDate":"2021-09-26"},{"lineNumber":36,"author":{"gitId":"kanjitp"},"content":"        @Override","lastModifiedDate":"2021-09-26"},{"lineNumber":37,"author":{"gitId":"kanjitp"},"content":"        protected void updateItem(Participant participant, boolean empty) {","lastModifiedDate":"2021-09-26"},{"lineNumber":38,"author":{"gitId":"kanjitp"},"content":"            super.updateItem(participant, empty);","lastModifiedDate":"2021-09-26"},{"lineNumber":39,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":40,"author":{"gitId":"kanjitp"},"content":"            if (empty || participant \u003d\u003d null) {","lastModifiedDate":"2021-09-26"},{"lineNumber":41,"author":{"gitId":"kanjitp"},"content":"                setGraphic(null);","lastModifiedDate":"2021-09-26"},{"lineNumber":42,"author":{"gitId":"kanjitp"},"content":"                setText(null);","lastModifiedDate":"2021-09-26"},{"lineNumber":43,"author":{"gitId":"kanjitp"},"content":"            } else {","lastModifiedDate":"2021-09-26"},{"lineNumber":44,"author":{"gitId":"ntwbruce"},"content":"                setGraphic(new ParticipantCard(participant, getIndex() + 1).getRoot());","lastModifiedDate":"2021-10-02"},{"lineNumber":45,"author":{"gitId":"kanjitp"},"content":"            }","lastModifiedDate":"2021-09-26"},{"lineNumber":46,"author":{"gitId":"kanjitp"},"content":"        }","lastModifiedDate":"2021-09-26"},{"lineNumber":47,"author":{"gitId":"kanjitp"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":48,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":49,"author":{"gitId":"kanjitp"},"content":"}","lastModifiedDate":"2021-09-26"}],"authorContributionMap":{"XXJJXJ":1,"kanjitp":41,"ntwbruce":7}},{"path":"src/main/java/seedu/address/ui/PersonCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Comparator;","lastModifiedDate":"2019-01-02"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-01-02"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-09-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2016-09-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.layout.FlowPane;","lastModifiedDate":"2016-12-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2016-09-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":11,"author":{"gitId":"ntwbruce"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2021-10-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * An UI component that displays information of a {@code Person}.","lastModifiedDate":"2017-08-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class PersonCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"PersonListCard.fxml\";","lastModifiedDate":"2016-09-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX.","lastModifiedDate":"2017-03-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","lastModifiedDate":"2017-03-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2017-03-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe issue on AddressBook level 4\u003c/a\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public final Person person;","lastModifiedDate":"2018-01-10"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private HBox cardPane;","lastModifiedDate":"2016-09-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private Label name;","lastModifiedDate":"2016-09-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private Label id;","lastModifiedDate":"2016-09-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private Label phone;","lastModifiedDate":"2016-09-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private Label address;","lastModifiedDate":"2016-09-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private Label email;","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    private FlowPane tags;","lastModifiedDate":"2016-12-18"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * Creates a {@code PersonCode} with the given {@code Person} and index to display.","lastModifiedDate":"2020-05-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public PersonCard(Person person, int displayedIndex) {","lastModifiedDate":"2018-01-10"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        this.person \u003d person;","lastModifiedDate":"2017-07-12"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        id.setText(displayedIndex + \". \");","lastModifiedDate":"2016-09-21"},{"lineNumber":52,"author":{"gitId":"ntwbruce"},"content":"        name.setText(person.getFullName());","lastModifiedDate":"2021-10-03"},{"lineNumber":53,"author":{"gitId":"ntwbruce"},"content":"        phone.setText(person.getPhoneValue());","lastModifiedDate":"2021-10-03"},{"lineNumber":54,"author":{"gitId":"ntwbruce"},"content":"        address.setText(person.getAddressValue());","lastModifiedDate":"2021-10-03"},{"lineNumber":55,"author":{"gitId":"ntwbruce"},"content":"        email.setText(person.getEmailValue());","lastModifiedDate":"2021-10-03"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        person.getTags().stream()","lastModifiedDate":"2019-01-02"},{"lineNumber":57,"author":{"gitId":"ntwbruce"},"content":"                .sorted(Comparator.comparing(Tag::getTagName))","lastModifiedDate":"2021-10-03"},{"lineNumber":58,"author":{"gitId":"ntwbruce"},"content":"                .forEach(tag -\u003e tags.getChildren().add(new Label(tag.getTagName())));","lastModifiedDate":"2021-10-03"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-07-14"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-07-14"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-07-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2017-07-14"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-07-14"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-07-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-07-14"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        if (!(other instanceof PersonCard)) {","lastModifiedDate":"2017-07-14"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-07-14"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-07-14"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-07-14"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        PersonCard card \u003d (PersonCard) other;","lastModifiedDate":"2017-07-14"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        return id.getText().equals(card.id.getText())","lastModifiedDate":"2017-07-14"},{"lineNumber":76,"author":{"gitId":"-"},"content":"                \u0026\u0026 person.equals(card.person);","lastModifiedDate":"2017-07-14"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-14"},{"lineNumber":78,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"ntwbruce":7,"-":71}},{"path":"src/main/java/seedu/address/ui/UiManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.application.Platform;","lastModifiedDate":"2016-08-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Alert;","lastModifiedDate":"2016-08-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Alert.AlertType;","lastModifiedDate":"2016-08-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2016-08-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.MainApp;","lastModifiedDate":"2016-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.Logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * The manager of the UI component.","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class UiManager implements Ui {","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String ALERT_DIALOG_PANE_FIELD_ID \u003d \"alertDialogPane\";","lastModifiedDate":"2017-04-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(UiManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":23,"author":{"gitId":"XXJJXJ"},"content":"    private static final String ICON_APPLICATION \u003d \"/images/ManageraIcon.png\";","lastModifiedDate":"2021-09-17"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private MainWindow mainWindow;","lastModifiedDate":"2016-08-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Creates a {@code UiManager} with the given {@code Logic}.","lastModifiedDate":"2020-05-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public UiManager(Logic logic) {","lastModifiedDate":"2018-12-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        super();","lastModifiedDate":"2016-08-18"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void start(Stage primaryStage) {","lastModifiedDate":"2016-09-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        logger.info(\"Starting UI...\");","lastModifiedDate":"2016-09-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        //Set the application icon.","lastModifiedDate":"2016-08-18"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        primaryStage.getIcons().add(getImage(ICON_APPLICATION));","lastModifiedDate":"2016-08-18"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-08-18"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            mainWindow \u003d new MainWindow(primaryStage, logic);","lastModifiedDate":"2018-12-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            mainWindow.show(); //This should be called before creating other UI parts","lastModifiedDate":"2016-08-18"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            mainWindow.fillInnerParts();","lastModifiedDate":"2016-08-18"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        } catch (Throwable e) {","lastModifiedDate":"2016-08-18"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            logger.severe(StringUtil.getDetails(e));","lastModifiedDate":"2016-09-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            showFatalErrorDialogAndShutdown(\"Fatal error during initializing\", e);","lastModifiedDate":"2016-08-18"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-18"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    private Image getImage(String imagePath) {","lastModifiedDate":"2016-08-18"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        return new Image(MainApp.class.getResourceAsStream(imagePath));","lastModifiedDate":"2016-08-18"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    void showAlertDialogAndWait(Alert.AlertType type, String title, String headerText, String contentText) {","lastModifiedDate":"2016-09-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        showAlertDialogAndWait(mainWindow.getPrimaryStage(), type, title, headerText, contentText);","lastModifiedDate":"2016-08-18"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * Shows an alert dialog on {@code owner} with the given parameters.","lastModifiedDate":"2017-08-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * This method only returns after the user has closed the alert dialog.","lastModifiedDate":"2017-08-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    private static void showAlertDialogAndWait(Stage owner, AlertType type, String title, String headerText,","lastModifiedDate":"2016-09-21"},{"lineNumber":67,"author":{"gitId":"-"},"content":"                                               String contentText) {","lastModifiedDate":"2016-08-18"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        final Alert alert \u003d new Alert(type);","lastModifiedDate":"2016-08-18"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        alert.getDialogPane().getStylesheets().add(\"view/DarkTheme.css\");","lastModifiedDate":"2016-08-20"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        alert.initOwner(owner);","lastModifiedDate":"2016-08-18"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        alert.setTitle(title);","lastModifiedDate":"2016-08-18"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        alert.setHeaderText(headerText);","lastModifiedDate":"2016-08-18"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        alert.setContentText(contentText);","lastModifiedDate":"2016-08-18"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        alert.getDialogPane().setId(ALERT_DIALOG_PANE_FIELD_ID);","lastModifiedDate":"2016-10-12"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        alert.showAndWait();","lastModifiedDate":"2016-08-18"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Shows an error alert dialog with {@code title} and error message, {@code e},","lastModifiedDate":"2017-08-16"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * and exits the application after the user has closed the alert dialog.","lastModifiedDate":"2017-08-16"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    private void showFatalErrorDialogAndShutdown(String title, Throwable e) {","lastModifiedDate":"2016-09-21"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        logger.severe(title + \" \" + e.getMessage() + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-21"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        showAlertDialogAndWait(Alert.AlertType.ERROR, title, e.getMessage(), e.toString());","lastModifiedDate":"2016-08-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        Platform.exit();","lastModifiedDate":"2016-08-18"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        System.exit(1);","lastModifiedDate":"2016-08-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-25"},{"lineNumber":89,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"XXJJXJ":1,"-":88}},{"path":"src/main/resources/view/DarkTheme.css","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":".background {","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    background-color: #383838; /* Used in the default.html file */","lastModifiedDate":"2017-03-02"},{"lineNumber":4,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":".label {","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Open Sans Semibold\";","lastModifiedDate":"2021-08-28"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    -fx-text-fill: #555555;","lastModifiedDate":"2016-08-15"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.9;","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":".label-bright {","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Open Sans Semibold\";","lastModifiedDate":"2021-08-28"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":".label-header {","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    -fx-font-size: 32pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Open Sans Light\";","lastModifiedDate":"2021-08-28"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":".text-field {","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    -fx-font-size: 12pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Open Sans Semibold\";","lastModifiedDate":"2021-08-28"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":".tab-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":".tab-pane .tab-header-area {","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    -fx-min-height: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    -fx-max-height: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":".table-view {","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    -fx-base: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    -fx-control-inner-background: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    -fx-table-cell-border-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    -fx-table-header-border-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    -fx-padding: 5;","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":".table-view .column-header-background {","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":".table-view .column-header, .table-view .filler {","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    -fx-size: 35;","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    -fx-border-width: 0 0 1 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    -fx-border-color:","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        transparent","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        transparent","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        derive(-fx-base, 80%)","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    -fx-border-insets: 0 10 1 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":".table-view .column-header .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    -fx-font-size: 20pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Open Sans Light\";","lastModifiedDate":"2021-08-28"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    -fx-alignment: center-left;","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":".table-view:focused .table-row-cell:filled:focused:selected {","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    -fx-background-color: -fx-focus-color;","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":".split-pane:horizontal .split-pane-divider {","lastModifiedDate":"2016-08-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2017-03-02"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    -fx-border-color: transparent transparent transparent #4d4d4d;","lastModifiedDate":"2017-03-02"},{"lineNumber":82,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":84,"author":{"gitId":"-"},"content":".split-pane {","lastModifiedDate":"2016-08-15"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    -fx-border-radius: 1;","lastModifiedDate":"2016-08-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2016-08-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":".list-view {","lastModifiedDate":"2017-03-02"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    -fx-padding: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2018-01-10"},{"lineNumber":94,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":96,"author":{"gitId":"-"},"content":".list-cell {","lastModifiedDate":"2016-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    -fx-label-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    -fx-graphic-text-gap : 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":".list-cell:filled:even {","lastModifiedDate":"2017-03-02"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    -fx-background-color: #3c3e3f;","lastModifiedDate":"2017-03-02"},{"lineNumber":104,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":106,"author":{"gitId":"-"},"content":".list-cell:filled:odd {","lastModifiedDate":"2017-03-02"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    -fx-background-color: #515658;","lastModifiedDate":"2017-03-02"},{"lineNumber":108,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":110,"author":{"gitId":"-"},"content":".list-cell:filled:selected {","lastModifiedDate":"2017-03-02"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    -fx-background-color: #424d5f;","lastModifiedDate":"2017-03-02"},{"lineNumber":112,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":114,"author":{"gitId":"-"},"content":".list-cell:filled:selected #cardPane {","lastModifiedDate":"2017-03-02"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    -fx-border-color: #3e7b91;","lastModifiedDate":"2017-03-02"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2017-03-02"},{"lineNumber":117,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":119,"author":{"gitId":"-"},"content":".list-cell .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2017-03-02"},{"lineNumber":121,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":".cell_big_label {","lastModifiedDate":"2016-08-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Open Sans Semibold\";","lastModifiedDate":"2021-08-28"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    -fx-font-size: 16px;","lastModifiedDate":"2016-08-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    -fx-text-fill: #010504;","lastModifiedDate":"2016-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":".cell_small_label {","lastModifiedDate":"2016-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Open Sans Regular\";","lastModifiedDate":"2021-08-28"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    -fx-font-size: 13px;","lastModifiedDate":"2017-03-02"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    -fx-text-fill: #010504;","lastModifiedDate":"2016-08-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":".stack-pane {","lastModifiedDate":"2018-04-01"},{"lineNumber":136,"author":{"gitId":"-"},"content":"     -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":137,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":".pane-with-border {","lastModifiedDate":"2017-05-15"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2017-05-09"},{"lineNumber":141,"author":{"gitId":"-"},"content":"     -fx-border-color: derive(#1d1d1d, 10%);","lastModifiedDate":"2017-05-09"},{"lineNumber":142,"author":{"gitId":"-"},"content":"     -fx-border-top-width: 1px;","lastModifiedDate":"2017-05-09"},{"lineNumber":143,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-09"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":145,"author":{"gitId":"-"},"content":".status-bar {","lastModifiedDate":"2016-08-08"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2018-12-08"},{"lineNumber":147,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":149,"author":{"gitId":"-"},"content":".result-display {","lastModifiedDate":"2016-09-14"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2017-03-02"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Open Sans Light\";","lastModifiedDate":"2021-08-28"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    -fx-font-size: 13pt;","lastModifiedDate":"2017-03-02"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2017-03-02"},{"lineNumber":154,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":156,"author":{"gitId":"-"},"content":".result-display .label {","lastModifiedDate":"2016-09-14"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    -fx-text-fill: black !important;","lastModifiedDate":"2016-09-14"},{"lineNumber":158,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":160,"author":{"gitId":"-"},"content":".status-bar .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Open Sans Light\";","lastModifiedDate":"2021-08-28"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    -fx-padding: 4px;","lastModifiedDate":"2018-12-08"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    -fx-pref-height: 30px;","lastModifiedDate":"2018-12-08"},{"lineNumber":165,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":167,"author":{"gitId":"-"},"content":".status-bar-with-border {","lastModifiedDate":"2016-08-08"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    -fx-border-color: derive(#1d1d1d, 25%);","lastModifiedDate":"2016-08-15"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    -fx-border-width: 1px;","lastModifiedDate":"2016-08-08"},{"lineNumber":171,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":173,"author":{"gitId":"-"},"content":".status-bar-with-border .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":175,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":177,"author":{"gitId":"-"},"content":".grid-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    -fx-border-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    -fx-border-width: 1px;","lastModifiedDate":"2016-08-08"},{"lineNumber":181,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":183,"author":{"gitId":"-"},"content":".grid-pane .stack-pane {","lastModifiedDate":"2018-04-01"},{"lineNumber":184,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":185,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":187,"author":{"gitId":"-"},"content":".context-menu {","lastModifiedDate":"2016-08-08"},{"lineNumber":188,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 50%);","lastModifiedDate":"2016-08-15"},{"lineNumber":189,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":191,"author":{"gitId":"-"},"content":".context-menu .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":192,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":193,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":195,"author":{"gitId":"-"},"content":".menu-bar {","lastModifiedDate":"2016-08-08"},{"lineNumber":196,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":197,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":198,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":199,"author":{"gitId":"-"},"content":".menu-bar .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":200,"author":{"gitId":"-"},"content":"    -fx-font-size: 14pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":201,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Open Sans Light\";","lastModifiedDate":"2021-08-28"},{"lineNumber":202,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.9;","lastModifiedDate":"2016-08-08"},{"lineNumber":204,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":206,"author":{"gitId":"-"},"content":".menu .left-container {","lastModifiedDate":"2016-08-08"},{"lineNumber":207,"author":{"gitId":"-"},"content":"    -fx-background-color: black;","lastModifiedDate":"2016-08-08"},{"lineNumber":208,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":210,"author":{"gitId":"-"},"content":"/*","lastModifiedDate":"2016-08-08"},{"lineNumber":211,"author":{"gitId":"-"},"content":" * Metro style Push Button","lastModifiedDate":"2016-08-08"},{"lineNumber":212,"author":{"gitId":"-"},"content":" * Author: Pedro Duque Vieira","lastModifiedDate":"2016-08-08"},{"lineNumber":213,"author":{"gitId":"-"},"content":" * http://pixelduke.wordpress.com/2012/10/23/jmetro-windows-8-controls-on-java/","lastModifiedDate":"2016-08-08"},{"lineNumber":214,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":215,"author":{"gitId":"-"},"content":".button {","lastModifiedDate":"2016-08-08"},{"lineNumber":216,"author":{"gitId":"-"},"content":"    -fx-padding: 5 22 5 22;","lastModifiedDate":"2016-08-08"},{"lineNumber":217,"author":{"gitId":"-"},"content":"    -fx-border-color: #e2e2e2;","lastModifiedDate":"2016-08-08"},{"lineNumber":218,"author":{"gitId":"-"},"content":"    -fx-border-width: 2;","lastModifiedDate":"2016-08-08"},{"lineNumber":219,"author":{"gitId":"-"},"content":"    -fx-background-radius: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":220,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":221,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Open Sans Regular\";","lastModifiedDate":"2021-08-28"},{"lineNumber":222,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":223,"author":{"gitId":"-"},"content":"    -fx-text-fill: #d8d8d8;","lastModifiedDate":"2016-08-08"},{"lineNumber":224,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0 0 0 0, 0, 1, 2;","lastModifiedDate":"2016-08-08"},{"lineNumber":225,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":227,"author":{"gitId":"-"},"content":".button:hover {","lastModifiedDate":"2016-08-08"},{"lineNumber":228,"author":{"gitId":"-"},"content":"    -fx-background-color: #3a3a3a;","lastModifiedDate":"2016-08-08"},{"lineNumber":229,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":230,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":231,"author":{"gitId":"-"},"content":".button:pressed, .button:default:hover:pressed {","lastModifiedDate":"2016-08-08"},{"lineNumber":232,"author":{"gitId":"-"},"content":"  -fx-background-color: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":233,"author":{"gitId":"-"},"content":"  -fx-text-fill: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":234,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":236,"author":{"gitId":"-"},"content":".button:focused {","lastModifiedDate":"2016-08-08"},{"lineNumber":237,"author":{"gitId":"-"},"content":"    -fx-border-color: white, white;","lastModifiedDate":"2016-08-08"},{"lineNumber":238,"author":{"gitId":"-"},"content":"    -fx-border-width: 1, 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":239,"author":{"gitId":"-"},"content":"    -fx-border-style: solid, segments(1, 1);","lastModifiedDate":"2016-08-08"},{"lineNumber":240,"author":{"gitId":"-"},"content":"    -fx-border-radius: 0, 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":241,"author":{"gitId":"-"},"content":"    -fx-border-insets: 1 1 1 1, 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":242,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":243,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":244,"author":{"gitId":"-"},"content":".button:disabled, .button:default:disabled {","lastModifiedDate":"2016-08-08"},{"lineNumber":245,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.4;","lastModifiedDate":"2016-08-08"},{"lineNumber":246,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":247,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":248,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":249,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":250,"author":{"gitId":"-"},"content":".button:default {","lastModifiedDate":"2016-08-08"},{"lineNumber":251,"author":{"gitId":"-"},"content":"    -fx-background-color: -fx-focus-color;","lastModifiedDate":"2016-08-08"},{"lineNumber":252,"author":{"gitId":"-"},"content":"    -fx-text-fill: #ffffff;","lastModifiedDate":"2016-08-08"},{"lineNumber":253,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":254,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":255,"author":{"gitId":"-"},"content":".button:default:hover {","lastModifiedDate":"2016-08-08"},{"lineNumber":256,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(-fx-focus-color, 30%);","lastModifiedDate":"2016-08-08"},{"lineNumber":257,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":258,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":259,"author":{"gitId":"-"},"content":".dialog-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":260,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":261,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":262,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":263,"author":{"gitId":"-"},"content":".dialog-pane \u003e *.button-bar \u003e *.container {","lastModifiedDate":"2016-08-08"},{"lineNumber":264,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":265,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":266,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":267,"author":{"gitId":"-"},"content":".dialog-pane \u003e *.label.content {","lastModifiedDate":"2016-08-08"},{"lineNumber":268,"author":{"gitId":"-"},"content":"    -fx-font-size: 14px;","lastModifiedDate":"2016-08-08"},{"lineNumber":269,"author":{"gitId":"-"},"content":"    -fx-font-weight: bold;","lastModifiedDate":"2016-08-08"},{"lineNumber":270,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":271,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":272,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":273,"author":{"gitId":"-"},"content":".dialog-pane:header *.header-panel {","lastModifiedDate":"2016-08-08"},{"lineNumber":274,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 25%);","lastModifiedDate":"2016-08-15"},{"lineNumber":275,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":276,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":277,"author":{"gitId":"-"},"content":".dialog-pane:header *.header-panel *.label {","lastModifiedDate":"2016-08-08"},{"lineNumber":278,"author":{"gitId":"-"},"content":"    -fx-font-size: 18px;","lastModifiedDate":"2016-08-08"},{"lineNumber":279,"author":{"gitId":"-"},"content":"    -fx-font-style: italic;","lastModifiedDate":"2016-08-08"},{"lineNumber":280,"author":{"gitId":"-"},"content":"    -fx-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":281,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":282,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":283,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":284,"author":{"gitId":"-"},"content":".scroll-bar {","lastModifiedDate":"2017-03-02"},{"lineNumber":285,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2017-03-02"},{"lineNumber":286,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":287,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":288,"author":{"gitId":"-"},"content":".scroll-bar .thumb {","lastModifiedDate":"2016-08-15"},{"lineNumber":289,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 50%);","lastModifiedDate":"2016-08-15"},{"lineNumber":290,"author":{"gitId":"-"},"content":"    -fx-background-insets: 3;","lastModifiedDate":"2016-08-15"},{"lineNumber":291,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":292,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":293,"author":{"gitId":"-"},"content":".scroll-bar .increment-button, .scroll-bar .decrement-button {","lastModifiedDate":"2016-08-15"},{"lineNumber":294,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-15"},{"lineNumber":295,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-15"},{"lineNumber":296,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":297,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":298,"author":{"gitId":"-"},"content":".scroll-bar .increment-arrow, .scroll-bar .decrement-arrow {","lastModifiedDate":"2016-08-15"},{"lineNumber":299,"author":{"gitId":"-"},"content":"    -fx-shape: \" \";","lastModifiedDate":"2016-08-15"},{"lineNumber":300,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"},{"lineNumber":301,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":302,"author":{"gitId":"-"},"content":".scroll-bar:vertical .increment-arrow, .scroll-bar:vertical .decrement-arrow {","lastModifiedDate":"2016-08-18"},{"lineNumber":303,"author":{"gitId":"-"},"content":"    -fx-padding: 1 8 1 8;","lastModifiedDate":"2016-08-15"},{"lineNumber":304,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":305,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":306,"author":{"gitId":"-"},"content":".scroll-bar:horizontal .increment-arrow, .scroll-bar:horizontal .decrement-arrow {","lastModifiedDate":"2016-08-18"},{"lineNumber":307,"author":{"gitId":"-"},"content":"    -fx-padding: 8 1 8 1;","lastModifiedDate":"2016-08-18"},{"lineNumber":308,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"},{"lineNumber":309,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":310,"author":{"gitId":"-"},"content":"#cardPane {","lastModifiedDate":"2016-08-08"},{"lineNumber":311,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":312,"author":{"gitId":"-"},"content":"    -fx-border-width: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":313,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":314,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":315,"author":{"gitId":"-"},"content":"#commandTypeLabel {","lastModifiedDate":"2016-08-08"},{"lineNumber":316,"author":{"gitId":"-"},"content":"    -fx-font-size: 11px;","lastModifiedDate":"2016-08-08"},{"lineNumber":317,"author":{"gitId":"-"},"content":"    -fx-text-fill: #F70D1A;","lastModifiedDate":"2016-08-08"},{"lineNumber":318,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":319,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":320,"author":{"gitId":"-"},"content":"#commandTextField {","lastModifiedDate":"2017-03-02"},{"lineNumber":321,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent #383838 transparent #383838;","lastModifiedDate":"2017-03-02"},{"lineNumber":322,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":323,"author":{"gitId":"-"},"content":"    -fx-border-color: #383838 #383838 #ffffff #383838;","lastModifiedDate":"2017-03-02"},{"lineNumber":324,"author":{"gitId":"-"},"content":"    -fx-border-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":325,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2017-03-02"},{"lineNumber":326,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Open Sans Light\";","lastModifiedDate":"2021-08-28"},{"lineNumber":327,"author":{"gitId":"-"},"content":"    -fx-font-size: 13pt;","lastModifiedDate":"2017-03-02"},{"lineNumber":328,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2017-03-02"},{"lineNumber":329,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":330,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":331,"author":{"gitId":"-"},"content":"#filterField, #personListPanel, #personWebpage {","lastModifiedDate":"2016-08-15"},{"lineNumber":332,"author":{"gitId":"-"},"content":"    -fx-effect: innershadow(gaussian, black, 10, 0, 0, 0);","lastModifiedDate":"2016-08-15"},{"lineNumber":333,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":334,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":335,"author":{"gitId":"-"},"content":"#resultDisplay .content {","lastModifiedDate":"2017-03-02"},{"lineNumber":336,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent, #383838, transparent, #383838;","lastModifiedDate":"2017-03-02"},{"lineNumber":337,"author":{"gitId":"-"},"content":"    -fx-background-radius: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":338,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":339,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":340,"author":{"gitId":"ntwbruce"},"content":"#tags, #notes {","lastModifiedDate":"2021-10-03"},{"lineNumber":341,"author":{"gitId":"-"},"content":"    -fx-hgap: 7;","lastModifiedDate":"2016-12-18"},{"lineNumber":342,"author":{"gitId":"-"},"content":"    -fx-vgap: 3;","lastModifiedDate":"2016-12-18"},{"lineNumber":343,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-18"},{"lineNumber":344,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":345,"author":{"gitId":"-"},"content":"#tags .label {","lastModifiedDate":"2016-12-18"},{"lineNumber":346,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-12-18"},{"lineNumber":347,"author":{"gitId":"-"},"content":"    -fx-background-color: #3e7b91;","lastModifiedDate":"2017-03-02"},{"lineNumber":348,"author":{"gitId":"-"},"content":"    -fx-padding: 1 3 1 3;","lastModifiedDate":"2016-12-18"},{"lineNumber":349,"author":{"gitId":"-"},"content":"    -fx-border-radius: 2;","lastModifiedDate":"2016-12-18"},{"lineNumber":350,"author":{"gitId":"-"},"content":"    -fx-background-radius: 2;","lastModifiedDate":"2016-12-18"},{"lineNumber":351,"author":{"gitId":"-"},"content":"    -fx-font-size: 11;","lastModifiedDate":"2016-12-18"},{"lineNumber":352,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-18"}],"authorContributionMap":{"ntwbruce":1,"-":351}},{"path":"src/main/resources/view/EventListCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"XXJJXJ"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-09-18"},{"lineNumber":2,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":3,"author":{"gitId":"XXJJXJ"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2021-09-18"},{"lineNumber":4,"author":{"gitId":"XXJJXJ"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2021-09-18"},{"lineNumber":5,"author":{"gitId":"XXJJXJ"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2021-09-18"},{"lineNumber":6,"author":{"gitId":"XXJJXJ"},"content":"\u003c?import javafx.scene.layout.FlowPane?\u003e","lastModifiedDate":"2021-09-18"},{"lineNumber":7,"author":{"gitId":"XXJJXJ"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2021-09-18"},{"lineNumber":8,"author":{"gitId":"XXJJXJ"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2021-09-18"},{"lineNumber":9,"author":{"gitId":"XXJJXJ"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2021-09-18"},{"lineNumber":10,"author":{"gitId":"XXJJXJ"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2021-09-18"},{"lineNumber":11,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":12,"author":{"gitId":"XXJJXJ"},"content":"\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-09-18"},{"lineNumber":13,"author":{"gitId":"XXJJXJ"},"content":"    \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2021-09-18"},{"lineNumber":14,"author":{"gitId":"XXJJXJ"},"content":"        \u003ccolumnConstraints\u003e","lastModifiedDate":"2021-09-18"},{"lineNumber":15,"author":{"gitId":"XXJJXJ"},"content":"            \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\" /\u003e","lastModifiedDate":"2021-09-18"},{"lineNumber":16,"author":{"gitId":"XXJJXJ"},"content":"        \u003c/columnConstraints\u003e","lastModifiedDate":"2021-09-18"},{"lineNumber":17,"author":{"gitId":"XXJJXJ"},"content":"        \u003cVBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"105\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2021-09-18"},{"lineNumber":18,"author":{"gitId":"XXJJXJ"},"content":"            \u003cpadding\u003e","lastModifiedDate":"2021-09-18"},{"lineNumber":19,"author":{"gitId":"XXJJXJ"},"content":"                \u003cInsets top\u003d\"5\" right\u003d\"5\" bottom\u003d\"5\" left\u003d\"15\" /\u003e","lastModifiedDate":"2021-09-18"},{"lineNumber":20,"author":{"gitId":"XXJJXJ"},"content":"            \u003c/padding\u003e","lastModifiedDate":"2021-09-18"},{"lineNumber":21,"author":{"gitId":"XXJJXJ"},"content":"            \u003cHBox spacing\u003d\"5\" alignment\u003d\"CENTER_LEFT\"\u003e","lastModifiedDate":"2021-09-18"},{"lineNumber":22,"author":{"gitId":"XXJJXJ"},"content":"                \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"cell_big_label\"\u003e","lastModifiedDate":"2021-09-18"},{"lineNumber":23,"author":{"gitId":"XXJJXJ"},"content":"                    \u003cminWidth\u003e","lastModifiedDate":"2021-09-18"},{"lineNumber":24,"author":{"gitId":"XXJJXJ"},"content":"                        \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2021-09-18"},{"lineNumber":25,"author":{"gitId":"XXJJXJ"},"content":"                        \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2021-09-18"},{"lineNumber":26,"author":{"gitId":"XXJJXJ"},"content":"                    \u003c/minWidth\u003e","lastModifiedDate":"2021-09-18"},{"lineNumber":27,"author":{"gitId":"XXJJXJ"},"content":"                \u003c/Label\u003e","lastModifiedDate":"2021-09-18"},{"lineNumber":28,"author":{"gitId":"XXJJXJ"},"content":"                \u003cLabel fx:id\u003d\"name\" text\u003d\"\\$first\" styleClass\u003d\"cell_big_label\" /\u003e","lastModifiedDate":"2021-09-18"},{"lineNumber":29,"author":{"gitId":"XXJJXJ"},"content":"            \u003c/HBox\u003e","lastModifiedDate":"2021-09-18"},{"lineNumber":30,"author":{"gitId":"XXJJXJ"},"content":"            \u003cLabel fx:id\u003d\"date\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$date\" /\u003e","lastModifiedDate":"2021-09-18"},{"lineNumber":31,"author":{"gitId":"XXJJXJ"},"content":"            \u003cLabel fx:id\u003d\"time\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$time\" /\u003e","lastModifiedDate":"2021-09-18"},{"lineNumber":32,"author":{"gitId":"XXJJXJ"},"content":"            \u003cLabel fx:id\u003d\"isDone\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$isDone\" /\u003e","lastModifiedDate":"2021-09-18"},{"lineNumber":33,"author":{"gitId":"XXJJXJ"},"content":"            \u003cFlowPane fx:id\u003d\"participants\" /\u003e","lastModifiedDate":"2021-09-18"},{"lineNumber":34,"author":{"gitId":"XXJJXJ"},"content":"        \u003c/VBox\u003e","lastModifiedDate":"2021-09-18"},{"lineNumber":35,"author":{"gitId":"XXJJXJ"},"content":"    \u003c/GridPane\u003e","lastModifiedDate":"2021-09-18"},{"lineNumber":36,"author":{"gitId":"XXJJXJ"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2021-09-18"}],"authorContributionMap":{"XXJJXJ":36}},{"path":"src/main/resources/view/EventListPanel.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"XXJJXJ"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-09-18"},{"lineNumber":2,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":3,"author":{"gitId":"XXJJXJ"},"content":"\u003c?import javafx.scene.control.ListView?\u003e","lastModifiedDate":"2021-09-18"},{"lineNumber":4,"author":{"gitId":"XXJJXJ"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2021-09-18"},{"lineNumber":5,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":6,"author":{"gitId":"XXJJXJ"},"content":"\u003cVBox xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-09-18"},{"lineNumber":7,"author":{"gitId":"XXJJXJ"},"content":"    \u003cListView fx:id\u003d\"eventListView\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2021-09-18"},{"lineNumber":8,"author":{"gitId":"XXJJXJ"},"content":"\u003c/VBox\u003e","lastModifiedDate":"2021-09-18"}],"authorContributionMap":{"XXJJXJ":8}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import java.net.URL?\u003e","lastModifiedDate":"2016-08-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.Scene?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Menu?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuBar?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuItem?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.SplitPane?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.image.Image?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"\u003cfx:root type\u003d\"javafx.stage.Stage\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"","lastModifiedDate":"2017-11-29"},{"lineNumber":15,"author":{"gitId":"XXJJXJ"},"content":"         title\u003d\"Managera\" minWidth\u003d\"450\" minHeight\u003d\"600\" onCloseRequest\u003d\"#handleExit\"\u003e","lastModifiedDate":"2021-09-17"},{"lineNumber":16,"author":{"gitId":"-"},"content":"  \u003cicons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":17,"author":{"gitId":"XXJJXJ"},"content":"    \u003cImage url\u003d\"@/images/ManageraIcon.png\" /\u003e","lastModifiedDate":"2021-09-17"},{"lineNumber":18,"author":{"gitId":"-"},"content":"  \u003c/icons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"  \u003cscene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    \u003cScene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"      \u003cstylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@Fonts.css\"/\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@DarkTheme.css\" /\u003e","lastModifiedDate":"2016-08-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@Extensions.css\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"      \u003c/stylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"      \u003cVBox\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        \u003cMenuBar fx:id\u003d\"menuBar\" VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2017-06-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"          \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"File\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            \u003cMenuItem mnemonicParsing\u003d\"false\" onAction\u003d\"#handleExit\" text\u003d\"Exit\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"          \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"          \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"Help\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            \u003cMenuItem fx:id\u003d\"helpMenuItem\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleHelp\" text\u003d\"Help\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"          \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        \u003c/MenuBar\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        \u003cStackPane VBox.vgrow\u003d\"NEVER\" fx:id\u003d\"commandBoxPlaceholder\" styleClass\u003d\"pane-with-border\"\u003e","lastModifiedDate":"2017-05-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            \u003cInsets top\u003d\"5\" right\u003d\"10\" bottom\u003d\"5\" left\u003d\"10\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        \u003c/StackPane\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        \u003cStackPane VBox.vgrow\u003d\"NEVER\" fx:id\u003d\"resultDisplayPlaceholder\" styleClass\u003d\"pane-with-border\"","lastModifiedDate":"2017-05-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"                   minHeight\u003d\"100\" prefHeight\u003d\"100\" maxHeight\u003d\"100\"\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            \u003cInsets top\u003d\"5\" right\u003d\"10\" bottom\u003d\"5\" left\u003d\"10\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        \u003c/StackPane\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":50,"author":{"gitId":"ntwbruce"},"content":"        \u003cVBox fx:id\u003d\"participantList\" styleClass\u003d\"pane-with-border\" minWidth\u003d\"340\" prefWidth\u003d\"340\" prefHeight\u003d\"500\" VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2021-10-03"},{"lineNumber":51,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            \u003cInsets top\u003d\"10\" right\u003d\"10\" bottom\u003d\"10\" left\u003d\"10\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":54,"author":{"gitId":"ntwbruce"},"content":"          \u003cStackPane fx:id\u003d\"participantListPanelPlaceholder\" VBox.vgrow\u003d\"ALWAYS\"/\u003e","lastModifiedDate":"2021-10-02"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        \u003c/VBox\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":56,"author":{"gitId":"XXJJXJ"},"content":"        \u003cVBox fx:id\u003d\"eventList\" styleClass\u003d\"pane-with-border\" minWidth\u003d\"340\" prefWidth\u003d\"340\" VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2021-09-18"},{"lineNumber":57,"author":{"gitId":"XXJJXJ"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2021-09-18"},{"lineNumber":58,"author":{"gitId":"XXJJXJ"},"content":"            \u003cInsets top\u003d\"10\" right\u003d\"10\" bottom\u003d\"10\" left\u003d\"10\" /\u003e","lastModifiedDate":"2021-09-18"},{"lineNumber":59,"author":{"gitId":"XXJJXJ"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2021-09-18"},{"lineNumber":60,"author":{"gitId":"XXJJXJ"},"content":"          \u003cStackPane fx:id\u003d\"eventListPanelPlaceholder\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2021-09-18"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        \u003c/VBox\u003e","lastModifiedDate":"2021-09-18"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        \u003cStackPane fx:id\u003d\"statusbarPlaceholder\" VBox.vgrow\u003d\"NEVER\" /\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":64,"author":{"gitId":"-"},"content":"      \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    \u003c/Scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":66,"author":{"gitId":"-"},"content":"  \u003c/scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":67,"author":{"gitId":"-"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2017-11-29"}],"authorContributionMap":{"XXJJXJ":7,"ntwbruce":2,"-":58}},{"path":"src/main/resources/view/ParticipantListCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ntwbruce"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-10-02"},{"lineNumber":2,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":3,"author":{"gitId":"ntwbruce"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2021-10-02"},{"lineNumber":4,"author":{"gitId":"ntwbruce"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2021-10-02"},{"lineNumber":5,"author":{"gitId":"ntwbruce"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2021-10-02"},{"lineNumber":6,"author":{"gitId":"ntwbruce"},"content":"\u003c?import javafx.scene.layout.FlowPane?\u003e","lastModifiedDate":"2021-10-02"},{"lineNumber":7,"author":{"gitId":"ntwbruce"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2021-10-02"},{"lineNumber":8,"author":{"gitId":"ntwbruce"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2021-10-02"},{"lineNumber":9,"author":{"gitId":"ntwbruce"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2021-10-02"},{"lineNumber":10,"author":{"gitId":"ntwbruce"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2021-10-02"},{"lineNumber":11,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":12,"author":{"gitId":"ntwbruce"},"content":"\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-10-02"},{"lineNumber":13,"author":{"gitId":"ntwbruce"},"content":"    \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2021-10-02"},{"lineNumber":14,"author":{"gitId":"ntwbruce"},"content":"        \u003ccolumnConstraints\u003e","lastModifiedDate":"2021-10-02"},{"lineNumber":15,"author":{"gitId":"ntwbruce"},"content":"            \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\" /\u003e","lastModifiedDate":"2021-10-02"},{"lineNumber":16,"author":{"gitId":"ntwbruce"},"content":"        \u003c/columnConstraints\u003e","lastModifiedDate":"2021-10-02"},{"lineNumber":17,"author":{"gitId":"ntwbruce"},"content":"        \u003cVBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"105\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2021-10-02"},{"lineNumber":18,"author":{"gitId":"ntwbruce"},"content":"            \u003cpadding\u003e","lastModifiedDate":"2021-10-02"},{"lineNumber":19,"author":{"gitId":"ntwbruce"},"content":"                \u003cInsets top\u003d\"5\" right\u003d\"5\" bottom\u003d\"5\" left\u003d\"15\" /\u003e","lastModifiedDate":"2021-10-02"},{"lineNumber":20,"author":{"gitId":"ntwbruce"},"content":"            \u003c/padding\u003e","lastModifiedDate":"2021-10-02"},{"lineNumber":21,"author":{"gitId":"ntwbruce"},"content":"            \u003cHBox spacing\u003d\"5\" alignment\u003d\"CENTER_LEFT\"\u003e","lastModifiedDate":"2021-10-02"},{"lineNumber":22,"author":{"gitId":"ntwbruce"},"content":"                \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"cell_big_label\"\u003e","lastModifiedDate":"2021-10-02"},{"lineNumber":23,"author":{"gitId":"ntwbruce"},"content":"                    \u003cminWidth\u003e","lastModifiedDate":"2021-10-02"},{"lineNumber":24,"author":{"gitId":"ntwbruce"},"content":"                        \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2021-10-02"},{"lineNumber":25,"author":{"gitId":"ntwbruce"},"content":"                        \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2021-10-02"},{"lineNumber":26,"author":{"gitId":"ntwbruce"},"content":"                    \u003c/minWidth\u003e","lastModifiedDate":"2021-10-02"},{"lineNumber":27,"author":{"gitId":"ntwbruce"},"content":"                \u003c/Label\u003e","lastModifiedDate":"2021-10-02"},{"lineNumber":28,"author":{"gitId":"ntwbruce"},"content":"                \u003cLabel fx:id\u003d\"name\" text\u003d\"\\$first\" styleClass\u003d\"cell_big_label\" /\u003e","lastModifiedDate":"2021-10-02"},{"lineNumber":29,"author":{"gitId":"ntwbruce"},"content":"            \u003c/HBox\u003e","lastModifiedDate":"2021-10-02"},{"lineNumber":30,"author":{"gitId":"ntwbruce"},"content":"            \u003cFlowPane fx:id\u003d\"tags\" /\u003e","lastModifiedDate":"2021-10-02"},{"lineNumber":31,"author":{"gitId":"ntwbruce"},"content":"            \u003cLabel fx:id\u003d\"phone\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$phone\" /\u003e","lastModifiedDate":"2021-10-02"},{"lineNumber":32,"author":{"gitId":"ntwbruce"},"content":"            \u003cLabel fx:id\u003d\"address\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$address\" /\u003e","lastModifiedDate":"2021-10-02"},{"lineNumber":33,"author":{"gitId":"ntwbruce"},"content":"            \u003cLabel fx:id\u003d\"email\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$email\" /\u003e","lastModifiedDate":"2021-10-02"},{"lineNumber":34,"author":{"gitId":"ntwbruce"},"content":"            \u003cLabel fx:id\u003d\"participantId\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$participantId\" /\u003e","lastModifiedDate":"2021-10-02"},{"lineNumber":35,"author":{"gitId":"ntwbruce"},"content":"            \u003cLabel fx:id\u003d\"birthDate\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$birthDate\" /\u003e","lastModifiedDate":"2021-10-02"},{"lineNumber":36,"author":{"gitId":"ntwbruce"},"content":"            \u003cFlowPane fx:id\u003d\"notes\" /\u003e","lastModifiedDate":"2021-10-02"},{"lineNumber":37,"author":{"gitId":"ntwbruce"},"content":"            \u003cLabel fx:id\u003d\"nextOfKins\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$nextOfKins\" /\u003e","lastModifiedDate":"2021-10-03"},{"lineNumber":38,"author":{"gitId":"ntwbruce"},"content":"        \u003c/VBox\u003e","lastModifiedDate":"2021-10-02"},{"lineNumber":39,"author":{"gitId":"ntwbruce"},"content":"    \u003c/GridPane\u003e","lastModifiedDate":"2021-10-02"},{"lineNumber":40,"author":{"gitId":"ntwbruce"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2021-10-02"},{"lineNumber":41,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-10-02"}],"authorContributionMap":{"ntwbruce":41}},{"path":"src/main/resources/view/ParticipantListPanel.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kanjitp"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-09-26"},{"lineNumber":2,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":3,"author":{"gitId":"kanjitp"},"content":"\u003c?import javafx.scene.control.ListView?\u003e","lastModifiedDate":"2021-09-26"},{"lineNumber":4,"author":{"gitId":"kanjitp"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2021-09-26"},{"lineNumber":5,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":6,"author":{"gitId":"kanjitp"},"content":"\u003cVBox xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-09-26"},{"lineNumber":7,"author":{"gitId":"kanjitp"},"content":"    \u003cListView fx:id\u003d\"participantListView\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2021-09-26"},{"lineNumber":8,"author":{"gitId":"kanjitp"},"content":"\u003c/VBox\u003e","lastModifiedDate":"2021-09-26"}],"authorContributionMap":{"kanjitp":8}},{"path":"src/test/data/JsonAddressBookStorageTest/invalidAndValidParticipantAddressBook.json","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kanjitp"},"content":"{","lastModifiedDate":"2021-09-28"},{"lineNumber":2,"author":{"gitId":"kanjitp"},"content":"  \"participants\": [","lastModifiedDate":"2021-09-29"},{"lineNumber":3,"author":{"gitId":"kanjitp"},"content":"    {","lastModifiedDate":"2021-09-28"},{"lineNumber":4,"author":{"gitId":"kanjitp"},"content":"      \"name\": \"Valid Person\",","lastModifiedDate":"2021-09-28"},{"lineNumber":5,"author":{"gitId":"kanjitp"},"content":"      \"phone\": \"9482424\",","lastModifiedDate":"2021-09-28"},{"lineNumber":6,"author":{"gitId":"kanjitp"},"content":"      \"email\": \"hans@example.com\",","lastModifiedDate":"2021-09-28"},{"lineNumber":7,"author":{"gitId":"kanjitp"},"content":"      \"address\": \"4th street\",","lastModifiedDate":"2021-09-28"},{"lineNumber":8,"author":{"gitId":"kanjitp"},"content":"      \"birthDate\": \"2000-08-02\",","lastModifiedDate":"2021-09-28"},{"lineNumber":9,"author":{"gitId":"kanjitp"},"content":"      \"notes\": [","lastModifiedDate":"2021-09-28"},{"lineNumber":10,"author":{"gitId":"kanjitp"},"content":"        {","lastModifiedDate":"2021-09-28"},{"lineNumber":11,"author":{"gitId":"kanjitp"},"content":"          \"content\": \"Vegetarian\",","lastModifiedDate":"2021-09-28"},{"lineNumber":12,"author":{"gitId":"kanjitp"},"content":"          \"importance\": \"VERY_HIGH\"","lastModifiedDate":"2021-09-28"},{"lineNumber":13,"author":{"gitId":"kanjitp"},"content":"        }","lastModifiedDate":"2021-09-28"},{"lineNumber":14,"author":{"gitId":"kanjitp"},"content":"      ],","lastModifiedDate":"2021-09-28"},{"lineNumber":15,"author":{"gitId":"kanjitp"},"content":"      \"nextOfKins\": [","lastModifiedDate":"2021-09-28"},{"lineNumber":16,"author":{"gitId":"kanjitp"},"content":"        {","lastModifiedDate":"2021-09-28"},{"lineNumber":17,"author":{"gitId":"kanjitp"},"content":"          \"name\": \"Janette Yeoh\",","lastModifiedDate":"2021-09-28"},{"lineNumber":18,"author":{"gitId":"kanjitp"},"content":"          \"phone\": \"93822312\",","lastModifiedDate":"2021-09-28"},{"lineNumber":19,"author":{"gitId":"kanjitp"},"content":"          \"tag\": \"Spouse\"","lastModifiedDate":"2021-09-28"},{"lineNumber":20,"author":{"gitId":"kanjitp"},"content":"        }","lastModifiedDate":"2021-09-28"},{"lineNumber":21,"author":{"gitId":"kanjitp"},"content":"      ]","lastModifiedDate":"2021-09-28"},{"lineNumber":22,"author":{"gitId":"kanjitp"},"content":"    },","lastModifiedDate":"2021-09-28"},{"lineNumber":23,"author":{"gitId":"kanjitp"},"content":"    {","lastModifiedDate":"2021-09-28"},{"lineNumber":24,"author":{"gitId":"kanjitp"},"content":"      \"name\": \"Person With Invalid Phone Field\",","lastModifiedDate":"2021-09-28"},{"lineNumber":25,"author":{"gitId":"kanjitp"},"content":"      \"phone\": \"948asdf2424\",","lastModifiedDate":"2021-09-28"},{"lineNumber":26,"author":{"gitId":"kanjitp"},"content":"      \"email\": \"hans@example.com\",","lastModifiedDate":"2021-09-28"},{"lineNumber":27,"author":{"gitId":"kanjitp"},"content":"      \"address\": \"4th street\",","lastModifiedDate":"2021-09-28"},{"lineNumber":28,"author":{"gitId":"kanjitp"},"content":"      \"birthDate\": \"2000-08-02\",","lastModifiedDate":"2021-09-28"},{"lineNumber":29,"author":{"gitId":"kanjitp"},"content":"      \"notes\": [","lastModifiedDate":"2021-09-28"},{"lineNumber":30,"author":{"gitId":"kanjitp"},"content":"        {","lastModifiedDate":"2021-09-28"},{"lineNumber":31,"author":{"gitId":"kanjitp"},"content":"          \"content\": \"Vegetarian\",","lastModifiedDate":"2021-09-28"},{"lineNumber":32,"author":{"gitId":"kanjitp"},"content":"          \"importance\": \"VERY_HIGH\"","lastModifiedDate":"2021-09-28"},{"lineNumber":33,"author":{"gitId":"kanjitp"},"content":"        }","lastModifiedDate":"2021-09-28"},{"lineNumber":34,"author":{"gitId":"kanjitp"},"content":"      ],","lastModifiedDate":"2021-09-28"},{"lineNumber":35,"author":{"gitId":"kanjitp"},"content":"      \"nextOfKins\": [","lastModifiedDate":"2021-09-28"},{"lineNumber":36,"author":{"gitId":"kanjitp"},"content":"        {","lastModifiedDate":"2021-09-28"},{"lineNumber":37,"author":{"gitId":"kanjitp"},"content":"          \"name\": \"Janette Yeoh\",","lastModifiedDate":"2021-09-28"},{"lineNumber":38,"author":{"gitId":"kanjitp"},"content":"          \"phone\": \"93822312\",","lastModifiedDate":"2021-09-28"},{"lineNumber":39,"author":{"gitId":"kanjitp"},"content":"          \"tag\": \"Spouse\"","lastModifiedDate":"2021-09-28"},{"lineNumber":40,"author":{"gitId":"kanjitp"},"content":"        }","lastModifiedDate":"2021-09-28"},{"lineNumber":41,"author":{"gitId":"kanjitp"},"content":"      ]","lastModifiedDate":"2021-09-28"},{"lineNumber":42,"author":{"gitId":"kanjitp"},"content":"    }","lastModifiedDate":"2021-09-29"},{"lineNumber":43,"author":{"gitId":"kanjitp"},"content":"  ]","lastModifiedDate":"2021-09-29"},{"lineNumber":44,"author":{"gitId":"kanjitp"},"content":"}","lastModifiedDate":"2021-09-28"}],"authorContributionMap":{"kanjitp":44}},{"path":"src/test/data/JsonSerializableAddressBookTest/duplicateEventAddressBook.json","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"XXJJXJ"},"content":"{","lastModifiedDate":"2021-09-18"},{"lineNumber":2,"author":{"gitId":"kanjitp"},"content":"  \"participants\" : [ ],","lastModifiedDate":"2021-09-26"},{"lineNumber":3,"author":{"gitId":"XXJJXJ"},"content":"  \"events\" : [","lastModifiedDate":"2021-09-18"},{"lineNumber":4,"author":{"gitId":"XXJJXJ"},"content":"    {","lastModifiedDate":"2021-09-18"},{"lineNumber":5,"author":{"gitId":"XXJJXJ"},"content":"      \"name\" : \"Sleep\",","lastModifiedDate":"2021-09-18"},{"lineNumber":6,"author":{"gitId":"XXJJXJ"},"content":"      \"isDone\" : \"Uncompleted\",","lastModifiedDate":"2021-09-18"},{"lineNumber":7,"author":{"gitId":"XXJJXJ"},"content":"      \"date\" : \"2021-09-18\",","lastModifiedDate":"2021-09-18"},{"lineNumber":8,"author":{"gitId":"XXJJXJ"},"content":"      \"time\" : \"1000\",","lastModifiedDate":"2021-09-18"},{"lineNumber":9,"author":{"gitId":"XXJJXJ"},"content":"      \"participants\" : [ ]","lastModifiedDate":"2021-09-18"},{"lineNumber":10,"author":{"gitId":"XXJJXJ"},"content":"    }, {","lastModifiedDate":"2021-09-18"},{"lineNumber":11,"author":{"gitId":"XXJJXJ"},"content":"      \"name\" : \"Sleep\",","lastModifiedDate":"2021-09-18"},{"lineNumber":12,"author":{"gitId":"XXJJXJ"},"content":"      \"isDone\" : \"Uncompleted\",","lastModifiedDate":"2021-09-18"},{"lineNumber":13,"author":{"gitId":"XXJJXJ"},"content":"      \"date\" : \"2021-09-18\",","lastModifiedDate":"2021-09-18"},{"lineNumber":14,"author":{"gitId":"XXJJXJ"},"content":"      \"time\" : \"1000\",","lastModifiedDate":"2021-09-18"},{"lineNumber":15,"author":{"gitId":"XXJJXJ"},"content":"      \"participants\" : [ ]","lastModifiedDate":"2021-09-18"},{"lineNumber":16,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":17,"author":{"gitId":"XXJJXJ"},"content":"  ]","lastModifiedDate":"2021-09-18"},{"lineNumber":18,"author":{"gitId":"XXJJXJ"},"content":"}","lastModifiedDate":"2021-09-18"}],"authorContributionMap":{"XXJJXJ":17,"kanjitp":1}},{"path":"src/test/data/JsonSerializableAddressBookTest/duplicateParticipantAddressBook.json","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"{","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"kanjitp"},"content":"  \"participants\": [ {","lastModifiedDate":"2021-09-26"},{"lineNumber":3,"author":{"gitId":"kanjitp"},"content":"    \"id\" : \"aleyeo\",","lastModifiedDate":"2021-09-26"},{"lineNumber":4,"author":{"gitId":"kanjitp"},"content":"    \"name\" : \"Alex Yeoh\",","lastModifiedDate":"2021-09-26"},{"lineNumber":5,"author":{"gitId":"kanjitp"},"content":"    \"phone\" : \"87438807\",","lastModifiedDate":"2021-09-26"},{"lineNumber":6,"author":{"gitId":"kanjitp"},"content":"    \"email\" : \"alexyeoh@example.com\",","lastModifiedDate":"2021-09-26"},{"lineNumber":7,"author":{"gitId":"kanjitp"},"content":"    \"address\" : \"Blk 30 Geylang Street 29, #06-40\",","lastModifiedDate":"2021-09-26"},{"lineNumber":8,"author":{"gitId":"kanjitp"},"content":"    \"tagged\" : [ \"friends\" ],","lastModifiedDate":"2021-09-26"},{"lineNumber":9,"author":{"gitId":"kanjitp"},"content":"    \"birthDate\" : \"2000-08-02\",","lastModifiedDate":"2021-09-26"},{"lineNumber":10,"author":{"gitId":"kanjitp"},"content":"    \"notes\" : [ {","lastModifiedDate":"2021-09-26"},{"lineNumber":11,"author":{"gitId":"kanjitp"},"content":"      \"content\" : \"Vegetarian\",","lastModifiedDate":"2021-09-26"},{"lineNumber":12,"author":{"gitId":"kanjitp"},"content":"      \"importance\" : \"VERY_HIGH\"","lastModifiedDate":"2021-09-26"},{"lineNumber":13,"author":{"gitId":"XXJJXJ"},"content":"    } ],","lastModifiedDate":"2021-09-18"},{"lineNumber":14,"author":{"gitId":"kanjitp"},"content":"    \"nextOfKins\" : [ {","lastModifiedDate":"2021-09-26"},{"lineNumber":15,"author":{"gitId":"kanjitp"},"content":"      \"name\" : \"Janette Yeoh\",","lastModifiedDate":"2021-09-26"},{"lineNumber":16,"author":{"gitId":"kanjitp"},"content":"      \"phone\" : \"93822312\",","lastModifiedDate":"2021-09-26"},{"lineNumber":17,"author":{"gitId":"kanjitp"},"content":"      \"tag\" : \"Spouse\"","lastModifiedDate":"2021-09-26"},{"lineNumber":18,"author":{"gitId":"kanjitp"},"content":"    }] }, {","lastModifiedDate":"2021-09-26"},{"lineNumber":19,"author":{"gitId":"kanjitp"},"content":"    \"id\" : \"aleyeo\",","lastModifiedDate":"2021-09-26"},{"lineNumber":20,"author":{"gitId":"kanjitp"},"content":"    \"name\" : \"Alex Yeoh\",","lastModifiedDate":"2021-09-26"},{"lineNumber":21,"author":{"gitId":"kanjitp"},"content":"    \"phone\" : \"87438807\",","lastModifiedDate":"2021-09-26"},{"lineNumber":22,"author":{"gitId":"kanjitp"},"content":"    \"email\" : \"alexyeoh@example.com\",","lastModifiedDate":"2021-09-26"},{"lineNumber":23,"author":{"gitId":"kanjitp"},"content":"    \"address\" : \"Blk 30 Geylang Street 29, #06-40\",","lastModifiedDate":"2021-09-26"},{"lineNumber":24,"author":{"gitId":"kanjitp"},"content":"    \"tagged\" : [ \"friends\" ],","lastModifiedDate":"2021-09-26"},{"lineNumber":25,"author":{"gitId":"kanjitp"},"content":"    \"birthDate\" : \"2000-08-02\",","lastModifiedDate":"2021-09-26"},{"lineNumber":26,"author":{"gitId":"kanjitp"},"content":"    \"notes\" : [ {","lastModifiedDate":"2021-09-26"},{"lineNumber":27,"author":{"gitId":"kanjitp"},"content":"      \"content\" : \"Vegetarian\",","lastModifiedDate":"2021-09-26"},{"lineNumber":28,"author":{"gitId":"kanjitp"},"content":"      \"importance\" : \"VERY_HIGH\"","lastModifiedDate":"2021-09-26"},{"lineNumber":29,"author":{"gitId":"kanjitp"},"content":"    } ],","lastModifiedDate":"2021-09-26"},{"lineNumber":30,"author":{"gitId":"kanjitp"},"content":"    \"nextOfKins\" : [ {","lastModifiedDate":"2021-09-26"},{"lineNumber":31,"author":{"gitId":"kanjitp"},"content":"      \"name\" : \"Janette Yeoh\",","lastModifiedDate":"2021-09-26"},{"lineNumber":32,"author":{"gitId":"kanjitp"},"content":"      \"phone\" : \"93822312\",","lastModifiedDate":"2021-09-26"},{"lineNumber":33,"author":{"gitId":"kanjitp"},"content":"      \"tag\" : \"Spouse\"","lastModifiedDate":"2021-09-26"},{"lineNumber":34,"author":{"gitId":"kanjitp"},"content":"    }] } ],","lastModifiedDate":"2021-09-26"},{"lineNumber":35,"author":{"gitId":"XXJJXJ"},"content":"  \"events\" : []","lastModifiedDate":"2021-09-18"},{"lineNumber":36,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"XXJJXJ":2,"kanjitp":32,"-":2}},{"path":"src/test/data/JsonSerializableAddressBookTest/invalidEventAddressBook.json","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"XXJJXJ"},"content":"{","lastModifiedDate":"2021-09-18"},{"lineNumber":2,"author":{"gitId":"kanjitp"},"content":"  \"participants\": [ ],","lastModifiedDate":"2021-09-26"},{"lineNumber":3,"author":{"gitId":"XXJJXJ"},"content":"  \"events\" : [","lastModifiedDate":"2021-09-18"},{"lineNumber":4,"author":{"gitId":"XXJJXJ"},"content":"     {","lastModifiedDate":"2021-09-18"},{"lineNumber":5,"author":{"gitId":"XXJJXJ"},"content":"       \"name\" : \"^^^asda\",","lastModifiedDate":"2021-09-18"},{"lineNumber":6,"author":{"gitId":"XXJJXJ"},"content":"       \"isDone\" : \"Uncompleted\",","lastModifiedDate":"2021-09-18"},{"lineNumber":7,"author":{"gitId":"XXJJXJ"},"content":"       \"date\" : \"2021-09-18\",","lastModifiedDate":"2021-09-18"},{"lineNumber":8,"author":{"gitId":"XXJJXJ"},"content":"       \"time\" : \"1000\",","lastModifiedDate":"2021-09-18"},{"lineNumber":9,"author":{"gitId":"XXJJXJ"},"content":"       \"participants\" : [ ]","lastModifiedDate":"2021-09-18"},{"lineNumber":10,"author":{"gitId":"XXJJXJ"},"content":"     }","lastModifiedDate":"2021-09-18"},{"lineNumber":11,"author":{"gitId":"XXJJXJ"},"content":"   ]","lastModifiedDate":"2021-09-18"},{"lineNumber":12,"author":{"gitId":"XXJJXJ"},"content":"}","lastModifiedDate":"2021-09-18"}],"authorContributionMap":{"XXJJXJ":11,"kanjitp":1}},{"path":"src/test/data/JsonSerializableAddressBookTest/invalidParticipantAddressBook.json","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"{","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"kanjitp"},"content":"  \"participants\": [ {","lastModifiedDate":"2021-09-26"},{"lineNumber":3,"author":{"gitId":"kanjitp"},"content":"    \"id\" : \"aleyeo\",","lastModifiedDate":"2021-09-26"},{"lineNumber":4,"author":{"gitId":"kanjitp"},"content":"    \"name\" : \"Alex Yeoh\",","lastModifiedDate":"2021-09-26"},{"lineNumber":5,"author":{"gitId":"kanjitp"},"content":"    \"phone\" : \"87438807\",","lastModifiedDate":"2021-09-26"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    \"email\" : \"invalid@email!3e\",","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"kanjitp"},"content":"    \"address\" : \"Blk 30 Geylang Street 29, #06-40\",","lastModifiedDate":"2021-09-26"},{"lineNumber":8,"author":{"gitId":"kanjitp"},"content":"    \"tagged\" : [ \"friends\" ],","lastModifiedDate":"2021-09-26"},{"lineNumber":9,"author":{"gitId":"kanjitp"},"content":"    \"birthDate\" : \"2000-08-02\",","lastModifiedDate":"2021-09-26"},{"lineNumber":10,"author":{"gitId":"kanjitp"},"content":"    \"notes\" : [ {","lastModifiedDate":"2021-09-26"},{"lineNumber":11,"author":{"gitId":"kanjitp"},"content":"      \"content\" : \"Vegetarian\",","lastModifiedDate":"2021-09-26"},{"lineNumber":12,"author":{"gitId":"kanjitp"},"content":"      \"importance\" : \"VERY_HIGH\"","lastModifiedDate":"2021-09-26"},{"lineNumber":13,"author":{"gitId":"XXJJXJ"},"content":"    } ],","lastModifiedDate":"2021-09-18"},{"lineNumber":14,"author":{"gitId":"kanjitp"},"content":"    \"nextOfKins\" : [ {","lastModifiedDate":"2021-09-26"},{"lineNumber":15,"author":{"gitId":"kanjitp"},"content":"      \"name\" : \"Janette Yeoh\",","lastModifiedDate":"2021-09-26"},{"lineNumber":16,"author":{"gitId":"kanjitp"},"content":"      \"phone\" : \"93822312\",","lastModifiedDate":"2021-09-26"},{"lineNumber":17,"author":{"gitId":"kanjitp"},"content":"      \"tag\" : \"Spouse\"","lastModifiedDate":"2021-09-26"},{"lineNumber":18,"author":{"gitId":"kanjitp"},"content":"    } ] }],","lastModifiedDate":"2021-09-26"},{"lineNumber":19,"author":{"gitId":"XXJJXJ"},"content":"  \"events\" : []","lastModifiedDate":"2021-09-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"XXJJXJ":2,"kanjitp":15,"-":3}},{"path":"src/test/data/JsonSerializableAddressBookTest/typicalEventsAddressBook.json","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"XXJJXJ"},"content":"{","lastModifiedDate":"2021-09-18"},{"lineNumber":2,"author":{"gitId":"XXJJXJ"},"content":"  \"_comment\": \"AddressBook save file which contains the same Event values as in TypicalEvents#getTypicalAddressBook()\",","lastModifiedDate":"2021-09-18"},{"lineNumber":3,"author":{"gitId":"kanjitp"},"content":"  \"participants\" : [ ],","lastModifiedDate":"2021-09-26"},{"lineNumber":4,"author":{"gitId":"XXJJXJ"},"content":"  \"events\" : [","lastModifiedDate":"2021-09-18"},{"lineNumber":5,"author":{"gitId":"XXJJXJ"},"content":"    {","lastModifiedDate":"2021-09-18"},{"lineNumber":6,"author":{"gitId":"XXJJXJ"},"content":"      \"name\" : \"Sleep\",","lastModifiedDate":"2021-09-18"},{"lineNumber":7,"author":{"gitId":"XXJJXJ"},"content":"      \"isDone\" : \"Uncompleted\",","lastModifiedDate":"2021-09-18"},{"lineNumber":8,"author":{"gitId":"XXJJXJ"},"content":"      \"date\" : \"2021-09-18\",","lastModifiedDate":"2021-09-18"},{"lineNumber":9,"author":{"gitId":"XXJJXJ"},"content":"      \"time\" : \"1000\",","lastModifiedDate":"2021-09-18"},{"lineNumber":10,"author":{"gitId":"XXJJXJ"},"content":"      \"participants\" : [ ]","lastModifiedDate":"2021-09-18"},{"lineNumber":11,"author":{"gitId":"XXJJXJ"},"content":"    }, {","lastModifiedDate":"2021-09-18"},{"lineNumber":12,"author":{"gitId":"XXJJXJ"},"content":"      \"name\" : \"Sleep2\",","lastModifiedDate":"2021-09-18"},{"lineNumber":13,"author":{"gitId":"XXJJXJ"},"content":"      \"isDone\" : \"Uncompleted\",","lastModifiedDate":"2021-09-18"},{"lineNumber":14,"author":{"gitId":"XXJJXJ"},"content":"      \"date\" : \"2021-09-18\",","lastModifiedDate":"2021-09-18"},{"lineNumber":15,"author":{"gitId":"XXJJXJ"},"content":"      \"time\" : \"1001\",","lastModifiedDate":"2021-09-18"},{"lineNumber":16,"author":{"gitId":"XXJJXJ"},"content":"      \"participants\" : [ ]","lastModifiedDate":"2021-09-18"},{"lineNumber":17,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":18,"author":{"gitId":"XXJJXJ"},"content":"  ]","lastModifiedDate":"2021-09-18"},{"lineNumber":19,"author":{"gitId":"XXJJXJ"},"content":"}","lastModifiedDate":"2021-09-18"}],"authorContributionMap":{"XXJJXJ":18,"kanjitp":1}},{"path":"src/test/data/JsonSerializableAddressBookTest/typicalParticipantsAddressBook.json","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"{","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  \"_comment\": \"AddressBook save file which contains the same Person values as in TypicalPersons#getTypicalAddressBook()\",","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"kanjitp"},"content":"  \"participants\" : [ {","lastModifiedDate":"2021-09-26"},{"lineNumber":4,"author":{"gitId":"kanjitp"},"content":"    \"id\" : \"aleyeo\",","lastModifiedDate":"2021-09-26"},{"lineNumber":5,"author":{"gitId":"kanjitp"},"content":"    \"name\" : \"Alex Yeoh\",","lastModifiedDate":"2021-09-26"},{"lineNumber":6,"author":{"gitId":"kanjitp"},"content":"    \"phone\" : \"87438807\",","lastModifiedDate":"2021-09-26"},{"lineNumber":7,"author":{"gitId":"kanjitp"},"content":"    \"email\" : \"alexyeoh@example.com\",","lastModifiedDate":"2021-09-26"},{"lineNumber":8,"author":{"gitId":"kanjitp"},"content":"    \"address\" : \"Blk 30 Geylang Street 29, #06-40\",","lastModifiedDate":"2021-09-26"},{"lineNumber":9,"author":{"gitId":"kanjitp"},"content":"    \"tagged\" : [ \"friends\" ],","lastModifiedDate":"2021-09-26"},{"lineNumber":10,"author":{"gitId":"kanjitp"},"content":"    \"birthDate\" : \"2000-08-02\",","lastModifiedDate":"2021-09-26"},{"lineNumber":11,"author":{"gitId":"kanjitp"},"content":"    \"notes\" : [ {","lastModifiedDate":"2021-09-26"},{"lineNumber":12,"author":{"gitId":"kanjitp"},"content":"      \"content\" : \"Vegetarian\",","lastModifiedDate":"2021-09-26"},{"lineNumber":13,"author":{"gitId":"kanjitp"},"content":"      \"importance\" : \"VERY_HIGH\"","lastModifiedDate":"2021-09-26"},{"lineNumber":14,"author":{"gitId":"kanjitp"},"content":"    } ],","lastModifiedDate":"2021-09-26"},{"lineNumber":15,"author":{"gitId":"kanjitp"},"content":"    \"nextOfKins\" : [ {","lastModifiedDate":"2021-09-26"},{"lineNumber":16,"author":{"gitId":"kanjitp"},"content":"      \"name\" : \"Janette Yeoh\",","lastModifiedDate":"2021-09-26"},{"lineNumber":17,"author":{"gitId":"kanjitp"},"content":"      \"phone\" : \"93822312\",","lastModifiedDate":"2021-09-26"},{"lineNumber":18,"author":{"gitId":"kanjitp"},"content":"      \"tag\" : \"Spouse\"","lastModifiedDate":"2021-09-26"},{"lineNumber":19,"author":{"gitId":"kanjitp"},"content":"    } ]","lastModifiedDate":"2021-09-26"},{"lineNumber":20,"author":{"gitId":"-"},"content":"  }, {","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"kanjitp"},"content":"    \"id\" : \"beryu\",","lastModifiedDate":"2021-09-26"},{"lineNumber":22,"author":{"gitId":"kanjitp"},"content":"    \"name\" : \"Bernice Yu\",","lastModifiedDate":"2021-09-26"},{"lineNumber":23,"author":{"gitId":"kanjitp"},"content":"    \"phone\" : \"99272758\",","lastModifiedDate":"2021-09-26"},{"lineNumber":24,"author":{"gitId":"kanjitp"},"content":"    \"email\" : \"berniceyu@example.com\",","lastModifiedDate":"2021-09-26"},{"lineNumber":25,"author":{"gitId":"kanjitp"},"content":"    \"address\" : \"Blk 30 Lorong 3 Serangoon Gardens, #07-18\",","lastModifiedDate":"2021-09-26"},{"lineNumber":26,"author":{"gitId":"kanjitp"},"content":"    \"tagged\" : [ \"colleagues\", \"friends\" ],","lastModifiedDate":"2021-09-26"},{"lineNumber":27,"author":{"gitId":"kanjitp"},"content":"    \"birthDate\" : \"1970-04-02\",","lastModifiedDate":"2021-09-26"},{"lineNumber":28,"author":{"gitId":"kanjitp"},"content":"    \"notes\" : [ {","lastModifiedDate":"2021-09-26"},{"lineNumber":29,"author":{"gitId":"kanjitp"},"content":"      \"content\" : \"Allergic to Alcohol\",","lastModifiedDate":"2021-09-26"},{"lineNumber":30,"author":{"gitId":"kanjitp"},"content":"      \"importance\" : \"VERY_HIGH\"","lastModifiedDate":"2021-09-26"},{"lineNumber":31,"author":{"gitId":"kanjitp"},"content":"    } ],","lastModifiedDate":"2021-09-26"},{"lineNumber":32,"author":{"gitId":"kanjitp"},"content":"    \"nextOfKins\" : [ {","lastModifiedDate":"2021-09-26"},{"lineNumber":33,"author":{"gitId":"kanjitp"},"content":"      \"name\" : \"Bennett Yu\",","lastModifiedDate":"2021-09-26"},{"lineNumber":34,"author":{"gitId":"kanjitp"},"content":"      \"phone\" : \"83612412\",","lastModifiedDate":"2021-09-26"},{"lineNumber":35,"author":{"gitId":"kanjitp"},"content":"      \"tag\" : \"Parent\"","lastModifiedDate":"2021-09-26"},{"lineNumber":36,"author":{"gitId":"kanjitp"},"content":"    } ]","lastModifiedDate":"2021-09-26"},{"lineNumber":37,"author":{"gitId":"-"},"content":"  }, {","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"kanjitp"},"content":"    \"id\" : \"chaoli\",","lastModifiedDate":"2021-09-26"},{"lineNumber":39,"author":{"gitId":"kanjitp"},"content":"    \"name\" : \"Charlotte Oliveiro\",","lastModifiedDate":"2021-09-26"},{"lineNumber":40,"author":{"gitId":"kanjitp"},"content":"    \"phone\" : \"93210283\",","lastModifiedDate":"2021-09-26"},{"lineNumber":41,"author":{"gitId":"kanjitp"},"content":"    \"email\" : \"charlotte@example.com\",","lastModifiedDate":"2021-09-26"},{"lineNumber":42,"author":{"gitId":"kanjitp"},"content":"    \"address\" : \"Blk 11 Ang Mo Kio Street 74, #11-04\",","lastModifiedDate":"2021-09-26"},{"lineNumber":43,"author":{"gitId":"kanjitp"},"content":"    \"tagged\" : [ \"neighbours\" ],","lastModifiedDate":"2021-09-26"},{"lineNumber":44,"author":{"gitId":"kanjitp"},"content":"    \"birthDate\" : \"1982-05-13\",","lastModifiedDate":"2021-09-26"},{"lineNumber":45,"author":{"gitId":"kanjitp"},"content":"    \"notes\" : [ {","lastModifiedDate":"2021-09-26"},{"lineNumber":46,"author":{"gitId":"kanjitp"},"content":"      \"content\" : \"Dislike pepper\",","lastModifiedDate":"2021-09-26"},{"lineNumber":47,"author":{"gitId":"kanjitp"},"content":"      \"importance\" : \"MEDIUM\"","lastModifiedDate":"2021-09-26"},{"lineNumber":48,"author":{"gitId":"kanjitp"},"content":"    } ],","lastModifiedDate":"2021-09-26"},{"lineNumber":49,"author":{"gitId":"kanjitp"},"content":"    \"nextOfKins\" : [ {","lastModifiedDate":"2021-09-26"},{"lineNumber":50,"author":{"gitId":"kanjitp"},"content":"      \"name\" : \"Daniel Pruvos\",","lastModifiedDate":"2021-09-26"},{"lineNumber":51,"author":{"gitId":"kanjitp"},"content":"      \"phone\" : \"83460328\",","lastModifiedDate":"2021-09-26"},{"lineNumber":52,"author":{"gitId":"kanjitp"},"content":"      \"tag\" : \"Brother\"","lastModifiedDate":"2021-09-26"},{"lineNumber":53,"author":{"gitId":"kanjitp"},"content":"    } ]","lastModifiedDate":"2021-09-26"},{"lineNumber":54,"author":{"gitId":"-"},"content":"  }, {","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"kanjitp"},"content":"    \"id\" : \"davli\",","lastModifiedDate":"2021-09-26"},{"lineNumber":56,"author":{"gitId":"kanjitp"},"content":"    \"name\" : \"David Li\",","lastModifiedDate":"2021-09-26"},{"lineNumber":57,"author":{"gitId":"kanjitp"},"content":"    \"phone\" : \"91031282\",","lastModifiedDate":"2021-09-26"},{"lineNumber":58,"author":{"gitId":"kanjitp"},"content":"    \"email\" : \"lidavid@example.com\",","lastModifiedDate":"2021-09-26"},{"lineNumber":59,"author":{"gitId":"kanjitp"},"content":"    \"address\" : \"Blk 436 Serangoon Gardens Street 26, #16-43\",","lastModifiedDate":"2021-09-26"},{"lineNumber":60,"author":{"gitId":"kanjitp"},"content":"    \"tagged\" : [ \"family\" ],","lastModifiedDate":"2021-09-26"},{"lineNumber":61,"author":{"gitId":"kanjitp"},"content":"    \"birthDate\" : \"1999-02-02\",","lastModifiedDate":"2021-09-26"},{"lineNumber":62,"author":{"gitId":"kanjitp"},"content":"    \"notes\" : [ {","lastModifiedDate":"2021-09-26"},{"lineNumber":63,"author":{"gitId":"kanjitp"},"content":"      \"content\" : \"Vegetarian\",","lastModifiedDate":"2021-09-26"},{"lineNumber":64,"author":{"gitId":"kanjitp"},"content":"      \"importance\" : \"VERY_HIGH\"","lastModifiedDate":"2021-09-26"},{"lineNumber":65,"author":{"gitId":"kanjitp"},"content":"    } ],","lastModifiedDate":"2021-09-26"},{"lineNumber":66,"author":{"gitId":"kanjitp"},"content":"    \"nextOfKins\" : [ {","lastModifiedDate":"2021-09-26"},{"lineNumber":67,"author":{"gitId":"kanjitp"},"content":"      \"name\" : \"Maria Li\",","lastModifiedDate":"2021-09-26"},{"lineNumber":68,"author":{"gitId":"kanjitp"},"content":"      \"phone\" : \"84459923\",","lastModifiedDate":"2021-09-26"},{"lineNumber":69,"author":{"gitId":"kanjitp"},"content":"      \"tag\" : \"Girlfriend\"","lastModifiedDate":"2021-09-26"},{"lineNumber":70,"author":{"gitId":"kanjitp"},"content":"    } ]","lastModifiedDate":"2021-09-26"},{"lineNumber":71,"author":{"gitId":"-"},"content":"  }, {","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"kanjitp"},"content":"    \"id\" : \"irfibr\",","lastModifiedDate":"2021-09-26"},{"lineNumber":73,"author":{"gitId":"kanjitp"},"content":"    \"name\" : \"Irfan Ibrahim\",","lastModifiedDate":"2021-09-26"},{"lineNumber":74,"author":{"gitId":"kanjitp"},"content":"    \"phone\" : \"92492021\",","lastModifiedDate":"2021-09-26"},{"lineNumber":75,"author":{"gitId":"kanjitp"},"content":"    \"email\" : \"irfan@example.com\",","lastModifiedDate":"2021-09-26"},{"lineNumber":76,"author":{"gitId":"kanjitp"},"content":"    \"address\" : \"Blk 47 Tampines Street 20, #17-35\",","lastModifiedDate":"2021-09-26"},{"lineNumber":77,"author":{"gitId":"kanjitp"},"content":"    \"tagged\" : [ \"classmates\" ],","lastModifiedDate":"2021-09-26"},{"lineNumber":78,"author":{"gitId":"kanjitp"},"content":"    \"birthDate\" : \"2000-05-23\",","lastModifiedDate":"2021-09-26"},{"lineNumber":79,"author":{"gitId":"kanjitp"},"content":"    \"notes\" : [ {","lastModifiedDate":"2021-09-26"},{"lineNumber":80,"author":{"gitId":"kanjitp"},"content":"      \"content\" : \"Dislike ill-mannered Person\",","lastModifiedDate":"2021-09-26"},{"lineNumber":81,"author":{"gitId":"kanjitp"},"content":"      \"importance\" : \"MEDIUM\"","lastModifiedDate":"2021-09-26"},{"lineNumber":82,"author":{"gitId":"kanjitp"},"content":"    } ],","lastModifiedDate":"2021-09-26"},{"lineNumber":83,"author":{"gitId":"kanjitp"},"content":"    \"nextOfKins\" : [ {","lastModifiedDate":"2021-09-26"},{"lineNumber":84,"author":{"gitId":"kanjitp"},"content":"      \"name\" : \"Juliet Ibrahim\",","lastModifiedDate":"2021-09-26"},{"lineNumber":85,"author":{"gitId":"kanjitp"},"content":"      \"phone\" : \"89345342\",","lastModifiedDate":"2021-09-26"},{"lineNumber":86,"author":{"gitId":"kanjitp"},"content":"      \"tag\" : \"Grandparent\"","lastModifiedDate":"2021-09-26"},{"lineNumber":87,"author":{"gitId":"kanjitp"},"content":"    } ]","lastModifiedDate":"2021-09-26"},{"lineNumber":88,"author":{"gitId":"-"},"content":"  }, {","lastModifiedDate":"2018-08-13"},{"lineNumber":89,"author":{"gitId":"kanjitp"},"content":"    \"id\" : \"roybal\",","lastModifiedDate":"2021-09-26"},{"lineNumber":90,"author":{"gitId":"kanjitp"},"content":"    \"name\" : \"Roy Balakrishnan\",","lastModifiedDate":"2021-09-26"},{"lineNumber":91,"author":{"gitId":"kanjitp"},"content":"    \"phone\" : \"92624417\",","lastModifiedDate":"2021-09-26"},{"lineNumber":92,"author":{"gitId":"kanjitp"},"content":"    \"email\" : \"royb@example.com\",","lastModifiedDate":"2021-09-26"},{"lineNumber":93,"author":{"gitId":"kanjitp"},"content":"    \"address\" : \"Blk 45 Aljunied Street 85, #11-31\",","lastModifiedDate":"2021-09-26"},{"lineNumber":94,"author":{"gitId":"kanjitp"},"content":"    \"tagged\" : [ \"colleagues\" ],","lastModifiedDate":"2021-09-26"},{"lineNumber":95,"author":{"gitId":"kanjitp"},"content":"    \"birthDate\" : \"1999-02-08\",","lastModifiedDate":"2021-09-26"},{"lineNumber":96,"author":{"gitId":"kanjitp"},"content":"    \"notes\" : [ {","lastModifiedDate":"2021-09-26"},{"lineNumber":97,"author":{"gitId":"kanjitp"},"content":"      \"content\" : \"Excessive attraction to Alcohol\",","lastModifiedDate":"2021-09-26"},{"lineNumber":98,"author":{"gitId":"kanjitp"},"content":"      \"importance\" : \"HIGH\"","lastModifiedDate":"2021-09-26"},{"lineNumber":99,"author":{"gitId":"kanjitp"},"content":"    } ],","lastModifiedDate":"2021-09-26"},{"lineNumber":100,"author":{"gitId":"kanjitp"},"content":"    \"nextOfKins\" : [ {","lastModifiedDate":"2021-09-26"},{"lineNumber":101,"author":{"gitId":"kanjitp"},"content":"      \"name\" : \"Rouse Balakrishnan\",","lastModifiedDate":"2021-09-26"},{"lineNumber":102,"author":{"gitId":"kanjitp"},"content":"      \"phone\" : \"93822312\",","lastModifiedDate":"2021-09-26"},{"lineNumber":103,"author":{"gitId":"kanjitp"},"content":"      \"tag\" : \"Brother\"","lastModifiedDate":"2021-09-26"},{"lineNumber":104,"author":{"gitId":"kanjitp"},"content":"    } ]","lastModifiedDate":"2021-09-26"},{"lineNumber":105,"author":{"gitId":"XXJJXJ"},"content":"  }],","lastModifiedDate":"2021-09-18"},{"lineNumber":106,"author":{"gitId":"XXJJXJ"},"content":"  \"events\": []","lastModifiedDate":"2021-09-18"},{"lineNumber":107,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"XXJJXJ":2,"kanjitp":97,"-":8}},{"path":"src/test/java/seedu/address/logic/LogicManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"kanjitp"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_PARTICIPANT_DISPLAYED_INDEX;","lastModifiedDate":"2021-09-28"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-12-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2018-12-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2017-01-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2017-06-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2016-09-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2016-09-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-12-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-05-31"},{"lineNumber":29,"author":{"gitId":"kanjitp"},"content":"import seedu.address.model.participant.Participant;","lastModifiedDate":"2021-09-26"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonAddressBookStorage;","lastModifiedDate":"2018-12-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonUserPrefsStorage;","lastModifiedDate":"2018-12-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.storage.StorageManager;","lastModifiedDate":"2018-12-09"},{"lineNumber":33,"author":{"gitId":"kanjitp"},"content":"import seedu.address.testutil.ParticipantBuilder;","lastModifiedDate":"2021-09-26"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"public class LogicManagerTest {","lastModifiedDate":"2016-09-22"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private static final IOException DUMMY_IO_EXCEPTION \u003d new IOException(\"dummy exception\");","lastModifiedDate":"2018-12-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public Path temporaryFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2017-06-20"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2018-12-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2019-04-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d","lastModifiedDate":"2019-04-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"                new JsonAddressBookStorage(temporaryFolder.resolve(\"addressBook.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(temporaryFolder.resolve(\"userPrefs.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        StorageManager storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2018-12-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-20"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void execute_invalidCommandFormat_throwsParseException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        String invalidCommand \u003d \"uicfhmowqewca\";","lastModifiedDate":"2017-06-20"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertParseException(invalidCommand, MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-06-20"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-14"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void execute_commandExecutionError_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        String deleteCommand \u003d \"delete 9\";","lastModifiedDate":"2017-06-14"},{"lineNumber":62,"author":{"gitId":"kanjitp"},"content":"        assertCommandException(deleteCommand, MESSAGE_INVALID_PARTICIPANT_DISPLAYED_INDEX);","lastModifiedDate":"2021-09-28"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public void execute_validCommand_success() throws Exception {","lastModifiedDate":"2019-03-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        String listCommand \u003d ListCommand.COMMAND_WORD;","lastModifiedDate":"2017-06-19"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertCommandSuccess(listCommand, ListCommand.MESSAGE_SUCCESS, model);","lastModifiedDate":"2017-06-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public void execute_storageThrowsIoException_throwsCommandException() {","lastModifiedDate":"2019-04-25"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        // Setup LogicManager with JsonAddressBookIoExceptionThrowingStub","lastModifiedDate":"2018-12-09"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d","lastModifiedDate":"2018-12-09"},{"lineNumber":75,"author":{"gitId":"-"},"content":"                new JsonAddressBookIoExceptionThrowingStub(temporaryFolder.resolve(\"ioExceptionAddressBook.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d","lastModifiedDate":"2019-04-25"},{"lineNumber":77,"author":{"gitId":"-"},"content":"                new JsonUserPrefsStorage(temporaryFolder.resolve(\"ioExceptionUserPrefs.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        StorageManager storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2018-12-09"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        // Execute add command","lastModifiedDate":"2018-12-09"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        String addCommand \u003d AddCommand.COMMAND_WORD + NAME_DESC_AMY + PHONE_DESC_AMY + EMAIL_DESC_AMY","lastModifiedDate":"2018-12-09"},{"lineNumber":83,"author":{"gitId":"-"},"content":"                + ADDRESS_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":84,"author":{"gitId":"kanjitp"},"content":"        Participant expectedPerson \u003d new ParticipantBuilder(AMY).withTags().build();","lastModifiedDate":"2021-09-26"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        ModelManager expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-12-09"},{"lineNumber":86,"author":{"gitId":"kanjitp"},"content":"        expectedModel.addParticipant(expectedPerson);","lastModifiedDate":"2021-09-26"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d LogicManager.FILE_OPS_ERROR_MESSAGE + DUMMY_IO_EXCEPTION;","lastModifiedDate":"2018-12-09"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertCommandFailure(addCommand, CommandException.class, expectedMessage, expectedModel);","lastModifiedDate":"2019-03-14"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":92,"author":{"gitId":"kanjitp"},"content":"    public void getFilteredParticipantList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2021-09-28"},{"lineNumber":93,"author":{"gitId":"kanjitp"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e logic.getFilteredParticipantList().remove(0));","lastModifiedDate":"2021-09-26"},{"lineNumber":94,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":95,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":96,"author":{"gitId":"XXJJXJ"},"content":"    @Test","lastModifiedDate":"2021-09-18"},{"lineNumber":97,"author":{"gitId":"XXJJXJ"},"content":"    public void getEventList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2021-09-18"},{"lineNumber":98,"author":{"gitId":"XXJJXJ"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e logic.getFilteredEventList().remove(0));","lastModifiedDate":"2021-09-21"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * - no exceptions are thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * - the feedback message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    private void assertCommandSuccess(String inputCommand, String expectedMessage,","lastModifiedDate":"2019-03-14"},{"lineNumber":109,"author":{"gitId":"-"},"content":"            Model expectedModel) throws CommandException, ParseException {","lastModifiedDate":"2019-03-14"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        CommandResult result \u003d logic.execute(inputCommand);","lastModifiedDate":"2019-03-14"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        assertEquals(expectedMessage, result.getFeedbackToUser());","lastModifiedDate":"2019-03-14"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2019-03-14"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":116,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a ParseException is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":117,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":118,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    private void assertParseException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-03-11"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, ParseException.class, expectedMessage);","lastModifiedDate":"2017-03-11"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-14"},{"lineNumber":124,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a CommandException is thrown and that the result message is correct.","lastModifiedDate":"2017-06-14"},{"lineNumber":125,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":126,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-14"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    private void assertCommandException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-06-14"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, CommandException.class, expectedMessage);","lastModifiedDate":"2017-06-14"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":132,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that the exception is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":133,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":134,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":136,"author":{"gitId":"-"},"content":"            String expectedMessage) {","lastModifiedDate":"2019-03-14"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-05-31"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, expectedException, expectedMessage, expectedModel);","lastModifiedDate":"2019-03-14"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":142,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":143,"author":{"gitId":"-"},"content":"     * - the {@code expectedException} is thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":144,"author":{"gitId":"-"},"content":"     * - the resulting error message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":145,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":146,"author":{"gitId":"-"},"content":"     * @see #assertCommandSuccess(String, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":147,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":149,"author":{"gitId":"-"},"content":"            String expectedMessage, Model expectedModel) {","lastModifiedDate":"2017-05-31"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        assertThrows(expectedException, expectedMessage, () -\u003e logic.execute(inputCommand));","lastModifiedDate":"2019-03-14"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2017-05-31"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-19"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":155,"author":{"gitId":"-"},"content":"     * A stub class to throw an {@code IOException} when the save method is called.","lastModifiedDate":"2018-12-09"},{"lineNumber":156,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    private static class JsonAddressBookIoExceptionThrowingStub extends JsonAddressBookStorage {","lastModifiedDate":"2018-12-09"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        private JsonAddressBookIoExceptionThrowingStub(Path filePath) {","lastModifiedDate":"2018-12-09"},{"lineNumber":159,"author":{"gitId":"-"},"content":"            super(filePath);","lastModifiedDate":"2018-12-09"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        public void saveAddressBook(ReadOnlyAddressBook addressBook, Path filePath) throws IOException {","lastModifiedDate":"2018-12-09"},{"lineNumber":164,"author":{"gitId":"-"},"content":"            throw DUMMY_IO_EXCEPTION;","lastModifiedDate":"2018-12-09"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":167,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"XXJJXJ":5,"kanjitp":8,"-":154}},{"path":"src/test/java/seedu/address/logic/commands/AddCommandIntegrationTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2017-07-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":5,"author":{"gitId":"kanjitp"},"content":"import static seedu.address.testutil.TypicalParticipants.getTypicalAddressBook;","lastModifiedDate":"2021-09-26"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-15"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-15"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-15"},{"lineNumber":13,"author":{"gitId":"kanjitp"},"content":"import seedu.address.model.participant.Participant;","lastModifiedDate":"2021-09-26"},{"lineNumber":14,"author":{"gitId":"kanjitp"},"content":"import seedu.address.testutil.ParticipantBuilder;","lastModifiedDate":"2021-09-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) for {@code AddCommand}.","lastModifiedDate":"2017-06-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class AddCommandIntegrationTest {","lastModifiedDate":"2017-06-15"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private Model model;","lastModifiedDate":"2017-06-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2017-06-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":29,"author":{"gitId":"kanjitp"},"content":"    public void execute_newParticipant_success() {","lastModifiedDate":"2021-09-28"},{"lineNumber":30,"author":{"gitId":"kanjitp"},"content":"        Participant validParticipant \u003d new ParticipantBuilder().build();","lastModifiedDate":"2021-09-28"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-06-15"},{"lineNumber":33,"author":{"gitId":"kanjitp"},"content":"        expectedModel.addParticipant(validParticipant);","lastModifiedDate":"2021-09-28"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":35,"author":{"gitId":"kanjitp"},"content":"        assertCommandSuccess(new AddCommand(validParticipant), model,","lastModifiedDate":"2021-09-28"},{"lineNumber":36,"author":{"gitId":"kanjitp"},"content":"                String.format(AddCommand.MESSAGE_SUCCESS, validParticipant), expectedModel);","lastModifiedDate":"2021-09-28"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":40,"author":{"gitId":"kanjitp"},"content":"    public void execute_duplicateParticipant_throwsCommandException() {","lastModifiedDate":"2021-09-28"},{"lineNumber":41,"author":{"gitId":"kanjitp"},"content":"        Participant personInList \u003d model.getAddressBook().getParticipantList().get(0);","lastModifiedDate":"2021-09-26"},{"lineNumber":42,"author":{"gitId":"kanjitp"},"content":"        assertCommandFailure(new AddCommand(personInList), model, AddCommand.MESSAGE_DUPLICATE_PARTICIPANT);","lastModifiedDate":"2021-09-28"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-15"}],"authorContributionMap":{"kanjitp":11,"-":34}},{"path":"src/test/java/seedu/address/logic/commands/AddCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-05-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-01-10"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-05-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-05-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-05-04"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-05-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2017-05-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":23,"author":{"gitId":"XXJJXJ"},"content":"import seedu.address.model.event.Event;","lastModifiedDate":"2021-09-18"},{"lineNumber":24,"author":{"gitId":"kanjitp"},"content":"import seedu.address.model.participant.Participant;","lastModifiedDate":"2021-09-26"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-05-12"},{"lineNumber":26,"author":{"gitId":"kanjitp"},"content":"import seedu.address.testutil.ParticipantBuilder;","lastModifiedDate":"2021-09-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"public class AddCommandTest {","lastModifiedDate":"2017-05-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void constructor_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AddCommand(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":36,"author":{"gitId":"kanjitp"},"content":"    public void execute_participantAcceptedByModel_addSuccessful() throws Exception {","lastModifiedDate":"2021-09-28"},{"lineNumber":37,"author":{"gitId":"kanjitp"},"content":"        ModelStubAcceptingParticipantAdded modelStub \u003d new ModelStubAcceptingParticipantAdded();","lastModifiedDate":"2021-09-28"},{"lineNumber":38,"author":{"gitId":"kanjitp"},"content":"        Participant validParticipant \u003d new ParticipantBuilder().build();","lastModifiedDate":"2021-09-28"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":40,"author":{"gitId":"kanjitp"},"content":"        CommandResult commandResult \u003d new AddCommand(validParticipant).execute(modelStub);","lastModifiedDate":"2021-09-28"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":42,"author":{"gitId":"kanjitp"},"content":"        assertEquals(String.format(AddCommand.MESSAGE_SUCCESS, validParticipant), commandResult.getFeedbackToUser());","lastModifiedDate":"2021-09-28"},{"lineNumber":43,"author":{"gitId":"kanjitp"},"content":"        assertEquals(Arrays.asList(validParticipant), modelStub.participantsAdded);","lastModifiedDate":"2021-09-28"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public void execute_duplicatePerson_throwsCommandException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":48,"author":{"gitId":"kanjitp"},"content":"        Participant validParticipant \u003d new ParticipantBuilder().build();","lastModifiedDate":"2021-09-28"},{"lineNumber":49,"author":{"gitId":"kanjitp"},"content":"        AddCommand addCommand \u003d new AddCommand(validParticipant);","lastModifiedDate":"2021-09-28"},{"lineNumber":50,"author":{"gitId":"kanjitp"},"content":"        ModelStub modelStub \u003d new ModelStubWithPerson(validParticipant);","lastModifiedDate":"2021-09-28"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":52,"author":{"gitId":"kanjitp"},"content":"        assertThrows(CommandException.class, AddCommand.MESSAGE_DUPLICATE_PARTICIPANT, () -\u003e","lastModifiedDate":"2021-09-28"},{"lineNumber":53,"author":{"gitId":"kanjitp"},"content":"                addCommand.execute(modelStub));","lastModifiedDate":"2021-09-28"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-22"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":58,"author":{"gitId":"kanjitp"},"content":"        Participant alice \u003d new ParticipantBuilder().withName(\"Alice\").build();","lastModifiedDate":"2021-09-26"},{"lineNumber":59,"author":{"gitId":"kanjitp"},"content":"        Participant bob \u003d new ParticipantBuilder().withName(\"Bob\").build();","lastModifiedDate":"2021-09-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        AddCommand addAliceCommand \u003d new AddCommand(alice);","lastModifiedDate":"2017-06-22"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        AddCommand addBobCommand \u003d new AddCommand(bob);","lastModifiedDate":"2017-06-22"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        AddCommand addAliceCommandCopy \u003d new AddCommand(alice);","lastModifiedDate":"2017-06-22"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommandCopy));","lastModifiedDate":"2017-06-22"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(1));","lastModifiedDate":"2017-06-22"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(null));","lastModifiedDate":"2017-06-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(addBobCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * A default model stub that have all of the methods failing.","lastModifiedDate":"2017-05-12"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    private class ModelStub implements Model {","lastModifiedDate":"2017-05-12"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":86,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":106,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-11-27"},{"lineNumber":111,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":115,"author":{"gitId":"kanjitp"},"content":"        public void addParticipant(Participant participant) {","lastModifiedDate":"2021-09-28"},{"lineNumber":116,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        public void setAddressBook(ReadOnlyAddressBook newData) {","lastModifiedDate":"2018-11-27"},{"lineNumber":121,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2017-05-12"},{"lineNumber":126,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":130,"author":{"gitId":"kanjitp"},"content":"        public boolean hasParticipant(Participant participant) {","lastModifiedDate":"2021-09-28"},{"lineNumber":131,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-06"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":135,"author":{"gitId":"kanjitp"},"content":"        public void deleteParticipant(Participant target) {","lastModifiedDate":"2021-09-26"},{"lineNumber":136,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":140,"author":{"gitId":"kanjitp"},"content":"        public void setParticipant(Participant target, Participant editedParticipant) {","lastModifiedDate":"2021-09-28"},{"lineNumber":141,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":145,"author":{"gitId":"kanjitp"},"content":"        public ObservableList\u003cParticipant\u003e getFilteredParticipantList() {","lastModifiedDate":"2021-09-26"},{"lineNumber":146,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":150,"author":{"gitId":"kanjitp"},"content":"        public void updateFilteredParticipantList(Predicate\u003cParticipant\u003e predicate) {","lastModifiedDate":"2021-09-26"},{"lineNumber":151,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":153,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":154,"author":{"gitId":"lowkangn"},"content":"        @Override","lastModifiedDate":"2021-10-03"},{"lineNumber":155,"author":{"gitId":"lowkangn"},"content":"        public void markEventAsDone(Event target) {","lastModifiedDate":"2021-10-03"},{"lineNumber":156,"author":{"gitId":"lowkangn"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-03"},{"lineNumber":157,"author":{"gitId":"lowkangn"},"content":"        }","lastModifiedDate":"2021-10-03"},{"lineNumber":158,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":159,"author":{"gitId":"XXJJXJ"},"content":"        @Override","lastModifiedDate":"2021-09-18"},{"lineNumber":160,"author":{"gitId":"XXJJXJ"},"content":"        public ObservableList\u003cEvent\u003e getFilteredEventList() {","lastModifiedDate":"2021-09-21"},{"lineNumber":161,"author":{"gitId":"XXJJXJ"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-09-18"},{"lineNumber":162,"author":{"gitId":"XXJJXJ"},"content":"        }","lastModifiedDate":"2021-09-18"},{"lineNumber":163,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":164,"author":{"gitId":"XXJJXJ"},"content":"        @Override","lastModifiedDate":"2021-09-22"},{"lineNumber":165,"author":{"gitId":"XXJJXJ"},"content":"        public void updateFilteredEventList(Predicate\u003cEvent\u003e predicate) {","lastModifiedDate":"2021-09-22"},{"lineNumber":166,"author":{"gitId":"XXJJXJ"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-09-22"},{"lineNumber":167,"author":{"gitId":"XXJJXJ"},"content":"        }","lastModifiedDate":"2021-09-22"},{"lineNumber":168,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":169,"author":{"gitId":"XXJJXJ"},"content":"        @Override","lastModifiedDate":"2021-09-23"},{"lineNumber":170,"author":{"gitId":"XXJJXJ"},"content":"        public void sortEvents() {","lastModifiedDate":"2021-09-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-09-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-09-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":176,"author":{"gitId":"-"},"content":"     * A Model stub that contains a single person.","lastModifiedDate":"2018-08-07"},{"lineNumber":177,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    private class ModelStubWithPerson extends ModelStub {","lastModifiedDate":"2018-08-07"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        private final Person person;","lastModifiedDate":"2018-08-07"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        ModelStubWithPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":182,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":183,"author":{"gitId":"-"},"content":"            this.person \u003d person;","lastModifiedDate":"2018-08-07"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":187,"author":{"gitId":"kanjitp"},"content":"        public boolean hasParticipant(Participant participant) {","lastModifiedDate":"2021-09-26"},{"lineNumber":188,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":189,"author":{"gitId":"-"},"content":"            return this.person.isSamePerson(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":190,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":193,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":194,"author":{"gitId":"kanjitp"},"content":"     * A Model stub that always accept the participant being added.","lastModifiedDate":"2021-09-29"},{"lineNumber":195,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":196,"author":{"gitId":"kanjitp"},"content":"    private class ModelStubAcceptingParticipantAdded extends ModelStub {","lastModifiedDate":"2021-09-28"},{"lineNumber":197,"author":{"gitId":"kanjitp"},"content":"        final ArrayList\u003cParticipant\u003e participantsAdded \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-09-28"},{"lineNumber":198,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":199,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-07"},{"lineNumber":200,"author":{"gitId":"kanjitp"},"content":"        public boolean hasParticipant(Participant participant) {","lastModifiedDate":"2021-09-26"},{"lineNumber":201,"author":{"gitId":"kanjitp"},"content":"            requireNonNull(participant);","lastModifiedDate":"2021-09-26"},{"lineNumber":202,"author":{"gitId":"kanjitp"},"content":"            return participantsAdded.stream().anyMatch(participant::isSameParticipant);","lastModifiedDate":"2021-09-28"},{"lineNumber":203,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":204,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":206,"author":{"gitId":"kanjitp"},"content":"        public void addParticipant(Participant participant) {","lastModifiedDate":"2021-09-26"},{"lineNumber":207,"author":{"gitId":"kanjitp"},"content":"            requireNonNull(participant);","lastModifiedDate":"2021-09-26"},{"lineNumber":208,"author":{"gitId":"kanjitp"},"content":"            participantsAdded.add(participant);","lastModifiedDate":"2021-09-28"},{"lineNumber":209,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":211,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":212,"author":{"gitId":"-"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2017-05-04"},{"lineNumber":213,"author":{"gitId":"-"},"content":"            return new AddressBook();","lastModifiedDate":"2017-05-04"},{"lineNumber":214,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":215,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":217,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-12"}],"authorContributionMap":{"XXJJXJ":14,"kanjitp":31,"-":167,"lowkangn":5}},{"path":"src/test/java/seedu/address/logic/commands/ClearCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":4,"author":{"gitId":"kanjitp"},"content":"import static seedu.address.testutil.TypicalParticipants.getTypicalAddressBook;","lastModifiedDate":"2021-09-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2018-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class ClearCommandTest {","lastModifiedDate":"2017-06-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void execute_emptyAddressBook_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        Model model \u003d new ModelManager();","lastModifiedDate":"2017-06-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ClearCommand(), model, ClearCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void execute_nonEmptyAddressBook_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2018-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        expectedModel.setAddressBook(new AddressBook());","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ClearCommand(), model, ClearCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-08"}],"authorContributionMap":{"kanjitp":1,"-":31}},{"path":"src/test/java/seedu/address/logic/commands/CommandTestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-06-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-07-20"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2018-01-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-06-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-06-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-05"},{"lineNumber":20,"author":{"gitId":"kanjitp"},"content":"import seedu.address.model.participant.NameContainsKeywordsPredicate;","lastModifiedDate":"2021-09-26"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":22,"author":{"gitId":"kanjitp"},"content":"import seedu.address.testutil.EditParticipantDescriptorBuilder;","lastModifiedDate":"2021-09-26"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-07-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":" * Contains helper methods for testing commands.","lastModifiedDate":"2017-06-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"public class CommandTestUtil {","lastModifiedDate":"2017-06-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_AMY \u003d \"Amy Bee\";","lastModifiedDate":"2017-07-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_BOB \u003d \"Bob Choo\";","lastModifiedDate":"2017-07-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static final String VALID_PHONE_AMY \u003d \"11111111\";","lastModifiedDate":"2017-07-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public static final String VALID_PHONE_BOB \u003d \"22222222\";","lastModifiedDate":"2017-07-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public static final String VALID_EMAIL_AMY \u003d \"amy@example.com\";","lastModifiedDate":"2017-07-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static final String VALID_EMAIL_BOB \u003d \"bob@example.com\";","lastModifiedDate":"2017-07-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public static final String VALID_ADDRESS_AMY \u003d \"Block 312, Amy Street 1\";","lastModifiedDate":"2017-07-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static final String VALID_ADDRESS_BOB \u003d \"Block 123, Bobby Street 3\";","lastModifiedDate":"2017-07-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static final String VALID_TAG_HUSBAND \u003d \"husband\";","lastModifiedDate":"2017-07-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public static final String VALID_TAG_FRIEND \u003d \"friend\";","lastModifiedDate":"2017-07-05"},{"lineNumber":40,"author":{"gitId":"kanjitp"},"content":"    public static final String VALID_BIRTHDATE_AMY \u003d \"2001-08-22\";","lastModifiedDate":"2021-09-26"},{"lineNumber":41,"author":{"gitId":"kanjitp"},"content":"    public static final String VALID_BIRTHDATE_BOB \u003d \"1989-12-31\";","lastModifiedDate":"2021-09-26"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_AMY \u003d \" \" + PREFIX_NAME + VALID_NAME_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_BOB \u003d \" \" + PREFIX_NAME + VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static final String PHONE_DESC_AMY \u003d \" \" + PREFIX_PHONE + VALID_PHONE_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public static final String PHONE_DESC_BOB \u003d \" \" + PREFIX_PHONE + VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public static final String EMAIL_DESC_AMY \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public static final String EMAIL_DESC_BOB \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public static final String ADDRESS_DESC_AMY \u003d \" \" + PREFIX_ADDRESS + VALID_ADDRESS_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public static final String ADDRESS_DESC_BOB \u003d \" \" + PREFIX_ADDRESS + VALID_ADDRESS_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public static final String TAG_DESC_FRIEND \u003d \" \" + PREFIX_TAG + VALID_TAG_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public static final String TAG_DESC_HUSBAND \u003d \" \" + PREFIX_TAG + VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public static final String INVALID_NAME_DESC \u003d \" \" + PREFIX_NAME + \"James\u0026\"; // \u0027\u0026\u0027 not allowed in names","lastModifiedDate":"2017-07-05"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public static final String INVALID_PHONE_DESC \u003d \" \" + PREFIX_PHONE + \"911a\"; // \u0027a\u0027 not allowed in phones","lastModifiedDate":"2017-07-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public static final String INVALID_EMAIL_DESC \u003d \" \" + PREFIX_EMAIL + \"bob!yahoo\"; // missing \u0027@\u0027 symbol","lastModifiedDate":"2017-07-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public static final String INVALID_ADDRESS_DESC \u003d \" \" + PREFIX_ADDRESS; // empty string not allowed for addresses","lastModifiedDate":"2017-07-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public static final String INVALID_TAG_DESC \u003d \" \" + PREFIX_TAG + \"hubby*\"; // \u0027*\u0027 not allowed in tags","lastModifiedDate":"2017-07-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_WHITESPACE \u003d \"\\t  \\r  \\n\";","lastModifiedDate":"2017-12-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_NON_EMPTY \u003d \"NonEmptyPreamble\";","lastModifiedDate":"2017-12-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public static final EditCommand.EditPersonDescriptor DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public static final EditCommand.EditPersonDescriptor DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":66,"author":{"gitId":"kanjitp"},"content":"    public static final EditCommand.EditParticipantDescriptor DESC_P_AMY;","lastModifiedDate":"2021-09-26"},{"lineNumber":67,"author":{"gitId":"kanjitp"},"content":"    public static final EditCommand.EditParticipantDescriptor DESC_P_BOB;","lastModifiedDate":"2021-09-26"},{"lineNumber":68,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    static {","lastModifiedDate":"2017-07-05"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        DESC_AMY \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2017-07-05"},{"lineNumber":71,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_AMY).withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY)","lastModifiedDate":"2017-07-05"},{"lineNumber":72,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-07-05"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        DESC_BOB \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2017-07-05"},{"lineNumber":74,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB).withAddress(VALID_ADDRESS_BOB)","lastModifiedDate":"2017-07-05"},{"lineNumber":75,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-07-05"},{"lineNumber":76,"author":{"gitId":"kanjitp"},"content":"        DESC_P_AMY \u003d new EditParticipantDescriptorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2021-09-26"},{"lineNumber":77,"author":{"gitId":"kanjitp"},"content":"            .withPhone(VALID_PHONE_AMY).withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY)","lastModifiedDate":"2021-09-26"},{"lineNumber":78,"author":{"gitId":"kanjitp"},"content":"            .withTags(VALID_TAG_FRIEND).build();;","lastModifiedDate":"2021-09-26"},{"lineNumber":79,"author":{"gitId":"kanjitp"},"content":"        DESC_P_BOB \u003d new EditParticipantDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2021-09-26"},{"lineNumber":80,"author":{"gitId":"kanjitp"},"content":"            .withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB).withAddress(VALID_ADDRESS_BOB)","lastModifiedDate":"2021-09-26"},{"lineNumber":81,"author":{"gitId":"kanjitp"},"content":"            .withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND).build();","lastModifiedDate":"2021-09-26"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-05"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * - the returned {@link CommandResult} matches {@code expectedCommandResult} \u003cbr\u003e","lastModifiedDate":"2018-12-09"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * - the {@code actualModel} matches {@code expectedModel}","lastModifiedDate":"2019-01-25"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, CommandResult expectedCommandResult,","lastModifiedDate":"2019-01-25"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":92,"author":{"gitId":"-"},"content":"            CommandResult result \u003d command.execute(actualModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":93,"author":{"gitId":"-"},"content":"            assertEquals(expectedCommandResult, result);","lastModifiedDate":"2018-12-09"},{"lineNumber":94,"author":{"gitId":"-"},"content":"            assertEquals(expectedModel, actualModel);","lastModifiedDate":"2017-06-05"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        } catch (CommandException ce) {","lastModifiedDate":"2017-08-15"},{"lineNumber":96,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"Execution of command should not fail.\", ce);","lastModifiedDate":"2017-08-15"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * Convenience wrapper to {@link #assertCommandSuccess(Command, Model, CommandResult, Model)}","lastModifiedDate":"2019-01-25"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * that takes a string {@code expectedMessage}.","lastModifiedDate":"2018-12-09"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, String expectedMessage,","lastModifiedDate":"2019-01-25"},{"lineNumber":105,"author":{"gitId":"-"},"content":"            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(expectedMessage);","lastModifiedDate":"2018-12-09"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, actualModel, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":111,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":112,"author":{"gitId":"-"},"content":"     * - a {@code CommandException} is thrown \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":113,"author":{"gitId":"-"},"content":"     * - the CommandException message matches {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     * - the address book, filtered person list and selected person in {@code actualModel} remain unchanged","lastModifiedDate":"2019-01-25"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    public static void assertCommandFailure(Command command, Model actualModel, String expectedMessage) {","lastModifiedDate":"2019-01-25"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        // we are unable to defensively copy the model for comparison later, so we can","lastModifiedDate":"2017-06-05"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        // only do so by copying its components.","lastModifiedDate":"2017-06-05"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        AddressBook expectedAddressBook \u003d new AddressBook(actualModel.getAddressBook());","lastModifiedDate":"2017-06-05"},{"lineNumber":120,"author":{"gitId":"kanjitp"},"content":"        List\u003cPerson\u003e expectedFilteredList \u003d new ArrayList\u003c\u003e(actualModel.getFilteredParticipantList());","lastModifiedDate":"2021-09-26"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        assertThrows(CommandException.class, expectedMessage, () -\u003e command.execute(actualModel));","lastModifiedDate":"2019-05-03"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddressBook, actualModel.getAddressBook());","lastModifiedDate":"2017-06-05"},{"lineNumber":124,"author":{"gitId":"kanjitp"},"content":"        assertEquals(expectedFilteredList, actualModel.getFilteredParticipantList());","lastModifiedDate":"2021-09-26"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-20"},{"lineNumber":127,"author":{"gitId":"XXJJXJ"},"content":"     * Updates {@code model}\u0027s filtered list to show only the Participant at the given {@code targetIndex} in the","lastModifiedDate":"2021-09-28"},{"lineNumber":128,"author":{"gitId":"-"},"content":"     * {@code model}\u0027s address book.","lastModifiedDate":"2018-01-31"},{"lineNumber":129,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-20"},{"lineNumber":130,"author":{"gitId":"kanjitp"},"content":"    public static void showParticipantAtIndex(Model model, Index targetIndex) {","lastModifiedDate":"2021-09-28"},{"lineNumber":131,"author":{"gitId":"kanjitp"},"content":"        assertTrue(targetIndex.getZeroBased() \u003c model.getFilteredParticipantList().size());","lastModifiedDate":"2021-09-26"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-31"},{"lineNumber":133,"author":{"gitId":"kanjitp"},"content":"        Person person \u003d model.getFilteredParticipantList().get(targetIndex.getZeroBased());","lastModifiedDate":"2021-09-26"},{"lineNumber":134,"author":{"gitId":"ntwbruce"},"content":"        final String[] splitName \u003d person.getFullName().split(\"\\\\s+\");","lastModifiedDate":"2021-10-03"},{"lineNumber":135,"author":{"gitId":"kanjitp"},"content":"        model.updateFilteredParticipantList(new NameContainsKeywordsPredicate(Arrays.asList(splitName[0])));","lastModifiedDate":"2021-09-26"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":137,"author":{"gitId":"kanjitp"},"content":"        assertEquals(1, model.getFilteredParticipantList().size());","lastModifiedDate":"2021-09-26"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-20"},{"lineNumber":139,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"XXJJXJ":1,"kanjitp":20,"ntwbruce":1,"-":117}},{"path":"src/test/java/seedu/address/logic/commands/DeleteCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"kanjitp"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showParticipantAtIndex;","lastModifiedDate":"2021-09-28"},{"lineNumber":8,"author":{"gitId":"kanjitp"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PARTICIPANT;","lastModifiedDate":"2021-09-28"},{"lineNumber":9,"author":{"gitId":"kanjitp"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PARTICIPANT;","lastModifiedDate":"2021-09-28"},{"lineNumber":10,"author":{"gitId":"kanjitp"},"content":"import static seedu.address.testutil.TypicalParticipants.getTypicalAddressBook;","lastModifiedDate":"2021-09-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2017-06-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-06-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-05"},{"lineNumber":19,"author":{"gitId":"kanjitp"},"content":"import seedu.address.model.participant.Participant;","lastModifiedDate":"2021-09-26"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for","lastModifiedDate":"2020-12-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * {@code DeleteCommand}.","lastModifiedDate":"2018-01-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class DeleteCommandTest {","lastModifiedDate":"2017-06-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void execute_validIndexUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":31,"author":{"gitId":"kanjitp"},"content":"        Participant participantToDelete \u003d model.getFilteredParticipantList()","lastModifiedDate":"2021-09-28"},{"lineNumber":32,"author":{"gitId":"kanjitp"},"content":"                .get(INDEX_FIRST_PARTICIPANT.getZeroBased());","lastModifiedDate":"2021-09-28"},{"lineNumber":33,"author":{"gitId":"kanjitp"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(INDEX_FIRST_PARTICIPANT);","lastModifiedDate":"2021-09-28"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":35,"author":{"gitId":"kanjitp"},"content":"        String expectedMessage \u003d String.format(DeleteCommand.MESSAGE_DELETE_PARTICIPANT_SUCCESS, participantToDelete);","lastModifiedDate":"2021-09-28"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-06-05"},{"lineNumber":38,"author":{"gitId":"kanjitp"},"content":"        expectedModel.deleteParticipant(participantToDelete);","lastModifiedDate":"2021-09-28"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertCommandSuccess(deleteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public void execute_invalidIndexUnfilteredList_throwsCommandException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":45,"author":{"gitId":"kanjitp"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredParticipantList().size() + 1);","lastModifiedDate":"2021-09-26"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(outOfBoundIndex);","lastModifiedDate":"2018-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":48,"author":{"gitId":"kanjitp"},"content":"        assertCommandFailure(deleteCommand, model, Messages.MESSAGE_INVALID_PARTICIPANT_DISPLAYED_INDEX);","lastModifiedDate":"2021-09-28"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public void execute_validIndexFilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":53,"author":{"gitId":"kanjitp"},"content":"        showParticipantAtIndex(model, INDEX_FIRST_PARTICIPANT);","lastModifiedDate":"2021-09-28"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":55,"author":{"gitId":"kanjitp"},"content":"        Participant personToDelete \u003d model.getFilteredParticipantList().get(INDEX_FIRST_PARTICIPANT.getZeroBased());","lastModifiedDate":"2021-09-28"},{"lineNumber":56,"author":{"gitId":"kanjitp"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(INDEX_FIRST_PARTICIPANT);","lastModifiedDate":"2021-09-28"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":58,"author":{"gitId":"kanjitp"},"content":"        String expectedMessage \u003d String.format(DeleteCommand.MESSAGE_DELETE_PARTICIPANT_SUCCESS, personToDelete);","lastModifiedDate":"2021-09-28"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-06-05"},{"lineNumber":61,"author":{"gitId":"kanjitp"},"content":"        expectedModel.deleteParticipant(personToDelete);","lastModifiedDate":"2021-09-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        showNoPerson(expectedModel);","lastModifiedDate":"2017-06-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertCommandSuccess(deleteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public void execute_invalidIndexFilteredList_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":69,"author":{"gitId":"kanjitp"},"content":"        showParticipantAtIndex(model, INDEX_FIRST_PARTICIPANT);","lastModifiedDate":"2021-09-28"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":71,"author":{"gitId":"kanjitp"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_PARTICIPANT;","lastModifiedDate":"2021-09-28"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2017-06-05"},{"lineNumber":73,"author":{"gitId":"kanjitp"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getParticipantList().size());","lastModifiedDate":"2021-09-26"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(outOfBoundIndex);","lastModifiedDate":"2018-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":77,"author":{"gitId":"kanjitp"},"content":"        assertCommandFailure(deleteCommand, model, Messages.MESSAGE_INVALID_PARTICIPANT_DISPLAYED_INDEX);","lastModifiedDate":"2021-09-28"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-01-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-08-08"},{"lineNumber":82,"author":{"gitId":"kanjitp"},"content":"        DeleteCommand deleteFirstCommand \u003d new DeleteCommand(INDEX_FIRST_PARTICIPANT);","lastModifiedDate":"2021-09-28"},{"lineNumber":83,"author":{"gitId":"kanjitp"},"content":"        DeleteCommand deleteSecondCommand \u003d new DeleteCommand(INDEX_SECOND_PARTICIPANT);","lastModifiedDate":"2021-09-28"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":89,"author":{"gitId":"kanjitp"},"content":"        DeleteCommand deleteFirstCommandCopy \u003d new DeleteCommand(INDEX_FIRST_PARTICIPANT);","lastModifiedDate":"2021-09-28"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommandCopy));","lastModifiedDate":"2017-06-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(1));","lastModifiedDate":"2017-06-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(null));","lastModifiedDate":"2017-06-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(deleteSecondCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * Updates {@code model}\u0027s filtered list to show no one.","lastModifiedDate":"2017-06-05"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    private void showNoPerson(Model model) {","lastModifiedDate":"2017-06-05"},{"lineNumber":106,"author":{"gitId":"kanjitp"},"content":"        model.updateFilteredParticipantList(p -\u003e false);","lastModifiedDate":"2021-09-26"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":108,"author":{"gitId":"kanjitp"},"content":"        assertTrue(model.getFilteredParticipantList().isEmpty());","lastModifiedDate":"2021-09-26"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":110,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"kanjitp":26,"-":84}},{"path":"src/test/java/seedu/address/logic/commands/DoneEventCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"lowkangn"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-10-03"},{"lineNumber":2,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":3,"author":{"gitId":"lowkangn"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-03"},{"lineNumber":4,"author":{"gitId":"lowkangn"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-03"},{"lineNumber":5,"author":{"gitId":"lowkangn"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2021-10-03"},{"lineNumber":6,"author":{"gitId":"lowkangn"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-10-03"},{"lineNumber":7,"author":{"gitId":"lowkangn"},"content":"import static seedu.address.testutil.TypicalEvents.getTypicalAddressBook;","lastModifiedDate":"2021-10-03"},{"lineNumber":8,"author":{"gitId":"lowkangn"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_EVENT;","lastModifiedDate":"2021-10-03"},{"lineNumber":9,"author":{"gitId":"lowkangn"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_EVENT;","lastModifiedDate":"2021-10-03"},{"lineNumber":10,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":11,"author":{"gitId":"lowkangn"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-03"},{"lineNumber":12,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":13,"author":{"gitId":"lowkangn"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2021-10-03"},{"lineNumber":14,"author":{"gitId":"lowkangn"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-10-03"},{"lineNumber":15,"author":{"gitId":"lowkangn"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-10-03"},{"lineNumber":16,"author":{"gitId":"lowkangn"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2021-10-03"},{"lineNumber":17,"author":{"gitId":"lowkangn"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2021-10-03"},{"lineNumber":18,"author":{"gitId":"lowkangn"},"content":"import seedu.address.model.event.Event;","lastModifiedDate":"2021-10-03"},{"lineNumber":19,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":20,"author":{"gitId":"lowkangn"},"content":"/**","lastModifiedDate":"2021-10-03"},{"lineNumber":21,"author":{"gitId":"lowkangn"},"content":" * Contains integration tests (interaction with the Model) and unit tests for","lastModifiedDate":"2021-10-03"},{"lineNumber":22,"author":{"gitId":"lowkangn"},"content":" * {@code DoneEventCommand}.","lastModifiedDate":"2021-10-03"},{"lineNumber":23,"author":{"gitId":"lowkangn"},"content":" */","lastModifiedDate":"2021-10-03"},{"lineNumber":24,"author":{"gitId":"lowkangn"},"content":"class DoneEventCommandTest {","lastModifiedDate":"2021-10-03"},{"lineNumber":25,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":26,"author":{"gitId":"lowkangn"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2021-10-03"},{"lineNumber":27,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":28,"author":{"gitId":"lowkangn"},"content":"    @Test","lastModifiedDate":"2021-10-03"},{"lineNumber":29,"author":{"gitId":"lowkangn"},"content":"    public void execute_validIndex_success() {","lastModifiedDate":"2021-10-03"},{"lineNumber":30,"author":{"gitId":"lowkangn"},"content":"        Event eventToMarkAsDone \u003d model.getFilteredEventList()","lastModifiedDate":"2021-10-03"},{"lineNumber":31,"author":{"gitId":"lowkangn"},"content":"                .get(INDEX_FIRST_EVENT.getZeroBased());","lastModifiedDate":"2021-10-03"},{"lineNumber":32,"author":{"gitId":"lowkangn"},"content":"        DoneEventCommand doneCommand \u003d new DoneEventCommand(INDEX_FIRST_EVENT);","lastModifiedDate":"2021-10-03"},{"lineNumber":33,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":34,"author":{"gitId":"lowkangn"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2021-10-03"},{"lineNumber":35,"author":{"gitId":"lowkangn"},"content":"        expectedModel.markEventAsDone(eventToMarkAsDone);","lastModifiedDate":"2021-10-03"},{"lineNumber":36,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":37,"author":{"gitId":"lowkangn"},"content":"        String expectedMessage \u003d String.format(DoneEventCommand.MESSAGE_DONE_EVENT_SUCCESS,","lastModifiedDate":"2021-10-03"},{"lineNumber":38,"author":{"gitId":"lowkangn"},"content":"                eventToMarkAsDone.markAsDone());","lastModifiedDate":"2021-10-03"},{"lineNumber":39,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":40,"author":{"gitId":"lowkangn"},"content":"        assertCommandSuccess(doneCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-10-03"},{"lineNumber":41,"author":{"gitId":"lowkangn"},"content":"    }","lastModifiedDate":"2021-10-03"},{"lineNumber":42,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":43,"author":{"gitId":"lowkangn"},"content":"    @Test","lastModifiedDate":"2021-10-03"},{"lineNumber":44,"author":{"gitId":"lowkangn"},"content":"    public void execute_invalidIndex_throwsCommandException() {","lastModifiedDate":"2021-10-03"},{"lineNumber":45,"author":{"gitId":"lowkangn"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredEventList().size() + 1);","lastModifiedDate":"2021-10-03"},{"lineNumber":46,"author":{"gitId":"lowkangn"},"content":"        DoneEventCommand doneCommand \u003d new DoneEventCommand(outOfBoundIndex);","lastModifiedDate":"2021-10-03"},{"lineNumber":47,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":48,"author":{"gitId":"lowkangn"},"content":"        assertCommandFailure(doneCommand, model, Messages.MESSAGE_INVALID_EVENT_DISPLAYED_INDEX);","lastModifiedDate":"2021-10-03"},{"lineNumber":49,"author":{"gitId":"lowkangn"},"content":"    }","lastModifiedDate":"2021-10-03"},{"lineNumber":50,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":51,"author":{"gitId":"lowkangn"},"content":"    @Test","lastModifiedDate":"2021-10-03"},{"lineNumber":52,"author":{"gitId":"lowkangn"},"content":"    public void equals() {","lastModifiedDate":"2021-10-03"},{"lineNumber":53,"author":{"gitId":"lowkangn"},"content":"        DoneEventCommand doneFirstCommand \u003d new DoneEventCommand(INDEX_FIRST_EVENT);","lastModifiedDate":"2021-10-03"},{"lineNumber":54,"author":{"gitId":"lowkangn"},"content":"        DoneEventCommand doneSecondCommand \u003d new DoneEventCommand(INDEX_SECOND_EVENT);","lastModifiedDate":"2021-10-03"},{"lineNumber":55,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":56,"author":{"gitId":"lowkangn"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-10-03"},{"lineNumber":57,"author":{"gitId":"lowkangn"},"content":"        assertTrue(doneFirstCommand.equals(doneFirstCommand));","lastModifiedDate":"2021-10-03"},{"lineNumber":58,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":59,"author":{"gitId":"lowkangn"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2021-10-03"},{"lineNumber":60,"author":{"gitId":"lowkangn"},"content":"        DoneEventCommand doneFirstCommandCopy \u003d new DoneEventCommand(INDEX_FIRST_EVENT);","lastModifiedDate":"2021-10-03"},{"lineNumber":61,"author":{"gitId":"lowkangn"},"content":"        assertTrue(doneFirstCommand.equals(doneFirstCommandCopy));","lastModifiedDate":"2021-10-03"},{"lineNumber":62,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":63,"author":{"gitId":"lowkangn"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2021-10-03"},{"lineNumber":64,"author":{"gitId":"lowkangn"},"content":"        assertFalse(doneFirstCommand.equals(1));","lastModifiedDate":"2021-10-03"},{"lineNumber":65,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":66,"author":{"gitId":"lowkangn"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-10-03"},{"lineNumber":67,"author":{"gitId":"lowkangn"},"content":"        assertFalse(doneFirstCommand.equals(null));","lastModifiedDate":"2021-10-03"},{"lineNumber":68,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":69,"author":{"gitId":"lowkangn"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2021-10-03"},{"lineNumber":70,"author":{"gitId":"lowkangn"},"content":"        assertFalse(doneFirstCommand.equals(doneSecondCommand));","lastModifiedDate":"2021-10-03"},{"lineNumber":71,"author":{"gitId":"lowkangn"},"content":"    }","lastModifiedDate":"2021-10-03"},{"lineNumber":72,"author":{"gitId":"lowkangn"},"content":"}","lastModifiedDate":"2021-10-03"}],"authorContributionMap":{"lowkangn":72}},{"path":"src/test/java/seedu/address/logic/commands/EditCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-05-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"kanjitp"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_P_AMY;","lastModifiedDate":"2021-09-26"},{"lineNumber":6,"author":{"gitId":"kanjitp"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_P_BOB;","lastModifiedDate":"2021-09-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":12,"author":{"gitId":"kanjitp"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showParticipantAtIndex;","lastModifiedDate":"2021-09-28"},{"lineNumber":13,"author":{"gitId":"kanjitp"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PARTICIPANT;","lastModifiedDate":"2021-09-28"},{"lineNumber":14,"author":{"gitId":"kanjitp"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PARTICIPANT;","lastModifiedDate":"2021-09-28"},{"lineNumber":15,"author":{"gitId":"kanjitp"},"content":"import static seedu.address.testutil.TypicalParticipants.getTypicalAddressBook;","lastModifiedDate":"2021-09-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2017-05-04"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":21,"author":{"gitId":"kanjitp"},"content":"import seedu.address.logic.commands.EditCommand.EditParticipantDescriptor;","lastModifiedDate":"2021-09-26"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-05-04"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-05-04"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-05-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-05-04"},{"lineNumber":26,"author":{"gitId":"kanjitp"},"content":"import seedu.address.model.participant.Participant;","lastModifiedDate":"2021-09-26"},{"lineNumber":27,"author":{"gitId":"kanjitp"},"content":"import seedu.address.testutil.EditParticipantDescriptorBuilder;","lastModifiedDate":"2021-09-26"},{"lineNumber":28,"author":{"gitId":"kanjitp"},"content":"import seedu.address.testutil.ParticipantBuilder;","lastModifiedDate":"2021-09-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-04"},{"lineNumber":31,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for EditCommand.","lastModifiedDate":"2020-12-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-04"},{"lineNumber":33,"author":{"gitId":"-"},"content":"public class EditCommandTest {","lastModifiedDate":"2017-05-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public void execute_allFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":39,"author":{"gitId":"kanjitp"},"content":"        Participant editedParticipant \u003d new ParticipantBuilder().build();","lastModifiedDate":"2021-09-28"},{"lineNumber":40,"author":{"gitId":"kanjitp"},"content":"        EditParticipantDescriptor descriptor \u003d new EditParticipantDescriptorBuilder(editedParticipant).build();","lastModifiedDate":"2021-09-28"},{"lineNumber":41,"author":{"gitId":"kanjitp"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PARTICIPANT, descriptor);","lastModifiedDate":"2021-09-28"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":43,"author":{"gitId":"kanjitp"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PARTICIPANT_SUCCESS, editedParticipant);","lastModifiedDate":"2021-09-28"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2017-06-05"},{"lineNumber":46,"author":{"gitId":"kanjitp"},"content":"        expectedModel.setParticipant(model.getFilteredParticipantList().get(0), editedParticipant);","lastModifiedDate":"2021-09-28"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public void execute_someFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":53,"author":{"gitId":"kanjitp"},"content":"        Index indexLastParticipant \u003d Index.fromOneBased(model.getFilteredParticipantList().size());","lastModifiedDate":"2021-09-28"},{"lineNumber":54,"author":{"gitId":"kanjitp"},"content":"        Participant lastParticipant \u003d model.getFilteredParticipantList().get(indexLastParticipant.getZeroBased());","lastModifiedDate":"2021-09-28"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":56,"author":{"gitId":"kanjitp"},"content":"        ParticipantBuilder participantInList \u003d new ParticipantBuilder(lastParticipant);","lastModifiedDate":"2021-09-28"},{"lineNumber":57,"author":{"gitId":"kanjitp"},"content":"        Participant editedParticipant \u003d participantInList.withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2021-09-28"},{"lineNumber":58,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2017-05-18"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":60,"author":{"gitId":"kanjitp"},"content":"        EditParticipantDescriptor descriptor \u003d new EditParticipantDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2021-09-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_BOB).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2017-05-18"},{"lineNumber":62,"author":{"gitId":"kanjitp"},"content":"        EditCommand editCommand \u003d new EditCommand(indexLastParticipant, descriptor);","lastModifiedDate":"2021-09-28"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":64,"author":{"gitId":"kanjitp"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PARTICIPANT_SUCCESS, editedParticipant);","lastModifiedDate":"2021-09-28"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2017-05-18"},{"lineNumber":67,"author":{"gitId":"kanjitp"},"content":"        expectedModel.setParticipant(lastParticipant, editedParticipant);","lastModifiedDate":"2021-09-28"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public void execute_noFieldSpecifiedUnfilteredList_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":74,"author":{"gitId":"kanjitp"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PARTICIPANT, new EditParticipantDescriptor());","lastModifiedDate":"2021-09-28"},{"lineNumber":75,"author":{"gitId":"kanjitp"},"content":"        Participant editedParticipant \u003d model.getFilteredParticipantList().get(INDEX_FIRST_PARTICIPANT.getZeroBased());","lastModifiedDate":"2021-09-28"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":77,"author":{"gitId":"kanjitp"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PARTICIPANT_SUCCESS, editedParticipant);","lastModifiedDate":"2021-09-28"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2017-05-18"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public void execute_filteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":86,"author":{"gitId":"kanjitp"},"content":"        showParticipantAtIndex(model, INDEX_FIRST_PARTICIPANT);","lastModifiedDate":"2021-09-28"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":88,"author":{"gitId":"kanjitp"},"content":"        Participant participantInFilteredList \u003d model.getFilteredParticipantList()","lastModifiedDate":"2021-09-28"},{"lineNumber":89,"author":{"gitId":"kanjitp"},"content":"                .get(INDEX_FIRST_PARTICIPANT.getZeroBased());","lastModifiedDate":"2021-09-28"},{"lineNumber":90,"author":{"gitId":"kanjitp"},"content":"        Participant editedParticipant \u003d new ParticipantBuilder(participantInFilteredList)","lastModifiedDate":"2021-09-28"},{"lineNumber":91,"author":{"gitId":"kanjitp"},"content":"                .withName(VALID_NAME_BOB).build();","lastModifiedDate":"2021-09-28"},{"lineNumber":92,"author":{"gitId":"kanjitp"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PARTICIPANT,","lastModifiedDate":"2021-09-28"},{"lineNumber":93,"author":{"gitId":"kanjitp"},"content":"                new EditParticipantDescriptorBuilder().withName(VALID_NAME_BOB).build());","lastModifiedDate":"2021-09-26"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":95,"author":{"gitId":"kanjitp"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PARTICIPANT_SUCCESS, editedParticipant);","lastModifiedDate":"2021-09-28"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2017-05-18"},{"lineNumber":98,"author":{"gitId":"kanjitp"},"content":"        expectedModel.setParticipant(model.getFilteredParticipantList().get(0), editedParticipant);","lastModifiedDate":"2021-09-28"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":104,"author":{"gitId":"kanjitp"},"content":"    public void execute_duplicateParticipantUnfilteredList_failure() {","lastModifiedDate":"2021-09-28"},{"lineNumber":105,"author":{"gitId":"kanjitp"},"content":"        Participant firstParticipant \u003d model.getFilteredParticipantList().get(INDEX_FIRST_PARTICIPANT.getZeroBased());","lastModifiedDate":"2021-09-28"},{"lineNumber":106,"author":{"gitId":"kanjitp"},"content":"        EditParticipantDescriptor descriptor \u003d new EditParticipantDescriptorBuilder(firstParticipant).build();","lastModifiedDate":"2021-09-28"},{"lineNumber":107,"author":{"gitId":"kanjitp"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_SECOND_PARTICIPANT, descriptor);","lastModifiedDate":"2021-09-28"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":109,"author":{"gitId":"kanjitp"},"content":"        assertCommandFailure(editCommand, model, EditCommand.MESSAGE_DUPLICATE_PARTICIPANT);","lastModifiedDate":"2021-09-28"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":113,"author":{"gitId":"kanjitp"},"content":"    public void execute_duplicateParticipantFilteredList_failure() {","lastModifiedDate":"2021-09-28"},{"lineNumber":114,"author":{"gitId":"kanjitp"},"content":"        showParticipantAtIndex(model, INDEX_FIRST_PARTICIPANT);","lastModifiedDate":"2021-09-28"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":116,"author":{"gitId":"kanjitp"},"content":"        // edit participant in filtered list into a duplicate in address book","lastModifiedDate":"2021-09-28"},{"lineNumber":117,"author":{"gitId":"kanjitp"},"content":"        Participant participantInList \u003d model.getAddressBook()","lastModifiedDate":"2021-09-28"},{"lineNumber":118,"author":{"gitId":"kanjitp"},"content":"                .getParticipantList().get(INDEX_SECOND_PARTICIPANT.getZeroBased());","lastModifiedDate":"2021-09-28"},{"lineNumber":119,"author":{"gitId":"kanjitp"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PARTICIPANT,","lastModifiedDate":"2021-09-28"},{"lineNumber":120,"author":{"gitId":"kanjitp"},"content":"                new EditParticipantDescriptorBuilder(participantInList).build());","lastModifiedDate":"2021-09-28"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":122,"author":{"gitId":"kanjitp"},"content":"        assertCommandFailure(editCommand, model, EditCommand.MESSAGE_DUPLICATE_PARTICIPANT);","lastModifiedDate":"2021-09-28"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":126,"author":{"gitId":"kanjitp"},"content":"    public void execute_invalidParticipantIndexUnfilteredList_failure() {","lastModifiedDate":"2021-09-28"},{"lineNumber":127,"author":{"gitId":"kanjitp"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredParticipantList().size() + 1);","lastModifiedDate":"2021-09-26"},{"lineNumber":128,"author":{"gitId":"kanjitp"},"content":"        EditParticipantDescriptor descriptor \u003d new EditParticipantDescriptorBuilder().withName(VALID_NAME_BOB).build();","lastModifiedDate":"2021-09-26"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(outOfBoundIndex, descriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":131,"author":{"gitId":"kanjitp"},"content":"        assertCommandFailure(editCommand, model, Messages.MESSAGE_INVALID_PARTICIPANT_DISPLAYED_INDEX);","lastModifiedDate":"2021-09-28"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-18"},{"lineNumber":135,"author":{"gitId":"-"},"content":"     * Edit filtered list where index is larger than size of filtered list,","lastModifiedDate":"2017-05-18"},{"lineNumber":136,"author":{"gitId":"-"},"content":"     * but smaller than size of address book","lastModifiedDate":"2017-05-18"},{"lineNumber":137,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-18"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":139,"author":{"gitId":"kanjitp"},"content":"    public void execute_invalidParticipantIndexFilteredList_failure() {","lastModifiedDate":"2021-09-28"},{"lineNumber":140,"author":{"gitId":"kanjitp"},"content":"        showParticipantAtIndex(model, INDEX_FIRST_PARTICIPANT);","lastModifiedDate":"2021-09-28"},{"lineNumber":141,"author":{"gitId":"kanjitp"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_PARTICIPANT;","lastModifiedDate":"2021-09-28"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2017-05-18"},{"lineNumber":143,"author":{"gitId":"kanjitp"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getParticipantList().size());","lastModifiedDate":"2021-09-26"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(outOfBoundIndex,","lastModifiedDate":"2018-08-08"},{"lineNumber":146,"author":{"gitId":"kanjitp"},"content":"                new EditParticipantDescriptorBuilder().withName(VALID_NAME_BOB).build());","lastModifiedDate":"2021-09-26"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":148,"author":{"gitId":"kanjitp"},"content":"        assertCommandFailure(editCommand, model, Messages.MESSAGE_INVALID_PARTICIPANT_DISPLAYED_INDEX);","lastModifiedDate":"2021-09-28"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-01-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-08-08"},{"lineNumber":153,"author":{"gitId":"kanjitp"},"content":"        final EditCommand standardCommand \u003d new EditCommand(INDEX_FIRST_PARTICIPANT, DESC_P_AMY);","lastModifiedDate":"2021-09-28"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-08"},{"lineNumber":156,"author":{"gitId":"kanjitp"},"content":"        EditParticipantDescriptor copyDescriptor \u003d new EditParticipantDescriptor(DESC_P_AMY);","lastModifiedDate":"2021-09-26"},{"lineNumber":157,"author":{"gitId":"kanjitp"},"content":"        EditCommand commandWithSameValues \u003d new EditCommand(INDEX_FIRST_PARTICIPANT, copyDescriptor);","lastModifiedDate":"2021-09-28"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        assertTrue(standardCommand.equals(commandWithSameValues));","lastModifiedDate":"2017-05-08"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-08"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        assertTrue(standardCommand.equals(standardCommand));","lastModifiedDate":"2017-05-08"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(null));","lastModifiedDate":"2017-05-08"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(new ClearCommand()));","lastModifiedDate":"2017-05-08"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":170,"author":{"gitId":"kanjitp"},"content":"        assertFalse(standardCommand.equals(new EditCommand(INDEX_SECOND_PARTICIPANT, DESC_P_AMY)));","lastModifiedDate":"2021-09-28"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        // different descriptor -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":173,"author":{"gitId":"kanjitp"},"content":"        assertFalse(standardCommand.equals(new EditCommand(INDEX_FIRST_PARTICIPANT, DESC_P_BOB)));","lastModifiedDate":"2021-09-28"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":176,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-08"}],"authorContributionMap":{"kanjitp":63,"-":113}},{"path":"src/test/java/seedu/address/logic/commands/FilterEventCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"XXJJXJ"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-09-22"},{"lineNumber":2,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":3,"author":{"gitId":"XXJJXJ"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-09-22"},{"lineNumber":4,"author":{"gitId":"XXJJXJ"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-09-22"},{"lineNumber":5,"author":{"gitId":"XXJJXJ"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-09-22"},{"lineNumber":6,"author":{"gitId":"XXJJXJ"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_EVENTS_LISTED_OVERVIEW;","lastModifiedDate":"2021-09-22"},{"lineNumber":7,"author":{"gitId":"XXJJXJ"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-09-22"},{"lineNumber":8,"author":{"gitId":"XXJJXJ"},"content":"import static seedu.address.testutil.TypicalEvents.getTypicalAddressBook;","lastModifiedDate":"2021-09-22"},{"lineNumber":9,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":10,"author":{"gitId":"XXJJXJ"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-09-22"},{"lineNumber":11,"author":{"gitId":"XXJJXJ"},"content":"import java.util.Collections;","lastModifiedDate":"2021-09-22"},{"lineNumber":12,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":13,"author":{"gitId":"XXJJXJ"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-09-22"},{"lineNumber":14,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":15,"author":{"gitId":"XXJJXJ"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-09-22"},{"lineNumber":16,"author":{"gitId":"XXJJXJ"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2021-09-22"},{"lineNumber":17,"author":{"gitId":"XXJJXJ"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2021-09-22"},{"lineNumber":18,"author":{"gitId":"XXJJXJ"},"content":"import seedu.address.model.event.EventDateTimePredicate;","lastModifiedDate":"2021-09-22"},{"lineNumber":19,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":20,"author":{"gitId":"XXJJXJ"},"content":"/**","lastModifiedDate":"2021-09-22"},{"lineNumber":21,"author":{"gitId":"XXJJXJ"},"content":" * Contains integration tests (interaction with the Model) for FilterEventCommand.","lastModifiedDate":"2021-09-22"},{"lineNumber":22,"author":{"gitId":"XXJJXJ"},"content":" */","lastModifiedDate":"2021-09-22"},{"lineNumber":23,"author":{"gitId":"XXJJXJ"},"content":"public class FilterEventCommandTest {","lastModifiedDate":"2021-09-22"},{"lineNumber":24,"author":{"gitId":"XXJJXJ"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2021-09-22"},{"lineNumber":25,"author":{"gitId":"XXJJXJ"},"content":"    private Model expectedModel \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2021-09-22"},{"lineNumber":26,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":27,"author":{"gitId":"XXJJXJ"},"content":"    @Test","lastModifiedDate":"2021-09-22"},{"lineNumber":28,"author":{"gitId":"XXJJXJ"},"content":"    public void equals() {","lastModifiedDate":"2021-09-22"},{"lineNumber":29,"author":{"gitId":"XXJJXJ"},"content":"        EventDateTimePredicate firstPredicate \u003d","lastModifiedDate":"2021-09-22"},{"lineNumber":30,"author":{"gitId":"XXJJXJ"},"content":"                new EventDateTimePredicate(Collections.singletonList(\"2021-09-18\"));","lastModifiedDate":"2021-09-22"},{"lineNumber":31,"author":{"gitId":"XXJJXJ"},"content":"        EventDateTimePredicate secondPredicate \u003d","lastModifiedDate":"2021-09-22"},{"lineNumber":32,"author":{"gitId":"XXJJXJ"},"content":"                new EventDateTimePredicate(Arrays.asList(\"2021-09-18\", \"1000\"));","lastModifiedDate":"2021-09-22"},{"lineNumber":33,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":34,"author":{"gitId":"XXJJXJ"},"content":"        FilterEventCommand filterFirstCommand \u003d new FilterEventCommand(firstPredicate);","lastModifiedDate":"2021-09-22"},{"lineNumber":35,"author":{"gitId":"XXJJXJ"},"content":"        FilterEventCommand filterSecondCommand \u003d new FilterEventCommand(secondPredicate);","lastModifiedDate":"2021-09-22"},{"lineNumber":36,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":37,"author":{"gitId":"XXJJXJ"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-09-22"},{"lineNumber":38,"author":{"gitId":"XXJJXJ"},"content":"        assertTrue(filterFirstCommand.equals(filterFirstCommand));","lastModifiedDate":"2021-09-22"},{"lineNumber":39,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":40,"author":{"gitId":"XXJJXJ"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2021-09-22"},{"lineNumber":41,"author":{"gitId":"XXJJXJ"},"content":"        FilterEventCommand filterFirstCopy \u003d new FilterEventCommand(firstPredicate);","lastModifiedDate":"2021-09-22"},{"lineNumber":42,"author":{"gitId":"XXJJXJ"},"content":"        assertTrue(filterFirstCommand.equals(filterFirstCopy));","lastModifiedDate":"2021-09-22"},{"lineNumber":43,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":44,"author":{"gitId":"XXJJXJ"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2021-09-22"},{"lineNumber":45,"author":{"gitId":"XXJJXJ"},"content":"        assertFalse(filterFirstCommand.equals(1));","lastModifiedDate":"2021-09-22"},{"lineNumber":46,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":47,"author":{"gitId":"XXJJXJ"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-09-22"},{"lineNumber":48,"author":{"gitId":"XXJJXJ"},"content":"        assertFalse(filterFirstCommand.equals(null));","lastModifiedDate":"2021-09-22"},{"lineNumber":49,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":50,"author":{"gitId":"XXJJXJ"},"content":"        // different object -\u003e returns false","lastModifiedDate":"2021-09-22"},{"lineNumber":51,"author":{"gitId":"XXJJXJ"},"content":"        assertFalse(filterFirstCommand.equals(filterSecondCommand));","lastModifiedDate":"2021-09-22"},{"lineNumber":52,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":53,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":54,"author":{"gitId":"XXJJXJ"},"content":"    @Test","lastModifiedDate":"2021-09-22"},{"lineNumber":55,"author":{"gitId":"XXJJXJ"},"content":"    public void execute_onlyDateInput_multipleEventsFound() {","lastModifiedDate":"2021-09-22"},{"lineNumber":56,"author":{"gitId":"XXJJXJ"},"content":"        String expectedMessage \u003d String.format(MESSAGE_EVENTS_LISTED_OVERVIEW, 2);","lastModifiedDate":"2021-09-22"},{"lineNumber":57,"author":{"gitId":"XXJJXJ"},"content":"        EventDateTimePredicate predicate \u003d","lastModifiedDate":"2021-09-22"},{"lineNumber":58,"author":{"gitId":"XXJJXJ"},"content":"                new EventDateTimePredicate(Collections.singletonList(\"2021-09-18\"));","lastModifiedDate":"2021-09-22"},{"lineNumber":59,"author":{"gitId":"XXJJXJ"},"content":"        FilterEventCommand command \u003d new FilterEventCommand(predicate);","lastModifiedDate":"2021-09-22"},{"lineNumber":60,"author":{"gitId":"XXJJXJ"},"content":"        expectedModel.updateFilteredEventList(predicate);","lastModifiedDate":"2021-09-22"},{"lineNumber":61,"author":{"gitId":"XXJJXJ"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-09-22"},{"lineNumber":62,"author":{"gitId":"XXJJXJ"},"content":"        assertEquals(model.getFilteredEventList(), expectedModel.getFilteredEventList());","lastModifiedDate":"2021-09-22"},{"lineNumber":63,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":64,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":65,"author":{"gitId":"XXJJXJ"},"content":"    @Test","lastModifiedDate":"2021-09-22"},{"lineNumber":66,"author":{"gitId":"XXJJXJ"},"content":"    public void execute_dateAndTimeInput_oneEventFound() {","lastModifiedDate":"2021-09-22"},{"lineNumber":67,"author":{"gitId":"XXJJXJ"},"content":"        String expectedMessage \u003d String.format(MESSAGE_EVENTS_LISTED_OVERVIEW, 1);","lastModifiedDate":"2021-09-22"},{"lineNumber":68,"author":{"gitId":"XXJJXJ"},"content":"        EventDateTimePredicate predicate \u003d","lastModifiedDate":"2021-09-22"},{"lineNumber":69,"author":{"gitId":"XXJJXJ"},"content":"                new EventDateTimePredicate(Arrays.asList(\"2021-09-18\", \"1000\"));","lastModifiedDate":"2021-09-22"},{"lineNumber":70,"author":{"gitId":"XXJJXJ"},"content":"        FilterEventCommand command \u003d new FilterEventCommand(predicate);","lastModifiedDate":"2021-09-22"},{"lineNumber":71,"author":{"gitId":"XXJJXJ"},"content":"        expectedModel.updateFilteredEventList(predicate);","lastModifiedDate":"2021-09-22"},{"lineNumber":72,"author":{"gitId":"XXJJXJ"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-09-22"},{"lineNumber":73,"author":{"gitId":"XXJJXJ"},"content":"        assertEquals(model.getFilteredEventList(), expectedModel.getFilteredEventList());","lastModifiedDate":"2021-09-22"},{"lineNumber":74,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":75,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":76,"author":{"gitId":"XXJJXJ"},"content":"    @Test","lastModifiedDate":"2021-09-22"},{"lineNumber":77,"author":{"gitId":"XXJJXJ"},"content":"    public void execute_onlyDateInput_noEventFound() {","lastModifiedDate":"2021-09-22"},{"lineNumber":78,"author":{"gitId":"XXJJXJ"},"content":"        String expectedMessage \u003d String.format(MESSAGE_EVENTS_LISTED_OVERVIEW, 0);","lastModifiedDate":"2021-09-22"},{"lineNumber":79,"author":{"gitId":"XXJJXJ"},"content":"        EventDateTimePredicate predicate \u003d","lastModifiedDate":"2021-09-22"},{"lineNumber":80,"author":{"gitId":"XXJJXJ"},"content":"                new EventDateTimePredicate(Collections.singletonList(\"1-9-18\"));","lastModifiedDate":"2021-09-22"},{"lineNumber":81,"author":{"gitId":"XXJJXJ"},"content":"        FilterEventCommand command \u003d new FilterEventCommand(predicate);","lastModifiedDate":"2021-09-22"},{"lineNumber":82,"author":{"gitId":"XXJJXJ"},"content":"        expectedModel.updateFilteredEventList(predicate);","lastModifiedDate":"2021-09-22"},{"lineNumber":83,"author":{"gitId":"XXJJXJ"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-09-22"},{"lineNumber":84,"author":{"gitId":"XXJJXJ"},"content":"        assertEquals(model.getFilteredEventList(), expectedModel.getFilteredEventList());","lastModifiedDate":"2021-09-22"},{"lineNumber":85,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":86,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":87,"author":{"gitId":"XXJJXJ"},"content":"    @Test","lastModifiedDate":"2021-09-22"},{"lineNumber":88,"author":{"gitId":"XXJJXJ"},"content":"    public void execute_dateAndTimeInput_noEventFound() {","lastModifiedDate":"2021-09-22"},{"lineNumber":89,"author":{"gitId":"XXJJXJ"},"content":"        String expectedMessage \u003d String.format(MESSAGE_EVENTS_LISTED_OVERVIEW, 0);","lastModifiedDate":"2021-09-22"},{"lineNumber":90,"author":{"gitId":"XXJJXJ"},"content":"        EventDateTimePredicate predicate \u003d","lastModifiedDate":"2021-09-22"},{"lineNumber":91,"author":{"gitId":"XXJJXJ"},"content":"                new EventDateTimePredicate(Arrays.asList(\"2021-09-18\", \"1020\"));","lastModifiedDate":"2021-09-22"},{"lineNumber":92,"author":{"gitId":"XXJJXJ"},"content":"        FilterEventCommand command \u003d new FilterEventCommand(predicate);","lastModifiedDate":"2021-09-22"},{"lineNumber":93,"author":{"gitId":"XXJJXJ"},"content":"        expectedModel.updateFilteredEventList(predicate);","lastModifiedDate":"2021-09-22"},{"lineNumber":94,"author":{"gitId":"XXJJXJ"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-09-22"},{"lineNumber":95,"author":{"gitId":"XXJJXJ"},"content":"        assertEquals(model.getFilteredEventList(), expectedModel.getFilteredEventList());","lastModifiedDate":"2021-09-22"},{"lineNumber":96,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":97,"author":{"gitId":"XXJJXJ"},"content":"}","lastModifiedDate":"2021-09-22"}],"authorContributionMap":{"XXJJXJ":97}},{"path":"src/test/java/seedu/address/logic/commands/FindCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"kanjitp"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_PARTICIPANTS_LISTED_OVERVIEW;","lastModifiedDate":"2021-09-28"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2018-08-08"},{"lineNumber":8,"author":{"gitId":"kanjitp"},"content":"import static seedu.address.testutil.TypicalParticipants.ALEX;","lastModifiedDate":"2021-09-26"},{"lineNumber":9,"author":{"gitId":"kanjitp"},"content":"import static seedu.address.testutil.TypicalParticipants.BERNICE;","lastModifiedDate":"2021-09-26"},{"lineNumber":10,"author":{"gitId":"kanjitp"},"content":"import static seedu.address.testutil.TypicalParticipants.getTypicalAddressBook;","lastModifiedDate":"2021-09-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"kanjitp"},"content":"import seedu.address.model.participant.NameContainsKeywordsPredicate;","lastModifiedDate":"2021-09-26"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) for {@code FindCommand}.","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class FindCommandTest {","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private Model expectedModel \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2018-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-06-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate firstPredicate \u003d","lastModifiedDate":"2017-06-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"                new NameContainsKeywordsPredicate(Collections.singletonList(\"first\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate secondPredicate \u003d","lastModifiedDate":"2017-06-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"                new NameContainsKeywordsPredicate(Collections.singletonList(\"second\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        FindCommand findFirstCommand \u003d new FindCommand(firstPredicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        FindCommand findSecondCommand \u003d new FindCommand(secondPredicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        FindCommand findFirstCommandCopy \u003d new FindCommand(firstPredicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommandCopy));","lastModifiedDate":"2017-06-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(1));","lastModifiedDate":"2017-06-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(null));","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(findSecondCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void execute_zeroKeywords_noPersonFound() {","lastModifiedDate":"2017-08-15"},{"lineNumber":58,"author":{"gitId":"kanjitp"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PARTICIPANTS_LISTED_OVERVIEW, 0);","lastModifiedDate":"2021-09-28"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d preparePredicate(\" \");","lastModifiedDate":"2018-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        FindCommand command \u003d new FindCommand(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":61,"author":{"gitId":"kanjitp"},"content":"        expectedModel.updateFilteredParticipantList(predicate);","lastModifiedDate":"2021-09-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":63,"author":{"gitId":"kanjitp"},"content":"        assertEquals(Collections.emptyList(), model.getFilteredParticipantList());","lastModifiedDate":"2021-09-26"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void execute_multipleKeywords_multiplePersonsFound() {","lastModifiedDate":"2017-08-15"},{"lineNumber":68,"author":{"gitId":"kanjitp"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PARTICIPANTS_LISTED_OVERVIEW, 2);","lastModifiedDate":"2021-09-28"},{"lineNumber":69,"author":{"gitId":"kanjitp"},"content":"        NameContainsKeywordsPredicate predicate \u003d preparePredicate(\"Alex Bernice\");","lastModifiedDate":"2021-09-26"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        FindCommand command \u003d new FindCommand(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":71,"author":{"gitId":"kanjitp"},"content":"        expectedModel.updateFilteredParticipantList(predicate);","lastModifiedDate":"2021-09-26"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":73,"author":{"gitId":"kanjitp"},"content":"        assertEquals(Arrays.asList(ALEX, BERNICE), model.getFilteredParticipantList());","lastModifiedDate":"2021-09-26"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-12"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     * Parses {@code userInput} into a {@code NameContainsKeywordsPredicate}.","lastModifiedDate":"2018-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-12"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    private NameContainsKeywordsPredicate preparePredicate(String userInput) {","lastModifiedDate":"2018-08-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        return new NameContainsKeywordsPredicate(Arrays.asList(userInput.split(\"\\\\s+\")));","lastModifiedDate":"2018-08-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":82,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"kanjitp":12,"-":70}},{"path":"src/test/java/seedu/address/logic/commands/ListCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":4,"author":{"gitId":"kanjitp"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showParticipantAtIndex;","lastModifiedDate":"2021-09-28"},{"lineNumber":5,"author":{"gitId":"kanjitp"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PARTICIPANT;","lastModifiedDate":"2021-09-28"},{"lineNumber":6,"author":{"gitId":"kanjitp"},"content":"import static seedu.address.testutil.TypicalParticipants.getTypicalAddressBook;","lastModifiedDate":"2021-09-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for ListCommand.","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class ListCommandTest {","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private Model model;","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private Model expectedModel;","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void execute_listIsNotFiltered_showsSameList() {","lastModifiedDate":"2017-08-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ListCommand(), model, ListCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public void execute_listIsFiltered_showsEverything() {","lastModifiedDate":"2017-08-15"},{"lineNumber":36,"author":{"gitId":"kanjitp"},"content":"        showParticipantAtIndex(model, INDEX_FIRST_PARTICIPANT);","lastModifiedDate":"2021-09-28"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ListCommand(), model, ListCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"kanjitp":4,"-":35}},{"path":"src/test/java/seedu/address/logic/commands/ListEventCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"XXJJXJ"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-09-22"},{"lineNumber":2,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":3,"author":{"gitId":"XXJJXJ"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-09-22"},{"lineNumber":4,"author":{"gitId":"XXJJXJ"},"content":"import static seedu.address.testutil.TypicalEvents.getTypicalAddressBook;","lastModifiedDate":"2021-09-22"},{"lineNumber":5,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":6,"author":{"gitId":"XXJJXJ"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-09-22"},{"lineNumber":7,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":8,"author":{"gitId":"XXJJXJ"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2021-09-22"},{"lineNumber":9,"author":{"gitId":"XXJJXJ"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-09-22"},{"lineNumber":10,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":11,"author":{"gitId":"XXJJXJ"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-09-22"},{"lineNumber":12,"author":{"gitId":"XXJJXJ"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2021-09-22"},{"lineNumber":13,"author":{"gitId":"XXJJXJ"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2021-09-22"},{"lineNumber":14,"author":{"gitId":"XXJJXJ"},"content":"import seedu.address.model.event.EventDateTimePredicate;","lastModifiedDate":"2021-09-22"},{"lineNumber":15,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":16,"author":{"gitId":"XXJJXJ"},"content":"/**","lastModifiedDate":"2021-09-22"},{"lineNumber":17,"author":{"gitId":"XXJJXJ"},"content":" * Contains integration tests (interaction with the Model) and unit tests for ListEventCommand.","lastModifiedDate":"2021-09-22"},{"lineNumber":18,"author":{"gitId":"XXJJXJ"},"content":" */","lastModifiedDate":"2021-09-22"},{"lineNumber":19,"author":{"gitId":"XXJJXJ"},"content":"public class ListEventCommandTest {","lastModifiedDate":"2021-09-22"},{"lineNumber":20,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":21,"author":{"gitId":"XXJJXJ"},"content":"    private Model model;","lastModifiedDate":"2021-09-22"},{"lineNumber":22,"author":{"gitId":"XXJJXJ"},"content":"    private Model expectedModel;","lastModifiedDate":"2021-09-22"},{"lineNumber":23,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":24,"author":{"gitId":"XXJJXJ"},"content":"    @BeforeEach","lastModifiedDate":"2021-09-22"},{"lineNumber":25,"author":{"gitId":"XXJJXJ"},"content":"    public void setUp() {","lastModifiedDate":"2021-10-02"},{"lineNumber":26,"author":{"gitId":"XXJJXJ"},"content":"        model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2021-09-22"},{"lineNumber":27,"author":{"gitId":"XXJJXJ"},"content":"        expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2021-09-22"},{"lineNumber":28,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":29,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":30,"author":{"gitId":"XXJJXJ"},"content":"    @Test","lastModifiedDate":"2021-09-22"},{"lineNumber":31,"author":{"gitId":"XXJJXJ"},"content":"    public void execute_listIsNotFiltered_showsSameList() {","lastModifiedDate":"2021-09-22"},{"lineNumber":32,"author":{"gitId":"XXJJXJ"},"content":"        assertCommandSuccess(new ListEventCommand(), model, ListEventCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2021-09-22"},{"lineNumber":33,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":34,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":35,"author":{"gitId":"XXJJXJ"},"content":"    @Test","lastModifiedDate":"2021-09-22"},{"lineNumber":36,"author":{"gitId":"XXJJXJ"},"content":"    public void execute_listIsFiltered_showsEverything() {","lastModifiedDate":"2021-09-22"},{"lineNumber":37,"author":{"gitId":"XXJJXJ"},"content":"        model.updateFilteredEventList(new EventDateTimePredicate(Arrays.asList(\"1-1-1\")));","lastModifiedDate":"2021-09-22"},{"lineNumber":38,"author":{"gitId":"XXJJXJ"},"content":"        assertCommandSuccess(new ListEventCommand(), model, ListEventCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2021-09-22"},{"lineNumber":39,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":40,"author":{"gitId":"XXJJXJ"},"content":"}","lastModifiedDate":"2021-09-22"}],"authorContributionMap":{"XXJJXJ":40}},{"path":"src/test/java/seedu/address/logic/commands/ShowEventDetailsCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ntwbruce"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-09-29"},{"lineNumber":2,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":3,"author":{"gitId":"ntwbruce"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_EVENT_NOT_FOUND;","lastModifiedDate":"2021-09-29"},{"lineNumber":4,"author":{"gitId":"ntwbruce"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2021-09-29"},{"lineNumber":5,"author":{"gitId":"ntwbruce"},"content":"import static seedu.address.testutil.TypicalParticipants.getTypicalAddressBook;","lastModifiedDate":"2021-09-29"},{"lineNumber":6,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":7,"author":{"gitId":"ntwbruce"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-09-29"},{"lineNumber":8,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":9,"author":{"gitId":"ntwbruce"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-09-29"},{"lineNumber":10,"author":{"gitId":"ntwbruce"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-09-29"},{"lineNumber":11,"author":{"gitId":"ntwbruce"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2021-09-29"},{"lineNumber":12,"author":{"gitId":"ntwbruce"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2021-09-29"},{"lineNumber":13,"author":{"gitId":"ntwbruce"},"content":"import seedu.address.model.event.EventNamePredicate;","lastModifiedDate":"2021-09-29"},{"lineNumber":14,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":15,"author":{"gitId":"lowkangn"},"content":"public class ShowEventDetailsCommandTest {","lastModifiedDate":"2021-10-03"},{"lineNumber":16,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":17,"author":{"gitId":"ntwbruce"},"content":"    private final Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2021-09-29"},{"lineNumber":18,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":19,"author":{"gitId":"ntwbruce"},"content":"    @Test","lastModifiedDate":"2021-09-29"},{"lineNumber":20,"author":{"gitId":"ntwbruce"},"content":"    public void constructor_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2021-09-29"},{"lineNumber":21,"author":{"gitId":"lowkangn"},"content":"        assertThrows(NullPointerException.class, () -\u003e new ShowEventDetailsCommand(null));","lastModifiedDate":"2021-10-03"},{"lineNumber":22,"author":{"gitId":"ntwbruce"},"content":"    }","lastModifiedDate":"2021-09-29"},{"lineNumber":23,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":24,"author":{"gitId":"ntwbruce"},"content":"    @Test","lastModifiedDate":"2021-09-29"},{"lineNumber":25,"author":{"gitId":"ntwbruce"},"content":"    public void execute_eventNotInList_throwsCommandException() {","lastModifiedDate":"2021-09-29"},{"lineNumber":26,"author":{"gitId":"ntwbruce"},"content":"        EventNamePredicate predicate \u003d preparePredicate(\" \");","lastModifiedDate":"2021-09-29"},{"lineNumber":27,"author":{"gitId":"lowkangn"},"content":"        ShowEventDetailsCommand command \u003d new ShowEventDetailsCommand(predicate);","lastModifiedDate":"2021-10-03"},{"lineNumber":28,"author":{"gitId":"ntwbruce"},"content":"        assertThrows(CommandException.class, MESSAGE_EVENT_NOT_FOUND, () -\u003e command.execute(model));","lastModifiedDate":"2021-09-29"},{"lineNumber":29,"author":{"gitId":"ntwbruce"},"content":"    }","lastModifiedDate":"2021-09-29"},{"lineNumber":30,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":31,"author":{"gitId":"ntwbruce"},"content":"    /* Prior to implementation of addParticipant functionality, no way of manually adding Event to Event list without","lastModifiedDate":"2021-09-29"},{"lineNumber":32,"author":{"gitId":"ntwbruce"},"content":"    direct access to AddressBook class, which causes unwanted dependency. Test to be implemented after addParticipant is","lastModifiedDate":"2021-09-29"},{"lineNumber":33,"author":{"gitId":"ntwbruce"},"content":"    implemented. */","lastModifiedDate":"2021-09-29"},{"lineNumber":34,"author":{"gitId":"ntwbruce"},"content":"    @Test","lastModifiedDate":"2021-09-29"},{"lineNumber":35,"author":{"gitId":"ntwbruce"},"content":"    public void execute_noUiChange_showDetailsSuccessful() throws CommandException {","lastModifiedDate":"2021-09-29"},{"lineNumber":36,"author":{"gitId":"ntwbruce"},"content":"    }","lastModifiedDate":"2021-09-29"},{"lineNumber":37,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":38,"author":{"gitId":"ntwbruce"},"content":"    /* Prior to implementation of addParticipant functionality, no way of manually adding Event to Event list without","lastModifiedDate":"2021-09-29"},{"lineNumber":39,"author":{"gitId":"ntwbruce"},"content":"    direct access to AddressBook class, which causes unwanted dependency. Test to be implemented after addParticipant is","lastModifiedDate":"2021-09-29"},{"lineNumber":40,"author":{"gitId":"ntwbruce"},"content":"    implemented. */","lastModifiedDate":"2021-09-29"},{"lineNumber":41,"author":{"gitId":"ntwbruce"},"content":"    @Test","lastModifiedDate":"2021-09-29"},{"lineNumber":42,"author":{"gitId":"ntwbruce"},"content":"    public void execute_eventInList_showDetailsSuccessful() throws CommandException {","lastModifiedDate":"2021-09-29"},{"lineNumber":43,"author":{"gitId":"ntwbruce"},"content":"    }","lastModifiedDate":"2021-09-29"},{"lineNumber":44,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":45,"author":{"gitId":"ntwbruce"},"content":"    /**","lastModifiedDate":"2021-09-29"},{"lineNumber":46,"author":{"gitId":"ntwbruce"},"content":"     * Parses {@code userInput} into a {@code EventNamePredicate}.","lastModifiedDate":"2021-09-29"},{"lineNumber":47,"author":{"gitId":"ntwbruce"},"content":"     */","lastModifiedDate":"2021-09-29"},{"lineNumber":48,"author":{"gitId":"ntwbruce"},"content":"    private EventNamePredicate preparePredicate(String userInput) {","lastModifiedDate":"2021-09-29"},{"lineNumber":49,"author":{"gitId":"ntwbruce"},"content":"        return new EventNamePredicate(userInput.trim().replaceAll(\"\\\\s+\", \" \"));","lastModifiedDate":"2021-09-29"},{"lineNumber":50,"author":{"gitId":"ntwbruce"},"content":"    }","lastModifiedDate":"2021-09-29"},{"lineNumber":51,"author":{"gitId":"ntwbruce"},"content":"}","lastModifiedDate":"2021-09-29"}],"authorContributionMap":{"ntwbruce":48,"lowkangn":3}},{"path":"src/test/java/seedu/address/logic/commands/SortEventCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"XXJJXJ"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-09-23"},{"lineNumber":2,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":3,"author":{"gitId":"XXJJXJ"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-09-23"},{"lineNumber":4,"author":{"gitId":"XXJJXJ"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-09-23"},{"lineNumber":5,"author":{"gitId":"XXJJXJ"},"content":"import static seedu.address.testutil.TypicalEvents.getTypicalAddressBook;","lastModifiedDate":"2021-09-23"},{"lineNumber":6,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":7,"author":{"gitId":"XXJJXJ"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-09-23"},{"lineNumber":8,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":9,"author":{"gitId":"XXJJXJ"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-09-23"},{"lineNumber":10,"author":{"gitId":"XXJJXJ"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2021-09-23"},{"lineNumber":11,"author":{"gitId":"XXJJXJ"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2021-09-23"},{"lineNumber":12,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":13,"author":{"gitId":"XXJJXJ"},"content":"public class SortEventCommandTest {","lastModifiedDate":"2021-09-23"},{"lineNumber":14,"author":{"gitId":"XXJJXJ"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2021-09-23"},{"lineNumber":15,"author":{"gitId":"XXJJXJ"},"content":"    private Model expectedModel \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2021-09-23"},{"lineNumber":16,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":17,"author":{"gitId":"XXJJXJ"},"content":"    @Test","lastModifiedDate":"2021-09-23"},{"lineNumber":18,"author":{"gitId":"XXJJXJ"},"content":"    public void execute_sortOneNotTheOther_notEquals() {","lastModifiedDate":"2021-09-23"},{"lineNumber":19,"author":{"gitId":"XXJJXJ"},"content":"        // TODO: Once addEvents implemented, can update the test cases here","lastModifiedDate":"2021-09-23"},{"lineNumber":20,"author":{"gitId":"XXJJXJ"},"content":"        SortEventCommand command \u003d new SortEventCommand();","lastModifiedDate":"2021-09-23"},{"lineNumber":21,"author":{"gitId":"XXJJXJ"},"content":"        command.execute(model);","lastModifiedDate":"2021-09-23"},{"lineNumber":22,"author":{"gitId":"XXJJXJ"},"content":"        assertFalse(model.getAddressBook().getEventList().equals(expectedModel.getAddressBook().getEventList()));","lastModifiedDate":"2021-09-23"},{"lineNumber":23,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-09-23"},{"lineNumber":24,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":25,"author":{"gitId":"XXJJXJ"},"content":"    @Test","lastModifiedDate":"2021-09-23"},{"lineNumber":26,"author":{"gitId":"XXJJXJ"},"content":"    public void execute_sortBoth_equals() {","lastModifiedDate":"2021-09-23"},{"lineNumber":27,"author":{"gitId":"XXJJXJ"},"content":"        // TODO: Once addEvents implemented, can update the test cases here","lastModifiedDate":"2021-09-23"},{"lineNumber":28,"author":{"gitId":"XXJJXJ"},"content":"        SortEventCommand command \u003d new SortEventCommand();","lastModifiedDate":"2021-09-23"},{"lineNumber":29,"author":{"gitId":"XXJJXJ"},"content":"        command.execute(model);","lastModifiedDate":"2021-09-23"},{"lineNumber":30,"author":{"gitId":"XXJJXJ"},"content":"        command.execute(expectedModel);","lastModifiedDate":"2021-09-23"},{"lineNumber":31,"author":{"gitId":"XXJJXJ"},"content":"        assertTrue(model.getAddressBook().getEventList().equals(expectedModel.getAddressBook().getEventList()));","lastModifiedDate":"2021-09-23"},{"lineNumber":32,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-09-23"},{"lineNumber":33,"author":{"gitId":"XXJJXJ"},"content":"}","lastModifiedDate":"2021-09-23"}],"authorContributionMap":{"XXJJXJ":33}},{"path":"src/test/java/seedu/address/logic/parser/AddCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-06-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-06-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_ADDRESS_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_EMAIL_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_PHONE_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_TAG_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PREAMBLE_NON_EMPTY;","lastModifiedDate":"2017-12-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PREAMBLE_WHITESPACE;","lastModifiedDate":"2017-12-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.AMY;","lastModifiedDate":"2018-07-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BOB;","lastModifiedDate":"2018-07-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-06-15"},{"lineNumber":35,"author":{"gitId":"kanjitp"},"content":"import seedu.address.model.participant.Participant;","lastModifiedDate":"2021-09-26"},{"lineNumber":36,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-06-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-06-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-06-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-06-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-06-15"},{"lineNumber":41,"author":{"gitId":"kanjitp"},"content":"import seedu.address.testutil.ParticipantBuilder;","lastModifiedDate":"2021-09-26"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"public class AddCommandParserTest {","lastModifiedDate":"2017-06-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    private AddCommandParser parser \u003d new AddCommandParser();","lastModifiedDate":"2017-06-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public void parse_allFieldsPresent_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":48,"author":{"gitId":"kanjitp"},"content":"        Participant expectedParticipant \u003d new ParticipantBuilder(BOB).withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2021-09-28"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        // whitespace only preamble","lastModifiedDate":"2017-12-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, PREAMBLE_WHITESPACE + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":52,"author":{"gitId":"kanjitp"},"content":"                + ADDRESS_DESC_BOB + TAG_DESC_FRIEND, new AddCommand(expectedParticipant));","lastModifiedDate":"2021-09-28"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        // multiple names - last name accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_AMY + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":56,"author":{"gitId":"kanjitp"},"content":"                + ADDRESS_DESC_BOB + TAG_DESC_FRIEND, new AddCommand(expectedParticipant));","lastModifiedDate":"2021-09-28"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        // multiple phones - last phone accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_AMY + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":60,"author":{"gitId":"kanjitp"},"content":"                + ADDRESS_DESC_BOB + TAG_DESC_FRIEND, new AddCommand(expectedParticipant));","lastModifiedDate":"2021-09-28"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        // multiple emails - last email accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_AMY + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":64,"author":{"gitId":"kanjitp"},"content":"                + ADDRESS_DESC_BOB + TAG_DESC_FRIEND, new AddCommand(expectedParticipant));","lastModifiedDate":"2021-09-28"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        // multiple addresses - last address accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_AMY","lastModifiedDate":"2017-12-23"},{"lineNumber":68,"author":{"gitId":"kanjitp"},"content":"                + ADDRESS_DESC_BOB + TAG_DESC_FRIEND, new AddCommand(expectedParticipant));","lastModifiedDate":"2021-09-28"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        // multiple tags - all accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":71,"author":{"gitId":"kanjitp"},"content":"        Participant expectedParticipantMultipleTags \u003d new ParticipantBuilder(BOB).withTags(VALID_TAG_FRIEND,","lastModifiedDate":"2021-09-28"},{"lineNumber":72,"author":{"gitId":"kanjitp"},"content":"            VALID_TAG_HUSBAND)","lastModifiedDate":"2021-09-26"},{"lineNumber":73,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-07-25"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":75,"author":{"gitId":"kanjitp"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, new AddCommand(expectedParticipantMultipleTags));","lastModifiedDate":"2021-09-28"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public void parse_optionalFieldsMissing_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        // zero tags","lastModifiedDate":"2017-06-15"},{"lineNumber":81,"author":{"gitId":"kanjitp"},"content":"        Participant expectedParticipant \u003d new ParticipantBuilder(AMY).withTags().build();","lastModifiedDate":"2021-09-28"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_AMY + PHONE_DESC_AMY + EMAIL_DESC_AMY + ADDRESS_DESC_AMY,","lastModifiedDate":"2017-12-23"},{"lineNumber":83,"author":{"gitId":"kanjitp"},"content":"                new AddCommand(expectedParticipant));","lastModifiedDate":"2021-09-28"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public void parse_compulsoryFieldMissing_failure() {","lastModifiedDate":"2017-06-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE);","lastModifiedDate":"2017-06-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        // missing name prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, VALID_NAME_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB,","lastModifiedDate":"2017-12-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        // missing phone prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + VALID_PHONE_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB,","lastModifiedDate":"2017-12-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        // missing email prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + VALID_EMAIL_BOB + ADDRESS_DESC_BOB,","lastModifiedDate":"2017-12-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        // missing address prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + VALID_ADDRESS_BOB,","lastModifiedDate":"2017-12-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        // all prefixes missing","lastModifiedDate":"2017-06-15"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, VALID_NAME_BOB + VALID_PHONE_BOB + VALID_EMAIL_BOB + VALID_ADDRESS_BOB,","lastModifiedDate":"2017-12-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2017-06-15"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        // invalid name","lastModifiedDate":"2017-06-15"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        // invalid phone","lastModifiedDate":"2017-06-15"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + INVALID_PHONE_DESC + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        // invalid email","lastModifiedDate":"2017-06-15"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + INVALID_EMAIL_DESC + ADDRESS_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        // invalid address","lastModifiedDate":"2017-06-15"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + INVALID_ADDRESS_DESC","lastModifiedDate":"2017-12-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        // invalid tag","lastModifiedDate":"2017-06-15"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"                + INVALID_TAG_DESC + VALID_TAG_FRIEND, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        // two invalid values, only first invalid value reported","lastModifiedDate":"2017-06-15"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + PHONE_DESC_BOB + EMAIL_DESC_BOB + INVALID_ADDRESS_DESC,","lastModifiedDate":"2017-12-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"                Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        // non-empty preamble","lastModifiedDate":"2017-12-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, PREAMBLE_NON_EMPTY + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":"                + ADDRESS_DESC_BOB + TAG_DESC_HUSBAND + TAG_DESC_FRIEND,","lastModifiedDate":"2017-12-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-12-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":142,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-15"}],"authorContributionMap":{"kanjitp":13,"-":129}},{"path":"src/test/java/seedu/address/logic/parser/AddressBookParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-06-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2017-05-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":8,"author":{"gitId":"kanjitp"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PARTICIPANT;","lastModifiedDate":"2021-09-28"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2017-06-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ClearCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":20,"author":{"gitId":"kanjitp"},"content":"import seedu.address.logic.commands.EditCommand.EditParticipantDescriptor;","lastModifiedDate":"2021-09-26"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ExitCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.HelpCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-05-24"},{"lineNumber":26,"author":{"gitId":"kanjitp"},"content":"import seedu.address.model.participant.NameContainsKeywordsPredicate;","lastModifiedDate":"2021-09-26"},{"lineNumber":27,"author":{"gitId":"kanjitp"},"content":"import seedu.address.model.participant.Participant;","lastModifiedDate":"2021-09-26"},{"lineNumber":28,"author":{"gitId":"kanjitp"},"content":"import seedu.address.testutil.EditParticipantDescriptorBuilder;","lastModifiedDate":"2021-09-26"},{"lineNumber":29,"author":{"gitId":"kanjitp"},"content":"import seedu.address.testutil.ParticipantBuilder;","lastModifiedDate":"2021-09-26"},{"lineNumber":30,"author":{"gitId":"kanjitp"},"content":"import seedu.address.testutil.ParticipantUtil;","lastModifiedDate":"2021-09-26"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"public class AddressBookParserTest {","lastModifiedDate":"2017-07-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private final AddressBookParser parser \u003d new AddressBookParser();","lastModifiedDate":"2017-07-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void parseCommand_add() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":38,"author":{"gitId":"kanjitp"},"content":"        Participant participant \u003d new ParticipantBuilder().build();","lastModifiedDate":"2021-09-28"},{"lineNumber":39,"author":{"gitId":"kanjitp"},"content":"        AddCommand command \u003d (AddCommand) parser.parseCommand(ParticipantUtil.getAddCommand(participant));","lastModifiedDate":"2021-09-28"},{"lineNumber":40,"author":{"gitId":"kanjitp"},"content":"        assertEquals(new AddCommand(participant).toString(), command.toString());","lastModifiedDate":"2021-09-28"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public void parseCommand_clear() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD) instanceof ClearCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD + \" 3\") instanceof ClearCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void parseCommand_delete() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        DeleteCommand command \u003d (DeleteCommand) parser.parseCommand(","lastModifiedDate":"2017-06-27"},{"lineNumber":52,"author":{"gitId":"kanjitp"},"content":"            DeleteCommand.COMMAND_WORD + \" \" + INDEX_FIRST_PARTICIPANT.getOneBased());","lastModifiedDate":"2021-09-28"},{"lineNumber":53,"author":{"gitId":"kanjitp"},"content":"        assertEquals(new DeleteCommand(INDEX_FIRST_PARTICIPANT), command);","lastModifiedDate":"2021-09-28"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void parseCommand_edit() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":58,"author":{"gitId":"kanjitp"},"content":"        Participant participant \u003d new ParticipantBuilder().build();","lastModifiedDate":"2021-09-28"},{"lineNumber":59,"author":{"gitId":"kanjitp"},"content":"        EditParticipantDescriptor descriptor \u003d new EditParticipantDescriptorBuilder(participant).build();","lastModifiedDate":"2021-09-28"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        EditCommand command \u003d (EditCommand) parser.parseCommand(EditCommand.COMMAND_WORD + \" \"","lastModifiedDate":"2017-06-27"},{"lineNumber":61,"author":{"gitId":"kanjitp"},"content":"                + INDEX_FIRST_PARTICIPANT.getOneBased() + \" \"","lastModifiedDate":"2021-09-28"},{"lineNumber":62,"author":{"gitId":"kanjitp"},"content":"                + ParticipantUtil.getEditParticipantDescriptorDetails(descriptor));","lastModifiedDate":"2021-09-28"},{"lineNumber":63,"author":{"gitId":"kanjitp"},"content":"        assertEquals(new EditCommand(INDEX_FIRST_PARTICIPANT, descriptor), command);","lastModifiedDate":"2021-09-28"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void parseCommand_exit() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD) instanceof ExitCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD + \" 3\") instanceof ExitCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public void parseCommand_find() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        List\u003cString\u003e keywords \u003d Arrays.asList(\"foo\", \"bar\", \"baz\");","lastModifiedDate":"2017-06-12"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        FindCommand command \u003d (FindCommand) parser.parseCommand(","lastModifiedDate":"2017-06-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"            FindCommand.COMMAND_WORD + \" \" + keywords.stream().collect(Collectors.joining(\" \")));","lastModifiedDate":"2017-06-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertEquals(new FindCommand(new NameContainsKeywordsPredicate(keywords)), command);","lastModifiedDate":"2017-06-12"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void parseCommand_help() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD) instanceof HelpCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD + \" 3\") instanceof HelpCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public void parseCommand_list() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD) instanceof ListCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD + \" 3\") instanceof ListCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    public void parseCommand_unrecognisedInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE), ()","lastModifiedDate":"2019-03-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            -\u003e parser.parseCommand(\"\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    public void parseCommand_unknownCommand_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, MESSAGE_UNKNOWN_COMMAND, () -\u003e parser.parseCommand(\"unknownCommand\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24"}],"authorContributionMap":{"kanjitp":17,"-":85}},{"path":"src/test/java/seedu/address/logic/parser/DeleteCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-06-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-06-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":6,"author":{"gitId":"kanjitp"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PARTICIPANT;","lastModifiedDate":"2021-09-28"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2017-06-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * As we are only doing white-box testing, our test cases do not cover path variations","lastModifiedDate":"2017-06-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * outside of the DeleteCommand code. For example, inputs \"1\" and \"1 abc\" take the","lastModifiedDate":"2017-06-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * same path through the DeleteCommand, and therefore we test only one of them.","lastModifiedDate":"2017-06-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * The path variation for those two cases occur inside the ParserUtil, and","lastModifiedDate":"2017-06-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * therefore should be covered by the ParserUtilTest.","lastModifiedDate":"2017-06-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class DeleteCommandParserTest {","lastModifiedDate":"2017-06-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private DeleteCommandParser parser \u003d new DeleteCommandParser();","lastModifiedDate":"2017-06-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void parse_validArgs_returnsDeleteCommand() {","lastModifiedDate":"2017-08-15"},{"lineNumber":25,"author":{"gitId":"kanjitp"},"content":"        assertParseSuccess(parser, \"1\", new DeleteCommand(INDEX_FIRST_PARTICIPANT));","lastModifiedDate":"2021-09-28"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":30,"author":{"gitId":"lowkangn"},"content":"        assertParseFailure(parser, \"a\", String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2021-10-03"},{"lineNumber":31,"author":{"gitId":"lowkangn"},"content":"                DeleteCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-09"}],"authorContributionMap":{"kanjitp":2,"-":29,"lowkangn":2}},{"path":"src/test/java/seedu/address/logic/parser/DoneEventCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"lowkangn"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-10-03"},{"lineNumber":2,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":3,"author":{"gitId":"lowkangn"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-03"},{"lineNumber":4,"author":{"gitId":"lowkangn"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2021-10-03"},{"lineNumber":5,"author":{"gitId":"lowkangn"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2021-10-03"},{"lineNumber":6,"author":{"gitId":"lowkangn"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_EVENT;","lastModifiedDate":"2021-10-03"},{"lineNumber":7,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":8,"author":{"gitId":"lowkangn"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-03"},{"lineNumber":9,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":10,"author":{"gitId":"lowkangn"},"content":"import seedu.address.logic.commands.DoneEventCommand;","lastModifiedDate":"2021-10-03"},{"lineNumber":11,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":12,"author":{"gitId":"lowkangn"},"content":"/**","lastModifiedDate":"2021-10-03"},{"lineNumber":13,"author":{"gitId":"lowkangn"},"content":" * As we are only doing white-box testing, our test cases do not cover path variations","lastModifiedDate":"2021-10-03"},{"lineNumber":14,"author":{"gitId":"lowkangn"},"content":" * outside of the DoneEventCommand code. For example, inputs \"1\" and \"1 abc\" take the","lastModifiedDate":"2021-10-03"},{"lineNumber":15,"author":{"gitId":"lowkangn"},"content":" * same path through the DoneEventCommand, and therefore we test only one of them.","lastModifiedDate":"2021-10-03"},{"lineNumber":16,"author":{"gitId":"lowkangn"},"content":" * The path variation for those two cases occur inside the ParserUtil, and","lastModifiedDate":"2021-10-03"},{"lineNumber":17,"author":{"gitId":"lowkangn"},"content":" * therefore should be covered by the ParserUtilTest.","lastModifiedDate":"2021-10-03"},{"lineNumber":18,"author":{"gitId":"lowkangn"},"content":" */","lastModifiedDate":"2021-10-03"},{"lineNumber":19,"author":{"gitId":"lowkangn"},"content":"class DoneEventCommandParserTest {","lastModifiedDate":"2021-10-03"},{"lineNumber":20,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":21,"author":{"gitId":"lowkangn"},"content":"    private DoneEventCommandParser parser \u003d new DoneEventCommandParser();","lastModifiedDate":"2021-10-03"},{"lineNumber":22,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":23,"author":{"gitId":"lowkangn"},"content":"    @Test","lastModifiedDate":"2021-10-03"},{"lineNumber":24,"author":{"gitId":"lowkangn"},"content":"    public void parse_validArgs_returnsDeleteCommand() {","lastModifiedDate":"2021-10-03"},{"lineNumber":25,"author":{"gitId":"lowkangn"},"content":"        assertParseSuccess(parser, \"1\", new DoneEventCommand(INDEX_FIRST_EVENT));","lastModifiedDate":"2021-10-03"},{"lineNumber":26,"author":{"gitId":"lowkangn"},"content":"    }","lastModifiedDate":"2021-10-03"},{"lineNumber":27,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":28,"author":{"gitId":"lowkangn"},"content":"    @Test","lastModifiedDate":"2021-10-03"},{"lineNumber":29,"author":{"gitId":"lowkangn"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2021-10-03"},{"lineNumber":30,"author":{"gitId":"lowkangn"},"content":"        assertParseFailure(parser, \"a\", String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2021-10-03"},{"lineNumber":31,"author":{"gitId":"lowkangn"},"content":"                DoneEventCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-03"},{"lineNumber":32,"author":{"gitId":"lowkangn"},"content":"    }","lastModifiedDate":"2021-10-03"},{"lineNumber":33,"author":{"gitId":"lowkangn"},"content":"}","lastModifiedDate":"2021-10-03"}],"authorContributionMap":{"lowkangn":33}},{"path":"src/test/java/seedu/address/logic/parser/EditCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-05-04"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_ADDRESS_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_EMAIL_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_PHONE_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_TAG_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-05-04"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":30,"author":{"gitId":"kanjitp"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PARTICIPANT;","lastModifiedDate":"2021-09-28"},{"lineNumber":31,"author":{"gitId":"kanjitp"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PARTICIPANT;","lastModifiedDate":"2021-09-28"},{"lineNumber":32,"author":{"gitId":"kanjitp"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_THIRD_PARTICIPANT;","lastModifiedDate":"2021-09-28"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":36,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-05-04"},{"lineNumber":38,"author":{"gitId":"kanjitp"},"content":"import seedu.address.logic.commands.EditCommand.EditParticipantDescriptor;","lastModifiedDate":"2021-09-26"},{"lineNumber":39,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-05-04"},{"lineNumber":40,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-05-04"},{"lineNumber":41,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-05-04"},{"lineNumber":42,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-05-04"},{"lineNumber":43,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-05-04"},{"lineNumber":44,"author":{"gitId":"kanjitp"},"content":"import seedu.address.testutil.EditParticipantDescriptorBuilder;","lastModifiedDate":"2021-09-26"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":46,"author":{"gitId":"-"},"content":"public class EditCommandParserTest {","lastModifiedDate":"2017-05-04"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    private static final String TAG_EMPTY \u003d \" \" + PREFIX_TAG;","lastModifiedDate":"2017-05-04"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    private static final String MESSAGE_INVALID_FORMAT \u003d","lastModifiedDate":"2017-05-04"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditCommand.MESSAGE_USAGE);","lastModifiedDate":"2017-05-04"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    private EditCommandParser parser \u003d new EditCommandParser();","lastModifiedDate":"2017-05-04"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void parse_missingParts_failure() {","lastModifiedDate":"2017-05-04"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        // no index specified","lastModifiedDate":"2017-05-04"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, VALID_NAME_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        // no field specified","lastModifiedDate":"2017-05-04"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\", EditCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2017-07-06"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        // no index and no field specified","lastModifiedDate":"2017-05-04"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public void parse_invalidPreamble_failure() {","lastModifiedDate":"2017-06-06"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        // negative index","lastModifiedDate":"2017-05-04"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"-5\" + NAME_DESC_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        // zero index","lastModifiedDate":"2017-06-06"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"0\" + NAME_DESC_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-06"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        // invalid arguments being parsed as preamble","lastModifiedDate":"2017-06-06"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1 some random string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-06"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        // invalid prefix being parsed as preamble","lastModifiedDate":"2017-06-06"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1 i/ string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2017-05-04"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_NAME_DESC, Name.MESSAGE_CONSTRAINTS); // invalid name","lastModifiedDate":"2018-09-22"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_PHONE_DESC, Phone.MESSAGE_CONSTRAINTS); // invalid phone","lastModifiedDate":"2018-09-22"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_EMAIL_DESC, Email.MESSAGE_CONSTRAINTS); // invalid email","lastModifiedDate":"2018-09-22"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_ADDRESS_DESC, Address.MESSAGE_CONSTRAINTS); // invalid address","lastModifiedDate":"2018-09-22"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_TAG_DESC, Tag.MESSAGE_CONSTRAINTS); // invalid tag","lastModifiedDate":"2018-09-22"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        // invalid phone followed by valid email","lastModifiedDate":"2017-05-04"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_PHONE_DESC + EMAIL_DESC_AMY, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        // valid phone followed by invalid phone. The test case for invalid phone followed by valid phone","lastModifiedDate":"2017-05-04"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        // is tested at {@code parse_invalidValueFollowedByValidValue_success()}","lastModifiedDate":"2017-05-04"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + PHONE_DESC_BOB + INVALID_PHONE_DESC, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        // while parsing {@code PREFIX_TAG} alone will reset the tags of the {@code Person} being edited,","lastModifiedDate":"2017-05-04"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        // parsing it together with a valid tag results in error","lastModifiedDate":"2017-05-04"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + TAG_DESC_FRIEND + TAG_DESC_HUSBAND + TAG_EMPTY, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + TAG_DESC_FRIEND + TAG_EMPTY + TAG_DESC_HUSBAND, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + TAG_EMPTY + TAG_DESC_FRIEND + TAG_DESC_HUSBAND, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        // multiple invalid values, but only the first invalid value is captured","lastModifiedDate":"2017-05-04"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_NAME_DESC + INVALID_EMAIL_DESC + VALID_ADDRESS_AMY + VALID_PHONE_AMY,","lastModifiedDate":"2017-07-06"},{"lineNumber":105,"author":{"gitId":"-"},"content":"                Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public void parse_allFieldsSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":110,"author":{"gitId":"kanjitp"},"content":"        Index targetIndex \u003d INDEX_SECOND_PARTICIPANT;","lastModifiedDate":"2021-09-28"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_BOB + TAG_DESC_HUSBAND","lastModifiedDate":"2017-06-06"},{"lineNumber":112,"author":{"gitId":"-"},"content":"                + EMAIL_DESC_AMY + ADDRESS_DESC_AMY + NAME_DESC_AMY + TAG_DESC_FRIEND;","lastModifiedDate":"2017-06-06"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":114,"author":{"gitId":"kanjitp"},"content":"        EditParticipantDescriptor descriptor \u003d new EditParticipantDescriptorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2021-09-26"},{"lineNumber":115,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY)","lastModifiedDate":"2017-05-04"},{"lineNumber":116,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    public void parse_someFieldsSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":124,"author":{"gitId":"kanjitp"},"content":"        Index targetIndex \u003d INDEX_FIRST_PARTICIPANT;","lastModifiedDate":"2021-09-28"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_BOB + EMAIL_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":127,"author":{"gitId":"kanjitp"},"content":"        EditParticipantDescriptor descriptor \u003d new EditParticipantDescriptorBuilder().withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2021-09-26"},{"lineNumber":128,"author":{"gitId":"-"},"content":"                .withEmail(VALID_EMAIL_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    public void parse_oneFieldSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        // name","lastModifiedDate":"2017-05-04"},{"lineNumber":137,"author":{"gitId":"kanjitp"},"content":"        Index targetIndex \u003d INDEX_THIRD_PARTICIPANT;","lastModifiedDate":"2021-09-28"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + NAME_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":139,"author":{"gitId":"kanjitp"},"content":"        EditParticipantDescriptor descriptor \u003d new EditParticipantDescriptorBuilder().withName(VALID_NAME_AMY).build();","lastModifiedDate":"2021-09-26"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        // phone","lastModifiedDate":"2017-05-04"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + PHONE_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":145,"author":{"gitId":"kanjitp"},"content":"        descriptor \u003d new EditParticipantDescriptorBuilder().withPhone(VALID_PHONE_AMY).build();","lastModifiedDate":"2021-09-26"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        // email","lastModifiedDate":"2017-05-04"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + EMAIL_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":151,"author":{"gitId":"kanjitp"},"content":"        descriptor \u003d new EditParticipantDescriptorBuilder().withEmail(VALID_EMAIL_AMY).build();","lastModifiedDate":"2021-09-26"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        // address","lastModifiedDate":"2017-05-04"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + ADDRESS_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":157,"author":{"gitId":"kanjitp"},"content":"        descriptor \u003d new EditParticipantDescriptorBuilder().withAddress(VALID_ADDRESS_AMY).build();","lastModifiedDate":"2021-09-26"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        // tags","lastModifiedDate":"2017-05-04"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + TAG_DESC_FRIEND;","lastModifiedDate":"2017-05-25"},{"lineNumber":163,"author":{"gitId":"kanjitp"},"content":"        descriptor \u003d new EditParticipantDescriptorBuilder().withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2021-09-26"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    public void parse_multipleRepeatedFields_acceptsLast() {","lastModifiedDate":"2017-08-15"},{"lineNumber":170,"author":{"gitId":"kanjitp"},"content":"        Index targetIndex \u003d INDEX_FIRST_PARTICIPANT;","lastModifiedDate":"2021-09-28"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_AMY + ADDRESS_DESC_AMY + EMAIL_DESC_AMY","lastModifiedDate":"2017-05-25"},{"lineNumber":172,"author":{"gitId":"-"},"content":"                + TAG_DESC_FRIEND + PHONE_DESC_AMY + ADDRESS_DESC_AMY + EMAIL_DESC_AMY + TAG_DESC_FRIEND","lastModifiedDate":"2017-05-25"},{"lineNumber":173,"author":{"gitId":"-"},"content":"                + PHONE_DESC_BOB + ADDRESS_DESC_BOB + EMAIL_DESC_BOB + TAG_DESC_HUSBAND;","lastModifiedDate":"2017-05-25"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":175,"author":{"gitId":"kanjitp"},"content":"        EditParticipantDescriptor descriptor \u003d new EditParticipantDescriptorBuilder().withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2021-09-26"},{"lineNumber":176,"author":{"gitId":"-"},"content":"                .withEmail(VALID_EMAIL_BOB).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_FRIEND, VALID_TAG_HUSBAND)","lastModifiedDate":"2017-05-04"},{"lineNumber":177,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2017-05-04"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":184,"author":{"gitId":"-"},"content":"    public void parse_invalidValueFollowedByValidValue_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        // no other valid values specified","lastModifiedDate":"2017-05-04"},{"lineNumber":186,"author":{"gitId":"kanjitp"},"content":"        Index targetIndex \u003d INDEX_FIRST_PARTICIPANT;","lastModifiedDate":"2021-09-28"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + INVALID_PHONE_DESC + PHONE_DESC_BOB;","lastModifiedDate":"2017-05-25"},{"lineNumber":188,"author":{"gitId":"kanjitp"},"content":"        EditParticipantDescriptor descriptor \u003d new EditParticipantDescriptorBuilder()","lastModifiedDate":"2021-09-26"},{"lineNumber":189,"author":{"gitId":"kanjitp"},"content":"            .withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2021-09-26"},{"lineNumber":190,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":193,"author":{"gitId":"-"},"content":"        // other valid values specified","lastModifiedDate":"2017-05-04"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + EMAIL_DESC_BOB + INVALID_PHONE_DESC + ADDRESS_DESC_BOB","lastModifiedDate":"2017-05-25"},{"lineNumber":195,"author":{"gitId":"-"},"content":"                + PHONE_DESC_BOB;","lastModifiedDate":"2017-05-25"},{"lineNumber":196,"author":{"gitId":"kanjitp"},"content":"        descriptor \u003d new EditParticipantDescriptorBuilder().withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB)","lastModifiedDate":"2021-09-26"},{"lineNumber":197,"author":{"gitId":"-"},"content":"                .withAddress(VALID_ADDRESS_BOB).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":198,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":199,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":200,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":201,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":202,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    public void parse_resetTags_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":204,"author":{"gitId":"kanjitp"},"content":"        Index targetIndex \u003d INDEX_THIRD_PARTICIPANT;","lastModifiedDate":"2021-09-28"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + TAG_EMPTY;","lastModifiedDate":"2017-05-25"},{"lineNumber":206,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":207,"author":{"gitId":"kanjitp"},"content":"        EditParticipantDescriptor descriptor \u003d new EditParticipantDescriptorBuilder().withTags().build();","lastModifiedDate":"2021-09-26"},{"lineNumber":208,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":210,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":212,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-04"}],"authorContributionMap":{"kanjitp":23,"-":189}},{"path":"src/test/java/seedu/address/logic/parser/FilterEventCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"XXJJXJ"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-09-22"},{"lineNumber":2,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":3,"author":{"gitId":"XXJJXJ"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-09-22"},{"lineNumber":4,"author":{"gitId":"XXJJXJ"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2021-09-22"},{"lineNumber":5,"author":{"gitId":"XXJJXJ"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2021-09-22"},{"lineNumber":6,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":7,"author":{"gitId":"XXJJXJ"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-09-22"},{"lineNumber":8,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":9,"author":{"gitId":"XXJJXJ"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-09-22"},{"lineNumber":10,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":11,"author":{"gitId":"XXJJXJ"},"content":"import seedu.address.logic.commands.FilterEventCommand;","lastModifiedDate":"2021-09-22"},{"lineNumber":12,"author":{"gitId":"XXJJXJ"},"content":"import seedu.address.model.event.EventDateTimePredicate;","lastModifiedDate":"2021-09-22"},{"lineNumber":13,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":14,"author":{"gitId":"XXJJXJ"},"content":"/**","lastModifiedDate":"2021-09-22"},{"lineNumber":15,"author":{"gitId":"XXJJXJ"},"content":" * Contains integration tests (interaction with the Model) for FilterEventCommandParser.","lastModifiedDate":"2021-09-22"},{"lineNumber":16,"author":{"gitId":"XXJJXJ"},"content":" */","lastModifiedDate":"2021-09-22"},{"lineNumber":17,"author":{"gitId":"XXJJXJ"},"content":"public class FilterEventCommandParserTest {","lastModifiedDate":"2021-09-22"},{"lineNumber":18,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":19,"author":{"gitId":"XXJJXJ"},"content":"    private FilterEventCommandParser parser \u003d new FilterEventCommandParser();","lastModifiedDate":"2021-09-22"},{"lineNumber":20,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":21,"author":{"gitId":"XXJJXJ"},"content":"    @Test","lastModifiedDate":"2021-09-22"},{"lineNumber":22,"author":{"gitId":"XXJJXJ"},"content":"    public void parse_emptyArg_throwsParseException() {","lastModifiedDate":"2021-09-22"},{"lineNumber":23,"author":{"gitId":"XXJJXJ"},"content":"        assertParseFailure(parser, \"     \",","lastModifiedDate":"2021-09-22"},{"lineNumber":24,"author":{"gitId":"XXJJXJ"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, FilterEventCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-09-22"},{"lineNumber":25,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":26,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":27,"author":{"gitId":"XXJJXJ"},"content":"    @Test","lastModifiedDate":"2021-09-22"},{"lineNumber":28,"author":{"gitId":"XXJJXJ"},"content":"    public void parse_invalidArgsOnlyTime_throwsParseException() {","lastModifiedDate":"2021-09-22"},{"lineNumber":29,"author":{"gitId":"XXJJXJ"},"content":"        assertParseFailure(parser, \"0900\",","lastModifiedDate":"2021-09-22"},{"lineNumber":30,"author":{"gitId":"XXJJXJ"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, FilterEventCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-09-22"},{"lineNumber":31,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":32,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":33,"author":{"gitId":"XXJJXJ"},"content":"    @Test","lastModifiedDate":"2021-09-22"},{"lineNumber":34,"author":{"gitId":"XXJJXJ"},"content":"    public void parse_validArgsOnlyDate_returnsFindCommand() {","lastModifiedDate":"2021-09-22"},{"lineNumber":35,"author":{"gitId":"XXJJXJ"},"content":"        // no leading and trailing whitespaces","lastModifiedDate":"2021-09-22"},{"lineNumber":36,"author":{"gitId":"XXJJXJ"},"content":"        FilterEventCommand expectedFilterEventCommand \u003d","lastModifiedDate":"2021-09-22"},{"lineNumber":37,"author":{"gitId":"XXJJXJ"},"content":"                new FilterEventCommand(new EventDateTimePredicate(Arrays.asList(\"2021-9-1\")));","lastModifiedDate":"2021-09-22"},{"lineNumber":38,"author":{"gitId":"XXJJXJ"},"content":"        assertParseSuccess(parser, \" d/2021-9-1\", expectedFilterEventCommand);","lastModifiedDate":"2021-09-27"},{"lineNumber":39,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":40,"author":{"gitId":"XXJJXJ"},"content":"        // multiple whitespaces","lastModifiedDate":"2021-09-27"},{"lineNumber":41,"author":{"gitId":"XXJJXJ"},"content":"        assertParseSuccess(parser, \"       d/2021-9-1      \", expectedFilterEventCommand);","lastModifiedDate":"2021-09-27"},{"lineNumber":42,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":43,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":44,"author":{"gitId":"XXJJXJ"},"content":"    @Test","lastModifiedDate":"2021-09-22"},{"lineNumber":45,"author":{"gitId":"XXJJXJ"},"content":"    public void parse_validArgsDateAndTime_returnsFindCommand() {","lastModifiedDate":"2021-09-22"},{"lineNumber":46,"author":{"gitId":"XXJJXJ"},"content":"        // no leading and trailing whitespaces","lastModifiedDate":"2021-09-22"},{"lineNumber":47,"author":{"gitId":"XXJJXJ"},"content":"        FilterEventCommand expectedFilterEventCommand \u003d","lastModifiedDate":"2021-09-22"},{"lineNumber":48,"author":{"gitId":"XXJJXJ"},"content":"                new FilterEventCommand(new EventDateTimePredicate(Arrays.asList(\"2021-9-1\", \"0900\")));","lastModifiedDate":"2021-09-22"},{"lineNumber":49,"author":{"gitId":"XXJJXJ"},"content":"        assertParseSuccess(parser, \" d/2021-9-1 t/0900\", expectedFilterEventCommand);","lastModifiedDate":"2021-09-27"},{"lineNumber":50,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":51,"author":{"gitId":"XXJJXJ"},"content":"        // only leading and trailing whitespaces (multiple spaces in between)","lastModifiedDate":"2021-09-27"},{"lineNumber":52,"author":{"gitId":"XXJJXJ"},"content":"        assertParseSuccess(parser, \"   \\n \\t    d/2021-9-1  \\t \\n  t/0900 \\n  \", expectedFilterEventCommand);","lastModifiedDate":"2021-09-27"},{"lineNumber":53,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":54,"author":{"gitId":"XXJJXJ"},"content":"}","lastModifiedDate":"2021-09-22"}],"authorContributionMap":{"XXJJXJ":54}},{"path":"src/test/java/seedu/address/logic/parser/FindCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-06-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-06-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":12,"author":{"gitId":"kanjitp"},"content":"import seedu.address.model.participant.NameContainsKeywordsPredicate;","lastModifiedDate":"2021-09-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class FindCommandParserTest {","lastModifiedDate":"2017-06-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private FindCommandParser parser \u003d new FindCommandParser();","lastModifiedDate":"2017-06-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public void parse_emptyArg_throwsParseException() {","lastModifiedDate":"2017-06-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"     \", String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-07-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void parse_validArgs_returnsFindCommand() {","lastModifiedDate":"2017-08-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        // no leading and trailing whitespaces","lastModifiedDate":"2017-06-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        FindCommand expectedFindCommand \u003d","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"                new FindCommand(new NameContainsKeywordsPredicate(Arrays.asList(\"Alice\", \"Bob\")));","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, \"Alice Bob\", expectedFindCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        // multiple whitespaces between keywords","lastModifiedDate":"2017-06-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, \" \\n Alice \\n \\t Bob  \\t\", expectedFindCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-27"}],"authorContributionMap":{"kanjitp":1,"-":33}},{"path":"src/test/java/seedu/address/logic/parser/ParserUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.ParserUtil.MESSAGE_INVALID_INDEX;","lastModifiedDate":"2017-06-02"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":7,"author":{"gitId":"kanjitp"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PARTICIPANT;","lastModifiedDate":"2021-09-28"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-05-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-05-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-05-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-07-10"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-05-22"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-05-22"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-05-22"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-05-22"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-05-22"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":23,"author":{"gitId":"-"},"content":"public class ParserUtilTest {","lastModifiedDate":"2017-05-22"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2017-05-22"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static final String INVALID_PHONE \u003d \"+651234\";","lastModifiedDate":"2017-05-22"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String INVALID_ADDRESS \u003d \" \";","lastModifiedDate":"2017-05-22"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private static final String INVALID_EMAIL \u003d \"example.com\";","lastModifiedDate":"2017-05-22"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final String INVALID_TAG \u003d \"#friend\";","lastModifiedDate":"2017-05-22"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private static final String VALID_NAME \u003d \"Rachel Walker\";","lastModifiedDate":"2017-05-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final String VALID_PHONE \u003d \"123456\";","lastModifiedDate":"2017-05-22"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private static final String VALID_ADDRESS \u003d \"123 Main Street #0505\";","lastModifiedDate":"2017-05-22"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private static final String VALID_EMAIL \u003d \"rachel@example.com\";","lastModifiedDate":"2017-05-22"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private static final String VALID_TAG_1 \u003d \"friend\";","lastModifiedDate":"2017-05-22"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private static final String VALID_TAG_2 \u003d \"neighbour\";","lastModifiedDate":"2017-05-22"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private static final String WHITESPACE \u003d \" \\t\\r\\n\";","lastModifiedDate":"2017-05-29"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public void parseIndex_invalidInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseIndex(\"10 a\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void parseIndex_outOfRangeInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, MESSAGE_INVALID_INDEX, ()","lastModifiedDate":"2019-03-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            -\u003e ParserUtil.parseIndex(Long.toString(Integer.MAX_VALUE + 1)));","lastModifiedDate":"2019-03-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void parseIndex_validInput_success() throws Exception {","lastModifiedDate":"2017-05-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        // No whitespaces","lastModifiedDate":"2017-05-26"},{"lineNumber":53,"author":{"gitId":"kanjitp"},"content":"        assertEquals(INDEX_FIRST_PARTICIPANT, ParserUtil.parseIndex(\"1\"));","lastModifiedDate":"2021-09-28"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // Leading and trailing whitespaces","lastModifiedDate":"2017-05-26"},{"lineNumber":56,"author":{"gitId":"kanjitp"},"content":"        assertEquals(INDEX_FIRST_PARTICIPANT, ParserUtil.parseIndex(\"  1  \"));","lastModifiedDate":"2021-09-28"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void parseName_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseName((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void parseName_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseName(INVALID_NAME));","lastModifiedDate":"2019-03-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public void parseName_validValueWithoutWhitespace_returnsName() throws Exception {","lastModifiedDate":"2017-05-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        Name expectedName \u003d new Name(VALID_NAME);","lastModifiedDate":"2017-05-22"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertEquals(expectedName, ParserUtil.parseName(VALID_NAME));","lastModifiedDate":"2017-05-29"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-29"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public void parseName_validValueWithWhitespace_returnsTrimmedName() throws Exception {","lastModifiedDate":"2017-05-29"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        String nameWithWhitespace \u003d WHITESPACE + VALID_NAME + WHITESPACE;","lastModifiedDate":"2017-05-29"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        Name expectedName \u003d new Name(VALID_NAME);","lastModifiedDate":"2017-05-29"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertEquals(expectedName, ParserUtil.parseName(nameWithWhitespace));","lastModifiedDate":"2017-05-29"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void parsePhone_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parsePhone((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public void parsePhone_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parsePhone(INVALID_PHONE));","lastModifiedDate":"2019-03-14"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    public void parsePhone_validValueWithoutWhitespace_returnsPhone() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        Phone expectedPhone \u003d new Phone(VALID_PHONE);","lastModifiedDate":"2017-05-22"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertEquals(expectedPhone, ParserUtil.parsePhone(VALID_PHONE));","lastModifiedDate":"2017-05-30"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    public void parsePhone_validValueWithWhitespace_returnsTrimmedPhone() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        String phoneWithWhitespace \u003d WHITESPACE + VALID_PHONE + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        Phone expectedPhone \u003d new Phone(VALID_PHONE);","lastModifiedDate":"2017-05-30"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        assertEquals(expectedPhone, ParserUtil.parsePhone(phoneWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    public void parseAddress_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseAddress((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    public void parseAddress_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseAddress(INVALID_ADDRESS));","lastModifiedDate":"2019-03-14"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    public void parseAddress_validValueWithoutWhitespace_returnsAddress() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        Address expectedAddress \u003d new Address(VALID_ADDRESS);","lastModifiedDate":"2017-05-22"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddress, ParserUtil.parseAddress(VALID_ADDRESS));","lastModifiedDate":"2017-05-30"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    public void parseAddress_validValueWithWhitespace_returnsTrimmedAddress() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        String addressWithWhitespace \u003d WHITESPACE + VALID_ADDRESS + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        Address expectedAddress \u003d new Address(VALID_ADDRESS);","lastModifiedDate":"2017-05-30"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddress, ParserUtil.parseAddress(addressWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    public void parseEmail_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseEmail((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    public void parseEmail_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseEmail(INVALID_EMAIL));","lastModifiedDate":"2019-03-14"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    public void parseEmail_validValueWithoutWhitespace_returnsEmail() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        Email expectedEmail \u003d new Email(VALID_EMAIL);","lastModifiedDate":"2017-05-22"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        assertEquals(expectedEmail, ParserUtil.parseEmail(VALID_EMAIL));","lastModifiedDate":"2017-05-30"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    public void parseEmail_validValueWithWhitespace_returnsTrimmedEmail() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        String emailWithWhitespace \u003d WHITESPACE + VALID_EMAIL + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        Email expectedEmail \u003d new Email(VALID_EMAIL);","lastModifiedDate":"2017-05-30"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        assertEquals(expectedEmail, ParserUtil.parseEmail(emailWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    public void parseTag_null_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseTag(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    public void parseTag_invalidValue_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseTag(INVALID_TAG));","lastModifiedDate":"2019-03-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    public void parseTag_validValueWithoutWhitespace_returnsTag() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        Tag expectedTag \u003d new Tag(VALID_TAG_1);","lastModifiedDate":"2017-05-30"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        assertEquals(expectedTag, ParserUtil.parseTag(VALID_TAG_1));","lastModifiedDate":"2017-05-30"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    public void parseTag_validValueWithWhitespace_returnsTrimmedTag() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        String tagWithWhitespace \u003d WHITESPACE + VALID_TAG_1 + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        Tag expectedTag \u003d new Tag(VALID_TAG_1);","lastModifiedDate":"2017-05-30"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        assertEquals(expectedTag, ParserUtil.parseTag(tagWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    public void parseTags_null_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseTags(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    public void parseTags_collectionWithInvalidTags_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseTags(Arrays.asList(VALID_TAG_1, INVALID_TAG)));","lastModifiedDate":"2019-03-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":184,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    public void parseTags_emptyCollection_returnsEmptySet() throws Exception {","lastModifiedDate":"2017-05-22"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        assertTrue(ParserUtil.parseTags(Collections.emptyList()).isEmpty());","lastModifiedDate":"2017-05-22"},{"lineNumber":187,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":189,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":190,"author":{"gitId":"-"},"content":"    public void parseTags_collectionWithValidTags_returnsTagSet() throws Exception {","lastModifiedDate":"2017-05-22"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e actualTagSet \u003d ParserUtil.parseTags(Arrays.asList(VALID_TAG_1, VALID_TAG_2));","lastModifiedDate":"2017-05-22"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e expectedTagSet \u003d new HashSet\u003cTag\u003e(Arrays.asList(new Tag(VALID_TAG_1), new Tag(VALID_TAG_2)));","lastModifiedDate":"2017-05-22"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        assertEquals(expectedTagSet, actualTagSet);","lastModifiedDate":"2017-05-22"},{"lineNumber":195,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":196,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-22"}],"authorContributionMap":{"kanjitp":3,"-":193}},{"path":"src/test/java/seedu/address/logic/parser/ShowEventDetailsCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ntwbruce"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-09-29"},{"lineNumber":2,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":3,"author":{"gitId":"ntwbruce"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-09-29"},{"lineNumber":4,"author":{"gitId":"ntwbruce"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2021-09-29"},{"lineNumber":5,"author":{"gitId":"ntwbruce"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2021-09-29"},{"lineNumber":6,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":7,"author":{"gitId":"ntwbruce"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-09-29"},{"lineNumber":8,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":9,"author":{"gitId":"lowkangn"},"content":"import seedu.address.logic.commands.ShowEventDetailsCommand;","lastModifiedDate":"2021-10-03"},{"lineNumber":10,"author":{"gitId":"ntwbruce"},"content":"import seedu.address.model.event.EventNamePredicate;","lastModifiedDate":"2021-09-29"},{"lineNumber":11,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":12,"author":{"gitId":"lowkangn"},"content":"public class ShowEventDetailsCommandParserTest {","lastModifiedDate":"2021-10-03"},{"lineNumber":13,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":14,"author":{"gitId":"lowkangn"},"content":"    private final ShowEventDetailsCommandParser parser \u003d new ShowEventDetailsCommandParser();","lastModifiedDate":"2021-10-03"},{"lineNumber":15,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":16,"author":{"gitId":"ntwbruce"},"content":"    @Test","lastModifiedDate":"2021-09-29"},{"lineNumber":17,"author":{"gitId":"ntwbruce"},"content":"    public void parse_emptyArg_throwsParseException() {","lastModifiedDate":"2021-09-29"},{"lineNumber":18,"author":{"gitId":"ntwbruce"},"content":"        assertParseFailure(parser, \"     \",","lastModifiedDate":"2021-09-29"},{"lineNumber":19,"author":{"gitId":"lowkangn"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, ShowEventDetailsCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-03"},{"lineNumber":20,"author":{"gitId":"ntwbruce"},"content":"    }","lastModifiedDate":"2021-09-29"},{"lineNumber":21,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":22,"author":{"gitId":"ntwbruce"},"content":"    @Test","lastModifiedDate":"2021-09-29"},{"lineNumber":23,"author":{"gitId":"ntwbruce"},"content":"    public void parse_validArgs_returnsShowDetailsCommand() {","lastModifiedDate":"2021-09-29"},{"lineNumber":24,"author":{"gitId":"ntwbruce"},"content":"        // exact event name","lastModifiedDate":"2021-09-29"},{"lineNumber":25,"author":{"gitId":"lowkangn"},"content":"        ShowEventDetailsCommand expectedShowEventDetailsCommand \u003d","lastModifiedDate":"2021-10-03"},{"lineNumber":26,"author":{"gitId":"lowkangn"},"content":"                new ShowEventDetailsCommand(new EventNamePredicate(\"240Km Marathon\"));","lastModifiedDate":"2021-10-03"},{"lineNumber":27,"author":{"gitId":"lowkangn"},"content":"        assertParseSuccess(parser, \"240Km Marathon\", expectedShowEventDetailsCommand);","lastModifiedDate":"2021-10-03"},{"lineNumber":28,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":29,"author":{"gitId":"ntwbruce"},"content":"        // event name with extra whitespaces and newlines","lastModifiedDate":"2021-09-29"},{"lineNumber":30,"author":{"gitId":"lowkangn"},"content":"        assertParseSuccess(parser, \" \\n 240Km \\n \\t Marathon  \\t\", expectedShowEventDetailsCommand);","lastModifiedDate":"2021-10-03"},{"lineNumber":31,"author":{"gitId":"ntwbruce"},"content":"    }","lastModifiedDate":"2021-09-29"},{"lineNumber":32,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":33,"author":{"gitId":"ntwbruce"},"content":"}","lastModifiedDate":"2021-09-29"}],"authorContributionMap":{"ntwbruce":25,"lowkangn":8}},{"path":"src/test/java/seedu/address/model/AddressBookTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-12-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2018-04-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":9,"author":{"gitId":"XXJJXJ"},"content":"import static seedu.address.testutil.TypicalEvents.SAMPLE_EVENT;","lastModifiedDate":"2021-09-19"},{"lineNumber":10,"author":{"gitId":"kanjitp"},"content":"import static seedu.address.testutil.TypicalParticipants.ALEX;","lastModifiedDate":"2021-09-26"},{"lineNumber":11,"author":{"gitId":"kanjitp"},"content":"import static seedu.address.testutil.TypicalParticipants.getTypicalAddressBook;","lastModifiedDate":"2021-09-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2016-12-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2016-12-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2016-12-24"},{"lineNumber":16,"author":{"gitId":"XXJJXJ"},"content":"import java.util.Comparator;","lastModifiedDate":"2021-09-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2016-12-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-12-24"},{"lineNumber":23,"author":{"gitId":"XXJJXJ"},"content":"import seedu.address.model.event.Event;","lastModifiedDate":"2021-09-18"},{"lineNumber":24,"author":{"gitId":"XXJJXJ"},"content":"import seedu.address.model.event.exceptions.DuplicateEventException;","lastModifiedDate":"2021-09-18"},{"lineNumber":25,"author":{"gitId":"kanjitp"},"content":"import seedu.address.model.participant.Participant;","lastModifiedDate":"2021-09-26"},{"lineNumber":26,"author":{"gitId":"kanjitp"},"content":"import seedu.address.model.participant.exceptions.DuplicateParticipantException;","lastModifiedDate":"2021-09-28"},{"lineNumber":27,"author":{"gitId":"kanjitp"},"content":"import seedu.address.testutil.ParticipantBuilder;","lastModifiedDate":"2021-09-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"public class AddressBookTest {","lastModifiedDate":"2016-12-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private final AddressBook addressBook \u003d new AddressBook();","lastModifiedDate":"2016-12-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public void constructor() {","lastModifiedDate":"2016-12-24"},{"lineNumber":35,"author":{"gitId":"kanjitp"},"content":"        assertEquals(Collections.emptyList(), addressBook.getParticipantList());","lastModifiedDate":"2021-09-26"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public void resetData_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e addressBook.resetData(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public void resetData_withValidReadOnlyAddressBook_replacesData() {","lastModifiedDate":"2016-12-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        AddressBook newData \u003d getTypicalAddressBook();","lastModifiedDate":"2017-07-19"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        addressBook.resetData(newData);","lastModifiedDate":"2016-12-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertEquals(newData, addressBook);","lastModifiedDate":"2016-12-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void resetData_withDuplicatePersons_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-07"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        // Two persons with the same identity fields","lastModifiedDate":"2018-04-19"},{"lineNumber":53,"author":{"gitId":"kanjitp"},"content":"        Participant editedAlex \u003d new ParticipantBuilder(ALEX).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2021-09-26"},{"lineNumber":54,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-04-19"},{"lineNumber":55,"author":{"gitId":"kanjitp"},"content":"        List\u003cParticipant\u003e newParticipants \u003d Arrays.asList(ALEX, editedAlex);","lastModifiedDate":"2021-09-26"},{"lineNumber":56,"author":{"gitId":"kanjitp"},"content":"        AddressBookStub newData \u003d new AddressBookStub(newParticipants);","lastModifiedDate":"2021-09-26"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":58,"author":{"gitId":"kanjitp"},"content":"        assertThrows(DuplicateParticipantException.class, () -\u003e addressBook.resetData(newData));","lastModifiedDate":"2021-09-28"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public void hasPerson_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-06"},{"lineNumber":63,"author":{"gitId":"kanjitp"},"content":"        assertThrows(NullPointerException.class, () -\u003e addressBook.hasParticipant(null));","lastModifiedDate":"2021-09-26"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void hasPerson_personNotInAddressBook_returnsFalse() {","lastModifiedDate":"2018-08-06"},{"lineNumber":68,"author":{"gitId":"kanjitp"},"content":"        assertFalse(addressBook.hasParticipant(ALEX));","lastModifiedDate":"2021-09-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public void hasPerson_personInAddressBook_returnsTrue() {","lastModifiedDate":"2018-08-07"},{"lineNumber":73,"author":{"gitId":"kanjitp"},"content":"        addressBook.addParticipant(ALEX);","lastModifiedDate":"2021-09-26"},{"lineNumber":74,"author":{"gitId":"kanjitp"},"content":"        assertTrue(addressBook.hasParticipant(ALEX));","lastModifiedDate":"2021-09-26"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public void hasPerson_personWithSameIdentityFieldsInAddressBook_returnsTrue() {","lastModifiedDate":"2018-08-07"},{"lineNumber":79,"author":{"gitId":"kanjitp"},"content":"        addressBook.addParticipant(ALEX);","lastModifiedDate":"2021-09-26"},{"lineNumber":80,"author":{"gitId":"kanjitp"},"content":"        Participant editedAlex \u003d new ParticipantBuilder(ALEX).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2021-09-26"},{"lineNumber":81,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-08-06"},{"lineNumber":82,"author":{"gitId":"kanjitp"},"content":"        assertTrue(addressBook.hasParticipant(editedAlex));","lastModifiedDate":"2021-09-26"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void getPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":87,"author":{"gitId":"kanjitp"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e addressBook.getParticipantList().remove(0));","lastModifiedDate":"2021-09-26"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":90,"author":{"gitId":"XXJJXJ"},"content":"    @Test","lastModifiedDate":"2021-09-18"},{"lineNumber":91,"author":{"gitId":"XXJJXJ"},"content":"    public void hasEvent_nullEvent_throwsNullPointerException() {","lastModifiedDate":"2021-09-18"},{"lineNumber":92,"author":{"gitId":"XXJJXJ"},"content":"        assertThrows(NullPointerException.class, () -\u003e addressBook.hasEvent(null));","lastModifiedDate":"2021-09-18"},{"lineNumber":93,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":94,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":95,"author":{"gitId":"XXJJXJ"},"content":"    @Test","lastModifiedDate":"2021-09-18"},{"lineNumber":96,"author":{"gitId":"XXJJXJ"},"content":"    public void hasEvent_eventNotInAddressBook_returnFalse() {","lastModifiedDate":"2021-09-18"},{"lineNumber":97,"author":{"gitId":"XXJJXJ"},"content":"        assertFalse(addressBook.hasEvent(SAMPLE_EVENT));","lastModifiedDate":"2021-09-19"},{"lineNumber":98,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":99,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":100,"author":{"gitId":"XXJJXJ"},"content":"    @Test","lastModifiedDate":"2021-09-18"},{"lineNumber":101,"author":{"gitId":"XXJJXJ"},"content":"    public void hasEvent_eventInAddressBook_returnsTrue() {","lastModifiedDate":"2021-09-18"},{"lineNumber":102,"author":{"gitId":"XXJJXJ"},"content":"        addressBook.addEvent(SAMPLE_EVENT);","lastModifiedDate":"2021-09-19"},{"lineNumber":103,"author":{"gitId":"XXJJXJ"},"content":"        assertTrue(addressBook.hasEvent(SAMPLE_EVENT));","lastModifiedDate":"2021-09-19"},{"lineNumber":104,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":105,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":106,"author":{"gitId":"XXJJXJ"},"content":"    @Test","lastModifiedDate":"2021-09-18"},{"lineNumber":107,"author":{"gitId":"XXJJXJ"},"content":"    public void getEventList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2021-09-18"},{"lineNumber":108,"author":{"gitId":"XXJJXJ"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e addressBook.getEventList().remove(0));","lastModifiedDate":"2021-09-18"},{"lineNumber":109,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":110,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":111,"author":{"gitId":"XXJJXJ"},"content":"    @Test","lastModifiedDate":"2021-09-18"},{"lineNumber":112,"author":{"gitId":"XXJJXJ"},"content":"    public void removeEvent_eventInAddressBook_returnFalse() {","lastModifiedDate":"2021-09-18"},{"lineNumber":113,"author":{"gitId":"XXJJXJ"},"content":"        addressBook.addEvent(SAMPLE_EVENT);","lastModifiedDate":"2021-09-19"},{"lineNumber":114,"author":{"gitId":"XXJJXJ"},"content":"        assertTrue(addressBook.getEventList().contains(SAMPLE_EVENT));","lastModifiedDate":"2021-09-19"},{"lineNumber":115,"author":{"gitId":"XXJJXJ"},"content":"        addressBook.removeEvent(SAMPLE_EVENT);","lastModifiedDate":"2021-09-19"},{"lineNumber":116,"author":{"gitId":"XXJJXJ"},"content":"        assertFalse(addressBook.hasEvent(SAMPLE_EVENT));","lastModifiedDate":"2021-09-19"},{"lineNumber":117,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":118,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":119,"author":{"gitId":"lowkangn"},"content":"    @Test","lastModifiedDate":"2021-10-03"},{"lineNumber":120,"author":{"gitId":"lowkangn"},"content":"    public void markEventAsDone_eventInAddressBook_isMarkedAsDone() {","lastModifiedDate":"2021-10-03"},{"lineNumber":121,"author":{"gitId":"lowkangn"},"content":"        addressBook.addEvent(SAMPLE_EVENT);","lastModifiedDate":"2021-10-03"},{"lineNumber":122,"author":{"gitId":"lowkangn"},"content":"        assertTrue(addressBook.getEventList().contains(SAMPLE_EVENT));","lastModifiedDate":"2021-10-03"},{"lineNumber":123,"author":{"gitId":"lowkangn"},"content":"        addressBook.markEventAsDone(SAMPLE_EVENT);","lastModifiedDate":"2021-10-03"},{"lineNumber":124,"author":{"gitId":"lowkangn"},"content":"        assertTrue(addressBook.hasEvent(SAMPLE_EVENT.markAsDone()));","lastModifiedDate":"2021-10-03"},{"lineNumber":125,"author":{"gitId":"lowkangn"},"content":"        assertTrue(SAMPLE_EVENT.markAsDone().getIsDone());","lastModifiedDate":"2021-10-03"},{"lineNumber":126,"author":{"gitId":"lowkangn"},"content":"    }","lastModifiedDate":"2021-10-03"},{"lineNumber":127,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":128,"author":{"gitId":"XXJJXJ"},"content":"    @Test","lastModifiedDate":"2021-09-18"},{"lineNumber":129,"author":{"gitId":"XXJJXJ"},"content":"    public void addEvent_eventNotInAddressBook_returnTrue() {","lastModifiedDate":"2021-09-18"},{"lineNumber":130,"author":{"gitId":"XXJJXJ"},"content":"        addressBook.addEvent(SAMPLE_EVENT);","lastModifiedDate":"2021-09-19"},{"lineNumber":131,"author":{"gitId":"XXJJXJ"},"content":"        assertTrue(addressBook.hasEvent(SAMPLE_EVENT));","lastModifiedDate":"2021-09-19"},{"lineNumber":132,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":133,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":134,"author":{"gitId":"XXJJXJ"},"content":"    @Test","lastModifiedDate":"2021-09-18"},{"lineNumber":135,"author":{"gitId":"XXJJXJ"},"content":"    public void addEvent_eventInAddressBook_throwsDuplicateEventException() {","lastModifiedDate":"2021-09-18"},{"lineNumber":136,"author":{"gitId":"XXJJXJ"},"content":"        addressBook.addEvent(SAMPLE_EVENT);","lastModifiedDate":"2021-09-19"},{"lineNumber":137,"author":{"gitId":"XXJJXJ"},"content":"        assertThrows(DuplicateEventException.class, () -\u003e addressBook.addEvent(SAMPLE_EVENT));","lastModifiedDate":"2021-09-19"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-24"},{"lineNumber":141,"author":{"gitId":"kanjitp"},"content":"     * A stub ReadOnlyAddressBook whose participants list can violate interface constraints.","lastModifiedDate":"2021-09-29"},{"lineNumber":142,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-24"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    private static class AddressBookStub implements ReadOnlyAddressBook {","lastModifiedDate":"2016-12-24"},{"lineNumber":144,"author":{"gitId":"kanjitp"},"content":"        private final ObservableList\u003cParticipant\u003e participants \u003d FXCollections.observableArrayList();","lastModifiedDate":"2021-09-28"},{"lineNumber":145,"author":{"gitId":"XXJJXJ"},"content":"        private final ObservableList\u003cEvent\u003e events \u003d FXCollections.observableArrayList();","lastModifiedDate":"2021-09-18"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":147,"author":{"gitId":"kanjitp"},"content":"        AddressBookStub(Collection\u003cParticipant\u003e participants) {","lastModifiedDate":"2021-09-26"},{"lineNumber":148,"author":{"gitId":"kanjitp"},"content":"            this.participants.setAll(participants);","lastModifiedDate":"2021-09-28"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-12-24"},{"lineNumber":152,"author":{"gitId":"kanjitp"},"content":"        public ObservableList\u003cParticipant\u003e getParticipantList() {","lastModifiedDate":"2021-09-26"},{"lineNumber":153,"author":{"gitId":"kanjitp"},"content":"            return participants;","lastModifiedDate":"2021-09-28"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":155,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":156,"author":{"gitId":"XXJJXJ"},"content":"        @Override","lastModifiedDate":"2021-09-18"},{"lineNumber":157,"author":{"gitId":"XXJJXJ"},"content":"        public ObservableList\u003cEvent\u003e getEventList() {","lastModifiedDate":"2021-09-18"},{"lineNumber":158,"author":{"gitId":"XXJJXJ"},"content":"            return events;","lastModifiedDate":"2021-09-18"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-09-18"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2021-09-23"},{"lineNumber":162,"author":{"gitId":"XXJJXJ"},"content":"        public void sortEvents() {","lastModifiedDate":"2021-09-23"},{"lineNumber":163,"author":{"gitId":"XXJJXJ"},"content":"            events.sort(Comparator.naturalOrder());","lastModifiedDate":"2021-09-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-09-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":167,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-24"}],"authorContributionMap":{"XXJJXJ":50,"kanjitp":24,"-":84,"lowkangn":9}},{"path":"src/test/java/seedu/address/model/ModelManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2017-05-31"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"kanjitp"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PARTICIPANTS;","lastModifiedDate":"2021-09-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":8,"author":{"gitId":"kanjitp"},"content":"import static seedu.address.testutil.TypicalParticipants.ALEX;","lastModifiedDate":"2021-09-26"},{"lineNumber":9,"author":{"gitId":"kanjitp"},"content":"import static seedu.address.testutil.TypicalParticipants.BERNICE;","lastModifiedDate":"2021-09-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-31"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":18,"author":{"gitId":"kanjitp"},"content":"import seedu.address.model.participant.NameContainsKeywordsPredicate;","lastModifiedDate":"2021-09-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.testutil.AddressBookBuilder;","lastModifiedDate":"2017-05-31"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class ModelManagerTest {","lastModifiedDate":"2017-05-31"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private ModelManager modelManager \u003d new ModelManager();","lastModifiedDate":"2018-08-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public void constructor() {","lastModifiedDate":"2018-11-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertEquals(new UserPrefs(), modelManager.getUserPrefs());","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertEquals(new GuiSettings(), modelManager.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertEquals(new AddressBook(), new AddressBook(modelManager.getAddressBook()));","lastModifiedDate":"2018-11-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public void setUserPrefs_nullUserPrefs_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setUserPrefs(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public void setUserPrefs_validUserPrefs_copiesUserPrefs() {","lastModifiedDate":"2018-12-06"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(Paths.get(\"address/book/file/path\"));","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(new GuiSettings(1, 2, 3, 4));","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        modelManager.setUserPrefs(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertEquals(userPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        // Modifying userPrefs should not modify modelManager\u0027s userPrefs","lastModifiedDate":"2018-12-06"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        UserPrefs oldUserPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(Paths.get(\"new/address/book/file/path\"));","lastModifiedDate":"2018-12-06"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertEquals(oldUserPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2018-12-06"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public void setGuiSettings_nullGuiSettings_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setGuiSettings(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void setGuiSettings_validGuiSettings_setsGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(1, 2, 3, 4);","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        modelManager.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertEquals(guiSettings, modelManager.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath_nullPath_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setAddressBookFilePath(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath_validPath_setsAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        Path path \u003d Paths.get(\"address/book/file/path\");","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        modelManager.setAddressBookFilePath(path);","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertEquals(path, modelManager.getAddressBookFilePath());","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public void hasPerson_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-06"},{"lineNumber":77,"author":{"gitId":"kanjitp"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.hasParticipant(null));","lastModifiedDate":"2021-09-26"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void hasPerson_personNotInAddressBook_returnsFalse() {","lastModifiedDate":"2018-08-06"},{"lineNumber":82,"author":{"gitId":"kanjitp"},"content":"        assertFalse(modelManager.hasParticipant(ALEX));","lastModifiedDate":"2021-09-26"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void hasPerson_personInAddressBook_returnsTrue() {","lastModifiedDate":"2018-08-07"},{"lineNumber":87,"author":{"gitId":"kanjitp"},"content":"        modelManager.addParticipant(ALEX);","lastModifiedDate":"2021-09-26"},{"lineNumber":88,"author":{"gitId":"kanjitp"},"content":"        assertTrue(modelManager.hasParticipant(ALEX));","lastModifiedDate":"2021-09-26"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public void getFilteredPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":93,"author":{"gitId":"kanjitp"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e modelManager.getFilteredParticipantList().remove(0));","lastModifiedDate":"2021-09-26"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":96,"author":{"gitId":"XXJJXJ"},"content":"    @Test","lastModifiedDate":"2021-09-18"},{"lineNumber":97,"author":{"gitId":"XXJJXJ"},"content":"    public void getEventList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2021-09-18"},{"lineNumber":98,"author":{"gitId":"XXJJXJ"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e modelManager.getFilteredEventList().remove(0));","lastModifiedDate":"2021-09-21"},{"lineNumber":99,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":100,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":101,"author":{"gitId":"XXJJXJ"},"content":"    // TODO: Implement hasEvent tests after adding addEvent and removeEvent features.","lastModifiedDate":"2021-09-18"},{"lineNumber":102,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-31"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":105,"author":{"gitId":"kanjitp"},"content":"        AddressBook addressBook \u003d new AddressBookBuilder().withParticipant(ALEX).withParticipant(BERNICE).build();","lastModifiedDate":"2021-09-26"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        AddressBook differentAddressBook \u003d new AddressBook();","lastModifiedDate":"2017-05-31"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-05-31"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-31"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        modelManager \u003d new ModelManager(addressBook, userPrefs);","lastModifiedDate":"2018-08-06"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        ModelManager modelManagerCopy \u003d new ModelManager(addressBook, userPrefs);","lastModifiedDate":"2017-05-31"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.equals(modelManagerCopy));","lastModifiedDate":"2017-05-31"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-31"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.equals(modelManager));","lastModifiedDate":"2017-05-31"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(null));","lastModifiedDate":"2017-05-31"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(5));","lastModifiedDate":"2017-05-31"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        // different addressBook -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(new ModelManager(differentAddressBook, userPrefs)));","lastModifiedDate":"2017-05-31"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        // different filteredList -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":127,"author":{"gitId":"ntwbruce"},"content":"        String[] keywords \u003d ALEX.getFullName().split(\"\\\\s+\");","lastModifiedDate":"2021-10-03"},{"lineNumber":128,"author":{"gitId":"kanjitp"},"content":"        modelManager.updateFilteredParticipantList(new NameContainsKeywordsPredicate(Arrays.asList(keywords)));","lastModifiedDate":"2021-09-26"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(new ModelManager(addressBook, userPrefs)));","lastModifiedDate":"2017-05-31"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        // resets modelManager to initial state for upcoming tests","lastModifiedDate":"2017-08-05"},{"lineNumber":132,"author":{"gitId":"kanjitp"},"content":"        modelManager.updateFilteredParticipantList(PREDICATE_SHOW_ALL_PARTICIPANTS);","lastModifiedDate":"2021-09-26"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        // different userPrefs -\u003e returns false","lastModifiedDate":"2018-11-27"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        UserPrefs differentUserPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-05-31"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        differentUserPrefs.setAddressBookFilePath(Paths.get(\"differentFilePath\"));","lastModifiedDate":"2018-08-09"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(new ModelManager(addressBook, differentUserPrefs)));","lastModifiedDate":"2018-11-27"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":139,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-31"}],"authorContributionMap":{"XXJJXJ":7,"kanjitp":12,"ntwbruce":1,"-":119}},{"path":"src/test/java/seedu/address/model/event/EventDateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"XXJJXJ"},"content":"package seedu.address.model.event;","lastModifiedDate":"2021-09-18"},{"lineNumber":2,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":3,"author":{"gitId":"XXJJXJ"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-09-18"},{"lineNumber":4,"author":{"gitId":"XXJJXJ"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-09-18"},{"lineNumber":5,"author":{"gitId":"XXJJXJ"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2021-09-18"},{"lineNumber":6,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":7,"author":{"gitId":"XXJJXJ"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-09-18"},{"lineNumber":8,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":9,"author":{"gitId":"XXJJXJ"},"content":"public class EventDateTest {","lastModifiedDate":"2021-09-18"},{"lineNumber":10,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":11,"author":{"gitId":"XXJJXJ"},"content":"    @Test","lastModifiedDate":"2021-09-18"},{"lineNumber":12,"author":{"gitId":"XXJJXJ"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2021-09-18"},{"lineNumber":13,"author":{"gitId":"XXJJXJ"},"content":"        assertThrows(NullPointerException.class, () -\u003e new EventDate(null));","lastModifiedDate":"2021-09-18"},{"lineNumber":14,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":15,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":16,"author":{"gitId":"XXJJXJ"},"content":"    @Test","lastModifiedDate":"2021-09-18"},{"lineNumber":17,"author":{"gitId":"XXJJXJ"},"content":"    public void constructor_invalidName_throwsIllegalArgumentException() {","lastModifiedDate":"2021-09-18"},{"lineNumber":18,"author":{"gitId":"XXJJXJ"},"content":"        String invalidDate \u003d \"\";","lastModifiedDate":"2021-09-18"},{"lineNumber":19,"author":{"gitId":"XXJJXJ"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new EventDate(invalidDate));","lastModifiedDate":"2021-09-18"},{"lineNumber":20,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":21,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":22,"author":{"gitId":"XXJJXJ"},"content":"    @Test","lastModifiedDate":"2021-09-18"},{"lineNumber":23,"author":{"gitId":"XXJJXJ"},"content":"    public void isValidDate() {","lastModifiedDate":"2021-09-18"},{"lineNumber":24,"author":{"gitId":"XXJJXJ"},"content":"        // null date","lastModifiedDate":"2021-09-18"},{"lineNumber":25,"author":{"gitId":"XXJJXJ"},"content":"        assertThrows(NullPointerException.class, () -\u003e EventDate.isValidDate(null));","lastModifiedDate":"2021-09-18"},{"lineNumber":26,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":27,"author":{"gitId":"XXJJXJ"},"content":"        // invalid dates","lastModifiedDate":"2021-09-18"},{"lineNumber":28,"author":{"gitId":"XXJJXJ"},"content":"        assertFalse(EventDate.isValidDate(\"\")); // empty string","lastModifiedDate":"2021-09-18"},{"lineNumber":29,"author":{"gitId":"XXJJXJ"},"content":"        assertFalse(EventDate.isValidDate(\"123\")); // wrong format","lastModifiedDate":"2021-09-18"},{"lineNumber":30,"author":{"gitId":"XXJJXJ"},"content":"        assertFalse(EventDate.isValidDate(\"123-10\")); // wrong format","lastModifiedDate":"2021-09-20"},{"lineNumber":31,"author":{"gitId":"XXJJXJ"},"content":"        assertFalse(EventDate.isValidDate(\"2021 August 20\")); // wrong format","lastModifiedDate":"2021-09-18"},{"lineNumber":32,"author":{"gitId":"XXJJXJ"},"content":"        assertFalse(EventDate.isValidDate(\"123-1-32\")); // invalid day","lastModifiedDate":"2021-09-20"},{"lineNumber":33,"author":{"gitId":"XXJJXJ"},"content":"        assertFalse(EventDate.isValidDate(\"0-13-1\")); // invalid month","lastModifiedDate":"2021-09-20"},{"lineNumber":34,"author":{"gitId":"XXJJXJ"},"content":"        assertFalse(EventDate.isValidDate(\"0-1-1\")); // invalid year","lastModifiedDate":"2021-09-20"},{"lineNumber":35,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":36,"author":{"gitId":"XXJJXJ"},"content":"        // valid dates","lastModifiedDate":"2021-09-18"},{"lineNumber":37,"author":{"gitId":"XXJJXJ"},"content":"        assertTrue(EventDate.isValidDate(\"2021-08-31\"));","lastModifiedDate":"2021-09-20"},{"lineNumber":38,"author":{"gitId":"XXJJXJ"},"content":"        assertTrue(EventDate.isValidDate(\"2021-9-1\"));","lastModifiedDate":"2021-09-20"},{"lineNumber":39,"author":{"gitId":"XXJJXJ"},"content":"        assertTrue(EventDate.isValidDate(\"0001-9-1\"));","lastModifiedDate":"2021-09-20"},{"lineNumber":40,"author":{"gitId":"XXJJXJ"},"content":"        assertTrue(EventDate.isValidDate(\"1-9-1\"));","lastModifiedDate":"2021-09-20"},{"lineNumber":41,"author":{"gitId":"XXJJXJ"},"content":"        assertTrue(EventDate.isValidDate(\"21-9-1\"));","lastModifiedDate":"2021-09-20"},{"lineNumber":42,"author":{"gitId":"XXJJXJ"},"content":"        assertTrue(EventDate.isValidDate(\"121-9-1\"));","lastModifiedDate":"2021-09-20"},{"lineNumber":43,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":44,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":45,"author":{"gitId":"XXJJXJ"},"content":"}","lastModifiedDate":"2021-09-18"}],"authorContributionMap":{"XXJJXJ":45}},{"path":"src/test/java/seedu/address/model/event/EventNameTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"XXJJXJ"},"content":"package seedu.address.model.event;","lastModifiedDate":"2021-09-18"},{"lineNumber":2,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":3,"author":{"gitId":"XXJJXJ"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-09-18"},{"lineNumber":4,"author":{"gitId":"XXJJXJ"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-09-18"},{"lineNumber":5,"author":{"gitId":"XXJJXJ"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2021-09-18"},{"lineNumber":6,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":7,"author":{"gitId":"XXJJXJ"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-09-18"},{"lineNumber":8,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":9,"author":{"gitId":"XXJJXJ"},"content":"public class EventNameTest {","lastModifiedDate":"2021-09-18"},{"lineNumber":10,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":11,"author":{"gitId":"XXJJXJ"},"content":"    @Test","lastModifiedDate":"2021-09-18"},{"lineNumber":12,"author":{"gitId":"XXJJXJ"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2021-09-18"},{"lineNumber":13,"author":{"gitId":"XXJJXJ"},"content":"        assertThrows(NullPointerException.class, () -\u003e new EventName(null));","lastModifiedDate":"2021-09-18"},{"lineNumber":14,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":15,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":16,"author":{"gitId":"XXJJXJ"},"content":"    @Test","lastModifiedDate":"2021-09-18"},{"lineNumber":17,"author":{"gitId":"XXJJXJ"},"content":"    public void constructor_invalidName_throwsIllegalArgumentException() {","lastModifiedDate":"2021-09-18"},{"lineNumber":18,"author":{"gitId":"XXJJXJ"},"content":"        String invalidName \u003d \"\";","lastModifiedDate":"2021-09-18"},{"lineNumber":19,"author":{"gitId":"XXJJXJ"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new EventName(invalidName));","lastModifiedDate":"2021-09-18"},{"lineNumber":20,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":21,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":22,"author":{"gitId":"XXJJXJ"},"content":"    @Test","lastModifiedDate":"2021-09-18"},{"lineNumber":23,"author":{"gitId":"XXJJXJ"},"content":"    public void isValidEventName() {","lastModifiedDate":"2021-09-18"},{"lineNumber":24,"author":{"gitId":"XXJJXJ"},"content":"        // null name","lastModifiedDate":"2021-09-18"},{"lineNumber":25,"author":{"gitId":"XXJJXJ"},"content":"        assertThrows(NullPointerException.class, () -\u003e EventName.isValidEventName(null));","lastModifiedDate":"2021-09-18"},{"lineNumber":26,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":27,"author":{"gitId":"XXJJXJ"},"content":"        // invalid name","lastModifiedDate":"2021-09-18"},{"lineNumber":28,"author":{"gitId":"XXJJXJ"},"content":"        assertFalse(EventName.isValidEventName(\"\")); // empty string","lastModifiedDate":"2021-09-18"},{"lineNumber":29,"author":{"gitId":"XXJJXJ"},"content":"        assertFalse(EventName.isValidEventName(\" \")); // spaces only","lastModifiedDate":"2021-09-18"},{"lineNumber":30,"author":{"gitId":"XXJJXJ"},"content":"        assertFalse(EventName.isValidEventName(\"^\")); // only non-alphanumeric characters","lastModifiedDate":"2021-09-18"},{"lineNumber":31,"author":{"gitId":"XXJJXJ"},"content":"        assertFalse(EventName.isValidEventName(\"sleep*\")); // contains non-alphanumeric characters","lastModifiedDate":"2021-09-18"},{"lineNumber":32,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":33,"author":{"gitId":"XXJJXJ"},"content":"        // valid name","lastModifiedDate":"2021-09-18"},{"lineNumber":34,"author":{"gitId":"XXJJXJ"},"content":"        assertTrue(EventName.isValidEventName(\"sleep and wake up\")); // alphabets only","lastModifiedDate":"2021-09-18"},{"lineNumber":35,"author":{"gitId":"XXJJXJ"},"content":"        assertTrue(EventName.isValidEventName(\"12345\")); // numbers only","lastModifiedDate":"2021-09-18"},{"lineNumber":36,"author":{"gitId":"XXJJXJ"},"content":"        assertTrue(EventName.isValidEventName(\"2nd time sleeping\")); // alphanumeric characters","lastModifiedDate":"2021-09-18"},{"lineNumber":37,"author":{"gitId":"XXJJXJ"},"content":"        assertTrue(EventName.isValidEventName(\"gO hOmE aH bOi\")); // with capital letters","lastModifiedDate":"2021-09-18"},{"lineNumber":38,"author":{"gitId":"XXJJXJ"},"content":"        // long names","lastModifiedDate":"2021-09-18"},{"lineNumber":39,"author":{"gitId":"XXJJXJ"},"content":"        assertTrue(EventName.isValidEventName(\"Run for Charity sponsored by NUS CS2103T AY2122S1 T10 group 2\"));","lastModifiedDate":"2021-09-18"},{"lineNumber":40,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":41,"author":{"gitId":"XXJJXJ"},"content":"}","lastModifiedDate":"2021-09-18"}],"authorContributionMap":{"XXJJXJ":41}},{"path":"src/test/java/seedu/address/model/event/EventTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"XXJJXJ"},"content":"package seedu.address.model.event;","lastModifiedDate":"2021-09-18"},{"lineNumber":2,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":3,"author":{"gitId":"XXJJXJ"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-09-18"},{"lineNumber":4,"author":{"gitId":"XXJJXJ"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-09-18"},{"lineNumber":5,"author":{"gitId":"XXJJXJ"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-09-18"},{"lineNumber":6,"author":{"gitId":"XXJJXJ"},"content":"import static seedu.address.testutil.TypicalEvents.ANOTHER_EVENT;","lastModifiedDate":"2021-09-19"},{"lineNumber":7,"author":{"gitId":"XXJJXJ"},"content":"import static seedu.address.testutil.TypicalEvents.SAMPLE_EVENT;","lastModifiedDate":"2021-09-19"},{"lineNumber":8,"author":{"gitId":"XXJJXJ"},"content":"import static seedu.address.testutil.TypicalEvents.SAMPLE_EVENT_COPY_DIFFERENT_TIME;","lastModifiedDate":"2021-09-19"},{"lineNumber":9,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":10,"author":{"gitId":"XXJJXJ"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-09-18"},{"lineNumber":11,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":12,"author":{"gitId":"XXJJXJ"},"content":"public class EventTest {","lastModifiedDate":"2021-09-18"},{"lineNumber":13,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":14,"author":{"gitId":"XXJJXJ"},"content":"    @Test","lastModifiedDate":"2021-09-18"},{"lineNumber":15,"author":{"gitId":"XXJJXJ"},"content":"    public void getParticipants() {","lastModifiedDate":"2021-09-18"},{"lineNumber":16,"author":{"gitId":"XXJJXJ"},"content":"        // TODO: Modify and update as we can add participants into events","lastModifiedDate":"2021-09-18"},{"lineNumber":17,"author":{"gitId":"XXJJXJ"},"content":"        assertEquals(SAMPLE_EVENT.getParticipants().size(), 0);","lastModifiedDate":"2021-09-19"},{"lineNumber":18,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":19,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":20,"author":{"gitId":"XXJJXJ"},"content":"    @Test","lastModifiedDate":"2021-09-18"},{"lineNumber":21,"author":{"gitId":"XXJJXJ"},"content":"    public void markAsDone() {","lastModifiedDate":"2021-09-18"},{"lineNumber":22,"author":{"gitId":"XXJJXJ"},"content":"        assertFalse(SAMPLE_EVENT.getIsDone());","lastModifiedDate":"2021-09-19"},{"lineNumber":23,"author":{"gitId":"lowkangn"},"content":"        Event doneEvent \u003d SAMPLE_EVENT.markAsDone();","lastModifiedDate":"2021-10-03"},{"lineNumber":24,"author":{"gitId":"lowkangn"},"content":"        assertTrue(doneEvent.getIsDone());","lastModifiedDate":"2021-10-03"},{"lineNumber":25,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":26,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":27,"author":{"gitId":"XXJJXJ"},"content":"    @Test","lastModifiedDate":"2021-09-18"},{"lineNumber":28,"author":{"gitId":"XXJJXJ"},"content":"    public void isSameEvent() {","lastModifiedDate":"2021-09-18"},{"lineNumber":29,"author":{"gitId":"XXJJXJ"},"content":"        // same name","lastModifiedDate":"2021-09-18"},{"lineNumber":30,"author":{"gitId":"XXJJXJ"},"content":"        assertTrue(SAMPLE_EVENT.isSameEvent(SAMPLE_EVENT_COPY_DIFFERENT_TIME));","lastModifiedDate":"2021-09-19"},{"lineNumber":31,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":32,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":33,"author":{"gitId":"XXJJXJ"},"content":"    @Test","lastModifiedDate":"2021-09-18"},{"lineNumber":34,"author":{"gitId":"XXJJXJ"},"content":"    void testEquals() {","lastModifiedDate":"2021-09-18"},{"lineNumber":35,"author":{"gitId":"XXJJXJ"},"content":"        // same name but different other fields","lastModifiedDate":"2021-09-18"},{"lineNumber":36,"author":{"gitId":"XXJJXJ"},"content":"        assertFalse(SAMPLE_EVENT.equals(ANOTHER_EVENT));","lastModifiedDate":"2021-09-19"},{"lineNumber":37,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":38,"author":{"gitId":"XXJJXJ"},"content":"        // same Event","lastModifiedDate":"2021-09-18"},{"lineNumber":39,"author":{"gitId":"XXJJXJ"},"content":"        assertTrue(SAMPLE_EVENT.equals(SAMPLE_EVENT));","lastModifiedDate":"2021-09-19"},{"lineNumber":40,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":41,"author":{"gitId":"XXJJXJ"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-09-18"},{"lineNumber":42,"author":{"gitId":"XXJJXJ"},"content":"        assertFalse(SAMPLE_EVENT.equals(null));","lastModifiedDate":"2021-09-19"},{"lineNumber":43,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":44,"author":{"gitId":"XXJJXJ"},"content":"        // TODO: If implementing edit Event, can add more testcases.","lastModifiedDate":"2021-09-18"},{"lineNumber":45,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":46,"author":{"gitId":"XXJJXJ"},"content":"}","lastModifiedDate":"2021-09-18"}],"authorContributionMap":{"XXJJXJ":44,"lowkangn":2}},{"path":"src/test/java/seedu/address/model/event/EventTimeTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"XXJJXJ"},"content":"package seedu.address.model.event;","lastModifiedDate":"2021-09-18"},{"lineNumber":2,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":3,"author":{"gitId":"XXJJXJ"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-09-18"},{"lineNumber":4,"author":{"gitId":"XXJJXJ"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-09-18"},{"lineNumber":5,"author":{"gitId":"XXJJXJ"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2021-09-18"},{"lineNumber":6,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":7,"author":{"gitId":"XXJJXJ"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-09-18"},{"lineNumber":8,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":9,"author":{"gitId":"XXJJXJ"},"content":"public class EventTimeTest {","lastModifiedDate":"2021-09-18"},{"lineNumber":10,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":11,"author":{"gitId":"XXJJXJ"},"content":"    @Test","lastModifiedDate":"2021-09-18"},{"lineNumber":12,"author":{"gitId":"XXJJXJ"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2021-09-18"},{"lineNumber":13,"author":{"gitId":"XXJJXJ"},"content":"        assertThrows(NullPointerException.class, () -\u003e new EventTime(null));","lastModifiedDate":"2021-09-18"},{"lineNumber":14,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":15,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":16,"author":{"gitId":"XXJJXJ"},"content":"    @Test","lastModifiedDate":"2021-09-18"},{"lineNumber":17,"author":{"gitId":"XXJJXJ"},"content":"    public void constructor_invalidName_throwsIllegalArgumentException() {","lastModifiedDate":"2021-09-18"},{"lineNumber":18,"author":{"gitId":"XXJJXJ"},"content":"        String invalidTime \u003d \"\";","lastModifiedDate":"2021-09-18"},{"lineNumber":19,"author":{"gitId":"XXJJXJ"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new EventTime(invalidTime));","lastModifiedDate":"2021-09-18"},{"lineNumber":20,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":21,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":22,"author":{"gitId":"XXJJXJ"},"content":"    @Test","lastModifiedDate":"2021-09-18"},{"lineNumber":23,"author":{"gitId":"XXJJXJ"},"content":"    public void isValidTime() {","lastModifiedDate":"2021-09-18"},{"lineNumber":24,"author":{"gitId":"XXJJXJ"},"content":"        // null time","lastModifiedDate":"2021-09-18"},{"lineNumber":25,"author":{"gitId":"XXJJXJ"},"content":"        assertThrows(NullPointerException.class, () -\u003e EventTime.isValidTime(null));","lastModifiedDate":"2021-09-18"},{"lineNumber":26,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":27,"author":{"gitId":"XXJJXJ"},"content":"        // invalid time","lastModifiedDate":"2021-09-18"},{"lineNumber":28,"author":{"gitId":"XXJJXJ"},"content":"        assertFalse(EventTime.isValidTime(\"\")); // empty string","lastModifiedDate":"2021-09-18"},{"lineNumber":29,"author":{"gitId":"XXJJXJ"},"content":"        assertFalse(EventTime.isValidTime(\"9\")); // wrong format","lastModifiedDate":"2021-09-20"},{"lineNumber":30,"author":{"gitId":"XXJJXJ"},"content":"        assertFalse(EventTime.isValidTime(\"90\")); // wrong format","lastModifiedDate":"2021-09-20"},{"lineNumber":31,"author":{"gitId":"XXJJXJ"},"content":"        assertFalse(EventTime.isValidTime(\"123\")); // wrong format","lastModifiedDate":"2021-09-25"},{"lineNumber":32,"author":{"gitId":"XXJJXJ"},"content":"        assertFalse(EventTime.isValidTime(\"8pm\")); // wrong format","lastModifiedDate":"2021-09-18"},{"lineNumber":33,"author":{"gitId":"XXJJXJ"},"content":"        assertFalse(EventTime.isValidTime(\"00:00\")); // wrong format","lastModifiedDate":"2021-09-18"},{"lineNumber":34,"author":{"gitId":"XXJJXJ"},"content":"        assertFalse(EventTime.isValidTime(\"2500\")); // no such time","lastModifiedDate":"2021-09-20"},{"lineNumber":35,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":36,"author":{"gitId":"XXJJXJ"},"content":"        // valid time","lastModifiedDate":"2021-09-18"},{"lineNumber":37,"author":{"gitId":"XXJJXJ"},"content":"        assertTrue(EventTime.isValidTime(\"0000\"));","lastModifiedDate":"2021-09-18"},{"lineNumber":38,"author":{"gitId":"XXJJXJ"},"content":"        assertTrue(EventTime.isValidTime(\"2359\"));","lastModifiedDate":"2021-09-18"},{"lineNumber":39,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":40,"author":{"gitId":"XXJJXJ"},"content":"}","lastModifiedDate":"2021-09-18"}],"authorContributionMap":{"XXJJXJ":40}},{"path":"src/test/java/seedu/address/model/event/UniqueEventListTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"XXJJXJ"},"content":"package seedu.address.model.event;","lastModifiedDate":"2021-09-18"},{"lineNumber":2,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":3,"author":{"gitId":"XXJJXJ"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-09-18"},{"lineNumber":4,"author":{"gitId":"XXJJXJ"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-09-18"},{"lineNumber":5,"author":{"gitId":"XXJJXJ"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-09-18"},{"lineNumber":6,"author":{"gitId":"XXJJXJ"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2021-09-18"},{"lineNumber":7,"author":{"gitId":"XXJJXJ"},"content":"import static seedu.address.testutil.TypicalEvents.ANOTHER_EVENT;","lastModifiedDate":"2021-09-19"},{"lineNumber":8,"author":{"gitId":"XXJJXJ"},"content":"import static seedu.address.testutil.TypicalEvents.SAMPLE_EVENT;","lastModifiedDate":"2021-09-19"},{"lineNumber":9,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":10,"author":{"gitId":"XXJJXJ"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-09-18"},{"lineNumber":11,"author":{"gitId":"XXJJXJ"},"content":"import java.util.Collections;","lastModifiedDate":"2021-09-18"},{"lineNumber":12,"author":{"gitId":"XXJJXJ"},"content":"import java.util.List;","lastModifiedDate":"2021-09-18"},{"lineNumber":13,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":14,"author":{"gitId":"XXJJXJ"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-09-18"},{"lineNumber":15,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":16,"author":{"gitId":"XXJJXJ"},"content":"import seedu.address.model.event.exceptions.DuplicateEventException;","lastModifiedDate":"2021-09-18"},{"lineNumber":17,"author":{"gitId":"XXJJXJ"},"content":"import seedu.address.model.event.exceptions.EventNotFoundException;","lastModifiedDate":"2021-09-18"},{"lineNumber":18,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":19,"author":{"gitId":"XXJJXJ"},"content":"class UniqueEventListTest {","lastModifiedDate":"2021-09-18"},{"lineNumber":20,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":21,"author":{"gitId":"XXJJXJ"},"content":"    private final UniqueEventList uniqueEventList \u003d new UniqueEventList();","lastModifiedDate":"2021-09-18"},{"lineNumber":22,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":23,"author":{"gitId":"XXJJXJ"},"content":"    @Test","lastModifiedDate":"2021-09-18"},{"lineNumber":24,"author":{"gitId":"XXJJXJ"},"content":"    public void contains_nullEvent_throwsNullPointerException() {","lastModifiedDate":"2021-09-18"},{"lineNumber":25,"author":{"gitId":"XXJJXJ"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueEventList.contains(null));","lastModifiedDate":"2021-09-18"},{"lineNumber":26,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":27,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":28,"author":{"gitId":"XXJJXJ"},"content":"    @Test","lastModifiedDate":"2021-09-18"},{"lineNumber":29,"author":{"gitId":"XXJJXJ"},"content":"    public void contains_eventNotInList_returnsFalse() {","lastModifiedDate":"2021-09-18"},{"lineNumber":30,"author":{"gitId":"XXJJXJ"},"content":"        assertFalse(uniqueEventList.contains(SAMPLE_EVENT));","lastModifiedDate":"2021-09-19"},{"lineNumber":31,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":32,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":33,"author":{"gitId":"XXJJXJ"},"content":"    @Test","lastModifiedDate":"2021-09-18"},{"lineNumber":34,"author":{"gitId":"XXJJXJ"},"content":"    public void contains_eventInList_returnsTrue() {","lastModifiedDate":"2021-09-18"},{"lineNumber":35,"author":{"gitId":"XXJJXJ"},"content":"        uniqueEventList.add(SAMPLE_EVENT);","lastModifiedDate":"2021-09-19"},{"lineNumber":36,"author":{"gitId":"XXJJXJ"},"content":"        assertTrue(uniqueEventList.contains(SAMPLE_EVENT));","lastModifiedDate":"2021-09-19"},{"lineNumber":37,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":38,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":39,"author":{"gitId":"XXJJXJ"},"content":"    @Test","lastModifiedDate":"2021-09-18"},{"lineNumber":40,"author":{"gitId":"XXJJXJ"},"content":"    public void add_nullEvent_throwsNullPointerException() {","lastModifiedDate":"2021-09-18"},{"lineNumber":41,"author":{"gitId":"XXJJXJ"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueEventList.add(null));","lastModifiedDate":"2021-09-18"},{"lineNumber":42,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":43,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":44,"author":{"gitId":"XXJJXJ"},"content":"    @Test","lastModifiedDate":"2021-09-18"},{"lineNumber":45,"author":{"gitId":"XXJJXJ"},"content":"    public void add_duplicateEvent_throwsDuplicateEventException() {","lastModifiedDate":"2021-09-18"},{"lineNumber":46,"author":{"gitId":"XXJJXJ"},"content":"        uniqueEventList.add(SAMPLE_EVENT);","lastModifiedDate":"2021-09-19"},{"lineNumber":47,"author":{"gitId":"XXJJXJ"},"content":"        assertThrows(DuplicateEventException.class, () -\u003e uniqueEventList.add(SAMPLE_EVENT));","lastModifiedDate":"2021-09-19"},{"lineNumber":48,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":49,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":50,"author":{"gitId":"XXJJXJ"},"content":"    @Test","lastModifiedDate":"2021-09-18"},{"lineNumber":51,"author":{"gitId":"XXJJXJ"},"content":"    public void remove_nullEvent_throwsNullPointerException() {","lastModifiedDate":"2021-09-18"},{"lineNumber":52,"author":{"gitId":"XXJJXJ"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueEventList.remove(null));","lastModifiedDate":"2021-09-18"},{"lineNumber":53,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":54,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":55,"author":{"gitId":"XXJJXJ"},"content":"    @Test","lastModifiedDate":"2021-09-18"},{"lineNumber":56,"author":{"gitId":"XXJJXJ"},"content":"    public void remove_eventDoesNotExist_throwsEventNotFoundException() {","lastModifiedDate":"2021-09-18"},{"lineNumber":57,"author":{"gitId":"XXJJXJ"},"content":"        assertThrows(EventNotFoundException.class, () -\u003e uniqueEventList.remove(ANOTHER_EVENT));","lastModifiedDate":"2021-09-19"},{"lineNumber":58,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":59,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":60,"author":{"gitId":"XXJJXJ"},"content":"    @Test","lastModifiedDate":"2021-09-18"},{"lineNumber":61,"author":{"gitId":"XXJJXJ"},"content":"    public void remove_existingEvent_removesEvent() {","lastModifiedDate":"2021-09-18"},{"lineNumber":62,"author":{"gitId":"XXJJXJ"},"content":"        uniqueEventList.add(SAMPLE_EVENT);","lastModifiedDate":"2021-09-19"},{"lineNumber":63,"author":{"gitId":"XXJJXJ"},"content":"        uniqueEventList.remove(SAMPLE_EVENT);","lastModifiedDate":"2021-09-19"},{"lineNumber":64,"author":{"gitId":"XXJJXJ"},"content":"        UniqueEventList expectedUniqueEventList \u003d new UniqueEventList();","lastModifiedDate":"2021-09-18"},{"lineNumber":65,"author":{"gitId":"XXJJXJ"},"content":"        assertEquals(expectedUniqueEventList, uniqueEventList);","lastModifiedDate":"2021-09-18"},{"lineNumber":66,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":67,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":68,"author":{"gitId":"XXJJXJ"},"content":"    @Test","lastModifiedDate":"2021-09-18"},{"lineNumber":69,"author":{"gitId":"lowkangn"},"content":"    public void setEvent_nullTargetEvent_throwsNullPointerException() {","lastModifiedDate":"2021-10-03"},{"lineNumber":70,"author":{"gitId":"lowkangn"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueEventList.setEvent(null, SAMPLE_EVENT));","lastModifiedDate":"2021-10-03"},{"lineNumber":71,"author":{"gitId":"lowkangn"},"content":"    }","lastModifiedDate":"2021-10-03"},{"lineNumber":72,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":73,"author":{"gitId":"lowkangn"},"content":"    @Test","lastModifiedDate":"2021-10-03"},{"lineNumber":74,"author":{"gitId":"lowkangn"},"content":"    public void setEvent_nullEditedEvent_throwsNullPointerException() {","lastModifiedDate":"2021-10-03"},{"lineNumber":75,"author":{"gitId":"lowkangn"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueEventList.setEvent(SAMPLE_EVENT, null));","lastModifiedDate":"2021-10-03"},{"lineNumber":76,"author":{"gitId":"lowkangn"},"content":"    }","lastModifiedDate":"2021-10-03"},{"lineNumber":77,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":78,"author":{"gitId":"lowkangn"},"content":"    @Test","lastModifiedDate":"2021-10-03"},{"lineNumber":79,"author":{"gitId":"lowkangn"},"content":"    public void setEvent_targetEventNotInList_throwsEventNotFoundException() {","lastModifiedDate":"2021-10-03"},{"lineNumber":80,"author":{"gitId":"lowkangn"},"content":"        assertThrows(EventNotFoundException.class, () -\u003e uniqueEventList.setEvent(SAMPLE_EVENT, ANOTHER_EVENT));","lastModifiedDate":"2021-10-03"},{"lineNumber":81,"author":{"gitId":"lowkangn"},"content":"    }","lastModifiedDate":"2021-10-03"},{"lineNumber":82,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":83,"author":{"gitId":"lowkangn"},"content":"    @Test","lastModifiedDate":"2021-10-03"},{"lineNumber":84,"author":{"gitId":"lowkangn"},"content":"    public void setEvent_listContainsEditedEvent_throwsDuplicateEventException() {","lastModifiedDate":"2021-10-03"},{"lineNumber":85,"author":{"gitId":"lowkangn"},"content":"        uniqueEventList.add(SAMPLE_EVENT);","lastModifiedDate":"2021-10-03"},{"lineNumber":86,"author":{"gitId":"lowkangn"},"content":"        uniqueEventList.add(ANOTHER_EVENT);","lastModifiedDate":"2021-10-03"},{"lineNumber":87,"author":{"gitId":"lowkangn"},"content":"        assertThrows(DuplicateEventException.class, () -\u003e uniqueEventList.setEvent(ANOTHER_EVENT, SAMPLE_EVENT));","lastModifiedDate":"2021-10-03"},{"lineNumber":88,"author":{"gitId":"lowkangn"},"content":"    }","lastModifiedDate":"2021-10-03"},{"lineNumber":89,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":90,"author":{"gitId":"lowkangn"},"content":"    @Test","lastModifiedDate":"2021-10-03"},{"lineNumber":91,"author":{"gitId":"lowkangn"},"content":"    public void setEvent_existingEvent_replacesEvent() {","lastModifiedDate":"2021-10-03"},{"lineNumber":92,"author":{"gitId":"lowkangn"},"content":"        uniqueEventList.add(SAMPLE_EVENT);","lastModifiedDate":"2021-10-03"},{"lineNumber":93,"author":{"gitId":"lowkangn"},"content":"        uniqueEventList.setEvent(SAMPLE_EVENT, ANOTHER_EVENT);","lastModifiedDate":"2021-10-03"},{"lineNumber":94,"author":{"gitId":"lowkangn"},"content":"        UniqueEventList expectedUniqueEventList \u003d new UniqueEventList();","lastModifiedDate":"2021-10-03"},{"lineNumber":95,"author":{"gitId":"lowkangn"},"content":"        expectedUniqueEventList.add(ANOTHER_EVENT);","lastModifiedDate":"2021-10-03"},{"lineNumber":96,"author":{"gitId":"lowkangn"},"content":"        assertEquals(expectedUniqueEventList, uniqueEventList);","lastModifiedDate":"2021-10-03"},{"lineNumber":97,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":98,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":99,"author":{"gitId":"XXJJXJ"},"content":"    @Test","lastModifiedDate":"2021-09-18"},{"lineNumber":100,"author":{"gitId":"XXJJXJ"},"content":"    public void setEvents_uniqueEventList_replacesOwnListWithProvidedUniqueEventList() {","lastModifiedDate":"2021-09-18"},{"lineNumber":101,"author":{"gitId":"XXJJXJ"},"content":"        uniqueEventList.add(SAMPLE_EVENT);","lastModifiedDate":"2021-09-19"},{"lineNumber":102,"author":{"gitId":"XXJJXJ"},"content":"        UniqueEventList expectedUniqueEventList \u003d new UniqueEventList();","lastModifiedDate":"2021-09-18"},{"lineNumber":103,"author":{"gitId":"XXJJXJ"},"content":"        expectedUniqueEventList.add(ANOTHER_EVENT);","lastModifiedDate":"2021-09-19"},{"lineNumber":104,"author":{"gitId":"XXJJXJ"},"content":"        uniqueEventList.setEvents(expectedUniqueEventList);","lastModifiedDate":"2021-09-18"},{"lineNumber":105,"author":{"gitId":"XXJJXJ"},"content":"        assertEquals(expectedUniqueEventList, uniqueEventList);","lastModifiedDate":"2021-09-18"},{"lineNumber":106,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":107,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":108,"author":{"gitId":"XXJJXJ"},"content":"    @Test","lastModifiedDate":"2021-09-18"},{"lineNumber":109,"author":{"gitId":"XXJJXJ"},"content":"    public void setEvents_nullList_throwsNullPointerException() {","lastModifiedDate":"2021-09-18"},{"lineNumber":110,"author":{"gitId":"XXJJXJ"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueEventList.setEvents((List\u003cEvent\u003e) null));","lastModifiedDate":"2021-09-18"},{"lineNumber":111,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":112,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":113,"author":{"gitId":"XXJJXJ"},"content":"    @Test","lastModifiedDate":"2021-09-18"},{"lineNumber":114,"author":{"gitId":"XXJJXJ"},"content":"    public void setEvents_list_replacesOwnListWithProvidedList() {","lastModifiedDate":"2021-09-18"},{"lineNumber":115,"author":{"gitId":"XXJJXJ"},"content":"        uniqueEventList.add(SAMPLE_EVENT);","lastModifiedDate":"2021-09-19"},{"lineNumber":116,"author":{"gitId":"XXJJXJ"},"content":"        List\u003cEvent\u003e eventList \u003d Collections.singletonList(ANOTHER_EVENT);","lastModifiedDate":"2021-09-19"},{"lineNumber":117,"author":{"gitId":"XXJJXJ"},"content":"        uniqueEventList.setEvents(eventList);","lastModifiedDate":"2021-09-18"},{"lineNumber":118,"author":{"gitId":"XXJJXJ"},"content":"        UniqueEventList expectedUniqueEventList \u003d new UniqueEventList();","lastModifiedDate":"2021-09-18"},{"lineNumber":119,"author":{"gitId":"XXJJXJ"},"content":"        expectedUniqueEventList.add(ANOTHER_EVENT);","lastModifiedDate":"2021-09-19"},{"lineNumber":120,"author":{"gitId":"XXJJXJ"},"content":"        assertEquals(expectedUniqueEventList, uniqueEventList);","lastModifiedDate":"2021-09-18"},{"lineNumber":121,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":122,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":123,"author":{"gitId":"XXJJXJ"},"content":"    @Test","lastModifiedDate":"2021-09-18"},{"lineNumber":124,"author":{"gitId":"XXJJXJ"},"content":"    public void setEvents_listWithDuplicateEvents_throwsDuplicateEventException() {","lastModifiedDate":"2021-09-18"},{"lineNumber":125,"author":{"gitId":"XXJJXJ"},"content":"        List\u003cEvent\u003e listWithDuplicateEvents \u003d Arrays.asList(SAMPLE_EVENT, SAMPLE_EVENT);","lastModifiedDate":"2021-09-19"},{"lineNumber":126,"author":{"gitId":"XXJJXJ"},"content":"        assertThrows(DuplicateEventException.class, () -\u003e uniqueEventList.setEvents(listWithDuplicateEvents));","lastModifiedDate":"2021-09-18"},{"lineNumber":127,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":128,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":129,"author":{"gitId":"XXJJXJ"},"content":"    @Test","lastModifiedDate":"2021-09-18"},{"lineNumber":130,"author":{"gitId":"XXJJXJ"},"content":"    public void asUnmodifiableObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2021-09-18"},{"lineNumber":131,"author":{"gitId":"XXJJXJ"},"content":"        assertThrows(UnsupportedOperationException.class, ()","lastModifiedDate":"2021-09-18"},{"lineNumber":132,"author":{"gitId":"XXJJXJ"},"content":"            -\u003e uniqueEventList.asUnmodifiableObservableList().remove(0));","lastModifiedDate":"2021-09-18"},{"lineNumber":133,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":134,"author":{"gitId":"XXJJXJ"},"content":"}","lastModifiedDate":"2021-09-18"}],"authorContributionMap":{"XXJJXJ":106,"lowkangn":28}},{"path":"src/test/java/seedu/address/model/participant/BirthDateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.participant;","lastModifiedDate":"2021-09-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-09-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-09-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-09-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-09-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.time.Period;","lastModifiedDate":"2021-09-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-09-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class BirthDateTest {","lastModifiedDate":"2021-09-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-09-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public void getAgeTest() {","lastModifiedDate":"2021-09-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        LocalDate date \u003d LocalDate.of(2000, 8, 4);","lastModifiedDate":"2021-09-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        BirthDate birthDate \u003d BirthDate.of(2000, 8, 4);","lastModifiedDate":"2021-09-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        assertEquals(Period.between(date, LocalDate.now()).getYears(), birthDate.getAge());","lastModifiedDate":"2021-09-11"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-09-11"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public void notSpecifiedBirthDateTest() {","lastModifiedDate":"2021-09-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        BirthDate birthDate \u003d BirthDate.notSpecified();","lastModifiedDate":"2021-09-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        assertEquals(\"N/A\", birthDate.toString());","lastModifiedDate":"2021-09-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-09-11"},{"lineNumber":28,"author":{"gitId":"XXJJXJ"},"content":"    public void ofFactoryMethod_integerParam_stringRepresentationTest() {","lastModifiedDate":"2021-09-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        BirthDate birthDate \u003d BirthDate.of(2020, 8, 4);","lastModifiedDate":"2021-09-11"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertEquals(\"2020-08-04\", birthDate.toString());","lastModifiedDate":"2021-09-11"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-11"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":33,"author":{"gitId":"XXJJXJ"},"content":"    @Test","lastModifiedDate":"2021-09-18"},{"lineNumber":34,"author":{"gitId":"XXJJXJ"},"content":"    public void ofFactoryMethod_localDateParam_stringRepresentationTest() {","lastModifiedDate":"2021-09-19"},{"lineNumber":35,"author":{"gitId":"XXJJXJ"},"content":"        BirthDate birthDate \u003d BirthDate.of(LocalDate.parse(\"2021-09-18\"));","lastModifiedDate":"2021-09-18"},{"lineNumber":36,"author":{"gitId":"XXJJXJ"},"content":"        assertEquals(\"2021-09-18\", birthDate.toString());","lastModifiedDate":"2021-09-18"},{"lineNumber":37,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":38,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-09-11"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public void isPresentOrPastTest() {","lastModifiedDate":"2021-09-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertFalse(BirthDate.isPresentOrPast(LocalDate.MAX));","lastModifiedDate":"2021-09-12"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertFalse(BirthDate.isPresentOrPast(LocalDate.now().plusYears(20)));","lastModifiedDate":"2021-09-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertTrue(BirthDate.isPresentOrPast(LocalDate.now()));","lastModifiedDate":"2021-09-12"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        // for other use cases not strictly to participants","lastModifiedDate":"2021-09-11"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // BirthDate is strictly what can be born now and in the past and not in the future only","lastModifiedDate":"2021-09-11"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertTrue(BirthDate.isPresentOrPast(LocalDate.now().minusYears(200)));","lastModifiedDate":"2021-09-12"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertTrue(BirthDate.isPresentOrPast(LocalDate.now().minusYears(50)));","lastModifiedDate":"2021-09-12"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-11"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-09-11"}],"authorContributionMap":{"XXJJXJ":7,"-":46}},{"path":"src/test/java/seedu/address/model/participant/ParticipantTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.participant;","lastModifiedDate":"2021-09-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-09-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-09-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-09-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2021-09-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2021-09-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BOB;","lastModifiedDate":"2021-09-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-09-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2021-09-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2021-09-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-09-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2021-09-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.testutil.ParticipantBuilder;","lastModifiedDate":"2021-09-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class ParticipantTest {","lastModifiedDate":"2021-09-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-09-11"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public void isSamePersonTest() {","lastModifiedDate":"2021-09-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        Participant aliceP \u003d new ParticipantBuilder(ALICE).build();","lastModifiedDate":"2021-09-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        Participant bobP \u003d new ParticipantBuilder(BOB).build();","lastModifiedDate":"2021-09-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertTrue(aliceP.isSamePerson(ALICE));","lastModifiedDate":"2021-09-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        assertFalse(aliceP.isSamePerson(bobP));","lastModifiedDate":"2021-09-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertFalse(aliceP.isSamePerson(BOB));","lastModifiedDate":"2021-09-11"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-11"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-09-11"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void withBirthDateTest() {","lastModifiedDate":"2021-09-11"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        Participant aliceP \u003d new ParticipantBuilder(ALICE).withBirthDate(2000, 8, 4).build();","lastModifiedDate":"2021-09-11"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        Participant bobP \u003d new ParticipantBuilder(BOB).build();","lastModifiedDate":"2021-09-11"},{"lineNumber":34,"author":{"gitId":"ntwbruce"},"content":"        assertEquals(\"2000-08-04\", aliceP.getBirthDateString());","lastModifiedDate":"2021-10-03"},{"lineNumber":35,"author":{"gitId":"ntwbruce"},"content":"        assertEquals(\"N/A\", bobP.getBirthDateString());","lastModifiedDate":"2021-10-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-11"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-09-11"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public void addNoteTest() {","lastModifiedDate":"2021-09-11"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        Participant aliceP \u003d new ParticipantBuilder(ALICE).withBirthDate(2000, 8, 4).build();","lastModifiedDate":"2021-09-11"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertTrue(aliceP.getNotes().isEmpty());","lastModifiedDate":"2021-09-11"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        aliceP.addNote(new Note(\"Alice has allergy to pollen\", Note.Importance.HIGH));","lastModifiedDate":"2021-09-11"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        aliceP.addNote(new Note(\"Alice is vegetarian\", Note.Importance.VERY_HIGH));","lastModifiedDate":"2021-09-11"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertFalse(aliceP.getNotes().isEmpty());","lastModifiedDate":"2021-09-11"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        ArrayList\u003cString\u003e expectedNotes \u003d new ArrayList\u003c\u003e(List.of(\"Importance[HIGH] Alice has allergy to pollen\",","lastModifiedDate":"2021-09-11"},{"lineNumber":46,"author":{"gitId":"-"},"content":"                \"Importance[VERY_HIGH] Alice is vegetarian\"));","lastModifiedDate":"2021-09-11"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertTrue(aliceP.getNotes().stream().map(Object::toString).allMatch(expectedNotes::contains));","lastModifiedDate":"2021-09-11"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-11"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-09-11"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void removeNoteTest() {","lastModifiedDate":"2021-09-11"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        Participant aliceP \u003d new ParticipantBuilder(ALICE).withBirthDate(2000, 8, 4).build();","lastModifiedDate":"2021-09-11"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertTrue(aliceP.getNotes().isEmpty());","lastModifiedDate":"2021-09-11"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        aliceP.addNote(new Note(\"Alice has allergy to pollen\", Note.Importance.HIGH));","lastModifiedDate":"2021-09-11"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        aliceP.addNote(new Note(\"Alice is vegetarian\", Note.Importance.VERY_HIGH));","lastModifiedDate":"2021-09-11"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        aliceP.removeNote(new Note(\"Alice has allergy to pollen\", Note.Importance.HIGH));","lastModifiedDate":"2021-09-11"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertEquals(\"[Importance[VERY_HIGH] Alice is vegetarian]\",","lastModifiedDate":"2021-09-11"},{"lineNumber":58,"author":{"gitId":"-"},"content":"                aliceP.getNotes().toString());","lastModifiedDate":"2021-09-11"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-11"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-09-11"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public void asObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2021-09-11"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        Participant aliceP \u003d new ParticipantBuilder(ALICE).withBirthDate(2000, 8, 4).build();","lastModifiedDate":"2021-09-11"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e aliceP.getTags().remove(0));","lastModifiedDate":"2021-09-11"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e aliceP.getNotes().remove(0));","lastModifiedDate":"2021-09-11"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-11"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-09-11"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2021-09-11"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2021-09-11"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        Participant aliceP \u003d new ParticipantBuilder(ALICE).withBirthDate(2000, 8, 4).build();","lastModifiedDate":"2021-09-11"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        Participant alicePCopy \u003d new ParticipantBuilder(ALICE).withBirthDate(2000, 8, 4).build();","lastModifiedDate":"2021-09-11"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        Participant bobP \u003d new ParticipantBuilder(BOB).build();","lastModifiedDate":"2021-09-11"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertTrue(aliceP.equals(alicePCopy));","lastModifiedDate":"2021-09-11"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-09-11"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertTrue(aliceP.equals(aliceP));","lastModifiedDate":"2021-09-11"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-09-11"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertFalse(aliceP.equals(null));","lastModifiedDate":"2021-09-11"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        // different type -\u003e returns false","lastModifiedDate":"2021-09-11"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        assertFalse(aliceP.equals(5));","lastModifiedDate":"2021-09-11"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2021-09-11"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertFalse(aliceP.equals(bobP));","lastModifiedDate":"2021-09-11"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        // different note -\u003e returns false","lastModifiedDate":"2021-09-11"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        Person editedAlice \u003d new ParticipantBuilder(aliceP).withNotes(Set.of(new Note(\"She is vegan\",","lastModifiedDate":"2021-09-11"},{"lineNumber":93,"author":{"gitId":"-"},"content":"                Note.Importance.VERY_HIGH))).build();","lastModifiedDate":"2021-09-11"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        assertFalse(aliceP.equals(editedAlice));","lastModifiedDate":"2021-09-11"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-11"},{"lineNumber":97,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-09-11"}],"authorContributionMap":{"ntwbruce":2,"-":95}},{"path":"src/test/java/seedu/address/model/person/NameContainsKeywordsPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2017-06-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":12,"author":{"gitId":"kanjitp"},"content":"import seedu.address.model.participant.NameContainsKeywordsPredicate;","lastModifiedDate":"2021-09-26"},{"lineNumber":13,"author":{"gitId":"kanjitp"},"content":"import seedu.address.testutil.ParticipantBuilder;","lastModifiedDate":"2021-09-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class NameContainsKeywordsPredicateTest {","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        List\u003cString\u003e firstPredicateKeywordList \u003d Collections.singletonList(\"first\");","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        List\u003cString\u003e secondPredicateKeywordList \u003d Arrays.asList(\"first\", \"second\");","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate firstPredicate \u003d new NameContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate secondPredicate \u003d new NameContainsKeywordsPredicate(secondPredicateKeywordList);","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate firstPredicateCopy \u003d new NameContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertTrue(firstPredicate.equals(firstPredicateCopy));","lastModifiedDate":"2017-06-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(1));","lastModifiedDate":"2017-06-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(null));","lastModifiedDate":"2017-06-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));","lastModifiedDate":"2017-06-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void test_nameContainsKeywords_returnsTrue() {","lastModifiedDate":"2017-08-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        // One keyword","lastModifiedDate":"2017-06-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d new NameContainsKeywordsPredicate(Collections.singletonList(\"Alice\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":46,"author":{"gitId":"kanjitp"},"content":"        assertTrue(predicate.test(new ParticipantBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2021-09-26"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // Multiple keywords","lastModifiedDate":"2017-06-12"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Alice\", \"Bob\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":50,"author":{"gitId":"kanjitp"},"content":"        assertTrue(predicate.test(new ParticipantBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2021-09-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        // Only one matching keyword","lastModifiedDate":"2017-06-12"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Bob\", \"Carol\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":54,"author":{"gitId":"kanjitp"},"content":"        assertTrue(predicate.test(new ParticipantBuilder().withName(\"Alice Carol\").build()));","lastModifiedDate":"2021-09-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        // Mixed-case keywords","lastModifiedDate":"2017-06-12"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"aLIce\", \"bOB\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":58,"author":{"gitId":"kanjitp"},"content":"        assertTrue(predicate.test(new ParticipantBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2021-09-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public void test_nameDoesNotContainKeywords_returnsFalse() {","lastModifiedDate":"2017-08-15"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        // Zero keywords","lastModifiedDate":"2017-06-12"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d new NameContainsKeywordsPredicate(Collections.emptyList());","lastModifiedDate":"2017-06-12"},{"lineNumber":65,"author":{"gitId":"kanjitp"},"content":"        assertFalse(predicate.test(new ParticipantBuilder().withName(\"Alice\").build()));","lastModifiedDate":"2021-09-26"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // Non-matching keyword","lastModifiedDate":"2017-06-12"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Carol\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":69,"author":{"gitId":"kanjitp"},"content":"        assertFalse(predicate.test(new ParticipantBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2021-09-26"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // Keywords match phone, email and address, but does not match name","lastModifiedDate":"2017-06-12"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"12345\", \"alice@email.com\", \"Main\", \"Street\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":73,"author":{"gitId":"kanjitp"},"content":"        assertFalse(predicate.test(new ParticipantBuilder().withName(\"Alice\").withPhone(\"12345\")","lastModifiedDate":"2021-09-26"},{"lineNumber":74,"author":{"gitId":"-"},"content":"                .withEmail(\"alice@email.com\").withAddress(\"Main Street\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":76,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"kanjitp":9,"-":67}},{"path":"src/test/java/seedu/address/storage/JsonAdaptedEventTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"XXJJXJ"},"content":"package seedu.address.storage;","lastModifiedDate":"2021-09-18"},{"lineNumber":2,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":3,"author":{"gitId":"XXJJXJ"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-09-18"},{"lineNumber":4,"author":{"gitId":"XXJJXJ"},"content":"import static seedu.address.storage.JsonAdaptedEvent.MISSING_FIELD_MESSAGE_FORMAT;","lastModifiedDate":"2021-09-18"},{"lineNumber":5,"author":{"gitId":"XXJJXJ"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2021-09-18"},{"lineNumber":6,"author":{"gitId":"XXJJXJ"},"content":"import static seedu.address.testutil.TypicalEvents.SAMPLE_EVENT;","lastModifiedDate":"2021-09-19"},{"lineNumber":7,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":8,"author":{"gitId":"XXJJXJ"},"content":"import java.util.List;","lastModifiedDate":"2021-09-18"},{"lineNumber":9,"author":{"gitId":"XXJJXJ"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2021-09-18"},{"lineNumber":10,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":11,"author":{"gitId":"XXJJXJ"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-09-18"},{"lineNumber":12,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":13,"author":{"gitId":"XXJJXJ"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2021-09-18"},{"lineNumber":14,"author":{"gitId":"XXJJXJ"},"content":"import seedu.address.model.event.EventDate;","lastModifiedDate":"2021-09-18"},{"lineNumber":15,"author":{"gitId":"XXJJXJ"},"content":"import seedu.address.model.event.EventName;","lastModifiedDate":"2021-09-18"},{"lineNumber":16,"author":{"gitId":"XXJJXJ"},"content":"import seedu.address.model.event.EventTime;","lastModifiedDate":"2021-09-18"},{"lineNumber":17,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":18,"author":{"gitId":"XXJJXJ"},"content":"public class JsonAdaptedEventTest {","lastModifiedDate":"2021-09-18"},{"lineNumber":19,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":20,"author":{"gitId":"XXJJXJ"},"content":"    private static final String INVALID_NAME \u003d \"R@ce for Hum@nity\";","lastModifiedDate":"2021-09-18"},{"lineNumber":21,"author":{"gitId":"XXJJXJ"},"content":"    private static final String INVALID_DATE \u003d \"201-13-1\";","lastModifiedDate":"2021-09-20"},{"lineNumber":22,"author":{"gitId":"XXJJXJ"},"content":"    private static final String INVALID_TIME \u003d \"999\";","lastModifiedDate":"2021-09-18"},{"lineNumber":23,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":24,"author":{"gitId":"XXJJXJ"},"content":"    private static final String VALID_NAME \u003d \"Race for Humanity\";","lastModifiedDate":"2021-09-18"},{"lineNumber":25,"author":{"gitId":"XXJJXJ"},"content":"    private static final String VALID_IS_DONE \u003d \"Completed\";","lastModifiedDate":"2021-09-18"},{"lineNumber":26,"author":{"gitId":"XXJJXJ"},"content":"    private static final String VALID_DATE \u003d \"2021-09-18\";","lastModifiedDate":"2021-09-18"},{"lineNumber":27,"author":{"gitId":"XXJJXJ"},"content":"    private static final String VALID_TIME \u003d \"2359\";","lastModifiedDate":"2021-09-18"},{"lineNumber":28,"author":{"gitId":"XXJJXJ"},"content":"    // TODO: To be updated once addParticipants are implemented","lastModifiedDate":"2021-09-18"},{"lineNumber":29,"author":{"gitId":"XXJJXJ"},"content":"    private static final List\u003cJsonAdaptedParticipant\u003e VALID_PARTICIPANTS \u003d SAMPLE_EVENT.getParticipants().stream()","lastModifiedDate":"2021-09-19"},{"lineNumber":30,"author":{"gitId":"XXJJXJ"},"content":"            .map(JsonAdaptedParticipant::new)","lastModifiedDate":"2021-09-18"},{"lineNumber":31,"author":{"gitId":"XXJJXJ"},"content":"            .collect(Collectors.toList());","lastModifiedDate":"2021-09-18"},{"lineNumber":32,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":33,"author":{"gitId":"XXJJXJ"},"content":"    @Test","lastModifiedDate":"2021-09-18"},{"lineNumber":34,"author":{"gitId":"XXJJXJ"},"content":"    public void toModelType_validEventDetails_returnsEvent() throws Exception {","lastModifiedDate":"2021-09-18"},{"lineNumber":35,"author":{"gitId":"XXJJXJ"},"content":"        JsonAdaptedEvent event \u003d new JsonAdaptedEvent(SAMPLE_EVENT);","lastModifiedDate":"2021-09-19"},{"lineNumber":36,"author":{"gitId":"XXJJXJ"},"content":"        assertEquals(SAMPLE_EVENT, event.toModelType());","lastModifiedDate":"2021-09-19"},{"lineNumber":37,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":38,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":39,"author":{"gitId":"XXJJXJ"},"content":"    @Test","lastModifiedDate":"2021-09-18"},{"lineNumber":40,"author":{"gitId":"XXJJXJ"},"content":"    public void toModelType_invalidName_throwsIllegalValueException() {","lastModifiedDate":"2021-09-18"},{"lineNumber":41,"author":{"gitId":"XXJJXJ"},"content":"        JsonAdaptedEvent event \u003d","lastModifiedDate":"2021-09-18"},{"lineNumber":42,"author":{"gitId":"XXJJXJ"},"content":"                new JsonAdaptedEvent(INVALID_NAME, VALID_IS_DONE, VALID_DATE, VALID_TIME, VALID_PARTICIPANTS);","lastModifiedDate":"2021-09-18"},{"lineNumber":43,"author":{"gitId":"XXJJXJ"},"content":"        String expectedMessage \u003d EventName.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2021-09-18"},{"lineNumber":44,"author":{"gitId":"XXJJXJ"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, event::toModelType);","lastModifiedDate":"2021-09-18"},{"lineNumber":45,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":46,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":47,"author":{"gitId":"XXJJXJ"},"content":"    @Test","lastModifiedDate":"2021-09-18"},{"lineNumber":48,"author":{"gitId":"XXJJXJ"},"content":"    public void toModelType_nullName_throwsIllegalValueException() {","lastModifiedDate":"2021-09-18"},{"lineNumber":49,"author":{"gitId":"XXJJXJ"},"content":"        JsonAdaptedEvent event \u003d","lastModifiedDate":"2021-09-18"},{"lineNumber":50,"author":{"gitId":"XXJJXJ"},"content":"                new JsonAdaptedEvent(null, VALID_IS_DONE, VALID_DATE, VALID_TIME, VALID_PARTICIPANTS);","lastModifiedDate":"2021-09-18"},{"lineNumber":51,"author":{"gitId":"XXJJXJ"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, EventName.class.getSimpleName());","lastModifiedDate":"2021-09-18"},{"lineNumber":52,"author":{"gitId":"XXJJXJ"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, event::toModelType);","lastModifiedDate":"2021-09-18"},{"lineNumber":53,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":54,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":55,"author":{"gitId":"XXJJXJ"},"content":"    @Test","lastModifiedDate":"2021-09-18"},{"lineNumber":56,"author":{"gitId":"XXJJXJ"},"content":"    public void toModelType_invalidDate_throwsIllegalValueException() {","lastModifiedDate":"2021-09-18"},{"lineNumber":57,"author":{"gitId":"XXJJXJ"},"content":"        JsonAdaptedEvent event \u003d","lastModifiedDate":"2021-09-18"},{"lineNumber":58,"author":{"gitId":"XXJJXJ"},"content":"                new JsonAdaptedEvent(VALID_NAME, VALID_IS_DONE, INVALID_DATE, VALID_TIME, VALID_PARTICIPANTS);","lastModifiedDate":"2021-09-18"},{"lineNumber":59,"author":{"gitId":"XXJJXJ"},"content":"        String expectedMessage \u003d EventDate.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2021-09-18"},{"lineNumber":60,"author":{"gitId":"XXJJXJ"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, event::toModelType);","lastModifiedDate":"2021-09-18"},{"lineNumber":61,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":62,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":63,"author":{"gitId":"XXJJXJ"},"content":"    @Test","lastModifiedDate":"2021-09-18"},{"lineNumber":64,"author":{"gitId":"XXJJXJ"},"content":"    public void toModelType_nullDate_throwsIllegalValueException() {","lastModifiedDate":"2021-09-18"},{"lineNumber":65,"author":{"gitId":"XXJJXJ"},"content":"        JsonAdaptedEvent event \u003d","lastModifiedDate":"2021-09-18"},{"lineNumber":66,"author":{"gitId":"XXJJXJ"},"content":"                new JsonAdaptedEvent(VALID_NAME, VALID_IS_DONE, null, VALID_TIME, VALID_PARTICIPANTS);","lastModifiedDate":"2021-09-18"},{"lineNumber":67,"author":{"gitId":"XXJJXJ"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, EventDate.class.getSimpleName());","lastModifiedDate":"2021-09-18"},{"lineNumber":68,"author":{"gitId":"XXJJXJ"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, event::toModelType);","lastModifiedDate":"2021-09-18"},{"lineNumber":69,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":70,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":71,"author":{"gitId":"XXJJXJ"},"content":"    @Test","lastModifiedDate":"2021-09-18"},{"lineNumber":72,"author":{"gitId":"XXJJXJ"},"content":"    public void toModelType_invalidTime_throwsIllegalValueException() {","lastModifiedDate":"2021-09-18"},{"lineNumber":73,"author":{"gitId":"XXJJXJ"},"content":"        JsonAdaptedEvent event \u003d","lastModifiedDate":"2021-09-18"},{"lineNumber":74,"author":{"gitId":"XXJJXJ"},"content":"                new JsonAdaptedEvent(VALID_NAME, VALID_IS_DONE, VALID_DATE, INVALID_TIME, VALID_PARTICIPANTS);","lastModifiedDate":"2021-09-18"},{"lineNumber":75,"author":{"gitId":"XXJJXJ"},"content":"        String expectedMessage \u003d EventTime.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2021-09-18"},{"lineNumber":76,"author":{"gitId":"XXJJXJ"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, event::toModelType);","lastModifiedDate":"2021-09-18"},{"lineNumber":77,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":78,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":79,"author":{"gitId":"XXJJXJ"},"content":"    @Test","lastModifiedDate":"2021-09-18"},{"lineNumber":80,"author":{"gitId":"XXJJXJ"},"content":"    public void toModelType_nullTime_throwsIllegalValueException() {","lastModifiedDate":"2021-09-18"},{"lineNumber":81,"author":{"gitId":"XXJJXJ"},"content":"        JsonAdaptedEvent event \u003d","lastModifiedDate":"2021-09-18"},{"lineNumber":82,"author":{"gitId":"XXJJXJ"},"content":"                new JsonAdaptedEvent(VALID_NAME, VALID_IS_DONE, VALID_DATE, null, VALID_PARTICIPANTS);","lastModifiedDate":"2021-09-18"},{"lineNumber":83,"author":{"gitId":"XXJJXJ"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, EventTime.class.getSimpleName());","lastModifiedDate":"2021-09-18"},{"lineNumber":84,"author":{"gitId":"XXJJXJ"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, event::toModelType);","lastModifiedDate":"2021-09-18"},{"lineNumber":85,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":86,"author":{"gitId":"XXJJXJ"},"content":"}","lastModifiedDate":"2021-09-18"}],"authorContributionMap":{"XXJJXJ":86}},{"path":"src/test/java/seedu/address/storage/JsonAddressBookStorageTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":6,"author":{"gitId":"kanjitp"},"content":"import static seedu.address.testutil.TypicalParticipants.ALEX;","lastModifiedDate":"2021-09-26"},{"lineNumber":7,"author":{"gitId":"kanjitp"},"content":"import static seedu.address.testutil.TypicalParticipants.BERNICE;","lastModifiedDate":"2021-09-26"},{"lineNumber":8,"author":{"gitId":"kanjitp"},"content":"import static seedu.address.testutil.TypicalParticipants.IRFAN;","lastModifiedDate":"2021-09-26"},{"lineNumber":9,"author":{"gitId":"kanjitp"},"content":"import static seedu.address.testutil.TypicalParticipants.getTypicalAddressBook;","lastModifiedDate":"2021-09-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class JsonAddressBookStorageTest {","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonAddressBookStorageTest\");","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public void readAddressBook_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e readAddressBook(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private java.util.Optional\u003cReadOnlyAddressBook\u003e readAddressBook(String filePath) throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        return new JsonAddressBookStorage(Paths.get(filePath)).readAddressBook(addToTestDataPathIfNotNull(filePath));","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private Path addToTestDataPathIfNotNull(String prefsFileInTestDataFolder) {","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return prefsFileInTestDataFolder !\u003d null","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                ? TEST_DATA_FOLDER.resolve(prefsFileInTestDataFolder)","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                : null;","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public void read_missingFile_emptyResult() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertFalse(readAddressBook(\"NonExistentFile.json\").isPresent());","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public void read_notJsonFormat_exceptionThrown() {","lastModifiedDate":"2019-03-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertThrows(DataConversionException.class, () -\u003e readAddressBook(\"notJsonFormatAddressBook.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void readAddressBook_invalidPersonAddressBook_throwDataConversionException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":55,"author":{"gitId":"kanjitp"},"content":"        assertThrows(DataConversionException.class, () -\u003e readAddressBook(\"invalidParticipantAddressBook.json\"));","lastModifiedDate":"2021-09-28"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public void readAddressBook_invalidAndValidPersonAddressBook_throwDataConversionException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":60,"author":{"gitId":"kanjitp"},"content":"        assertThrows(DataConversionException.class, () -\u003e","lastModifiedDate":"2021-09-28"},{"lineNumber":61,"author":{"gitId":"kanjitp"},"content":"                readAddressBook(\"invalidAndValidParticipantAddressBook.json\"));","lastModifiedDate":"2021-09-28"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void readAndSaveAddressBook_allInOrder_success() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        Path filePath \u003d testFolder.resolve(\"TempAddressBook.json\");","lastModifiedDate":"2019-04-25"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        AddressBook original \u003d getTypicalAddressBook();","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage jsonAddressBookStorage \u003d new JsonAddressBookStorage(filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        // Save in new file and read back","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        jsonAddressBookStorage.saveAddressBook(original, filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        ReadOnlyAddressBook readBack \u003d jsonAddressBookStorage.readAddressBook(filePath).get();","lastModifiedDate":"2018-08-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertEquals(original, new AddressBook(readBack));","lastModifiedDate":"2018-08-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        // Modify data, overwrite exiting file, and read back","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"kanjitp"},"content":"        original.removeParticipant(BERNICE);","lastModifiedDate":"2021-09-26"},{"lineNumber":77,"author":{"gitId":"kanjitp"},"content":"        original.removeParticipant(ALEX);","lastModifiedDate":"2021-09-26"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        jsonAddressBookStorage.saveAddressBook(original, filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        readBack \u003d jsonAddressBookStorage.readAddressBook(filePath).get();","lastModifiedDate":"2018-08-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertEquals(original, new AddressBook(readBack));","lastModifiedDate":"2018-08-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        // Save and read without specifying file path","lastModifiedDate":"2018-08-13"},{"lineNumber":83,"author":{"gitId":"kanjitp"},"content":"        original.removeParticipant(IRFAN);","lastModifiedDate":"2021-09-26"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        jsonAddressBookStorage.saveAddressBook(original); // file path not specified","lastModifiedDate":"2018-08-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        readBack \u003d jsonAddressBookStorage.readAddressBook().get(); // file path not specified","lastModifiedDate":"2018-08-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        assertEquals(original, new AddressBook(readBack));","lastModifiedDate":"2018-08-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    public void saveAddressBook_nullAddressBook_throwsNullPointerException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveAddressBook(null, \"SomeFile.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     * Saves {@code addressBook} at the specified {@code filePath}.","lastModifiedDate":"2018-08-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    private void saveAddressBook(ReadOnlyAddressBook addressBook, String filePath) {","lastModifiedDate":"2018-08-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-08-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"            new JsonAddressBookStorage(Paths.get(filePath))","lastModifiedDate":"2018-08-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"                    .saveAddressBook(addressBook, addToTestDataPathIfNotNull(filePath));","lastModifiedDate":"2018-08-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2018-08-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"There should not be an error writing to the file.\", ioe);","lastModifiedDate":"2018-08-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    public void saveAddressBook_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveAddressBook(new AddressBook(), null));","lastModifiedDate":"2019-03-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":111,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"kanjitp":10,"-":101}},{"path":"src/test/java/seedu/address/storage/JsonSerializableAddressBookTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.JsonUtil;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"XXJJXJ"},"content":"import seedu.address.testutil.TypicalEvents;","lastModifiedDate":"2021-09-18"},{"lineNumber":15,"author":{"gitId":"kanjitp"},"content":"import seedu.address.testutil.TypicalParticipants;","lastModifiedDate":"2021-09-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class JsonSerializableAddressBookTest {","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonSerializableAddressBookTest\");","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"kanjitp"},"content":"    private static final Path TYPICAL_PERSONS_FILE \u003d TEST_DATA_FOLDER.resolve(\"typicalParticipantsAddressBook.json\");","lastModifiedDate":"2021-09-28"},{"lineNumber":21,"author":{"gitId":"kanjitp"},"content":"    private static final Path INVALID_PERSON_FILE \u003d TEST_DATA_FOLDER.resolve(\"invalidParticipantAddressBook.json\");","lastModifiedDate":"2021-09-28"},{"lineNumber":22,"author":{"gitId":"kanjitp"},"content":"    private static final Path DUPLICATE_PERSON_FILE \u003d TEST_DATA_FOLDER.resolve(\"duplicateParticipantAddressBook.json\");","lastModifiedDate":"2021-09-28"},{"lineNumber":23,"author":{"gitId":"XXJJXJ"},"content":"    private static final Path TYPICAL_EVENTS_FILE \u003d TEST_DATA_FOLDER.resolve(\"typicalEventsAddressBook.json\");","lastModifiedDate":"2021-09-18"},{"lineNumber":24,"author":{"gitId":"XXJJXJ"},"content":"    private static final Path INVALID_EVENT_FILE \u003d TEST_DATA_FOLDER.resolve(\"invalidEventAddressBook.json\");","lastModifiedDate":"2021-09-18"},{"lineNumber":25,"author":{"gitId":"XXJJXJ"},"content":"    private static final Path DUPLICATE_EVENT_FILE \u003d TEST_DATA_FOLDER.resolve(\"duplicateEventAddressBook.json\");","lastModifiedDate":"2021-09-18"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public void toModelType_typicalPersonsFile_success() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        JsonSerializableAddressBook dataFromFile \u003d JsonUtil.readJsonFile(TYPICAL_PERSONS_FILE,","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"                JsonSerializableAddressBook.class).get();","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        AddressBook addressBookFromFile \u003d dataFromFile.toModelType();","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"kanjitp"},"content":"        AddressBook typicalPersonsAddressBook \u003d TypicalParticipants.getTypicalAddressBook();","lastModifiedDate":"2021-09-26"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertEquals(addressBookFromFile, typicalPersonsAddressBook);","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void toModelType_invalidPersonFile_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        JsonSerializableAddressBook dataFromFile \u003d JsonUtil.readJsonFile(INVALID_PERSON_FILE,","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                JsonSerializableAddressBook.class).get();","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, dataFromFile::toModelType);","lastModifiedDate":"2019-03-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public void toModelType_duplicatePersons_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        JsonSerializableAddressBook dataFromFile \u003d JsonUtil.readJsonFile(DUPLICATE_PERSON_FILE,","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"                JsonSerializableAddressBook.class).get();","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"kanjitp"},"content":"        assertThrows(IllegalValueException.class, JsonSerializableAddressBook.MESSAGE_DUPLICATE_PARTICIPANT,","lastModifiedDate":"2021-09-28"},{"lineNumber":48,"author":{"gitId":"-"},"content":"                dataFromFile::toModelType);","lastModifiedDate":"2019-03-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"XXJJXJ"},"content":"    @Test","lastModifiedDate":"2021-09-18"},{"lineNumber":52,"author":{"gitId":"XXJJXJ"},"content":"    public void toModelType_typicalEventFile_success() throws Exception {","lastModifiedDate":"2021-09-18"},{"lineNumber":53,"author":{"gitId":"XXJJXJ"},"content":"        JsonSerializableAddressBook dataFromFile \u003d JsonUtil.readJsonFile(TYPICAL_EVENTS_FILE,","lastModifiedDate":"2021-09-18"},{"lineNumber":54,"author":{"gitId":"XXJJXJ"},"content":"                JsonSerializableAddressBook.class).get();","lastModifiedDate":"2021-09-18"},{"lineNumber":55,"author":{"gitId":"XXJJXJ"},"content":"        AddressBook addressBookFromFile \u003d dataFromFile.toModelType();","lastModifiedDate":"2021-09-18"},{"lineNumber":56,"author":{"gitId":"XXJJXJ"},"content":"        AddressBook typicalPersonsAddressBook \u003d TypicalEvents.getTypicalAddressBook();","lastModifiedDate":"2021-09-18"},{"lineNumber":57,"author":{"gitId":"XXJJXJ"},"content":"        assertEquals(addressBookFromFile, typicalPersonsAddressBook);","lastModifiedDate":"2021-09-18"},{"lineNumber":58,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":59,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":60,"author":{"gitId":"XXJJXJ"},"content":"    @Test","lastModifiedDate":"2021-09-18"},{"lineNumber":61,"author":{"gitId":"XXJJXJ"},"content":"    public void toModelType_invalidEventFile_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2021-09-18"},{"lineNumber":62,"author":{"gitId":"XXJJXJ"},"content":"        JsonSerializableAddressBook dataFromFile \u003d JsonUtil.readJsonFile(INVALID_EVENT_FILE,","lastModifiedDate":"2021-09-18"},{"lineNumber":63,"author":{"gitId":"XXJJXJ"},"content":"                JsonSerializableAddressBook.class).get();","lastModifiedDate":"2021-09-18"},{"lineNumber":64,"author":{"gitId":"XXJJXJ"},"content":"        assertThrows(IllegalValueException.class, dataFromFile::toModelType);","lastModifiedDate":"2021-09-18"},{"lineNumber":65,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":66,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":67,"author":{"gitId":"XXJJXJ"},"content":"    @Test","lastModifiedDate":"2021-09-18"},{"lineNumber":68,"author":{"gitId":"XXJJXJ"},"content":"    public void toModelType_duplicateEvents_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2021-09-18"},{"lineNumber":69,"author":{"gitId":"XXJJXJ"},"content":"        JsonSerializableAddressBook dataFromFile \u003d JsonUtil.readJsonFile(DUPLICATE_EVENT_FILE,","lastModifiedDate":"2021-09-18"},{"lineNumber":70,"author":{"gitId":"XXJJXJ"},"content":"                JsonSerializableAddressBook.class).get();","lastModifiedDate":"2021-09-18"},{"lineNumber":71,"author":{"gitId":"XXJJXJ"},"content":"        assertThrows(IllegalValueException.class, JsonSerializableAddressBook.MESSAGE_DUPLICATE_EVENT,","lastModifiedDate":"2021-09-18"},{"lineNumber":72,"author":{"gitId":"XXJJXJ"},"content":"                dataFromFile::toModelType);","lastModifiedDate":"2021-09-18"},{"lineNumber":73,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":74,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"XXJJXJ":27,"kanjitp":6,"-":41}},{"path":"src/test/java/seedu/address/storage/StorageManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"kanjitp"},"content":"import static seedu.address.testutil.TypicalParticipants.getTypicalAddressBook;","lastModifiedDate":"2021-09-26"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-09-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2016-09-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class StorageManagerTest {","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private StorageManager storageManager;","lastModifiedDate":"2017-04-01"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2016-10-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d new JsonAddressBookStorage(getTempFilePath(\"ab\"));","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(getTempFilePath(\"prefs\"));","lastModifiedDate":"2017-02-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        storageManager \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2017-02-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private Path getTempFilePath(String fileName) {","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return testFolder.resolve(fileName);","lastModifiedDate":"2019-04-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void prefsReadSave() throws Exception {","lastModifiedDate":"2016-10-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-09-28"},{"lineNumber":39,"author":{"gitId":"-"},"content":"         * Note: This is an integration test that verifies the StorageManager is properly wired to the","lastModifiedDate":"2016-09-28"},{"lineNumber":40,"author":{"gitId":"-"},"content":"         * {@link JsonUserPrefsStorage} class.","lastModifiedDate":"2016-10-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"         * More extensive testing of UserPref saving/reading is done in {@link JsonUserPrefsStorageTest} class.","lastModifiedDate":"2016-10-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-09-28"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        UserPrefs original \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        original.setGuiSettings(new GuiSettings(300, 600, 4, 6));","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        storageManager.saveUserPrefs(original);","lastModifiedDate":"2016-09-28"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        UserPrefs retrieved \u003d storageManager.readUserPrefs().get();","lastModifiedDate":"2016-09-28"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertEquals(original, retrieved);","lastModifiedDate":"2016-09-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void addressBookReadSave() throws Exception {","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-10-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"         * Note: This is an integration test that verifies the StorageManager is properly wired to the","lastModifiedDate":"2016-10-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"         * {@link JsonAddressBookStorage} class.","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"         * More extensive testing of UserPref saving/reading is done in {@link JsonAddressBookStorageTest} class.","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-10-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        AddressBook original \u003d getTypicalAddressBook();","lastModifiedDate":"2017-07-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        storageManager.saveAddressBook(original);","lastModifiedDate":"2016-09-28"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        ReadOnlyAddressBook retrieved \u003d storageManager.readAddressBook().get();","lastModifiedDate":"2016-09-28"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertEquals(original, new AddressBook(retrieved));","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-01"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public void getAddressBookFilePath() {","lastModifiedDate":"2016-10-01"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertNotNull(storageManager.getAddressBookFilePath());","lastModifiedDate":"2016-10-01"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":68,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"kanjitp":1,"-":67}},{"path":"src/test/java/seedu/address/testutil/AddressBookBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-09-21"},{"lineNumber":4,"author":{"gitId":"kanjitp"},"content":"import seedu.address.model.participant.Participant;","lastModifiedDate":"2021-09-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * A utility class to help with building Addressbook objects.","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Example usage: \u003cbr\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" *     {@code AddressBook ab \u003d new AddressBookBuilder().withPerson(\"John\", \"Doe\").build();}","lastModifiedDate":"2018-03-29"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class AddressBookBuilder {","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private AddressBook addressBook;","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public AddressBookBuilder() {","lastModifiedDate":"2017-05-31"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        addressBook \u003d new AddressBook();","lastModifiedDate":"2017-05-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public AddressBookBuilder(AddressBook addressBook) {","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        this.addressBook \u003d addressBook;","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":24,"author":{"gitId":"kanjitp"},"content":"     * Adds a new {@code Participant} to the {@code AddressBook} that we are building.","lastModifiedDate":"2021-09-28"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":26,"author":{"gitId":"kanjitp"},"content":"    public AddressBookBuilder withParticipant(Participant participant) {","lastModifiedDate":"2021-09-26"},{"lineNumber":27,"author":{"gitId":"kanjitp"},"content":"        addressBook.addParticipant(participant);","lastModifiedDate":"2021-09-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public AddressBook build() {","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return addressBook;","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"kanjitp":4,"-":30}},{"path":"src/test/java/seedu/address/testutil/EditParticipantDescriptorBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kanjitp"},"content":"package seedu.address.testutil;","lastModifiedDate":"2021-09-26"},{"lineNumber":2,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":3,"author":{"gitId":"kanjitp"},"content":"import java.util.Set;","lastModifiedDate":"2021-09-26"},{"lineNumber":4,"author":{"gitId":"kanjitp"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2021-09-26"},{"lineNumber":5,"author":{"gitId":"kanjitp"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2021-09-26"},{"lineNumber":6,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":7,"author":{"gitId":"kanjitp"},"content":"import seedu.address.logic.commands.EditCommand.EditParticipantDescriptor;","lastModifiedDate":"2021-09-26"},{"lineNumber":8,"author":{"gitId":"kanjitp"},"content":"import seedu.address.model.participant.Participant;","lastModifiedDate":"2021-09-26"},{"lineNumber":9,"author":{"gitId":"kanjitp"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2021-09-26"},{"lineNumber":10,"author":{"gitId":"kanjitp"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2021-09-26"},{"lineNumber":11,"author":{"gitId":"kanjitp"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2021-09-26"},{"lineNumber":12,"author":{"gitId":"kanjitp"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2021-09-26"},{"lineNumber":13,"author":{"gitId":"kanjitp"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2021-09-26"},{"lineNumber":14,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":15,"author":{"gitId":"kanjitp"},"content":"public class EditParticipantDescriptorBuilder {","lastModifiedDate":"2021-09-26"},{"lineNumber":16,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":17,"author":{"gitId":"kanjitp"},"content":"    private EditParticipantDescriptor descriptor;","lastModifiedDate":"2021-09-26"},{"lineNumber":18,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":19,"author":{"gitId":"kanjitp"},"content":"    public EditParticipantDescriptorBuilder() {","lastModifiedDate":"2021-09-26"},{"lineNumber":20,"author":{"gitId":"kanjitp"},"content":"        descriptor \u003d new EditParticipantDescriptor();","lastModifiedDate":"2021-09-26"},{"lineNumber":21,"author":{"gitId":"kanjitp"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":22,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":23,"author":{"gitId":"kanjitp"},"content":"    public EditParticipantDescriptorBuilder(EditParticipantDescriptor descriptor) {","lastModifiedDate":"2021-09-26"},{"lineNumber":24,"author":{"gitId":"kanjitp"},"content":"        this.descriptor \u003d new EditParticipantDescriptor(descriptor);","lastModifiedDate":"2021-09-26"},{"lineNumber":25,"author":{"gitId":"kanjitp"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":26,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":27,"author":{"gitId":"kanjitp"},"content":"    /**","lastModifiedDate":"2021-09-26"},{"lineNumber":28,"author":{"gitId":"XXJJXJ"},"content":"     * Returns an {@code EditParticipantDescriptor} with fields containing {@code participant}\u0027s details","lastModifiedDate":"2021-09-28"},{"lineNumber":29,"author":{"gitId":"kanjitp"},"content":"     */","lastModifiedDate":"2021-09-26"},{"lineNumber":30,"author":{"gitId":"kanjitp"},"content":"    public EditParticipantDescriptorBuilder(Participant participant) {","lastModifiedDate":"2021-09-26"},{"lineNumber":31,"author":{"gitId":"kanjitp"},"content":"        descriptor \u003d new EditParticipantDescriptor();","lastModifiedDate":"2021-09-26"},{"lineNumber":32,"author":{"gitId":"kanjitp"},"content":"        descriptor.setName(participant.getName());","lastModifiedDate":"2021-09-26"},{"lineNumber":33,"author":{"gitId":"kanjitp"},"content":"        descriptor.setPhone(participant.getPhone());","lastModifiedDate":"2021-09-26"},{"lineNumber":34,"author":{"gitId":"kanjitp"},"content":"        descriptor.setEmail(participant.getEmail());","lastModifiedDate":"2021-09-26"},{"lineNumber":35,"author":{"gitId":"kanjitp"},"content":"        descriptor.setAddress(participant.getAddress());","lastModifiedDate":"2021-09-26"},{"lineNumber":36,"author":{"gitId":"kanjitp"},"content":"        descriptor.setTags(participant.getTags());","lastModifiedDate":"2021-09-26"},{"lineNumber":37,"author":{"gitId":"kanjitp"},"content":"        descriptor.setBirthDate(participant.getBirthDate());","lastModifiedDate":"2021-09-26"},{"lineNumber":38,"author":{"gitId":"kanjitp"},"content":"        descriptor.setNotes(participant.getNotes());","lastModifiedDate":"2021-09-26"},{"lineNumber":39,"author":{"gitId":"kanjitp"},"content":"        descriptor.setNextOfKins(participant.getNextOfKins());","lastModifiedDate":"2021-09-26"},{"lineNumber":40,"author":{"gitId":"kanjitp"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":41,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":42,"author":{"gitId":"kanjitp"},"content":"    /**","lastModifiedDate":"2021-09-26"},{"lineNumber":43,"author":{"gitId":"XXJJXJ"},"content":"     * Sets the {@code Name} of the {@code EditParticipantDescriptor} that we are building.","lastModifiedDate":"2021-09-28"},{"lineNumber":44,"author":{"gitId":"kanjitp"},"content":"     */","lastModifiedDate":"2021-09-26"},{"lineNumber":45,"author":{"gitId":"kanjitp"},"content":"    public EditParticipantDescriptorBuilder withName(String name) {","lastModifiedDate":"2021-09-26"},{"lineNumber":46,"author":{"gitId":"kanjitp"},"content":"        descriptor.setName(new Name(name));","lastModifiedDate":"2021-09-26"},{"lineNumber":47,"author":{"gitId":"kanjitp"},"content":"        return this;","lastModifiedDate":"2021-09-26"},{"lineNumber":48,"author":{"gitId":"kanjitp"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":49,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":50,"author":{"gitId":"kanjitp"},"content":"    /**","lastModifiedDate":"2021-09-26"},{"lineNumber":51,"author":{"gitId":"XXJJXJ"},"content":"     * Sets the {@code Phone} of the {@code EditParticipantDescriptor} that we are building.","lastModifiedDate":"2021-09-28"},{"lineNumber":52,"author":{"gitId":"kanjitp"},"content":"     */","lastModifiedDate":"2021-09-26"},{"lineNumber":53,"author":{"gitId":"kanjitp"},"content":"    public EditParticipantDescriptorBuilder withPhone(String phone) {","lastModifiedDate":"2021-09-26"},{"lineNumber":54,"author":{"gitId":"kanjitp"},"content":"        descriptor.setPhone(new Phone(phone));","lastModifiedDate":"2021-09-26"},{"lineNumber":55,"author":{"gitId":"kanjitp"},"content":"        return this;","lastModifiedDate":"2021-09-26"},{"lineNumber":56,"author":{"gitId":"kanjitp"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":57,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":58,"author":{"gitId":"kanjitp"},"content":"    /**","lastModifiedDate":"2021-09-26"},{"lineNumber":59,"author":{"gitId":"XXJJXJ"},"content":"     * Sets the {@code Email} of the {@code EditParticipantDescriptor} that we are building.","lastModifiedDate":"2021-09-28"},{"lineNumber":60,"author":{"gitId":"kanjitp"},"content":"     */","lastModifiedDate":"2021-09-26"},{"lineNumber":61,"author":{"gitId":"kanjitp"},"content":"    public EditParticipantDescriptorBuilder withEmail(String email) {","lastModifiedDate":"2021-09-26"},{"lineNumber":62,"author":{"gitId":"kanjitp"},"content":"        descriptor.setEmail(new Email(email));","lastModifiedDate":"2021-09-26"},{"lineNumber":63,"author":{"gitId":"kanjitp"},"content":"        return this;","lastModifiedDate":"2021-09-26"},{"lineNumber":64,"author":{"gitId":"kanjitp"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":65,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":66,"author":{"gitId":"kanjitp"},"content":"    /**","lastModifiedDate":"2021-09-26"},{"lineNumber":67,"author":{"gitId":"XXJJXJ"},"content":"     * Sets the {@code Address} of the {@code EditParticipantDescriptor} that we are building.","lastModifiedDate":"2021-09-28"},{"lineNumber":68,"author":{"gitId":"kanjitp"},"content":"     */","lastModifiedDate":"2021-09-26"},{"lineNumber":69,"author":{"gitId":"kanjitp"},"content":"    public EditParticipantDescriptorBuilder withAddress(String address) {","lastModifiedDate":"2021-09-26"},{"lineNumber":70,"author":{"gitId":"kanjitp"},"content":"        descriptor.setAddress(new Address(address));","lastModifiedDate":"2021-09-26"},{"lineNumber":71,"author":{"gitId":"kanjitp"},"content":"        return this;","lastModifiedDate":"2021-09-26"},{"lineNumber":72,"author":{"gitId":"kanjitp"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":73,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":74,"author":{"gitId":"kanjitp"},"content":"    /**","lastModifiedDate":"2021-09-26"},{"lineNumber":75,"author":{"gitId":"kanjitp"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code EditParticipantDescriptor}","lastModifiedDate":"2021-09-28"},{"lineNumber":76,"author":{"gitId":"kanjitp"},"content":"     * that we are building.","lastModifiedDate":"2021-09-26"},{"lineNumber":77,"author":{"gitId":"kanjitp"},"content":"     */","lastModifiedDate":"2021-09-26"},{"lineNumber":78,"author":{"gitId":"kanjitp"},"content":"    public EditParticipantDescriptorBuilder withTags(String... tags) {","lastModifiedDate":"2021-09-26"},{"lineNumber":79,"author":{"gitId":"kanjitp"},"content":"        Set\u003cTag\u003e tagSet \u003d Stream.of(tags).map(Tag::new).collect(Collectors.toSet());","lastModifiedDate":"2021-09-26"},{"lineNumber":80,"author":{"gitId":"kanjitp"},"content":"        descriptor.setTags(tagSet);","lastModifiedDate":"2021-09-26"},{"lineNumber":81,"author":{"gitId":"kanjitp"},"content":"        return this;","lastModifiedDate":"2021-09-26"},{"lineNumber":82,"author":{"gitId":"kanjitp"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":83,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":84,"author":{"gitId":"kanjitp"},"content":"    public EditParticipantDescriptor build() {","lastModifiedDate":"2021-09-26"},{"lineNumber":85,"author":{"gitId":"kanjitp"},"content":"        return descriptor;","lastModifiedDate":"2021-09-26"},{"lineNumber":86,"author":{"gitId":"kanjitp"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":87,"author":{"gitId":"kanjitp"},"content":"}","lastModifiedDate":"2021-09-26"}],"authorContributionMap":{"XXJJXJ":5,"kanjitp":82}},{"path":"src/test/java/seedu/address/testutil/ParticipantBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2021-09-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-09-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-09-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2021-09-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2021-09-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2021-09-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":9,"author":{"gitId":"kanjitp"},"content":"import seedu.address.model.nextofkin.NextOfKin;","lastModifiedDate":"2021-09-26"},{"lineNumber":10,"author":{"gitId":"kanjitp"},"content":"import seedu.address.model.participant.BirthDate;","lastModifiedDate":"2021-09-26"},{"lineNumber":11,"author":{"gitId":"kanjitp"},"content":"import seedu.address.model.participant.Note;","lastModifiedDate":"2021-09-26"},{"lineNumber":12,"author":{"gitId":"kanjitp"},"content":"import seedu.address.model.participant.Participant;","lastModifiedDate":"2021-09-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2021-09-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2021-09-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2021-09-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2021-09-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2021-09-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2021-09-11"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.util.SampleDataUtil;","lastModifiedDate":"2021-09-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class ParticipantBuilder {","lastModifiedDate":"2021-09-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_NAME \u003d \"Amy Bee\";","lastModifiedDate":"2021-09-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_PHONE \u003d \"85355255\";","lastModifiedDate":"2021-09-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_EMAIL \u003d \"amy@gmail.com\";","lastModifiedDate":"2021-09-11"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_ADDRESS \u003d \"123, Jurong West Ave 6, #08-111\";","lastModifiedDate":"2021-09-11"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public static final BirthDate DEFAULT_BIRTHDATE \u003d BirthDate.of(2000, 8, 4);","lastModifiedDate":"2021-09-11"},{"lineNumber":30,"author":{"gitId":"kanjitp"},"content":"    public static final NextOfKin DEFAULT_NEXT_OF_KIN \u003d new NextOfKin(new Name(\"Bebe Bee\"), new Phone(\"80232345\"),","lastModifiedDate":"2021-09-26"},{"lineNumber":31,"author":{"gitId":"kanjitp"},"content":"        new Tag(\"Spouse\"));","lastModifiedDate":"2021-09-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private Name name;","lastModifiedDate":"2021-09-11"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private Phone phone;","lastModifiedDate":"2021-09-11"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private Email email;","lastModifiedDate":"2021-09-11"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private Address address;","lastModifiedDate":"2021-09-11"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private Set\u003cTag\u003e tags;","lastModifiedDate":"2021-09-11"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private BirthDate birthDate;","lastModifiedDate":"2021-09-11"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private Set\u003cNote\u003e notes;","lastModifiedDate":"2021-09-11"},{"lineNumber":40,"author":{"gitId":"kanjitp"},"content":"    private ArrayList\u003cNextOfKin\u003e nextOfKins;","lastModifiedDate":"2021-09-26"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-09-11"},{"lineNumber":43,"author":{"gitId":"XXJJXJ"},"content":"     * Creates a {@code ParticipantBuilder} with the default details.","lastModifiedDate":"2021-09-28"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-09-11"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public ParticipantBuilder() {","lastModifiedDate":"2021-09-11"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        name \u003d new Name(DEFAULT_NAME);","lastModifiedDate":"2021-09-11"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        phone \u003d new Phone(DEFAULT_PHONE);","lastModifiedDate":"2021-09-11"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        email \u003d new Email(DEFAULT_EMAIL);","lastModifiedDate":"2021-09-11"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        address \u003d new Address(DEFAULT_ADDRESS);","lastModifiedDate":"2021-09-11"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2021-09-11"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        birthDate \u003d DEFAULT_BIRTHDATE;","lastModifiedDate":"2021-09-11"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        notes \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2021-09-11"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        nextOfKins \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-09-26"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-11"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-09-11"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * Initializes the ParticipantBuilder with the data of {@code personToCopy}.","lastModifiedDate":"2021-09-11"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-09-11"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public ParticipantBuilder(Person personToCopy) {","lastModifiedDate":"2021-09-11"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        name \u003d personToCopy.getName();","lastModifiedDate":"2021-09-11"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        phone \u003d personToCopy.getPhone();","lastModifiedDate":"2021-09-11"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        email \u003d personToCopy.getEmail();","lastModifiedDate":"2021-09-11"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        address \u003d personToCopy.getAddress();","lastModifiedDate":"2021-09-11"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        tags \u003d new HashSet\u003c\u003e(personToCopy.getTags());","lastModifiedDate":"2021-09-11"},{"lineNumber":65,"author":{"gitId":"kanjitp"},"content":"        // Participant to be empty","lastModifiedDate":"2021-09-26"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        birthDate \u003d BirthDate.notSpecified();","lastModifiedDate":"2021-09-11"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        notes \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2021-09-11"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        nextOfKins \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-09-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-11"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-09-11"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * Initializes the ParticipantBuilder with the data of {@code participantToCopy}.","lastModifiedDate":"2021-09-11"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-09-11"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public ParticipantBuilder(Participant participantToCopy) {","lastModifiedDate":"2021-09-11"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        name \u003d participantToCopy.getName();","lastModifiedDate":"2021-09-11"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        phone \u003d participantToCopy.getPhone();","lastModifiedDate":"2021-09-11"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        email \u003d participantToCopy.getEmail();","lastModifiedDate":"2021-09-11"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        address \u003d participantToCopy.getAddress();","lastModifiedDate":"2021-09-11"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        tags \u003d new HashSet\u003c\u003e(participantToCopy.getTags());","lastModifiedDate":"2021-09-11"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        birthDate \u003d participantToCopy.getBirthDate();","lastModifiedDate":"2021-09-11"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        notes \u003d new HashSet\u003c\u003e(participantToCopy.getNotes());","lastModifiedDate":"2021-09-11"},{"lineNumber":82,"author":{"gitId":"kanjitp"},"content":"        nextOfKins \u003d participantToCopy.getNextOfKins();","lastModifiedDate":"2021-09-26"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-11"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-09-11"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * Sets the {@code Name} of the {@code Participant} that we are building.","lastModifiedDate":"2021-09-11"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-09-11"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public ParticipantBuilder withName(String name) {","lastModifiedDate":"2021-09-11"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        this.name \u003d new Name(name);","lastModifiedDate":"2021-09-11"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2021-09-11"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-11"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-09-11"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code Participant} that we are building.","lastModifiedDate":"2021-09-11"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-09-11"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    public ParticipantBuilder withTags(String... tags) {","lastModifiedDate":"2021-09-11"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        this.tags \u003d SampleDataUtil.getTagSet(tags);","lastModifiedDate":"2021-09-11"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2021-09-11"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-11"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-09-11"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * Sets the {@code Address} of the {@code Participant} that we are building.","lastModifiedDate":"2021-09-11"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-09-11"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    public ParticipantBuilder withAddress(String address) {","lastModifiedDate":"2021-09-11"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        this.address \u003d new Address(address);","lastModifiedDate":"2021-09-11"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2021-09-11"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-11"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-09-11"},{"lineNumber":110,"author":{"gitId":"-"},"content":"     * Sets the {@code Phone} of the {@code Participant} that we are building.","lastModifiedDate":"2021-09-11"},{"lineNumber":111,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-09-11"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    public ParticipantBuilder withPhone(String phone) {","lastModifiedDate":"2021-09-11"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        this.phone \u003d new Phone(phone);","lastModifiedDate":"2021-09-11"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2021-09-11"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-11"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":117,"author":{"gitId":"kanjitp"},"content":"    /**","lastModifiedDate":"2021-09-26"},{"lineNumber":118,"author":{"gitId":"kanjitp"},"content":"     * Sets the {@code Email} of the {@code Participant} that we are building.","lastModifiedDate":"2021-09-26"},{"lineNumber":119,"author":{"gitId":"kanjitp"},"content":"     */","lastModifiedDate":"2021-09-26"},{"lineNumber":120,"author":{"gitId":"kanjitp"},"content":"    public ParticipantBuilder withEmail(String email) {","lastModifiedDate":"2021-09-26"},{"lineNumber":121,"author":{"gitId":"kanjitp"},"content":"        this.email \u003d new Email(email);","lastModifiedDate":"2021-09-26"},{"lineNumber":122,"author":{"gitId":"kanjitp"},"content":"        return this;","lastModifiedDate":"2021-09-26"},{"lineNumber":123,"author":{"gitId":"kanjitp"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":124,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-09-11"},{"lineNumber":126,"author":{"gitId":"-"},"content":"     * Sets the {@code birthDate} of the {@code Participant} that we are building.","lastModifiedDate":"2021-09-11"},{"lineNumber":127,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-09-11"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    public ParticipantBuilder withBirthDate(BirthDate birthDate) {","lastModifiedDate":"2021-09-11"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        this.birthDate \u003d birthDate;","lastModifiedDate":"2021-09-11"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2021-09-11"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-11"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-09-11"},{"lineNumber":134,"author":{"gitId":"-"},"content":"     * Sets the {@code birthDate} of the {@code Participant} that we are building.","lastModifiedDate":"2021-09-11"},{"lineNumber":135,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-09-11"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    public ParticipantBuilder withBirthDate(int year, int month, int dayOfMonth) {","lastModifiedDate":"2021-09-11"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        this.birthDate \u003d BirthDate.of(year, month, dayOfMonth);","lastModifiedDate":"2021-09-11"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2021-09-11"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-11"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-09-11"},{"lineNumber":142,"author":{"gitId":"-"},"content":"     * Sets the {@code notes} of the {@code Participant} that we are building.","lastModifiedDate":"2021-09-11"},{"lineNumber":143,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-09-11"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    public ParticipantBuilder withNotes(Set\u003cNote\u003e notes) {","lastModifiedDate":"2021-09-11"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        this.notes \u003d notes;","lastModifiedDate":"2021-09-11"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2021-09-11"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-11"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-09-11"},{"lineNumber":150,"author":{"gitId":"-"},"content":"     * Sets the {@code notes} of the {@code Participant} that we are building.","lastModifiedDate":"2021-09-11"},{"lineNumber":151,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-09-11"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    public ParticipantBuilder withNotes(Note... notes) {","lastModifiedDate":"2021-09-11"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        this.notes \u003d SampleDataUtil.getNoteSet(notes);","lastModifiedDate":"2021-09-11"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2021-09-11"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-11"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-09-11"},{"lineNumber":159,"author":{"gitId":"-"},"content":"     * Sets the {@code nextOfKins} of the {@code Participant} that we are building.","lastModifiedDate":"2021-09-11"},{"lineNumber":160,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-09-11"},{"lineNumber":161,"author":{"gitId":"kanjitp"},"content":"    public ParticipantBuilder withNextOfKins(NextOfKin... nextOfKins) {","lastModifiedDate":"2021-09-26"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        this.nextOfKins \u003d new ArrayList\u003c\u003e(Arrays.stream(nextOfKins).collect(Collectors.toList()));","lastModifiedDate":"2021-09-11"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2021-09-11"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-11"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    public Participant build() {","lastModifiedDate":"2021-09-11"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        return new Participant(name, phone, email, address, tags, birthDate, notes, nextOfKins);","lastModifiedDate":"2021-09-26"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-11"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":171,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-09-11"}],"authorContributionMap":{"XXJJXJ":1,"kanjitp":18,"-":152}},{"path":"src/test/java/seedu/address/testutil/ParticipantUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kanjitp"},"content":"package seedu.address.testutil;","lastModifiedDate":"2021-09-26"},{"lineNumber":2,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":3,"author":{"gitId":"kanjitp"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2021-09-26"},{"lineNumber":4,"author":{"gitId":"kanjitp"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2021-09-26"},{"lineNumber":5,"author":{"gitId":"kanjitp"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2021-09-26"},{"lineNumber":6,"author":{"gitId":"kanjitp"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2021-09-26"},{"lineNumber":7,"author":{"gitId":"kanjitp"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2021-09-26"},{"lineNumber":8,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":9,"author":{"gitId":"kanjitp"},"content":"import java.util.Set;","lastModifiedDate":"2021-09-26"},{"lineNumber":10,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":11,"author":{"gitId":"kanjitp"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2021-09-26"},{"lineNumber":12,"author":{"gitId":"kanjitp"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2021-09-26"},{"lineNumber":13,"author":{"gitId":"kanjitp"},"content":"import seedu.address.model.participant.Participant;","lastModifiedDate":"2021-09-28"},{"lineNumber":14,"author":{"gitId":"kanjitp"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2021-09-26"},{"lineNumber":15,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":16,"author":{"gitId":"kanjitp"},"content":"public class ParticipantUtil {","lastModifiedDate":"2021-09-26"},{"lineNumber":17,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":18,"author":{"gitId":"kanjitp"},"content":"    /**","lastModifiedDate":"2021-09-26"},{"lineNumber":19,"author":{"gitId":"kanjitp"},"content":"     * Returns an add command string for adding the {@code participant}.","lastModifiedDate":"2021-09-28"},{"lineNumber":20,"author":{"gitId":"kanjitp"},"content":"     */","lastModifiedDate":"2021-09-26"},{"lineNumber":21,"author":{"gitId":"kanjitp"},"content":"    public static String getAddCommand(Participant participant) {","lastModifiedDate":"2021-09-28"},{"lineNumber":22,"author":{"gitId":"kanjitp"},"content":"        return AddCommand.COMMAND_WORD + \" \" + getParticipantDetails(participant);","lastModifiedDate":"2021-09-28"},{"lineNumber":23,"author":{"gitId":"kanjitp"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":24,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":25,"author":{"gitId":"kanjitp"},"content":"    /**","lastModifiedDate":"2021-09-26"},{"lineNumber":26,"author":{"gitId":"kanjitp"},"content":"     * Returns the part of command string for the given {@code participant}\u0027s details.","lastModifiedDate":"2021-09-28"},{"lineNumber":27,"author":{"gitId":"kanjitp"},"content":"     */","lastModifiedDate":"2021-09-26"},{"lineNumber":28,"author":{"gitId":"kanjitp"},"content":"    public static String getParticipantDetails(Participant participant) {","lastModifiedDate":"2021-09-28"},{"lineNumber":29,"author":{"gitId":"kanjitp"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2021-09-26"},{"lineNumber":30,"author":{"gitId":"ntwbruce"},"content":"        sb.append(PREFIX_NAME + participant.getFullName() + \" \");","lastModifiedDate":"2021-10-03"},{"lineNumber":31,"author":{"gitId":"ntwbruce"},"content":"        sb.append(PREFIX_PHONE + participant.getPhoneValue() + \" \");","lastModifiedDate":"2021-10-03"},{"lineNumber":32,"author":{"gitId":"ntwbruce"},"content":"        sb.append(PREFIX_EMAIL + participant.getEmailValue() + \" \");","lastModifiedDate":"2021-10-03"},{"lineNumber":33,"author":{"gitId":"ntwbruce"},"content":"        sb.append(PREFIX_ADDRESS + participant.getAddressValue() + \" \");","lastModifiedDate":"2021-10-03"},{"lineNumber":34,"author":{"gitId":"kanjitp"},"content":"        participant.getTags().stream().forEach(","lastModifiedDate":"2021-09-28"},{"lineNumber":35,"author":{"gitId":"ntwbruce"},"content":"            s -\u003e sb.append(PREFIX_TAG + s.getTagName() + \" \")","lastModifiedDate":"2021-10-03"},{"lineNumber":36,"author":{"gitId":"kanjitp"},"content":"        );","lastModifiedDate":"2021-09-26"},{"lineNumber":37,"author":{"gitId":"kanjitp"},"content":"        return sb.toString();","lastModifiedDate":"2021-09-26"},{"lineNumber":38,"author":{"gitId":"kanjitp"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":39,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":40,"author":{"gitId":"kanjitp"},"content":"    /**","lastModifiedDate":"2021-09-26"},{"lineNumber":41,"author":{"gitId":"XXJJXJ"},"content":"     * Returns the part of command string for the given {@code EditParticipantDescriptor}\u0027s details.","lastModifiedDate":"2021-09-28"},{"lineNumber":42,"author":{"gitId":"kanjitp"},"content":"     */","lastModifiedDate":"2021-09-26"},{"lineNumber":43,"author":{"gitId":"kanjitp"},"content":"    public static String getEditParticipantDescriptorDetails(EditCommand.EditParticipantDescriptor descriptor) {","lastModifiedDate":"2021-09-26"},{"lineNumber":44,"author":{"gitId":"kanjitp"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2021-09-26"},{"lineNumber":45,"author":{"gitId":"ntwbruce"},"content":"        descriptor.getName().ifPresent(name -\u003e sb.append(PREFIX_NAME).append(name.toString()).append(\" \"));","lastModifiedDate":"2021-10-03"},{"lineNumber":46,"author":{"gitId":"ntwbruce"},"content":"        descriptor.getPhone().ifPresent(phone -\u003e sb.append(PREFIX_PHONE).append(phone.toString()).append(\" \"));","lastModifiedDate":"2021-10-03"},{"lineNumber":47,"author":{"gitId":"ntwbruce"},"content":"        descriptor.getEmail().ifPresent(email -\u003e sb.append(PREFIX_EMAIL).append(email.toString()).append(\" \"));","lastModifiedDate":"2021-10-03"},{"lineNumber":48,"author":{"gitId":"ntwbruce"},"content":"        descriptor.getAddress().ifPresent(address -\u003e sb.append(PREFIX_ADDRESS).append(address.toString()).append(\" \"));","lastModifiedDate":"2021-10-03"},{"lineNumber":49,"author":{"gitId":"kanjitp"},"content":"        if (descriptor.getTags().isPresent()) {","lastModifiedDate":"2021-09-26"},{"lineNumber":50,"author":{"gitId":"kanjitp"},"content":"            Set\u003cTag\u003e tags \u003d descriptor.getTags().get();","lastModifiedDate":"2021-09-26"},{"lineNumber":51,"author":{"gitId":"kanjitp"},"content":"            if (tags.isEmpty()) {","lastModifiedDate":"2021-09-26"},{"lineNumber":52,"author":{"gitId":"kanjitp"},"content":"                sb.append(PREFIX_TAG);","lastModifiedDate":"2021-09-26"},{"lineNumber":53,"author":{"gitId":"kanjitp"},"content":"            } else {","lastModifiedDate":"2021-09-26"},{"lineNumber":54,"author":{"gitId":"ntwbruce"},"content":"                tags.forEach(s -\u003e sb.append(PREFIX_TAG).append(s.getTagName()).append(\" \"));","lastModifiedDate":"2021-10-03"},{"lineNumber":55,"author":{"gitId":"kanjitp"},"content":"            }","lastModifiedDate":"2021-09-26"},{"lineNumber":56,"author":{"gitId":"kanjitp"},"content":"        }","lastModifiedDate":"2021-09-26"},{"lineNumber":57,"author":{"gitId":"kanjitp"},"content":"        return sb.toString();","lastModifiedDate":"2021-09-26"},{"lineNumber":58,"author":{"gitId":"kanjitp"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":59,"author":{"gitId":"kanjitp"},"content":"}","lastModifiedDate":"2021-09-26"}],"authorContributionMap":{"XXJJXJ":1,"kanjitp":48,"ntwbruce":10}},{"path":"src/test/java/seedu/address/testutil/PersonUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2017-04-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-05-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-05-09"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-05-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-05-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2018-03-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-03-29"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2018-03-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2018-03-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-04-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * A utility class for Person.","lastModifiedDate":"2017-04-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-04-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class PersonUtil {","lastModifiedDate":"2017-04-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-04-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Returns an add command string for adding the {@code person}.","lastModifiedDate":"2017-04-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-04-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public static String getAddCommand(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        return AddCommand.COMMAND_WORD + \" \" + getPersonDetails(person);","lastModifiedDate":"2017-03-29"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-04-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Returns the part of command string for the given {@code person}\u0027s details.","lastModifiedDate":"2017-04-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-04-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static String getPersonDetails(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2017-04-05"},{"lineNumber":33,"author":{"gitId":"ntwbruce"},"content":"        sb.append(PREFIX_NAME + person.getFullName() + \" \");","lastModifiedDate":"2021-10-03"},{"lineNumber":34,"author":{"gitId":"ntwbruce"},"content":"        sb.append(PREFIX_PHONE + person.getPhoneValue() + \" \");","lastModifiedDate":"2021-10-03"},{"lineNumber":35,"author":{"gitId":"ntwbruce"},"content":"        sb.append(PREFIX_EMAIL + person.getEmailValue() + \" \");","lastModifiedDate":"2021-10-03"},{"lineNumber":36,"author":{"gitId":"ntwbruce"},"content":"        sb.append(PREFIX_ADDRESS + person.getAddressValue() + \" \");","lastModifiedDate":"2021-10-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        person.getTags().stream().forEach(","lastModifiedDate":"2017-05-09"},{"lineNumber":38,"author":{"gitId":"ntwbruce"},"content":"            s -\u003e sb.append(PREFIX_TAG + s.getTagName() + \" \")","lastModifiedDate":"2021-10-03"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        );","lastModifiedDate":"2017-05-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2017-04-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-26"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-26"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * Returns the part of command string for the given {@code EditPersonDescriptor}\u0027s details.","lastModifiedDate":"2018-03-26"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-26"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public static String getEditPersonDescriptorDetails(EditPersonDescriptor descriptor) {","lastModifiedDate":"2018-03-26"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2018-03-26"},{"lineNumber":48,"author":{"gitId":"ntwbruce"},"content":"        descriptor.getName().ifPresent(name -\u003e sb.append(PREFIX_NAME).append(name.toString()).append(\" \"));","lastModifiedDate":"2021-10-03"},{"lineNumber":49,"author":{"gitId":"ntwbruce"},"content":"        descriptor.getPhone().ifPresent(phone -\u003e sb.append(PREFIX_PHONE).append(phone.toString()).append(\" \"));","lastModifiedDate":"2021-10-03"},{"lineNumber":50,"author":{"gitId":"ntwbruce"},"content":"        descriptor.getEmail().ifPresent(email -\u003e sb.append(PREFIX_EMAIL).append(email.toString()).append(\" \"));","lastModifiedDate":"2021-10-03"},{"lineNumber":51,"author":{"gitId":"ntwbruce"},"content":"        descriptor.getAddress().ifPresent(address -\u003e sb.append(PREFIX_ADDRESS).append(address.toString()).append(\" \"));","lastModifiedDate":"2021-10-03"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        if (descriptor.getTags().isPresent()) {","lastModifiedDate":"2018-03-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            Set\u003cTag\u003e tags \u003d descriptor.getTags().get();","lastModifiedDate":"2018-03-26"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            if (tags.isEmpty()) {","lastModifiedDate":"2018-03-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"                sb.append(PREFIX_TAG);","lastModifiedDate":"2018-03-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            } else {","lastModifiedDate":"2018-03-26"},{"lineNumber":57,"author":{"gitId":"ntwbruce"},"content":"                tags.forEach(s -\u003e sb.append(PREFIX_TAG).append(s.toString()).append(\" \"));","lastModifiedDate":"2021-10-03"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-03-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-03-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2018-03-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-04-05"}],"authorContributionMap":{"ntwbruce":10,"-":52}},{"path":"src/test/java/seedu/address/testutil/TestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Files;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-07-30"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-07-30"},{"lineNumber":10,"author":{"gitId":"kanjitp"},"content":"import seedu.address.model.participant.Participant;","lastModifiedDate":"2021-09-28"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * A utility class for test cases.","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class TestUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * Folder used for temp files created during testing. Ignored by Git.","lastModifiedDate":"2016-10-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final Path SANDBOX_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"sandbox\");","lastModifiedDate":"2018-04-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Appends {@code fileName} to the sandbox folder path and returns the resulting path.","lastModifiedDate":"2018-04-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Creates the sandbox folder if it doesn\u0027t exist.","lastModifiedDate":"2016-09-28"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static Path getFilePathInSandboxFolder(String fileName) {","lastModifiedDate":"2018-04-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-28"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            Files.createDirectories(SANDBOX_FOLDER);","lastModifiedDate":"2018-04-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-28"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            throw new RuntimeException(e);","lastModifiedDate":"2016-09-28"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-28"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return SANDBOX_FOLDER.resolve(fileName);","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-30"},{"lineNumber":36,"author":{"gitId":"XXJJXJ"},"content":"     * Returns the middle index of the participant in the {@code model}\u0027s participant list.","lastModifiedDate":"2021-09-28"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-30"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static Index getMidIndex(Model model) {","lastModifiedDate":"2017-07-30"},{"lineNumber":39,"author":{"gitId":"kanjitp"},"content":"        return Index.fromOneBased(model.getFilteredParticipantList().size() / 2);","lastModifiedDate":"2021-09-26"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-30"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-30"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-30"},{"lineNumber":43,"author":{"gitId":"XXJJXJ"},"content":"     * Returns the last index of the participant in the {@code model}\u0027s participant list.","lastModifiedDate":"2021-09-28"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-30"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static Index getLastIndex(Model model) {","lastModifiedDate":"2017-07-30"},{"lineNumber":46,"author":{"gitId":"kanjitp"},"content":"        return Index.fromOneBased(model.getFilteredParticipantList().size());","lastModifiedDate":"2021-09-26"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-30"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-30"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-30"},{"lineNumber":50,"author":{"gitId":"XXJJXJ"},"content":"     * Returns the participant in the {@code model}\u0027s participant list at {@code index}.","lastModifiedDate":"2021-09-28"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-30"},{"lineNumber":52,"author":{"gitId":"kanjitp"},"content":"    public static Participant getParticipant(Model model, Index index) {","lastModifiedDate":"2021-09-28"},{"lineNumber":53,"author":{"gitId":"kanjitp"},"content":"        return model.getFilteredParticipantList().get(index.getZeroBased());","lastModifiedDate":"2021-09-26"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-30"},{"lineNumber":55,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"XXJJXJ":3,"kanjitp":5,"-":47}},{"path":"src/test/java/seedu/address/testutil/TypicalEvents.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"XXJJXJ"},"content":"package seedu.address.testutil;","lastModifiedDate":"2021-09-18"},{"lineNumber":2,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":3,"author":{"gitId":"XXJJXJ"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-09-18"},{"lineNumber":4,"author":{"gitId":"XXJJXJ"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-09-18"},{"lineNumber":5,"author":{"gitId":"XXJJXJ"},"content":"import java.util.List;","lastModifiedDate":"2021-09-18"},{"lineNumber":6,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":7,"author":{"gitId":"XXJJXJ"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2021-09-18"},{"lineNumber":8,"author":{"gitId":"XXJJXJ"},"content":"import seedu.address.model.event.Event;","lastModifiedDate":"2021-09-18"},{"lineNumber":9,"author":{"gitId":"XXJJXJ"},"content":"import seedu.address.model.event.EventDate;","lastModifiedDate":"2021-09-18"},{"lineNumber":10,"author":{"gitId":"XXJJXJ"},"content":"import seedu.address.model.event.EventName;","lastModifiedDate":"2021-09-18"},{"lineNumber":11,"author":{"gitId":"XXJJXJ"},"content":"import seedu.address.model.event.EventTime;","lastModifiedDate":"2021-09-18"},{"lineNumber":12,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":13,"author":{"gitId":"XXJJXJ"},"content":"/**","lastModifiedDate":"2021-09-18"},{"lineNumber":14,"author":{"gitId":"XXJJXJ"},"content":" * An utility class containing a list of {@code Event} objects to be used in tests.","lastModifiedDate":"2021-09-18"},{"lineNumber":15,"author":{"gitId":"XXJJXJ"},"content":" */","lastModifiedDate":"2021-09-18"},{"lineNumber":16,"author":{"gitId":"XXJJXJ"},"content":"public class TypicalEvents {","lastModifiedDate":"2021-09-18"},{"lineNumber":17,"author":{"gitId":"XXJJXJ"},"content":"    public static final Event SAMPLE_EVENT \u003d new Event(new EventName(\"Sleep\"), new EventDate(\"2021-09-18\"),","lastModifiedDate":"2021-09-19"},{"lineNumber":18,"author":{"gitId":"XXJJXJ"},"content":"            new EventTime(\"1000\"));","lastModifiedDate":"2021-09-18"},{"lineNumber":19,"author":{"gitId":"XXJJXJ"},"content":"    public static final Event ANOTHER_EVENT \u003d new Event(new EventName(\"Sleep2\"), new EventDate(\"2021-09-18\"),","lastModifiedDate":"2021-09-19"},{"lineNumber":20,"author":{"gitId":"XXJJXJ"},"content":"            new EventTime(\"1001\"));","lastModifiedDate":"2021-09-19"},{"lineNumber":21,"author":{"gitId":"XXJJXJ"},"content":"    public static final Event SAMPLE_EVENT_COPY_DIFFERENT_TIME \u003d new Event(new EventName(\"Sleep\"),","lastModifiedDate":"2021-09-19"},{"lineNumber":22,"author":{"gitId":"XXJJXJ"},"content":"            new EventDate(\"2021-09-18\"), new EventTime(\"1001\"));","lastModifiedDate":"2021-09-19"},{"lineNumber":23,"author":{"gitId":"XXJJXJ"},"content":"    public static final Event SAMPLE_EVENT_2 \u003d new Event(new EventName(\"Random Event 1\"),","lastModifiedDate":"2021-09-23"},{"lineNumber":24,"author":{"gitId":"XXJJXJ"},"content":"            new EventDate(\"1-1-1\"), new EventTime(\"0001\"));","lastModifiedDate":"2021-09-23"},{"lineNumber":25,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":26,"author":{"gitId":"XXJJXJ"},"content":"    private TypicalEvents() {}","lastModifiedDate":"2021-09-18"},{"lineNumber":27,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":28,"author":{"gitId":"XXJJXJ"},"content":"    /**","lastModifiedDate":"2021-09-18"},{"lineNumber":29,"author":{"gitId":"XXJJXJ"},"content":"     * Returns an {@code AddressBook} with all the typical persons.","lastModifiedDate":"2021-09-18"},{"lineNumber":30,"author":{"gitId":"XXJJXJ"},"content":"     */","lastModifiedDate":"2021-09-18"},{"lineNumber":31,"author":{"gitId":"XXJJXJ"},"content":"    public static AddressBook getTypicalAddressBook() {","lastModifiedDate":"2021-09-18"},{"lineNumber":32,"author":{"gitId":"XXJJXJ"},"content":"        AddressBook ab \u003d new AddressBook();","lastModifiedDate":"2021-09-18"},{"lineNumber":33,"author":{"gitId":"XXJJXJ"},"content":"        for (Event event : getTypicalEvents()) {","lastModifiedDate":"2021-09-18"},{"lineNumber":34,"author":{"gitId":"XXJJXJ"},"content":"            ab.addEvent(event);","lastModifiedDate":"2021-09-18"},{"lineNumber":35,"author":{"gitId":"XXJJXJ"},"content":"        }","lastModifiedDate":"2021-09-18"},{"lineNumber":36,"author":{"gitId":"XXJJXJ"},"content":"        return ab;","lastModifiedDate":"2021-09-18"},{"lineNumber":37,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":38,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":39,"author":{"gitId":"XXJJXJ"},"content":"    public static List\u003cEvent\u003e getTypicalEvents() {","lastModifiedDate":"2021-09-18"},{"lineNumber":40,"author":{"gitId":"XXJJXJ"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(SAMPLE_EVENT, ANOTHER_EVENT, SAMPLE_EVENT_2));","lastModifiedDate":"2021-09-23"},{"lineNumber":41,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":42,"author":{"gitId":"XXJJXJ"},"content":"}","lastModifiedDate":"2021-09-18"}],"authorContributionMap":{"XXJJXJ":42}},{"path":"src/test/java/seedu/address/testutil/TypicalIndexes.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2017-08-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-08-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * A utility class containing a list of {@code Index} objects to be used in tests.","lastModifiedDate":"2017-08-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class TypicalIndexes {","lastModifiedDate":"2017-08-05"},{"lineNumber":9,"author":{"gitId":"kanjitp"},"content":"    public static final Index INDEX_FIRST_PARTICIPANT \u003d Index.fromOneBased(1);","lastModifiedDate":"2021-09-28"},{"lineNumber":10,"author":{"gitId":"kanjitp"},"content":"    public static final Index INDEX_SECOND_PARTICIPANT \u003d Index.fromOneBased(2);","lastModifiedDate":"2021-09-28"},{"lineNumber":11,"author":{"gitId":"kanjitp"},"content":"    public static final Index INDEX_THIRD_PARTICIPANT \u003d Index.fromOneBased(3);","lastModifiedDate":"2021-09-28"},{"lineNumber":12,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":13,"author":{"gitId":"lowkangn"},"content":"    public static final Index INDEX_FIRST_EVENT \u003d Index.fromOneBased(1);","lastModifiedDate":"2021-10-03"},{"lineNumber":14,"author":{"gitId":"lowkangn"},"content":"    public static final Index INDEX_SECOND_EVENT \u003d Index.fromOneBased(2);","lastModifiedDate":"2021-10-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-08-05"}],"authorContributionMap":{"kanjitp":3,"-":9,"lowkangn":3}},{"path":"src/test/java/seedu/address/testutil/TypicalParticipants.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kanjitp"},"content":"package seedu.address.testutil;","lastModifiedDate":"2021-09-26"},{"lineNumber":2,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":3,"author":{"gitId":"kanjitp"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-09-26"},{"lineNumber":4,"author":{"gitId":"kanjitp"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-09-26"},{"lineNumber":5,"author":{"gitId":"kanjitp"},"content":"import java.util.List;","lastModifiedDate":"2021-09-26"},{"lineNumber":6,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":7,"author":{"gitId":"kanjitp"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2021-09-26"},{"lineNumber":8,"author":{"gitId":"kanjitp"},"content":"import seedu.address.model.nextofkin.NextOfKin;","lastModifiedDate":"2021-09-26"},{"lineNumber":9,"author":{"gitId":"kanjitp"},"content":"import seedu.address.model.participant.BirthDate;","lastModifiedDate":"2021-09-26"},{"lineNumber":10,"author":{"gitId":"kanjitp"},"content":"import seedu.address.model.participant.Note;","lastModifiedDate":"2021-09-26"},{"lineNumber":11,"author":{"gitId":"kanjitp"},"content":"import seedu.address.model.participant.Participant;","lastModifiedDate":"2021-09-26"},{"lineNumber":12,"author":{"gitId":"kanjitp"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2021-09-26"},{"lineNumber":13,"author":{"gitId":"kanjitp"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2021-09-26"},{"lineNumber":14,"author":{"gitId":"kanjitp"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2021-09-26"},{"lineNumber":15,"author":{"gitId":"kanjitp"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2021-09-26"},{"lineNumber":16,"author":{"gitId":"kanjitp"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2021-09-26"},{"lineNumber":17,"author":{"gitId":"kanjitp"},"content":"import seedu.address.model.util.SampleDataUtil;","lastModifiedDate":"2021-09-26"},{"lineNumber":18,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":19,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":20,"author":{"gitId":"kanjitp"},"content":"public class TypicalParticipants {","lastModifiedDate":"2021-09-26"},{"lineNumber":21,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":22,"author":{"gitId":"kanjitp"},"content":"    public static final Participant ALEX \u003d new Participant(new Name(\"Alex Yeoh\"), new Phone(\"87438807\"), new Email(","lastModifiedDate":"2021-09-26"},{"lineNumber":23,"author":{"gitId":"kanjitp"},"content":"            \"alexyeoh@example.com\"), new Address(\"Blk 30 Geylang Street 29, #06-40\"),","lastModifiedDate":"2021-09-28"},{"lineNumber":24,"author":{"gitId":"kanjitp"},"content":"            SampleDataUtil.getTagSet(\"friends\"), BirthDate.of(2000, 8, 2),","lastModifiedDate":"2021-09-26"},{"lineNumber":25,"author":{"gitId":"kanjitp"},"content":"            SampleDataUtil.getNoteSet(new Note(\"Vegetarian\", Note.Importance.VERY_HIGH)),","lastModifiedDate":"2021-09-26"},{"lineNumber":26,"author":{"gitId":"kanjitp"},"content":"            List.of(new NextOfKin(new Name(\"Janette Yeoh\"), new Phone(\"93822312\"), new Tag(\"Spouse\"))));","lastModifiedDate":"2021-09-26"},{"lineNumber":27,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":28,"author":{"gitId":"kanjitp"},"content":"    public static final Participant BERNICE \u003d new Participant(new Name(\"Bernice Yu\"), new Phone(\"99272758\"), new Email(","lastModifiedDate":"2021-09-26"},{"lineNumber":29,"author":{"gitId":"kanjitp"},"content":"            \"berniceyu\" + \"@example.com\"), new Address(\"Blk 30 Lorong 3 Serangoon Gardens, #07-18\"),","lastModifiedDate":"2021-09-26"},{"lineNumber":30,"author":{"gitId":"kanjitp"},"content":"            SampleDataUtil.getTagSet(\"colleagues\", \"friends\"),","lastModifiedDate":"2021-09-29"},{"lineNumber":31,"author":{"gitId":"kanjitp"},"content":"            BirthDate.of(1970, 4, 2),","lastModifiedDate":"2021-09-29"},{"lineNumber":32,"author":{"gitId":"kanjitp"},"content":"            SampleDataUtil.getNoteSet(new Note(\"Allergic to Alcohol\", Note.Importance.VERY_HIGH)),","lastModifiedDate":"2021-09-29"},{"lineNumber":33,"author":{"gitId":"kanjitp"},"content":"            List.of(new NextOfKin(new Name(\"Bennett Yu\"), new Phone(\"83612412\"), new Tag(\"Parent\"))));","lastModifiedDate":"2021-09-26"},{"lineNumber":34,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":35,"author":{"gitId":"kanjitp"},"content":"    public static final Participant CHARLOTTE \u003d new Participant(new Name(\"Charlotte Oliveiro\"), new Phone(\"93210283\"),","lastModifiedDate":"2021-09-26"},{"lineNumber":36,"author":{"gitId":"kanjitp"},"content":"            new Email(\"charlotte\" + \"@example.com\"), new Address(\"Blk 11 Ang Mo Kio Street 74, #11-04\"),","lastModifiedDate":"2021-09-26"},{"lineNumber":37,"author":{"gitId":"kanjitp"},"content":"            SampleDataUtil.getTagSet(\"neighbours\"), BirthDate.of(1982, 5, 13),","lastModifiedDate":"2021-09-26"},{"lineNumber":38,"author":{"gitId":"kanjitp"},"content":"            SampleDataUtil.getNoteSet(new Note(\"Dislike pepper\", Note.Importance.MEDIUM)),","lastModifiedDate":"2021-09-26"},{"lineNumber":39,"author":{"gitId":"kanjitp"},"content":"            List.of(new NextOfKin(new Name(\"Daniel Pruvos\"), new Phone(\"83460328\"), new Tag(\"Brother\"))));","lastModifiedDate":"2021-09-26"},{"lineNumber":40,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":41,"author":{"gitId":"kanjitp"},"content":"    public static final Participant DAVID \u003d new Participant(new Name(\"David Li\"), new Phone(\"91031282\"),","lastModifiedDate":"2021-09-26"},{"lineNumber":42,"author":{"gitId":"kanjitp"},"content":"            new Email(\"lidavid@example.com\"), new Address(\"Blk 436 Serangoon Gardens Street 26, #16-43\"),","lastModifiedDate":"2021-09-28"},{"lineNumber":43,"author":{"gitId":"kanjitp"},"content":"            SampleDataUtil.getTagSet(\"family\"), BirthDate.of(1999, 2, 2),","lastModifiedDate":"2021-09-26"},{"lineNumber":44,"author":{"gitId":"kanjitp"},"content":"            SampleDataUtil.getNoteSet(new Note(\"Vegetarian\", Note.Importance.VERY_HIGH)),","lastModifiedDate":"2021-09-26"},{"lineNumber":45,"author":{"gitId":"kanjitp"},"content":"            List.of(new NextOfKin(new Name(\"Maria Li\"), new Phone(\"84459923\"), new Tag(\"Girlfriend\"))));","lastModifiedDate":"2021-09-26"},{"lineNumber":46,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":47,"author":{"gitId":"kanjitp"},"content":"    public static final Participant IRFAN \u003d new Participant(new Name(\"Irfan Ibrahim\"), new Phone(\"92492021\"),","lastModifiedDate":"2021-09-26"},{"lineNumber":48,"author":{"gitId":"kanjitp"},"content":"            new Email(\"irfan@example.com\"), new Address(\"Blk 47 Tampines Street 20, #17-35\"),","lastModifiedDate":"2021-09-28"},{"lineNumber":49,"author":{"gitId":"kanjitp"},"content":"            SampleDataUtil.getTagSet(\"classmates\"), BirthDate.of(2000, 5, 23),","lastModifiedDate":"2021-09-26"},{"lineNumber":50,"author":{"gitId":"kanjitp"},"content":"            SampleDataUtil.getNoteSet(new Note(\"Dislike ill-mannered Person\", Note.Importance.MEDIUM)),","lastModifiedDate":"2021-09-26"},{"lineNumber":51,"author":{"gitId":"kanjitp"},"content":"            List.of(new NextOfKin(new Name(\"Juliet Ibrahim\"), new Phone(\"89345342\"), new Tag(\"Grandparent\"))));","lastModifiedDate":"2021-09-26"},{"lineNumber":52,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":53,"author":{"gitId":"kanjitp"},"content":"    public static final Participant ROY \u003d new Participant(new Name(\"Roy Balakrishnan\"), new Phone(\"92624417\"),","lastModifiedDate":"2021-09-26"},{"lineNumber":54,"author":{"gitId":"kanjitp"},"content":"            new Email(\"royb@example.com\"), new Address(\"Blk 45 Aljunied Street 85, #11-31\"),","lastModifiedDate":"2021-09-28"},{"lineNumber":55,"author":{"gitId":"kanjitp"},"content":"            SampleDataUtil.getTagSet(\"colleagues\"), BirthDate.of(1999, 2, 8),","lastModifiedDate":"2021-09-26"},{"lineNumber":56,"author":{"gitId":"kanjitp"},"content":"            SampleDataUtil.getNoteSet(new Note(\"Excessive attraction to \" + \"Alcohol\",","lastModifiedDate":"2021-09-26"},{"lineNumber":57,"author":{"gitId":"kanjitp"},"content":"            Note.Importance.HIGH)),","lastModifiedDate":"2021-09-26"},{"lineNumber":58,"author":{"gitId":"kanjitp"},"content":"            List.of(new NextOfKin(new Name(\"Rouse Balakrishnan\"), new Phone(\"93822312\"), new Tag(\"Brother\"))));","lastModifiedDate":"2021-09-26"},{"lineNumber":59,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":60,"author":{"gitId":"kanjitp"},"content":"    /**","lastModifiedDate":"2021-09-26"},{"lineNumber":61,"author":{"gitId":"kanjitp"},"content":"     * Returns an {@code AddressBook} with all the typical Participants.","lastModifiedDate":"2021-09-26"},{"lineNumber":62,"author":{"gitId":"kanjitp"},"content":"     */","lastModifiedDate":"2021-09-26"},{"lineNumber":63,"author":{"gitId":"kanjitp"},"content":"    public static AddressBook getTypicalAddressBook() {","lastModifiedDate":"2021-09-26"},{"lineNumber":64,"author":{"gitId":"kanjitp"},"content":"        AddressBook ab \u003d new AddressBook();","lastModifiedDate":"2021-09-26"},{"lineNumber":65,"author":{"gitId":"kanjitp"},"content":"        for (Participant participant : getTypicalParticipants()) {","lastModifiedDate":"2021-09-26"},{"lineNumber":66,"author":{"gitId":"kanjitp"},"content":"            ab.addParticipant(participant);","lastModifiedDate":"2021-09-26"},{"lineNumber":67,"author":{"gitId":"kanjitp"},"content":"        }","lastModifiedDate":"2021-09-26"},{"lineNumber":68,"author":{"gitId":"kanjitp"},"content":"        return ab;","lastModifiedDate":"2021-09-26"},{"lineNumber":69,"author":{"gitId":"kanjitp"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":70,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":71,"author":{"gitId":"kanjitp"},"content":"    public static List\u003cParticipant\u003e getTypicalParticipants() {","lastModifiedDate":"2021-09-26"},{"lineNumber":72,"author":{"gitId":"kanjitp"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(ALEX, BERNICE, CHARLOTTE, DAVID, IRFAN, ROY));","lastModifiedDate":"2021-09-26"},{"lineNumber":73,"author":{"gitId":"kanjitp"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":74,"author":{"gitId":"kanjitp"},"content":"}","lastModifiedDate":"2021-09-26"}],"authorContributionMap":{"kanjitp":74}}]
